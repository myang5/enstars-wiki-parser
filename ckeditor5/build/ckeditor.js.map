{"version":3,"sources":["webpack://BalloonEditor/webpack/universalModuleDefinition","webpack://BalloonEditor/webpack/bootstrap","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-autosave/src/autosave.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-basic-styles/src/attributecommand.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-basic-styles/src/bold.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-basic-styles/src/bold/boldediting.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-basic-styles/src/bold/boldui.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-basic-styles/src/italic.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-basic-styles/src/italic/italicediting.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-basic-styles/src/italic/italicui.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-basic-styles/theme/icons/bold.svg","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-basic-styles/theme/icons/italic.svg","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-clipboard/src/clipboard.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-clipboard/src/clipboardobserver.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-clipboard/src/datatransfer.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-clipboard/src/utils/normalizeclipboarddata.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-clipboard/src/utils/plaintexttohtml.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-clipboard/src/utils/viewtoplaintext.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-core/src/command.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-core/src/commandcollection.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-core/src/context.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-core/src/contextplugin.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-core/src/editingkeystrokehandler.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-core/src/editor/editor.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-core/src/editor/editorui.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-core/src/editor/utils/attachtoform.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-core/src/editor/utils/dataapimixin.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-core/src/editor/utils/elementapimixin.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-core/src/editor/utils/securesourceelement.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-core/src/pendingactions.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-core/src/plugin.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-core/src/plugincollection.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-core/theme/icons/cancel.svg","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-core/theme/icons/check.svg","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-core/theme/icons/eraser.svg","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-core/theme/icons/pencil.svg","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-core/theme/icons/three-vertical-dots.svg","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-editor-balloon/src/ballooneditor.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-editor-balloon/src/ballooneditorui.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-editor-balloon/src/ballooneditoruiview.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/controller/datacontroller.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/controller/editingcontroller.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/conversion/conversion.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/conversion/conversionhelpers.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/conversion/downcastdispatcher.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/conversion/downcasthelpers.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/conversion/mapper.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/conversion/modelconsumable.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/conversion/upcastdispatcher.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/conversion/upcasthelpers.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/conversion/viewconsumable.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/dataprocessor/basichtmlwriter.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/dataprocessor/htmldataprocessor.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/batch.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/differ.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/document.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/documentfragment.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/documentselection.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/element.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/history.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/liveposition.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/liverange.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/markercollection.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/model.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/node.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/nodelist.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/operation/attributeoperation.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/operation/detachoperation.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/operation/insertoperation.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/operation/markeroperation.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/operation/mergeoperation.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/operation/moveoperation.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/operation/nooperation.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/operation/operation.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/operation/operationfactory.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/operation/renameoperation.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/operation/rootattributeoperation.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/operation/splitoperation.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/operation/transform.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/operation/utils.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/position.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/range.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/rootelement.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/schema.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/selection.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/text.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/textproxy.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/treewalker.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/utils/deletecontent.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/utils/getselectedcontent.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/utils/insertcontent.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/utils/modifyselection.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/utils/selection-post-fixer.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/model/writer.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/utils/bindtwostepcarettoattribute.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/attributeelement.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/containerelement.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/document.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/documentfragment.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/documentselection.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/domconverter.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/downcastwriter.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/editableelement.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/element.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/emptyelement.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/filler.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/matcher.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/node.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/observer/clickobserver.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/observer/compositionobserver.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/observer/domeventdata.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/observer/domeventobserver.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/observer/fakeselectionobserver.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/observer/focusobserver.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/observer/inputobserver.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/observer/keyobserver.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/observer/mutationobserver.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/observer/observer.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/observer/selectionobserver.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/placeholder.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/position.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/range.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/renderer.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/rooteditableelement.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/selection.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/stylesmap.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/text.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/textproxy.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/treewalker.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/uielement.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/upcastwriter.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/src/view/view.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/theme/placeholder.css?a628","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-enter/src/enter.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-enter/src/entercommand.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-enter/src/enterobserver.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-enter/src/shiftenter.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-enter/src/shiftentercommand.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-enter/src/utils.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-essentials/src/essentials.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-font/src/documentcolorcollection.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-font/src/fontbackgroundcolor.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-font/src/fontbackgroundcolor/fontbackgroundcolorcommand.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-font/src/fontbackgroundcolor/fontbackgroundcolorediting.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-font/src/fontbackgroundcolor/fontbackgroundcolorui.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-font/src/fontcolor.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-font/src/fontcolor/fontcolorcommand.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-font/src/fontcolor/fontcolorediting.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-font/src/fontcolor/fontcolorui.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-font/src/fontcommand.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-font/src/ui/colortableview.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-font/src/ui/colorui.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-font/src/utils.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-font/theme/fontcolor.css?1231","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-font/theme/icons/font-background.svg","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-font/theme/icons/font-color.svg","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-link/src/findlinkrange.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-link/src/link.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-link/src/linkcommand.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-link/src/linkediting.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-link/src/linkui.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-link/src/ui/linkactionsview.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-link/src/ui/linkformview.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-link/src/unlinkcommand.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-link/src/utils.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-link/src/utils/automaticdecorators.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-link/src/utils/manualdecorator.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-link/theme/icons/link.svg","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-link/theme/icons/unlink.svg","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-link/theme/link.css?c5e3","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-link/theme/linkactions.css?d2ab","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-link/theme/linkform.css?e89d","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-paragraph/src/paragraph.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-paragraph/src/paragraphcommand.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-paste-from-office/src/filters/image.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-paste-from-office/src/filters/list.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-paste-from-office/src/filters/parse.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-paste-from-office/src/filters/removeboldwrapper.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-paste-from-office/src/filters/space.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-paste-from-office/src/normalizers/googledocsnormalizer.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-paste-from-office/src/normalizers/mswordnormalizer.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-paste-from-office/src/pastefromoffice.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-typing/src/delete.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-typing/src/deletecommand.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-typing/src/deleteobserver.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-typing/src/input.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-typing/src/inputcommand.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-typing/src/typing.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-typing/src/utils/changebuffer.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-typing/src/utils/injecttypingmutationshandling.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-typing/src/utils/injectunsafekeystrokeshandling.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-typing/src/utils/utils.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/src/bindings/clickoutsidehandler.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/src/bindings/preventdefault.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/src/bindings/submithandler.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/src/button/buttonview.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/src/button/switchbuttonview.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/src/colorgrid/colorgridview.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/src/colorgrid/colortileview.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/src/colorgrid/utils.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/src/componentfactory.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/src/dropdown/button/dropdownbuttonview.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/src/dropdown/dropdownpanelview.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/src/dropdown/dropdownview.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/src/dropdown/utils.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/src/editableui/editableuiview.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/src/editableui/inline/inlineeditableuiview.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/src/editorui/bodycollection.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/src/editorui/editoruiview.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/src/focuscycler.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/src/icon/iconview.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/src/inputtext/inputtextview.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/src/label/labelview.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/src/labeledinput/labeledinputview.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/src/list/listitemview.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/src/list/listseparatorview.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/src/list/listview.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/src/panel/balloon/balloonpanelview.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/src/panel/balloon/contextualballoon.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/src/template.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/src/toolbar/balloon/balloontoolbar.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/src/toolbar/enabletoolbarkeyboardfocus.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/src/toolbar/normalizetoolbarconfig.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/src/toolbar/toolbarseparatorview.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/src/toolbar/toolbarview.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/src/tooltip/tooltipview.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/src/view.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/src/viewcollection.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/components/button/button.css?7267","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/components/button/switchbutton.css?2ea7","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/components/colorgrid/colorgrid.css?88c4","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/dropdown.css?cf0a","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/listdropdown.css?8b17","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/toolbardropdown.css?4eda","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/components/editorui/editorui.css?08a3","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/components/icon/icon.css?b33f","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/components/inputtext/inputtext.css?1a3c","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/components/label/label.css?e7ce","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/components/labeledinput/labeledinput.css?7885","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/components/list/list.css?e2f7","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/components/panel/balloonpanel.css?6591","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/components/panel/balloonrotator.css?d690","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/components/panel/fakepanel.css?c757","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/components/toolbar/toolbar.css?1472","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/components/tooltip/tooltip.css?05d5","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/globals/globals.css?7a04","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/icons/color-tile-check.svg","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/icons/dropdown-arrow.svg","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/icons/next-arrow.svg","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/icons/previous-arrow.svg","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-undo/src/basecommand.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-undo/src/redocommand.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-undo/src/undo.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-undo/src/undocommand.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-undo/src/undoediting.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-undo/src/undoui.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-undo/theme/icons/redo.svg","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-undo/theme/icons/undo.svg","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/ckeditorerror.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/collection.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/comparearrays.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/config.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/count.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/diff.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/difftochanges.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/dom/createelement.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/dom/emittermixin.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/dom/getancestors.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/dom/getborderwidths.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/dom/getcommonancestor.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/dom/getdatafromelement.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/dom/getpositionedancestor.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/dom/global.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/dom/indexof.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/dom/insertat.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/dom/isnode.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/dom/isrange.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/dom/istext.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/dom/iswindow.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/dom/position.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/dom/rect.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/dom/remove.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/dom/resizeobserver.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/dom/scroll.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/dom/setdatainelement.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/dom/tounit.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/emittermixin.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/env.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/eventinfo.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/fastdiff.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/first.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/focustracker.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/isiterable.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/keyboard.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/keystrokehandler.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/locale.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/mix.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/objecttomap.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/observablemixin.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/priorities.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/spy.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/tomap.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/translation-service.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/uid.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/unicode.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-utils/src/version.js","webpack://BalloonEditor/../node_modules/lodash-es/_DataView.js","webpack://BalloonEditor/../node_modules/lodash-es/_Hash.js","webpack://BalloonEditor/../node_modules/lodash-es/_LazyWrapper.js","webpack://BalloonEditor/../node_modules/lodash-es/_ListCache.js","webpack://BalloonEditor/../node_modules/lodash-es/_LodashWrapper.js","webpack://BalloonEditor/../node_modules/lodash-es/_Map.js","webpack://BalloonEditor/../node_modules/lodash-es/_MapCache.js","webpack://BalloonEditor/../node_modules/lodash-es/_Promise.js","webpack://BalloonEditor/../node_modules/lodash-es/_Set.js","webpack://BalloonEditor/../node_modules/lodash-es/_SetCache.js","webpack://BalloonEditor/../node_modules/lodash-es/_Stack.js","webpack://BalloonEditor/../node_modules/lodash-es/_Symbol.js","webpack://BalloonEditor/../node_modules/lodash-es/_Uint8Array.js","webpack://BalloonEditor/../node_modules/lodash-es/_WeakMap.js","webpack://BalloonEditor/../node_modules/lodash-es/_apply.js","webpack://BalloonEditor/../node_modules/lodash-es/_arrayAggregator.js","webpack://BalloonEditor/../node_modules/lodash-es/_arrayEach.js","webpack://BalloonEditor/../node_modules/lodash-es/_arrayEachRight.js","webpack://BalloonEditor/../node_modules/lodash-es/_arrayEvery.js","webpack://BalloonEditor/../node_modules/lodash-es/_arrayFilter.js","webpack://BalloonEditor/../node_modules/lodash-es/_arrayIncludes.js","webpack://BalloonEditor/../node_modules/lodash-es/_arrayIncludesWith.js","webpack://BalloonEditor/../node_modules/lodash-es/_arrayLikeKeys.js","webpack://BalloonEditor/../node_modules/lodash-es/_arrayMap.js","webpack://BalloonEditor/../node_modules/lodash-es/_arrayPush.js","webpack://BalloonEditor/../node_modules/lodash-es/_arrayReduce.js","webpack://BalloonEditor/../node_modules/lodash-es/_arrayReduceRight.js","webpack://BalloonEditor/../node_modules/lodash-es/_arraySample.js","webpack://BalloonEditor/../node_modules/lodash-es/_arraySampleSize.js","webpack://BalloonEditor/../node_modules/lodash-es/_arrayShuffle.js","webpack://BalloonEditor/../node_modules/lodash-es/_arraySome.js","webpack://BalloonEditor/../node_modules/lodash-es/_asciiSize.js","webpack://BalloonEditor/../node_modules/lodash-es/_asciiToArray.js","webpack://BalloonEditor/../node_modules/lodash-es/_asciiWords.js","webpack://BalloonEditor/../node_modules/lodash-es/_assignMergeValue.js","webpack://BalloonEditor/../node_modules/lodash-es/_assignValue.js","webpack://BalloonEditor/../node_modules/lodash-es/_assocIndexOf.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseAggregator.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseAssign.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseAssignIn.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseAssignValue.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseAt.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseClamp.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseClone.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseConforms.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseConformsTo.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseCreate.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseDelay.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseDifference.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseEach.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseEachRight.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseEvery.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseExtremum.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseFill.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseFilter.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseFindIndex.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseFindKey.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseFlatten.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseFor.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseForOwn.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseForOwnRight.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseForRight.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseFunctions.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseGet.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseGetAllKeys.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseGetTag.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseGt.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseHas.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseHasIn.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseInRange.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseIndexOf.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseIndexOfWith.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseIntersection.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseInverter.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseInvoke.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseIsArguments.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseIsArrayBuffer.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseIsDate.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseIsEqual.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseIsEqualDeep.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseIsMap.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseIsMatch.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseIsNaN.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseIsNative.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseIsRegExp.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseIsSet.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseIsTypedArray.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseIteratee.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseKeys.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseKeysIn.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseLodash.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseLt.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseMap.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseMatches.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseMatchesProperty.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseMean.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseMerge.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseMergeDeep.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseNth.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseOrderBy.js","webpack://BalloonEditor/../node_modules/lodash-es/_basePick.js","webpack://BalloonEditor/../node_modules/lodash-es/_basePickBy.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseProperty.js","webpack://BalloonEditor/../node_modules/lodash-es/_basePropertyDeep.js","webpack://BalloonEditor/../node_modules/lodash-es/_basePropertyOf.js","webpack://BalloonEditor/../node_modules/lodash-es/_basePullAll.js","webpack://BalloonEditor/../node_modules/lodash-es/_basePullAt.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseRandom.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseRange.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseReduce.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseRepeat.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseRest.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseSample.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseSampleSize.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseSet.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseSetData.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseSetToString.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseShuffle.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseSlice.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseSome.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseSortBy.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseSortedIndex.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseSortedIndexBy.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseSortedUniq.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseSum.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseTimes.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseToNumber.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseToPairs.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseToString.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseUnary.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseUniq.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseUnset.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseUpdate.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseValues.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseWhile.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseWrapperValue.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseXor.js","webpack://BalloonEditor/../node_modules/lodash-es/_baseZipObject.js","webpack://BalloonEditor/../node_modules/lodash-es/_cacheHas.js","webpack://BalloonEditor/../node_modules/lodash-es/_castArrayLikeObject.js","webpack://BalloonEditor/../node_modules/lodash-es/_castFunction.js","webpack://BalloonEditor/../node_modules/lodash-es/_castPath.js","webpack://BalloonEditor/../node_modules/lodash-es/_castRest.js","webpack://BalloonEditor/../node_modules/lodash-es/_castSlice.js","webpack://BalloonEditor/../node_modules/lodash-es/_charsEndIndex.js","webpack://BalloonEditor/../node_modules/lodash-es/_charsStartIndex.js","webpack://BalloonEditor/../node_modules/lodash-es/_cloneArrayBuffer.js","webpack://BalloonEditor/../node_modules/lodash-es/_cloneBuffer.js","webpack://BalloonEditor/../node_modules/lodash-es/_cloneDataView.js","webpack://BalloonEditor/../node_modules/lodash-es/_cloneRegExp.js","webpack://BalloonEditor/../node_modules/lodash-es/_cloneSymbol.js","webpack://BalloonEditor/../node_modules/lodash-es/_cloneTypedArray.js","webpack://BalloonEditor/../node_modules/lodash-es/_compareAscending.js","webpack://BalloonEditor/../node_modules/lodash-es/_compareMultiple.js","webpack://BalloonEditor/../node_modules/lodash-es/_composeArgs.js","webpack://BalloonEditor/../node_modules/lodash-es/_composeArgsRight.js","webpack://BalloonEditor/../node_modules/lodash-es/_copyArray.js","webpack://BalloonEditor/../node_modules/lodash-es/_copyObject.js","webpack://BalloonEditor/../node_modules/lodash-es/_copySymbols.js","webpack://BalloonEditor/../node_modules/lodash-es/_copySymbolsIn.js","webpack://BalloonEditor/../node_modules/lodash-es/_coreJsData.js","webpack://BalloonEditor/../node_modules/lodash-es/_countHolders.js","webpack://BalloonEditor/../node_modules/lodash-es/_createAggregator.js","webpack://BalloonEditor/../node_modules/lodash-es/_createAssigner.js","webpack://BalloonEditor/../node_modules/lodash-es/_createBaseEach.js","webpack://BalloonEditor/../node_modules/lodash-es/_createBaseFor.js","webpack://BalloonEditor/../node_modules/lodash-es/_createBind.js","webpack://BalloonEditor/../node_modules/lodash-es/_createCaseFirst.js","webpack://BalloonEditor/../node_modules/lodash-es/_createCompounder.js","webpack://BalloonEditor/../node_modules/lodash-es/_createCtor.js","webpack://BalloonEditor/../node_modules/lodash-es/_createCurry.js","webpack://BalloonEditor/../node_modules/lodash-es/_createFind.js","webpack://BalloonEditor/../node_modules/lodash-es/_createFlow.js","webpack://BalloonEditor/../node_modules/lodash-es/_createHybrid.js","webpack://BalloonEditor/../node_modules/lodash-es/_createInverter.js","webpack://BalloonEditor/../node_modules/lodash-es/_createMathOperation.js","webpack://BalloonEditor/../node_modules/lodash-es/_createOver.js","webpack://BalloonEditor/../node_modules/lodash-es/_createPadding.js","webpack://BalloonEditor/../node_modules/lodash-es/_createPartial.js","webpack://BalloonEditor/../node_modules/lodash-es/_createRange.js","webpack://BalloonEditor/../node_modules/lodash-es/_createRecurry.js","webpack://BalloonEditor/../node_modules/lodash-es/_createRelationalOperation.js","webpack://BalloonEditor/../node_modules/lodash-es/_createRound.js","webpack://BalloonEditor/../node_modules/lodash-es/_createSet.js","webpack://BalloonEditor/../node_modules/lodash-es/_createToPairs.js","webpack://BalloonEditor/../node_modules/lodash-es/_createWrap.js","webpack://BalloonEditor/../node_modules/lodash-es/_customDefaultsAssignIn.js","webpack://BalloonEditor/../node_modules/lodash-es/_customDefaultsMerge.js","webpack://BalloonEditor/../node_modules/lodash-es/_customOmitClone.js","webpack://BalloonEditor/../node_modules/lodash-es/_deburrLetter.js","webpack://BalloonEditor/../node_modules/lodash-es/_defineProperty.js","webpack://BalloonEditor/../node_modules/lodash-es/_equalArrays.js","webpack://BalloonEditor/../node_modules/lodash-es/_equalByTag.js","webpack://BalloonEditor/../node_modules/lodash-es/_equalObjects.js","webpack://BalloonEditor/../node_modules/lodash-es/_escapeHtmlChar.js","webpack://BalloonEditor/../node_modules/lodash-es/_escapeStringChar.js","webpack://BalloonEditor/../node_modules/lodash-es/_flatRest.js","webpack://BalloonEditor/../node_modules/lodash-es/_freeGlobal.js","webpack://BalloonEditor/../node_modules/lodash-es/_getAllKeys.js","webpack://BalloonEditor/../node_modules/lodash-es/_getAllKeysIn.js","webpack://BalloonEditor/../node_modules/lodash-es/_getData.js","webpack://BalloonEditor/../node_modules/lodash-es/_getFuncName.js","webpack://BalloonEditor/../node_modules/lodash-es/_getHolder.js","webpack://BalloonEditor/../node_modules/lodash-es/_getMapData.js","webpack://BalloonEditor/../node_modules/lodash-es/_getMatchData.js","webpack://BalloonEditor/../node_modules/lodash-es/_getNative.js","webpack://BalloonEditor/../node_modules/lodash-es/_getPrototype.js","webpack://BalloonEditor/../node_modules/lodash-es/_getRawTag.js","webpack://BalloonEditor/../node_modules/lodash-es/_getSymbols.js","webpack://BalloonEditor/../node_modules/lodash-es/_getSymbolsIn.js","webpack://BalloonEditor/../node_modules/lodash-es/_getTag.js","webpack://BalloonEditor/../node_modules/lodash-es/_getValue.js","webpack://BalloonEditor/../node_modules/lodash-es/_getView.js","webpack://BalloonEditor/../node_modules/lodash-es/_getWrapDetails.js","webpack://BalloonEditor/../node_modules/lodash-es/_hasPath.js","webpack://BalloonEditor/../node_modules/lodash-es/_hasUnicode.js","webpack://BalloonEditor/../node_modules/lodash-es/_hasUnicodeWord.js","webpack://BalloonEditor/../node_modules/lodash-es/_hashClear.js","webpack://BalloonEditor/../node_modules/lodash-es/_hashDelete.js","webpack://BalloonEditor/../node_modules/lodash-es/_hashGet.js","webpack://BalloonEditor/../node_modules/lodash-es/_hashHas.js","webpack://BalloonEditor/../node_modules/lodash-es/_hashSet.js","webpack://BalloonEditor/../node_modules/lodash-es/_initCloneArray.js","webpack://BalloonEditor/../node_modules/lodash-es/_initCloneByTag.js","webpack://BalloonEditor/../node_modules/lodash-es/_initCloneObject.js","webpack://BalloonEditor/../node_modules/lodash-es/_insertWrapDetails.js","webpack://BalloonEditor/../node_modules/lodash-es/_isFlattenable.js","webpack://BalloonEditor/../node_modules/lodash-es/_isIndex.js","webpack://BalloonEditor/../node_modules/lodash-es/_isIterateeCall.js","webpack://BalloonEditor/../node_modules/lodash-es/_isKey.js","webpack://BalloonEditor/../node_modules/lodash-es/_isKeyable.js","webpack://BalloonEditor/../node_modules/lodash-es/_isLaziable.js","webpack://BalloonEditor/../node_modules/lodash-es/_isMaskable.js","webpack://BalloonEditor/../node_modules/lodash-es/_isMasked.js","webpack://BalloonEditor/../node_modules/lodash-es/_isPrototype.js","webpack://BalloonEditor/../node_modules/lodash-es/_isStrictComparable.js","webpack://BalloonEditor/../node_modules/lodash-es/_iteratorToArray.js","webpack://BalloonEditor/../node_modules/lodash-es/_lazyClone.js","webpack://BalloonEditor/../node_modules/lodash-es/_lazyReverse.js","webpack://BalloonEditor/../node_modules/lodash-es/_lazyValue.js","webpack://BalloonEditor/../node_modules/lodash-es/_listCacheClear.js","webpack://BalloonEditor/../node_modules/lodash-es/_listCacheDelete.js","webpack://BalloonEditor/../node_modules/lodash-es/_listCacheGet.js","webpack://BalloonEditor/../node_modules/lodash-es/_listCacheHas.js","webpack://BalloonEditor/../node_modules/lodash-es/_listCacheSet.js","webpack://BalloonEditor/../node_modules/lodash-es/_mapCacheClear.js","webpack://BalloonEditor/../node_modules/lodash-es/_mapCacheDelete.js","webpack://BalloonEditor/../node_modules/lodash-es/_mapCacheGet.js","webpack://BalloonEditor/../node_modules/lodash-es/_mapCacheHas.js","webpack://BalloonEditor/../node_modules/lodash-es/_mapCacheSet.js","webpack://BalloonEditor/../node_modules/lodash-es/_mapToArray.js","webpack://BalloonEditor/../node_modules/lodash-es/_matchesStrictComparable.js","webpack://BalloonEditor/../node_modules/lodash-es/_memoizeCapped.js","webpack://BalloonEditor/../node_modules/lodash-es/_mergeData.js","webpack://BalloonEditor/../node_modules/lodash-es/_metaMap.js","webpack://BalloonEditor/../node_modules/lodash-es/_nativeCreate.js","webpack://BalloonEditor/../node_modules/lodash-es/_nativeKeys.js","webpack://BalloonEditor/../node_modules/lodash-es/_nativeKeysIn.js","webpack://BalloonEditor/../node_modules/lodash-es/_nodeUtil.js","webpack://BalloonEditor/../node_modules/lodash-es/_objectToString.js","webpack://BalloonEditor/../node_modules/lodash-es/_overArg.js","webpack://BalloonEditor/../node_modules/lodash-es/_overRest.js","webpack://BalloonEditor/../node_modules/lodash-es/_parent.js","webpack://BalloonEditor/../node_modules/lodash-es/_reEscape.js","webpack://BalloonEditor/../node_modules/lodash-es/_reEvaluate.js","webpack://BalloonEditor/../node_modules/lodash-es/_reInterpolate.js","webpack://BalloonEditor/../node_modules/lodash-es/_realNames.js","webpack://BalloonEditor/../node_modules/lodash-es/_reorder.js","webpack://BalloonEditor/../node_modules/lodash-es/_replaceHolders.js","webpack://BalloonEditor/../node_modules/lodash-es/_root.js","webpack://BalloonEditor/../node_modules/lodash-es/_safeGet.js","webpack://BalloonEditor/../node_modules/lodash-es/_setCacheAdd.js","webpack://BalloonEditor/../node_modules/lodash-es/_setCacheHas.js","webpack://BalloonEditor/../node_modules/lodash-es/_setData.js","webpack://BalloonEditor/../node_modules/lodash-es/_setToArray.js","webpack://BalloonEditor/../node_modules/lodash-es/_setToPairs.js","webpack://BalloonEditor/../node_modules/lodash-es/_setToString.js","webpack://BalloonEditor/../node_modules/lodash-es/_setWrapToString.js","webpack://BalloonEditor/../node_modules/lodash-es/_shortOut.js","webpack://BalloonEditor/../node_modules/lodash-es/_shuffleSelf.js","webpack://BalloonEditor/../node_modules/lodash-es/_stackClear.js","webpack://BalloonEditor/../node_modules/lodash-es/_stackDelete.js","webpack://BalloonEditor/../node_modules/lodash-es/_stackGet.js","webpack://BalloonEditor/../node_modules/lodash-es/_stackHas.js","webpack://BalloonEditor/../node_modules/lodash-es/_stackSet.js","webpack://BalloonEditor/../node_modules/lodash-es/_strictIndexOf.js","webpack://BalloonEditor/../node_modules/lodash-es/_strictLastIndexOf.js","webpack://BalloonEditor/../node_modules/lodash-es/_stringSize.js","webpack://BalloonEditor/../node_modules/lodash-es/_stringToArray.js","webpack://BalloonEditor/../node_modules/lodash-es/_stringToPath.js","webpack://BalloonEditor/../node_modules/lodash-es/_toKey.js","webpack://BalloonEditor/../node_modules/lodash-es/_toSource.js","webpack://BalloonEditor/../node_modules/lodash-es/_unescapeHtmlChar.js","webpack://BalloonEditor/../node_modules/lodash-es/_unicodeSize.js","webpack://BalloonEditor/../node_modules/lodash-es/_unicodeToArray.js","webpack://BalloonEditor/../node_modules/lodash-es/_unicodeWords.js","webpack://BalloonEditor/../node_modules/lodash-es/_updateWrapDetails.js","webpack://BalloonEditor/../node_modules/lodash-es/_wrapperClone.js","webpack://BalloonEditor/../node_modules/lodash-es/add.js","webpack://BalloonEditor/../node_modules/lodash-es/after.js","webpack://BalloonEditor/../node_modules/lodash-es/array.default.js","webpack://BalloonEditor/../node_modules/lodash-es/array.js","webpack://BalloonEditor/../node_modules/lodash-es/ary.js","webpack://BalloonEditor/../node_modules/lodash-es/assign.js","webpack://BalloonEditor/../node_modules/lodash-es/assignIn.js","webpack://BalloonEditor/../node_modules/lodash-es/assignInWith.js","webpack://BalloonEditor/../node_modules/lodash-es/assignWith.js","webpack://BalloonEditor/../node_modules/lodash-es/at.js","webpack://BalloonEditor/../node_modules/lodash-es/attempt.js","webpack://BalloonEditor/../node_modules/lodash-es/before.js","webpack://BalloonEditor/../node_modules/lodash-es/bind.js","webpack://BalloonEditor/../node_modules/lodash-es/bindAll.js","webpack://BalloonEditor/../node_modules/lodash-es/bindKey.js","webpack://BalloonEditor/../node_modules/lodash-es/camelCase.js","webpack://BalloonEditor/../node_modules/lodash-es/capitalize.js","webpack://BalloonEditor/../node_modules/lodash-es/castArray.js","webpack://BalloonEditor/../node_modules/lodash-es/ceil.js","webpack://BalloonEditor/../node_modules/lodash-es/chain.js","webpack://BalloonEditor/../node_modules/lodash-es/chunk.js","webpack://BalloonEditor/../node_modules/lodash-es/clamp.js","webpack://BalloonEditor/../node_modules/lodash-es/clone.js","webpack://BalloonEditor/../node_modules/lodash-es/cloneDeep.js","webpack://BalloonEditor/../node_modules/lodash-es/cloneDeepWith.js","webpack://BalloonEditor/../node_modules/lodash-es/cloneWith.js","webpack://BalloonEditor/../node_modules/lodash-es/collection.default.js","webpack://BalloonEditor/../node_modules/lodash-es/collection.js","webpack://BalloonEditor/../node_modules/lodash-es/commit.js","webpack://BalloonEditor/../node_modules/lodash-es/compact.js","webpack://BalloonEditor/../node_modules/lodash-es/concat.js","webpack://BalloonEditor/../node_modules/lodash-es/cond.js","webpack://BalloonEditor/../node_modules/lodash-es/conforms.js","webpack://BalloonEditor/../node_modules/lodash-es/conformsTo.js","webpack://BalloonEditor/../node_modules/lodash-es/constant.js","webpack://BalloonEditor/../node_modules/lodash-es/countBy.js","webpack://BalloonEditor/../node_modules/lodash-es/create.js","webpack://BalloonEditor/../node_modules/lodash-es/curry.js","webpack://BalloonEditor/../node_modules/lodash-es/curryRight.js","webpack://BalloonEditor/../node_modules/lodash-es/date.default.js","webpack://BalloonEditor/../node_modules/lodash-es/date.js","webpack://BalloonEditor/../node_modules/lodash-es/debounce.js","webpack://BalloonEditor/../node_modules/lodash-es/deburr.js","webpack://BalloonEditor/../node_modules/lodash-es/defaultTo.js","webpack://BalloonEditor/../node_modules/lodash-es/defaults.js","webpack://BalloonEditor/../node_modules/lodash-es/defaultsDeep.js","webpack://BalloonEditor/../node_modules/lodash-es/defer.js","webpack://BalloonEditor/../node_modules/lodash-es/delay.js","webpack://BalloonEditor/../node_modules/lodash-es/difference.js","webpack://BalloonEditor/../node_modules/lodash-es/differenceBy.js","webpack://BalloonEditor/../node_modules/lodash-es/differenceWith.js","webpack://BalloonEditor/../node_modules/lodash-es/divide.js","webpack://BalloonEditor/../node_modules/lodash-es/drop.js","webpack://BalloonEditor/../node_modules/lodash-es/dropRight.js","webpack://BalloonEditor/../node_modules/lodash-es/dropRightWhile.js","webpack://BalloonEditor/../node_modules/lodash-es/dropWhile.js","webpack://BalloonEditor/../node_modules/lodash-es/each.js","webpack://BalloonEditor/../node_modules/lodash-es/eachRight.js","webpack://BalloonEditor/../node_modules/lodash-es/endsWith.js","webpack://BalloonEditor/../node_modules/lodash-es/entries.js","webpack://BalloonEditor/../node_modules/lodash-es/entriesIn.js","webpack://BalloonEditor/../node_modules/lodash-es/eq.js","webpack://BalloonEditor/../node_modules/lodash-es/escape.js","webpack://BalloonEditor/../node_modules/lodash-es/escapeRegExp.js","webpack://BalloonEditor/../node_modules/lodash-es/every.js","webpack://BalloonEditor/../node_modules/lodash-es/extend.js","webpack://BalloonEditor/../node_modules/lodash-es/extendWith.js","webpack://BalloonEditor/../node_modules/lodash-es/fill.js","webpack://BalloonEditor/../node_modules/lodash-es/filter.js","webpack://BalloonEditor/../node_modules/lodash-es/find.js","webpack://BalloonEditor/../node_modules/lodash-es/findIndex.js","webpack://BalloonEditor/../node_modules/lodash-es/findKey.js","webpack://BalloonEditor/../node_modules/lodash-es/findLast.js","webpack://BalloonEditor/../node_modules/lodash-es/findLastIndex.js","webpack://BalloonEditor/../node_modules/lodash-es/findLastKey.js","webpack://BalloonEditor/../node_modules/lodash-es/first.js","webpack://BalloonEditor/../node_modules/lodash-es/flatMap.js","webpack://BalloonEditor/../node_modules/lodash-es/flatMapDeep.js","webpack://BalloonEditor/../node_modules/lodash-es/flatMapDepth.js","webpack://BalloonEditor/../node_modules/lodash-es/flatten.js","webpack://BalloonEditor/../node_modules/lodash-es/flattenDeep.js","webpack://BalloonEditor/../node_modules/lodash-es/flattenDepth.js","webpack://BalloonEditor/../node_modules/lodash-es/flip.js","webpack://BalloonEditor/../node_modules/lodash-es/floor.js","webpack://BalloonEditor/../node_modules/lodash-es/flow.js","webpack://BalloonEditor/../node_modules/lodash-es/flowRight.js","webpack://BalloonEditor/../node_modules/lodash-es/forEach.js","webpack://BalloonEditor/../node_modules/lodash-es/forEachRight.js","webpack://BalloonEditor/../node_modules/lodash-es/forIn.js","webpack://BalloonEditor/../node_modules/lodash-es/forInRight.js","webpack://BalloonEditor/../node_modules/lodash-es/forOwn.js","webpack://BalloonEditor/../node_modules/lodash-es/forOwnRight.js","webpack://BalloonEditor/../node_modules/lodash-es/fromPairs.js","webpack://BalloonEditor/../node_modules/lodash-es/function.default.js","webpack://BalloonEditor/../node_modules/lodash-es/function.js","webpack://BalloonEditor/../node_modules/lodash-es/functions.js","webpack://BalloonEditor/../node_modules/lodash-es/functionsIn.js","webpack://BalloonEditor/../node_modules/lodash-es/get.js","webpack://BalloonEditor/../node_modules/lodash-es/groupBy.js","webpack://BalloonEditor/../node_modules/lodash-es/gt.js","webpack://BalloonEditor/../node_modules/lodash-es/gte.js","webpack://BalloonEditor/../node_modules/lodash-es/has.js","webpack://BalloonEditor/../node_modules/lodash-es/hasIn.js","webpack://BalloonEditor/../node_modules/lodash-es/head.js","webpack://BalloonEditor/../node_modules/lodash-es/identity.js","webpack://BalloonEditor/../node_modules/lodash-es/inRange.js","webpack://BalloonEditor/../node_modules/lodash-es/includes.js","webpack://BalloonEditor/../node_modules/lodash-es/indexOf.js","webpack://BalloonEditor/../node_modules/lodash-es/initial.js","webpack://BalloonEditor/../node_modules/lodash-es/intersection.js","webpack://BalloonEditor/../node_modules/lodash-es/intersectionBy.js","webpack://BalloonEditor/../node_modules/lodash-es/intersectionWith.js","webpack://BalloonEditor/../node_modules/lodash-es/invert.js","webpack://BalloonEditor/../node_modules/lodash-es/invertBy.js","webpack://BalloonEditor/../node_modules/lodash-es/invoke.js","webpack://BalloonEditor/../node_modules/lodash-es/invokeMap.js","webpack://BalloonEditor/../node_modules/lodash-es/isArguments.js","webpack://BalloonEditor/../node_modules/lodash-es/isArray.js","webpack://BalloonEditor/../node_modules/lodash-es/isArrayBuffer.js","webpack://BalloonEditor/../node_modules/lodash-es/isArrayLike.js","webpack://BalloonEditor/../node_modules/lodash-es/isArrayLikeObject.js","webpack://BalloonEditor/../node_modules/lodash-es/isBoolean.js","webpack://BalloonEditor/../node_modules/lodash-es/isBuffer.js","webpack://BalloonEditor/../node_modules/lodash-es/isDate.js","webpack://BalloonEditor/../node_modules/lodash-es/isElement.js","webpack://BalloonEditor/../node_modules/lodash-es/isEmpty.js","webpack://BalloonEditor/../node_modules/lodash-es/isEqual.js","webpack://BalloonEditor/../node_modules/lodash-es/isEqualWith.js","webpack://BalloonEditor/../node_modules/lodash-es/isError.js","webpack://BalloonEditor/../node_modules/lodash-es/isFinite.js","webpack://BalloonEditor/../node_modules/lodash-es/isFunction.js","webpack://BalloonEditor/../node_modules/lodash-es/isInteger.js","webpack://BalloonEditor/../node_modules/lodash-es/isLength.js","webpack://BalloonEditor/../node_modules/lodash-es/isMap.js","webpack://BalloonEditor/../node_modules/lodash-es/isMatch.js","webpack://BalloonEditor/../node_modules/lodash-es/isMatchWith.js","webpack://BalloonEditor/../node_modules/lodash-es/isNaN.js","webpack://BalloonEditor/../node_modules/lodash-es/isNative.js","webpack://BalloonEditor/../node_modules/lodash-es/isNil.js","webpack://BalloonEditor/../node_modules/lodash-es/isNull.js","webpack://BalloonEditor/../node_modules/lodash-es/isNumber.js","webpack://BalloonEditor/../node_modules/lodash-es/isObject.js","webpack://BalloonEditor/../node_modules/lodash-es/isObjectLike.js","webpack://BalloonEditor/../node_modules/lodash-es/isPlainObject.js","webpack://BalloonEditor/../node_modules/lodash-es/isRegExp.js","webpack://BalloonEditor/../node_modules/lodash-es/isSafeInteger.js","webpack://BalloonEditor/../node_modules/lodash-es/isSet.js","webpack://BalloonEditor/../node_modules/lodash-es/isString.js","webpack://BalloonEditor/../node_modules/lodash-es/isSymbol.js","webpack://BalloonEditor/../node_modules/lodash-es/isTypedArray.js","webpack://BalloonEditor/../node_modules/lodash-es/isUndefined.js","webpack://BalloonEditor/../node_modules/lodash-es/isWeakMap.js","webpack://BalloonEditor/../node_modules/lodash-es/isWeakSet.js","webpack://BalloonEditor/../node_modules/lodash-es/iteratee.js","webpack://BalloonEditor/../node_modules/lodash-es/join.js","webpack://BalloonEditor/../node_modules/lodash-es/kebabCase.js","webpack://BalloonEditor/../node_modules/lodash-es/keyBy.js","webpack://BalloonEditor/../node_modules/lodash-es/keys.js","webpack://BalloonEditor/../node_modules/lodash-es/keysIn.js","webpack://BalloonEditor/../node_modules/lodash-es/lang.default.js","webpack://BalloonEditor/../node_modules/lodash-es/lang.js","webpack://BalloonEditor/../node_modules/lodash-es/last.js","webpack://BalloonEditor/../node_modules/lodash-es/lastIndexOf.js","webpack://BalloonEditor/../node_modules/lodash-es/lodash.default.js","webpack://BalloonEditor/../node_modules/lodash-es/lodash.js","webpack://BalloonEditor/../node_modules/lodash-es/lowerCase.js","webpack://BalloonEditor/../node_modules/lodash-es/lowerFirst.js","webpack://BalloonEditor/../node_modules/lodash-es/lt.js","webpack://BalloonEditor/../node_modules/lodash-es/lte.js","webpack://BalloonEditor/../node_modules/lodash-es/map.js","webpack://BalloonEditor/../node_modules/lodash-es/mapKeys.js","webpack://BalloonEditor/../node_modules/lodash-es/mapValues.js","webpack://BalloonEditor/../node_modules/lodash-es/matches.js","webpack://BalloonEditor/../node_modules/lodash-es/matchesProperty.js","webpack://BalloonEditor/../node_modules/lodash-es/math.default.js","webpack://BalloonEditor/../node_modules/lodash-es/math.js","webpack://BalloonEditor/../node_modules/lodash-es/max.js","webpack://BalloonEditor/../node_modules/lodash-es/maxBy.js","webpack://BalloonEditor/../node_modules/lodash-es/mean.js","webpack://BalloonEditor/../node_modules/lodash-es/meanBy.js","webpack://BalloonEditor/../node_modules/lodash-es/memoize.js","webpack://BalloonEditor/../node_modules/lodash-es/merge.js","webpack://BalloonEditor/../node_modules/lodash-es/mergeWith.js","webpack://BalloonEditor/../node_modules/lodash-es/method.js","webpack://BalloonEditor/../node_modules/lodash-es/methodOf.js","webpack://BalloonEditor/../node_modules/lodash-es/min.js","webpack://BalloonEditor/../node_modules/lodash-es/minBy.js","webpack://BalloonEditor/../node_modules/lodash-es/mixin.js","webpack://BalloonEditor/../node_modules/lodash-es/multiply.js","webpack://BalloonEditor/../node_modules/lodash-es/negate.js","webpack://BalloonEditor/../node_modules/lodash-es/next.js","webpack://BalloonEditor/../node_modules/lodash-es/noop.js","webpack://BalloonEditor/../node_modules/lodash-es/now.js","webpack://BalloonEditor/../node_modules/lodash-es/nth.js","webpack://BalloonEditor/../node_modules/lodash-es/nthArg.js","webpack://BalloonEditor/../node_modules/lodash-es/number.default.js","webpack://BalloonEditor/../node_modules/lodash-es/number.js","webpack://BalloonEditor/../node_modules/lodash-es/object.default.js","webpack://BalloonEditor/../node_modules/lodash-es/object.js","webpack://BalloonEditor/../node_modules/lodash-es/omit.js","webpack://BalloonEditor/../node_modules/lodash-es/omitBy.js","webpack://BalloonEditor/../node_modules/lodash-es/once.js","webpack://BalloonEditor/../node_modules/lodash-es/orderBy.js","webpack://BalloonEditor/../node_modules/lodash-es/over.js","webpack://BalloonEditor/../node_modules/lodash-es/overArgs.js","webpack://BalloonEditor/../node_modules/lodash-es/overEvery.js","webpack://BalloonEditor/../node_modules/lodash-es/overSome.js","webpack://BalloonEditor/../node_modules/lodash-es/pad.js","webpack://BalloonEditor/../node_modules/lodash-es/padEnd.js","webpack://BalloonEditor/../node_modules/lodash-es/padStart.js","webpack://BalloonEditor/../node_modules/lodash-es/parseInt.js","webpack://BalloonEditor/../node_modules/lodash-es/partial.js","webpack://BalloonEditor/../node_modules/lodash-es/partialRight.js","webpack://BalloonEditor/../node_modules/lodash-es/partition.js","webpack://BalloonEditor/../node_modules/lodash-es/pick.js","webpack://BalloonEditor/../node_modules/lodash-es/pickBy.js","webpack://BalloonEditor/../node_modules/lodash-es/plant.js","webpack://BalloonEditor/../node_modules/lodash-es/property.js","webpack://BalloonEditor/../node_modules/lodash-es/propertyOf.js","webpack://BalloonEditor/../node_modules/lodash-es/pull.js","webpack://BalloonEditor/../node_modules/lodash-es/pullAll.js","webpack://BalloonEditor/../node_modules/lodash-es/pullAllBy.js","webpack://BalloonEditor/../node_modules/lodash-es/pullAllWith.js","webpack://BalloonEditor/../node_modules/lodash-es/pullAt.js","webpack://BalloonEditor/../node_modules/lodash-es/random.js","webpack://BalloonEditor/../node_modules/lodash-es/range.js","webpack://BalloonEditor/../node_modules/lodash-es/rangeRight.js","webpack://BalloonEditor/../node_modules/lodash-es/rearg.js","webpack://BalloonEditor/../node_modules/lodash-es/reduce.js","webpack://BalloonEditor/../node_modules/lodash-es/reduceRight.js","webpack://BalloonEditor/../node_modules/lodash-es/reject.js","webpack://BalloonEditor/../node_modules/lodash-es/remove.js","webpack://BalloonEditor/../node_modules/lodash-es/repeat.js","webpack://BalloonEditor/../node_modules/lodash-es/replace.js","webpack://BalloonEditor/../node_modules/lodash-es/rest.js","webpack://BalloonEditor/../node_modules/lodash-es/result.js","webpack://BalloonEditor/../node_modules/lodash-es/reverse.js","webpack://BalloonEditor/../node_modules/lodash-es/round.js","webpack://BalloonEditor/../node_modules/lodash-es/sample.js","webpack://BalloonEditor/../node_modules/lodash-es/sampleSize.js","webpack://BalloonEditor/../node_modules/lodash-es/seq.default.js","webpack://BalloonEditor/../node_modules/lodash-es/seq.js","webpack://BalloonEditor/../node_modules/lodash-es/set.js","webpack://BalloonEditor/../node_modules/lodash-es/setWith.js","webpack://BalloonEditor/../node_modules/lodash-es/shuffle.js","webpack://BalloonEditor/../node_modules/lodash-es/size.js","webpack://BalloonEditor/../node_modules/lodash-es/slice.js","webpack://BalloonEditor/../node_modules/lodash-es/snakeCase.js","webpack://BalloonEditor/../node_modules/lodash-es/some.js","webpack://BalloonEditor/../node_modules/lodash-es/sortBy.js","webpack://BalloonEditor/../node_modules/lodash-es/sortedIndex.js","webpack://BalloonEditor/../node_modules/lodash-es/sortedIndexBy.js","webpack://BalloonEditor/../node_modules/lodash-es/sortedIndexOf.js","webpack://BalloonEditor/../node_modules/lodash-es/sortedLastIndex.js","webpack://BalloonEditor/../node_modules/lodash-es/sortedLastIndexBy.js","webpack://BalloonEditor/../node_modules/lodash-es/sortedLastIndexOf.js","webpack://BalloonEditor/../node_modules/lodash-es/sortedUniq.js","webpack://BalloonEditor/../node_modules/lodash-es/sortedUniqBy.js","webpack://BalloonEditor/../node_modules/lodash-es/split.js","webpack://BalloonEditor/../node_modules/lodash-es/spread.js","webpack://BalloonEditor/../node_modules/lodash-es/startCase.js","webpack://BalloonEditor/../node_modules/lodash-es/startsWith.js","webpack://BalloonEditor/../node_modules/lodash-es/string.default.js","webpack://BalloonEditor/../node_modules/lodash-es/string.js","webpack://BalloonEditor/../node_modules/lodash-es/stubArray.js","webpack://BalloonEditor/../node_modules/lodash-es/stubFalse.js","webpack://BalloonEditor/../node_modules/lodash-es/stubObject.js","webpack://BalloonEditor/../node_modules/lodash-es/stubString.js","webpack://BalloonEditor/../node_modules/lodash-es/stubTrue.js","webpack://BalloonEditor/../node_modules/lodash-es/subtract.js","webpack://BalloonEditor/../node_modules/lodash-es/sum.js","webpack://BalloonEditor/../node_modules/lodash-es/sumBy.js","webpack://BalloonEditor/../node_modules/lodash-es/tail.js","webpack://BalloonEditor/../node_modules/lodash-es/take.js","webpack://BalloonEditor/../node_modules/lodash-es/takeRight.js","webpack://BalloonEditor/../node_modules/lodash-es/takeRightWhile.js","webpack://BalloonEditor/../node_modules/lodash-es/takeWhile.js","webpack://BalloonEditor/../node_modules/lodash-es/tap.js","webpack://BalloonEditor/../node_modules/lodash-es/template.js","webpack://BalloonEditor/../node_modules/lodash-es/templateSettings.js","webpack://BalloonEditor/../node_modules/lodash-es/throttle.js","webpack://BalloonEditor/../node_modules/lodash-es/thru.js","webpack://BalloonEditor/../node_modules/lodash-es/times.js","webpack://BalloonEditor/../node_modules/lodash-es/toArray.js","webpack://BalloonEditor/../node_modules/lodash-es/toFinite.js","webpack://BalloonEditor/../node_modules/lodash-es/toInteger.js","webpack://BalloonEditor/../node_modules/lodash-es/toIterator.js","webpack://BalloonEditor/../node_modules/lodash-es/toJSON.js","webpack://BalloonEditor/../node_modules/lodash-es/toLength.js","webpack://BalloonEditor/../node_modules/lodash-es/toLower.js","webpack://BalloonEditor/../node_modules/lodash-es/toNumber.js","webpack://BalloonEditor/../node_modules/lodash-es/toPairs.js","webpack://BalloonEditor/../node_modules/lodash-es/toPairsIn.js","webpack://BalloonEditor/../node_modules/lodash-es/toPath.js","webpack://BalloonEditor/../node_modules/lodash-es/toPlainObject.js","webpack://BalloonEditor/../node_modules/lodash-es/toSafeInteger.js","webpack://BalloonEditor/../node_modules/lodash-es/toString.js","webpack://BalloonEditor/../node_modules/lodash-es/toUpper.js","webpack://BalloonEditor/../node_modules/lodash-es/transform.js","webpack://BalloonEditor/../node_modules/lodash-es/trim.js","webpack://BalloonEditor/../node_modules/lodash-es/trimEnd.js","webpack://BalloonEditor/../node_modules/lodash-es/trimStart.js","webpack://BalloonEditor/../node_modules/lodash-es/truncate.js","webpack://BalloonEditor/../node_modules/lodash-es/unary.js","webpack://BalloonEditor/../node_modules/lodash-es/unescape.js","webpack://BalloonEditor/../node_modules/lodash-es/union.js","webpack://BalloonEditor/../node_modules/lodash-es/unionBy.js","webpack://BalloonEditor/../node_modules/lodash-es/unionWith.js","webpack://BalloonEditor/../node_modules/lodash-es/uniq.js","webpack://BalloonEditor/../node_modules/lodash-es/uniqBy.js","webpack://BalloonEditor/../node_modules/lodash-es/uniqWith.js","webpack://BalloonEditor/../node_modules/lodash-es/uniqueId.js","webpack://BalloonEditor/../node_modules/lodash-es/unset.js","webpack://BalloonEditor/../node_modules/lodash-es/unzip.js","webpack://BalloonEditor/../node_modules/lodash-es/unzipWith.js","webpack://BalloonEditor/../node_modules/lodash-es/update.js","webpack://BalloonEditor/../node_modules/lodash-es/updateWith.js","webpack://BalloonEditor/../node_modules/lodash-es/upperCase.js","webpack://BalloonEditor/../node_modules/lodash-es/upperFirst.js","webpack://BalloonEditor/../node_modules/lodash-es/util.default.js","webpack://BalloonEditor/../node_modules/lodash-es/util.js","webpack://BalloonEditor/../node_modules/lodash-es/value.js","webpack://BalloonEditor/../node_modules/lodash-es/valueOf.js","webpack://BalloonEditor/../node_modules/lodash-es/values.js","webpack://BalloonEditor/../node_modules/lodash-es/valuesIn.js","webpack://BalloonEditor/../node_modules/lodash-es/without.js","webpack://BalloonEditor/../node_modules/lodash-es/words.js","webpack://BalloonEditor/../node_modules/lodash-es/wrap.js","webpack://BalloonEditor/../node_modules/lodash-es/wrapperAt.js","webpack://BalloonEditor/../node_modules/lodash-es/wrapperChain.js","webpack://BalloonEditor/../node_modules/lodash-es/wrapperLodash.js","webpack://BalloonEditor/../node_modules/lodash-es/wrapperReverse.js","webpack://BalloonEditor/../node_modules/lodash-es/wrapperValue.js","webpack://BalloonEditor/../node_modules/lodash-es/xor.js","webpack://BalloonEditor/../node_modules/lodash-es/xorBy.js","webpack://BalloonEditor/../node_modules/lodash-es/xorWith.js","webpack://BalloonEditor/../node_modules/lodash-es/zip.js","webpack://BalloonEditor/../node_modules/lodash-es/zipObject.js","webpack://BalloonEditor/../node_modules/lodash-es/zipObjectDeep.js","webpack://BalloonEditor/../node_modules/lodash-es/zipWith.js","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-engine/theme/placeholder.css","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-font/theme/fontcolor.css","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-link/theme/link.css","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-link/theme/linkactions.css","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-link/theme/linkform.css","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/components/button/button.css","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/components/button/switchbutton.css","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/components/colorgrid/colorgrid.css","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/dropdown.css","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/listdropdown.css","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/toolbardropdown.css","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/components/editorui/editorui.css","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/components/icon/icon.css","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/components/inputtext/inputtext.css","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/components/label/label.css","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/components/labeledinput/labeledinput.css","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/components/list/list.css","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/components/panel/balloonpanel.css","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/components/panel/balloonrotator.css","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/components/panel/fakepanel.css","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/components/toolbar/toolbar.css","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/components/tooltip/tooltip.css","webpack://BalloonEditor/../node_modules/@ckeditor/ckeditor5-ui/theme/globals/globals.css","webpack://BalloonEditor/../styles/ck-styles.css","webpack://BalloonEditor/../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://BalloonEditor/../node_modules/webpack/buildin/global.js","webpack://BalloonEditor/../node_modules/webpack/buildin/harmony-module.js","webpack://BalloonEditor/../styles/ck-styles.css?4639","webpack://BalloonEditor/./src/ckeditor.js"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACyD;AACgB;AACI;AACD;AACxB;AACf;AACrC;AACA;AACA,QAAQ,wCAAwC;AAChD;AACA;AACA,sBAAsB;AACtB;AACA,IAAI,6EAA6E;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,wCAAwC;AACxC,mBAAmB,qEAAqE;AACxF;AACA;AACA;AACe,uBAAuB,2EAAM;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mFAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,yCAAyC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,sBAAsB;AACtB,qBAAqB;AACrB;AACA;AACA;AACA,cAAc,kCAAkC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,8BAA8B,0DAAQ;AACtC;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,yCAAyC,sFAAe;AACxD;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA,cAAc,2CAA2C;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,mFAAc;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,+DAA+D,sBAAsB;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAG,WAAW,qFAAe,EAAE;AAC/B;AACA;AACA,YAAY,gDAAgD;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iCAAiC;AAC5C,aAAa;AACb;AACA;AACA,6BAA6B,yDAAyD;AACtF;AACA,iBAAiB,8CAA8C;AAC/D;AACA,YAAY,wCAAwC;AACpD;AACA;AACA,6BAA6B,yDAAyD;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,QAAQ,oFAAoF;AAC5F;AACA,6BAA6B,+EAA+E;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,WAAW,iCAAiC;AAC5C,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,YAAY,OAAO;AACnB,G;;;;;;;;;;;;AC3TA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE2D;;AAE3D;AACA,6BAA6B,kCAAkC;AAC/D;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,2BAA2B,6CAA6C;AACxE;AACA;AACA;AACA;AACe,+BAA+B,4EAAO;AACrD;AACA,YAAY,iCAAiC;AAC7C,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,MAAM,uFAAuF;AAC7F;AACA,4CAA4C;AAC5C,wCAAwC;AACxC;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA,2BAA2B,aAAa,MAAM,iBAAiB;AAC/D;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,oDAAoD,sDAAsD;AAC1G;AACA;AACA,wDAAwD,+CAA+C;AACvG;AACA,KAAK,sDAAsD;AAC3D;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACzIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEyD;AACZ;AACV;;AAEnC;AACA;AACA;AACA,sCAAsC;AACtC,YAAY,qCAAqC;AACjD;AACA,4CAA4C;AAC5C,QAAQ,6DAA6D;AACrE;AACA;AACA;AACe,mBAAmB,2EAAM;AACxC;AACA;AACA;AACA;AACA,WAAW,yDAAW,EAAE,oDAAM;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEyD;AACN;;AAEnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,0BAA0B,2EAAM;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,wBAAwB;AAChE;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,iCAAiC,yDAAgB;;AAEjD;AACA;AACA;AACA;;;;;;;;;;;;;ACxEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACyD;AACa;AACpB;AAClD;AACA;AACA;AACA;AACA;AACA;AACe,qBAAqB,2EAAM;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oFAAU;AACvC;AACA;AACA,sBAAsB,6DAAQ;AAC9B;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA,C;;;;;;;;;;;;AC3CA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEyD;AACN;AACV;;AAEzC;AACA;AACA;AACA,sCAAsC;AACtC,YAAY,qCAAqC;AACjD;AACA,4CAA4C,6DAA6D;AACzG,IAAI,mDAAmD;AACvD;AACA;AACA;AACe,qBAAqB,2EAAM;AAC1C;AACA;AACA;AACA;AACA,WAAW,6DAAa,EAAE,wDAAQ;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEyD;AACN;;AAEnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,4BAA4B,2EAAM;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,0BAA0B;AAClE;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,mCAAmC,yDAAgB;;AAEnD;AACA;AACA;AACA;;;;;;;;;;;;;AC9DA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACyD;AACa;AAChB;AACtD;AACA;AACA;AACA;AACA;AACA;AACe,uBAAuB,2EAAM;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oFAAU;AACvC;AACA;AACA,sBAAsB,+DAAU;AAChC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA,C;;;;;;;;;;;;AC3CA;AAAe,0yB;;;;;;;;;;;;ACAf;AAAe,8f;;;;;;;;;;;;ACAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEyD;;AAEL;;AAEE;AACc;AACX;;AAEsC;;AAE/F;AACA;AACA;AACA;AACA;AACA,iDAAiD,kEAAkE;AACnH;AACA;AACA;AACe,wBAAwB,2EAAM;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,gEAAgE;AAC9E;AACA,gCAAgC,sGAAiB;;AAEjD,oBAAoB,0DAAiB;;AAErC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,GAAG,sBAAsB;;AAE5B;AACA;AACA;;AAEA;AACA,cAAc,6EAAsB;AACpC,IAAI;AACJ,cAAc,sEAAe;AAC7B;;AAEA;;AAEA,sCAAsC,wBAAwB;;AAE9D;AACA,GAAG,GAAG,kBAAkB;;AAExB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG,GAAG,kBAAkB;;AAExB;;AAEA;AACA;;AAEA;;AAEA;;AAEA,0CAA0C,0CAA0C;AACpF;;AAEA,mDAAmD,kBAAkB;AACrE;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG,GAAG,kBAAkB;;AAExB;AACA;AACA;AACA,6CAA6C,yEAAe;AAC5D;;AAEA;AACA;AACA;AACA,GAAG,GAAG,kBAAkB;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB,sFAAsF;AAC9G;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,qDAAqD;AAChE;AACA,IAAI,kEAAkE;AACtE,WAAW,2CAA2C;AACtD;;AAEA;AACA,aAAa,sDAAsD,MAAM;AACzE;AACA;AACA,wBAAwB,wFAAwF;AAChH;AACA;AACA;AACA;AACA,WAAW,oDAAoD;AAC/D;;AAEA;AACA,qBAAqB,iEAAiE;AACtF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,2CAA2C;AACvD;;AAEA;AACA;AACA,+CAA+C,kEAAkE;AACjH;AACA,YAAY,qDAAqD;AACjE;;AAEA;AACA;AACA;AACA,YAAY,aAAa;AACzB;;;;;;;;;;;;;AC7LA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE6F;AAC7B;AACtB;;AAE1C;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN;AACA;AACA,iDAAiD,2CAA2C;AAC5F,QAAQ,oEAAoE;AAC5E,IAAI,2CAA2C;AAC/C;AACA;AACA;AACe,gCAAgC,qGAAgB;AAC/D;AACA;;AAEA;;AAEA;;AAEA,sDAAsD,kBAAkB;AACxE,qDAAqD,kBAAkB;;AAEvE;AACA;;AAEA;;AAEA,yBAAyB,+EAAS;;AAElC;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,qDAAY;AACjC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA,+BAA+B,mBAAmB,MAAM,kBAAkB;AAC1E;AACA,wBAAwB,sFAAsF;AAC9G;AACA;AACA;AACA;AACA,2EAA2E;AAC3E,yBAAyB,2CAA2C,SAAS,+CAA+C;AAC5H,qBAAqB,2CAA2C;AAChE;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,2CAA2C;AACtD,WAAW,uCAAuC;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,2DAA2D;AAC7E;AACA,2EAA2E;AAC3E,yBAAyB,2CAA2C,SAAS,+CAA+C;AAC5H,qBAAqB,2CAA2C;AAChE;AACA;AACA;AACA,WAAW,sDAAsD;AACjE;;AAEA;AACA;AACA;AACA,kBAAkB,2DAA2D;AAC7E;AACA,2EAA2E;AAC3E,yBAAyB,2CAA2C,SAAS,+CAA+C;AAC5H,qBAAqB,2CAA2C;AAChE;AACA;AACA;AACA,WAAW,sDAAsD;AACjE,WAAW,+BAA+B;AAC1C;;AAEA;AACA;AACA;AACA,kBAAkB,2DAA2D;AAC7E;AACA,2EAA2E;AAC3E,yBAAyB,2CAA2C,SAAS,+CAA+C;AAC5H,qBAAqB,2CAA2C;AAChE;AACA;AACA;AACA,WAAW,sDAAsD;AACjE;;AAEA;AACA;AACA;AACA,kBAAkB,2DAA2D;AAC7E;AACA,2EAA2E;AAC3E,yBAAyB,2CAA2C,SAAS,+CAA+C;AAC5H,qBAAqB,2CAA2C;AAChE;AACA;AACA;AACA,WAAW,sDAAsD;AACjE;;AAEA;AACA;AACA;AACA,kBAAkB,2DAA2D;AAC7E;AACA,2EAA2E;AAC3E,yBAAyB,2CAA2C,SAAS,+CAA+C;AAC5H,qBAAqB,2CAA2C;AAChE;AACA;AACA;AACA,WAAW,sDAAsD;AACjE;;AAEA;AACA,qBAAqB,uDAAuD;AAC5E,IAAI,sDAAsD,MAAM,qDAAqD;AACrH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,2CAA2C;AACvD;;;;;;;;;;;;;AClNA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA,cAAc,aAAa;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,aAAa;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3EA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACe;AACf;AACA;AACA,4FAA4F;AAC5F;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;;;;;;;;;;;;AC1BA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACe;AACf;AACA;AACA,uBAAuB;AACvB,uBAAuB;AACvB;AACA;AACA;AACA,0BAA0B;AAC1B,0BAA0B;AAC1B;AACA,6BAA6B;;AAE7B;AACA;AACA,eAAe,OAAO;AACtB;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACrCA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa,6CAA6C;AAC1D;AACA,WAAW,6BAA6B;AACxC,aAAa,OAAO;AACpB;AACe;AACf;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACpDA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE4E;AACxB;;AAEpD;AACA;AACA;AACA;AACA;AACA,QAAQ,8CAA8C;AACtD;AACA,2DAA2D,kEAAkE;AAC7H,oDAAoD,kEAAkE;AACtH;AACA,2DAA2D,4DAA4D;AACvH;AACA;AACA;AACe;AACf;AACA;AACA;AACA,YAAY,iCAAiC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,2BAA2B;AACtG;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2EAA2E,2BAA2B;AACtG;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,sBAAsB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA,4BAA4B,qBAAqB;AACjD;AACA,YAAY;AACZ;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG,GAAG,mBAAmB;;AAEzB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;;AAEA;AACA,0DAA0D,iBAAiB,MAAM,aAAa;AAC9F;AACA;AACA;AACA,KAAK,iGAAiG;AACtG;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kEAAkE,wCAAwC;AAC1G,yDAAyD,0CAA0C;AACnG;AACA;AACA;AACA,uBAAuB;AACvB;AACA,uBAAuB;AACvB;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,kDAAkD,0BAA0B;AAC5E;AACA,YAAY,OAAO,2DAA2D,wCAAwC;AACtH;AACA;AACA;;AAEA;AACA,4CAA4C,sBAAsB;AAClE;AACA;AACA;;AAEA;AACA,kDAAkD,qBAAqB,OAAO,qBAAqB;AACnG;AACA,YAAY,OAAO,mDAAmD,qBAAqB;AAC3F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA,mFAAmF,iBAAiB;AACpG,qEAAqE,qBAAqB;AAC1F;AACA,qEAAqE,iBAAiB;AACtF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA,SAAS,4DAA4D;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iFAAG,WAAW,qFAAe;;AAE7B;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChPA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEwE;;AAExE;AACA,yDAAyD,kEAAkE;AAC3H;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,4BAA4B;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,EAAE;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA,aAAa,mFAAa,yEAAyE,cAAc;AACjH;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE0D;AACQ;AAChB;AACQ;AACc;;AAExE;AACA,gFAAgF;AAChF,+DAA+D;AAC/D;AACA;AACA;AACA;AACA,IAAI,8DAA8D;AAClE;AACA;AACA,uDAAuD;AACvD,6EAA6E,wCAAwC;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,gEAAgE;AAC5H;AACA;AACA,QAAQ,4DAA4D;AACpE;AACe;AACf;AACA;AACA;AACA,qDAAqD,oDAAoD;AACzG;AACA,YAAY,OAAO,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,oBAAoB,4EAAM;;AAE1B;;AAEA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,qBAAqB,yDAAgB;;AAErC;;AAEA;AACA;AACA,YAAY;AACZ;AACA,oBAAoB,4EAAM;AAC1B;AACA;AACA,GAAG;;AAEH;AACA,oBAAoB,mCAAmC;AACvD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,qBAAqB,gFAAU;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,2CAA2C;AACzD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oDAAoD,6DAA6D;AACjH;AACA;AACA;AACA,cAAc,mFAAa;AAC3B;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA,cAAc,mFAAa;AAC3B;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,6BAA6B;AACvC;AACA;AACA;AACA;AACA,YAAY,iCAAiC;AAC7C,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,iCAAiC;AAC7C,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,2FAA2F;AAC3F;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,MAAM;AACxB;AACA;AACA,kBAAkB,MAAM;AACxB;AACA;AACA;AACA,iBAAiB,MAAM;AACvB,eAAe,MAAM;AACrB;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,YAAY,OAAO;AACnB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,uCAAuC;AACvC,MAAM;AACN;AACA,aAAa;AACb,QAAQ,8EAA8E;AACtF;AACA;AACA,YAAY,iBAAiB;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,kCAAkC;AAClC,MAAM;AACN;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA,kCAAkC;AAClC,kCAAkC;AAClC,MAAM;AACN;AACA,aAAa;AACb,QAAQ,4EAA4E;AACpF;AACA;AACA,YAAY,OAAO;AACnB;;;;;;;;;;;;;AClWA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE4E;AACxB;;AAEpD;AACA,uBAAuB,kCAAkC;AACzD;AACA,sDAAsD,8CAA8C;AACpG,MAAM,0CAA0C;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,8CAA8C;AACvD,2CAA2C,8CAA8C;AACzF;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA,YAAY,6DAA6D;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iFAAG,iBAAiB,qFAAe;;;;;;;;;;;;;AC5DnC;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE8E;;AAE9E;AACA;AACA,OAAO,kDAAkD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,sCAAsC,sFAAgB;AACrE;AACA;AACA;AACA,YAAY,iCAAiC;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,6BAA6B;AACzC,SAAS,2CAA2C;AACpD,YAAY,gBAAgB;AAC5B,KAAK,iEAAiE;AACtE;AACA,KAAK,0EAA0E;AAC/E;AACA,YAAY,OAAO,YAAY;AAC/B,YAAY,8CAA8C;AAC1D;AACA;AACA;AACA,uCAAuC;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACvEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEiC;AACyB;AACkC;AACzC;AACE;AACiC;AACR;AACf;AACE;;AAEW;AACxB;AACoB;AACQ;;AAEhF;AACA;AACA;AACA;AACA;AACA,qCAAqC,wDAAwD;AAC7F,IAAI,qDAAqD;AACzD;AACA;AACA;AACA,uDAAuD,uCAAuC;AAC9F;AACA;AACA;AACA;AACA,4CAA4C,mDAAmD;AAC/F;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA,sDAAsD,yDAAyD;AAC/G;AACA,YAAY,OAAO,WAAW;AAC9B;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,wCAAwC,gDAAO,GAAG,4BAA4B;AAC9E;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,oBAAoB,4EAAM;AAC1B;AACA;;AAEA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA,cAAc;AACd;AACA,qBAAqB,yDAAgB;;AAErC;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,oBAAoB,mCAAmC;AACvD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,kCAAkC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,sBAAsB,0DAAiB;;AAEvC;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,MAAM,gEAAgE;AACtE,sBAAsB,oCAAoC;AAC1D;AACA,0BAA0B,WAAW,kCAAkC;AACvE;AACA;AACA,cAAc,mCAAmC;AACjD;AACA;AACA,uDAAuD,mBAAmB;AAC1E,6DAA6D,mBAAmB;;AAEhF;AACA;AACA;AACA,mCAAmC,yBAAyB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,mBAAmB,kFAAK;;AAExB,8BAA8B,8FAAe;;AAE7C;AACA,UAAU,6EAA6E;AACvF;AACA;AACA;AACA,cAAc;AACd;AACA,kBAAkB,gGAAc;;AAEhC;AACA,UAAU,sFAAsF;AAChG;AACA;AACA;AACA,cAAc;AACd;AACA,qBAAqB,mGAAiB;AACtC;;AAEA;AACA;AACA;AACA,cAAc,qDAAqD;AACnE;AACA;AACA,cAAc;AACd;AACA,wBAAwB,4FAAU;AAClC;AACA;;AAEA;AACA,yBAAyB,kEAAkE;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,MAAM,iEAAiE;AACvE;AACA;AACA,cAAc;AACd;AACA,wBAAwB,gEAAuB;AAC/C;AACA;;AAEA;AACA;AACA;AACA,cAAc,2CAA2C;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,kCAAkC;AACxD;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,EAAE;AACd;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG,oFAAa;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA,kFAAG,UAAU,qFAAe;;AAE5B;AACA,mBAAmB,8EAA8E;AACjG;AACA;AACA;AACA;AACA,IAAI,gEAAgE;AACpE;AACA;AACA;AACA,iBAAiB,4BAA4B;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,4BAA4B;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA,8EAA8E,4DAA4D;AAC1I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,sCAAsC;AACtC,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,sCAAsC;AACtC,qCAAqC;AACrC,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,sCAAsC;AACtC,qCAAqC;AACrC,MAAM;AACN;AACA,aAAa,qDAAqD;AAClE;AACA;AACA,YAAY,iBAAiB;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,iCAAiC;AACjC,MAAM;AACN;AACA;AACA;AACA,8BAA8B,SAAS;AACvC;AACA,iCAAiC;AACjC,iCAAiC;AACjC,MAAM;AACN;AACA,aAAa,sDAAsD;AACnE;AACA;AACA,YAAY,OAAO;AACnB;;;;;;;;;;;;;AC9aA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAE2E;AACL;;AAEA;AAClB;;AAEpD;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA,YAAY,iCAAiC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,iCAAiC;AAC/C;AACA;;AAEA;AACA,yBAAyB,kDAAkD;AAC3E;AACA;AACA;AACA,cAAc,4CAA4C;AAC1D;AACA,8BAA8B,mFAAgB;;AAE9C;AACA;AACA;AACA;AACA;AACA,cAAc,uCAAuC;AACrD;AACA,0BAA0B,kFAAY;;AAEtC;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,wDAAwD;AAC7E,oDAAoD;AACpD;AACA,KAAK,8DAA8D;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;;AAEA;AACA,eAAe,iEAAiE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,YAAY;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,UAAU,0FAA0F;AACpG,oEAAoE,iDAAiD;AACrH,MAAM,iDAAiD;AACvD;AACA;AACA,aAAa,qCAAqC;AAClD;AACA;AACA;AACA;AACA,IAAI,iBAAiB;;AAErB;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,yEAAyE;AAC3F;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA8C,+DAA+D;AAC7G,2CAA2C,kDAAkD;AAC7F;AACA;AACA;AACA;;AAEA,iFAAG,YAAY,kFAAY;;;;;;;;;;;;;AChM3B;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEuC;AACiC;;AAExE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B,+EAA+E;AAC5G;AACA,WAAW,iCAAiC;AAC5C;AACe;AACf,OAAO,4DAAU;AACjB;AACA;AACA,MAAM,0DAA0D;AAChE;AACA;AACA;AACA,YAAY,mFAAa;AACzB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO,4DAAU;AACjB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;;;;;;;;;;;;AClEA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0BAA0B,oDAAoD;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,2EAAY,EAAC;;AAE5B;AACA;AACA,cAAc,0DAA0D;AACxE;AACA,wCAAwC,uCAAuC;AAC/E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,yCAAyC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,YAAY,yCAAyC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,sFAAsF;AACtF,aAAa,OAAO;AACpB;;;;;;;;;;;;;AC/EA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEwE;AACU;;AAElF;AACA;AACA;;AAEA;AACA,0BAA0B,0DAA0D;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,8DAA8D;AACzE;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;AACA;AACA;AACA;;AAEA,EAAE,kGAAgB;AAClB;AACA;;AAEe,8EAAe,EAAC;;AAE/B;AACA;AACA;AACA;AACA,IAAI,gIAAgI;AACpI;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,YAAY;AACxB;;AAEA;AACA,gBAAgB,2CAA2C;AAC3D;AACA;AACA;;;;;;;;;;;;;AChEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEwE;;AAExE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iCAAiC;AAC5C;AACe;AACf;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM,oFAAoF;AAC1F;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB;AACA,YAAY,mFAAa;AACzB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,EAAE;AACF;;;;;;;;;;;;;ACjDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE4C;AACgC;AACV;AACM;;AAExE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,kCAAkC;AAClC;AACA,yCAAyC,kDAAkD;AAC3F,yBAAyB,wCAAwC;AACjE,2CAA2C,qEAAqE;AAChH;AACA;AACA;AACe,6BAA6B,sDAAa;AACzD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,sBAAsB,gFAAU,GAAG,oBAAoB;AACvD;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD,cAAc;AAC9D;AACA,YAAY,OAAO;AACnB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;;AAEA,gCAAgC,qFAAe;;AAE/C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;;;;;;;;;;;;;AC1JA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE4E;AACxB;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,mDAAmD;AAC9F,kBAAkB,uCAAuC;AACzD,wEAAwE;AACxE;AACA;AACA;AACA,+CAA+C,uCAAuC;AACtF,0CAA0C,uCAAuC;AACjF,WAAW,mDAAmD;AAC9D;AACA;AACA,cAAc,iCAAiC;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA,4BAA4B,qBAAqB;AACjD;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kEAAkE,wCAAwC;AAC1G,wDAAwD,0CAA0C;AAClG;AACA;AACA;AACA,sBAAsB;AACtB;AACA,sBAAsB;AACtB;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,iDAAiD,0BAA0B;AAC3E;AACA,YAAY,OAAO,2DAA2D,wCAAwC;AACtH;AACA;AACA;;AAEA;AACA,4CAA4C,sBAAsB;AAClE;AACA;AACA;;AAEA;AACA,kDAAkD,qBAAqB,OAAO,qBAAqB;AACnG;AACA,YAAY,OAAO,mDAAmD,qBAAqB;AAC3F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iFAAG,UAAU,qFAAe;;AAE5B;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,gCAAgC;AAC7F,IAAI,mDAAmD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,gDAAgD,uDAAuD;AACvG,IAAI,6DAA6D;AACjE;AACA;AACA;AACA,2CAA2C,kEAAkE;AAC7G,mEAAmE,uDAAuD;AAC1H,IAAI,iEAAiE;AACrE,+CAA+C;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,YAAY,MAAM,iBAAiB;AAChD;AACA,8CAA8C,+DAA+D;AAC7G,IAAI,YAAY,MAAM,iBAAiB;AACvC;AACA,2EAA2E,YAAY;AACvF;AACA,IAAI,iBAAiB;AACrB,gCAAgC,qEAAqE;AACrG;AACA;AACA,WAAW,iCAAiC;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2BAA2B;AACvC;;AAEA;AACA;AACA,IAAI,wDAAwD;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,wFAAwF;AAC5F;AACA;AACA;AACA,YAAY,iBAAiB;AAC7B;;AAEA;AACA,mCAAmC,mBAAmB;AACtD;AACA;AACA,mDAAmD,+DAA+D;AAClH;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA,sEAAsE,mBAAmB,MAAM,YAAY;AAC3G;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA,wFAAwF,kCAAkC;AAC1H;AACA;AACA;AACA,YAAY,QAAQ;AACpB;;AAEA;AACA;AACA;AACA,aAAa,2CAA2C;AACxD;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnSA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEuG;;AAEjC;AAClB;;AAEpD;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA,YAAY,6DAA6D;AACzE,YAAY,iBAAiB;AAC7B,UAAU,yDAAyD;AACnE;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,8DAA8D;AAC3E;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,0EAA0E,gCAAgC;AAC1G;AACA;AACA,YAAY,gBAAgB,gCAAgC,yDAAyD;AACrH,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA,8BAA8B,6EAA6E;AAC3G;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,aAAa,mFAAa,4BAA4B,qBAAqB;AAC3E;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAgB,gCAAgC,yDAAyD;AACrH,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,wBAAwB,sBAAsB;AAC1D,QAAQ,iEAAiE;AACzE,2CAA2C,mBAAmB;AAC9D,YAAY,wBAAwB;AACpC;AACA,cAAc,2CAA2C;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA,uDAAuD,sCAAsC;AAC7F;AACA;AACA,uBAAuB,6DAA6D;AACpF;AACA;AACA;AACA;AACA;AACA,OAAO,uGAAuG;AAC9G;AACA;AACA,cAAc,eAAe;AAC7B;AACA;;AAEA;AACA,kBAAkB,6GAAyB,eAAe,0BAA0B;;AAEpF,8BAA8B,mFAAa,sBAAsB,0BAA0B;AAC3F;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,WAAW;AACX;AACA;AACA,gBAAgB,OAAO;AACvB;AACA,oBAAoB,6GAAyB;AAC7C;AACA,SAAS,4BAA4B;;AAErC;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB;AACA,iBAAiB,mFAAa;AAC9B;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB;AACA,iBAAiB,mFAAa;AAC9B;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,MAAM;AACN;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,mCAAmC;AAC/C;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC,oDAAoD;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,uBAAuB,8EAA8E;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uEAAuE;AAC9F;AACA;AACA,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA,aAAa,mFAAa;AAC1B;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA,iFAAG,oBAAoB,kFAAY;;;;;;;;;;;;;ACjbnC;AAAe,4V;;;;;;;;;;;;ACAf;AAAe,kT;;;;;;;;;;;;ACAf;AAAe,4Z;;;;;;;;;;;;ACAf;AAAe,sjB;;;;;;;;;;;;ACAf;AAAe,oQ;;;;;;;;;;;;ACAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEgE;AAC+B;AACR;AACvC;AACQ;AAC0B;AACI;AACJ;AACM;AACN;AAC9B;AACd;AACkC;AACwB;;AAEhG;AACA,QAAQ,4DAA4D;AACpE,0DAA0D,8DAA8D;AACxH,YAAY,2CAA2C;AACvD;AACA;AACA,IAAI,wFAAwF;AAC5F;AACA;AACA;AACA;AACA;AACA,oCAAoC,2DAA2D;AAC/F;AACA,IAAI,qCAAqC;AACzC;AACA,iBAAiB,4EAA4E;AAC7F;AACA;AACA;AACA,IAAI,wFAAwF;AAC5F;AACA;AACA;AACA;AACA;AACA;AACe,4BAA4B,kFAAM;AACjD;AACA;AACA;AACA;AACA,KAAK,wFAAwF;AAC7F;AACA;AACA,YAAY,mBAAmB;AAC/B;AACA,KAAK,wFAAwF;AAC7F,YAAY,6CAA6C;AACzD;AACA;AACA;;AAEA,OAAO,4DAAS;AAChB;AACA,GAAG,8GAAmB;AACtB;;AAEA;AACA,gBAAgB,iGAAc;;AAE9B;;AAEA;;AAEA,4BAA4B,sGAAiB;;AAE7C;;AAEA,mBAAmB,4DAAmB;AACtC,gBAAgB,wDAAe;;AAE/B,EAAE,sGAAY;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK,kGAAgB;AACrB;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sFAAsF;AACnG;AACA;AACA;AACA;AACA;AACA,KAAK,2CAA2C;AAChD;AACA;AACA;AACA,KAAK,qFAAqF;AAC1F,KAAK,yEAAyE;AAC9E,mBAAmB,uEAAuE;AAC1F;AACA,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,wFAAwF;AACvH;AACA,YAAY,6CAA6C;AACzD,cAAc,QAAQ;AACtB;AACA,gDAAgD;AAChD;AACA,yBAAyB,4DAAS;;AAElC;AACA;AACA,cAAc,oFAAa;AAC3B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,iBAAiB,oFAAa;AAC9B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,kFAAG,iBAAiB,8FAAY;AAChC,kFAAG,iBAAiB,iGAAe;;AAEnC;AACA,QAAQ,4DAAS,0BAA0B,oGAAkB;AAC7D;;;;;;;;;;;;;ACpPA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEoE;AACmC;AACnB;;AAEpF;AACA;AACA;AACA;AACA;AACe,8BAA8B,oFAAQ;AACrD;AACA;AACA;AACA,YAAY,iCAAiC;AAC7C,YAAY,6CAA6C;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,6CAA6C;AAC3D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,EAAE,6GAA0B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG,yGAAiB;AACpB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;;;;;AC5IA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE4E;AACyB;;AAErG;AACA,wCAAwC,4EAA4E;AACpH;AACA;AACA;AACe,kCAAkC,wFAAY;AAC7D;AACA;AACA;AACA,YAAY,2BAA2B,aAAa,8CAA8C;AAClG,YAAY,6BAA6B;AACzC,YAAY,YAAY;AACxB,KAAK,yDAAyD;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,sBAAsB,yGAAoB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC9CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEoD;AACwB;AACJ;;AAE9B;;AAEwB;AACP;;AAEG;AACoB;;AAEtB;AAChB;AACY;;AAEhB;;AAExC;AACA;AACA,iFAAiF;AACjF,QAAQ,8BAA8B,cAAc;AACpD;AACA;AACA,MAAM,6EAA6E;AACnF;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA,sBAAsB,yBAAyB,GAAG;AAClD;AACA;AACA;AACe;AACf;AACA;AACA;AACA,YAAY,gCAAgC;AAC5C,YAAY,6CAA6C;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,cAAc,wDAAwD;AACtE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,oBAAoB,0DAAM;;AAE1B;AACA,sCAAsC,sBAAsB;AAC5D;AACA;AACA,cAAc;AACd;AACA,gCAAgC,sEAAkB;AAClD;AACA,GAAG;AACH,8CAA8C,8EAAU,KAAK,qBAAqB;;AAElF;AACA,oCAAoC,sBAAsB;AAC1D;AACA;AACA,cAAc;AACd;AACA,8BAA8B,oEAAgB;AAC9C;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,0BAA0B,sDAAY;;AAEtC;AACA;AACA,UAAU,oBAAoB;AAC9B;AACA;AACA;AACA,cAAc;AACd;AACA,yBAAyB,6DAAkB;;AAE3C;AACA;AACA;AACA;AACA;AACA,oCAAoC,6EAAW,KAAK,qBAAqB;AACzE,uCAAuC,wFAAsB,KAAK,qBAAqB;AACvF,gDAAgD,wFAAsB,KAAK,qBAAqB;;AAEhG;;AAEA;AACA;AACA;AACA;AACA,GAAG,GAAG,qBAAqB;AAC3B;;AAEA;AACA,4EAA4E,0BAA0B;AACtG,sBAAsB,gCAAgC;AACtD;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA,sFAAsF;AACtF,cAAc,OAAO;AACrB;AACA;AACA,SAAS,oCAAoC;;AAE7C;AACA;AACA,2EAA2E;AAC3E;AACA,eAAe,WAAW;AAC1B;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;;AAEA;;AAEA,0DAA0D,0BAA0B;AACpF;AACA;;AAEA;AACA;;AAEA;AACA,sCAAsC,0DAA0D;AAChG,KAAK,oFAAoF;AACzF,iBAAiB,0BAA0B,uBAAuB,gCAAgC;AAClG;AACA,YAAY,0FAA0F;AACtG;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sCAAsC,wDAAwD;AAC9F,KAAK,oFAAoF;AACzF,4BAA4B,0BAA0B;AACtD,KAAK,kFAAkF;AACvF;AACA,YAAY,0FAA0F;AACtG;AACA,cAAc,qDAAqD;AACnE;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,qDAAU;AAC/B,mCAAmC,8DAAoB;;AAEvD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2CAA2C,gCAAgC;AAC3E,sBAAsB,iDAAiD;AACvE,mDAAmD,oDAAoD;AACvG;AACA,6BAA6B,sEAAsE;AACnG;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA,2BAA2B,4CAA4C,GAAG;AAC1E;AACA;AACA,YAAY,8BAA8B;AAC1C;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,4CAA4C,4CAA4C;AACxF,+CAA+C,uCAAuC;AACtF,gBAAgB,oDAAoD;AACpE;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;;AAEA;AACA;AACA,2BAA2B;AAC3B,GAAG;AACH;AACA;;AAEA;AACA;AACA,0EAA0E;AAC1E;AACA,eAAe,YAAY;AAC3B;AACA,oBAAoB,0CAA0C;AAC9D;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA,mCAAmC,gCAAgC;AACnE,sBAAsB,iDAAiD;AACvE;AACA,KAAK,qEAAqE;AAC1E;AACA;AACA,SAAS,aAAa;AACtB;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA,0BAA0B,4CAA4C,GAAG;AACzE;AACA,YAAY,8BAA8B;AAC1C;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB,GAAG;AACH;AACA;;AAEA;AACA;AACA,yEAAyE;AACzE;AACA,eAAe,WAAW;AAC1B;AACA,mBAAmB,0CAA0C;AAC7D;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,oCAAoC,gCAAgC;AACpE,qBAAqB,wBAAwB;AAC7C;AACA;AACA,YAAY,OAAO;AACnB,YAAY,mDAAmD;AAC/D,qCAAqC,yEAAyE;AAC9G,cAAc,sDAAsD;AACpE;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qCAAqC,sDAAsD;AAC3F,KAAK,kFAAkF;AACvF,KAAK,iDAAiD,cAAc,4DAA4D;AAChI;AACA;AACA,KAAK,uFAAuF;AAC5F;AACA,YAAY,wFAAwF;AACpG;AACA,YAAY,mDAAmD;AAC/D,qCAAqC,yEAAyE;AAC9G,cAAc,sDAAsD;AACpE;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,eAAe;AACf,eAAe;AACf,gBAAgB;AAChB;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,0BAA0B,0BAA0B,4BAA4B;AACvG,wFAAwF;AACxF;AACA;AACA,4CAA4C,YAAY;AACxD,SAAS,4DAA4D;AACrE;AACA;AACA;AACA;;AAEA,iFAAG,kBAAkB,qFAAe;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB,qDAAU;;AAEhC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACheA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE8D;AAC9B;AACU;AACwB;AACoE;;AAE1D;AACxB;AACiB;;AAErE,iCAAiC,iCAAiC;;AAElE;AACA,uEAAuE,qCAAqC;AAC5G,sDAAsD,mCAAmC;AACzF;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA,YAAY,gCAAgC;AAC5C,YAAY,6CAA6C;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,kBAAkB,kDAAI;;AAEtB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,oBAAoB,0DAAM;;AAE1B;AACA,kEAAkE,6BAA6B;AAC/F;AACA;AACA,cAAc,+DAA+D;AAC7E;AACA,gCAAgC,sEAAkB;AAClD;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,GAAG,sBAAsB;;AAE5B;AACA;AACA,GAAG,GAAG,qBAAqB;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG,GAAG,kBAAkB;;AAExB;AACA,wDAAwD,wFAAsB;;AAE9E;AACA,8CAA8C,8EAAU,KAAK,qBAAqB;AAClF,wCAAwC,0EAAM,KAAK,kBAAkB;;AAErE;AACA,2CAA2C,mFAAe,KAAK,kBAAkB;AACjF,2CAA2C,yFAAqB,KAAK,kBAAkB;AACvF,2CAA2C,6FAAyB,KAAK,kBAAkB;;AAE3F,YAAY,uEAAuE;AACnF,MAAM,yEAAyE;AAC/E;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,iEAAmB;;AAE3C;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA,6BAA6B,GAAG,qBAAqB;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iFAAG,qBAAqB,qFAAe;;;;;;;;;;;;;ACnJvC;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEwE;AAC5B;AACI;;AAEhD;AACA;AACA;AACA,6BAA6B,gFAAgF;AAC7G;AACA;AACA;AACA,IAAI,sEAAsE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,iEAAiE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,2FAA2F;AACjG;AACA,MAAM,+FAA+F;AACrG;AACA,MAAM,mGAAmG;AACzG;AACA;AACe;AACf;AACA;AACA;AACA,YAAY;AACZ,2EAA2E;AAC3E,YAAY;AACZ,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,kCAAkC,kEAAkE;;AAEpG;AACA,kCAAkC,+DAA+D;AACjG;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ,+DAA+D;AAC/D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;AACA;AACA;AACA;AACA;;AAEA,kCAAkC,uDAAuD;AACzF;;AAEA;AACA;AACA;AACA;AACA,KAAK,oFAAoF;AACzF;AACA;AACA,SAAS,+EAA+E;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,OAAO,qGAAqG;AAC5G,OAAO,yGAAyG;AAChH,OAAO,6GAA6G;AACpH,OAAO,mGAAmG;AAC1G,OAAO,uGAAuG;AAC9G;AACA;AACA;AACA,OAAO,iGAAiG;AACxG,OAAO,qGAAqG;AAC5G,OAAO,yGAAyG;AAChH,OAAO,+FAA+F;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA,mCAAmC;AACnC,SAAS,qEAAqE;AAC9E;AACA;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0CAA0C,gCAAgC;AAC1E;AACA;AACA,0CAA0C,6DAA6D;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,SAAS,8DAA8D;AACvE;AACA,YAAY,wDAAwD;AACpE;AACA;AACA;AACA;;AAEA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4CAA4C,gCAAgC;AAC5E;AACA;AACA,4CAA4C,sDAAsD;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,mHAAmH,aAAa;AAChI;AACA,SAAS,8DAA8D;AACvE;AACA,YAAY,wDAAwD;AACpE;AACA;AACA;AACA;;AAEA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,yDAAyD,wDAAwD;AACjH,gCAAgC;AAChC;AACA;AACA;AACA,8CAA8C,+BAA+B;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,kBAAkB,4BAA4B,qDAAqD,wBAAwB;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,uBAAuB,qDAAqD,uBAAuB;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,uBAAuB;AAChC;AACA;AACA;AACA,QAAQ,gDAAgD,gBAAgB,gDAAgD;AACxH;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,cAAc;AAC1B,YAAY,cAAc;AAC1B,YAAY,4FAA4F;AACxG;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY;AACZ,gEAAgE;AAChE,YAAY,QAAQ;AACpB;AACA,4BAA4B,gCAAgC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;;AAEA,mCAAmC,wDAAe,sBAAsB,sDAAa;;AAErF;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA,cAAc,EAAE;AAChB;AACA,cAAc,8DAA8D;AAC5E;AACA;AACA,cAAc,4FAA4F;AAC1G;AACA,yEAAyE,gDAAgD;AACzH;AACA,cAAc,uCAAuC;AACrD;;AAEA;AACA;AACA;AACA,WAAW,wDAAwD;AACnE,aAAa,MAAM;AACnB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA,QAAQ;;AAER;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;;;;;;;;;;;;ACroBA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACe;AACf;AACA;AACA;AACA,YAAY;AACZ,gEAAgE;AAChE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA8C,0EAA0E;AACxH;AACA;AACA,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE2C;AACR;AACmC;AAClB;AACjB;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,+CAA+C;AACvG;AACA;AACA;AACA,iFAAiF,6CAA6C;AAC9H;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,QAAQ;AACR,QAAQ,+FAA+F;AACvG,mCAAmC,2EAA2E;AAC9G;AACA;AACA;AACA;AACA,wDAAwD,yDAAyD;AACjH;AACA,MAAM,qFAAqF;AAC3F,MAAM,wFAAwF;AAC9F;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,IAAI,gFAAgF;AACpF;AACA;AACA,IAAI,gFAAgF;AACpF;AACA;AACA;AACA,IAAI,4EAA4E;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACe;AACf;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,uBAAuB,wDAAM,GAAG,mBAAmB;AACnD;;AAEA;AACA,WAAW,qDAAqD;AAChE;AACA,YAAY,kCAAkC;AAC9C,YAAY,sDAAsD;AAClE,YAAY,iDAAiD;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,oDAAK;AAC7B,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAiC,0CAA0C;AAC3E,KAAK,gDAAgD;AACrD;AACA;AACA;AACA,YAAY,gCAAgC;AAC5C,YAAY,iDAAiD;AAC7D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,oDAAK;AAC1B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,MAAM;AAC1C;AACA;;AAEA;AACA;;AAEA;AACA,sDAAsD,iCAAiC;AACvF;AACA,YAAY,sCAAsC;AAClD,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,iDAAiD;AAC7D;AACA;AACA;;AAEA,gCAAgC,mBAAmB;;AAEnD;AACA;;AAEA;AACA;AACA;AACA,yCAAyC,uCAAuC;AAChF;AACA;AACA,YAAY,gCAAgC;AAC5C,YAAY,OAAO;AACnB,YAAY,EAAE;AACd,YAAY,EAAE;AACd,YAAY,iDAAiD;AAC7D;AACA;AACA;;AAEA;AACA,sFAAsF,MAAM;;AAE5F;AACA;AACA;AACA,qBAAqB,oDAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mCAAmC,MAAM;AACzC;;AAEA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B,wDAAwD;AACpF;AACA;AACA;AACA;AACA,YAAY,wCAAwC;AACpD,YAAY,sDAAsD;AAClE,YAAY,iDAAiD;AAC7D;AACA;AACA;;AAEA;AACA;;AAEA,2BAA2B,YAAY;;AAEvC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kCAAkC,iCAAiC;AACnE;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,gCAAgC;AAC5C,YAAY,iDAAiD;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,wDAAU;AACnC;;AAEA;;AAEA,yBAAyB,0BAA0B;;AAEnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,cAAc,oDAAK;;AAEpC;AACA;;AAEA;AACA;;AAEA;AACA,+CAA+C,uCAAuC;AACtF;AACA;AACA,YAAY,OAAO;AACnB,YAAY,gCAAgC;AAC5C,YAAY,iDAAiD;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,4CAA4C,0BAA0B;;AAEtE;AACA;;AAEA;AACA,aAAa,+DAA+D;AAC5E;AACA;AACA;AACA,YAAY,gCAAgC;AAC5C,cAAc,yDAAyD;AACvE;AACA;AACA,yBAAyB,wDAAU;;AAEnC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,+DAA+D;AAC5E;AACA;AACA,YAAY,gCAAgC;AAC5C,YAAY,OAAO;AACnB,cAAc,yDAAyD;AACvE;AACA;AACA,yBAAyB,wDAAU;;AAEnC;AACA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,+DAA+D;AAC5E;AACA;AACA,YAAY,wCAAwC;AACpD,YAAY,uDAAuD;AACnE,cAAc,yDAAyD;AACvE;AACA;AACA,yBAAyB,wDAAU;;AAEnC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qDAAqD,gDAAgD;AACrG,QAAQ,oDAAoD;AAC5D;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,8BAA8B;AAC1C,YAAY,gCAAgC;AAC5C,YAAY,kEAAkE;AAC9E;AACA;;AAEA;AACA;AACA;AACA;AACA,qDAAqD,gDAAgD;AACrG,YAAY,oDAAoD;AAChE;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,sCAAsC;AAClD,YAAY,OAAO;AACnB,YAAY,kEAAkE;AAC9E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,gDAAgD;AACjG,YAAY,oDAAoD;AAChE;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,sFAAsF;AAClG;AACA,YAAY,gCAAgC;AAC5C,YAAY,OAAO;AACnB,YAAY,EAAE;AACd,YAAY,EAAE;AACd,YAAY,kEAAkE;AAC9E;AACA;;AAEA;AACA,eAAe,wDAAwD;AACvE;AACA;AACA,YAAY,wCAAwC;AACpD,YAAY,kEAAkE;AAC9E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,sEAAsE;AAClF;AACA,YAAY,gCAAgC;AAC5C;AACA,YAAY,gCAAgC;AAC5C,YAAY,OAAO;AACnB,YAAY,kEAAkE;AAC9E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,gCAAgC;AAC5C,YAAY,OAAO;AACnB,YAAY,kEAAkE;AAC9E;AACA;AACA;;AAEA,iFAAG,sBAAsB,kFAAY;;AAErC;AACA;AACA;AACA,WAAW,sCAAsC;AACjD,WAAW,4CAA4C;AACvD,WAAW,uCAAuC;AAClD,aAAa;AACb;AACA;AACA;AACA,mBAAmB;AACnB;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA,sDAAsD;AACtD,4CAA4C;AAC5C;AACA;AACA;AACA;;AAEA;AACA,QAAQ,qEAAqE;AAC7E;AACA,YAAY,+DAA+D;AAC3E;;AAEA;AACA;AACA,0DAA0D,gFAAgF;AAC1I;AACA,YAAY,yDAAyD;AACrE;;AAEA;AACA,QAAQ,6CAA6C;AACrD;AACA,YAAY,uCAAuC;AACnD;;AAEA;AACA,QAAQ,uDAAuD;AAC/D;AACA,YAAY,iDAAiD;AAC7D;;;;;;;;;;;;;ACxpBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA,qDAAqD,qEAAqE;AAC1H;AACA;AACA;;AAEwC;AACQ;AACJ;;AAEgB;AACD;AACP;;AAEd;AACkC;;AAExE;AACA;AACA;AACA;AACA;AACe,8BAA8B,0DAAiB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,SAAS,4EAA4E;AACrF;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,gEAAgE;AAC5E,sCAAsC;AACtC;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,QAAQ;AACR;AACA,MAAM;AACN;AACA,SAAS,4EAA4E;AACrF;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,cAAc,8DAA8D,cAAc;AACtG;AACA,YAAY,uEAAuE;AACnF,8CAA8C;AAC9C;AACA;AACA,YAAY,uCAAuC;AACnD,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,sCAAsC,uDAAuD;AAC7F,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA,SAAS,4EAA4E;AACrF;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,cAAc,8DAA8D,wBAAwB;AAChH;AACA,YAAY,uBAAuB,0CAA0C,aAAa;AAC1F,8CAA8C,aAAa;AAC3D;AACA;AACA,MAAM,aAAa;AACnB,YAAY,uCAAuC;AACnD,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,MAAM;AACN;AACA;AACA;AACA,KAAK,6DAA6D;AAClE,KAAK,wFAAwF;AAC7F,KAAK,qFAAqF;AAC1F;AACA;AACA;AACA;AACA;AACA,SAAS,4EAA4E;AACrF;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,gEAAgE;AAC5E;AACA,YAAY,uCAAuC;AACnD,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK,mEAAmE;AACxE;AACA,gCAAgC,2DAA2D;AAC3F;AACA;AACA;AACA,KAAK,2DAA2D;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,0BAA0B,qBAAqB,EAAE;AAC9G;AACA;AACA;AACA,aAAa,yBAAyB;AACtC;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,KAAK,wFAAwF;AAC7F,kDAAkD,qFAAqF;AACvI;AACA,SAAS,4EAA4E;AACrF;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,sEAAsE;AAClF;AACA,YAAY,uCAAuC;AACnD,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI,qEAAqE;AACzE;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACO;AACP;AACA;AACA;;AAEA;AACA,kEAAkE,kBAAkB;;AAEpF;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,kFAAkF;AACzG,oBAAoB,wFAAwF;AAC5G;AACA;AACA,WAAW,iDAAiD;AAC5D,WAAW,6DAA6D;AACxE,aAAa;AACb;AACO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,6EAA6E;AAC7E,SAAS,4EAA4E;AACrF;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,kDAAkD,iCAAiC;AACnF;AACA;;AAEA;AACA,yEAAyE,8DAA8D;AACvI,MAAM,4EAA4E;AAClF;AACA,IAAI,8EAA8E;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,+DAA+D;AAC5E;AACA;AACA,aAAa,SAAS;AACtB;AACO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI,8DAA8D;AAClE,IAAI,mFAAmF;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,aAAa,SAAS;AACtB;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,WAAW;AACtB;AACA;AACA;AACA,IAAI,uGAAuG;AAC3G,gDAAgD,yCAAyC;AACzF;AACA;AACA;AACA;AACA,IAAI,qEAAqE;AACzE;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,4BAA4B,wDAAc,yBAAyB,gEAAiB;AACpF;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI,iGAAiG;AACrG,gDAAgD,yCAAyC;AACzF;AACA;AACA;AACA,IAAI,qEAAqE;AACzE;AACA;AACA;AACA;AACA;AACA,0DAA0D,qDAAqD;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI,6DAA6D;AACjE;AACA,4FAA4F,qBAAqB;AACjH;AACA;AACA;AACA,wEAAwE,iEAAiE;AACzI;AACA;AACA,WAAW,gDAAgD;AAC3D;AACA,aAAa,SAAS;AACtB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,8EAA8E;AAC9E;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,qEAAqE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK;AACL;AACA,WAAW,SAAS;AACpB,mEAAmE,sDAAsD;AACzH;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAAgC,0DAA0D;AAC1F,UAAU,6GAA6G;AACvH;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,mCAAmC,0BAA0B;AAC7D,QAAQ;AACR;AACA,6DAA6D;AAC7D,WAAW,qDAAqD;AAChE,OAAO;AACP,mBAAmB,sDAAsD;AACzE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,wDAAwD,0BAA0B;AAClF,SAAS;AACT;AACA,QAAQ;AACR;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,2DAA2D;AAC/D,QAAQ,uFAAuF;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,6EAA6E;AAClH,cAAc,iEAAiE;AAC/E;AACA,WAAW,sEAAsE;AACjF,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA,+BAA+B,wDAAc,yBAAyB,gEAAiB;AACvF;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA4B,wDAAc,yBAAyB,gEAAiB;AACpF;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI,4EAA4E;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,8EAA8E;AAC/G,QAAQ,iEAAiE;AACzE;AACA,WAAW,sEAAsE;AACjF,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA,+BAA+B,sDAAY;AAC3C;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAwB,oDAAU;AAClC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uCAAuC,6EAA6E;AACpH,uCAAuC,kEAAkE;AACzG;AACA;AACA,IAAI,4EAA4E;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sEAAsE;AACjF,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,8EAA8E;AACtF;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,gEAAgE;AAC3E,qCAAqC;AACrC;AACA,aAAa,SAAS;AACtB;AACA,UAAU,2DAAS;;AAEnB;;AAEA;AACA,0EAA0E,iDAAiD;AAC3H;AACA;;AAEA;AACA;AACA,QAAQ,kFAAkF;AAC1F;AACA,WAAW,OAAO;AAClB,WAAW,cAAc,8DAA8D,cAAc;AACrG;AACA,WAAW,uEAAuE;AAClF,6CAA6C;AAC7C;AACA;AACA,WAAW,uCAAuC;AAClD,aAAa,SAAS;AACtB;AACA,UAAU,2DAAS;;AAEnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;;AAEA;AACA,qDAAqD,iDAAiD;AACtG;AACA;;AAEA;AACA;AACA,QAAQ,sFAAsF;AAC9F;AACA,WAAW,OAAO;AAClB,WAAW,cAAc,8DAA8D,wBAAwB;AAC/G;AACA,WAAW,uBAAuB,0CAA0C,aAAa;AACzF,6CAA6C,aAAa;AAC1D;AACA;AACA,KAAK,aAAa;AAClB,WAAW,uCAAuC;AAClD,aAAa,SAAS;AACtB;AACA,UAAU,2DAAS;;AAEnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;;AAEA;AACA,gEAAgE,iDAAiD;AACjH;AACA;;AAEA;AACA;AACA,QAAQ,4EAA4E;AACpF;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,gEAAgE;AAC3E;AACA,WAAW,uCAAuC;AAClD,aAAa,SAAS;AACtB;AACA,UAAU,2DAAS;;AAEnB;;AAEA;AACA,+EAA+E,iDAAiD;AAChI,kFAAkF,iDAAiD;AACnI;AACA;;AAEA;AACA;AACA,QAAQ,4EAA4E;AACpF;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,sEAAsE;AACjF;AACA,WAAW,uCAAuC;AAClD,aAAa,SAAS;AACtB;AACA;AACA,6EAA6E,iDAAiD;AAC9H,gFAAgF,iDAAiD;AACjI,kFAAkF,iDAAiD;AACnI;AACA;;AAEA,yCAAyC,6DAA6D;AACtG;AACA;AACA,WAAW,gEAAgE;AAC3E,WAAW,6BAA6B;AACxC,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,sDAAsD,6DAA6D;AACnH;AACA,WAAW,uDAAuD;AAClE,WAAW,iDAAiD;AAC5D,WAAW,6BAA6B;AACxC,aAAa;AACb;AACA;AACA;AACA,2BAA2B;AAC3B;;AAEA;AACA,qCAAqC;;AAErC;AACA;AACA,EAAE;AACF;AACA,+CAA+C,8DAAoB;AACnE;;AAEA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,mCAAmC,wCAAwC;AAC3E,EAAE;AACF,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA,oCAAoC,4CAA4C;AAChF;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI,kFAAkF;AACtF;AACA;AACA,uBAAuB,6EAA6E;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA,cAAc,sBAAsB;AACpC,cAAc,6EAA6E;AAC3F;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA,cAAc,OAAO;AACrB,OAAO,6EAA6E;AACpF,IAAI,6EAA6E;AACjF;AACA;AACA,cAAc,OAAO;AACrB,OAAO,6EAA6E;AACpF;AACA;AACA;;;;;;;;;;;;;ACh1CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE8C;AACN;;AAEI;AACN;AACF;;AAEkC;AAClB;;AAEpD;AACA,iDAAiD,oDAAoD;AACrG,IAAI,0CAA0C;AAC9C;AACA;AACA,IAAI,kGAAkG;AACtG;AACA;AACA,iCAAiC,gEAAgE;AACjG;AACA;AACA,IAAI,iGAAiG;AACrG,IAAI,iGAAiG;AACrG;AACA,8BAA8B;AAC9B,QAAQ,6EAA6E;AACrF;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,sDAAsD,uDAAuD;AAC7G;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,oCAAoC;AAC7D;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG,GAAG,kBAAkB;;AAExB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,uDAAa;AACrC,GAAG,GAAG,kBAAkB;AACxB;;AAEA;AACA;AACA,SAAS,2EAA2E;AACpF,KAAK,yEAAyE;AAC9E;AACA;AACA,YAAY,oCAAoC;AAChD,YAAY,mCAAmC;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,sDAAsD;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mCAAmC;AAC/C;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,wDAAwD;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,oCAAoC;AAChD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,sDAAsD;AAC9F;AACA;AACA,YAAY,mCAAmC;AAC/C,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,mCAAmC;AAC/C,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,6CAA6C;AAC5D;AACA,YAAY,mCAAmC;AAC/C,cAAc,8CAA8C;AAC5D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,oCAAoC;AAChD,cAAc,6CAA6C;AAC3D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,+BAA+B;AAC3C,cAAc,gCAAgC;AAC9C;AACA;AACA,aAAa,oDAAU;AACvB;;AAEA;AACA;AACA;AACA,YAAY,gCAAgC;AAC5C,cAAc,+BAA+B;AAC7C;AACA;AACA,aAAa,mDAAS;AACtB;;AAEA;AACA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,cAAc,sCAAsC;AACpD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,sCAAsC;AAClD,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB;AACA,cAAc,qCAAqC;AACnD;AACA,2CAA2C,mBAAmB;AAC9D;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,8CAA8C;AAC5D;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mCAAmC;AAC/C,YAAY,OAAO;AACnB,YAAY,mCAAmC;AAC/C,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,gBAAgB;AAClC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,yDAAyD;AACnE;AACA,mBAAmB,6CAA6C;AAChE,KAAK,6CAA6C;AAClD,mBAAmB,wDAAwD;AAC3E,0BAA0B,iDAAiD;AAC3E,8BAA8B,iDAAiD;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mCAAmC;AAC/C,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mCAAmC;AAC/C,YAAY,OAAO;AACnB,cAAc,qCAAqC;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,sDAAY;AAC1B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gDAAgD,sDAAY;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,oCAAoC;AACpC;AACA;AACA,YAAY,qCAAqC;AACjD,cAAc,qCAAqC;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B,kDAAQ;AACrC,cAAc,sDAAY;AAC1B,GAAG,gCAAgC,kDAAQ;AAC3C,cAAc,sDAAY;AAC1B;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iDAAiD,2DAA2D;AAC5G,eAAe,yDAAyD;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,yDAAyD,yDAAyD;AAClH,YAAY,uCAAuC;AACnD;;AAEA;AACA,gEAAgE,uEAAuE;AACvI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,0DAA0D,2DAA2D;AACrH,YAAY,uCAAuC;AACnD;AACA;;AAEA,iFAAG,UAAU,kFAAY;;;;;;;;;;;;;ACvrBzB;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE2C;;AAE3C;AACA,4CAA4C,gDAAgD;AAC5F;AACA;AACA;AACA;AACA,iCAAiC,qEAAqE;AACtG,aAAa,yDAAyD;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA,IAAI,8EAA8E;AAClF;AACA,IAAI,gFAAgF;AACpF,QAAQ,2EAA2E;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,IAAI;AAClB;AACA;;AAEA;AACA,eAAe,8CAA8C;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,IAAI;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,mDAAmD;AACnD,8DAA8D;AAC9D,iEAAiE;AACjE,wDAAwD;AACxD,gDAAgD;AAChD;AACA,YAAY,sGAAsG;AAClH;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA,uBAAuB,wDAAS;AAChC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,uDAAuD;AACvD,kEAAkE;AAClE,qEAAqE;AACrE,4DAA4D;AAC5D,oDAAoD;AACpD;AACA,YAAY,sGAAsG;AAClH;AACA,YAAY,OAAO;AACnB;AACA,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA,uBAAuB,wDAAS;AAChC;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,oDAAoD;AACpD,+DAA+D;AAC/D,kEAAkE;AAClE,yDAAyD;AACzD,iDAAiD;AACjD;AACA,YAAY,sGAAsG;AAClH;AACA,YAAY,OAAO;AACnB;AACA,cAAc,aAAa;AAC3B;AACA;AACA;AACA;;AAEA,uBAAuB,wDAAS;AAChC;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,sDAAsD;AACtD,iEAAiE;AACjE,oEAAoE;AACpE,2DAA2D;AAC3D,mDAAmD;AACnD;AACA,YAAY,sGAAsG;AAClH;AACA,YAAY,OAAO;AACnB,cAAc,aAAa;AAC3B;AACA;AACA;AACA;;AAEA,uBAAuB,wDAAS;AAChC;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA,qCAAqC,8CAA8C;AACnF;AACA;AACA;AACA;AACA;AACA,YAAY,wCAAwC;AACpD,cAAc,OAAO;AACrB;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,6DAA6D,8CAA8C;AAC3G;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,oCAAoC;AAChD,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;;;;;;;;;;;;;ACnUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE8C;AACN;AACM;AACE;;AAEwB;AACF;AAClB;;AAEpD;AACA,6CAA6C,mCAAmC;AAChF,qBAAqB,kFAAkF;AACvG,IAAI,yCAAyC;AAC7C,4BAA4B,mCAAmC,kBAAkB,gCAAgC;AACjH;AACA,uCAAuC,8CAA8C;AACrF;AACA;AACA;AACA;AACA,0DAA0D,6CAA6C;AACvG,IAAI;AACJ;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,qDAAqD;AACrF,kCAAkC,+CAA+C;AACjF,aAAa,gCAAgC;AAC7C;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,qCAAqC;AACjG;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,YAAY,6BAA6B;AACzC;AACA,+CAA+C,qBAAqB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,gBAAgB;AACpE;AACA;AACA;AACA;AACA,KAAK,GAAG,kBAAkB;AAC1B;AACA;AACA;AACA;AACA,2DAA2D,2BAA2B;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,GAAG,kBAAkB;AAC5B;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA,wCAAwC;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wFAAwF;AACpG;AACA,YAAY,kCAAkC;AAC9C,YAAY,mDAAmD;AAC/D,cAAc,sDAAsD;AACpE;AACA,KAAK,uFAAuF;AAC5F;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC,uDAAc;;AAEhD;AACA;;AAEA;AACA,SAAS,aAAa;;AAEtB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0CAA0C;;AAEzE;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA,wDAAwD,oDAAU;AAClE;AACA;AACA;AACA,OAAO,kDAAkD;AACzD;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;;AAEA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oDAAU;AACnC;;AAEA;AACA;;AAEA,qCAAqC,oDAAU;AAC/C;AACA;AACA;AACA;;AAEA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wCAAwC,sBAAsB,MAAM,4BAA4B;AAChG;AACA;AACA,YAAY,oCAAoC;AAChD,YAAY,oCAAoC;AAChD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,gBAAgB,yCAAyC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA,YAAY,6BAA6B;AACzC,YAAY,sCAAsC;AAClD;AACA,YAAY,gCAAgC;AAC5C;AACA,YAAY,8DAA8D;AAC1E;;AAEA;AACA,gBAAgB,mCAAmC;AACnD;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,2DAA2D;AAC3E;AACA;AACA;AACA;AACA;;AAEA,iFAAG,oBAAoB,kFAAY;;AAEnC;AACA;AACA;AACA,WAAW,kFAAkF;AAC7F,aAAa,6CAA6C;AAC1D;AACA;AACA;;AAEA;AACA,eAAe,oDAAU;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,oDAAU;AAC1C;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,yBAAyB,2DAAa;AACtC;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,aAAa,uDAAa;AAC1B;;AAEA;AACA;;AAEA;AACA,sDAAsD;AACtD,4CAA4C;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B,kDAAkD;AAC/E;AACA;AACA;AACA;AACA;AACA,WAAW,6BAA6B;AACxC,WAAW,sCAAsC;AACjD,aAAa,OAAO;AACpB,aAAa,qCAAqC;AAClD;AACA,aAAa,sCAAsC;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,6BAA6B;AACxC,WAAW,sCAAsC;AACjD,aAAa,OAAO;AACpB,aAAa,gCAAgC;AAC7C;AACA,aAAa,sCAAsC;AACnD;;AAEA;AACA,WAAW,+CAA+C;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sCAAsC;AACjD,WAAW,8BAA8B;AACzC,aAAa,YAAY;AACzB,aAAa,sCAAsC;AACnD,aAAa,oCAAoC;AACjD;AACA;;AAEA;AACA,oGAAoG,4BAA4B;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oCAAoC;AAC/C,aAAa;AACb;;AAEA;AACA;AACA,0DAA0D,8EAA8E;AACxI;AACA,YAAY,uDAAuD;AACnE;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,+EAA+E;AACnF;AACA;AACA,YAAY,OAAO;AACnB;;AAEA;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C;;AAEA;AACA,QAAQ,wCAAwC;AAChD;AACA,YAAY,kCAAkC;AAC9C;;;;;;;;;;;;;ACzoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEsC;AACE;AACY;;AAEd;AACU;;AAEhD;AACA,aAAa,mCAAmC,KAAK,sCAAsC;AAC3F,IAAI,iEAAiE;AACrE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACe,4BAA4B,0DAAiB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,+CAA+C;AACvD;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,sDAAsD,kDAAkD;AACxG;AACA,OAAO;AACP;AACA,SAAS,4EAA4E;AACrF;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,0CAA0C;AACtD;AACA,YAAY,oDAAoD;AAChE;AACA,YAAY,uCAAuC;AACnD,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,oDAAoD;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,gFAAgF;AACrF;AACA,0EAA0E,+CAA+C;AACzH;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,SAAS,4EAA4E;AACrF;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,0CAA0C;AACtD,YAAY,cAAc;AAC1B;AACA;AACA,YAAY,uCAAuC;AACnD,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,8EAA8E;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,+CAA+C;AACzH;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,aAAa,aAAa;AAC1B;AACA,MAAM;AACN;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,SAAS,4EAA4E;AACrF;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B;AACA;AACA,YAAY,uCAAuC;AACnD,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,qEAAqE;AAC1E;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,MAAM;AACN;AACA,SAAS,4EAA4E;AACrF;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,0CAA0C;AACtD,YAAY,gBAAgB;AAC5B;AACA,YAAY,uCAAuC;AACnD,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,wDAAwD;AACxD,uBAAuB,yCAAyC;AAChE,IAAI,oFAAoF;AACxF;AACA,qDAAqD,8CAA8C;AACnG;AACA;AACA;AACA,yBAAyB,oFAAoF;AAC7G;AACA,aAAa,SAAS,+BAA+B,qEAAqE;AAC1H,IAAI,kDAAkD;AACtD,IAAI,2EAA2E;AAC/E;AACO;AACP;AACA;AACA,6EAA6E,aAAa;AAC1F,UAAU,0BAA0B;;AAEpC;AACA;AACA;AACA;AACA;;AAEA;AACA,wDAAwD,mCAAmC,KAAK,oCAAoC;AACpI;AACA,aAAa,SAAS,EAAE,6CAA6C;AACrE;AACO;AACP;AACA;AACA;AACA;;AAEA;;AAEA,sBAAsB,oDAAU;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA,mEAAmE;AACnE,kBAAkB,iBAAiB,iEAAiE;AACpG,uBAAuB,4DAA4D;AACnF;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gCAAgC;AAC3C,WAAW,uCAAuC;AAClD,aAAa,SAAS,EAAE,iEAAiE;AACzF;AACO;AACP;AACA;AACA,6BAA6B,wDAAc;;AAE3C;;AAEA;AACA;AACA;;AAEA,iCAAiC,qCAAqC;;AAEtE;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA,QAAQ,0EAA0E;AAClF;AACA,WAAW,OAAO;AAClB,WAAW,0CAA0C;AACrD;AACA,WAAW,oDAAoD;AAC/D;AACA,WAAW,uCAAuC;AAClD,aAAa,SAAS;AACtB;AACA,UAAU,2DAAS;;AAEnB;;AAEA;AACA;;AAEA;AACA,wCAAwC,iDAAiD;AACzF;AACA;;AAEA;AACA;AACA,QAAQ,8EAA8E;AACtF;AACA,WAAW,OAAO;AAClB,WAAW,0CAA0C;AACrD,WAAW,cAAc;AACzB;AACA;AACA,WAAW,uCAAuC;AAClD,aAAa,SAAS;AACtB;AACA,UAAU,2DAAS;;AAEnB;;AAEA;;AAEA;AACA;;AAEA;AACA,wCAAwC,8CAA8C;AACtF;AACA;;AAEA;AACA;AACA,QAAQ,kFAAkF;AAC1F;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA,WAAW,uCAAuC;AAClD,aAAa,SAAS;AACtB;AACA,UAAU,2DAAS;;AAEnB;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,wCAAwC,8CAA8C;AACtF;AACA;;AAEA;AACA;AACA,QAAQ,wEAAwE;AAChF;AACA,WAAW,OAAO;AAClB,WAAW,0CAA0C;AACrD,WAAW,gBAAgB;AAC3B;AACA,WAAW,uCAAuC;AAClD,aAAa,SAAS;AACtB;AACA,UAAU,2DAAS;;AAEnB;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,YAAY;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA,mCAAmC,qDAAO;;AAE1C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,wBAAwB,oDAAU;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,oDAAoD;AAC/D,WAAW,6BAA6B;AACxC,WAAW,kCAAkC;AAC7C;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA,IAAI,gDAAgD;AACpD;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,sBAAsB;AACjC,WAAW,QAAQ;AACnB;AACA;AACA,qBAAqB,qDAAO;;AAE5B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4DAA4D,mCAAmC;;AAE/F;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,kGAAkG;AAClG;AACA;AACA,WAAW,gCAAgC;AAC3C,WAAW,OAAO;AAClB,WAAW,8DAA8D;AACzE,WAAW,QAAQ;AACnB;AACA,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA,uDAAuD,UAAU;AACjE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;;AAEA,gDAAgD,0BAA0B;AAC1E;AACA;;;;;;;;;;;;;ACxxBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEoC;AACoC;;AAExE;AACA,gDAAgD,kDAAkD;AAClG,IAAI,8CAA8C,MAAM,8EAA8E;AACtI;AACA;AACA,qCAAqC,4EAA4E;AACjH,sBAAsB,8EAA8E;AACpG,yBAAyB,oFAAoF;AAC7G,yCAAyC,kFAAkF;AAC3H;AACA,kCAAkC,aAAa,GAAG;AAClD,mCAAmC;AACnC,sCAAsC;AACtC,mCAAmC,aAAa,IAAI;AACpD,oCAAoC;AACpC,uCAAuC;AACvC,sCAAsC,aAAa,IAAI;AACvD,uCAAuC;AACvC,0CAA0C;AAC1C,qCAAqC,aAAa,IAAI;AACtD,sCAAsC;AACtC,yCAAyC;AACzC;AACe;AACf;AACA;AACA;AACA;AACA;AACA,qCAAqC,iDAAiD;AACtF,MAAM,4FAA4F;AAClG,UAAU,8CAA8C;AACxD,MAAM,8EAA8E;AACpF;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,UAAU,sDAAsD,GAAG,6CAA6C;AAChH,KAAK,6EAA6E;AAClF;AACA,6BAA6B,aAAa,GAAG;AAC7C,6BAA6B,qBAAqB,GAAG;AACrD,6BAA6B,oBAAoB,GAAG;AACpD,6BAA6B,kBAAkB,GAAG;AAClD,6BAA6B,sCAAsC,GAAG;AACtE,6BAA6B,4BAA4B,GAAG;AAC5D,oCAAoC;AACpC,uCAAuC;AACvC;AACA,YAAY,6DAA6D;AACzE;AACA;AACA,6BAA6B,sBAAsB,GAAG;AACtD,6BAA6B,kBAAkB,GAAG;AAClD;AACA,YAAY,qHAAqH;AACjI,YAAY,OAAO,gDAAgD,sDAAsD;AACzH,YAAY,QAAQ;AACpB,YAAY,sBAAsB;AAClC,YAAY,sBAAsB;AAClC,YAAY,sBAAsB;AAClC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA,cAAc,sDAAsD,GAAG,6CAA6C;AACpH,KAAK,6EAA6E;AAClF;AACA;AACA;AACA,8BAA8B,aAAa,GAAG;AAC9C,8BAA8B,qBAAqB,GAAG;AACtD,8BAA8B,oBAAoB,GAAG;AACrD,8BAA8B,kBAAkB,GAAG;AACnD,8BAA8B,sCAAsC,GAAG;AACvE,8BAA8B,4BAA4B,GAAG;AAC7D,qCAAqC;AACrC,wCAAwC;AACxC;AACA;AACA;AACA,8BAA8B,sBAAsB,GAAG;AACvD,8BAA8B,sBAAsB,GAAG;AACvD;AACA,YAAY,qHAAqH;AACjI,YAAY,OAAO,gDAAgD,sDAAsD;AACzH,YAAY,QAAQ;AACpB,YAAY,sBAAsB;AAClC,YAAY,sBAAsB;AAClC,YAAY,sBAAsB;AAClC,cAAc,aAAa;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,cAAc,sDAAsD,GAAG,6CAA6C;AACpH,KAAK,6EAA6E;AAClF;AACA;AACA,iCAAiC,aAAa,GAAG;AACjD,iCAAiC,qBAAqB,GAAG;AACzD,iCAAiC,oBAAoB,GAAG;AACxD,iCAAiC,kBAAkB,GAAG;AACtD,iCAAiC,sCAAsC,GAAG;AAC1E,iCAAiC,4BAA4B,GAAG;AAChE,wCAAwC;AACxC,2CAA2C;AAC3C;AACA;AACA;AACA,iCAAiC,sBAAsB,GAAG;AAC1D,iCAAiC,sBAAsB,GAAG;AAC1D;AACA,YAAY,qHAAqH;AACjI,YAAY,OAAO,gDAAgD,sDAAsD;AACzH,YAAY,QAAQ;AACpB,YAAY,sBAAsB;AAClC,YAAY,sBAAsB;AAClC,YAAY,sBAAsB;AAClC,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,sDAAsD,GAAG,6CAA6C;AACnH,KAAK,6EAA6E;AAClF;AACA;AACA;AACA,gCAAgC,aAAa,GAAG;AAChD,gCAAgC,qBAAqB,GAAG;AACxD,gCAAgC,oBAAoB,GAAG;AACvD,gCAAgC,kBAAkB,GAAG;AACrD,gCAAgC,sCAAsC,GAAG;AACzE,gCAAgC,4BAA4B,GAAG;AAC/D,uCAAuC;AACvC,0CAA0C;AAC1C;AACA;AACA;AACA;AACA,gCAAgC,sBAAsB,GAAG;AACzD,gCAAgC,sBAAsB,GAAG;AACzD;AACA,YAAY,qHAAqH;AACjI,YAAY,OAAO,gDAAgD,sDAAsD;AACzH,YAAY,QAAQ;AACpB,YAAY,sBAAsB;AAClC,YAAY,sBAAsB;AAClC,YAAY,sBAAsB;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,sDAAsD;AAC1F;AACA;AACA;AACA,YAAY,mCAAmC;AAC/C,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,4EAA4E;AACzF,KAAK,wCAAwC,KAAK,6EAA6E;AAC/H;AACA;AACA;AACA,YAAY,kFAAkF;AAC9F;AACA,YAAY,uDAAuD;AACnE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uCAAuC,6DAA6D;AACpG,+DAA+D,yCAAyC;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kFAAkF;AAC9F;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,sDAAsD;AACxF;AACA;AACA;AACA,uBAAuB,aAAa;AACpC;AACA;AACA;AACA,uBAAuB,uDAAuD;AAC9E,uBAAuB;AACvB;AACA,YAAY,6DAA6D;AACzE;AACA;AACA,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB,YAAY,sBAAsB;AAClC,YAAY,sBAAsB;AAClC,YAAY,sBAAsB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,6CAA6C;AACxE;AACA;AACA;AACA,wBAAwB,aAAa;AACrC;AACA;AACA;AACA,wBAAwB,uDAAuD;AAC/E,wBAAwB;AACxB;AACA,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB,YAAY,sBAAsB;AAClC,YAAY,sBAAsB;AAClC,YAAY,sBAAsB;AAClC,cAAc,aAAa;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,sDAAsD;AAC7E;AACA;AACA;AACA,2BAA2B,aAAa;AACxC;AACA;AACA;AACA,2BAA2B,uDAAuD;AAClF,2BAA2B;AAC3B;AACA,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB,YAAY,sBAAsB;AAClC,YAAY,sBAAsB;AAClC,YAAY,sBAAsB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,sDAAsD;AAC5F;AACA;AACA,0BAA0B,aAAa;AACvC;AACA;AACA;AACA,0BAA0B,uDAAuD;AACjF,0BAA0B;AAC1B;AACA,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB,YAAY,sBAAsB;AAClC,YAAY,sBAAsB;AAClC,YAAY,sBAAsB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,6DAA6D;AACzE;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,sBAAsB;AAClC;AACA;AACA,gBAAgB,yDAAO;AACvB;;AAEA;AACA;AACA;AACA;AACA,QAAQ,wFAAwF;AAChG;AACA;AACA;AACA,0BAA0B,mCAAmC;AAC7D;AACA;AACA;AACA,0BAA0B,+CAA+C;AACzE;AACA;AACA;AACA,cAAc,mFAAa;AAC3B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,sBAAsB;AAClC,cAAc,aAAa;AAC3B;AACA;AACA;AACA,gBAAgB,yDAAO;AACvB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,sBAAsB;AAClC;AACA;AACA,gBAAgB,yDAAO;AACvB;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,sBAAsB;AAClC;AACA;AACA,gBAAgB,yDAAO;AACvB;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9mBA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA,YAAY,iBAAiB;AAC7B,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC/BA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEgD;AACA;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA,YAAY,qCAAqC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,2BAA2B,0DAAY,aAAa,0BAA0B;;AAE9E;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,yBAAyB,wDAAe;AACxC;;AAEA;AACA,yBAAyB;AACzB,0BAA0B;AAC1B;AACA,YAAY,qDAAqD;AACjE,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACpGA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2CAA2C,mEAAmE;AAC9G;AACA,6EAA6E,oDAAoD;AACjI;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA,YAAY,wBAAwB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,8BAA8B;AAC9B;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,kDAAkD;AAC9D,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACjFA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEkC;AACN;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA,YAAY,sDAAsD;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,2FAA2F,kBAAkB;AAC7G,6FAA6F,kBAAkB;AAC/G;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,+FAA+F,kBAAkB;AACjH,iGAAiG,kBAAkB;AACnH;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,8BAA8B;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gBAAgB,8CAAK;;AAErB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAkD;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,mDAAmD,gBAAgB;AACnE;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,8CAAK;;AAEvB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,qCAAqC;AACjD;AACA,YAAY,qCAAqC;AACjD,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,eAAe;AAC7B;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,+BAA+B;AACjD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,eAAe;AAC7B;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,+BAA+B;AACjD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yHAAyH;AACzH;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA,cAAc,kBAAkB;AAChC;AACA,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB;AACA,cAAc,eAAe;AAC7B;AACA,wBAAwB,mCAAmC;AAC3D;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA,aAAa;AACb,aAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,8CAAK,EAAE,iDAAQ,0BAA0B,iDAAQ;AACnE,MAAM;AACN;AACA,kBAAkB,8CAAK,EAAE,iDAAQ,0BAA0B,iDAAQ;AACnE;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,kBAAkB,oBAAoB;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,oCAAoC;AAChD,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA,sBAAsB;;AAEtB;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,oCAAoC;AAChD,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA,sBAAsB;;AAEtB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,8BAA8B;AAC1C;AACA;AACA,sBAAsB;;AAEtB;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,oCAAoC;AAChD,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,oCAAoC;AAChD,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,oCAAoC;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,wBAAwB,QAAQ,wBAAwB;AACvG,0CAA0C,0CAA0C;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,oCAAoC;AAChD,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,aAAa,iDAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,oCAAoC;AAChD,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,aAAa,iDAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,gCAAgC;AAC5C,YAAY,IAAI;AAChB,YAAY,IAAI;AAChB,cAAc,eAAe;AAC7B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,oCAAoC;AAChD,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,oCAAoC;AAChD,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA,oBAAoB,8CAAK,EAAE,iDAAQ,8BAA8B,iDAAQ;;AAEzE,uCAAuC,gBAAgB;AACvD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,YAAY;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,YAAY;AACjE;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;;AAEA;AACA;AACA,GAAG;AACH,mBAAmB,oBAAoB;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,qDAAqD;AACvE;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC7oCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE8B;AACU;AACR;AACoB;AACc;AACI;AACE;AACpB;AACkD;AACpE;;AAElC,iCAAiC,cAAc;;AAE/C;;AAEA;AACA;AACA;AACA;AACA,IAAI,gHAAgH;AACpH;AACA,4CAA4C,+DAA+D;AAC3G,wCAAwC,oDAAoD;AAC5F;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA,gDAAgD,aAAa;AAC7D,SAAS,gCAAgC;AACzC;AACA;AACA;AACA,UAAU,4CAA4C;AACtD;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,iFAAiF;AAC9F,QAAQ,2FAA2F;AACnG;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,qBAAqB,gDAAO;;AAE5B;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,uBAAuB,0DAAiB;;AAExC;AACA,uEAAuE,kBAAkB;AACzF,MAAM,eAAe;AACrB;AACA;AACA,YAAY;AACZ;AACA,mBAAmB,gFAAU,GAAG,yBAAyB;;AAEzD;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,oBAAoB,+CAAM;;AAE1B;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,kDAAkD;AACjE;AACA,cAAc,mFAAa;AAC3B;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG,GAAG,sBAAsB;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG,GAAG,mBAAmB;;AAEzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG,GAAG,kBAAkB;;AAExB;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA,YAAY,OAAO;AACnB,cAAc,4CAA4C;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,sCAAsC;AACpD,cAAc,OAAO;AACrB;AACA,aAAa,mFAAa;AAC1B;AACA;AACA,KAAK;AACL;AACA;;AAEA,mBAAmB,oDAAW;AAC9B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,iDAAiD;AAC/D;AACA;AACA;AACA;AACA;;AAEA;AACA,2DAA2D,iBAAiB;AAC5E;AACA,cAAc,eAAe;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sEAAsE;AACtF;AACA;AACA;AACA,sDAAsD,+CAA+C;AACrG;AACA,KAAK,4CAA4C;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA,eAAe,uDAAK;;AAEpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL,QAAQ,8DAA8D;AACtE;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK,kBAAkB,SAAS,gCAAgC;AAChE;AACA;AACA,cAAc,4CAA4C;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mDAAmD,oCAAoC;AACvF;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B,4CAA4C;AACxE,SAAS,sCAAsC;AAC/C;AACA;AACA,YAAY,gCAAgC;AAC5C,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,sBAAsB,4EAA4E;AAClG,KAAK,8DAA8D;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK,0EAA0E;AAC/E;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,YAAY,gCAAgC;AAC5C;;AAEA;AACA,qCAAqC,oBAAoB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK,gEAAgE;AACrE;AACA;AACA,YAAY,gCAAgC;AAC5C;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iFAAG,YAAY,kFAAY;;AAE3B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,UAAU,mGAAqB,qBAAqB,oGAAsB;AAC1E;;AAEA;AACA;;;;;;;;;;;;;AC1eA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEkC;AACF;AACN;AACU;AAC8B;;AAElE,iCAAiC,eAAe;;AAEhD;AACA;AACA;AACA;AACA,6BAA6B,4DAA4D;AACzF,uBAAuB,4DAA4D;AACnF,IAAI,+CAA+C;AACnD;AACe;AACf;AACA;AACA;AACA;AACA,aAAa,+DAA+D;AAC5E;AACA;AACA,YAAY,uEAAuE;AACnF;AACA;AACA;AACA;AACA,uEAAuE;AACvE,sCAAsC;AACtC;AACA;AACA;AACA,cAAc,4CAA4C;AAC1D;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,sCAAsC;AACpD;AACA,uBAAuB,iDAAQ;;AAE/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,YAAY,4DAA4D;AACxE;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sCAAsC;AACtC,4CAA4C;AAC5C;AACA,2CAA2C;AAC3C,6BAA6B;AAC7B,0BAA0B;AAC1B;AACA,KAAK,8EAA8E;AACnF;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,mCAAmC;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,8BAA8B;AAC1C,cAAc,YAAY;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK,4DAA4D;AACjE;AACA;AACA,YAAY,8BAA8B;AAC1C,cAAc,YAAY;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,iCAAiC;AACjC,oCAAoC;AACpC;AACA,YAAY,eAAe;AAC3B,cAAc;AACd;AACA;AACA,kBAAkB;;AAElB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA,iCAAiC;AACjC,gCAAgC;AAChC,gCAAgC;AAChC,gCAAgC;AAChC,gCAAgC;AAChC,gCAAgC;AAChC;AACA,YAAY,OAAO;AACnB,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,sDAAsD;AACpE;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,gDAAO;AAC1B,IAAI;AACJ;AACA,mBAAmB,6CAAI;AACvB;AACA;;AAEA;AACA;;AAEA;AACA,KAAK,4BAA4B;AACjC;AACA;AACA,YAAY,uEAAuE;AACnF;AACA;AACA;AACA;;AAEA;AACA,2DAA2D,kDAAkD;AAC7G;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,uEAAuE;AACnF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc,sCAAsC;AACpD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,iDAAiD,YAAY;AAC7D,8BAA8B;AAC9B;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX,aAAa;AACb;AACA;AACA;AACA,eAAe,6CAAI;AACnB;;AAEA,OAAO,wFAAU;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,6CAAI;AACnB;;AAEA,wBAAwB,kDAAS;AACjC,eAAe,6CAAI;AACnB;;AAEA;AACA,GAAG;AACH;;;;;;;;;;;;;ACrYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEoD;AACkB;;AAElC;AACA;AACV;AACU;AACoB;AACU;AACM;AACpB;;AAEpD;;AAEA;AACA;AACA,IAAI,2EAA2E;AAC/E;AACA;AACA,wDAAwD,wCAAwC;AAChG,eAAe,wDAAwD;AACvE;AACA,qEAAqE;AACrE;AACA;AACA,wBAAwB,8CAA8C;AACtE;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,wBAAwB;AACxB,iCAAiC;AACjC,oBAAoB,8EAA8E;AAClG;AACA,QAAQ,8DAA8D;AACtE;AACA;AACA;AACe;AACf;AACA,+CAA+C,4CAA4C;AAC3F;AACA,YAAY,sCAAsC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,aAAa;AAChC,0DAA0D,kDAAkD;AAC5G,KAAK,8CAA8C;AACnD;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK,sFAAsF;AAC3F;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B,cAAc,cAAc;AAC5B;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,wDAAwD,iEAAiE;AACzH;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,yCAAyC,sDAAsD;AAC/F;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC,kDAAkD;AACpF,KAAK,+DAA+D;AACpE;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC,8CAA8C;AAC/E,KAAK,6DAA6D;AAClE;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,wDAAwD;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,kDAAkD;AACrF;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,gEAAgE;AACnF;AACA;AACA;AACA;AACA;AACA,YAAY,oCAAoC;AAChD,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,EAAE;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAiC;AACjC,yCAAyC;AACzC,uCAAuC;AACvC,+CAA+C;AAC/C;AACA,sCAAsC;AACtC,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA,KAAK,8EAA8E;AACnF;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,oEAAoE;AAC/E,oCAAoC,0DAA0D;AAC9F;AACA;AACA,KAAK,mFAAmF;AACxF;AACA;AACA;AACA,YAAY,oEAAoE;AAChF,YAAY,8BAA8B;AAC1C,0BAA0B,+CAA+C;AACzE;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK,0DAA0D;AAC/D,oCAAoC,qDAAqD;AACzF;AACA;AACA;AACA,YAAY,yCAAyC;AACrD,YAAY,wCAAwC;AACpD,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC,8DAA8D;AAClG;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,EAAE;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,gEAAgE;AAChE;AACA,oCAAoC,iEAAiE;AACrG;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,6DAA6D;AAC/E;AACA;AACA,KAAK,0CAA0C;AAC/C;AACA;AACA;AACA;AACA,YAAY,OAAO,gCAAgC,wBAAwB;AAC3E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA,iFAAG,qBAAqB,kFAAY;;AAEpC;AACA;AACA;AACA;AACA,WAAW,QAAQ,0BAA0B,8CAA8C;AAC3F;AACA,QAAQ,8DAA8D;AACtE,qCAAqC,+CAA+C;AACpF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ,0BAA0B,8CAA8C;AAC3F;AACA,QAAQ,8DAA8D;AACtE,sCAAsC,+CAA+C;AACrF;AACA;AACA;AACA,WAAW,eAAe;AAC1B;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,uCAAuC,8DAA8D;AACrG,aAAa,iFAAiF;AAC9F,IAAI,qFAAqF;AACzF,WAAW,oDAAoD;AAC/D;;AAEA,0CAA0C,8DAA8D;AACxG;AACA,gEAAgE;AAChE;AACA;AACA,wBAAwB,8CAA8C;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,kDAAS;AACrC,+CAA+C,4CAA4C;AAC3F,YAAY,sCAAsC;AAClD;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ,qBAAqB,gFAAU,GAAG,qBAAqB;;AAEvD;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,IAAI;AAClB;;AAEA;AACA;AACA,cAAc,MAAM;AACpB;;AAEA;AACA;AACA,cAAc,MAAM;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,4BAA4B;;AAEvC;AACA;;AAEA;AACA;AACA,gCAAgC,sBAAsB;AACtD;AACA,GAAG,GAAG,qBAAqB;;AAE3B;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,gBAAgB,gCAAgC;AAChD;AACA,eAAe,mFAAa;AAC5B;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK,sFAAsF;AAC3F;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,yBAAyB;AAC3C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC,oCAAoC;AACvE;AACA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC,oCAAoC;AACvE;AACA;;AAEA;AACA,sBAAsB,iFAAG;;AAEzB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B,iEAAiE;AAC9F;AACA;AACA,cAAc,OAAO;AACrB,OAAO,+EAA+E;AACtF;AACA,aAAa,mFAAa;AAC1B;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,YAAY,gCAAgC;AAC5C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,oBAAoB,kDAAS;;AAE7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gCAAgC,kCAAkC;AAClE;AACA;;AAEA,uEAAuE,2DAA2D;AAClI;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA,wBAAwB,mFAAK;AAC7B,wBAAwB,mFAAK;;AAE7B;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,8CAA8C;AACjF;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,EAAE;AACd,YAAY,QAAQ;AACpB;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB;AACA,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B,cAAc,aAAa;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,aAAa;AAC3B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,wCAAwC;AACpD,YAAY,sCAAsC;AAClD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,wEAAwE;AAChG;AACA;AACA;AACA,WAAW,mCAAmC;AAC9C,aAAa;AACb;AACA,sBAAsB,kDAAS,oBAAoB,6CAAI;AACvD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gCAAgC;AAC3C,WAAW,gCAAgC;AAC3C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;;;;;ACvqCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE0B;AACQ;AACR;AACU;AAC8B;;AAElE,iCAAiC,gEAAgE;;AAEjG;AACA,2BAA2B,yCAAyC,aAAa,oDAAoD;AACrI,IAAI,kEAAkE;AACtE;AACA,uBAAuB,oCAAoC;AAC3D;AACA;AACA;AACe,sBAAsB,6CAAI;AACzC;AACA;AACA;AACA;AACA,aAAa,sDAAsD;AACnE;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO,oCAAoC,+BAA+B;AACtF,YAAY,uEAAuE;AACnF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,sCAAsC;AACpD;AACA,uBAAuB,iDAAQ;;AAE/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,YAAY,4DAA4D;AACxE;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B;AAC7B,0BAA0B;AAC1B,mCAAmC;AACnC,gCAAgC;AAChC;AACA,kCAAkC;AAClC,uCAAuC;AACvC;AACA;AACA,KAAK,oDAAoD;AACzD;AACA,2BAA2B;AAC3B,sCAAsC;AACtC,wBAAwB;AACxB;AACA,KAAK,8EAA8E;AACnF;AACA,YAAY,OAAO;AACnB;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,8BAA8B;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,8BAA8B;AAC1C,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK,4DAA4D;AACjE;AACA;AACA,YAAY,8BAA8B;AAC1C,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,+EAA+E;AACtG;AACA;AACA;AACA;AACA,oCAAoC;AACpC,mCAAmC;AACnC,mCAAmC;AACnC,mCAAmC;AACnC,mCAAmC;AACnC,mCAAmC;AACnC;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,iCAAiC;AACjC,oCAAoC;AACpC;AACA,YAAY,eAAe;AAC3B,cAAc;AACd;AACA;AACA,kBAAkB;;AAElB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK,+DAA+D;AACpE;AACA;AACA;AACA,YAAY,uEAAuE;AACnF;AACA;AACA;AACA;;AAEA;AACA,2DAA2D,kDAAkD;AAC7G;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,uEAAuE;AACnF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK,kDAAkD;AACvD;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc,sCAAsC;AACpD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,oCAAoC;AAClD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,oBAAoB,6CAAI;AACxB;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uCAAuC,6BAA6B;AACpE;;AAEA;AACA;AACA;;AAEA;AACA,0DAA0D,OAAO,IAAI,kBAAkB;AACvF,qCAAqC,wDAAwD;AAC7F;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,0CAA0C,6BAA6B,EAAE,2CAA2C;;AAEpH;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,kDAAkD,YAAY;AAC9D,+BAA+B;AAC/B;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2CAA2C,6BAA6B;;AAExE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX,aAAa;AACb;AACA;AACA;AACA,eAAe,6CAAI;AACnB;;AAEA,OAAO,wFAAU;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,6CAAI;AACnB;;AAEA,wBAAwB,kDAAS;AACjC,eAAe,6CAAI;AACnB;;AAEA;AACA,GAAG;AACH;;;;;;;;;;;;;AChaA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mEAAmE,qDAAqD;AACxH;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,0DAA0D;AACxE;AACA;;AAEA;AACA,iCAAiC,kEAAkE;AACnG,MAAM,kEAAkE;AACxE;AACA;AACA;AACA;AACA;AACA,cAAc,IAAI;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,wDAAwD;AACtE;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,kDAAkD;AAC9D;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA,YAAY,OAAO;AACnB;AACA,cAAc,6DAA6D;AAC3E;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,uDAAuD;AACrE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,kDAAkD;AAC9D,YAAY,kDAAkD;AAC9D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,kDAAkD;AAC9D,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,kDAAkD;AAC9D,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,kDAAkD;AAC9D,cAAc,4DAA4D;AAC1E;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEkC;AACoC;AAClB;AACoB;;AAExE;AACA,gCAAgC;AAChC,2BAA2B;AAC3B;AACA;AACA,0BAA0B,4CAA4C;AACtE,IAAI,kDAAkD;AACtD,OAAO,4DAA4D;AACnE;AACA;AACA;AACA,QAAQ,2DAA2D;AACnE;AACA;AACA;AACe,2BAA2B,iDAAQ;AAClD;AACA;AACA;AACA;AACA,YAAY,4CAA4C;AACxD,YAAY,eAAe;AAC3B,YAAY,gDAAgD;AAC5D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAmC;AACnC,yCAAyC;AACzC,uCAAuC;AACvC,6CAA6C;AAC7C;AACA,wCAAwC;AACxC,4CAA4C;AAC5C;AACA,KAAK,8EAA8E;AACnF;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,eAAe,8DAA8D;AAC7E;AACA,cAAc;AACd;AACA;AACA,aAAa,iDAAQ;AACrB;;AAEA;AACA;AACA;AACA,YAAY,sCAAsC;AAClD,YAAY,gDAAgD;AAC5D,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,8BAA8B;AAC1C,YAAY,gDAAgD;AAC5D,cAAc;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,8BAA8B;AAC1C,YAAY,gDAAgD;AAC5D,cAAc;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,oEAAoE;AAChF,YAAY,8BAA8B;AAC1C,YAAY,gDAAgD;AAC5D,cAAc;AACd;;AAEA;AACA,qEAAqE,4CAA4C;AACjH;AACA;AACA,YAAY,sCAAsC;AAClD;AACA;;AAEA,qCAAqC,qDAAqD;AAC1F,oBAAoB,sDAAsD;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,WAAW,kDAAkD;AAC7D;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,iFAAG,gBAAgB,kFAAY;;;;;;;;;;;;;ACtL/B;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE4B;AAC0C;AAClB;;AAEpD;AACA,6BAA6B;AAC7B,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B,4DAA4D;AACxF;AACe,wBAAwB,8CAAK;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B;AAC7B,mCAAmC;AACnC,iCAAiC;AACjC,uCAAuC;AACvC;AACA,kCAAkC;AAClC,yCAAyC;AACzC;AACA,KAAK,8EAA8E;AACnF;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,eAAe,qDAAqD;AACpE;AACA,cAAc;AACd;AACA;AACA,aAAa,8CAAK;AAClB;;AAEA;AACA;AACA;AACA,YAAY,gCAAgC;AAC5C,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,oCAAoC;AAChD,cAAc;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,oCAAoC;AAChD,cAAc;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,sCAAsC;AAClD,YAAY,OAAO;AACnB,cAAc;AACd;;AAEA;AACA;AACA,KAAK,qDAAqD;AAC1D;AACA;AACA,YAAY,gCAAgC;AAC5C;AACA,YAAY,OAAO;AACnB,YAAY,2CAA2C;AACvD;AACA;;AAEA;AACA,mFAAmF;AACnF;AACA;AACA;AACA,YAAY,gCAAgC;AAC5C;AACA,YAAY,OAAO;AACnB,YAAY,KAAK;AACjB,gCAAgC,iEAAiE;AACjG;AACA;;AAEA,kCAAkC;AAClC,2BAA2B,gDAAgD;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,WAAW,kDAAkD;AAC7D;AACA;AACA;AACA,gBAAgB,8CAAK;;AAErB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,wCAAwC,mBAAmB;AAC3D,EAAE;AACF;AACA,gDAAgD,mBAAmB;AACnE;AACA;;AAEA;AACA;AACA;AACA,WAAW,gCAAgC;AAC3C,WAAW,kDAAkD;AAC7D,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iFAAG,aAAa,kFAAY;;;;;;;;;;;;;AC1N5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEoC;AACkC;AACE;AACpB;;AAEpD;AACA,0BAA0B,0DAA0D;AACpF,gBAAgB,oEAAoE;AACpF,IAAI,yEAAyE;AAC7E;AACA,2CAA2C,uDAAuD;AAClG,IAAI,kDAAkD,KAAK,qDAAqD;AAChH;AACA;AACA;AACA,2DAA2D,6DAA6D;AACxH;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA,cAAc,IAAI;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA,aAAa,qBAAqB;AAClC;AACA,YAAY,OAAO;AACnB,cAAc,iDAAiD;AAC/D;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,qBAAqB;AAC7C,KAAK,4CAA4C;AACjD;AACA,oEAAoE,qBAAqB;AACzF,+BAA+B,yEAAyE;AACxG,qDAAqD;AACrD;AACA;AACA;AACA;AACA,YAAY,mDAAmD;AAC/D,YAAY,gCAAgC;AAC5C,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,cAAc,4CAA4C;AAC1D;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gCAAgC,kDAAS;AACzC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,kDAAS;AAC7B;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,cAAc,yEAAyE,sBAAsB;AAC7G,qDAAqD;AACrD,eAAe;AACf;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA,aAAa,mFAAa;AAC1B;;AAEA;;AAEA;AACA;;AAEA;AACA,iFAAiF,qDAAqD;AACtI;AACA,YAAY,sCAAsC;AAClD,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kFAAkF,4CAA4C;AAC9H;AACA,YAAY,gCAAgC;AAC5C,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D,4DAA4D;AAC5D;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,4CAA4C;AACxD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,4CAA4C;AACxD,YAAY,qCAAqC;AACjD;AACA,YAAY,qCAAqC;AACjD;AACA;AACA;;AAEA,iFAAG,oBAAoB,kFAAY;;AAEnC;AACA;AACA,2CAA2C,0CAA0C;AACrF;AACA,IAAI,wEAAwE;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,yDAAyD;AAC7D;AACA;AACA;AACA;AACA,IAAI,yEAAyE;AAC7E,8DAA8D;AAC9D;AACA;AACA;AACA,sFAAsF;AACtF,WAAW,4DAA4D;AACvE;AACA;AACA,0EAA0E;AAC1E;AACA;AACA;AACA;AACA,mDAAmD;AACnD,mBAAmB,qDAAqD;AACxE;AACA;AACA,8CAA8C,8BAA8B;AAC5E;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,QAAQ,wCAAwC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,qFAAqF;AACrH,IAAI,wFAAwF;AAC5F,QAAQ,mEAAmE;AAC3E,QAAQ,2EAA2E;AACnF,0DAA0D,+DAA+D;AACzH,iCAAiC,+EAA+E;AAChH;AACA,yDAAyD,yCAAyC;AAClG;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,wCAAwC;AACpD,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,SAAS,uCAAuC;AAChD,SAAS,kDAAkD;AAC3D;AACA,cAAc;AACd;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;;AAEA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C,4CAA4C;AACvF,KAAK,wDAAwD;AAC7D,mGAAmG;AACnG,oCAAoC,6EAA6E;AACjH;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;;AAEA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B;AAC3B,iCAAiC;AACjC;AACA,iCAAiC;AACjC,sCAAsC;AACtC;AACA,KAAK,8EAA8E;AACnF;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,wCAAwC;AACpD,cAAc,wCAAwC;AACtD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,sCAAsC,+BAA+B,4CAA4C;AACrI,yBAAyB,8FAA8F;AACvH;AACA,iCAAiC,6EAA6E;AAC9G;AACA,KAAK,uGAAuG;AAC5G;AACA;AACA;AACA,YAAY,gCAAgC;AAC5C,YAAY,OAAO;AACnB;;AAEA;AACA,8BAA8B,4CAA4C,iBAAiB,sCAAsC;AACjI,yBAAyB,kGAAkG;AAC3H;AACA,iCAAiC,6EAA6E;AAC9G;AACA,KAAK,uGAAuG;AAC5G;AACA;AACA;AACA,YAAY,gCAAgC;AAC5C,YAAY,OAAO;AACnB;AACA;;AAEA,iFAAG,UAAU,kFAAY;;AAEzB;AACA,iBAAiB,qFAAqF;AACtG;AACA;AACA;;;;;;;;;;;;;ACxhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE4B;AACE;AACA;AACI;AACgB;AAC0B;AACxB;AACf;AACJ;AACM;AACE;AACmB;;AAEV;AACA;AACI;AACM;AACY;AACA;;AAExE,iCAAiC,YAAY;AAC7C,iCAAiC,oBAAoB;;AAErD;AACA;AACA,IAAI,8EAA8E;AAClF;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,qBAAqB,yDAAgB;;AAErC;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,sBAAsB,iDAAQ;;AAE9B;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,oBAAoB,+CAAM;;AAE1B;AACA,6BAA6B,6CAA6C;AAC1E,MAAM,oDAAoD;AAC1D;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG,GAAG,sBAAsB;;AAE5B;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,gCAAgC,8BAA8B;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,EAAE,6FAAwB;;AAE1B;AACA;AACA,6BAA6B,GAAG,qBAAqB;AACrD;;AAEA;AACA;AACA,6DAA6D,8DAA8D;AAC3H,SAAS,2EAA2E;AACpF,KAAK,4DAA4D;AACjE;AACA;AACA;AACA,MAAM;AACN;AACA,sDAAsD,sCAAsC;AAC5F;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA,oDAAoD;AACpD,OAAO;AACP;AACA,oDAAoD;AACpD,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,YAAY,SAAS;AACrB,cAAc,EAAE;AAChB;AACA;AACA;AACA;AACA;AACA,gCAAgC,YAAY,8CAAK,cAAc;;AAE/D;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG,oFAAa;AAChB;AACA;;AAEA;AACA,+DAA+D,gCAAgC;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,MAAM,GAAG;AACT;AACA,oCAAoC,sCAAsC;AAC1E;AACA,0BAA0B,wCAAwC;AAClE;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,6CAA6C,yDAAyD;AACtG;AACA,YAAY,wDAAwD;AACpE;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA,sBAAsB,8CAAK;AAC3B,IAAI;AACJ;AACA,sBAAsB,8CAAK;AAC3B;;AAEA,+BAA+B,+BAA+B;;AAE9D;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG,oFAAa;AAChB;AACA;;AAEA;AACA,KAAK,sEAAsE;AAC3E,KAAK,mEAAmE;AACxE;AACA;AACA,yDAAyD,iDAAiD;AAC1G,cAAc,0FAA0F;AACxG,YAAY,yEAAyE;AACrF;AACA,YAAY,kDAAkD;AAC9D;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+CAA+C,qBAAqB;AACpE;AACA;AACA,yFAAyF;AACzF;AACA;AACA,iCAAiC,iDAAiD;AAClF;AACA,yBAAyB,iDAAiD;AAC1E,cAAc,+BAA+B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,0EAA0E;AAC/E,mCAAmC,kEAAkE;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,uBAAuB,8CAA8C;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,YAAY,oFAAoF;AAChG,YAAY,yCAAyC;AACrD;AACA,YAAY,wCAAwC;AACpD;AACA,cAAc,gCAAgC;AAC9C;AACA;AACA;AACA;AACA,SAAS,qEAAa;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gGAAgG;AAC5G;AACA,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wDAAwD,MAAM;AACzE;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qBAAqB;AACjC;AACA;AACA;AACA;AACA,EAAE,qEAAa;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gGAAgG;AAC5G;AACA,YAAY,OAAO;AACnB,YAAY,qBAAqB;AACjC,YAAY,+BAA+B;AAC3C;AACA;AACA,EAAE,uEAAe;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gGAAgG;AAC5G;AACA,cAAc;AACd;AACA;AACA,SAAS,0EAAkB;AAC3B;;AAEA;AACA,8BAA8B,4CAA4C;AAC1E,KAAK,kDAAkD;AACvD;AACA;AACA;AACA;AACA;AACA,cAAc,gEAAgE;AAC9E,cAAc,yDAAyD;AACvE,KAAK,4EAA4E;AACjF;AACA;AACA;AACA;AACA;AACA,YAAY,oEAAoE;AAChF,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA,0CAA0C,gDAAY,GAAG,8CAAU;;AAEnE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,4BAA4B;;AAErC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK,iGAAiG;AACtG;AACA,YAAY,0FAA0F;AACtG,YAAY,eAAe,0BAA0B,iDAAiD;AACtG,YAAY,gDAAgD;AAC5D,SAAS,sDAAsD;AAC/D,cAAc;AACd;AACA;AACA,aAAa,iDAAa;AAC1B;;AAEA;AACA;AACA;AACA,SAAS,qDAAqD;AAC9D;AACA;AACA,SAAS,+CAA+C;AACxD;AACA;AACA;AACA;AACA,OAAO,oFAAoF;AAC3F,OAAO,kFAAkF;AACzF;AACA;AACA,KAAK,qFAAqF;AAC1F;AACA,YAAY,oEAAoE;AAChF,YAAY,8BAA8B;AAC1C,0BAA0B,+CAA+C;AACzE;AACA;AACA,SAAS,iDAAa;AACtB;;AAEA;AACA,4CAA4C,+CAA+C;AAC3F;AACA;AACA,KAAK,2FAA2F;AAChG;AACA,YAAY,8BAA8B;AAC1C,cAAc;AACd;AACA;AACA,SAAS,iDAAa;AACtB;;AAEA;AACA,6CAA6C,+CAA+C;AAC5F;AACA;AACA,KAAK,6FAA6F;AAClG;AACA,YAAY,8BAA8B;AAC1C,cAAc;AACd;AACA;AACA,SAAS,iDAAa;AACtB;;AAEA;AACA;AACA;AACA;AACA,KAAK,2EAA2E;AAChF;AACA;AACA;AACA,MAAM;AACN;AACA,YAAY,sCAAsC;AAClD,YAAY,sCAAsC;AAClD;AACA,cAAc;AACd;AACA;AACA,aAAa,8CAAU;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK,+EAA+E;AACpF;AACA;AACA;AACA,MAAM;AACN;AACA,YAAY,oCAAoC;AAChD,cAAc;AACd;AACA;AACA,SAAS,8CAAU;AACnB;;AAEA;AACA,kDAAkD,+CAA+C;AACjG;AACA;AACA,KAAK,+EAA+E;AACpF;AACA;AACA;AACA,MAAM;AACN;AACA,YAAY,8BAA8B;AAC1C,cAAc;AACd;AACA;AACA,SAAS,8CAAU;AACnB;;AAEA;AACA,yDAAyD;AACzD;AACA;AACA;AACA,KAAK,mFAAmF;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,kDAAkD;AACrF;AACA;AACA;AACA,+BAA+B,yCAAyC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,iBAAiB;AACxE;AACA,YAAY,yCAAyC;AACrD,YAAY,wCAAwC;AACpD,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA,aAAa,mDAAc;AAC3B;;AAEA;AACA,eAAe,sCAAsC;AACrD;AACA;AACA;AACA,OAAO,yBAAyB;AAChC,OAAO,uCAAuC;AAC9C;AACA,YAAY,wBAAwB;AACpC,cAAc;AACd;AACA;AACA,aAAa,8CAAK;AAClB;;AAEA;AACA;AACA;AACA,0BAA0B,6GAA6G;AACvI;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA,SAAS,oEAAgB;AACzB;;AAEA;AACA,qEAAqE,4CAA4C;AACjH;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,6CAA6C,MAAM;AACvE;AACA;AACA;AACA,cAAc,UAAU;AACxB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,6BAA6B,+CAAM;;AAEnC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,uCAAuC,oDAAoD;AAC3F,KAAK,6CAA6C;AAClD;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,oDAAoD;AAC1F,KAAK,6CAA6C;AAClD;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,kEAAkE;AAC5F,WAAW,sBAAsB;AACjC;AACA;AACA,qDAAqD,yDAAyD;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4CAA4C;AAC3E,2BAA2B,oDAAoD,MAAM;AACrF;AACA;AACA;AACA,YAAY,MAAM;AAClB,KAAK,kEAAkE;AACvE;;AAEA;AACA,sBAAsB,qBAAqB;AAC3C;AACA,SAAS,mDAAmD;AAC5D;AACA;AACA,iDAAiD,qBAAqB;AACtE;AACA;AACA;AACA,YAAY,MAAM;AAClB;;AAEA;AACA,sBAAsB,qBAAqB;AAC3C;AACA,SAAS,mDAAmD;AAC5D;AACA;AACA;AACA,YAAY,MAAM;AAClB;;AAEA;AACA,sBAAsB,uBAAuB;AAC7C;AACA,SAAS,qDAAqD;AAC9D;AACA;AACA;AACA,YAAY,MAAM;AAClB;;AAEA;AACA,sBAAsB,0BAA0B;AAChD;AACA,SAAS,wDAAwD;AACjE;AACA;AACA;AACA,YAAY,MAAM;AAClB;AACA;;AAEA,iFAAG,SAAS,qFAAe;;;;;;;;;;;;;AC/3B3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEwD;AACgB;AACA;;AAExE;AAC+C;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,mDAAmD;AACvD;AACA,yCAAyC,oEAAoE;AAC7G,IAAI;AACJ,oBAAoB;AACpB,uEAAuE,qDAAqD;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,yDAAyD;AAChE;AACA,wBAAwB,qEAAqE;AAC7F;AACA;AACA,eAAe,uDAAuD;AACtE;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO,iCAAiC,+BAA+B;AACnF;AACA;AACA;AACA,uCAAuC;AACvC,SAAS,4DAA4D;AACrE;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,IAAI;AAClB;AACA,gBAAgB,mFAAK;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa,mFAAa;AAC1B;;AAEA;AACA;;AAEA;AACA,gFAAgF;AAChF;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa,mFAAa;AAC1B;;AAEA;AACA;;AAEA;AACA;AACA,yBAAyB,qDAAqD;AAC9E;AACA,2BAA2B,8CAA8C;AACzE;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK,6DAA6D,MAAM,8BAA8B;AACtG;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ,4DAA4D;AACpE;AACA;AACA,WAAW;AACX;AACA;AACA,kBAAkB;;AAElB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,8CAA8C;AAClE,YAAY,qDAAqD;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,kBAAkB;AAClB,mBAAmB;AACnB;AACA,cAAc,eAAe;AAC7B;AACA;AACA;AACA,kBAAkB;;AAElB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,cAAc,MAAM;AACpB;AACA,0BAA0B,yCAAyC;AACnE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,eAAe,0CAA0C,KAAK;AAC9D;AACA;AACA,YAAY,8BAA8B;AAC1C,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB;AACA,cAAc;AACd;AACA,sCAAsC;AACtC;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kBAAkB,4DAA4D;AAC9E;AACA,YAAY,8BAA8B;AAC1C,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,2FAAa;;AAE9B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,4DAA4D;AAC9E;AACA,YAAY,8BAA8B;AAC1C,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,EAAE;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;;AAEA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;;AAEA;AACA,IAAI,IAAI;AACR;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,4DAA4D,OAAO;AACrF;AACA;AACA,gCAAgC;AAChC,6BAA6B;AAC7B,yCAAyC;AACzC;AACA;AACA;AACA;AACA,wCAAwC;AACxC,uCAAuC;AACvC;AACA;AACA;AACA,gCAAgC;AAChC,2CAA2C;AAC3C,iDAAiD;AACjD;AACA;AACA;AACA,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP;AACA;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,8BAA8B;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,EAAE;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO,iCAAiC,+BAA+B;AACnF;AACA;AACA,gBAAgB,mFAAK;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7fA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE0B;AAC8C;;AAExE;AACA,kDAAkD,0CAA0C;AAC5F,oBAAoB;AACpB,OAAO,6EAA6E;AACpF;AACe;AACf;AACA;AACA;AACA;AACA,YAAY,yCAAyC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,YAAY,4DAA4D;AACxE;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,mCAAmC;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,8BAA8B;AAC1C,cAAc,YAAY;AAC1B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK,4DAA4D;AACjE;AACA,YAAY,8BAA8B;AAC1C,cAAc,YAAY;AAC1B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,sEAAsE;AACtE,uFAAuF,cAAc;AACrG;AACA,YAAY,OAAO;AACnB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gEAAgE;AAChE,yFAAyF,iBAAiB;AAC1G;AACA,YAAY,OAAO;AACnB,cAAc,OAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,sCAAsC;AACpD;AACA,aAAa,mFAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,yCAAyC;AACrD;AACA;AACA;AACA;AACA,2BAA2B,6CAAI;AAC/B;AACA;AACA;AACA;AACA;AACA,cAAc,mFAAa;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc,sCAAsC;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,sCAAsC;AACpD;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3NA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEoC;AACP;AAC2C;AAChC;AACJ;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACe,iCAAiC,kDAAS;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gCAAgC;AAC5C,YAAY,OAAO;AACnB,YAAY,EAAE;AACd,YAAY,EAAE;AACd,YAAY,YAAY,uBAAuB,oDAAoD;AACnG;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,oEAAoE;AAClF;AACA;AACA;AACA;;AAEA;AACA,SAAS,8FAA8F;AACvG;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;;AAEA,4CAA4C,gBAAgB;AAC5D,mCAAmC,yDAAO;AAC1C;AACA;AACA;AACA;AACA,eAAe,8BAA8B;AAC7C,eAAe,OAAO;AACtB,eAAe,EAAE;AACjB;AACA,cAAc,mFAAa;AAC3B;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,8BAA8B;AAC7C,eAAe,OAAO;AACtB;AACA,cAAc,mFAAa;AAC3B;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ,yDAAO;AACf;AACA,GAAG,4DAAa;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,sCAAsC;AAClD,cAAc;AACd;AACA;AACA,iCAAiC,8CAAK;AACtC;;AAEA;AACA,0DAA0D,mBAAmB;AAC7E,gCAAgC,WAAW,KAAK,kCAAkC;AAClF,mCAAmC,kCAAkC,IAAI,aAAa;AACtF;AACA;;;;;;;;;;;;;AC1MA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEoC;AACP;AACK;AACsC;;AAExE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACe,8BAA8B,kDAAS;AACtD;AACA;AACA;AACA,YAAY,sCAAsC;AAClD,+BAA+B,+CAA+C;AAC9E,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,+CAA+C;AAC/E;AACA,cAAc,sCAAsC;AACpD;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE,sDAAO,EAAE,8CAAK;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sEAAsE,eAAe;;AAErF,sDAAsD,mBAAmB,MAAM,aAAa,MAAM,QAAQ;AAC1G;AACA;;;;;;;;;;;;;ACtGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEoC;AACD;AACA;AACS;AACO;AACxB;AACM;AACuC;;AAExE;AACA;AACA;AACA;AACA;AACe,8BAA8B,kDAAS;AACtD;AACA;AACA;AACA,YAAY,sCAAsC;AAClD,YAAY,iCAAiC;AAC7C,YAAY,YAAY,uBAAuB,oDAAoD;AACnG;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,sCAAsC;AACpD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,sCAAsC;AACpD;AACA,mBAAmB,iDAAQ,EAAE,8DAAe;;AAE5C;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,8DAA8D;AAC5E;AACA;AACA,oBAAoB,iDAAQ;AAC5B;;AAEA;;AAEA;AACA;;AAEA;AACA,SAAS,8FAA8F;AACvG;AACA,cAAc;AACd;AACA;AACA;AACA,yBAAyB,iDAAQ;;AAEjC,aAAa,sDAAa;AAC1B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iDAAQ;;AAE3B,EAAE,sDAAO;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,sCAAsC;AAClD,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,gDAAO;AAC1B,IAAI;AACJ;AACA,mBAAmB,6CAAI;AACvB;AACA;;AAEA,sCAAsC,iDAAQ;AAC9C;;AAEA;AACA;;AAEA;AACA,4EAA4E,oBAAoB;;AAEhG,sDAAsD,mBAAmB,MAAM,aAAa,MAAM,gBAAgB;AAClH;AACA;;;;;;;;;;;;;AC3LA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEoC;AACP;;AAE7B;AACA;AACA;AACe,8BAA8B,kDAAS;AACtD;AACA,YAAY,OAAO;AACnB,YAAY,gCAAgC;AAC5C,YAAY,gCAAgC;AAC5C,YAAY,sDAAsD;AAClE,YAAY,QAAQ;AACpB;AACA,YAAY,YAAY,uBAAuB,oDAAoD;AACnG;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,8DAA8D;AAC5E;AACA;AACA;AACA;;AAEA;AACA,SAAS,8FAA8F;AACvG;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,sCAAsC;AAClD,cAAc;AACd;AACA;AACA;AACA;AACA,mBAAmB,8CAAK;AACxB,mBAAmB,8CAAK;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA,uDAAuD,mBAAmB;AAC1E,gCAAgC,YAAY,KAAK,gBAAgB,MAAM,gBAAgB;AACvF;AACA;;;;;;;;;;;;;ACzJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEoC;AACU;AACX;AACN;AACG;;AAEwC;;AAExE;AACA,2BAA2B,mDAAmD;AAC9E;AACA,wCAAwC,qCAAqC;AAC7E,IAAI,qCAAqC,kDAAkD,qCAAqC;AAChI;AACA,oDAAoD,wCAAwC;AAC5F;AACA;AACA;AACe,6BAA6B,kDAAS;AACrD;AACA;AACA;AACA,YAAY,sCAAsC;AAClD,kDAAkD,uBAAuB;AACzE,YAAY,OAAO;AACnB,YAAY,sCAAsC;AAClD,YAAY,sCAAsC;AAClD,YAAY,YAAY,uBAAuB,oDAAoD;AACnG;AACA;AACA;AACA;;AAEA;AACA,2GAA2G,uBAAuB;AAClI;AACA,cAAc,sCAAsC;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA,cAAc,sCAAsC;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,sCAAsC;AACpD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,aAAa,iDAAQ;AACrB;;AAEA;AACA,gGAAgG,qCAAqC;AACrI,yBAAyB,qCAAqC;AAC9D;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA,aAAa,8CAAK;AAClB;;AAEA;AACA;AACA;AACA,cAAc,4DAA4D;AAC1E;AACA;AACA;AACA;;AAEA;AACA,SAAS,8FAA8F;AACvG;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,iDAAQ;;AAExC,oBAAoB,uDAAc;AAClC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8CAAK;;AAE3B,EAAE,oDAAK;AACP,EAAE,oDAAK,EAAE,8CAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,sCAAsC;AAClD,cAAc;AACd;AACA;AACA,yBAAyB,iDAAQ;AACjC,yBAAyB,iDAAQ;AACjC,4BAA4B,iDAAQ;;AAEpC;AACA;;AAEA;AACA,sDAAsD,mBAAmB;AACzE,+BAA+B,sBAAsB,MAAM,sBAAsB;AACjF,kCAAkC,eAAe,MAAM,yBAAyB;AAChF;AACA;;;;;;;;;;;;;AC1NA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEoC;AACD;AACN;AAC2C;AACA;AACxC;;AAEhC;;AAEA;AACA,iCAAiC;AACjC,aAAa,4DAA4D;AACzE;AACA;AACA;AACe,4BAA4B,kDAAS;AACpD;AACA;AACA;AACA,YAAY,sCAAsC;AAClD,+BAA+B,+CAA+C;AAC9E,YAAY,OAAO;AACnB;AACA,YAAY,sCAAsC;AAClD,YAAY,YAAY,uBAAuB,oDAAoD;AACnG;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,+CAA+C;AAC/E;AACA,cAAc,sCAAsC;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA,cAAc,sCAAsC;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,0DAA0D;AACxE;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK,+EAA+E;AACpF,gCAAgC;AAChC,cAAc,8FAA8F;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,SAAS,8FAA8F;AACvG;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;AACA;AACA,GAAG;AACH,QAAQ,2FAAa;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mFAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE,oDAAK,EAAE,8CAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,sCAAsC;AAClD,cAAc;AACd;AACA;AACA,yBAAyB,iDAAQ;AACjC,yBAAyB,iDAAQ;;AAEjC;AACA;;AAEA;AACA;;AAEA,oDAAoD,mBAAmB,MAAM,QAAQ,MAAM,sBAAsB;AACjH;AACA;;;;;;;;;;;;;AChNA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEoC;;AAEpC;AACA;AACA;AACA;AACA;AACA,IAAI,4DAA4D;AAChE;AACA;AACA;AACA;AACe,0BAA0B,kDAAS;AAClD;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,sDAAsD;AACpE;AACA;AACA;AACA;;AAEA;AACA,SAAS,8FAA8F;AACvG;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mDAAmD,mBAAmB;AACtE;AACA;;;;;;;;;;;;;ACzDA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA,YAAY,YAAY,uBAAuB,oDAAoD;AACnG;AACA;AACA;AACA;AACA,MAAM,oDAAoD;AAC1D,MAAM,2DAA2D;AACjE,MAAM,qEAAqE;AAC3E,MAAM,2FAA2F;AACjG;AACA,cAAc;AACd;AACA;;AAEA;AACA,oEAAoE,0CAA0C;AAC9G;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA,MAAM,4CAA4C;AAClD;AACA;AACA,cAAc,qCAAqC;AACnD;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;AACA,eAAe,kDAAkD;AACjE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kDAAkD;AACjE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,gCAAgC;;AAEhC;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,sCAAsC;AAClD,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC1IA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEiE;AACN;AACA;AACJ;AACJ;AACJ;AACY;AACc;AAChB;AACA;;AAEzD;AACA,YAAY,qEAAkB,eAAe,qEAAkB;AAC/D,YAAY,kEAAe,eAAe,kEAAe;AACzD,YAAY,kEAAe,eAAe,kEAAe;AACzD,YAAY,gEAAa,eAAe,gEAAa;AACrD,YAAY,8DAAW,eAAe,8DAAW;AACjD,YAAY,4DAAS,eAAe,4DAAS;AAC7C,YAAY,kEAAe,eAAe,kEAAe;AACzD,YAAY,yEAAsB,eAAe,yEAAsB;AACvE,YAAY,iEAAc,eAAe,iEAAc;AACvD,YAAY,iEAAc,eAAe,iEAAc;;AAEvD;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,sCAAsC;AAClD,cAAc;AACd;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEoC;AACH;AACuC;AACrC;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACe,8BAA8B,kDAAS;AACtD;AACA;AACA;AACA,YAAY,sCAAsC;AAClD,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,YAAY,uBAAuB,oDAAoD;AACnG;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,sCAAsC;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,8DAA8D;AAC5E;AACA;AACA;AACA;;AAEA;AACA,SAAS,8FAA8F;AACvG;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B,gDAAO;AACpC;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,sCAAsC;AAClD,cAAc;AACd;AACA;AACA,8BAA8B,iDAAQ;AACtC;;AAEA;AACA,uDAAuD,mBAAmB;AAC1E,+BAA+B,gBAAgB,KAAK,eAAe,QAAQ,eAAe;AAC1F;AACA;;;;;;;;;;;;;AC1JA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEoC;AACoC;;AAExE;AACA;AACA;AACA;AACA,6EAA6E;AAC7E,kBAAkB;AAClB;AACA,qCAAqC,4CAA4C;AACjF,IAAI,4CAA4C;AAChD;AACA;AACA;AACe,qCAAqC,kDAAS;AAC7D;AACA;AACA;AACA;AACA,YAAY,4CAA4C;AACxD,YAAY,OAAO;AACnB,YAAY,EAAE;AACd,YAAY,EAAE;AACd,YAAY,YAAY,uBAAuB,oDAAoD;AACnG;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,4EAA4E;AAC1F;AACA;AACA;AACA;;AAEA;AACA,SAAS,8FAA8F;AACvG;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,4CAA4C;AAC1D,cAAc,OAAO;AACrB,cAAc,EAAE;AAChB;AACA,aAAa,mFAAa;AAC1B;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,4CAA4C;AAC1D,cAAc,OAAO;AACrB,cAAc,EAAE;AAChB;AACA,aAAa,mFAAa;AAC1B;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,4CAA4C;AAC1D,cAAc,OAAO;AACrB;AACA,aAAa,mFAAa;AAC1B;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,sCAAsC;AAClD,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA,aAAa,mFAAa;AAC1B;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA,8DAA8D,mBAAmB;AACjF,gCAAgC,WAAW,KAAK,kCAAkC;AAClF,mCAAmC,kCAAkC,IAAI,qBAAqB;AAC9F;AACA;;;;;;;;;;;;;ACvNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEoC;AACU;AACX;AACN;AACY;;AAE+B;;AAExE;AACA,uBAAuB,qDAAqD;AAC5E,IAAI,+FAA+F;AACnG;AACA;AACA;AACA;AACe,6BAA6B,kDAAS;AACrD;AACA;AACA;AACA,YAAY,sCAAsC;AAClD,YAAY,OAAO;AACnB,YAAY,2CAA2C;AACvD;AACA,YAAY,YAAY,uBAAuB,oDAAoD;AACnG;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,sCAAsC;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA,cAAc,sCAAsC;AACpD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,2CAA2C;AACzD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA,aAAa,iDAAQ;AACrB;;AAEA;AACA;AACA,yBAAyB,sBAAsB;AAC/C;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA,aAAa,8CAAK;AAClB;;AAEA;AACA;AACA;AACA,cAAc,4DAA4D;AAC1E;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS,8FAA8F;AACvG;AACA,cAAc;AACd;AACA;AACA;AACA,gCAAgC,iDAAQ;;AAExC,aAAa,uDAAc;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG,oDAAK,EAAE,8CAAK;AACf,GAAG;AACH;;AAEA,GAAG,sDAAO;AACV;;AAEA,0BAA0B,8CAAK;AAC/B,GAAG,iDAAQ;AACX,GAAG,iDAAQ;AACX;;AAEA,EAAE,oDAAK;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,sCAAsC;AAClD,cAAc;AACd;AACA;AACA;AACA;;AAEA,aAAa,iDAAQ;AACrB;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,sCAAsC;AAClD,cAAc;AACd;AACA;AACA,wBAAwB,iDAAQ;AAChC,4BAA4B,iDAAQ;AACpC,qDAAqD,iDAAQ;;AAE7D;AACA;;AAEA;AACA;;AAEA;AACA,sDAAsD,mBAAmB,MAAM,qBAAqB;AACpG,iCAAiC,eAAe,QAAQ,yBAAyB;AACjF,+BAA+B,kEAAkE;AACjG;AACA;;;;;;;;;;;;;AClQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEgD;AACM;AACN;AACA;AACJ;AACkB;AAChB;AACA;AACN;AACX;AACM;;AAEqC;;AAExE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,8EAA8E;AACpF;AACA;AACA;AACA,IAAI,kEAAkE;AACtE;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,kDAAkD;AAC7D,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,kDAAkD;AAC7D,WAAW,kDAAkD;AAC7D,WAAW,8DAA8D;AACzE,aAAa,0DAA0D;AACvE;AACO,sCAAsC;AAC7C;;AAEA;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,qEAAqE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,0DAA0D;AACrE,WAAW,0DAA0D;AACrE,WAAW,OAAO;AAClB,WAAW,2CAA2C;AACtD,WAAW,QAAQ;AACnB;AACA,WAAW,QAAQ,kDAAkD,4DAA4D;AACjI;AACA;AACA,aAAa,OAAO;AACpB,aAAa,0DAA0D;AACvE,aAAa,0DAA0D;AACvE,aAAa,IAAI;AACjB;AACA;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,sCAAsC;AAClD,YAAY,QAAQ;AACpB;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,0DAA0D;AACtE,YAAY,uDAAuD;AACnE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,kDAAkD;AAC9D,YAAY,kDAAkD;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,sDAAa;AACrB;AACA,UAAU,uDAAc;AACxB;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA,UAAU,sDAAa;AACvB;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,QAAQ,uDAAc;AACtB;AACA,UAAU,uDAAc;AACxB;AACA;AACA;;AAEA;AACA;;AAEA,UAAU,sDAAa;AACvB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,QAAQ,uDAAc;AACtB;AACA,UAAU,uDAAc;AACxB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,UAAU,uDAAc;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,QAAQ,wDAAe;AACvB;;AAEA;AACA;AACA;;AAEA;AACA,UAAU,sDAAa;AACvB,yBAAyB,8CAAK;;AAE9B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;;AAEA,UAAU,uDAAc;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,kDAAkD;AAC9D,YAAY,kDAAkD;AAC9D,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,kDAAkD;AAC9D,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAkD;AAC9D,YAAY,kDAAkD;AAC9D,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,kDAAkD;AAC9D,YAAY,kDAAkD;AAC9D,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,YAAY;AAC1B,cAAc,YAAY;AAC1B;;AAEA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,0DAA0D;AACrE,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,4DAA4D;AAC5F;AACA;AACA,WAAW,0DAA0D;AACrE,WAAW,OAAO;AAClB;AACA;AACA,iBAAiB,aAAa;AAC9B,uBAAuB,oDAAW;AAClC;AACA;;AAEA;;AAEA,mBAAmB,2DAAkB,EAAE,2DAAkB;AACzD;AACA;;AAEA;AACA;AACA,cAAc,2DAAkB;AAChC,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB,2DAAkB;AAC3C;AACA;;AAEA;AACA,gBAAgB,oDAAW;AAC3B;;AAEA;AACA,EAAE;AACF;AACA;AACA;AACA,CAAC;;AAED,mBAAmB,2DAAkB,EAAE,wDAAe;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,2DAAkB;AAChC,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,wBAAwB,0CAA0C;AAChF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,8DAA8D;AACzE,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,8CAAK;;AAExB,YAAY,2DAAkB;AAC9B;;AAEA,mBAAmB,2DAAkB,EAAE,uDAAc;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,8CAAK;AACrB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,2DAAkB;AAC/B,EAAE;AACF,CAAC;;AAED,mBAAmB,2DAAkB,EAAE,sDAAa;AACpD;;AAEA;AACA,iCAAiC,2DAAkB;AACnD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gCAAgC;AAC3C,WAAW,0DAA0D;AACrE,aAAa;AACb;AACA,mBAAmB,8CAAK;;AAExB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,2DAAkB,EAAE,uDAAc;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,8CAAK;AAC9B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED,mBAAmB,wDAAe,EAAE,2DAAkB;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED,mBAAmB,wDAAe,EAAE,wDAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED,mBAAmB,wDAAe,EAAE,sDAAa;AACjD;AACA;AACA;;AAEA;AACA,CAAC;;AAED,mBAAmB,wDAAe,EAAE,uDAAc;AAClD;AACA;AACA;;AAEA;AACA,CAAC;;AAED,mBAAmB,wDAAe,EAAE,uDAAc;AAClD;;AAEA;AACA,CAAC;;AAED;;AAEA,mBAAmB,wDAAe,EAAE,wDAAe;AACnD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED,mBAAmB,wDAAe,EAAE,wDAAe;AACnD;AACA;AACA;AACA,GAAG;AACH,gBAAgB,oDAAW;AAC3B;AACA;;AAEA;AACA,CAAC;;AAED,mBAAmB,wDAAe,EAAE,uDAAc;AAClD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED,mBAAmB,wDAAe,EAAE,sDAAa;AACjD;AACA,eAAe,8CAAK;AACpB;;AAEA;AACA;AACA,qBAAqB,8CAAK;;AAE1B;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,8CAAK;AACpB;;AAEA;AACA,CAAC;;AAED,mBAAmB,wDAAe,EAAE,uDAAc;AAClD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,kDAAQ;AAC/B,IAAI;AACJ,uBAAuB,kDAAQ;AAC/B;;AAEA;AACA,qBAAqB,kDAAQ;AAC7B,IAAI;AACJ,qBAAqB,kDAAQ;AAC7B,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;;AAEA,mBAAmB,uDAAc,EAAE,wDAAe;AAClD;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED,mBAAmB,uDAAc,EAAE,uDAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oDAAW;AAC3B,GAAG;AACH;AACA;;AAEA,0BAA0B,kDAAQ;AAClC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,gBAAgB,sDAAa;AAC7B,GAAG;AACH,gBAAgB,oDAAW;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED,mBAAmB,uDAAc,EAAE,sDAAa;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8CAAK;;AAE3B;AACA;AACA,gBAAgB,oDAAW;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED,mBAAmB,uDAAc,EAAE,uDAAc;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;;AAEA,mBAAmB,sDAAa,EAAE,wDAAe;AACjD,mBAAmB,8CAAK;AACxB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED,mBAAmB,sDAAa,EAAE,sDAAa;AAC/C;AACA;AACA;AACA;AACA,gBAAgB,8CAAK;AACrB,gBAAgB,8CAAK;;AAErB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4FAAa;;AAE7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,4FAAa;AACpC;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,oDAAW;AAC1B;;AAEA;AACA,CAAC;;AAED,mBAAmB,sDAAa,EAAE,uDAAc;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8CAAK;;AAExB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8CAAK;AAC5B;;AAEA;AACA,OAAO,8CAAK;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,8CAAK;AACrB;AACA;;AAEA;AACA,CAAC;;AAED,mBAAmB,sDAAa,EAAE,uDAAc;AAChD,oBAAoB,8CAAK;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAuB,sDAAa;;AAEpC;AACA;AACA;;AAEA;AACA,uBAAuB,sDAAa;;AAEpC;AACA;;AAEA,qCAAqC,kDAAQ;AAC7C;AACA,+BAA+B,sDAAa;;AAE5C;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,oDAAW;AAC7B,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,8CAAK;AACxB;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;AAEA,mBAAmB,wDAAe,EAAE,wDAAe;AACnD;;AAEA;AACA,CAAC;;AAED,mBAAmB,wDAAe,EAAE,uDAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,CAAC;;AAED,mBAAmB,wDAAe,EAAE,sDAAa;AACjD;;AAEA;AACA,CAAC;;AAED,mBAAmB,wDAAe,EAAE,wDAAe;AACnD;AACA;AACA;AACA,GAAG;AACH,gBAAgB,oDAAW;AAC3B;AACA;;AAEA;AACA,CAAC;;AAED,mBAAmB,wDAAe,EAAE,uDAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM,4FAAa;AACnB,0BAA0B,wDAAe;;AAEzC;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;AAEA,mBAAmB,+DAAsB,EAAE,+DAAsB;AACjE;AACA;AACA,gBAAgB,oDAAW;AAC3B,GAAG;AACH;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;AAEA,mBAAmB,uDAAc,EAAE,wDAAe;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,uDAAc;;AAErC;AACA,CAAC;;AAED,mBAAmB,uDAAc,EAAE,uDAAc;AACjD;AACA;AACA;AACA;AACA,yBAAyB;AACzB,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,kDAAQ;AACpC,4BAA4B,uDAAc,2BAA2B,kDAAQ;;AAE7E,8BAA8B,uDAAc;AAC5C;;AAEA;AACA,wBAAwB,uDAAc;AACtC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,uDAAc;;AAErC;AACA;AACA;;AAEA;AACA,CAAC;;AAED,mBAAmB,uDAAc,EAAE,sDAAa;AAChD,qBAAqB,8CAAK;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,iCAAiC,kDAAQ;AACzC,sBAAsB,sDAAa;;AAEnC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAwB,uDAAc;;AAEtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,uDAAc;;AAEtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF,wBAAwB,uDAAc;AACtC;;AAEA;AACA,CAAC;;AAED,mBAAmB,uDAAc,EAAE,uDAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oDAAW;AAC3B;;AAEA;AACA,gBAAgB,oDAAW;AAC3B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,sDAAa;AAClC;;AAEA;AACA;AACA;AACA,qBAAqB,sDAAa;AAClC;;AAEA;AACA,GAAG;AACH,gBAAgB,oDAAW;AAC3B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B,kDAAQ;AAClC,qBAAqB,sDAAa;;AAElC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,uDAAc;;AAErC;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,0DAA0D;AACrE,WAAW,0DAA0D;AACrE,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wCAAwC;AACnD,WAAW,sCAAsC;AACjD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA,iBAAiB,sDAAa;AAC9B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,sBAAsB,mBAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC9zEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE2B;AACA;AACU;AACR;AACsB;AAChB;AACqC;;AAExE;AACA,wDAAwD,mEAAmE;AAC3H,wCAAwC,yCAAyC;AACjF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,sCAAsC;AACjD,WAAW,iCAAiC;AAC5C,aAAa,gCAAgC;AAC7C;AACO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,YAAY,8CAAK;AACjB;;AAEA;AACA,uCAAuC,kDAAkD;AACzF;AACA;AACA;AACA,WAAW,gCAAgC;AAC3C,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mFAAa;AACzB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,8DAA8D,kDAAkD;AAChH;AACA;AACA;AACA,WAAW,gCAAgC;AAC3C,WAAW,sCAAsC;AACjD,aAAa,gCAAgC;AAC7C;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mFAAa;AACzB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,gCAAgC;AAC3C,WAAW,OAAO;AAClB,WAAW,EAAE;AACb;AACO;AACP;AACA;AACA;;AAEA;AACA,sCAAsC,gBAAgB;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kEAAkE,0CAA0C;AAC5G,IAAI,+CAA+C;AACnD;AACA;AACA;AACA,WAAW,iCAAiC;AAC5C,aAAa,sCAAsC;AACnD;AACO;AACP;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,kBAAkB;AACnC;AACA,wBAAwB,6CAAI;AAC5B,GAAG,iCAAiC,kDAAS;AAC7C,wBAAwB,6CAAI;AAC5B,GAAG,iCAAiC,yDAAgB,0BAA0B,iDAAQ;AACtF;AACA;AACA;AACA,GAAG,iCAAiC,6CAAI;AACxC;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,uBAAuB;AACxC;AACA;;AAEA,uBAAuB,6CAAI,oBAAoB,6CAAI;AACnD;AACA,oCAAoC,6CAAI;AACxC;AACA;AACA;;AAEA;AACA;;AAEA,sEAAsE,+CAA+C;AACrH;AACA;AACA;AACA;AACA;AACA,WAAW,oCAAoC;AAC/C,WAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,6CAAI;;AAE7B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,sCAAsC;AACjD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,wBAAwB,6CAAI;AAC5B,yBAAyB,6CAAI;;AAE7B;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,8BAA8B;AACzC,WAAW,8BAA8B;AACzC,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,gDAAgD,0CAA0C;AAC1F;AACA;AACA,MAAM,yCAAyC;AAC/C,MAAM,wDAAwD,iCAAiC,yCAAyC;AACxI,MAAM,qDAAqD;AAC3D,MAAM,6EAA6E;AACnF;AACA;AACA;AACA,oBAAoB,0CAA0C;AAC9D;AACA;AACA,aAAa;AACb;AACA;AACA;;;;;;;;;;;;;ACrSA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEsC;AACkC;AACA;AAC9C;AACO;;AAEjC;AAC+C;;AAE/C;AACA;AACA;AACA,qCAAqC,iDAAiD;AACtF,MAAM,iDAAiD;AACvD;AACA;AACA,IAAI,sCAAsC,MAAM,wCAAwC;AACxF;AACA;AACA,iDAAiD,iDAAiD;AAClG;AACA,sDAAsD,+DAA+D;AACrH,IAAI,+DAA+D;AACnE;AACA;AACA,UAAU;AACV,gBAAgB;AAChB;AACA;AACA;AACA,mEAAmE;AACnE;AACA,IAAI,mDAAmD;AACvD;AACA;AACA;AACe;AACf;AACA;AACA;AACA,YAAY,0FAA0F;AACtG,YAAY,eAAe,0BAA0B,iDAAiD;AACtG,YAAY,gDAAgD;AAC5D,SAAS,sDAAsD;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,mDAAmD,yCAAyC;AAC5F,MAAM,+CAA+C;AACrD,MAAM,iEAAiE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,+CAA+C;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,eAAe;AAC7B;AACA;;AAEA;AACA,+BAA+B,sDAAsD;AACrF;AACA,cAAc,gDAAgD;AAC9D;AACA;AACA;;AAEA;AACA,qDAAqD,0DAA0D;AAC/G,kCAAkC,sDAAsD;AACxF;AACA,WAAW;AACX;AACA;AACA,SAAS,sDAAI;AACb;;AAEA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA,kBAAkB,0BAA0B;AAC5C;;AAEA;AACA,cAAc,mFAAa,8EAA8E,iBAAiB;AAC1H;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,qEAAqE;AAC5E,8BAA8B,iEAAiE;AAC/F;AACA;AACA;AACA,WAAW,0GAA0G;AACrH;AACA;AACA,cAAc,sCAAsC;AACpD;AACA,aAAa,mFAAa,8EAA8E,iBAAiB;AACzH;;AAEA;AACA;;AAEA;AACA,cAAc,0DAA0D;AACxE,kBAAkB,gDAAgD;AAClE;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,aAAa,8CAA8C;AAC3D;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA,2BAA2B,6CAAI;AAC/B;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,sDAAsD,0DAA0D;AAChH;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,gDAAgD,0DAA0D;AAC1G;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,sCAAsC;AAClD,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,2FAAa;;AAE9B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK,2DAA2D;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,wBAAwB;AACvF;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS,+BAA+B,qDAAqD;AACzG;AACA,YAAY,OAAO,iDAAiD,gDAAgD;AACpH;AACA,cAAc,sCAAsC;AACpD;AACA,4CAA4C;AAC5C;;AAEA,yBAAyB,mDAAU;AACnC;;AAEA;AACA;;AAEA;AACA,gFAAgF;AAChF;AACA;AACA;AACA;AACA,cAAc,eAAe;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,sCAAsC;AACpD;AACA;AACA;AACA;AACA,GAAG;AACH,qCAAqC,oBAAoB;AACzD;AACA;;AAEA;AACA,uCAAuC,kBAAkB,0BAA0B;AACnF;AACA;AACA;AACA;AACA,YAAY,sCAAsC;AAClD,cAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,2FAAa;AAC3B;AACA;;AAEA;AACA;;AAEA;AACA,gBAAgB,0CAA0C,KAAK;AAC/D,uDAAuD,kBAAkB;AACzE;AACA,YAAY,sCAAsC;AAClD,cAAc;AACd;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yDAAyD,qBAAqB;AAC9E;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,sCAAsC;AACpD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sCAAsC;AAClD,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,YAAY,sCAAsC;AAClD,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,sCAAsC;AAClD,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,sCAAsC;AAClD,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B,qCAAqC;AACrC;AACA,oCAAoC;AACpC,wCAAwC;AACxC;AACA,KAAK,8EAA8E;AACnF;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,sCAAsC;AAClD,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,SAAS,2FAAa;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA,uFAAuF,uBAAuB;AAC9G;AACA;AACA;AACA;AACA,YAAY,kDAAkD;AAC9D,cAAc,sCAAsC;AACpD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,8DAA8D;AAC1E,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,0DAA0D;AACtE,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,4DAA4D;AACxE,cAAc;AACd;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,4DAA4D;AACxE,cAAc;AACd;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,sCAAsC;AAClD,YAAY,OAAO;AACnB,cAAc,2CAA2C;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,OAAO,2FAAa;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG,WAAW,2FAAa;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,sCAAsC;AAClD,YAAY,OAAO;AACnB,cAAc,sCAAsC;AACpD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,OAAO,2FAAa;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,WAAW,2FAAa;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,sCAAsC;AAClD,YAAY,sCAAsC;AAClD,YAAY,OAAO;AACnB,cAAc,sCAAsC;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sCAAsC;AAClD,YAAY,sCAAsC;AAClD,cAAc,sCAAsC;AACpD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS,qDAAqD;AAC9D;AACA;AACA,OAAO,+CAA+C;AACtD;AACA;AACA;AACA,OAAO,0DAA0D;AACjE,OAAO,yDAAyD;AAChE;AACA,YAAY,oEAAoE;AAChF,YAAY,8BAA8B;AAC1C,0BAA0B,+CAA+C;AACzE,YAAY,gDAAgD;AAC5D,0BAA0B,+CAA+C;AACzE;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,cAAc,mFAAa;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,mFAAa;AAC3B;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,yCAAyC,+CAA+C;AACxF;AACA,YAAY,8BAA8B;AAC1C,YAAY,gDAAgD;AAC5D,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,8BAA8B;AAC5C;AACA,aAAa,mFAAa;AAC1B;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA,8CAA8C,+CAA+C;AAC7F;AACA,YAAY,8BAA8B;AAC1C,YAAY,gDAAgD;AAC5D,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,8BAA8B;AAC5C;AACA,aAAa,mFAAa;AAC1B;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,sCAAsC;AAClD,cAAc,sCAAsC;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA,aAAa,mFAAa;AAC1B;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA,sCAAsC,YAAY,KAAK,yBAAyB;AAChF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;;;;;;;;;;;;;ACliCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEkC;AACI;AACkC;AACA;;AAExE;AACA;AACA;AACA,8BAA8B,4CAA4C,MAAM;AAChF;AACA;AACA;AACA,IAAI,sCAAsC,MAAM,wCAAwC;AACxF;AACe;AACf;AACA;AACA;AACA,YAAY,sCAAsC;AAClD,YAAY,sCAAsC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,eAAe,iDAAQ;;AAEvB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,mBAAmB,iDAAQ,oBAAoB,iDAAQ;;AAEvD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,0CAA0C;AACjE,8DAA8D,sDAAsD;AACpH,gBAAgB,qDAAqD;AACrE,0BAA0B,4DAA4D;AACtF,iBAAiB,0CAA0C;AAC3D;AACA,wBAAwB,gDAAgD;AACxE;AACA;AACA,cAAc;AACd;AACA;AACA,aAAa,mDAAU,GAAG,2CAA2C;AACrE;;AAEA;AACA,wDAAwD,aAAa;AACrE,KAAK,WAAW;AAChB;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,oDAAoD,aAAa;AACjE,KAAK,WAAW,2BAA2B,mDAAmD;AAC9F;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA,SAAS,2FAAa;AACtB;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,8CAA8C,qDAAqD;AACnG;AACA,YAAY,sCAAsC;AAClD,cAAc,QAAQ,kBAAkB,qDAAqD;AAC7F;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAA8C,mBAAmB;AACjE;AACA,YAAY,gCAAgC;AAC5C,YAAY,QAAQ;AACpB;AACA;AACA,cAAc,QAAQ,kBAAkB,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,0BAA0B,oCAAoC;AAC9D;AACA,YAAY,8BAA8B;AAC1C;AACA;AACA,cAAc,iDAAQ;;AAEtB;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;AACzB,+BAA+B;AAC/B;AACA,8BAA8B;AAC9B,qCAAqC;AACrC;AACA,KAAK,8EAA8E;AACnF;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,aAAa,MAAM,WAAW;AACjE;AACA,YAAY,gCAAgC;AAC5C,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,gCAAgC;AAC5C,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,mBAAmB,yBAAyB,mBAAmB;AACnG,8CAA8C,oBAAoB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gCAAgC;AAC5C,cAAc,wCAAwC;AACtD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qCAAqC,mBAAmB,YAAY,mBAAmB;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA,uDAAuD;AACvD;AACA,YAAY,gCAAgC;AAC5C,cAAc,qCAAqC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8CAA8C,mBAAmB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,kDAAkD;AACvE;AACA;AACA;AACA;AACA;AACA,cAAc,wCAAwC;AACtD;AACA;AACA;AACA;;AAEA,cAAc,iDAAQ;AACtB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,eAAe,2DAA2D;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO,iDAAiD,gDAAgD;AACpH,YAAY,sCAAsC;AAClD,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,wBAAwB;AACxB;;AAEA,aAAa,mDAAU;AACvB;;AAEA;AACA,gDAAgD,0CAA0C;AAC1F;AACA;AACA,sBAAsB,gDAAgD;AACtE,4CAA4C,gDAAgD;AAC5F,SAAS,qDAAqD;AAC9D;AACA,iEAAiE,gDAAgD;AACjH;AACA;AACA,YAAY,OAAO,iDAAiD,gDAAgD;AACpH,cAAc;AACd;AACA,yBAAyB;AACzB;AACA;;AAEA,yBAAyB,mDAAU;;AAEnC;AACA;AACA;AACA;;AAEA;AACA,gDAAgD,sDAAsD;AACtG;AACA;AACA,sBAAsB,gDAAgD;AACtE,KAAK,sDAAsD,OAAO,qDAAqD;AACvH;AACA,iEAAiE,gDAAgD;AACjH;AACA;AACA,YAAY,OAAO,iDAAiD,gDAAgD;AACpH,cAAc;AACd;AACA,6BAA6B;AAC7B;;AAEA,yBAAyB,mDAAU;;AAEnC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAkD;AAC9D,cAAc,wCAAwC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,6DAA6D;AACzE,cAAc,wCAAwC;AACtD;AACA;AACA;;AAEA;AACA,mBAAmB,mBAAmB;AACtC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC;;AAEA,uBAAuB,mBAAmB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAgB,0CAA0C,KAAK;AAC/D;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,kDAAkD;AAClE;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8DAA8D;AAC1E,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,0DAA0D;AACtE,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAA4D;AACxE,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAA4D;AACxE,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,YAAY,UAAU;AACtB;AACA,WAAW,UAAU;AACrB,UAAU,SAAS;AACnB,UAAU,KAAK;AACf,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B,mBAAmB,YAAY;AAC/B,kBAAkB,EAAE;AACpB;AACA;AACA;AACA;AACA,wBAAwB,cAAc;AACtC,qBAAqB,MAAM;AAC3B,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,KAAK;AAC7B,qBAAqB,MAAM;AAC3B,oBAAoB,EAAE;AACtB;;AAEA;AACA;AACA,YAAY,iDAAQ;AACpB;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,4CAA4C,oBAAoB;AAChE,KAAK,mBAAmB,wDAAwD,oBAAoB;AACpG,+CAA+C,mBAAmB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sCAAsC;AAClD,YAAY,OAAO;AACnB,YAAY,QAAQ,wCAAwC,aAAa;AACzE;AACA,cAAc,wCAAwC;AACtD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iCAAiC,oBAAoB;AACrD,KAAK,mBAAmB;AACxB;AACA;AACA,YAAY,sCAAsC;AAClD,YAAY,sCAAsC;AAClD,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB,cAAc,wCAAwC;AACtD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,OAAO;AACxE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sCAAsC;AAClD,YAAY,OAAO;AACnB,cAAc,qCAAqC;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mDAAmD,qDAAqD;AACxG;AACA;AACA;AACA,YAAY,sCAAsC;AAClD,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,+BAA+B,kDAAkD;AACjF;AACA;AACA;AACA,YAAY,oCAAoC;AAChD,cAAc;AACd;AACA;AACA,mBAAmB,iDAAQ,0BAA0B,iDAAQ;AAC7D;;AAEA;AACA,8CAA8C,+CAA+C;AAC7F;AACA;AACA,YAAY,8BAA8B;AAC1C,cAAc;AACd;AACA;AACA,2CAA2C,iDAAQ;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wCAAwC;AACpD,cAAc,gCAAgC;AAC9C;AACA;AACA;AACA;AACA;AACA,OAAO,oFAAoF;AAC3F;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B,MAAM;AACpC;AACA,oBAAoB,iDAAQ;AAC5B,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,mBAAmB;AAChD;AACA,iBAAiB,iDAAQ;AACzB,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,sCAAsC;AAClD,cAAc,oCAAoC;AAClD;AACA;AACA,mBAAmB,iDAAQ,8BAA8B,iDAAQ;AACjE;;AAEA;AACA,sCAAsC,YAAY,KAAK,+BAA+B,SAAS,6BAA6B;AAC5H;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC79BA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEgC;;AAEhC;AACA,YAAY,0CAA0C;AACtD;AACA;AACe,0BAA0B,gDAAO;AAChD;AACA;AACA;AACA,YAAY,sCAAsC;AAClD,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,gBAAgB,4CAA4C;AAC5D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,6DAA6D,4CAA4C;AACzG;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,KAAK,qDAAqD;AAC1D;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qCAAqC;AACrC,iCAAiC;AACjC,8BAA8B;AAC9B,2CAA2C;AAC3C,uCAAuC;AACvC,oCAAoC;AACpC;AACA,sCAAsC;AACtC,0CAA0C;AAC1C;AACA;AACA,KAAK,oDAAoD;AACzD;AACA,+BAA+B;AAC/B,8CAA8C;AAC9C,wBAAwB;AACxB;AACA,KAAK,8EAA8E;AACnF;AACA,YAAY,OAAO;AACnB;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC1GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEwE;AACI;AACxB;;AAExB;AACM;AACF;AACN;AACY;;AAEtC;AACA;AACA;AACA;AACA;AACA,2CAA2C,mEAAmE;AAC9G;AACA;AACA;AACA,MAAM,oEAAoE;AAC1E,IAAI,sGAAsG;AAC1G,MAAM,4DAA4D;AAClE;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG,GAAG,sBAAsB;;AAE5B;AACA;AACA;AACA,GAAG,GAAG,sBAAsB;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,YAAY,OAAO;AACnB,YAAY,gDAAgD;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,6BAA6B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB;;AAEA;AACA;;AAEA;AACA,eAAe,2BAA2B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,gDAAgD;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,2BAA2B;AAClC;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;AACA,IAAI;AACJ;;AAEA,6DAA6D;;AAE7D;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,kFAAkF;AAC9F,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,wCAAwC;AACxC,4DAA4D;AAC5D,kCAAkC;AAClC;AACA,YAAY,kFAAkF;AAC9F;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,sDAAsD;AACtE;AACA,mCAAmC;AACnC,+BAA+B;AAC/B;AACA;AACA,wCAAwC;AACxC;AACA,YAAY,kFAAkF;AAC9F;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wBAAwB,sDAAsD;AAC9E;AACA;AACA,mCAAmC;AACnC,+BAA+B;AAC/B,uDAAuD;AACvD,+BAA+B;AAC/B;AACA,YAAY,kFAAkF;AAC9F;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,0BAA0B,sDAAsD;AAChF;AACA,oCAAoC;AACpC,gCAAgC;AAChC;AACA;AACA,qCAAqC;AACrC;AACA,YAAY,kFAAkF;AAC9F;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,0BAA0B,sDAAsD;AAChF;AACA,oCAAoC;AACpC,oCAAoC;AACpC;AACA;AACA,6BAA6B;AAC7B;AACA,YAAY,kFAAkF;AAC9F;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA,MAAM;AACN,8DAA8D;AAC9D;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA,YAAY,mDAAmD;AAC/D,YAAY,qCAAqC;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA,MAAM;AACN,+CAA+C;AAC/C;AACA;AACA,YAAY,mDAAmD;AAC/D,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B,sCAAsC,8BAA8B;AAC9F;AACA,kDAAkD;AAClD;AACA;AACA,2DAA2D,4CAA4C;AACvG;AACA;AACA,YAAY,0EAA0E;AACtF;AACA,YAAY,oCAAoC;AAChD,cAAc;AACd;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;;AAEA,iCAAiC,gDAAO;AACxC;AACA;AACA;AACA;AACA;AACA,cAAc,mFAAa;AAC3B;AACA;AACA;AACA;;AAEA,gCAAgC,gDAAO;AACvC;AACA;AACA;AACA;AACA;AACA,cAAc,mFAAa;AAC3B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,0CAA0C,kBAAkB;AAC5D;AACA;AACA,qCAAqC,sDAAsD;AAC3F;AACA;AACA,8CAA8C,wBAAwB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,GAAG,mBAAmB;AAC5B;AACA,YAAY,SAAS;AACrB,KAAK,+CAA+C;AACpD,KAAK,8DAA8D;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG,GAAG,mBAAmB;AACzB;;AAEA;AACA,0CAA0C,sBAAsB;AAChE;AACA;AACA,qCAAqC,sDAAsD;AAC3F;AACA;AACA;AACA,8CAA8C,4BAA4B;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,GAAG,mBAAmB;AAC5B;AACA,YAAY,SAAS;AACrB,KAAK,+CAA+C;AACpD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG,GAAG,mBAAmB;AACzB;;AAEA;AACA;AACA,KAAK,iGAAiG;AACtG;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK,gFAAgF;AACrF;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,eAAe;AACf;AACA,YAAY,OAAO;AACnB,YAAY,+CAA+C;AAC3D;AACA;AACA;AACA;;AAEA;AACA,qEAAqE,yDAAyD;AAC9H;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,8DAA8D;AACtF;AACA;AACA,YAAY;AACZ,0EAA0E;AAC1E;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;;AAEA,6CAA6C,iDAAQ;AACrD;AACA,GAAG;AACH,wDAAwD,8CAAK;AAC7D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6DAA6D,oBAAoB;AACjF,KAAK;AACL;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gGAAgG;AAC5G;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6CAAI;AACZ;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,wCAAwC;AACpD,YAAY,OAAO;AACnB,cAAc,2CAA2C;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qDAAqD,4CAA4C;AACjG;AACA;AACA;AACA;AACA,SAAS,+CAA+C;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sCAAsC;AAClD,YAAY,4BAA4B;AACxC,cAAc,qCAAqC;AACnD;AACA;AACA;AACA;AACA,cAAc,8CAAK;AACnB;;AAEA;;AAEA;AACA;;AAEA;AACA,wBAAwB,mDAAU;AAClC,gBAAgB,8CAAK;AACrB;AACA;AACA,IAAI;AACJ;;AAEA;AACA,uBAAuB,mDAAU;AACjC,gBAAgB,8CAAK;AACrB;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,8CAAK;AAChB;;AAEA;AACA,eAAe,8CAAK;AACpB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,8DAA8D;AAC9E,KAAK,gEAAgE;AACrE;AACA,aAAa,sCAAsC;AACnD,aAAa,qCAAqC;AAClD,cAAc,yCAAyC;AACvD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,yCAAyC;AACrD,YAAY,kCAAkC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,8CAAK;AAC7B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,mDAAmD;AAC/D,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,wDAAwD;AACpE,YAAY,yCAAyC;AACrD,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC,6BAA6B;AAChE;AACA;AACA,YAAY,gCAAgC;AAC5C,YAAY,OAAO;AACnB,cAAc,2CAA2C;AACzD;AACA;AACA;AACA;;AAEA,uCAAuC,gBAAgB;AACvD;AACA,yCAAyC,8CAAK;AAC9C;;AAEA;AACA;AACA,eAAe,8CAAK;AACpB;;AAEA,YAAY,iDAAQ;AACpB;;AAEA,SAAS,iDAAQ;AACjB;;AAEA;AACA,aAAa,8CAAK;AAClB;AACA;AACA;;AAEA,iFAAG,UAAU,qFAAe;;AAE5B;AACA,yBAAyB,kBAAkB;AAC3C;AACA,IAAI,sDAAsD;AAC1D;AACA,kBAAkB,qBAAqB;AACvC;AACA;AACA;AACA,QAAQ,kBAAkB;AAC1B,IAAI,sEAAsE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG,mBAAmB;AAC3B;AACA;AACA;AACA,oBAAoB,+CAA+C;AACnE,IAAI,8DAA8D;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG,mBAAmB;AAC3B;AACA;AACA,wBAAwB,sDAAsD;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG,mBAAmB;AAC3B;AACA;AACA,WAAW,MAAM;AACjB;;AAEA;AACA,yBAAyB,sBAAsB;AAC/C;AACA,IAAI,sDAAsD;AAC1D;AACA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;AACA,QAAQ,sBAAsB;AAC9B,IAAI,sEAAsE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG,mBAAmB;AAC3B;AACA;AACA;AACA,oBAAoB,+CAA+C;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG,mBAAmB;AAC3B;AACA;AACA,gCAAgC,sDAAsD;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG,mBAAmB;AAC3B;AACA;AACA,WAAW,MAAM;AACjB;;AAEA;AACA,sBAAsB,+CAA+C;AACrE;AACA;AACA;AACA,sBAAsB;AACtB,8BAA8B;AAC9B,6BAA6B;AAC7B,yBAAyB;AACzB,gCAAgC;AAChC,+BAA+B;AAC/B,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,uBAAuB;AACvB;AACA,IAAI,4DAA4D;AAChE,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,yCAAyC,yDAAyD;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;;AAEA;AACA,4BAA4B,sDAAsD;AAClF,uBAAuB,+CAA+C;AACtE,+BAA+B;AAC/B,QAAQ,+CAA+C;AACvD,IAAI,sDAAsD;AAC1D;AACA,QAAQ,sDAAsD;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,4EAA4E;AACpH;AACA;AACA;AACA,6BAA6B,6EAA6E;AAC1G,IAAI,qFAAqF;AACzF;AACA,WAAW,yEAAyE;AACpF,IAAI,iFAAiF;AACrF,wCAAwC,yDAAyD;AACjG;AACO;AACP;AACA;AACA;AACA,YAAY,mDAAmD;AAC/D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA,sDAAsD;AACtD;AACA,cAAc,oCAAoC;AAClD;AACA;AACA,YAAY,iFAAiF;AAC7F;AACA,cAAc,yCAAyC;AACvD;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,uCAAuC;AACvC,6BAA6B;AAC7B,iCAAiC;AACjC;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,uCAAuC;AACvC,6BAA6B;AAC7B,iCAAiC;AACjC;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,8DAA8D;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,+CAA+C;AACnE;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iFAAiF;AAC1G,uEAAuE,oCAAoC;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,uDAAuD;AACvD;;AAEA;AACA,mBAAmB,8DAA8D;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,oCAAoC;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,oDAAoD;AACpD,+DAA+D;AAC/D,KAAK;AACL;AACA,aAAa,OAAO;AACpB;;AAEA;AACA;AACA;AACA,QAAQ,iGAAiG;AACzG;AACA,aAAa,OAAO;AACpB,cAAc,QAAQ;AACtB;AACA,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0BAA0B;;AAE1B;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,2CAA2C;AACtD,WAAW,2CAA2C;AACtD,aAAa,kBAAkB;AAC/B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,wCAAwC;AACnD,aAAa,2CAA2C;AACxD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrmDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEkC;AACR;AACE;AAC0C;AACE;AACpB;AACc;;AAElE;AACA,0BAA0B,6CAA6C;AACvE,IAAI,4DAA4D,MAAM;AACtE,eAAe,6EAA6E;AAC5F;AACA;AACA;AACA;AACA;AACe;AACf;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,kDAAkD;AACrF;AACA;AACA;AACA,+BAA+B,yCAAyC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,iBAAiB;AACxE;AACA,YAAY,yCAAyC;AACrD,YAAY,wCAAwC;AACpD,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA,iCAAiC,kDAAkD;AACnF,KAAK,8CAA8C;AACnD,+EAA+E,uBAAuB;AACtG;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,aAAa,2BAA2B,cAAc;AAC7F;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,gGAAgG;AAC5G;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,aAAa,8CAAK;AAClB;AACA;;AAEA;AACA;AACA,kCAAkC,kDAAkD;AACpF,KAAK,+DAA+D;AACpE;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,8CAAK;AAC1B;;AAEA;AACA;AACA,iCAAiC,8CAA8C;AAC/E,KAAK,6DAA6D;AAClE;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,8CAAK;AACzB;;AAEA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK,0DAA0D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,kDAAkD;AACjF;AACA;AACA;AACA;AACA,2BAA2B,yCAAyC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,iBAAiB;AACxE;AACA,YAAY,yCAAyC;AACrD,YAAY,wCAAwC;AACpD,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG,iCAAiC,8CAAK;AACzC;AACA,GAAG,iCAAiC,iDAAQ;AAC5C,0BAA0B,8CAAK;AAC/B,GAAG,iCAAiC,6CAAI;AACxC;AACA;;AAEA;AACA,YAAY,8CAAK;AACjB,IAAI;AACJ,YAAY,8CAAK;AACjB,IAAI;AACJ,gBAAgB,8CAAK,EAAE,iDAAQ;AAC/B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,cAAc,mFAAa;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG,WAAW,wFAAU;AACxB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,WAAW,8CAA8C;AACzD,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6DAA6D,qDAAqD;AAClH,KAAK,oDAAoD;AACzD;AACA;AACA;AACA,YAAY,2CAA2C;AACvD,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,8CAAK;AACpC;AACA,oEAAoE,sCAAsC;AAC1G;AACA,aAAa,sCAAsC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,mFAAa;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,8BAA8B,qBAAqB;AACnD;;AAEA;AACA,WAAW,oDAAoD;AAC/D;AACA;AACA,KAAK,mFAAmF;AACxF;AACA;AACA,YAAY,oEAAoE;AAChF,YAAY,8BAA8B;AAC1C,0BAA0B,+CAA+C;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;AACA;AACA;AACA;;AAEA,mBAAmB,iDAAQ;;AAE3B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAwB,8CAAK;AAC7B;AACA,GAAG;AACH,wBAAwB,8CAAK;AAC7B;AACA;;AAEA,8BAA8B,qBAAqB;AACnD;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,EAAE;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4DAA4D,0BAA0B;AACtF;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA,mCAAmC,6CAA6C;AAChF;AACA;;AAEA;AACA;AACA;AACA,mDAAmD,0BAA0B;AAC7E;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,EAAE;AACd;AACA;AACA;AACA;;AAEA,mCAAmC,6CAA6C;AAChF;AACA;;AAEA;AACA,mCAAmC,kDAAkD;AACrF;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iCAAiC;AACjC,uCAAuC;AACvC;AACA,sCAAsC;AACtC,6BAA6B;AAC7B;AACA,KAAK,8EAA8E;AACnF;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,wDAAwD;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,2CAA2C,iDAAQ;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,gEAAgE;AACnF;AACA;AACA;AACA;AACA;AACA,YAAY,oCAAoC;AAChD,cAAc;AACd;AACA;AACA,6BAA6B,iDAAQ;AACrC,2BAA2B,iDAAQ;;AAEnC;AACA;AACA;;AAEA;AACA,kCAAkC,4BAA4B;AAC9D;AACA;AACA;AACA,YAAY,gCAAgC;AAC5C;AACA;AACA;AACA,yBAAyB,8CAAK;AAC9B;;AAEA;AACA;AACA;AACA;AACA,YAAY,gCAAgC;AAC5C;AACA;AACA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;AACA;AACA;AACA,eAAe,gCAAgC;AAC/C,eAAe,gCAAgC;AAC/C;AACA,cAAc,mFAAa;AAC3B;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA,oDAAoD,2BAA2B;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ,0BAA0B,8CAA8C;AAC5F;AACA,SAAS,8DAA8D;AACvE,sCAAsC,+CAA+C;AACrF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ,0BAA0B,8CAA8C;AAC5F;AACA,SAAS,8DAA8D;AACvE,uCAAuC,+CAA+C;AACtF;AACA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;;AAEA,iFAAG,aAAa,kFAAY;;AAE5B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kDAAkD,uCAAuC;;AAEzF;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,qCAAqC;AAChD,WAAW,gCAAgC;AAC3C;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8CAA8C,8CAAK;;AAEnD;AACA;;AAEA;AACA;AACA,WAAW,8BAA8B;AACzC,aAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;;;;;;;;;;;;ACh5BA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE0B;;AAE1B,iCAAiC,gCAAgC;;AAEjE;AACA,6BAA6B,yCAAyC,gBAAgB,mDAAmD;AACzI;AACA,uBAAuB,oCAAoC;AAC3D;AACA;AACA,sBAAsB,qDAAqD;AAC3E;AACA;AACA,IAAI,kEAAkE;AACtE;AACA;AACA;AACe,mBAAmB,6CAAI;AACtC;AACA;AACA;AACA;AACA,aAAa,mDAAmD;AAChE;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO,iCAAiC,+BAA+B;AACnF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB;AACvB,uBAAuB;AACvB,6BAA6B;AAC7B,6BAA6B;AAC7B;AACA,4BAA4B;AAC5B,oCAAoC;AACpC;AACA,KAAK,8EAA8E;AACnF;AACA,YAAY,OAAO;AACnB;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,8BAA8B;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,8BAA8B;AAC5C;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,YAAY;AACnD;;AAEA;AACA,uDAAuD,OAAO,WAAW,wDAAwD;AACjI;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACnIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEwE;;AAExE,iCAAiC,gCAAgC;;AAEjE;AACA,qCAAqC,8CAA8C;AACnF;AACA,UAAU,sDAAsD;AAChE,IAAI,6CAA6C,6CAA6C;AAC9F;AACA;AACA;AACA;AACA,sCAAsC,yCAAyC;AAC/E;AACA;AACA;AACA,QAAQ,wDAAwD;AAChE;AACA,gDAAgD,yCAAyC;AACzF;AACA;AACA;AACA,QAAQ,yDAAyD;AACjE;AACA;AACA;AACA,6EAA6E;AAC7E,YAAY;AACZ;AACA,yCAAyC,kEAAkE;AAC3G;AACA;AACe;AACf;AACA;AACA;AACA;AACA,YAAY,8BAA8B;AAC1C,YAAY,OAAO,yBAAyB,iEAAiE;AAC7G;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,gBAAgB,iEAAiE;AACjF;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,mFAAmF;AACnF;AACA;AACA,qEAAqE;AACrE,MAAM,wEAAwE;AAC9E;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAiC;AACjC,uCAAuC;AACvC;AACA,sCAAsC;AACtC,6BAA6B;AAC7B;AACA,KAAK,8EAA8E;AACnF;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,cAAc,MAAM;AACpB;AACA,0BAA0B,yCAAyC;AACnE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,EAAE;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,YAAY;AACnD;;AAEA;AACA;AACA;;AAEA;AACA,4DAA4D,OAAO;AACnE,uCAAuC,wDAAwD;AAC/F;AACA;;;;;;;;;;;;;ACjRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE0B;AACU;AACJ;AACE;AACsC;;AAExE;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA,YAAY,OAAO,YAAY;AAC/B,YAAY,qBAAqB;AACjC,YAAY,gCAAgC;AAC5C,YAAY,sCAAsC;AAClD,YAAY,QAAQ;AACpB,+CAA+C,8CAA8C;AAC7F,KAAK,8CAA8C;AACnD,YAAY,QAAQ;AACpB;AACA,YAAY,QAAQ;AACpB;AACA,UAAU,0CAA0C;AACpD;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;AACA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,mFAAa;AAC1B;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,qBAAqB;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAsC,aAAa;AACnD;AACA;AACA;AACA;AACA,cAAc,gCAAgC;AAC9C;AACA;;AAEA;AACA;AACA,MAAM,kEAAkE;AACxE,SAAS,iBAAiB;AAC1B;AACA;AACA;AACA,cAAc,sCAAsC;AACpD;AACA;AACA;AACA,GAAG;AACH,mBAAmB,iDAAQ;AAC3B;;AAEA;AACA;;AAEA;AACA;AACA,sBAAsB,8CAA8C;AACpE;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA,gFAAgF,0CAA0C;AAC1H;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,WAAW,gBAAgB,SAAS,iBAAiB;AACrD;AACA;AACA;AACA,mDAAmD;AACnD,gCAAgC;AAChC,iCAAiC;AACjC;AACA,YAAY,SAAS,+BAA+B,qDAAqD;AACzG;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,MAAM,cAAc;AACpB,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,+CAA+C;AAC7D;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,8CAA8C,gBAAgB;AAC9D;AACA;AACA,cAAc;AACd,cAAc,QAAQ;AACtB,cAAc,+CAA+C;AAC7D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA,WAAW;AACX;;AAEA;;AAEA,uBAAuB,gDAAO;AAC9B;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA,GAAG,2BAA2B,6CAAI;AAClC;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,kDAAS;;AAE7B;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA,+CAA+C,gBAAgB;AAC/D;AACA;AACA,cAAc;AACd,cAAc,QAAQ;AACtB,cAAc,+CAA+C;AAC7D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA,WAAW;AACX;;AAEA;AACA;;AAEA,uBAAuB,gDAAO;AAC9B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA,GAAG,2BAA2B,6CAAI;AAClC;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,kDAAS;;AAE7B;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,gDAAgD;AAC7E;AACA;AACA,gCAAgC,4DAA4D;AAC5F;AACA,aAAa,+CAA+C;AAC5D;;AAEA;AACA,uBAAuB,gDAAgD;AACvE;AACA,aAAa,OAAO;AACpB,cAAc,mDAAmD;AACjE,cAAc,8BAA8B,6CAA6C,gDAAgD;AACzI,cAAc,sCAAsC;AACpD;AACA;AACA;AACA;AACA,cAAc,sCAAsC;AACpD;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA,aAAa,qBAAqB;AAClC;;;;;;;;;;;;;ACjZA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE2C;AACd;AACwB;;AAErD;AACA;AACA;AACA,kBAAkB,oDAAoD;AACtE;AACA,qBAAqB;AACrB;AACA;AACA,WAAW,gCAAgC;AAC3C;AACA,WAAW,gGAAgG;AAC3G;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,wDAAwD,MAAM;AACxE;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,sDAAsD;AACrE;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,qDAAY;;AAE7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW,wBAAwB,yBAAyB;AACzE;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,qCAAqC;AAC/D;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;;AAEA;AACA,6BAA6B;AAC7B;AACA,2BAA2B;AAC3B;AACA;;AAEA;AACA;AACA,8BAA8B;AAC9B;AACA,mCAAmC;AACnC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA,0BAA0B,8CAAK;;AAE/B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,0DAAiB;AAC5C;AACA,EAAE;AACF;AACA;AACA;;;;;;;;;;;;;AC5PA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gCAAgC;AAC3C;AACA,WAAW,gGAAgG;AAC3G;AACA,aAAa;AACb;AACe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,kDAAkD,gBAAgB;AAClE;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;;AAEA,8BAA8B,wBAAwB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,EAAE;AACF;;;;;;;;;;;;;ACrJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEmC;AACQ;AACV;AACJ;AACwB;AAChB;AACmC;;AAExE;AACA;AACA;AACA;AACA,sBAAsB,8CAA8C;AACpE;AACA;AACA;AACA;AACA,kBAAkB,oDAAoD;AACtE,gFAAgF;AAChF;AACA;AACA,WAAW,gCAAgC;AAC3C;AACA,WAAW,oFAAoF;AAC/F,WAAW,yCAAyC;AACpD;AACA,WAAW,wCAAwC;AACnD,aAAa,gCAAgC;AAC7C;AACA;AACA;AACe;AACf;AACA;;AAEA;AACA;AACA,GAAG,iCAAiC,kDAAS,0BAA0B,0DAAiB;AACxF;AACA,GAAG;AACH;AACA;;AAEA;AACA,oCAAoC,2BAA2B;AAC/D;;AAEA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA,6BAA6B,0DAAiB;AAC9C;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,0BAA0B;AACxC;AACA;;AAEA;AACA;AACA;AACA,cAAc,sCAAsC;AACpD;AACA;;AAEA;AACA;AACA;AACA,cAAc,sCAAsC;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,IAAI;AAClB;AACA;;AAEA;AACA;AACA;AACA,cAAc,kCAAkC;AAChD;AACA;;AAEA;;AAEA;AACA,2CAA2C,yEAAyE;AACpH;AACA;AACA,cAAc,mDAAmD;AACjE;AACA;;AAEA;AACA,qCAAqC,yEAAyE;AAC9G;AACA;AACA,cAAc,mDAAmD;AACjE;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,yCAAyC;AACrD,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA,kBAAkB,kBAAkB;AACpC;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,UAAU,8CAAK;AACf;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA,aAAa,8CAAK;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,8BAA8B;AAC1C,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,oCAAoC;AAChD,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,8BAA8B;AAC1C,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,8BAA8B;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,8BAA8B;AAC5C,cAAc,sCAAsC;AACpD;AACA,aAAa,mFAAa;AAC1B;AACA;AACA,KAAK;AACL;AACA;;AAEA,kBAAkB,qDAAY;;AAE9B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sCAAsC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,qDAAY;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,qDAAY;AACnC;AACA;;AAEA;AACA;AACA,YAAY,8BAA8B;AAC1C,YAAY,OAAO;AACnB;AACA;AACA,0BAA0B,gDAAO;AACjC;AACA;;AAEA;AACA;AACA,uBAAuB,qDAAY;AACnC;AACA,wBAAwB,qDAAY;AACpC;;AAEA;AACA,wBAAwB,qDAAY;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,qDAAY;AACtC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qDAAY;AACpC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,mFAAa;AAC3B;;AAEA;AACA;AACA,mBAAmB,iDAAQ;;AAE3B;AACA;AACA,wBAAwB,qDAAY;;AAEpC;AACA;AACA;AACA,wBAAwB,qDAAY;AACpC;;AAEA;;AAEA;AACA;AACA;AACA,0BAA0B,qDAAY;AACtC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,8BAA8B;AAC1C,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;;AAEA;AACA,gCAAgC,gDAAO;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,8BAA8B;AAC1C,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;;AAEA;AACA,4BAA4B,gDAAO;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,8BAA8B;AAC1C,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,8BAA8B;AAC1C,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,8BAA8B;AAC1C,YAAY,oCAAoC;AAChD,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC1mBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEmC;AACI;AACV;AACyE;AACjD;;AAErD,uCAAuC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,sDAAsD;AACxE;AACA,qBAAqB;AACrB;AACA;AACA,WAAW,gCAAgC;AAC3C;AACA,WAAW,gGAAgG;AAC3G;AACA,WAAW,OAAO;AAClB,WAAW,qBAAqB;AAChC,WAAW,+BAA+B;AAC1C;AACe,wDAAwD;AACvE;AACA;AACA;;AAEA;;AAEA,oBAAoB,mDAAU;AAC9B;AACA;AACA;AACA,EAAE;;AAEF,eAAe;;AAEf;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,6BAA6B,0DAAiB;AAC9C;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,YAAY,mCAAmC;AAC/C,WAAW,8CAA8C;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,iDAAQ;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,0CAA0C;AACrD,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;;AAEA,UAAU,mGAAqB,6CAA6C,oGAAsB;AAClG;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,0CAA0C;AACrD,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,iDAAQ;;AAE3B;AACA,aAAa,8CAAK;AAClB,EAAE;AACF,aAAa,8CAAK;AAClB;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,8BAA8B;AACzC,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;;;;;;;;;;;;;ACjOA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE6B;AACM;;AAEnC;AACA;AACA;AACA;AACA,YAAY,wDAAwD;AACpE;AACA;AACA;AACA,8DAA8D;AAC9D;AACA,6DAA6D;AAC7D;AACA,WAAW,iEAAiE;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gCAAgC;AAC3C;AACO;AACP;AACA;;AAEA;AACA;AACA,WAAW,kCAAkC;AAC7C,WAAW,gCAAgC;AAC3C;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,2DAA2D,iCAAiC;AAC5F;AACA;;AAEA;AACA;AACA,WAAW,gCAAgC;AAC3C,WAAW,kCAAkC;AAC7C,aAAa,qCAAqC;AAClD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,gCAAgC;AAC3C,WAAW,kCAAkC;AAC7C,aAAa,qCAAqC;AAClD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,YAAY,8CAAK;AACjB;;AAEA;AACA;AACA,WAAW,gCAAgC;AAC3C,WAAW,kCAAkC;AAC7C,aAAa,qCAAqC;AAClD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,8CAAK;AACnB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,iDAAQ;AACxB;;AAEA;AACA,cAAc,iDAAQ;AACtB;;AAEA,aAAa,8CAAK;AAClB;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,8BAA8B;AACzC,WAAW,kCAAkC;AAC7C,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,sCAAsC;AACjD,WAAW,sCAAsC;AACjD,WAAW,kCAAkC;AAC7C,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,wCAAwC;AACnD,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sBAAsB,8CAAK;AAC3B;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,8BAA8B;AACzC,WAAW,kCAAkC;AAC7C,aAAa;AACb;AACA;AACA;;;;;;;;;;;;;AC/RA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEgE;AACN;AACA;AACA;AACJ;AACI;AACc;AAChB;AACA;;AAEN;AACxB;AACM;AACQ;AACN;AACH;AACqB;;AAEI;;AAEgB;;AAExE;AACA;AACA;AACA;AACA,wDAAwD,wDAAwD;AAChH,IAAI,sEAAsE;AAC1E;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gDAAgD,wCAAwC;AACxF;AACA,IAAI,wFAAwF;AAC5F;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA,6DAA6D,8DAA8D;AAC3H,KAAK,4EAA4E;AACjF;AACA;AACA,YAAY,gCAAgC;AAC5C,YAAY,gCAAgC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA,mBAAmB,8CAA8C;AACjE;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc,8BAA8B;AAC5C;AACA;AACA,aAAa,8CAAI;AACjB;;AAEA;AACA,mBAAmB,kDAAkD;AACrE;AACA;AACA,yCAAyC,sBAAsB;AAC/D;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc,oCAAoC;AAClD;AACA;AACA,aAAa,iDAAO;AACpB;;AAEA;AACA,mBAAmB,8EAA8E;AACjG;AACA,cAAc,sDAAsD;AACpE;AACA;AACA,aAAa,yDAAgB;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,oDAAoD;AAChG;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4CAA4C;AACrE,KAAK,yCAAyC,MAAM,6DAA6D;AACjH;AACA;AACA,KAAK,4EAA4E;AACjF;AACA,YAAY,oFAAoF;AAChG;AACA,YAAY,oEAAoE;AAChF,YAAY,8BAA8B;AAC1C,2BAA2B,+CAA+C;AAC1E;AACA;AACA;;AAEA,uBAAuB,8CAAI;AAC3B;AACA;;AAEA,mBAAmB,kDAAQ;;AAE3B;AACA;AACA;AACA;AACA;AACA,eAAe,kDAAK;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oFAAa;AAC5B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,qBAAqB,kEAAe;;AAEpC,uBAAuB,8CAAI;AAC3B;AACA;;AAEA;AACA;;AAEA;AACA,uBAAuB,yDAAgB;AACvC;AACA;AACA,8BAA8B,kDAAQ;AACtC,sBAAsB,kDAAK;AAC3B;AACA;AACA;;AAEA,qBAAqB;;AAErB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,oDAAoD;AAClG;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,oEAAoE;AAChF,YAAY,8BAA8B;AAC1C,0BAA0B,+CAA+C;AACzE;AACA;AACA,6BAA6B,yDAAgB,0BAA0B,iDAAO,0BAA0B,kDAAQ;AAChH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yCAAyC,sBAAsB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,oDAAoD;AAChG;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,oEAAoE;AAChF,YAAY,8BAA8B;AAC1C,0BAA0B,+CAA+C;AACzE;AACA;AACA,6BAA6B,yDAAgB,0BAA0B,iDAAO,0BAA0B,kDAAQ;AAChH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4CAA4C;AACrE,KAAK,yCAAyC,MAAM,6DAA6D;AACjH;AACA,YAAY;AACZ;AACA,YAAY,0FAA0F;AACtG;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,0FAA0F;AACtG;AACA;AACA,6BAA6B,yDAAgB,0BAA0B,iDAAO;AAC9E;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yCAAyC,sBAAsB;AAC/D;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,0FAA0F;AACtG;AACA;AACA,6BAA6B,yDAAgB,0BAA0B,iDAAO;AAC9E;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,qDAAqD;AACrD,aAAa,4CAA4C;AACzD;AACA,YAAY,OAAO;AACnB,YAAY,EAAE;AACd,YAAY,8DAA8D;AAC1E;AACA;AACA;AACA;;AAEA,8BAA8B,kDAAK;AACnC;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,oCAAoC;AACpC,aAAa,4CAA4C;AACzD;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,YAAY,OAAO;AACnB,YAAY,8DAA8D;AAC1E;AACA;AACA;AACA,8BAA8B,oFAAK;AACnC;AACA;AACA;;AAEA;AACA,gDAAgD;AAChD,eAAe,4CAA4C;AAC3D;AACA,YAAY,OAAO;AACnB,YAAY,8DAA8D;AAC1E;AACA;AACA;AACA;;AAEA,8BAA8B,kDAAK;AACnC;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,8DAA8D;AAC1E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,kDAAK;AACtC;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,oDAAoD;AAChG;AACA;AACA,+CAA+C,kEAAkE;AACjH;AACA,KAAK,+CAA+C;AACpD;AACA,YAAY,gCAAgC;AAC5C,YAAY,oEAAoE;AAChF,YAAY,8BAA8B;AAC1C,2BAA2B,+CAA+C;AAC1E;AACA;AACA;;AAEA,2BAA2B,kDAAK;AAChC;AACA;AACA;AACA;AACA;AACA,aAAa,oFAAa;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oFAAa;AAC1B;;AAEA,mBAAmB,kDAAQ;;AAE3B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO,sDAAsD;AAC7D;AACA;AACA;AACA,aAAa,oFAAa;AAC1B;;AAEA;AACA,wBAAwB,gEAAa;;AAErC;AACA;AACA;;AAEA;AACA,yBAAyB,yCAAyC,KAAK,4CAA4C;AACnH;AACA,YAAY,8DAA8D;AAC1E;AACA;AACA;;AAEA,+CAA+C,kDAAK,iBAAiB,kDAAK;AAC1E;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sCAAsC;AAClD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,gCAAgC,iDAAO;AACvC;AACA;AACA;AACA;AACA;AACA,aAAa,oFAAa;AAC1B;;AAEA,+BAA+B,iDAAO;AACtC;AACA;AACA;AACA;AACA;AACA,aAAa,oFAAa;AAC1B;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,kBAAkB,8FAA8F;AAChH;AACA,YAAY,0FAA0F;AACtG,YAAY,eAAe,0BAA0B,iDAAiD;AACtG,YAAY,gDAAgD;AAC5D,SAAS,sDAAsD;AAC/D,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,kFAAkF;AACpG;AACA,YAAY,oEAAoE;AAChF,YAAY,8BAA8B;AAC1C,0BAA0B,+CAA+C;AACzE,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,wFAAwF;AAC1G;AACA,YAAY,8BAA8B;AAC1C,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,0FAA0F;AAC5G;AACA,YAAY,8BAA8B;AAC1C,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,wEAAwE;AAC1F;AACA,YAAY,sCAAsC;AAClD,YAAY,sCAAsC;AAClD,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,4EAA4E;AAC9F;AACA,YAAY,oCAAoC;AAChD,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,4EAA4E;AAC9F;AACA,YAAY,oCAAoC;AAChD,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,gFAAgF;AAClG;AACA,YAAY,yCAAyC;AACrD,YAAY,wCAAwC;AACpD,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,sCAAsC;AAClD;AACA;AACA;AACA;;AAEA,aAAa,kDAAK,yBAAyB,kDAAQ;AACnD;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,sCAAsC;AAClD;AACA;AACA,yBAAyB,kDAAQ;AACjC,yBAAyB,kDAAQ;;AAEjC;AACA,gCAAgC,kDAAQ;;AAExC;;AAEA,oBAAoB,iEAAc;;AAElC;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,oCAAoC;AAChD,YAAY,OAAO;AACnB;AACA;AACA;;AAEA,6BAA6B,iDAAO;AACpC;AACA;AACA;AACA;AACA;AACA,aAAa,oFAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,kEAAe,EAAE,kDAAQ;;AAEvD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sCAAsC;AAClD,YAAY,8BAA8B;AAC1C,cAAc,OAAO;AACrB,cAAc,sCAAsC;AACpD,cAAc,gCAAgC;AAC9C;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oFAAa;AAC1B;;AAEA;AACA;AACA;AACA;;AAEA,uCAAuC,oBAAoB;AAC3D,aAAa,oFAAa;AAC1B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,iEAAc;;AAEnC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,kDAAK,EAAE,kDAAQ,wCAAwC,kDAAQ;AAC7E;AACA;;AAEA;AACA;AACA;AACA,2DAA2D,4DAA4D;AACvH;AACA;AACA,YAAY,gCAAgC;AAC5C,YAAY,2CAA2C;AACvD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oFAAa;AAC1B;;AAEA,6CAA6C,iDAAO,yBAAyB,iDAAO;;AAEpF;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oFAAa;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oFAAa;AAC1B;;AAEA;;AAEA;AACA,2BAA2B,kDAAK;;AAEhC,2BAA2B,kDAAQ;AACnC;;AAEA;AACA;AACA;AACA;AACA,YAAY,oCAAoC;AAChD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oFAAa;AAC1B;;AAEA,aAAa,kDAAK;AAClB;AACA;;AAEA;AACA,YAAY,yDAAyD;AACrE;AACA;AACA;AACA;AACA;AACA,KAAK,2EAA2E;AAChF;AACA;AACA;AACA;AACA,KAAK,+EAA+E;AACpF,qCAAqC,4EAA4E;AACjH,sCAAsC,kEAAkE;AACxG;AACA;AACA;AACA,6BAA6B,+BAA+B;AAC5D;AACA;AACA;AACA,6BAA6B,8BAA8B;AAC3D;AACA;AACA;AACA,6BAA6B,kDAAkD;AAC/E;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB,SAAS,yEAAyE;AAClF,YAAY,gCAAgC;AAC5C,YAAY,QAAQ;AACpB,cAAc,4CAA4C;AAC1D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oFAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oFAAa;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oFAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,kCAAkC,yDAAyD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sDAAsD;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,2EAA2E;AAChF;AACA;AACA;AACA;AACA,SAAS,+EAA+E;AACxF,qCAAqC,4EAA4E;AACjH,sCAAsC,kEAAkE;AACxG;AACA;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA,4BAA4B,8BAA8B;AAC1D,gCAAgC,8BAA8B;AAC9D;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA,gCAAgC,qBAAqB;AACrD;AACA;AACA,YAAY,mDAAmD;AAC/D,YAAY,OAAO;AACnB;AACA,YAAY,gCAAgC;AAC5C,YAAY,QAAQ;AACpB,SAAS,yEAAyE;AAClF,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oFAAa;AAC1B;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oFAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,mBAAmB,yDAAyD;AAC5E;AACA;AACA;AACA,YAAY,mDAAmD;AAC/D;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oFAAa;AAC1B;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK,0DAA0D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,kDAAkD;AACjF;AACA;AACA;AACA;AACA,2BAA2B,yCAAyC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iBAAiB;AACnD;AACA;AACA;AACA,YAAY,yCAAyC;AACrD,YAAY,wCAAwC;AACpD,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,oEAAoE;AAC/E;AACA;AACA,KAAK,oDAAoD;AACzD;AACA,YAAY,oEAAoE;AAChF,YAAY,8BAA8B;AAC1C,0BAA0B,+CAA+C;AACzE;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,4BAA4B;AAChE;AACA;AACA;AACA;AACA;AACA,YAAY,2BAA2B;AACvC;AACA,YAAY,EAAE;AACd;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH,iCAAiC,oFAAK;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,yBAAyB;AACrC;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA,cAAc,uCAAuC;AACrD;AACA;AACA,KAAK,uCAAuC;AAC5C;AACA;AACA,YAAY,OAAO,gCAAgC,uCAAuC;AAC1F;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,EAAE;AACd;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,2DAAiB;;AAErC;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,2DAAiB;;AAErC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,wDAAwD;AAC/F,MAAM,sEAAsE;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oFAAa;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B,YAAY,sEAAsE;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qCAAqC,qBAAqB;AAC1D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kCAAkC;AAC7C,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,WAAW,gCAAgC;AAC3C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,sCAAsC,gBAAgB;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,kDAAQ;AAClC;AACA;;AAEA;AACA,oBAAoB,kDAAK;AACzB;AACA,wBAAwB,qEAAkB;;AAE1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,kCAAkC;AAC7C,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,WAAW,8BAA8B;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,yEAAsB;AACzC,GAAG;AACH,eAAe,kDAAK,EAAE,kDAAQ;;AAE9B;;AAEA,mBAAmB,qEAAkB;AACrC;;AAEA;AACA;AACA;AACA;;AAEA,4CAA4C,kEAAkE;AAC9G;AACA;AACA,WAAW,kCAAkC;AAC7C,WAAW,OAAO;AAClB,WAAW,gCAAgC;AAC3C,WAAW,gCAAgC;AAC3C,WAAW,QAAQ;AACnB;AACA;AACA;;AAEA,uBAAuB,kEAAe;;AAEtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,sCAAsC;AACjD,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,gCAAgC;AAC3C;AACA;;AAEA;AACA;AACA,gCAAgC,kDAAQ;;AAExC,kBAAkB,gEAAa;AAC/B,EAAE;AACF,kBAAkB,kEAAe;AACjC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,qDAAW,qBAAqB,qDAAW;AAClE;AACA;;AAEA;AACA;;;;;;;;;;;;;AC7hDA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEkE;AACA;;AAElE;AACA,qFAAqF;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA,2BAA2B,YAAY;AACvC;AACA,WAAW,OAAO;AAClB,WAAW,6BAA6B;AACxC,WAAW,gCAAgC;AAC3C,WAAW,sCAAsC;AACjD;AACA,WAAW,OAAO;AAClB,WAAW,2BAA2B,qBAAqB,8CAA8C;AACzG;AACe,uCAAuC,0CAA0C;AAChG;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C,+EAAQ;AACpD,2CAA2C,+EAAQ;;AAEnD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE,GAAG,WAAW,gFAAU,oBAAoB;AAC9C;;AAEA;AACA,yCAAyC,sDAAsD;AAC/F,mEAAmE;AACnE,yCAAyC,mCAAmC;AAC5E;AACA;AACA;AACO;AACP;AACA;AACA;AACA,YAAY,gCAAgC;AAC5C,YAAY,sCAAsC;AAClD;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,MAAM,iEAAiE;AACvE;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,MAAM,iEAAiE;AACvE;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA,+DAA+D,mCAAmC;AAClG;AACA,YAAY,sCAAsC;AAClD,YAAY,sDAAsD;AAClE,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gEAAgE,mCAAmC;AACnG;AACA,YAAY,sCAAsC;AAClD,YAAY,sDAAsD;AAClE,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0EAA0E;AAC1E;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oDAAoD;AACpD,yCAAyC;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,yCAAyC;AACzC,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C;AAC1C,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mDAAmD,iBAAiB;AACpE;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,8CAA8C,UAAU,iBAAiB;AAC9F;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,qCAAqC;AACrC,uDAAuD,oBAAoB;AAC3E;AACA,qBAAqB,iEAAiE;AACtF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,qDAAqD;AACzF;AACA,qBAAqB,gEAAgE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,iBAAiB;AAClC,KAAK,qDAAqD;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,iBAAiB,iBAAiB;AAClC;AACA,SAAS,qDAAqD;AAC9D;AACA;AACA,YAAY,sCAAsC;AAClD;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,KAAK,iEAAiE;AACtE;AACA,SAAS,wCAAwC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,sCAAsC;AACjD,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA,WAAW,sCAAsC;AACjD,WAAW,OAAO;AAClB;AACA,QAAQ,wBAAwB;AAChC;AACA;;AAEA;AACA;;AAEA,WAAW,sCAAsC;AACjD,WAAW,OAAO;AAClB;AACA,QAAQ,wBAAwB;AAChC;AACA;;AAEA;AACA;;AAEA,WAAW,sCAAsC;AACjD,WAAW,OAAO;AAClB;AACA,QAAQ,wBAAwB;AAChC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,WAAW,sCAAsC;AACjD,WAAW,OAAO;AAClB;AACA;AACA;;;;;;;;;;;;;ACnlBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEgC;AACwC;;AAExE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA8B,6EAA6E;AAC3G,IAAI,iEAAiE;AACrE;AACA;AACA,IAAI,wHAAwH;AAC5H;AACA;AACA;AACe,+BAA+B,gDAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,YAAY,OAAO;AACnB,YAAY,gBAAgB;AAC5B,YAAY,qEAAqE;AACjF;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,uCAAuC;AAC3D;AACA;AACA,eAAe,YAAY;AAC3B;AACA;;AAEA;AACA,sEAAsE,uDAAuD;AAC7H;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,gDAAgD,mDAAmD;AACnG;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,0DAA0D;AAC1D;AACA;AACA,kCAAkC,uDAAuD;AACzF;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,qEAAqE,uDAAuD;AAC5H;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,+CAA+C,mDAAmD;AAClG;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,8EAA8E;AAC/F,UAAU,iEAAiE;AAC3E;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,cAAc,2DAA2D;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,+CAA+C;AAC/C,sCAAsC;AACtC,mCAAmC;AACnC,oDAAoD;AACpD,2CAA2C;AAC3C,wCAAwC;AACxC;AACA,4CAA4C;AAC5C,+CAA+C;AAC/C;AACA;AACA,KAAK,qEAAqE;AAC1E;AACA,gCAAgC;AAChC,oDAAoD;AACpD,oBAAoB;AACpB;AACA,KAAK,4EAA4E;AACjF;AACA,YAAY,OAAO;AACnB;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAiC,8DAA8D;AAC/F;AACA;AACA;AACA,iCAAiC,8DAA8D;AAC/F,oCAAoC,8DAA8D;AAClG;AACA;AACA,iCAAiC,uDAAuD;AACxF;AACA;AACA,OAAO,8DAA8D;AACrE;AACA;AACA;AACA,YAAY,mCAAmC;AAC/C,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA,cAAc,qDAAqD;AACnE;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;;AAEA,kBAAkB,8CAA8C;AAChE;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iDAAiD,wDAAwD;AACzG;AACA,WAAW,mCAAmC;AAC9C,aAAa;AACb;AACA;AACA;;;;;;;;;;;;;ACpQA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEgC;;AAEhC;AACA;AACA,IAAI,sEAAsE;AAC1E;AACA;AACA,8BAA8B,6EAA6E;AAC3G,IAAI,iEAAiE;AACrE;AACA;AACA;AACA,+DAA+D,2DAA2D;AAC1H,sDAAsD,mDAAmD;AACzG;AACA,mDAAmD,yDAAyD;AAC5G;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACe,+BAA+B,gDAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,YAAY,OAAO;AACnB,YAAY,gBAAgB;AAC5B,YAAY,qEAAqE;AACjF;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,uCAAuC;AAC3D;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA,+CAA+C;AAC/C,sCAAsC;AACtC,mCAAmC;AACnC,oDAAoD;AACpD,2CAA2C;AAC3C,wCAAwC;AACxC;AACA,4CAA4C;AAC5C,+CAA+C;AAC/C;AACA;AACA,KAAK,qEAAqE;AAC1E;AACA,kCAAkC;AAClC,sDAAsD;AACtD,sBAAsB;AACtB;AACA,KAAK,4EAA4E;AACjF;AACA,YAAY,OAAO;AACnB;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,uCAAuC;AACzD;AACA,aAAa,YAAY;AACzB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACrHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEoD;AACc;AACd;AACwB;;AAE5E,iCAAiC,cAAc;;AAE/C;AACA;AACA,IAAI,4EAA4E;AAChF;AACA;AACA;AACe;AACf;AACA;AACA;AACA,YAAY,6CAA6C;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,uDAAuD;AACrE;AACA,uBAAuB,0DAAiB;;AAExC;AACA,gDAAgD,uDAAuD;AACvG;AACA,4DAA4D,iDAAiD;AAC7G,MAAM,kDAAkD;AACxD,MAAM,mEAAmE;AACzE,uBAAuB,uDAAuD;AAC9E;AACA;AACA,cAAc,mCAAmC;AACjD;AACA,mBAAmB,gFAAU,GAAG,yBAAyB;;AAEzD;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA,sCAAsC,8DAA8D;AACpG,aAAa,8DAA8D;AAC3E;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA,sCAAsC,0EAA0E;AAChH,aAAa,0EAA0E;AACvF;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,YAAY,mEAAmE;AAC/E;AACA;AACA,YAAY,OAAO;AACnB,cAAc,gEAAgE;AAC9E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,6DAA6D;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,yDAAyD;AAClF,OAAO,0GAA0G;AACjH;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,uEAAuE;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,KAAK,oEAAoE;AACzE;AACA;AACA,SAAS,6DAA6D;AACtE;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,iDAAiD;AAC7D;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,KAAK,yDAAyD;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iFAAG,YAAY,qFAAe;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;;;;;;;;;;;;;ACzNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE0B;AACU;AACgB;AACc;AACI;;AAEtE;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACe;AACf;AACA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,YAAY,qEAAqE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,2CAA2C;AACzD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sCAAsC;AACtC,2CAA2C;AAC3C;AACA,4CAA4C;AAC5C,6BAA6B;AAC7B,0BAA0B;AAC1B;AACA,KAAK,4EAA4E;AACjF;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,KAAK,+EAA+E;AACpF;AACA;AACA,YAAY,qEAAqE;AACjF,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,6BAA6B;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,6BAA6B;AACzC,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wCAAwC;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,qEAAqE;AACjF,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc,qCAAqC;AACnD;AACA;AACA;;AAEA,sBAAsB,qBAAqB;AAC3C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,uCAAuC;AACnD,YAAY,6BAA6B;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iFAAG,oBAAoB,kFAAY;;AAEnC;AACA;AACA,WAAW;AACX,aAAa;AACb;AACA;AACA;AACA,eAAe,6CAAI;AACnB;;AAEA,OAAO,wFAAU;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,6CAAI;AACnB;;AAEA,wBAAwB,kDAAS;AACjC,eAAe,6CAAI;AACnB;;AAEA;AACA,GAAG;AACH;;;;;;;;;;;;;AChRA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEoC;AACgB;AACkB;;AAEtE;AACA;AACA;AACA,iCAAiC,0EAA0E;AAC3G;AACA,qBAAqB,6CAA6C;AAClE;AACA,QAAQ,0DAA0D;AAClE,YAAY,oGAAoG;AAChH;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iDAAiD;AACpF;AACA;AACA;AACA,+BAA+B,wCAAwC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,iBAAiB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,2BAA2B;AACjF;AACA,YAAY,wCAAwC;AACpD,YAAY,wCAAwC;AACpD,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,wBAAwB,kDAAS;;AAEjC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK,mBAAmB;AACxB;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,aAAa,WAAW,cAAc;AACjE;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,KAAK,yEAAyE;AAC9E;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,yCAAyC,qDAAqD;AAC9F;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK,iDAAiD,WAAW,8DAA8D;AAC/H;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,kFAAkF;AAClF,cAAc,4DAA4D;AAC1E;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK,8DAA8D;AACnE;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK,4DAA4D;AACjE;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,iDAAiD;AACpF;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,8FAA8F;AAC1G;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,wDAAwD;AACvF;AACA;AACA,YAAY,8FAA8F;AAC1G;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oCAAoC;AACpC,4CAA4C;AAC5C,yCAAyC;AACzC,iDAAiD;AACjD;AACA,kDAAkD;AAClD,kCAAkC;AAClC,+BAA+B;AAC/B;AACA,KAAK,4EAA4E;AACjF;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK,yDAAyD;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iDAAiD;AAChF;AACA;AACA;AACA;AACA,2BAA2B,wCAAwC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iBAAiB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,2BAA2B;AAClE;AACA;AACA;AACA,YAAY,wCAAwC;AACpD,YAAY,wCAAwC;AACpD,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA,WAAW,aAAa;AACxB;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA,YAAY,kEAAkE;AAC9E,YAAY,8BAA8B;AAC1C,0BAA0B,6CAA6C;AACvE;AACA;AACA;AACA;;AAEA;AACA,yDAAyD,uCAAuC;AAChG;AACA;AACA;AACA;;AAEA,iFAAG,qBAAqB,kFAAY;;;;;;;;;;;;;AClYpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAE8B;AACM;AACE;AACN;AACQ;AACc;AACZ;AACsF;;AAElE;AACE;AACU;AACU;AACtB;AACxB;;AAEtC;AACA,sBAAsB,yDAAS;;AAE/B;AACA;AACA,IAAI,wEAAwE;AAC5E;AACA,iDAAiD,mFAAmF;AACpI;AACA,oEAAoE,2CAA2C;AAC/G,kFAAkF,2CAA2C;AAC7H;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,YAAY,OAAO;AACnB,YAAY,0CAA0C;AACtD;AACA,oCAAoC;AACpC;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,eAAe;AAC7B;AACA;;AAEA;AACA;AACA,MAAM,kCAAkC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,eAAe;AAC7B;AACA;;AAEA;AACA,YAAY,uCAAuC;AACnD;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA,qDAAqD,iDAAS,GAAG,mDAAW;;AAE5E;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA,KAAK,gFAAgF;AACrF;AACA,KAAK,uEAAuE;AAC5E;AACA,YAAY,YAAY;AACxB,YAAY,uDAAuD;AACnE;AACA;AACA,kDAAkD,kDAAa;AAC/D;;AAEA;AACA,aAAa,4DAA4D;AACzE;AACA;AACA,YAAY,YAAY;AACxB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK,gEAAgE;AACrE,KAAK,gEAAgE;AACrE;AACA,YAAY,YAAY;AACxB,YAAY,mCAAmC;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK,gEAAgE;AACrE,KAAK,gEAAgE;AACrE;AACA,YAAY,iBAAiB;AAC7B,YAAY,qDAAqD;AACjE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,kFAAkF;AAC9F;AACA,YAAY,SAAS;AACrB,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc,sBAAsB;AACpC;AACA,+CAA+C;AAC/C;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK,6DAA6D;AAClE,0CAA0C,uCAAuC;AACjF;AACA,YAAY,wFAAwF;AACpG,YAAY,SAAS;AACrB,YAAY,OAAO,cAAc,6DAA6D;AAC9F,cAAc,gBAAgB;AAC9B;AACA,4DAA4D;AAC5D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,qCAAqC;AACxD,sBAAsB,wCAAwC;AAC9D;AACA,YAAY,+BAA+B;AAC3C,cAAc,MAAM;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,2CAA2C;AAC9D;AACA,sBAAsB,wCAAwC;AAC9D;AACA;AACA,YAAY,qCAAqC;AACjD,cAAc,YAAY;AAC1B,cAAc,KAAK;AACnB,cAAc,OAAO;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,QAAQ,gEAAgB;AACxB,cAAc,4DAAoB;AAClC;;AAEA,WAAW;AACX,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,yFAAM,gBAAgB,gEAAgB;AAC9C,YAAY,2BAA2B,4DAAoB;AAC3D;;AAEA,8BAA8B,yFAAO;;AAErC,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA,KAAK,wCAAwC;AAC7C,sCAAsC,6CAA6C;AACnF;AACA,YAAY,sBAAsB;AAClC,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc,uFAAuF;AACrG,gCAAgC,uCAAuC;AACvE;AACA,iCAAiC;AACjC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,OAAO,yFAAM;AACb,QAAQ,8DAAc;AACtB;AACA,IAAI;AACJ;;AAEA,wCAAwC,6CAAQ;AAChD;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA,sBAAsB,yDAAoB;;AAE1C;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,sBAAsB,gDAAW;;AAEjC;AACA;AACA;;AAEA;AACA;;AAEA,mCAAmC,QAAQ;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS,6DAA6D;AACtE,0CAA0C,uCAAuC;AACjF;AACA,YAAY,YAAY;AACxB,YAAY,OAAO,cAAc,6DAA6D;AAC9F,cAAc,wCAAwC;AACtD;AACA,8CAA8C;AAC9C,kBAAkB,kCAAkC;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,6CAA6C;AACjF;AACA;AACA,YAAY,UAAU;AACtB,cAAc,uCAAuC;AACrD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ,yFAAM;AACd;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,kBAAkB,6BAA6B;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,aAAa,kDAAa,eAAe,uBAAuB;AAChE;;AAEA;AACA,gCAAgC,qCAAqC;AACrE;AACA;AACA,YAAY,MAAM;AAClB,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;;AAEA;AACA,cAAc,8CAAS;AACvB;;AAEA;AACA;;AAEA;AACA,4CAA4C,2CAA2C;AACvF;AACA,iCAAiC,uCAAuC;AACxE;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,OAAO;AACnB,cAAc,qCAAqC;AACnD;AACA;AACA;AACA,wDAAwD,yFAAO;AAC/D;;AAEA;AACA;;AAEA;AACA,UAAU,iDAAY;AACtB;;AAEA,OAAO,yFAAM;AACb,QAAQ,8DAAc;AACtB,yDAAyD,yFAAO;AAChE;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ,gEAAgB;AACxB,cAAc,4DAAoB;AAClC;AACA;;AAEA,cAAc,iDAAY;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,iDAAY;AAC5B;AACA,IAAI;AACJ;AACA,uBAAuB,yFAAM;AAC7B;AACA;;AAEA;AACA;AACA,gBAAgB,iDAAY;AAC5B;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gCAAgC,iDAAiD;AACjF,KAAK,2DAA2D;AAChE,iDAAiD;AACjD;AACA,sCAAsC,6CAA6C;AACnF;AACA,YAAY,yBAAyB;AACrC,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,uDAAuD,sEAAsE;AAC7H;AACA;AACA,2CAA2C,sEAAsE;AACjH;AACA;AACA,gEAAgE;AAChE;AACA;AACA,oCAAoC,6CAA6C;AACjF;AACA;AACA;AACA,uCAAuC,uCAAuC;AAC9E;AACA,YAAY,KAAK;AACjB,cAAc,kCAAkC;AAChD;AACA;AACA;AACA,OAAO,8DAAc;AACrB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,gCAAgC,6CAAQ;AACxC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,+BAA+B,6CAAQ;AACvC;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iDAAiD,iDAAiD;AAClG,KAAK,4EAA4E;AACjF,sCAAsC;AACtC,SAAS,gCAAgC;AACzC;AACA,YAAY,wFAAwF;AACpG;AACA,cAAc,gCAAgC;AAC9C;AACA;AACA;AACA;;AAEA;AACA,uDAAuD,sEAAsE;AAC7H;AACA;AACA,2CAA2C,sEAAsE;AACjH;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA,YAAY,6BAA6B;AACzC,cAAc,UAAU;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,4DAA4D,yDAAyD;AACrH;AACA,YAAY,mDAAmD;AAC/D;AACA;AACA;;AAEA;AACA;AACA,UAAU,mBAAmB,GAAG,gFAAM;AACtC;;AAEA;AACA;AACA;AACA,WAAW,wBAAwB;;AAEnC;AACA,IAAI;;AAEJ;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,GAAG,gFAAM;AACT;AACA;;AAEA;AACA;AACA;AACA,YAAY,KAAK;AACjB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,KAAK;AACjB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,KAAK;AACjB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wDAAwD,wBAAwB;AAChF;AACA,sDAAsD;AACtD,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,UAAU;AACtB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,oBAAoB,6CAA6C;AACjE;AACA;AACA,YAAY,KAAK;AACjB,cAAc;AACd;AACA;AACA,oBAAoB,+FAAY;;AAEhC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+CAA+C,+DAA+D;AAC9G;AACA,YAAY,UAAU;AACtB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA,qFAAqF,6BAA6B;AAClH;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB,cAAc,QAAQ;AACtB;AACA;AACA;AACA,OAAO,yFAAM,iBAAiB,gEAAgB,0BAA0B,4DAAoB;AAC5F;AACA;AACA;;AAEA,sCAAsC,gEAAgB;AACtD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kCAAkC,wCAAwC;AAC1E;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA,6DAA6D;AAC7D;AACA,oEAAoE,oCAAoC;AACxG;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA,YAAY,6BAA6B;AACzC,cAAc,OAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,qBAAqB;AACrB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,EAAE;AAC5B;;AAEA;AACA,gHAAgH;AAChH;AACA;AACA,YAAY,6BAA6B;AACzC,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,2EAA2E,kDAAkD;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA,UAAU,oEAAoB;AAC9B;;AAEA;AACA;AACA;AACA;AACA,kCAAkC,GAAG;;AAErC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS,oEAAoB;;AAE7B;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,sDAAsD;AACtD;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB;AACA;AACA;AACA;;AAEA,oEAAoE;AACpE,6CAA6C,WAAW;AACxD;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;;AAEA,OAAO,4DAAS;AAChB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;;AAEA,UAAU,gEAAgB;AAC1B;;AAEA;AACA,gCAAgC,kDAAkD;AAClF;AACA;AACA,YAAY,6BAA6B;AACzC,YAAY,QAAQ;AACpB,cAAc,kCAAkC;AAChD;AACA;AACA,yBAAyB,mDAAc;AACvC,4BAA4B,iDAAY,wBAAwB,iDAAY;AAC5E;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,+FAAY;;AAEpC;AACA;AACA,SAAS,yFAAM;AACf;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;;AAEA;;AAEA;AACA,eAAe,oGAAiB;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA,eAAe,+FAAY;;AAE3B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,SAAS;AACpB;AACA,yBAAyB,gFAAM;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA,WAAW,KAAK;AAChB,aAAa;AACb;AACA,gBAAgB,yFAAM;;AAEtB;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,aAAa,OAAO;AACpB;;;;;;;;;;;;;AC9vCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEkC;AACN;AACQ;AACc;AACA;AACR;AACN;AACoC;AACtB;AACgB;AACxC;AACsB;AACN;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,0DAA0D;AAClE;AACA;AACA;AACA,IAAI,iEAAiE;AACrE;AACA,6CAA6C;AAC7C,mBAAmB,gFAAgF;AACnG;AACe;AACf;AACA,YAAY,qCAAqC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,mEAAmE,iEAAiE;AACpI,wDAAwD,2DAA2D;AACnH;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA,UAAU,yEAAyE;AACnF,2CAA2C,yDAAyD;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iDAAiD;AAChF;AACA;AACA;AACA;AACA,4BAA4B,wCAAwC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iBAAiB;AACnD;AACA;AACA;AACA;AACA;AACA,kCAAkC,aAAa;AAC/C;AACA;AACA;AACA,kCAAkC,2BAA2B;AAC7D;AACA,YAAY,wCAAwC;AACpD,YAAY,wCAAwC;AACpD,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA,WAAW,qFAAqF;AAChG;AACA,uDAAuD;AACvD;AACA;AACA,YAAY,kEAAkE;AAC9E,YAAY,8BAA8B;AAC1C,0BAA0B,6CAA6C;AACvE;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,6CAA6C;AAChE;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,6BAA6B;AAC3C;AACA;AACA,aAAa,8CAAI;AACjB;;AAEA;AACA,iBAAiB,2DAA2D;AAC5E;AACA;AACA,0CAA0C,kBAAkB;AAC5D;AACA;AACA,0CAA0C,kBAAkB,GAAG,cAAc;AAC7E;AACA;AACA,6CAA6C,qBAAqB,GAAG,kBAAkB;AACvF;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO,+BAA+B,6EAA6E;AAC/H,YAAY,cAAc,yBAAyB,iEAAiE;AACpH,cAAc,qDAAqD;AACnE;AACA,uDAAuD;AACvD,+BAA+B,yDAAgB;;AAE/C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,2DAA2D;AAC5E;AACA;AACA;AACA;AACA,4CAA4C,mCAAmC;AAC/E;AACA;AACA,0CAA0C,2BAA2B,wBAAwB;AAC7F;AACA;AACA,0CAA0C,uBAAuB;AACjE;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc,qDAAqD;AACnE;AACA;AACA,aAAa,yDAAgB;AAC7B;;AAEA;AACA,iBAAiB,yDAAyD;AAC1E;AACA;AACA,2CAA2C,iBAAiB;AAC5D;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc,mDAAmD;AACjE;AACA;AACA,8BAA8B,yDAAe;AAC7C;;AAEA;AACA;;AAEA;AACA,iBAAiB,mDAAmD;AACpE;AACA;AACA,wCAAwC,iBAAiB;AACzD;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc,6CAA6C;AAC3D;AACA;AACA,aAAa,qDAAY;AACzB;;AAEA;AACA,iBAAiB,6CAA6C;AAC9D;AACA;AACA,sCAAsC,iBAAiB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB,cAAc,uCAAuC;AACrD;AACA;AACA,wBAAwB,kDAAS;;AAEjC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,mCAAmC;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,mCAAmC;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,mCAAmC;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,mCAAmC;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK,iIAAiI;AACtI,SAAS,mEAAmE;AAC5E;AACA,YAAY,cAAc;AAC1B,YAAY,OAAO;AACnB,YAAY,mCAAmC;AAC/C;AACA;AACA,OAAO,gEAAa;AACpB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,4CAA4C;AAC5C,8DAA8D;AAC9D;AACA;AACA,KAAK,iIAAiI;AACtI,SAAS,yEAAyE;AAClF;AACA,YAAY,sBAAsB;AAClC,YAAY,mCAAmC;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,EAAE;AACd,YAAY,mCAAmC;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,mCAAmC;AAC/C,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,mBAAmB,2BAA2B;AAC9C,oBAAoB;AACpB,cAAc,WAAW;AACzB;AACA,eAAe,4EAA4E;AAC3F;AACA,kCAAkC,uFAAuF;AACzH,KAAK,qFAAqF;AAC1F,KAAK,8EAA8E;AACnF,iCAAiC,6EAA6E;AAC9G;AACA;AACA,YAAY,6DAA6D;AACzE,UAAU;AACV,SAAS,6CAA6C;AACtD;AACA,YAAY,6DAA6D;AACzE;AACA,YAAY,gEAAgE;AAC5E;AACA,YAAY,6DAA6D;AACzE;AACA,YAAY,uDAAuD;AACnE;AACA;AACA;AACA;AACA,YAAY,oEAAoE;AAChF;AACA,cAAc,oEAAoE;AAClF;AACA;AACA;AACA,kCAAkC,iDAAQ;AAC1C;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,YAAY,kFAAkF;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uFAAuF;AACzH,KAAK,qFAAqF;AAC1F,KAAK,8EAA8E;AACnF,iCAAiC,6EAA6E;AAC9G;AACA;AACA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,cAAc,qCAAqC;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;;AAEA;AACA,UAAU,iDAAQ;AAClB,GAAG;AACH;;AAEA,gBAAgB,iDAAQ;;AAExB,2BAA2B,8CAAK,YAAY,iDAAQ;AACpD,8BAA8B,iDAAQ;;AAEtC;AACA;;AAEA,SAAS,iDAAQ;AACjB;;AAEA;AACA,YAAY,8EAA8E;AAC1F,UAAU,6EAA6E;AACvF;AACA;AACA;AACA,gCAAgC;AAChC,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA,kCAAkC,uFAAuF;AACzH,KAAK,uFAAuF;AAC5F,KAAK,8EAA8E,KAAK;AACxF,uCAAuC,8EAA8E;AACrH;AACA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,cAAc,qCAAqC;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oCAAoC,iDAAQ;AAC5C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oCAAoC,iDAAQ;AAC5C;;AAEA;AACA;;AAEA;AACA,gBAAgB,8EAA8E;AAC9F;AACA;AACA;AACA;AACA;AACA,kCAAkC,uFAAuF;AACzH,KAAK,uFAAuF;AAC5F,KAAK,8EAA8E,KAAK;AACxF,uCAAuC,8EAA8E;AACrH;AACA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,cAAc,qCAAqC;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;AACA;;AAEA;AACA,2CAA2C,8CAAI,GAAG,iDAAQ,iCAAiC,iDAAQ;;AAEnG,aAAa,8CAAK,oBAAoB,iDAAQ;AAC9C,eAAe,8CAAK;;AAEpB;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,6DAA6D;AACzE,qCAAqC,yCAAyC;AAC9E,KAAK,6EAA6E;AAClF,KAAK,6EAA6E;AAClF,KAAK,iEAAiE;AACtE,KAAK,wDAAwD;AAC7D;AACA,YAAY,qCAAqC;AACjD,YAAY;AACZ;AACA;AACA;AACA,yFAAyF;AACzF,cAAc,+BAA+B;AAC7C;AACA;AACA,UAAU,wFAAU;;AAEpB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,8CAAK;AACnB,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA,cAAc,8CAAK;AACnB;AACA;;AAEA;AACA;AACA;AACA,YAAY,6DAA6D;AACzE,KAAK,iDAAiD,MAAM,6CAA6C;AACzG;AACA;AACA,YAAY,4DAA4D;AACxE,WAAW,wCAAwC;AACnD;AACA,cAAc,qDAAqD;AACnE;AACA;AACA,uCAAuC,8CAAK,iBAAiB,8CAAK;;AAElE;;AAEA;AACA;AACA,cAAc,yDAAgB;AAC9B;;AAEA;AACA,SAAS,mCAAmC;AAC5C;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa,yDAAgB;AAC7B;;AAEA;AACA;AACA;AACA,YAAY,6DAA6D;AACzE,KAAK,iDAAiD,MAAM,6CAA6C;AACzG;AACA;AACA,YAAY,+BAA+B;AAC3C,YAAY,mCAAmC;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,8CAAK;AACzB;AACA,IAAI;AACJ;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,qBAAqB,8CAAK;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,6DAA6D;AACzE,KAAK,iDAAiD,MAAM,6CAA6C;AACzG;AACA;AACA,YAAY,+BAA+B;AAC3C,YAAY,qCAAqC;AACjD,cAAc,+BAA+B;AAC7C,KAAK,iDAAiD,MAAM,6CAA6C;AACzG;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA,+CAA+C,4EAA4E;AAC3H;AACA;AACA;AACA;AACA;AACA,YAAY,+CAA+C;AAC3D,UAAU;AACV,SAAS,yCAAyC;AAClD;AACA,YAAY,+CAA+C;AAC3D,oBAAoB,4EAA4E;AAChG;AACA,YAAY,+CAA+C;AAC3D;AACA;AACA,YAAY,+BAA+B;AAC3C,YAAY,qDAAqD;AACjE,cAAc,+BAA+B;AAC7C;AACA;AACA,+BAA+B,yDAAgB;AAC/C,aAAa,mFAAa;AAC1B;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,cAAc,8CAAK;AACnB;AACA;;AAEA;AACA;AACA;AACA,YAAY,6DAA6D;AACzE,KAAK,iDAAiD,MAAM,6CAA6C;AACzG;AACA;AACA,YAAY,+BAA+B;AAC3C,YAAY,qDAAqD;AACjE;AACA;AACA,+BAA+B,yDAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS,mCAAmC;AAC5C;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,aAAa,8CAAK;AAClB;;AAEA;AACA;AACA,4EAA4E,qDAAqD;AACjI,4BAA4B,2DAA2D;AACvF;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,qDAAqD;AACjE;AACA;AACA,yBAAyB,yDAAgB;;AAEzC,eAAe,iDAAQ;AACvB,aAAa,8CAAK,2BAA2B,iDAAQ;AACrD,eAAe,8CAAK;;AAEpB;AACA;;AAEA;AACA;AACA;AACA,iCAAiC;AACjC,mBAAmB,iEAAiE;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS,oDAAoD;AAC7D;AACA;AACA,OAAO,6CAA6C;AACpD;AACA;AACA;AACA,OAAO,4BAA4B;AACnC,OAAO,2BAA2B;AAClC;AACA,YAAY,mEAAmE;AAC/E,YAAY,8BAA8B;AAC1C,0BAA0B,6CAA6C;AACvE;AACA;AACA,SAAS,iDAAQ;AACjB;;AAEA;AACA;AACA;AACA,YAAY,6BAA6B;AACzC,cAAc;AACd;AACA;AACA,SAAS,iDAAQ;AACjB;;AAEA;AACA;AACA;AACA,YAAY,6BAA6B;AACzC,cAAc;AACd;AACA;AACA,SAAS,iDAAQ;AACjB;;AAEA;AACA;AACA;AACA,mDAAmD,2CAA2C;AAC9F;AACA,YAAY,qCAAqC;AACjD,YAAY,qCAAqC;AACjD,cAAc;AACd;AACA;AACA,aAAa,8CAAK;AAClB;;AAEA;AACA,8CAA8C,6CAA6C;AAC3F;AACA,YAAY,6BAA6B;AACzC,cAAc;AACd;AACA;AACA,SAAS,8CAAK;AACd;;AAEA;AACA,+BAA+B,iDAAiD;AAChF;AACA;AACA,YAAY,mCAAmC;AAC/C,cAAc;AACd;AACA;AACA,SAAS,8CAAK;AACd;;AAEA;AACA,eAAe,6CAA6C;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iDAAiD;AACpF;AACA;AACA;AACA,+BAA+B,wCAAwC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,iBAAiB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,2BAA2B;AAClF;AACA,YAAY,wCAAwC;AACpD,YAAY,wCAAwC;AACpD,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA,aAAa,kDAAS;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,mCAAmC;AAC/C,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,mCAAmC;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iDAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,4BAA4B,iDAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,8CAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,mCAAmC;AAC/C,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,mCAAmC;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS,iDAAQ;AACjB,SAAS,iDAAQ;AACjB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iDAAQ;AACjB,SAAS,iDAAQ;AACjB;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,8CAAK;AACd;;AAEA;AACA;AACA;AACA;AACA,YAAY,+CAA+C;AAC3D,oBAAoB,4EAA4E;AAChG;AACA;AACA,YAAY,+BAA+B;AAC3C,YAAY,qDAAqD;AACjE,cAAc,+BAA+B;AAC7C;AACA;AACA;AACA,SAAS,mCAAmC;AAC5C;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,aAAa,8CAAK;AAClB;;AAEA;AACA,yBAAyB,YAAY;AACrC;AACA;AACA,YAAY,+CAA+C;AAC3D,oBAAoB,4EAA4E;AAChG;AACA;AACA,YAAY,qCAAqC;AACjD,YAAY,qDAAqD;AACjE,cAAc,qCAAqC;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,wBAAwB,8CAAK;;AAE7B;AACA;;AAEA;AACA,0BAA0B,iDAAQ;AAClC;;AAEA;AACA;AACA;;AAEA,6BAA6B,8CAAI,yBAAyB,8CAAI;AAC9D;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB,4EAA4E;AAC5F;AACA;AACA;AACA;AACA,aAAa,qDAAqD;AAClE,aAAa,qDAAqD;AAClE,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,4EAA4E;AACzF;AACA;AACA;AACA;AACA,YAAY,qDAAqD;AACjE,YAAY,qDAAqD;AACjE,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,+BAA+B;AAC3C,YAAY,QAAQ;AACpB;AACA,cAAc,+BAA+B;AAC7C;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,cAAc,8CAAK;AACnB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,aAAa,8CAAK;AAClB;;AAEA;AACA;AACA;AACA,YAAY,6DAA6D;AACzE,sBAAsB,gEAAgE;AACtF;AACA,YAAY,6DAA6D;AACzE,sBAAsB,uDAAuD;AAC7E;AACA;AACA,YAAY,qCAAqC;AACjD,YAAY,QAAQ;AACpB;AACA,cAAc,qCAAqC;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,sBAAsB;AACtB;AACA;AACA;AACA,2BAA2B,iDAAQ;;AAEnC;AACA,GAAG;AACH,oBAAoB;AACpB;AACA,cAAc;AACd;AACA,4BAA4B,iDAAQ;;AAEpC;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,4BAA4B,iDAAQ;;AAEpC;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,6EAA6E;AACjH;AACA;AACA;AACA,4CAA4C,iFAAiF;AAC7H;AACA,0CAA0C,iEAAiE;AAC3G;AACA;AACA,YAAY,qDAAqD;AACjE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA,wCAAwC,iEAAiE;AACzG;AACA;AACA,YAAY,qDAAqD;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gDAAgD,oDAAoD;AACpG;AACA,cAAc,4EAA4E;AAC1F;AACA,WAAW,qCAAqC;AAChD,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,4EAA4E;AAChG;AACA,IAAI,+EAA+E;AACnF,IAAI,gEAAgE;AACpE;AACA,WAAW,qDAAqD;AAChE,WAAW,qDAAqD;AAChE,aAAa;AACb;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B;AAC9B,2BAA2B;AAC3B;AACA,WAAW,qCAAqC;AAChD,aAAa,qCAAqC;AAClD;AACA;AACA;;AAEA;AACA,aAAa,iDAAQ;AACrB;;AAEA;;AAEA;AACA,aAAa,iDAAQ;AACrB;;AAEA;AACA;;AAEA;AACA;AACA,YAAY;AACZ,SAAS;AACT,eAAe;AACf;AACA,WAAW,qCAAqC;AAChD,aAAa,qCAAqC;AAClD;AACA;AACA,aAAa,iDAAQ;AACrB;;AAEA;AACA,aAAa,iDAAQ;AACrB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,qEAAqE,8CAAI;;AAEzE;AACA,YAAY,iDAAQ;AACpB;;AAEA;AACA;AACA,WAAW,6BAA6B;AACxC;AACA,WAAW,6BAA6B;AACxC,aAAa,qCAAqC;AAClD;AACA;AACA;AACA;AACA;;AAEA,YAAY,iDAAQ;AACpB;;AAEA;AACA,IAAI,wCAAwC,KAAK,4EAA4E;AAC7H,IAAI,4EAA4E;AAChF,IAAI,gEAAgE;AACpE,IAAI,uDAAuD;AAC3D;AACA,WAAW,6DAA6D;AACxE,oCAAoC,yCAAyC;AAC7E,IAAI,iEAAiE;AACrE,IAAI,wDAAwD;AAC5D,IAAI,6EAA6E;AACjF,IAAI,6EAA6E;AACjF;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,iFAAiF;AACjF;AACA,oDAAoD,4EAA4E;AAChI,OAAO,4EAA4E;AACnF,OAAO,gEAAgE;AACvE,OAAO,uDAAuD,GAAG,wCAAwC;AACzG;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;;AAEA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B,8CAAI,EAAE,yDAAgB,EAAE,yDAAgB,EAAE,qDAAY,EAAE,kDAAS;;AAE9F;AACA;AACA,WAAW,6BAA6B;AACxC,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA,cAAc,uDAAuD,MAAM,mDAAmD;AAC9H,gBAAgB,6EAA6E;AAC7F,WAAW,6DAA6D;AACxE;AACA,WAAW,+BAA+B;AAC1C,WAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA,qDAAqD,uDAAuD;AAC5G,MAAM,mDAAmD;AACzD;AACA;AACA;AACA;;AAEA,YAAY,mFAAa;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,mCAAmC;AAC9C,WAAW,mCAAmC;AAC9C,aAAa;AACb;AACA;AACA;;;;;;;;;;;;;ACz3DA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEkD;AACE;AACwB;;AAE5E;AACA,oCAAoC;AACpC;AACA;AACA,iDAAiD,oDAAoD;AACrG;AACA;AACA,IAAI,sHAAsH;AAC1H;AACA;AACA;AACA;AACe,8BAA8B,yDAAgB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA,iCAAiC,wEAAwE;AACzG;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,6CAA6C;AAC7C,qCAAqC;AACrC,kCAAkC;AAClC,kDAAkD;AAClD,0CAA0C;AAC1C,uCAAuC;AACvC;AACA,2CAA2C;AAC3C,8CAA8C;AAC9C;AACA;AACA,KAAK,mEAAmE;AACxE;AACA,iCAAiC;AACjC,oDAAoD;AACpD,sBAAsB;AACtB;AACA,KAAK,4EAA4E;AACjF;AACA,YAAY,OAAO;AACnB;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iFAAG,mBAAmB,qFAAe;;;;;;;;;;;;;AC9GrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE0B;AACA;AACU;AACoB;AACU;AAClC;AACI;;AAEpC,iCAAiC,mBAAmB;;AAEpD;AACA;AACA;AACA;AACA,gCAAgC,yCAAyC;AACzE;AACA;AACA,MAAM;AACN,yBAAyB,2DAA2D;AACpF,MAAM;AACN,yBAAyB,2DAA2D;AACpF,MAAM;AACN,yBAAyB,mDAAmD;AAC5E,MAAM;AACN,yBAAyB,6CAA6C;AACtE,MAAM;AACN,yBAAyB,yDAAyD;AAClF;AACA;AACA,IAAI,0EAA0E;AAC9E,sBAAsB,gGAAgG;AACtH;AACA;AACA;AACA;AACe,sBAAsB,6CAAI;AACzC;AACA;AACA;AACA;AACA;AACA,wCAAwC,2CAA2C,GAAG;AACtF,kGAAkG;AAClG,yDAAyD;AACzD;AACA;AACA,YAAY,qCAAqC;AACjD,YAAY,OAAO;AACnB,YAAY,gBAAgB;AAC5B,YAAY,qEAAqE;AACjF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,IAAI;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,uCAAuC;AACrD;AACA,qBAAqB,kDAAS;;AAE9B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B;AAC7B,0BAA0B;AAC1B,kCAAkC;AAClC,+BAA+B;AAC/B;AACA,mCAAmC;AACnC,uCAAuC;AACvC;AACA;AACA,KAAK,mDAAmD;AACxD;AACA,yBAAyB;AACzB,oCAAoC;AACpC,sBAAsB;AACtB;AACA,KAAK,4EAA4E;AACjF;AACA,YAAY,OAAO;AACnB;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,6BAA6B;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,6BAA6B;AACzC,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wCAAwC;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,kBAAkB;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,iBAAiB;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,mCAAmC;AAC/C,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,sCAAsC;AACtC;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK,iIAAiI;AACtI,SAAS,mFAAmF;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,kCAAkC,4BAA4B;AAC9D;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,iIAAiI;AACtI,SAAS,uFAAuF;AAChG;AACA;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,+CAA+C;AAC/C;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iDAAiD,iDAAiD;AAClG;AACA;AACA,YAAY,8BAA8B;AAC1C,SAAS,yCAAyC;AAClD,cAAc,wCAAwC;AACtD;AACA;AACA,sBAAsB,gDAAO;AAC7B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,6BAA6B;AACpD;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,qBAAqB;AAC9C;AACA,MAAM;AACN;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,4DAA4D,SAAS,IAAI,SAAS;;AAElF;AACA,qCAAqC,UAAU;AAC/C,+BAA+B,SAAS;AACxC,iCAAiC,aAAa;AAC9C;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA,cAAc,mCAAmC;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK,6DAA6D;AAClE;AACA;AACA;AACA;AACA,YAAY,qEAAqE;AACjF;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,qEAAqE;AACjF;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA,cAAc,qCAAqC;AACnD;AACA;AACA;;AAEA,sBAAsB,qBAAqB;AAC3C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC;AAChC,2CAA2C;AAC3C;AACA;AACA;AACA,YAAY,sBAAsB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAmC;AACnC,8CAA8C;AAC9C;AACA;AACA;AACA,YAAY,sBAAsB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK,iIAAiI;AACtI,SAAS,mEAAmE;AAC5E;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qCAAqC;AACrC,uDAAuD;AACvD;AACA;AACA,KAAK,iIAAiI;AACtI,SAAS,yEAAyE;AAClF;AACA;AACA;AACA,YAAY,sBAAsB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,EAAE;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,uCAAuC;AAC1D;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gEAAgE,YAAY,EAAE,2CAA2C;;AAEzH;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0CAA0C,YAAY;;AAEtD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,IAAI;AACjB;AACA,SAAS,mFAAK;;AAEd;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX,aAAa;AACb;AACA;AACA;AACA,eAAe,6CAAI;AACnB;;AAEA,OAAO,wFAAU;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,6CAAI;AACnB;;AAEA,wBAAwB,kDAAS;AACjC,eAAe,6CAAI;AACnB;;AAEA;AACA,GAAG;AACH;;;;;;;;;;;;;ACj5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEgC;AACwC;AAC9C;;AAE1B;AACA;AACA;AACA;AACA,IAAI,gHAAgH;AACpH;AACA;AACA;AACe,2BAA2B,gDAAO;AACjD;AACA;AACA;AACA,YAAY,6DAA6D;AACzE;AACA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,YAAY,OAAO;AACnB,YAAY,gBAAgB;AAC5B,YAAY,qEAAqE;AACjF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,KAAK;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC;AAClC,+BAA+B;AAC/B,4CAA4C;AAC5C,uCAAuC;AACvC,oCAAoC;AACpC;AACA,wCAAwC;AACxC,2CAA2C;AAC3C;AACA;AACA,KAAK,6DAA6D;AAClE;AACA,8BAA8B;AAC9B,8CAA8C;AAC9C,sBAAsB;AACtB;AACA,KAAK,4EAA4E;AACjF;AACA,YAAY,OAAO;AACnB;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,eAAe,sDAAsD;AACrE,YAAY,6DAA6D;AACzE;AACA;AACA;AACA;AACA;AACA,mCAAmC,6CAAI;AACvC;AACA,8BAA8B,mDAAmD;AACjF;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;;;;;;;;;;;;;AC/GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEkE;AACJ;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,wDAAwD;AACjG,+CAA+C,+DAA+D;AAC9G;AACA;AACA;AACA,iBAAiB,4DAA4D;AAC7E,IAAI,4DAA4D;AAChE;AACA;AACA;AACA;AACA,qDAAqD,oDAAoD;AACzG;AACA;AACA;AACA;;AAEA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,4DAA4D;AAC9E;AACO;;AAEP;AACA;AACA;AACO;AACP;;AAEA,iBAAiB,0BAA0B;AAC3C;AACA;;AAEA;AACA,CAAC,KAAK;;AAEN;AACA,4DAA4D,4DAA4D;AACxH;AACA,iEAAiE;AACjE,yEAAyE;AACzE,yDAAyD;AACzD,sDAAsD;AACtD;AACA,WAAW,KAAK;AAChB,aAAa,QAAQ,wCAAwC,4DAA4D;AACzH;AACO;AACP,QAAQ,wFAAM;AACd;;AAEA;AACA,8CAA8C,4DAA4D;AAC1G;AACA,+DAA+D;AAC/D,uEAAuE;AACvE;AACA,WAAW,KAAK;AAChB,aAAa,QAAQ,0CAA0C,4DAA4D;AAC3H;AACO;AACP;AACA;;AAEA;AACA,oDAAoD,4DAA4D;AAChH;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,6BAA6B;AACxC;AACO;AACP;AACA;;AAEA;AACA;AACA,sBAAsB,+EAAQ;AAC9B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnJA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C,kDAAkD;AACjG;AACe;AACf;AACA;AACA;AACA,YAAY,qBAAqB,gCAAgC,wDAAwD;AACzH;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,SAAS,gDAAgD;AACzD;AACA;AACA;AACA,2BAA2B,oBAAoB;AAC/C;AACA,YAAY,8BAA8B;AAC1C;AACA,iEAAiE,iDAAiD;AAClH;AACA,KAAK,qDAAqD,KAAK,2DAA2D;AAC1H,YAAY,cAAc;AAC1B,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,YAAY,oBAAoB;AAChC;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK,iDAAiD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sCAAsC;AAClD,cAAc,YAAY;AAC1B,cAAc,mCAAmC;AACjD,cAAc,8BAA8B;AAC5C,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB,cAAc,MAAM;AACpB,cAAc,MAAM;AACpB,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK,kDAAkD;AACvD;AACA;AACA;AACA,YAAY,sCAAsC;AAClD,cAAc,oBAAoB;AAClC,SAAS,4DAA4D;AACrE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,iCAAiC,iDAAiD;AAClF;AACA;AACA,WAAW,mCAAmC;AAC9C,WAAW,8BAA8B;AACzC,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA,WAAW,mCAAmC;AAC9C,aAAa,WAAW;AACxB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,mCAAmC;AAC9C,aAAa,WAAW;AACxB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA,WAAW,mCAAmC;AAC9C,aAAa,WAAW;AACxB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2FAA2F,eAAe;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qBAAqB;AACrC;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,6DAA6D;AAC/H;AACA;AACA,aAAa,8BAA8B;AAC3C;AACA,cAAc,cAAc;AAC5B,cAAc,oCAAoC;AAClD,cAAc,OAAO;AACrB;AACA,cAAc,OAAO;AACrB;AACA;;;;;;;;;;;;;AC7bA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEwE;AACF;AAClB;AACoB;AACtC;;AAElC;AAC+C;;AAE/C;AACA;AACA;AACA;AACA,YAAY,uDAAuD,KAAK;AACxE;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,8CAA8C,sDAAsD;AACpG;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,kBAAkB;;AAElB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,6CAA6C;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,kBAAkB;AAClB,mBAAmB;AACnB;AACA,cAAc,eAAe;AAC7B;AACA;AACA;AACA,kBAAkB;;AAElB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,cAAc,MAAM;AACpB;AACA,0BAA0B,yCAAyC;AACnE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,eAAe,yCAAyC,KAAK;AAC7D;AACA;AACA,YAAY,6BAA6B;AACzC,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB;AACA,cAAc;AACd;AACA,sCAAsC;AACtC;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kBAAkB,2DAA2D;AAC7E;AACA,YAAY,6BAA6B;AACzC,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,2FAAa;;AAE9B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,2DAA2D;AAC7E;AACA,YAAY,6BAA6B;AACzC,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,uCAAuC;AACnD,YAAY,6BAA6B;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA,eAAe,uDAAK;;AAEpB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,2DAA2D,OAAO;AACpF;AACA;AACA,gCAAgC;AAChC,6BAA6B;AAC7B,yCAAyC;AACzC;AACA;AACA;AACA;AACA,sCAAsC;AACtC,uCAAuC;AACvC;AACA;AACA;AACA,4BAA4B;AAC5B,uCAAuC;AACvC,4CAA4C;AAC5C;AACA;AACA;AACA,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP;AACA;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,6BAA6B;AAC3C;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA,uBAAuB,kDAAkD;AACzE;AACA;AACA;AACA;AACA,WAAW,6BAA6B;AACxC;;AAEA;AACA,uBAAuB,kDAAkD;AACzE;AACA;AACA;AACA;AACA,WAAW,6BAA6B;AACxC;;AAEA;AACA,eAAe,8CAA8C;AAC7D;AACA;AACA;AACA;AACA,WAAW,6BAA6B;AACxC;;AAEA;AACA;AACA;;AAEA,iFAAG,QAAQ,kFAAY;;;;;;;;;;;;;;;;;ACtYvB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEkD;;AAElD;AACA,IAAI,6DAA6D;AACjE;AACA;AACA,IAAI;AACJ,SAAS,+CAA+C;AACxD;AACA;AACA;AACe,4BAA4B,yDAAgB;AAC3D;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,8DAA8D;AAChF;AACA;AACA,IAAI,8DAA8D;AAClE,OAAO,mCAAmC,OAAO,+CAA+C;AAChG;AACA;AACA;AACA,WAAW,sDAAsD;AACjE;;;;;;;;;;;;;AC7CA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEkD;;AAElD;AACA,IAAI,mFAAmF;AACvF,IAAI,qFAAqF;AACzF,IAAI,+EAA+E;AACnF;AACA,+CAA+C,mCAAmC;AAClF;AACA;AACA;AACe,kCAAkC,yDAAgB;AACjE;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,0EAA0E;AAC5F;AACA,sBAAsB,0EAA0E;AAChG,IAAI,mCAAmC;AACvC;AACA;AACA;AACA,WAAW,sDAAsD;AACjE;;AAEA;AACA;AACA;AACA,kBAAkB,0EAA0E;AAC5F;AACA,sBAAsB,0EAA0E;AAChG,IAAI,mCAAmC;AACvC;AACA;AACA;AACA,WAAW,sDAAsD;AACjE;;AAEA;AACA;AACA;AACA,kBAAkB,0EAA0E;AAC5F;AACA,sBAAsB,0EAA0E;AAChG,IAAI,mCAAmC;AACvC;AACA;AACA;AACA,WAAW,sDAAsD;AACjE;;;;;;;;;;;;;AC9EA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEmC;;AAEnC;AACA,oDAAoD,2CAA2C;AAC/F;AACA;AACA;AACe;AACf;AACA,YAAY,6BAA6B;AACzC,YAAY,MAAM;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,6BAA6B;AAC3C;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,qCAAqC;AACnD;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,MAAM;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;;AAEA,EAAE,wDAAM;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjFA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEkC;AACQ;;AAE1C;AACA;AACA,IAAI,mEAAmE;AACvE,IAAI,sEAAsE;AAC1E,IAAI,uEAAuE;AAC3E;AACA,IAAI,gGAAgG;AACpG,IAAI,wFAAwF;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,+BAA+B,iDAAQ;AACtD;AACA;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;;AAEA;AACA;AACA,cAAc,gCAAgC;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,GAAG,8BAA8B;AACrC,GAAG;AACH;;AAEA;AACA,yCAAyC,4BAA4B;AACrE;AACA;AACA,YAAY,OAAO;AACnB,YAAY,MAAM;AAClB,YAAY,OAAO;AACnB,KAAK,uEAAuE;AAC5E;AACA;AACA;AACA,sCAAsC,qDAAY;AAClD;AACA;AACA;;;;;;;;;;;;;AClGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEkC;AACO;AACyB;AAC7B;;AAErC;AACA;AACA,OAAO,iEAAiE;AACxE;AACA,UAAU,uFAAuF;AACjG,IAAI,wFAAwF;AAC5F;AACA;AACA;AACe,oCAAoC,iDAAQ;AAC3D;AACA;AACA;AACA,YAAY,6BAA6B;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA,2CAA2C,0DAAQ;AACnD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG,GAAG,qBAAqB;AAC3B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,iEAAiE;AACxF,KAAK,qEAAqE;AAC1E,KAAK,sEAAsE;AAC3E;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,2BAA2B,kDAAa,0BAA0B,8CAA8C;;AAEhH;AACA,kBAAkB,+EAAQ,yBAAyB,+EAAQ;AAC3D;AACA;;AAEA;AACA,kBAAkB,+EAAQ,0BAA0B,+EAAQ;AAC5D;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA,mBAAmB,+EAAQ;AAC3B,aAAa,+EAAQ;AACrB,aAAa,+EAAQ;AACrB,aAAa,+EAAQ;AACrB;;;;;;;;;;;;;;AC3HA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEkD;;AAElD;AACA,IAAI;AACJ,QAAQ,2DAA2D;AACnE,+BAA+B,qFAAqF;AACpH,IAAI,+EAA+E;AACnF;AACA,+CAA+C,mCAAmC;AAClF;AACA;AACA;AACe,4BAA4B,yDAAgB;AAC3D;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,8DAA8D;AAChF;AACA,sBAAsB,8DAA8D;AACpF,IAAI,mCAAmC;AACvC;AACA;AACA;AACA,WAAW,sDAAsD;AACjE;;AAEA;AACA;AACA;AACA,kBAAkB,8DAA8D;AAChF;AACA,sBAAsB,8DAA8D;AACpF,IAAI,mCAAmC;AACvC;AACA;AACA;AACA,WAAW,sDAAsD;AACjE;;;;;;;;;;;;;ACrGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEkD;;AAElD;AACA;AACA;AACA,+CAA+C,mCAAmC;AAClF;AACA;AACA;AACe,4BAA4B,yDAAgB;AAC3D;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,8DAA8D;AAChF;AACA,sBAAsB,8DAA8D;AACpF,IAAI,mCAAmC;AACvC;AACA;AACA;AACA,WAAW,sDAAsD;AACjE;;;;;;;;;;;;;AC3CA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEkD;AACe;;AAEjE;AACA;AACA;AACA,+CAA+C,mCAAmC;AAClF;AACA;AACA;AACe,0BAA0B,yDAAgB;AACzD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,sFAAO;AAClB;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,0DAA0D;AAC5E;AACA,sBAAsB,0DAA0D;AAChF,IAAI,mCAAmC;AACvC;AACA;AACA;AACA,WAAW,qDAAqD;AAChE;;AAEA;AACA;AACA;AACA,kBAAkB,0DAA0D;AAC5E;AACA,sBAAsB,0DAA0D;AAChF,IAAI,mCAAmC;AACvC;AACA;AACA;AACA,WAAW,qDAAqD;AAChE;;AAEA;AACA,+BAA+B,yDAAyD;AACxF,IAAI,uDAAuD;AAC3D;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,oCAAoC;AACzE;AACA;AACA,YAAY,OAAO;AACnB;;;;;;;;;;;;;ACjFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEkC;AACO;AAC0B;AAC3B;;AAExC;AACA,+DAA+D,2DAA2D;AAC1H,iCAAiC,kDAAkD;AACnF;AACA,IAAI,kDAAkD;AACtD,IAAI,2DAA2D;AAC/D;AACA;AACA;AACA;AACA,IAAI,6EAA6E;AACjF;AACA,+CAA+C,mCAAmC;AAClF;AACA;AACA;AACe,+BAA+B,iDAAQ;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,gDAAgD;AACvE;AACA,cAAc;AACd;AACA;;AAEA;AACA,uBAAuB,6CAA6C;AACpE;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,yBAAyB,2DAA2D;AACpF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oEAAoB;AACnC;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,uBAAuB,gEAAgB;AACvC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oFAAoF,sBAAsB;;AAE1G;AACA;AACA,SAAS,6DAAW;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wBAAwB,kDAAa;AACrC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,oEAAoE;AACtF;AACA,sBAAsB,oEAAoE;AAC1F,IAAI,mCAAmC;AACvC;AACA;AACA;AACA,WAAW;AACX;AACA,iCAAiC,+DAA+D;AAChG,IAAI,mEAAmE;AACvE,WAAW,4CAA4C;AACvD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA,cAAc,OAAO;AACrB,cAAc,6BAA6B;AAC3C,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA,cAAc,OAAO;AACrB,cAAc,mCAAmC;AACjD,cAAc,qCAAqC;AACnD,cAAc,qCAAqC;AACnD;;;;;;;;;;;;;ACxVA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE6E;AACzB;;AAEpD;AACA;AACA,sCAAsC,2CAA2C;AACjF;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA,YAAY,6BAA6B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,uBAAuB,2CAA2C;AAClE;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,KAAK,mCAAmC,YAAY;AACpD,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK,yDAAyD;AAC9D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,OAAO;AACnB;AACA;;AAEA,iFAAG,YAAY,sFAAe;;;;;;;;;;;;;AC7F9B;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEkC;AACgB;AACb;;AAErC;AACA;AACA;AACA,IAAI,oEAAoE;AACxE,IAAI,iEAAiE;AACrE;AACA;AACA,+CAA+C,mCAAmC;AAClF;AACA;AACA;AACA;AACe,gCAAgC,iDAAQ;AACvD;AACA;;AAEA;AACA;AACA,MAAM,0EAA0E;AAChF,iBAAiB,iEAAiE;AAClF;AACA;AACA,cAAc;AACd;AACA;AACA,4CAA4C,yDAAgB;;AAE5D;AACA,4BAA4B,6DAA6D;AACzF;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,gDAAgD;AACvE;AACA;AACA,cAAc,6CAA6C;AAC3D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,mBAAmB;AACjC;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA,2CAA2C,0DAAQ;;AAEnD;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gCAAgC,gFAAgF;AAChH,iCAAiC,iEAAiE;AAClG,SAAS,qEAAqE;AAC9E;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,sEAAsE;AACxF;AACA,sBAAsB,sEAAsE;AAC5F,IAAI,mCAAmC;AACvC;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,uDAAuD;AAClE,IAAI,qDAAqD;AACzD,WAAW,uCAAuC;AAClD,WAAW,UAAU;AACrB;;AAEA;AACA;AACA;AACA,kBAAkB,sEAAsE;AACxF;AACA,sBAAsB,sEAAsE;AAC5F,IAAI,mCAAmC;AACvC;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,uDAAuD;AAClE,IAAI,qDAAqD;AACzD,WAAW,uCAAuC;AAClD,WAAW,UAAU;AACrB;;;;;;;;;;;;;ACvOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEqC;;AAErC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,+EAA+E;AACnH;AACA,WAAW,OAAO;AAClB,WAAW,6BAA6B;AACxC,WAAW,mCAAmC;AAC9C;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACO;AACP,QAAQ,2CAA2C;AACnD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ,6EAA6E;AACrF;AACA,WAAW,6BAA6B;AACxC,WAAW,mCAAmC;AAC9C;AACO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,6EAA6E;AACjF,IAAI,+EAA+E;AACnF;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA,WAAW,iDAAiD;AAC5D,WAAW,mCAAmC;AAC9C,aAAa,QAAQ;AACrB;AACO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,6EAA6E;AACjF,IAAI,+EAA+E;AACnF;AACA;AACA,WAAW,iDAAiD;AAC5D,WAAW,mCAAmC;AAC9C,aAAa,QAAQ;AACrB;AACO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6EAA6E;AACjF;AACA;AACA,WAAW,mCAAmC;AAC9C,aAAa;AACb;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,sCAAsC;AACjD,WAAW,iDAAiD;AAC5D,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iDAAiD;AAC5D,WAAW,mCAAmC;AAC9C,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA,QAAQ,qBAAqB;;AAE7B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,mCAAmC;AAC9C,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC3PA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEsC;;AAEkC;AACA;AACxB;;AAEhD;AAC+C;;AAE/C;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,MAAM;AACN,MAAM;AACN;AACe;AACf;AACA;AACA;AACA,YAAY,kFAAkF;AAC9F,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sDAAsD,yDAAyD;AAC/G;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,gDAAgD,yDAAyD;AACzG;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,KAAK,yEAAyE;AAC9E;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA,iCAAiC,wDAAe;AAChD;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,qCAAqC;AACnD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK,0DAA0D;AAC/D;AACA;AACA;AACA,+DAA+D,SAAS;AACxE,+DAA+D,wBAAwB,GAAG,yBAAyB;AACnH,gDAAgD;AAChD;AACA,YAAY,SAAS,+BAA+B,oDAAoD;AACxG;AACA,YAAY,OAAO,iDAAiD,+CAA+C;AACnH;AACA,cAAc,qCAAqC;AACnD;AACA,4CAA4C;AAC5C;;AAEA,yBAAyB,mDAAU;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA,GAAG;AACH,qCAAqC,oBAAoB;AACzD;AACA;;AAEA;AACA,eAAe,mCAAmC,KAAK;AACvD;AACA;AACA,YAAY,qCAAqC;AACjD,cAAc;AACd;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B,oCAAoC;AACpC;AACA,qCAAqC;AACrC,8BAA8B;AAC9B,4BAA4B;AAC5B;AACA,KAAK,4EAA4E;AACjF;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,2FAAa;;AAE9B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,eAAe,0DAA0D;AACzE;AACA,YAAY,OAAO,iDAAiD;AACpE,YAAY,+BAA+B;AAC3C,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,wBAAwB;AACxB;;AAEA,aAAa,mDAAU;AACvB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS,oDAAoD;AAC7D;AACA;AACA,OAAO,6CAA6C;AACpD;AACA;AACA;AACA,OAAO,yDAAyD;AAChE,OAAO,wDAAwD;AAC/D;AACA;AACA,YAAY,kEAAkE;AAC9E,YAAY,8BAA8B;AAC1C,0BAA0B,6CAA6C;AACvE;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,cAAc,mFAAa;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,6BAA6B;AACzC,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,6BAA6B;AAC3C;AACA,aAAa,mFAAa,4EAA4E,aAAa;AACnH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,6BAA6B;AACzC,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,6BAA6B;AAC3C;AACA,aAAa,mFAAa,8EAA8E,aAAa;AACrH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;;;;;;;;;;;;;AC7aA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEkC;AACI;;AAEtC;AACA,wEAAwE,qDAAqD;AAC7H;AACA;AACA;AACA,MAAM;AACN,MAAM;AACN,MAAM;AACN;AACe;AACf;AACA;AACA;AACA,4CAA4C,2CAA2C;AACvF;AACA,YAAY,qCAAqC;AACjD,YAAY,qCAAqC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,8CAA8C;AACrE,8DAA8D,qDAAqD;AACnH,gBAAgB,oDAAoD;AACpE;AACA,wBAAwB,0DAA0D;AAClF;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,aAAa,mDAAU,GAAG,2CAA2C;AACrE;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,oDAAoD,iDAAiD;AACrG,KAAK,6CAA6C,2BAA2B,yDAAyD;AACtI;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,IAAI;AAC1B,mBAAmB,IAAI;AACvB;AACA;AACA;AACA,0BAA0B,2DAA2D;AACrF,0BAA0B,2DAA2D;AACrF,6BAA6B,6CAA6C;AAC1E;AACA,cAAc,+BAA+B;AAC7C;AACA;AACA,oEAAoE,wBAAwB;AAC5F;;AAEA;AACA;AACA,WAAW,iDAAQ;AACnB;;AAEA;AACA,SAAS,iDAAQ;AACjB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,IAAI;AAC3D,0DAA0D,IAAI;AAC9D;AACA;AACA;AACA,0BAA0B,2DAA2D;AACrF,0BAA0B,2DAA2D;AACrF,6BAA6B,6CAA6C;AAC1E;AACA,cAAc,+BAA+B;AAC7C;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gEAAgE,wBAAwB;AACxF;AACA;;AAEA;AACA;AACA,eAAe,iDAAQ;AACvB;;AAEA;AACA,aAAa,iDAAQ;AACrB;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,+BAA+B;AAC3C,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA,8CAA8C,oDAAoD;AAClG;AACA,YAAY,qCAAqC;AACjD,cAAc,QAAQ,kBAAkB,oDAAoD;AAC5F;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAA8C,2CAA2C;AACzF;AACA,YAAY,+BAA+B;AAC3C,YAAY,QAAQ;AACpB;AACA;AACA,cAAc,QAAQ,kBAAkB,2CAA2C;AACnF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,oCAAoC,2CAA2C;AAC/E,KAAK,2CAA2C;AAChD,8CAA8C,4CAA4C;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oGAAoG;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mGAAmG;AACnG;AACA;AACA;AACA,mGAAmG;AACnG;AACA;AACA;AACA,YAAY,+BAA+B;AAC3C,cAAc,uCAAuC;AACrD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qCAAqC,2CAA2C,YAAY,2CAA2C;AACvI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oGAAoG;AACpG,uGAAuG;AACvG,2DAA2D;AAC3D;AACA,qGAAqG;AACrG,uDAAuD;AACvD;AACA,YAAY,+BAA+B;AAC3C,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,eAAe,0DAA0D;AACzE;AACA,YAAY,OAAO,iDAAiD,+CAA+C;AACnH,YAAY,qCAAqC;AACjD,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA,wBAAwB;AACxB;;AAEA,aAAa,mDAAU;AACvB;;AAEA;AACA,eAAe,mCAAmC,KAAK;AACvD;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,iDAAiD;AACjE;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,6BAA6B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,gDAAgD,8CAA8C;AAC9F;AACA;AACA,sBAAsB,+CAA+C;AACrE,4CAA4C,yCAAyC;AACrF,SAAS,oDAAoD;AAC7D;AACA,iEAAiE,+CAA+C;AAChH;AACA;AACA,YAAY,OAAO,iDAAiD,+CAA+C;AACnH,cAAc;AACd;AACA,yBAAyB;AACzB;AACA;;AAEA,yBAAyB,mDAAU;;AAEnC;AACA;AACA;AACA;;AAEA;AACA,gDAAgD,qDAAqD;AACrG;AACA;AACA,sBAAsB,+CAA+C;AACrE,KAAK,qDAAqD,OAAO,oDAAoD;AACrH;AACA,iEAAiE,+CAA+C;AAChH;AACA;AACA,YAAY,OAAO,iDAAiD,+CAA+C;AACnH,cAAc;AACd;AACA,6BAA6B;AAC7B;;AAEA,yBAAyB,mDAAU;;AAEnC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;AACzB,8BAA8B;AAC9B;AACA,+BAA+B;AAC/B,2BAA2B;AAC3B,6BAA6B;AAC7B;AACA,KAAK,4EAA4E;AACjF;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,+BAA+B;AAC3C,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,kFAAkF;AAC9F;AACA,YAAY,OAAO;AACnB,YAAY,kFAAkF;AAC9F;AACA,YAAY,OAAO;AACnB,cAAc,+BAA+B;AAC7C;AACA;AACA;AACA,OAAO,iDAAQ;AACf,OAAO,iDAAQ;AACf;AACA;;AAEA;AACA,mDAAmD,oDAAoD;AACvG;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,+BAA+B,iDAAiD;AAChF;AACA;AACA;AACA,YAAY,mCAAmC;AAC/C,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,8CAA8C,6CAA6C;AAC3F;AACA;AACA,YAAY,6BAA6B;AACzC,cAAc;AACd;AACA;AACA;;AAEA,2CAA2C,iDAAQ;AACnD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACphBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAE8B;AACQ;AAC2D;;AAE7C;AACE;AACY;AACJ;AACc;AACJ;AACV;AACA;AACA;AACV;;AAEpD;AACA;AACA,QAAQ,2FAA2F;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,mDAAmD;AACrE;AACA;AACe;AACf;AACA;AACA;AACA,YAAY,6CAA6C;AACzD,YAAY,uDAAuD;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA,mDAAmD,yBAAyB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,uCAAuC;AACnD,YAAY,6BAA6B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,cAAc,mFAAa;AAC3B;AACA;AACA;;AAEA;AACA,mCAAmC,wBAAwB,GAAG,sBAAsB,MAAM,mBAAmB;AAC7G;AACA;AACA;AACA;AACA;AACA,2BAA2B,wCAAwC;AACnE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mCAAmC,uBAAuB;AAC1D;;AAEA;AACA;AACA,6BAA6B,uBAAuB;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,gEAAgB;AACzB;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,6BAA6B;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gFAAgF,sBAAsB;AACtG;AACA;AACA;;AAEA;AACA,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK,wFAAM;AACX;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,6BAA6B;AACzC,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK,+DAA+D;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,UAAU,iDAAY;AACtB,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd,wBAAwB;AACxB;AACA;;AAEA,mBAAmB,wFAAM,uBAAuB,gEAAgB;AAChE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ,gEAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;;AAEA,OAAO,8DAAc;AACrB;AACA,GAAG;AACH,mDAAmD,4DAAoB;AACvE;;AAEA;AACA;;AAEA;AACA,0BAA0B,uCAAuC;AACjE;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,6BAA6B,6CAAQ,yBAAyB,6CAAQ;AACtE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,6BAA6B;AACzC,YAAY,OAAO;AACnB,YAAY,qCAAqC;AACjD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,kBAAkB,qDAAa;AAC/B;;AAEA;AACA,mBAAmB,uFAAQ;;AAE3B;AACA;AACA;AACA,KAAK,OAAO;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,mCAAmC;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,mCAAmC;AAC/C,YAAY,OAAO;AACnB,YAAY,qCAAqC;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gFAAgF,mCAAmC;AACnH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,wFAAM;AACV,IAAI;AACJ;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI,0FAAQ;AACZ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,sBAAsB;AAClC,cAAc,eAAe,mCAAmC,6BAA6B;AAC7F;AACA;AACA;;AAEA,SAAS,kFAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,eAAe,iDAAiD,6BAA6B;AACzG,YAAY,sBAAsB;AAClC,YAAY,aAAa;AACzB,cAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB;;AAEnB;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI,OAAO;AACX,oCAAoC,kFAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,kFAAI;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,6BAA6B;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,OAAO,0EAAG;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,UAAU;AACtB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,YAAY;AACxB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iFAAG,YAAY,qFAAe;;AAE9B;AACA;AACA;AACA,WAAW,mCAAmC;AAC9C,aAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,qBAAqB;AAChC,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA,MAAM,wFAAM;AACZ,yBAAyB,qDAAa;;AAEtC;AACA,EAAE;AACF,iDAAiD,qDAAa;;AAE9D;AACA;AACA,GAAG;AACH,GAAG,0FAAQ;AACX;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa;AACb;AACA,QAAQ,yFAAM,aAAa,yFAAM;AACjC,GAAG,wFAAM,cAAc,wFAAM;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO,yCAAyC,mEAAmE;AAC9H,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wFAAM,sBAAsB,wFAAM;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;;;;;;;;;;;;ACngCA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEgD;;AAEhD;;AAEA;AACA,4EAA4E,4DAA4D;AACxI,0EAA0E;AAC1E,qBAAqB;AACrB;AACA;AACA;AACe,kCAAkC,wDAAe;AAChE;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA,+BAA+B,2CAA2C;AAC1E;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD;AACrD,iDAAiD;AACjD,yCAAyC;AACzC,sCAAsC;AACtC,0DAA0D;AAC1D,sDAAsD;AACtD,8CAA8C;AAC9C,2CAA2C;AAC3C;AACA,+CAA+C;AAC/C,kDAAkD;AAClD;AACA;AACA,KAAK,2EAA2E;AAChF;AACA,qCAAqC;AACrC,4DAA4D;AAC5D,sBAAsB;AACtB;AACA,KAAK,4EAA4E;AACjF;AACA,YAAY,OAAO;AACnB;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEwE;AAC5C;AACM;AACkB;AACkB;AAC5C;AAC8B;AACU;AACd;;AAEpD;AACA;AACA,aAAa,6DAA6D;AAC1E;AACA;AACA;AACA,MAAM,4EAA4E;AAClF,MAAM,oGAAoG;AAC1G;AACA,+BAA+B,4CAA4C;AAC3E,QAAQ,uEAAuE;AAC/E;AACe;AACf;AACA;AACA;AACA;AACA;AACA,OAAO,4EAA4E;AACnF,OAAO,oGAAoG;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iDAAiD;AACpF;AACA;AACA;AACA,+BAA+B,wCAAwC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,iBAAiB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,2BAA2B;AAClF;AACA,YAAY,wCAAwC;AACpD,YAAY,wCAAwC;AACpD,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK,mBAAmB;AACxB;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,aAAa,WAAW,cAAc;AACjE;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,KAAK,yEAAyE;AAC9E;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK,iDAAiD,WAAW,8DAA8D;AAC/H;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kFAAkF;AAClF,cAAc,4DAA4D;AAC1E;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK,8DAA8D;AACnE;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK,4DAA4D;AACjE;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,8FAA8F;AAC1G;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,+BAA+B,wDAAwD;AACvF;AACA;AACA,YAAY,8FAA8F;AAC1G;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,mFAAK;AAC5B,uBAAuB,mFAAK;;AAE5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mCAAmC,iDAAiD;AACpF;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK,yDAAyD;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iDAAiD;AAChF;AACA;AACA;AACA;AACA,2BAA2B,wCAAwC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iBAAiB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,2BAA2B;AACzD;AACA;AACA,YAAY,wCAAwC;AACpD,YAAY,wCAAwC;AACpD,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,GAAG,oEAAoE,0DAAiB;AACxF;AACA,0BAA0B,gEAAgE;AAC1F,GAAG,iCAAiC,8CAAK;AACzC;AACA;AACA,GAAG,iCAAiC,iDAAQ;AAC5C,0BAA0B,8CAAK;AAC/B;AACA,GAAG,iCAAiC,6CAAI;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,mFAAa;AAC3B;AACA;AACA;AACA;AACA,IAAI;AACJ,YAAY,8CAAK;AACjB,IAAI;AACJ,YAAY,8CAAK;AACjB,IAAI;AACJ,gBAAgB,8CAAK,EAAE,iDAAQ;AAC/B;;AAEA;AACA;AACA,GAAG,WAAW,wFAAU;AACxB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;;AAEA;AACA;;AAEA;AACA,WAAW,aAAa;AACxB;AACA,uDAAuD;AACvD;AACA;AACA;AACA,YAAY,kEAAkE;AAC9E,YAAY,8BAA8B;AAC1C,0BAA0B,6CAA6C;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;AACA;AACA;AACA;;AAEA,mBAAmB,iDAAQ;;AAE3B;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,uBAAuB,8CAAK;AAC5B,GAAG;AACH,uBAAuB,8CAAK;AAC5B;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iCAAiC;AACjC,sCAAsC;AACtC;AACA,uCAAuC;AACvC,+BAA+B;AAC/B,6BAA6B;AAC7B;AACA,KAAK,4EAA4E;AACjF;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,6DAA6D,qBAAqB,MAAM,mBAAmB;AAC3G;AACA;AACA;AACA,YAAY,0CAA0C;AACtD,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB;AACA,8BAA8B;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK,iDAAiD,KAAK;AAC3D,aAAa,6CAA6C,KAAK,iDAAiD;AAChH,6BAA6B,qBAAqB,MAAM,mBAAmB;AAC3E;AACA,YAAY,6DAA6D;AACzE;AACA;AACA;AACA;AACA,YAAY,+BAA+B;AAC3C,YAAY,QAAQ;AACpB;AACA;AACA,2BAA2B,8CAAK;AAChC;AACA,mEAAmE,qCAAqC;AACxG;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,6DAA6D;AACzE;AACA;AACA;AACA,YAAY,+BAA+B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+BAA+B;AAC9C,eAAe,+BAA+B;AAC9C;AACA,cAAc,mFAAa;AAC3B;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA,yBAAyB,8CAAK;AAC9B;;AAEA;AACA,yDAAyD,+BAA+B;AACxF;AACA;AACA;AACA;;AAEA,iFAAG,aAAa,kFAAY;;AAE5B;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;;;;;;;;;;;;ACrtBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE6D;;AAE7D;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA,YAAY,6CAA6C;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,yBAAyB,mDAAmD;AAC5E;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C,eAAe;AACzD;AACA,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oCAAoC;AACpC;AACA,iCAAiC;AACjC,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,4BAA4B;AAC5B,gCAAgC;AAChC,iCAAiC;AACjC;AACA;AACA;AACA,4BAA4B;AAC5B,gCAAgC;AAChC,iCAAiC;AACjC;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,kCAAkC;AAClC,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,sCAAsC,SAAS;AAC/C,uBAAuB,0CAA0C,iBAAiB,eAAe;AACjG;AACA;AACA;AACA,kCAAkC,cAAc;AAChD,4BAA4B,eAAe;AAC3C;AACA,uBAAuB,8CAA8C,iBAAiB;AACtF;AACA,YAAY,cAAc;AAC1B,YAAY,cAAc;AAC1B;AACA;AACA,OAAO,0DAAQ;AACf;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,oCAAoC,iBAAiB;AACrD;AACA;AACA;AACA,uBAAuB,2BAA2B;AAClD;AACA,kCAAkC;AAClC,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,0BAA0B,gBAAgB;AACjE;AACA,YAAY,OAAO;AACnB;AACA;AACA;;AAEA,EAAE,uDAAK;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wBAAwB,WAAW;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wBAAwB,kBAAkB,gBAAgB;AACjF;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,oCAAoC,4BAA4B;AAChE;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,wCAAwC;AAClH;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA,wCAAwC,0DAAQ;AAChD;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kEAAkE,8BAA8B;AAChG;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,uBAAuB,qDAAG;;AAE1B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,UAAU,qDAAqD,EAAE;AAC/F;AACA,kDAAkD,qBAAqB;AACvE;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA,OAAO,0DAAQ;AACf;;AAEA;AACA;;AAEA;AACA;;AAEA,UAAU,cAAc;;AAExB;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,qDAAqD,EAAE;AACtE,mBAAmB;AACnB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,6FAA6F,oBAAoB;AACjH;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA,UAAU,uDAAK,IAAI;AACnB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,qDAAG;AACd;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS,qDAAG;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qDAAqD;AACpE,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,kBAAkB;AACjE;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,yGAAyG;AAC9G;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0GAA0G;AAC1G,sBAAsB,kBAAkB,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,YAAY,OAAO;AACnB,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,aAAa,GAAG,eAAe,GAAG,gBAAgB,GAAG,cAAc;AACzF;AACA,MAAM;AACN;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,6EAA6E;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,eAAe;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,qBAAqB;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,6CAA6C;AAC7C,0DAA0D;AAC1D,kCAAkC;AAClC;;AAEA;AACA,iBAAiB,yBAAyB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB;AACA;AACA;;AAEA,MAAM,0DAAQ;AACd,eAAe,uDAAK,IAAI,EAAE,qDAAG;AAC7B;;AAEA,CAAC,qDAAG;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,uBAAuB;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;;;;;;;;;;;;;ACj4BA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE0B;;AAE1B;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACe,mBAAmB,6CAAI;AACtC;AACA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAiC,kEAAkE;AACnG;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB;AACvB,uBAAuB;AACvB,4BAA4B;AAC5B,4BAA4B;AAC5B;AACA,6BAA6B;AAC7B,0BAA0B;AAC1B,wBAAwB;AACxB;AACA,KAAK,4EAA4E;AACjF;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,kEAAkE;AAC/F;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,6BAA6B;AACzC,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,6BAA6B;AAC3C;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,YAAY;AACnD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC9IA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEwE;;AAExE;AACA,4CAA4C,mCAAmC;AAC/E,IAAI,+CAA+C,sBAAsB,mCAAmC;AAC5G;AACA,sCAAsC,wCAAwC;AAC9E;AACA;AACA;AACA,QAAQ,uDAAuD;AAC/D;AACA;AACA;AACA,iGAAiG,mCAAmC;AACpI;AACA,uEAAuE,mCAAmC;AAC1G,2BAA2B,yCAAyC;AACpE;AACA,yCAAyC,gEAAgE;AACzG;AACA;AACe;AACf;AACA;AACA;AACA;AACA,YAAY,6BAA6B;AACzC,YAAY,OAAO,yBAAyB;AAC5C;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,uBAAuB,mCAAmC;AAC1D;AACA;AACA,cAAc,6BAA6B;AAC3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,mFAAmF;AACnF;AACA;AACA,qEAAqE;AACrE,MAAM,uEAAuE;AAC7E;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,KAAK,yDAAyD;AAC9D,KAAK,6EAA6E;AAClF;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAiC;AACjC,sCAAsC;AACtC;AACA,uCAAuC;AACvC,+BAA+B;AAC/B,6BAA6B;AAC7B;AACA,KAAK,4EAA4E;AACjF;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,QAAQ,iDAAiD,UAAU;AAC/E,YAAY,QAAQ;AACpB;AACA,cAAc,MAAM;AACpB;AACA,0BAA0B,yCAAyC;AACnE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uCAAuC,YAAY;AACnD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACjMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEgC;AACN;AACU;AACF;AACsC;;AAExE;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,+BAA+B;AAC3C,YAAY,qCAAqC;AACjD,YAAY,qBAAqB;AACjC,YAAY,QAAQ;AACpB,KAAK,mCAAmC,4BAA4B,mCAAmC;AACvG,KAAK,6CAA6C;AAClD,YAAY,QAAQ;AACpB;AACA,YAAY,QAAQ;AACpB;AACA,UAAU,yCAAyC;AACnD;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA,aAAa,mFAAa;AAC1B;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAsC,aAAa;AACnD;AACA;AACA;AACA;AACA,cAAc,+BAA+B;AAC7C;AACA;;AAEA;AACA,mFAAmF,iBAAiB;AACpG;AACA;AACA;AACA,cAAc,qCAAqC;AACnD;AACA;AACA,mBAAmB,iDAAQ;AAC3B,GAAG;AACH,mBAAmB,iDAAQ;AAC3B;;AAEA;AACA;AACA;AACA;AACA,cAAc,qBAAqB;AACnC;AACA;;AAEA;AACA,kDAAkD,mCAAmC;AACrF,MAAM,mCAAmC,mBAAmB,6CAA6C;AACzG;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA,uDAAuD,yCAAyC;AAChG;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,6BAA6B;AAC3C;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,6BAA6B;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,WAAW,gBAAgB,SAAS,iBAAiB;AACrD;AACA;AACA;AACA,mDAAmD,SAAS;AAC5D,mCAAmC,uCAAuC;AAC1E,oCAAoC;AACpC;AACA,YAAY,SAAS,+BAA+B,oDAAoD;AACxG;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAM,cAAc;AACpB,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,8CAA8C;AAC5D;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;AACA,cAAc;AACd,cAAc,QAAQ;AACtB,cAAc,8CAA8C;AAC5D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA,WAAW;AACX;;AAEA;AACA;;AAEA;AACA,yBAAyB,6CAAI;AAC7B;AACA;AACA,oBAAoB,iDAAQ;;AAE5B;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA,uBAAuB,gDAAO;AAC9B;AACA,mBAAmB,iDAAQ;AAC3B,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA,GAAG,2BAA2B,6CAAI;AAClC;AACA,mBAAmB,iDAAQ;AAC3B;;AAEA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,kDAAS;AACzB,gBAAgB,iDAAQ;AACxB,KAAK;AACL,gBAAgB,kDAAS;AACzB;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA,yBAAyB,kDAAS;;AAElC;AACA;;AAEA;AACA,GAAG;AACH;AACA,cAAc,iDAAQ;AACtB;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA,8CAA8C,gBAAgB;AAC9D;AACA;AACA,cAAc;AACd,cAAc,QAAQ;AACtB,cAAc,8CAA8C;AAC5D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA,WAAW;AACX;;AAEA;AACA;;AAEA,WAAW,mCAAmC;AAC9C,yBAAyB,6CAAI;AAC7B;AACA;AACA,oBAAoB,iDAAQ;;AAE5B;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA,uBAAuB,gDAAO;AAC9B;AACA,mBAAmB,iDAAQ;AAC3B;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,GAAG,2BAA2B,6CAAI;AAClC;AACA,mBAAmB,iDAAQ;AAC3B;;AAEA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA,gBAAgB,kDAAS;AACzB;AACA,gBAAgB,iDAAQ;AACxB,KAAK;AACL,gBAAgB,kDAAS;AACzB;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA,yBAAyB,kDAAS;;AAElC;;AAEA;AACA,GAAG;AACH;AACA,cAAc,iDAAQ;AACtB;;AAEA;AACA;AACA;;AAEA;AACA,qGAAqG,mCAAmC;AACxI;AACA;AACA,YAAY,kDAAkD;AAC9D,YAAY,6BAA6B;AACzC,YAAY,qCAAqC;AACjD,YAAY,qCAAqC;AACjD,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kDAAS;AAChC;AACA;AACA;AACA,oBAAoB,iDAAQ;AAC5B;AACA;AACA,KAAK;AACL,wBAAwB,iDAAQ;AAChC;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,iDAAQ;AAC5B;AACA;AACA,KAAK;AACL,wBAAwB,iDAAQ;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,+CAA+C;AAC5E;AACA;AACA,QAAQ,mCAAmC;AAC3C;AACA,aAAa,OAAO;AACpB;;AAEA;AACA,uBAAuB,+CAA+C;AACtE;AACA,aAAa,OAAO;AACpB,cAAc,kDAAkD;AAChE,cAAc,6BAA6B;AAC3C;AACA,cAAc,qCAAqC;AACnD;AACA;AACA;AACA;AACA,+DAA+D,mCAAmC;AAClG;AACA,cAAc,qCAAqC;AACnD;AACA;AACA;AACA;AACA,+DAA+D,mCAAmC;AAClG;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA,aAAa,qBAAqB;AAClC;;;;;;;;;;;;;AC9eA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEgC;AACwC;AAC9C;AACwC;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,0GAA0G;AAC9G;AACA;AACA;AACA;AACA;AACA,gBAAgB,0DAA0D;AAC1E,kBAAkB,8EAA8E;AAChG;AACA;AACA,IAAI,0GAA0G;AAC9G;AACA;AACA;AACe,wBAAwB,gDAAO;AAC9C;AACA;AACA;AACA,YAAY,6DAA6D;AACzE;AACA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,YAAY,OAAO;AACnB,YAAY,gBAAgB;AAC5B,YAAY,qEAAqE;AACjF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,KAAK;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAiC;AACjC,+BAA+B;AAC/B,4BAA4B;AAC5B,sCAAsC;AACtC,oCAAoC;AACpC,iCAAiC;AACjC;AACA,qCAAqC;AACrC,wCAAwC;AACxC;AACA;AACA,KAAK,uDAAuD;AAC5D;AACA,4BAA4B;AAC5B,yCAAyC;AACzC,uBAAuB;AACvB;AACA,KAAK,4EAA4E;AACjF;AACA,YAAY,OAAO;AACnB;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,eAAe,sDAAsD;AACrE,YAAY,6DAA6D;AACzE;AACA;AACA;AACA;AACA;AACA,mCAAmC,6CAAI;AACvC;AACA,8BAA8B,6CAA6C;AAC3E;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;AACA;;AAEA;AACA,kBAAkB,6CAA6C;AAC/D,KAAK,mDAAmD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,uEAAuE;AAChF;AACA;AACA,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2DAA2D,oDAAoD;AAC/G;AACA,2BAA2B,gFAAgF;AAC3G;AACA;AACA;AACA,WAAW,6BAA6B;AACxC;AACO;AACP;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,+EAAQ;AAC9B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEkD;AAClB;AACN;AACgB;AACR;AACN;AACQ;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uEAAuE;AAC3E;AACA,6CAA6C;AAC7C,mBAAmB,gFAAgF;AACnG;AACA,uDAAuD,0DAA0D;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA,YAAY,qCAAqC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA,mBAAmB,2DAA2D;AAC9E;AACA,YAAY,qEAAqE;AACjF;AACA,cAAc,qDAAqD;AACnE;AACA;AACA,aAAa,yDAAgB;AAC7B;;AAEA;AACA,mBAAmB,yCAAyC;AAC5D;AACA;AACA;AACA,yCAAyC,2CAA2C,GAAG;AACvF,mGAAmG;AACnG,0DAA0D;AAC1D;AACA,YAAY,OAAO;AACnB,YAAY,gBAAgB;AAC5B,YAAY,qEAAqE;AACjF;AACA,cAAc,mCAAmC;AACjD;AACA;AACA,aAAa,gDAAO;AACpB;;AAEA;AACA,mBAAmB,mCAAmC;AACtD;AACA,YAAY,OAAO;AACnB,cAAc,6BAA6B;AAC3C;AACA;AACA,aAAa,6CAAI;AACjB;;AAEA;AACA;AACA;AACA;AACA,YAAY,mCAAmC;AAC/C,YAAY,QAAQ;AACpB;AACA,cAAc,mCAAmC;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,qEAAqE;AACjF,YAAY,wFAAwF;AACpG;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,qEAAqE;AACjF,YAAY,wFAAwF;AACpG;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,wFAAwF;AACpG;AACA;AACA,cAAc,qCAAqC;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,mCAAmC;AAC/C,cAAc,qCAAqC;AACnD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,mCAAmC;AAC/C,YAAY,mCAAmC;AAC/C,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,mCAAmC;AAC/C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,mCAAmC;AAC/C,cAAc,wCAAwC;AACtD;AACA;AACA;AACA,yBAAyB,gDAAO;;AAEhC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,mCAAmC;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,mCAAmC;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,mCAAmC;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,mCAAmC;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK,iIAAiI;AACtI,SAAS,mEAAmE;AAC5E;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,OAAO;AACnB,YAAY,mCAAmC;AAC/C;AACA;AACA,OAAO,+DAAa;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4CAA4C;AAC5C,8DAA8D;AAC9D;AACA;AACA,KAAK,iIAAiI;AACtI,SAAS,yEAAyE;AAClF;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,mCAAmC;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,EAAE;AACd,YAAY,mCAAmC;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,mCAAmC;AAC/C,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS,oDAAoD;AAC7D;AACA;AACA,OAAO,6CAA6C;AACpD;AACA;AACA;AACA,OAAO,4BAA4B;AACnC,OAAO,2BAA2B;AAClC;AACA,YAAY,mEAAmE;AAC/E,YAAY,8BAA8B;AAC1C,0BAA0B,6CAA6C;AACvE;AACA;AACA,SAAS,iDAAQ;AACjB;;AAEA;AACA;AACA;AACA,YAAY,6BAA6B;AACzC,cAAc;AACd;AACA;AACA,SAAS,iDAAQ;AACjB;;AAEA;AACA;AACA;AACA,YAAY,6BAA6B;AACzC,cAAc;AACd;AACA;AACA,SAAS,iDAAQ;AACjB;;AAEA;AACA;AACA;AACA,oDAAoD,2CAA2C;AAC/F;AACA,YAAY,qCAAqC;AACjD,YAAY,qCAAqC;AACjD,cAAc;AACd;AACA;AACA,aAAa,8CAAK;AAClB;;AAEA;AACA,8CAA8C,6CAA6C;AAC3F;AACA,YAAY,6BAA6B;AACzC,cAAc;AACd;AACA;AACA,SAAS,8CAAK;AACd;;AAEA;AACA,+BAA+B,iDAAiD;AAChF;AACA;AACA,YAAY,mCAAmC;AAC/C,cAAc;AACd;AACA;AACA,SAAS,8CAAK;AACd;;AAEA;AACA,mBAAmB,6CAA6C;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iDAAiD;AACpF;AACA;AACA;AACA,+BAA+B,wCAAwC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,iBAAiB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,2BAA2B;AAClF;AACA,YAAY,wCAAwC;AACpD,YAAY,wCAAwC;AACpD,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA,aAAa,kDAAS;AACtB;AACA;;;;;;;;;;;;;ACleA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEkC;AACY;AACZ;AACQ;AACR;AACN;AACQ;;AAEuB;AACV;AACoB;AACR;AACR;AACY;AACZ;;AAEuB;AACxB;AACkC;AAChC;AACN;AACwB;AACpB;;AAEpD;AACA;AACA;AACA;AACA;AACA,0CAA0C,0CAA0C;AACpF,IAAI,uDAAuD;AAC3D;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,8DAA8D;AAChG,kCAAkC,oDAAoD;AACtF;AACA;AACA,MAAM,oEAAoE;AAC1E,MAAM,sEAAsE;AAC5E,MAAM,8DAA8D;AACpE,MAAM,0DAA0D;AAChE,MAAM,8EAA8E;AACpF,MAAM,0EAA0E;AAChF;AACA,oBAAoB,qFAAqF;AACzG;AACA;AACA,8DAA8D,gEAAgE;AAC9H;AACA;AACA;AACe;AACf;AACA,YAAY,6CAA6C;AACzD;AACA;AACA;AACA,sBAAsB,2CAA2C;AACjE;AACA;AACA,YAAY;AACZ;AACA,sBAAsB,iDAAQ;;AAE9B;AACA,sBAAsB,gEAAgE;AACtF,MAAM;AACN,UAAU,8DAA8D;AACxE;AACA;AACA,YAAY;AACZ;AACA,0BAA0B,qDAAY;;AAEtC;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,8BAA8B,mBAAmB,MAAM,cAAc;AACrE;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA,sBAAsB,oDAAoD;AAC1E;AACA;AACA,YAAY;AACZ;AACA,uBAAuB,iDAAQ;AAC/B;;AAEA;AACA;AACA,SAAS,0DAA0D;AACnE,6BAA6B,iDAAiD;AAC9E;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,wBAAwB,8DAA8D;AACtF;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,4BAA4B,2BAA2B;AACvD;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,8BAA8B,mBAAmB,MAAM,cAAc;AACrE;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,yEAAyE,yBAAyB;AAClG;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,sCAAsC,4BAA4B;AAClE;AACA;AACA,YAAY;AACZ;AACA,qBAAqB,uDAAc;;AAEnC;AACA,oBAAoB,kEAAgB;AACpC,oBAAoB,oEAAiB;AACrC,oBAAoB,gEAAa;AACjC,oBAAoB,6DAAW;AAC/B,oBAAoB,uEAAqB;AACzC,oBAAoB,sEAAmB;;AAEvC,OAAO,0EAAG;AACV,qBAAqB,gEAAa;AAClC;;AAEA;AACA,EAAE,qEAAoB;AACtB,EAAE,2EAAuB;;AAEzB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,UAAU,mEAAmE;AAC7E;AACA;AACA;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D;AACA,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK,uCAAuC;AAC5C;AACA,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA,+CAA+C,OAAO;;AAEtD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA,4DAA4D,mEAAmE;AAC/H,SAAS,qEAAqE;AAC9E,KAAK,0BAA0B;AAC/B;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB,+CAA+C,oDAAoD;AACnG,cAAc,8CAA8C;AAC5D;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,SAAS;AACrB,cAAc,wDAAwD;AACtE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,gBAAgB;AACnD;AACA;AACA;AACA;;AAEA;AACA,GAAG,4GAA0B;AAC7B;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK,8DAA8D;AACnE;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB,cAAc,EAAE;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,cAAc,KAAK,mBAAmB;AACvD,iBAAiB,cAAc,KAAK,mBAAmB;AACvD,SAAS,iFAAiF;AAC1F;AACA;AACA;AACA,aAAa,oFAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA,GAAG,oFAAa;AAChB;AACA;;AAEA;AACA,sBAAsB,yDAAyD;AAC/E,2DAA2D,4BAA4B;AACvF;AACA,qGAAqG;AACrG;AACA;AACA,YAAY,6DAA6D;AACzE;AACA;AACA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS,oDAAoD;AAC7D;AACA;AACA,OAAO,6CAA6C;AACpD;AACA;AACA;AACA,OAAO,4BAA4B;AACnC,OAAO,2BAA2B;AAClC;AACA,YAAY,mEAAmE;AAC/E,YAAY,8BAA8B;AAC1C,0BAA0B,6CAA6C;AACvE;AACA;AACA,SAAS,iDAAQ;AACjB;;AAEA;AACA;AACA;AACA,YAAY,6BAA6B;AACzC,cAAc;AACd;AACA;AACA,SAAS,iDAAQ;AACjB;;AAEA;AACA;AACA;AACA,YAAY,6BAA6B;AACzC,cAAc;AACd;AACA;AACA,SAAS,iDAAQ;AACjB;;AAEA;AACA;AACA;AACA,oDAAoD,2CAA2C;AAC/F;AACA,YAAY,qCAAqC;AACjD,YAAY,qCAAqC;AACjD,cAAc;AACd;AACA;AACA,aAAa,8CAAK;AAClB;;AAEA;AACA,8CAA8C,6CAA6C;AAC3F;AACA,YAAY,6BAA6B;AACzC,cAAc;AACd;AACA;AACA,SAAS,8CAAK;AACd;;AAEA;AACA,+BAA+B,iDAAiD;AAChF;AACA;AACA,YAAY,mCAAmC;AAC/C,cAAc;AACd;AACA;AACA,SAAS,8CAAK;AACd;;AAEA;AACA,eAAe,6CAA6C;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iDAAiD;AACpF;AACA;AACA;AACA,+BAA+B,wCAAwC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,iBAAiB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,2BAA2B;AAChF;AACA,YAAY,wCAAwC;AACpD,YAAY,wCAAwC;AACpD,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA,aAAa,kDAAS;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,uDAAuD;AAClF,KAAK,yEAAyE;AAC9E;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,KAAK,yEAAyE;AAC9E;AACA;AACA;AACA;;AAEA,kFAAG,QAAQ,sFAAe;;;;;;;;;;;;ACnsB1B,UAAU,mBAAO,CAAC,6IAAiE;AACnF,0BAA0B,mBAAO,CAAC,+KAAoE;;AAEtG;;AAEA;AACA,0BAA0B,QAAS;AACnC;;AAEA,eAAe;;AAEf;AACA;;AAEA;;AAEA;;;;AAIA,0B;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEyD;AACf;AACE;;AAE5C;AACA;AACA;AACA,iBAAiB,yCAAyC;AAC1D;AACA,oDAAoD,8BAA8B;AAClF;AACA;AACA;AACe,oBAAoB,2EAAM;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAoB,sDAAa;;AAEjC,oCAAoC,qDAAY;;AAEhD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG,GAAG,kBAAkB;AACxB;AACA;;;;;;;;;;;;;ACnDA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE2D;AACR;;AAEnD;AACA,qCAAqC,6CAA6C;AAClF;AACA;AACA;AACe,2BAA2B,4EAAO;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,SAAS;AACxC,GAAG;AACH;AACA;;AAEA;AACA;AACA,WAAW,0BAA0B;AACrC,WAAW,kCAAkC;AAC7C,WAAW,gGAAgG;AAC3G;AACA,WAAW,kCAAkC;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2BAA2B,uEAAwB;AACnD;AACA;AACA,EAAE;AACF;AACA;;AAEA,mCAAmC,gBAAgB;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE6E;AACQ;AACnB;;AAElE;AACA,kCAAkC,uDAAuD;AACzF;AACA;AACA;AACe,4BAA4B,6FAAQ;AACnD;AACA;;AAEA;;AAEA;AACA,0CAA0C,+EAAQ;AAClD;AACA;AACA,gDAAgD,sBAAsB;;AAEtE,2BAA2B,iGAAY;AACvC;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qCAAqC;AACrC,+BAA+B,6CAA6C;AAC5E,IAAI,4DAA4D;AAChE;AACA;AACA,WAAW,sDAAsD;AACjE,WAAW,QAAQ;AACnB;;;;;;;;;;;;;AC3DA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEoD;AACR;AACa;;AAEzD;AACA;AACA;AACA,iBAAiB,+BAA+B;AAChD;AACA,oDAAoD,8BAA8B;AAClF;AACA;AACA;AACe,yBAAyB,2EAAM;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,IAAI;;AAEJ,oBAAoB,sDAAa;;AAEjC,yCAAyC,0DAAiB;;AAE1D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG,GAAG,kBAAkB;AACxB;AACA;;;;;;;;;;;;;ACxEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE2D;AACR;;AAEnD;AACA,0CAA0C,4DAA4D;AACtG;AACA;AACA;AACA;AACe,gCAAgC,4EAAO;AACtD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,SAAS;AACxC,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,kCAAkC;AAC7C,WAAW,gGAAgG;AAC3G;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,0BAA0B;AACrC,WAAW,kCAAkC;AAC7C,WAAW,gGAAgG;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,uEAAwB;AACnD;;AAEA;AACA;AACA,EAAE;AACF;AACA,mCAAmC,gBAAgB;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oCAAoC;AAC/C,WAAW,4BAA4B;AACvC,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC7IA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI,oEAAoE;AACxE;AACA,WAAW,kCAAkC;AAC7C,WAAW,aAAa;AACxB,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEyD;;AAEW;AACZ;AACU;AACP;AACN;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,2CAA2C;AACjD,MAAM,+BAA+B;AACrC,MAAM,yCAAyC;AAC/C,MAAM,kCAAkC;AACxC,MAAM,4BAA4B;AAClC;AACA,wEAAwE,2CAA2C;AACnH;AACA;AACA;AACA;AACe,yBAAyB,2EAAM;AAC9C;AACA;AACA;AACA;AACA,WAAW,mFAAS,EAAE,2EAAK,EAAE,gFAAU,EAAE,6EAAM,EAAE,yEAAI;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChDA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEkE;AACU;AACxB;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACe,sCAAsC,gFAAU;AAC/D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B,oDAAoD;AAChF;AACA;AACA;AACA;AACA,YAAY,8CAA8C;AAC1D,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA,iFAAG,2BAA2B,qFAAe;;;;;;;;;;;;;AClF7C;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEyD;AACiC;AACV;;AAEhF;AACA;AACA;AACA,uCAAuC,kCAAkC;AACzE,YAAY,6BAA6B;AACzC;AACA;AACA,QAAQ,4FAA4F;AACpG,IAAI,kFAAkF;AACtF;AACA;AACA;AACe,kCAAkC,2EAAM;AACvD;AACA;AACA;AACA;AACA,WAAW,uFAA0B,EAAE,kFAAqB;AAC5D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,4FAA4F;AACxH;AACA,iBAAiB,gEAAgE;AACjF;AACA,YAAY,0DAA0D;AACtE;;AAEA;AACA;AACA,+BAA+B,4FAA4F;AAC3H;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,QAAQ,sEAAsE;AAC9E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sBAAsB;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;;AAEA;AACA;AACA;AACA;AACA,gCAAgC,wEAAwE;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;;;;;;;;;;;;;AC1LA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEyC;AACQ;;AAEjD;AACA;AACA,IAAI;AACJ;AACA;AACA,4CAA4C,4BAA4B;AACxE;AACA;AACA;AACA;AACA;AACe,yCAAyC,oDAAW;AACnE;AACA;AACA;AACA;AACA,iBAAiB,4DAAqB;AACtC;AACA;;;;;;;;;;;;;AC9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEyD;AACa;AACyB;;AAE/F;AACA;AACA;AACA,sBAAsB,oGAAoG;AAC1H,+CAA+C,4CAA4C;AAC3F,WAAW,mCAAmC;AAC9C,qBAAqB,8EAA8E;AACnG;AACA;AACA;AACe,yCAAyC,2EAAM;AAC9D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,4DAAqB;AAC7C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,SAAS,4DAAqB;AAC9B,WAAW,oEAAqB;AAChC;AACA,GAAG;;AAEH;AACA,UAAU,4DAAqB;AAC/B,SAAS,oEAAqB;AAC9B,GAAG;;AAEH,uBAAuB,4DAAqB,MAAM,mEAA0B;;AAE5E;AACA,wCAAwC,kBAAkB,4DAAqB,EAAE;;AAEjF,8CAA8C,4DAAqB;AACnE;AACA;AACA,GAAG;AACH;AACA;;;;;;;;;;;;;ACpIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACoC;AACa;AAC2B;AAC5E;AACA;AACA;AACA;AACA;AACe,oCAAoC,mDAAO;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4DAAqB;AAC9C,2BAA2B,4DAAqB;AAChD,kBAAkB,wEAAuB;AACzC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AClCA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEyD;AACG;AACV;;AAElD;AACA;AACA;AACA,uCAAuC,kCAAkC;AACzE,YAAY,6BAA6B;AACzC;AACA,4CAA4C,8DAA8D;AAC1G,IAAI,oDAAoD;AACxD;AACA;AACA;AACe,wBAAwB,2EAAM;AAC7C;AACA;AACA;AACA;AACA,WAAW,mEAAgB,EAAE,8DAAW;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,8DAA8D;AAC1F;AACA,iBAAiB,4CAA4C;AAC7D;AACA,YAAY,sCAAsC;AAClD;;AAEA;AACA;AACA,+BAA+B,8DAA8D;AAC7F;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,QAAQ,sEAAsE;AAC9E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sBAAsB;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;;AAEA;AACA;AACA;AACA;AACA,gCAAgC,oDAAoD;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;;;;;;;;;;;;;ACzLA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEyC;AACH;;AAEtC;AACA,0CAA0C;AAC1C;AACA;AACA,kCAAkC,4BAA4B;AAC9D;AACA;AACA;AACA;AACA;AACe,+BAA+B,oDAAW;AACzD;AACA;AACA;AACA;AACA,iBAAiB,iDAAU;AAC3B;AACA;;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEyD;AACP;AACkC;;AAEpF;AACA;AACA;AACA,sBAAsB,sEAAsE;AAC5F,qCAAqC,4CAA4C;AACjF,WAAW,mCAAmC;AAC9C,qBAAqB,0DAA0D;AAC/E;AACA;AACA;AACe,+BAA+B,2EAAM;AACpD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,iDAAU;AAClC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,SAAS,iDAAU;AACnB,WAAW,oEAAqB;AAChC;AACA,GAAG;;AAEH;AACA,UAAU,iDAAU;AACpB,SAAS,oEAAqB;AAC9B,GAAG;;AAEH,uBAAuB,iDAAU,MAAM,yDAAgB;;AAEvD;AACA,wCAAwC,kBAAkB,iDAAU,EAAE;;AAEtE,8CAA8C,iDAAU;AACxD;AACA;AACA,GAAG;AACH;AACA;;;;;;;;;;;;;ACpIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACoC;AACE;AACuB;AAC7D;AACA;AACA;AACA;AACA;AACe,0BAA0B,mDAAO;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iDAAU;AACnC,2BAA2B,iDAAU;AACrC,kBAAkB,mEAAa;AAC/B;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AClCA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE2D;;AAE3D;AACA;AACA;AACA;AACA;AACe,0BAA0B,4EAAO;AAChD;AACA;AACA;AACA,YAAY,iCAAiC;AAC7C,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA,gCAAgC,oBAAoB;AACpD;AACA;AACA;AACA,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sDAAsD,oBAAoB;AAC1E;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;;;;;;;;;;;AC1FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEmD;AACmB;AACS;AACA;AACZ;AACF;AACN;AACW;AACL;AACa;AACC;AAC5C;;AAEnC;AACA;AACA;AACA;AACA,eAAe,kDAAkD;AACjE,gBAAgB,kDAAkD;AAClE;AACA;AACA;AACe,6BAA6B,uEAAI;AAChD;AACA,iDAAiD,mDAAmD;AACpG;AACA,YAAY,2BAA2B;AACvC,YAAY,OAAO;AACnB,YAAY,sDAAsD;AAClE;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA,uBAAuB,+EAA+E;AACtG;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,0BAA0B,kFAAY;;AAEtC;AACA,yBAAyB,qDAAqD;AAC9E;AACA;AACA,cAAc;AACd;AACA,wBAAwB,sFAAgB;;AAExC;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,4BAA4B,gEAAuB;;AAEnD;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,iCAAiC,kDAAkD;AACnF;AACA;AACA;AACA;AACA;AACA,cAAc,sDAAsD;AACpE;;AAEA;AACA,iCAAiC,kDAAkD;AACnF;AACA;AACA;AACA;AACA;AACA,cAAc,sDAAsD;AACpE;;AAEA;AACA,mCAAmC,aAAa;AAChD;AACA;AACA;AACA,cAAc;AACd;AACA,0BAA0B,8EAAW;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gCAAgC;AAC5C,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8DAA8D,kDAAkD;AAChH,sBAAsB,mDAAmD;AACzE;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa,wBAAwB,MAAM,0BAA0B;AACrE;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,gBAAgB,2EAAQ;AACxB,qBAAqB,kFAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA,4CAA4C,aAAa;AACzD;AACA;AACA;AACA;;AAEA;AACA,2CAA2C,aAAa;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,yBAAyB,oFAAU;;AAEnC;AACA;AACA,SAAS,wFAAgB;AACzB;AACA;AACA,GAAG;;AAEH;AACA;AACA,0BAA0B,cAAc;AACxC,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,wBAAwB,0FAAa;AACrC;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA,8DAA8D,sBAAsB;AACpF;AACA;AACA,cAAc;AACd;AACA;AACA,eAAe,2EAAQ;AACvB,iCAAiC,0FAAa;AAC9C;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,0BAA0B,0FAAa;;AAEvC;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA,MAAM;AACN,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH,6CAA6C;AAC7C;AACA;AACA;;;;;;;;;;;;;ACxZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACyD;AACkB;AAIvB;AACD;AACnD;AACA;AACA;AACA;AACA,MAAM,mDAAmD;AACzD;AACA;AACA;AACe,sBAAsB,2EAAM;AAC3C;AACA,wEAAwE,mDAAmD;AAC3H;AACA,YAAY,iCAAiC;AAC7C,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO,uDAAuD;AAC1E;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA,yBAAyB,gDAAgD;AACzE;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,wCAAwC,kDAAkD;AAC1F;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,4CAA4C,qBAAqB;AACjE;AACA,2BAA2B,mDAAmD;AAC9E;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,wGAAqB;AAClD,gCAAgC,2GAAwB;AACxD,yDAAyD,qBAAqB;AAC9E;AACA;AACA,iCAAiC,gGAAc;AAC/C,kCAAkC,sEAAuB;AACzD;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,yCAAyC,cAAc,gCAAgC,EAAE;AACzF;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA,C;;;;;;;;;;;;AC5HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEiD;;AAEjD;AACA;AACA;AACO;;AAEP;AACA;AACA;AACO;;AAEP;AACA;AACA;AACO;;AAEP;AACA;AACA;AACO;;AAEP;AACA,oBAAoB,mFAAmF;AACvG;AACA,WAAW,OAAO;AAClB,WAAW,4FAA4F;AACvG,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH,UAAU;AACV;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAM,iDAAiD;AACvD,IAAI,gFAAgF;AACpF;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACO;AACP;AACA;;AAEA;AACA,MAAM,iDAAiD;AACvD,IAAI,gFAAgF;AACpF;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACO;AACP;AACA,YAAY,YAAY,GAAG,sBAAsB;AACjD,EAAE,GAAG,cAAc;AACnB;;AAEA;AACA,uBAAuB,mDAAmD;AAC1E;AACA,WAAW,OAAO;AAClB,WAAW,6CAA6C;AACxD,MAAM,mDAAmD;AACzD,WAAW,sDAAsD;AACjE;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,6CAA6C;AAC1D;AACO,mCAAmC,6FAA6F;AACvI;AACA,4BAA4B,0DAAc,WAAW,+EAA+E;;AAEpI;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;;;;;;;;;;;;ACxHA,UAAU,mBAAO,CAAC,6IAAiE;AACnF,0BAA0B,mBAAO,CAAC,yKAAkE;;AAEpG;;AAEA;AACA,0BAA0B,QAAS;AACnC;;AAEA,eAAe;;AAEf;AACA;;AAEA;;AAEA;;;;AAIA,0B;;;;;;;;;;;;ACpBA;AAAe,2U;;;;;;;;;;;;ACAf;AAAe,8Q;;;;;;;;;;;;ACAf;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sCAAsC;AACjD,WAAW,OAAO;AAClB,aAAa,gCAAgC;AAC7C;AACe;AACf;AACA;;AAEA;AACA;AACA;AACA,WAAW,sCAAsC;AACjD,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,sCAAsC;AACnD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC3CA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEyD;AACjB;AACV;;AAE9B;AACA;AACA;AACA,2CAA2C;AAC3C,QAAQ,gDAAgD;AACxD;AACA;AACA;AACe,mBAAmB,2EAAM;AACxC;AACA;AACA;AACA;AACA,WAAW,oDAAW,EAAE,+CAAM;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,4BAA4B;AACzD;AACA,iBAAiB,kCAAkC;AACnD;AACA,YAAY,4BAA4B;AACxC;;AAEA;AACA,6BAA6B,yCAAyC;AACtE;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,QAAQ,sEAAsE;AAC9E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA,IAAI,4DAA4D;AAChE,IAAI,sEAAsE;AAC1E;AACA;AACA,gCAAgC;AAChC,OAAO,4DAA4D;AACnE;AACA,0DAA0D;AAC1D;AACA;AACA;AACA,YAAY,QAAQ;AACpB;;AAEA;AACA;AACA;AACA;AACA,MAAM,kEAAkE,QAAQ;AAChF;AACA,MAAM,4DAA4D,QAAQ;AAC1E;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,gEAAgE;AAChE,QAAQ,4DAA4D;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,iBAAiB,0EAA0E;AAC3F;AACA,YAAY,0DAA0D;AACtE;;AAEA;AACA,4CAA4C;AAC5C,OAAO,sEAAsE;AAC7E;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,0EAA0E;AAC5F;AACA,YAAY,qBAAqB;AACjC;;AAEA;AACA,2BAA2B,4DAA4D;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,aAAa,OAAO;AACpB,cAAc,YAAY;AAC1B,cAAc,SAAS;AACvB,cAAc,OAAO;AACrB,IAAI,2EAA2E;AAC/E,iCAAiC,6DAA6D;AAC9F;;AAEA;AACA,uBAAuB,4DAA4D;AACnF,uBAAuB,wCAAwC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,SAAS;AACvB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,IAAI,2EAA2E;AAC/E,iCAAiC,6DAA6D;AAC9F;;;;;;;;;;;;;ACzNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE2D;AACf;AACY;AACU;;AAElE;AACA,wCAAwC,yCAAyC;AACjF;AACA;AACA;AACe,0BAA0B,4EAAO;AAChD;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;;AAEA;AACA;;AAEA;AACA,sBAAsB;AACtB,2BAA2B,qEAAqE;AAChG;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,8BAA8B,gFAAU;AACxC;;AAEA;AACA,+BAA+B,wBAAwB;AACvD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,8CAA8C;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,oFAAoF;AACzF,KAAK,+DAA+D;AACpE;AACA,wEAAwE,2DAA2D;AACnI;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,eAAe,gFAAgF;AAC/F;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO,uBAAuB;AAC1C;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,8DAAa;;AAEpC;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mFAAK;;AAE7B;;AAEA;AACA;AACA,MAAM;;AAEN;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1NA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEyD;AACjB;AACI;AAC4D;AAC1C;AACR;AACqD;AAC/D;AACjB;;AAE3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,0BAA0B,2EAAM;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,8BAA8B;;AAEtE;AACA,yBAAyB,0BAA0B,wDAAiB,EAAE;;AAEtE;AACA,yBAAyB;AACzB,WAAW,gEAAiB,EAAE,4DAAa;AAC3C,IAAI,EAAE;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,mCAAmC,oDAAW;AAC9C,qCAAqC,sDAAa;;AAElD,yBAAyB,qEAAsB,YAAY,kEAAmB;;AAE9E;AACA;;AAEA;AACA,EAAE,gHAA2B;AAC7B;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA,sCAAsC;AACtC,qBAAqB;AACrB;AACA,KAAK,0DAA0D;AAC/D;AACA;AACA,KAAK,kGAAkG;AACvG;AACA;AACA,YAAY,0DAA0D;AACtE;AACA;AACA;AACA,kCAAkC,kEAAmB;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,uEAAuE;AAC7G,0BAA0B,wCAAwC;AAClE,KAAK,2DAA2D;AAChE;AACA,uBAAuB;AACvB,yDAAyD;AACzD;AACA;AACA;AACA,YAAY,uDAAuD;AACnE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yCAAyC,gCAAgC;;AAEzE;AACA,6BAA6B,8DAAe;;AAE5C;AACA;AACA;AACA;AACA;AACA,uEAAuE,cAAc;AACrF;;AAEA;AACA;AACA,KAAK,EAAE;;AAEP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,qEAAqE;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,8DAAa;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA,8CAA8C,sBAAsB;AACpE,8CAA8C,sBAAsB;AACpE,iDAAiD,sBAAsB;AACvE,iDAAiD,sBAAsB;;AAEvE;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;;;;;;;;;;;;;AC5PA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACyD;AAC8B;AAC/C;AACmD;AACD;AACpB;AACzB;AACM;AACJ;AAC/C;AACA;AACA;AACA;AACA;AACA,IAAI,4FAA4F;AAChG;AACA;AACA;AACe,qBAAqB,2EAAM;AAC1C;AACA;AACA;AACA;AACA,gBAAgB,kGAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,kGAAa;AACrD;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,2CAA2C,kGAAiB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,qDAAqD;AACtE;AACA;AACA,cAAc,+CAA+C;AAC7D;AACA;AACA;AACA,gCAAgC,2DAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,+CAA+C;AAChE;AACA;AACA,cAAc,yCAAyC;AACvD;AACA;AACA;AACA;AACA,6BAA6B,wDAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO,gBAAgB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,+BAA+B,oFAAU;AACzC;AACA;AACA,0BAA0B,6DAAQ;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,gBAAgB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,QAAQ,uGAAmB;AAC3B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,cAAc,mBAAmB,SAAS,gBAAgB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,cAAc,gBAAgB,SAAS,gBAAgB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,6CAA6C;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,gBAAgB,WAAW,gBAAgB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,gBAAgB,KAAK,mBAAmB;AACrF;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gBAAgB,WAAW,gBAAgB;AAC5D;AACA,SAAS,oBAAoB,GAAG,uBAAuB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,wDAAwD;AACvF;AACA;AACA,UAAU,eAAe;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,gBAAgB,YAAY,gBAAgB;AACrE;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,yBAAyB,mBAAmB,YAAY,gBAAgB;AACxE;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,yBAAyB,mBAAmB,YAAY,gBAAgB;AACxE;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,yBAAyB,mBAAmB,KAAK,gBAAgB,YAAY,gBAAgB;AAC7F;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,yBAAyB,mBAAmB,KAAK,gBAAgB,YAAY,gBAAgB;AAC7F;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,gBAAgB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,sBAAsB,2DAA2D;AACjF,SAAS,0DAA0D;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qCAAqC;AAChD,aAAa,0DAA0D;AACvE;AACA,oDAAoD,4DAAa;AACjE,C;;;;;;;;;;;;AC5fA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACmD;AACoB;AACD;AACA;AACL;AACa;AACrC;AACa;AACmB;AACpC;AACrC;AACA;AACA;AACA;AACA;AACA;AACe,8BAA8B,uEAAI;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,gCAAgC,kFAAY;AAC5C;AACA,yBAAyB,qDAAqD;AAC9E;AACA;AACA,cAAc;AACd;AACA,8BAA8B,sFAAgB;AAC9C;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,2DAA2D,+DAAU;AACrE;AACA;AACA;AACA,cAAc;AACd;AACA,yDAAyD,uFAAU;AACnE;AACA,kEAAkE,yBAAyB;AAC3F;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,+BAA+B,iFAAc;AAC7C;AACA,yBAAyB,mBAAmB;AAC5C;AACA;AACA;AACA,cAAc;AACd;AACA,gCAAgC,8EAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,sBAAsB,mBAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc,uCAAuC;AACrD;AACA;AACA,2BAA2B,oFAAU;AACrC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,uCAAuC;AACrD;AACA;AACA,2BAA2B,oFAAU;AACrC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,4DAAa;AACnE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA,G;;;;;;;;;;;;ACtMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACmD;AACoB;AACD;AACY;AACM;AACT;AACD;AACR;AACL;AACa;AACP;AACE;AACvC;AAClC;AACA;AACA;AACA,QAAQ,+CAA+C;AACvD;AACA;AACA;AACe,2BAA2B,uEAAI;AAC9C;AACA,gCAAgC,+CAA+C;AAC/E;AACA,cAAc,cAAc;AAC5B;AACA,YAAY,2BAA2B;AACvC,YAAY,mCAAmC;AAC/C,KAAK,2DAA2D;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,gCAAgC,kFAAY;AAC5C;AACA,yBAAyB,qDAAqD;AAC9E;AACA;AACA,cAAc;AACd;AACA,8BAA8B,sFAAgB;AAC9C;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,yDAAyD,uFAAS;AAClE;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,2DAA2D,wFAAU;AACrE;AACA,sBAAsB,yDAAyD;AAC/E,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,+BAA+B,iFAAc;AAC7C;AACA,yBAAyB,mBAAmB;AAC5C;AACA;AACA;AACA,cAAc;AACd;AACA,gCAAgC,8EAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,8BAA8B,wEAAwE;AACtG,KAAK;AACL,YAAY,+CAA+C;AAC3D;AACA,cAAc,wBAAwB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI;AACb;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,iGAAa,EAAE,aAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,sBAAsB,mBAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,yDAAyD;AACvE;AACA;AACA;AACA,iCAAiC,gGAAgB,cAAc,0FAAa;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc,uCAAuC;AACrD;AACA;AACA,2BAA2B,oFAAU;AACrC;AACA;AACA;AACA;AACA,SAAS;AACT,+BAA+B,cAAc,mBAAmB,EAAE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,8CAA8C,KAAK;AAClE,mBAAmB,2DAA2D;AAC9E;AACA;AACA,YAAY,mCAAmC;AAC/C;AACA,cAAc,wCAAwC;AACtD;AACA;AACA;AACA;AACA,qCAAqC,0FAAgB;AACrD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA,QAAQ,6EAA6E;AACrF,oCAAoC,gCAAgC;AACpE;AACA;AACA;AACA,YAAY,mCAAmC;AAC/C;AACA,cAAc,wCAAwC;AACtD;AACA;AACA;AACA;AACA;AACA,8CAA8C,uEAAI;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,gCAAgC,sBAAsB;AACtD;AACA;AACA;AACA;AACA,sEAAsE,wBAAwB;AAC9F;AACA;AACA,G;;;;;;;;;;;;ACjSA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE2D;AACf;;AAE5C;AACA,0CAA0C,wCAAwC;AAClF;AACA;AACA;AACe,4BAA4B,4EAAO;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,sEAAsE;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM,8DAAa;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;;;;;;;;;;;AC7DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,6BAA6B;AACxC,aAAa;AACb;AACO;AACP;AACA;AACA;AACA,iBAAiB,2DAA2D;AAC5E;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACO;AACP;AACA,4DAA4D,OAAO,GAAG,cAAc;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,gBAAgB,sEAAsE;AACtF,6DAA6D;AAC7D;AACA;AACA;AACA,sBAAsB,sEAAsE;AAC5F;AACA,WAAW,6BAA6B,kBAAkB;AAC1D,WAAW,iDAAiD;AAC5D;AACA,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,0DAA0D;AACrE,aAAa;AACb;AACO;AACP;AACA;AACA;AACA,8CAA8C,UAAU,YAAY,CAAC,4DAAU,OAAO,GAAG;AACzF;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AChGA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wCAAwC,wDAAwD;AAChG,MAAM,sGAAsG;AAC5G;AACe;AACf;AACA;AACA,+BAA+B,6EAA6E;AAC5G;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA,oEAAoE,4CAA4C;AAChH;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,4GAA4G;AACxH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,gDAAgD,mEAAmE;AACnH;AACA,cAAc,SAAS;AACvB,QAAQ,mEAAmE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,IAAI,GAAG,mBAAmB;AAC1B;AACA;AACA;;;;;;;;;;;;;ACvFA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE4E;AACxB;;AAEpD;AACA,+DAA+D;AAC/D;AACA,gDAAgD,2DAA2D;AAC3G;AACA;AACA;AACe;AACf;AACA,+BAA+B,wCAAwC;AACvE;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,gEAAgE,6DAA6D;AAC7H;AACA,eAAe,wBAAwB;AACvC;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,oEAAoE,6DAA6D;AACjI;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA,iFAAG,mBAAmB,qFAAe;;;;;;;;;;;;;AC/DrC;AAAe,orB;;;;;;;;;;;;ACAf;AAAe,o4B;;;;;;;;;;;ACAf,UAAU,mBAAO,CAAC,6IAAiE;AACnF,0BAA0B,mBAAO,CAAC,+JAA6D;;AAE/F;;AAEA;AACA,0BAA0B,QAAS;AACnC;;AAEA,eAAe;;AAEf;AACA;;AAEA;;AAEA;;;;AAIA,0B;;;;;;;;;;;ACpBA,UAAU,mBAAO,CAAC,6IAAiE;AACnF,0BAA0B,mBAAO,CAAC,6KAAoE;;AAEtG;;AAEA;AACA,0BAA0B,QAAS;AACnC;;AAEA,eAAe;;AAEf;AACA;;AAEA;;AAEA;;;;AAIA,0B;;;;;;;;;;;ACpBA,UAAU,mBAAO,CAAC,6IAAiE;AACnF,0BAA0B,mBAAO,CAAC,uKAAiE;;AAEnG;;AAEA;AACA,0BAA0B,QAAS;AACnC;;AAEA,eAAe;;AAEf;AACA;;AAEA;;AAEA;;;;AAIA,0B;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEkD;;AAEO;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACe,wBAAwB,2EAAM;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wCAAwC,yDAAgB;;AAExD;AACA,uCAAuC,2BAA2B;;AAElE,uCAAuC,gCAAgC;;AAEvE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA,GAAG;;AAEH;AACA;AACA,wDAAwD,2BAA2B;AACnF;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG,GAAG,kBAAkB;;AAExB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG,GAAG,qBAAqB;;AAE3B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG,GAAG,qBAAqB;AAC3B;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,aAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC/LA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE2D;AACH;;AAExD;AACA;AACA;AACA;AACA;AACe,+BAA+B,4EAAO;AACrD;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mFAAK;;AAErB;AACA;AACA;;AAEA;AACA,+CAA+C,wCAAwC;AACvF;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,gGAAgG;AAC5G;AACA,gEAAgE,sDAAsD;AACtH;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,WAAW,oCAAoC;AAC/C,WAAW,kCAAkC;AAC7C,aAAa;AACb;AACA;AACA;;;;;;;;;;;;;ACxEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEsE;AACM;;AAE5E;AACA;AACA;AACA;AACA,WAAW,qDAAqD;AAChE,WAAW,OAAO;AAClB;AACO;AACP;AACA;AACA;;AAEA,0BAA0B,wFAAY;AACtC;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACO;AACP,mCAAmC,EAAE;AACrC;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA,WAAW,qDAAqD;AAChE;AACA,WAAW,6CAA6C;AACxD,aAAa,eAAe;AAC5B;AACA;;AAEA,kCAAkC,mFAAW;AAC7C;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,qDAAqD;AAChE,WAAW,6CAA6C;AACxD;AACA;;AAEA,kCAAkC,mFAAW;AAC7C;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,qDAAqD;AAChE,WAAW,6CAA6C;AACxD;AACA;;AAEA,kCAAkC,mFAAW;AAC7C;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,qDAAqD;AAChE,WAAW,6CAA6C;AACxD,aAAa,OAAO;AACpB,aAAa,2CAA2C;AACxD,aAAa,2CAA2C;AACxD;AACA;;AAEA,kCAAkC,mFAAW;AAC7C;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,eAAe;AAC5B;AACA,QAAQ,OAAO;AACf,QAAQ,OAAO;AACf;AACA;AACA;AACA;;AAEA,8BAA8B,+CAA+C,iCAAiC;AAC9G,8FAA8F;AAC9F;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,2CAA2C;AACtD,WAAW,eAAe;AAC1B;AACA,WAAW,6CAA6C;AACxD;AACA;AACA;AACA,kBAAkB,0BAA0B;AAC5C,0BAA0B,8BAA8B,SAAS,mDAAmD;AACpH;AACA;AACA;AACA;;;;;;;;;;;;;AC1NA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEkE;AACU;;AAE5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qDAAqD;AAChE,WAAW,OAAO;AAClB;AACO;AACP;AACA;AACA;;AAEA,oBAAoB,wFAAY;AAChC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA,IAAI;AACJ;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA,WAAW,qDAAqD;AAChE,WAAW,6CAA6C;AACxD;AACO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,qDAAqD;AAChE;AACA,WAAW,6CAA6C;AACxD,aAAa,eAAe;AAC5B;AACA,OAAO,uCAAuC;AAC9C,OAAO,OAAO;AACd,OAAO,OAAO;AACd,OAAO,OAAO;AACd;AACA;;AAEA;AACA,qCAAqC,mFAAO;AAC5C;AACA;AACA;AACA;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA,+CAA+C,kBAAkB,QAAQ,sBAAsB,MAAM,GAAG;AACxG,yDAAyD,IAAI;;AAE7D;;AAEA,+BAA+B;AAC/B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA,WAAW,mCAAmC;AAC9C,WAAW,6CAA6C;AACxD,aAAa,mCAAmC;;AAEhD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,IAAI,+CAA+C;AACnD;AACA,WAAW,mCAAmC;AAC9C,WAAW,6CAA6C;AACxD,aAAa,mCAAmC;AAChD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mCAAmC;AAC9C,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,mCAAmC;AAC9C,WAAW,6CAA6C;AACxD;AACA;AACA,2BAA2B,mFAAO;AAClC;AACA;AACA;AACA;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,WAAW,mCAAmC;AAC9C,WAAW,OAAO;AAClB,aAAa,mCAAmC;AAChD;AACA,8CAA8C,oBAAoB;;AAElE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC7UA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAE4E;AACJ;;AAEL;AACa;;AAEhF;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB,aAAa,qDAAqD;AAClE;AACA,aAAa,OAAO;AACpB,aAAa,sBAAsB;AACnC;AACA,aAAa,OAAO;AACpB;AACO;AACP;;AAEA;AACA;;AAEA,wBAAwB,+DAAgB;;AAExC;AACA;;AAEA,CAAC,qEAAsB;;AAEvB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6CAA6C,2DAA2D;AACxG;AACA,WAAW,SAAS;AACpB,aAAa;AACb;AACA,0BAA0B,oFAAY,MAAM,6FAAe;AAC3D,0BAA0B,wFAAY,iBAAiB,0BAA0B;AACjF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB,aAAa,sBAAsB;AACnC;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACrHA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,qDAAqD;AAChE,WAAW,6CAA6C;AACxD;AACe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kEAAkE;AAClE,uDAAuD,2EAA2E;AAClI;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAyF;AACzF,yBAAyB;AACzB;AACA;AACA;;AAEA;AACA;AACA,0BAA0B;AAC1B,oBAAoB,2EAA2E;AAC/F;AACA,WAAW,SAAS;AACpB;AACO;AACP;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;;AAEA;AACA,EAAE;AACF;;AAEA;AACA,qEAAqE;AACrE,gDAAgD,2EAA2E;AAC3H;AACA,gCAAgC,gFAAgF;AAChH,0BAA0B;AAC1B;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA,EAAE;AACF;;;;;;;;;;;;;ACjEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE6D;AACD;AACgB;;AAE5E;;AAEA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,wFAAY;;AAEjC,EAAE,0EAAiB;AACnB,EAAE,+EAAyB;AAC3B;AACA;;;;;;;;;;;;;AC7CA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE6C;AAC4B;AACR;;AAEjE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS,qBAAqB,GAAG,gEAAS;;AAE1C,EAAE,4FAAsC;AACxC,EAAE,oFAA6B;;AAE/B;AACA;AACA;;;;;;;;;;;;;ACxCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEyD;;AAEa;AACR;AACM;;AAEpE;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,iEAAiE;AACnH;AACA,QAAQ;AACR,QAAQ;AACR;AACA,sDAAsD,0CAA0C;AAChG;AACA;AACA;AACe,8BAA8B,2EAAM;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,mFAAS;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,qEAAgB;AACxC,wBAAwB,yEAAoB;;AAE5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ,IAAI;AACJ;AACA;AACA;;;;;;;;;;;;;AC1EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEyD;AACb;AACE;AACM;;AAEpD;AACA;AACA;AACA;AACA;AACe,qBAAqB,2EAAM;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAoB,uDAAc;;AAElC,4CAA4C,sDAAa;AACzD,qCAAqC,sDAAa;;AAElD;AACA,gCAAgC;;AAEhC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,yEAAG;AACV;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,GAAG,qBAAqB;;AAE5B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;;;;;AC/FA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE2D;AACH;;AAER;;AAEhD;AACA,oCAAoC,iDAAiD;AACrF;AACA;AACA;AACA;AACe,4BAA4B,4EAAO;AAClD;AACA;AACA;AACA,YAAY,iCAAiC;AAC7C,YAAY,qBAAqB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,qBAAqB;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,oBAAoB;AAClC;AACA,qBAAqB,2DAAY;AACjC;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC,mCAAmC;AACrE;AACA;AACA,YAAY,OAAO;AACnB,YAAY,YAAY,iCAAiC,gEAAgE;AACzH,YAAY,OAAO;AACnB,aAAa,wDAAwD;AACrE,YAAY,wCAAwC;AACpD;AACA;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uCAAuC,gDAAgD;AACvF;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,mBAAmB,mFAAK;AACxB,uBAAuB,gEAAgE;AACvF;AACA,IAAI;;AAEJ;AACA;AACA;AACA,IAAI;;AAEJ;;AAEA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACnMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE6E;AACQ;AACnB;AACd;;AAEpD;AACA,mCAAmC,wDAAwD;AAC3F;AACA;AACA;AACe,6BAA6B,6FAAQ;AACpD;AACA;;AAEA;AACA;;AAEA;AACA,wBAAwB,+EAAQ,2BAA2B,+EAAQ;AACnE;AACA;AACA,GAAG;;AAEH;AACA;;AAEA,wBAAwB,+EAAQ;AAChC;AACA;AACA,IAAI,2BAA2B,+EAAQ;AACvC;AACA;AACA,IAAI;AACJ;AACA;;AAEA,2BAA2B,yEAAG;AAC9B;AACA;;AAEA;AACA,GAAG;;AAEH;AACA,OAAO,yEAAG;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA,qDAAqD,qCAAqC;;AAE1F,gCAAgC,iGAAY;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qCAAqC;AACrC,+BAA+B,iDAAiD;AAChF;AACA;AACA,WAAW,sDAAsD;AACjE,WAAW,mBAAmB;AAC9B,WAAW,mBAAmB;AAC9B,WAAW,OAAO;AAClB;AACA,WAAW,uCAAuC;AAClD;AACA;;;;;;;;;;;;;ACpHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEyD;AACf;;AAE0C;AACF;;AAElF;AACA;AACA;AACA;AACA;AACe,oBAAoB,2EAAM;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,qDAAY;;AAEvC;;AAEA,EAAE,qFAA8B;AAChC,EAAE,oFAA6B;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,iEAAiE;AACjE;AACA;AACA,YAAY,gCAAgC;AAC5C,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACjEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE2D;;AAEX;;AAEhD;AACA,mCAAmC,8CAA8C;AACjF;AACA;AACA;AACe,2BAA2B,4EAAO;AACjD;AACA;AACA;AACA,YAAY,iCAAiC;AAC7C,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,8CAA8C;AAC5D;AACA,qBAAqB,2DAAY;;AAEjC;AACA;AACA,MAAM,wCAAwC;AAC9C;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,gCAAgC;AAC5C;AACA,YAAY,gCAAgC;AAC5C;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;;;;;;;;;;;;AC/GA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEyD;AAC7B;AACE;;AAE9B;AACA;AACA;AACA,4CAA4C,gCAAgC,MAAM;AAClF;AACA;AACA;AACA;AACe,qBAAqB,2EAAM;AAC1C;AACA,WAAW,8CAAK,EAAE,+CAAM;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,wCAAwC;AACzD;AACA,YAAY,kCAAkC;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,QAAQ,sEAAsE;AAC9E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;;;;;;;;;;;;;AC9DA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI,8CAA8C;AAClD;AACA;AACA;AACA;AACA,kBAAkB,0BAA0B,8BAA8B,0BAA0B;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA,YAAY,gCAAgC;AAC5C,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,gCAAgC;AAC9C;AACA;;AAEA;AACA,sEAAsE,aAAa;AACnF,UAAU,mBAAmB;AAC7B;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8EAA8E;AAC9E,+BAA+B,aAAa;AAC5C;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2DAA2D,YAAY;AACvE,4BAA4B,aAAa;AACzC;AACA,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ,qCAAqC,gBAAgB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9KA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEsD;AACsB;;AAEA;;AAE5E;AACA;AACA;AACA,WAAW,iCAAiC;AAC5C;AACe;AACf;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,iCAAiC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,iCAAiC;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,6DAA6D;AAC3E;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ,kEAAkE;AAClE,YAAY,4CAA4C;AACxD;AACA;AACA,OAAO,uEAAwB;AAC/B;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,oDAAoD,gCAAgC;AACpF,QAAQ,2BAA2B;AACnC;AACA;AACA,YAAY;AACZ,kEAAkE;AAClE,YAAY,4CAA4C;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,gCAAgC,wFAAY;AAC5C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB,kFAAI;;AAEzB,SAAS,uCAAuC;;AAEhD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;AACnB;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF;AAClF;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB,kFAAI;;AAEzB,SAAS,uCAAuC;;AAEhD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,sEAAuB;AACxC;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB;AACA;AACA,wBAAwB;AACxB;AACA;AACA,GAAG;AACH;AACA;;AAEA,kEAAkE;AAClE,OAAO,iDAAiD;AACxD;AACA;AACA,WAAW;AACX,iEAAiE;AACjE,aAAa;AACb;AACA;AACA;AACA;AACA,mDAAmD,oBAAoB;AACvE,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,uCAAuC;AAClE;AACA;;AAEA;AACA;AACA,WAAW,sCAAsC;AACjD,WAAW,kCAAkC;AAC7C,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,uBAAuB;AACxC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,6BAA6B,mBAAmB;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,SAAS;AACT;;;;;;;;;;;;;ACvUA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEiE;AACb;;AAEpD;AACA;AACA;AACA;AACA,WAAW,iCAAiC;AAC5C;AACe;AACf;;AAEA;AACA;AACA;;AAEA;AACA,MAAM,yEAAG;AACT,0FAA0F,qBAAqB;AAC/G,EAAE;AACF,sFAAsF,qBAAqB;AAC3G;;AAEA,gEAAgE,qBAAqB;;AAErF;AACA;AACA,EAAE,GAAG,qBAAqB;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qDAAqD;AACjE;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,6CAA6C,qBAAqB;AAClE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA,CAAC,sFAAO;AACR,CAAC,sFAAO;AACR,CAAC,sFAAO;AACR,CAAC,sFAAO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,aAAa;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,8CAA8C;AACzD,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC1KA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEsD;AACkB;;AAExE;AACA;AACA;AACA;AACA,WAAW;AACX,iEAAiE;AACjE,aAAa;AACb;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX,gEAAgE;AAChE,aAAa,iBAAiB,qBAAqB,+CAA+C;AAClG;AACA;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,kFAAI;AACxB,iBAAiB,2FAAa;;AAE9B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,6BAA6B;AACxC,WAAW,6BAA6B;AACxC,aAAa;AACb;AACO;AACP;AACA;AACA,EAAE;AACF;AACA;AACA;;;;;;;;;;;;;ACpFA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,sCAAsC;AACjD;AACA,WAAW,SAAS;AACpB,WAAW,oBAAoB;AAC/B;AACA,WAAW,SAAS;AACpB;AACe,+BAA+B,gDAAgD;AAC9F,kDAAkD,SAAS;AAC3D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;AACF;;;;;;;;;;;;;ACxCA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI,sDAAsD;AAC1D,IAAI,4CAA4C;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACe;AACf;AACA;AACA;AACA;AACA,EAAE;AACF;;;;;;;;;;;;;ACrCA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yBAAyB,gCAAgC;AACzD;AACA;AACA,IAAI,oDAAoD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,WAAW,OAAO;AAClB,WAAW,oBAAoB;AAC/B;AACe,yBAAyB,OAAO;AAC/C;AACA;AACA;AACA,EAAE,GAAG,mBAAmB;AACxB;;;;;;;;;;;;;ACjDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE2B;AACa;AACS;;AAEG;AACyB;;AAE3B;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,yBAAyB,6CAAI;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,iFAAG;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yDAAyD,eAAe;AACxE;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,+DAA+D,iCAAiC;AAChG;AACA;AACA,cAAc,0CAA0C;AACxD;AACA;;AAEA;AACA,6DAA6D,6BAA6B;AAC1F;AACA;AACA,cAAc,oBAAoB;AAClC;AACA;;AAEA;AACA,oDAAoD,gBAAgB;AACpE,MAAM,2BAA2B;AACjC;AACA;AACA,cAAc,iCAAiC;AAC/C;AACA,sBAAsB,sDAAQ;;AAE9B;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,gEAAgE,uBAAuB;AACvF,eAAe,gBAAgB,WAAW;AAC1C;AACA;AACA;AACA,cAAc,yBAAyB;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,eAAe;AAC/D;AACA;AACA,IAAI;;AAEJ;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;;AAEA;AACA,eAAe,gDAAgD;AAC/D;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,0BAA0B,4DAAW;;AAErC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA,wBAAwB,6CAAI;AAC5B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,eAAe;AAChD,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA,wDAAwD;AACxD;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,4BAA4B,6CAAI;;AAEhC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,sDAAsD,kGAAmB;AACzE;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA,2BAA2B,mBAAmB;AAC9C,KAAK,eAAe,GAAG,aAAa,MAAM,iBAAiB;AAC3D;AACA;AACA;AACA;AACA,YAAY,wBAAwB;AACpC,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,iBAAiB,kGAAmB;AACpC;;AAEA;AACA;AACA,KAAK;AACL,eAAe,QAAQ,EAAE,kBAAkB,YAAY,SAAS;AAChE;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACpTA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE2B;AACW;;AAEkB;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACe,+BAA+B,mDAAU;AACxD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,cAAc,oBAAoB;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,+BAA+B,6CAAI;;AAEnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;;;;;;;;;;;;AClGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE2B;AACiB;AAC0B;AAC7B;AACqC;AACtB;;AAExD;AACA,cAAc,8DAA8D;AAC5E;AACA;AACA;AACe,4BAA4B,6CAAI;AAC/C;AACA,oDAAoD,wDAAwD;AAC5G;AACA,YAAY,2BAA2B;AACvC,YAAY,OAAO;AACnB,YAAY,sDAAsD;AAClE,4BAA4B,wDAAwD;AACpF,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uDAAuD,kBAAkB;AACzE;;AAEA;AACA,wDAAwD,aAAa;AACrE;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,0BAA0B,kFAAY;;AAEtC;AACA,sBAAsB,qDAAqD;AAC3E;AACA;AACA,cAAc;AACd;AACA,wBAAwB,sFAAgB;;AAExC;AACA,mCAAmC,aAAa;AAChD;AACA;AACA;AACA,cAAc;AACd;AACA,0BAA0B,oDAAW;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA,yBAAyB,sDAAa;;AAEtC;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;;AAEJ;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,oCAAoC,aAAa;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,aAAa;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,kDAAkD;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA,cAAc,OAAO;AACrB,qDAAqD,kDAAkD;AACvG,cAAc,OAAO,iCAAiC,kDAAkD;AACxG,cAAc,OAAO,gDAAgD,kDAAkD;AACvH,cAAc,QAAQ;AACtB,OAAO,kDAAkD;AACzD;;;;;;;;;;;;;ACvMA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE8C;AACiB;;AAE/D;AACA,qDAAqD,kDAAkD;AACvG;AACA;AACA;AACe,4BAA4B,0DAAU;AACrD;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA,cAAc,yEAAS;;AAEvB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC9DA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA,WAAW,2BAA2B,aAAa,8CAA8C;AACjG,WAAW,sDAAsD;AACjE,aAAa,sDAAsD;AACnE;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,WAAW,8CAA8C;AACzD,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX,aAAa;AACN;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,WAAW,cAAc;AAClD;AACA;AACA;AACA,C;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEwE;;AAExE;AACA,kDAAkD,+BAA+B;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAA4D;AACpE,kBAAkB,yDAAyD;AAC3E;AACe;AACf;AACA;AACA;AACA;AACA,YAAY,iCAAiC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK,qBAAqB;AAC1B,KAAK,4DAA4D;AACjE,kCAAkC,+BAA+B;AACjE;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA,aAAa,mFAAa;AAC1B;AACA;AACA,KAAK;AACL;AACA;;AAEA,gDAAgD,+BAA+B;AAC/E;;AAEA;AACA;AACA;AACA,sBAAsB,4DAA4D;AAClF,oBAAoB,iBAAiB;AACrC,KAAK,+BAA+B;AACpC;AACA,YAAY,OAAO;AACnB,cAAc,oBAAoB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,iBAAiB;AACxB;AACA;AACA,cAAc,OAAO;AACrB;AACA,aAAa,mFAAa;AAC1B;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;;;;;;;;;;;;;ACjJA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEiD;;AAEuB;AAC7B;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,iBAAiB,sEAAsE;AACvF;AACA;AACA;AACA;AACe,iCAAiC,0DAAU;AAC1D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,eAAe,uCAAuC,cAAc,iBAAiB;AACrF;AACA;AACA,cAAc;AACd;AACA;AACA,wBAAwB,sDAAQ;;AAEhC,sBAAsB,uEAAiB;;AAEvC;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;;;;;;;;;;;;ACvFA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE2B;;AAE3B;AACA;AACA;AACA,QAAQ,mDAAmD;AAC3D;AACA;AACA;AACe,gCAAgC,6CAAI;AACnD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA,yDAAyD,eAAe;AACxE;AACA;AACA;AACA;AACA,cAAc,oBAAoB;AAClC;AACA;;AAEA;AACA;AACA;AACA,iCAAiC,uCAAuC,MAAM,gDAAgD;AAC9H,UAAU,iDAAiD;AAC3D,MAAM,oDAAoD;AAC1D;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yDAAyD,QAAQ;AACjE;AACA;AACA,IAAI;;AAEJ;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE2B;AAC2C;AACQ;;AAExB;;AAE0B;;AAEhF;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E;AAC/E,QAAQ,oDAAoD;AAC5D,IAAI,8CAA8C;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,sEAAsE,8CAA8C;AACpH;AACA;AACA;AACe,2BAA2B,6CAAI;AAC9C;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA,YAAY,2BAA2B;AACvC,YAAY,wDAAwD;AACpE,YAAY,uDAAuD;AACnE;AACA;AACA;;AAEA;;AAEA;AACA,iEAAiE,iBAAiB;AAClF;AACA;AACA,cAAc,uCAAuC;AACrD;AACA;;AAEA;AACA,+CAA+C,kBAAkB;AACjE,MAAM,oEAAoE;AAC1E;AACA;AACA;AACA;AACA;AACA,UAAU,sEAAsE;AAChF,MAAM,kDAAkD;AACxD;AACA;AACA,cAAc,uDAAuD;AACrE;AACA;;AAEA;AACA,0EAA0E,uBAAuB;AACjG;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA,UAAU,uDAAuD;AACjE;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA,8DAA8D,eAAe;AAC7E;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM,iGAAiG;AACvG;AACA;AACA,MAAM,sEAAsE;AAC5E,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA,cAAc,2BAA2B;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,0BAA0B,kFAAY;;AAEtC;AACA,sBAAsB,qDAAqD;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,wBAAwB,sFAAgB;;AAExC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc,iDAAiD;AAC/D,aAAa,mEAAmE;AAChF;AACA,uEAAuE,iDAAiD;AACxH;AACA;AACA,cAAc,iCAAiC;AAC/C;;AAEA;AACA;AACA,MAAM,mEAAmE;AACzE;AACA,uEAAuE,oDAAoD;AAC3H;AACA;AACA,cAAc,0CAA0C;AACxD;;AAEA;AACA;AACA;AACA,UAAU,gBAAgB,gCAAgC;AAC1D;AACA;AACA,UAAU,mBAAmB;AAC7B,MAAM,oEAAoE;AAC1E;AACA,uEAAuE;AACvE,SAAS,oDAAoD;AAC7D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA,aAAa,uBAAuB;AACpC,KAAK;AACL;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS,6CAA6C;;AAEtD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI,mEAAmE;AACvE,IAAI,iEAAiE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,yCAAyC;AACvF;AACA;AACA,gCAAgC;AAChC;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA,mCAAmC,6FAAkB;;;;;;;;;;;;;ACtarD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACoD;AACV;AACmB;AACZ;AACT;AACQ;AACU;AACZ;AACY;AACQ;AACL;AACH;AAC1D;AACA,iEAAiE,4DAA4D;AAC7H,WAAW,qEAAqE;AAChF,IAAI,mEAAmE;AACvE;AACA;AACA;AACA,4BAA4B,sEAAsE;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,8DAA8D;AAClE,IAAI,gEAAgE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE,iCAAiC,wDAAwD;AACzF,qDAAqD,iDAAiD;AACtG,IAAI,oDAAoD;AACxD;AACA,WAAW,2BAA2B;AACtC,WAAW,SAAS;AACpB,IAAI,8DAA8D;AAClE,aAAa,6CAA6C;AAC1D;AACO,8CAA8C,kEAAkB;AACvE;AACA,0BAA0B,0DAAiB;AAC3C,6BAA6B,qDAAY;AACzC;AACA,8BAA8B,kEAAkB;AAChD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gDAAgD;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,8CAA8C,MAAM,gDAAgD;AAC5G;AACA,WAAW,6CAA6C;AACxD,WAAW,kDAAkD;AAC7D;AACO;AACP;AACA;AACA,uDAAuD,4DAAW;AAClE;AACA,iCAAiC,cAAc,iCAAiC,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA,wBAAwB,uCAAuC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,0DAA0D;AAC9D;AACA;AACA,QAAQ,8CAA8C,MAAM,4BAA4B;AACxF;AACA,WAAW,6CAA6C;AACxD,WAAW,+DAA+D;AAC1E;AACA;AACO;AACP;AACA,iDAAiD,sDAAQ;AACzD,yCAAyC,YAAY;AACrD;AACA,uBAAuB,+DAAiB;AACxC,SAAS;AACT,qCAAqC,0DAAY;AACjD;AACA;AACA,iCAAiC,0DAAU;AAC3C,aAAa;AACb,iCAAiC,gEAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,WAAW,6CAA6C;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,6CAA6C;AACxD;AACA;AACA,QAAQ,6EAAmB;AAC3B;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,WAAW,6CAA6C;AACxD;AACA;AACA;AACA;AACA,kCAAkC,gEAAgB;AAClD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,WAAW,6CAA6C;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD,8CAA8C;AAC9C;AACA;AACA,aAAa,OAAO;AACpB;AACA,cAAc,OAAO;AACrB,cAAc,sBAAsB;AACpC;AACA,G;;;;;;;;;;;;AClQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE2B;;AAE3B;AACA;AACA;AACA;AACA;AACe,6BAA6B,6CAAI;AAChD;AACA;AACA;AACA,YAAY,2BAA2B;AACvC,YAAY,6BAA6B;AACzC,YAAY,YAAY;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;;AAEA;AACA,0BAA0B,wBAAwB;AAClD,mCAAmC,gBAAgB;AACnD;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA,kEAAkE,wBAAwB;AAC1F;AACA;AACA,MAAM,yDAAyD;AAC/D;AACA;AACA;AACA,cAAc,6BAA6B;AAC3C;AACA;AACA;;AAEA;AACA,6CAA6C,gBAAgB;AAC7D,KAAK,wBAAwB,eAAe,eAAe,KAAK,wBAAwB;AACxF;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kEAAkE,eAAe;AACjF,SAAS,iBAAiB,2BAA2B,iCAAiC;AACtF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;;;;;AC3JA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAC6D;AAC7D;AACA,wDAAwD,yDAAyD;AACjH;AACA;AACA;AACe,mCAAmC,kEAAc;AAChE;AACA;AACA;AACA,YAAY,2BAA2B;AACvC,YAAY,6BAA6B;AACzC,YAAY,YAAY;AACxB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,C;;;;;;;;;;;;AC5CA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEmC;AACY;;AAE6B;;AAE5E;AACA,sBAAsB,8CAA8C;AACpE;AACA;AACA,4CAA4C,8EAA8E;AAC1H,yBAAyB,+BAA+B;AACxD;AACA,+EAA+E,yDAAyD;AACxI;AACA;AACA;AACA,mGAAmG,kCAAkC;AACrI;AACA;AACA,IAAI,6CAA6C;AACjD;AACA;AACA;AACe,6BAA6B,uDAAc;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,YAAY;AAC1B;AACA,sCAAsC,iDAAQ;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;;AAEH;;AAEA;AACA,aAAa,+FAAa,oBAAoB,2BAA2B;AACzE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE2B;AACmB;;AAEQ;;AAEtD;AACA;AACA;AACA;AACA;AACe,2BAA2B,6CAAI;AAC9C;AACA;AACA;AACA,YAAY,2BAA2B;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,wCAAwC;AACtD;AACA,kBAAkB,uDAAc;AAChC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACvDA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE8D;;AAE9D;AACA,sDAAsD,gCAAgC;AACtF,IAAI,8CAA8C;AAClD,IAAI,6CAA6C;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,2BAA2B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,qDAAqD;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACe;AACf;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,0CAA0C;AACtD,YAAY,uCAAuC;AACnD,YAAY,+CAA+C;AAC3D,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA,QAAQ,+BAA+B;AACvC;AACA;AACA,cAAc,mCAAmC;AACjD;;AAEA;AACA;AACA,eAAe,kBAAkB;AACjC;AACA;AACA,cAAc,uCAAuC;AACrD;;AAEA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,cAAc,+CAA+C;AAC7D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA,yCAAyC,kBAAkB;AAC3D;AACA;AACA;AACA,aAAa,yBAAyB;AACtC;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,kBAAkB;AAC1D;AACA;AACA;AACA,aAAa,yBAAyB;AACtC;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,kBAAkB,WAAW,eAAe;AACpF;AACA;AACA;AACA,aAAa,yBAAyB;AACtC;AACA;AACA;AACA;;AAEA;AACA,4CAA4C,kBAAkB,WAAW,eAAe;AACxF;AACA;AACA;AACA,aAAa,yBAAyB;AACtC;AACA;AACA;AACA;;AAEA;AACA,iCAAiC,kBAAkB;AACnD,QAAQ,oBAAoB;AAC5B;AACA;AACA,aAAa,YAAY;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA,iBAAiB,aAAa,UAAU,kBAAkB;AAC1D;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,YAAY,UAAU,kBAAkB;AACzD;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,YAAY,UAAU,kBAAkB;AACzD;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,gBAAgB,UAAU,kBAAkB;AAC7D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oDAAoD,kBAAkB;AACtE,QAAQ,eAAe;AACvB;AACA;AACA,YAAY,OAAO,4CAA4C,eAAe;AAC9E;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA,0BAA0B,gFAAM;AAChC;;;;;;;;;;;;;ACjSA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAE2B;;AAEmB;;AAE9C;AACA;AACA;AACA;AACA;AACe,uBAAuB,6CAAI;AAC1C;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;;AAEA;AACA,iBAAiB,eAAe,oBAAoB,eAAe;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;;;;;AC7HA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE2B;AAC6B;;AAExD;AACA;AACA;AACA;AACA;AACe,4BAA4B,6CAAI;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA,MAAM,yEAAyE;AAC/E;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE2B;AACyB;;AAEJ;;AAEhD;AACA;AACA;AACA;AACA;AACe,wBAAwB,6CAAI;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA,gCAAgC,CAAC,iFAAG,IAAI;;AAExC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;;;;;;;;;;;ACrEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE2B;AACyB;AACT;AACmB;;AAE9D;AACA;AACA;AACA;AACA;AACe,+BAA+B,6CAAI;AAClD;AACA;AACA;AACA,YAAY,2BAA2B;AACvC,YAAY,SAAS;AACrB;AACA;AACA;;AAEA,+BAA+B,CAAC,iFAAG,IAAI;AACvC,iCAAiC,CAAC,iFAAG,IAAI;;AAEzC;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA,eAAe;AACf,aAAa,iBAAiB;AAC9B;AACA,8BAA8B,iBAAiB;AAC/C,MAAM;AACN;AACA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;;AAEA;AACA,4DAA4D,iBAAiB;AAC7E;AACA;AACA;AACA;AACA,iEAAiE,iBAAiB;AAClF,6CAA6C,iBAAiB;AAC9D,MAAM,iBAAiB;AACvB;AACA;AACA,cAAc,YAAY;AAC1B;AACA;;AAEA;AACA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;;AAEA;AACA;AACA;AACA,cAAc,gDAAgD;AAC9D;AACA;;AAEA;AACA,8BAA8B,iBAAiB,eAAe,iBAAiB;AAC/E,MAAM,gBAAgB;AACtB;AACA,cAAc,oBAAoB;AAClC;AACA;;AAEA;AACA,uCAAuC,iBAAiB,MAAM,gBAAgB;AAC9E,8BAA8B,iBAAiB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA,wBAAwB,wDAAS;;AAEjC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA,mDAAmD,iBAAiB,MAAM;AAC1E,iBAAiB,iBAAiB,OAAO,mBAAmB;AAC5D;AACA;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA,yBAAyB,6CAAI;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9OA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE2B;;AAE3B;AACA;AACA;AACA;AACA;AACe,2BAA2B,6CAAI;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA,4DAA4D,eAAe;AAC3E;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnDA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE2B;;AAE3B;AACA;AACA;AACA;AACA;AACe,gCAAgC,6CAAI;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;;;;;;;;;;;ACjCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE2B;AAC2C;AAC7B;AACqC;;AAEhC;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACe,uBAAuB,6CAAI;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,0BAA0B,kFAAY;;AAEtC;AACA,sBAAsB,qDAAqD;AAC3E;AACA;AACA,cAAc;AACd;AACA,wBAAwB,sFAAgB;;AAExC;AACA,mCAAmC,aAAa;AAChD;AACA;AACA;AACA,cAAc;AACd;AACA,0BAA0B,oDAAW;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA,oCAAoC,aAAa;AACjD;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,aAAa;AAChD;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE8B;AACkD;AAChB;AACF;AACA;AACxB;;AAEoB;;AAE1D,aAAa,wFAAM;AACnB,8BAA8B,gFAAM;;AAEpC;AACA;AACA;AACA;AACA,IAAI,wEAAwE;AAC5E,IAAI,sDAAsD;AAC1D;AACA;AACA;AACA,oBAAoB,wEAAwE;AAC5F;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,IAAI,gDAAgD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACe,+BAA+B,6CAAI;AAClD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,uBAAuB;AACnC;AACA;AACA,MAAM,iFAAiF;AACvF;AACA,cAAc,gBAAgB,MAAM,WAAW;AAC/C;AACA;AACA;AACA,cAAc,4CAA4C;AAC1D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA,2CAA2C,eAAe;AAC1D;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA,oDAAoD,iBAAiB;AACrE,sBAAsB,WAAW;AACjC;AACA;AACA,cAAc,SAAS;AACvB;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,QAAQ;AAC/D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,SAAS,iBAAiB;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS,iBAAiB;AAC1B;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,+CAA+C;AACtF;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,2DAA2D,YAAY;AACvE;AACA;AACA,aAAa,WAAW;AACxB;AACA,YAAY,kCAAkC;AAC9C,KAAK,mDAAmD;AACxD,KAAK,iFAAiF;AACtF;AACA;AACA;;AAEA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,sBAAsB;AAC9C;;AAEA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA,2BAA2B;AAC3B,QAAQ,gDAAgD;AACxD;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,wCAAwC,aAAa;AACrD;AACA,yDAAyD,YAAY;AACrE;AACA,YAAY,kCAAkC;AAC9C,KAAK,mDAAmD;AACxD,KAAK,iFAAiF;AACtF;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,2CAA2C,WAAW;AACtD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,wDAAwD,WAAW;AACnE;AACA;AACA,YAAY,kCAAkC;AAC9C,KAAK,mDAAmD;AACxD;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,gFAAM;AACvB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG,GAAG,mBAAmB;;AAEzB;AACA,iBAAiB,gFAAM;AACvB;AACA,GAAG;AACH;;AAEA;AACA,uDAAuD,WAAW;AAClE;AACA;AACA;AACA;AACA,sBAAsB,gFAAM;AAC5B,sBAAsB,gFAAM;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACA,MAAM,2DAAS;AACf;AACA;;AAEA,MAAM,yFAAO;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA,uCAAuC,6FAAkB;;AAEzD;AACA;AACA,6BAA6B,yEAAyE;AACtyEAAyE;AACjF;AACA,kDAAkD,yCAAyC;AAC3F;AACA;AACA,+CAA+C,gBAAgB;AAC/D;AACA,YAAY,OAAO;AACnB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;AACA;;;;;;;;;;;;;AC75BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACyD;AACP;AACpB;AACmB;AACuB;AACF;AACR;AACJ;AACK;AACJ;AACC;AACL;AACvD,aAAa,wFAAM;AACnB;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6EAA6E;AACtF;AACA;AACA,IAAI,gEAAgE;AACpE,oDAAoD,yEAAyE;AAC7H;AACA;AACA;AACA;AACA;AACA;AACe,gCAAgC,2EAAM;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,cAAc,oBAAoB,+CAA+C;AACjF,SAAS,sBAAsB;AAC/B;AACA;AACA,MAAM;AACN,aAAa,qDAAqD;AAClE;AACA,cAAc,0CAA0C;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,yBAAyB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,0DAA0D;AACxE;AACA,wBAAwB,yDAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,oBAAoB;AAChC,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,oBAAoB;AAChC,YAAY,kCAAkC;AAC9C,YAAY,OAAO,+DAA+D,oBAAoB;AACtG,YAAY,QAAQ,oCAAoC,oBAAoB;AAC5E,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,mFAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,mFAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,mFAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,4EAA4E,kBAAkB;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,oBAAoB;AAChC,YAAY,OAAO,8EAA8E,oBAAoB;AACrH,YAAY,QAAQ,oCAAoC,oBAAoB;AAC5E;AACA,eAAe,sEAAsE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,aAAa,gCAAgC;AACpF;AACA;AACA;AACA;AACA;AACA,2CAA2C,oFAAoF;AAC/H;AACA,YAAY,oFAAoF;AAChG;AACA;AACA;AACA,0BAA0B,6CAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,gCAAgC,kFAAY;AAC5C;AACA;AACA;AACA,YAAY;AACZ;AACA,6DAA6D,uEAAQ;AACrE;AACA;AACA;AACA,YAAY;AACZ;AACA,6DAA6D,mEAAQ;AACrE;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,yCAAyC,yCAAyC;AAClF,wCAAwC,2BAA2B;AACnE,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iCAAiC,uCAAuC;AACxE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA,yBAAyB,0DAAU;AACnC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,6CAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA,6BAA6B,6CAAI;AACjC,8BAA8B,aAAa;AAC3C;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B,mBAAmB,cAAc,OAAO,8EAAI;AAC5C;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,C;;;;;;;;;;;;ACppBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEwE;AACpB;AACkB;AAC5C;AACoB;AACgB;AACV;;AAEpD;;AAEA;AACA;AACA,IAAI,uDAAuD;AAC3D,gBAAgB,0DAA0D;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA,QAAQ,4CAA4C;AACpD;AACA;AACA;AACA;AACe;AACf;AACA,gCAAgC,gBAAgB;AAChD;AACA,YAAY,sCAAsC;AAClD;AACA;AACA;;AAEA;AACA;AACA,MAAM,uBAAuB;AAC7B;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA,cAAc,sDAAsD;AACpE;;AAEA;AACA,4CAA4C,kBAAkB;AAC9D;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA,cAAc,OAAO;AACrB;;AAEA;AACA;AACA,iCAAiC,gBAAgB;AACjD;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA,cAAc,yCAAyC;AACvD;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB;;AAEA;AACA,2BAA2B,cAAc;AACzC;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,oCAAoC,MAAM;AAC1C;AACA,UAAU,aAAa;AACvB;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK,uDAAuD;AAC5D,KAAK,4DAA4D;AACjE,sBAAsB,qDAAqD;AAC3E;AACA;AACA;AACA;AACA;AACA,KAAK,yCAAyC;AAC9C;AACA;AACA,oCAAoC,qBAAqB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,MAAM;AACN;AACA,sCAAsC;AACtC;AACA;AACA;AACA,YAAY,KAAK;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA,wBAAwB,gDAAgD;AACxE;AACA,YAAY,KAAK;AACjB,uBAAuB,wCAAwC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mEAAmE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK,0DAA0D;AAC/D;AACA;AACA;AACA,KAAK,8CAA8C,oBAAoB;AACvE,SAAS,sCAAsC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK,8CAA8C,oBAAoB,sCAAsC;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,cAAc,uCAAuC;AACrD;AACA,YAAY,wCAAwC;AACpD,YAAY,kCAAkC;AAC9C,8EAA8E,0BAA0B;AACxG,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;;AAEJ;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,yBAAyB,kCAAkC;AAC3D,kBAAkB,4CAA4C;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,6BAA6B,iBAAiB,EAAE,iBAAiB;AACjE;AACA;AACA;AACA,YAAY,4BAA4B;AACxC,YAAY,sCAAsC;AAClD;AACA;AACA;AACA;AACA;AACA,WAAW,mDAAmD;AAC9D,mCAAmC,cAAc;AACjD;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,8BAA8B;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,8BAA8B;AAC1C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gCAAgC,uCAAuC;AACvE;AACA;AACA,YAAY,8BAA8B;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,4CAA4C,6CAA6C;AACzF;AACA;AACA,YAAY,8BAA8B;AAC1C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,0DAAQ;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK,6CAA6C;AAClD;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4BAA4B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO,iDAAiD,4CAA4C;AAChH,YAAY,8BAA8B;AAC1C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sDAAsD,2CAA2C;AACjG;AACA;AACA,YAAY,8BAA8B;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI,WAAW,wFAAM;AACrB;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,YAAY,8BAA8B;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,6CAA6C,aAAa;AAC3E;AACA;AACA,WAAW,6CAA6C;AACxD;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,uCAAuC;AACnD,YAAY,SAAS;AACrB,YAAY,8BAA8B;AAC1C;AACA,qBAAqB,wBAAwB;AAC7C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa,6DAA6D;AAC1E;AACA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,OAAO;AACnB,KAAK,aAAa,mBAAmB,+CAA+C;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA,kBAAkB,gCAAgC;AAClD;AACA;AACA;AACA;;AAEA,iFAAG,YAAY,kFAAY;;AAE3B;AACA,uCAAuC,uCAAuC;AAC9E;AACA;AACA;AACO;AACP;AACA,gCAAgC,yCAAyC;AACzE;AACA,YAAY,sCAAsC;AAClD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,6CAA6C;AAC3D;;AAEA;AACA,SAAS,wCAAwC;AACjD;AACA,8CAA8C,oDAAoD;AAClG;AACA;AACA,cAAc,uCAAuC;AACrD;;AAEA;AACA,sBAAsB,uEAAuE;AAC7F;AACA,cAAc,OAAO;AACrB;;AAEA;AACA,oDAAoD,mDAAmD;AACvG;AACA,cAAc,SAAS;AACvB;AACA;;AAEA;AACA,8DAA8D,mDAAmD;AACjH,KAAK,oDAAoD;AACzD,KAAK,kDAAkD;AACvD;AACA,YAAY,KAAK,iDAAiD,kDAAkD;AACpH,cAAc,EAAE,eAAe,mDAAmD;AAClF,KAAK,oDAAoD;AACzD;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2DAA2D,mDAAmD;AAC9G,KAAK,oDAAoD;AACzD,cAAc,6CAA6C;AAC3D;AACA,YAAY,uCAAuC;AACnD,YAAY,SAAS;AACrB,YAAY,8BAA8B;AAC1C,cAAc,SAAS;AACvB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,8CAA8C;AACpE;AACA;AACA,yBAAyB,sCAAsC;AAC/D;AACA;AACA;AACO;AACP;AACA;AACA,SAAS,iDAAiD;AAC1D;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,8BAA8B;AAC1C,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,mDAAmD,iBAAiB;AAC/F;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,6DAA6D,mDAAmD;AAChH,KAAK,oDAAoD;AACzD;AACA,aAAa,OAAO;AACpB;AACA;;AAEA,yBAAyB,6CAA6C;AACtE,IAAI,yCAAyC;AAC7C;AACA,WAAW,uCAAuC;AAClD,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;;AAEA,8BAA8B,6CAA6C;AAC3E,4DAA4D;AAC5D;AACA;AACA,WAAW,uCAAuC;AAClD,WAAW,KAAK,6BAA6B,mDAAmD;AAChG,aAAa;AACb;AACA;AACA,cAAc,yCAAyC;AACvD;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;;AAEA;AACA,qBAAqB,6CAA6C;AAClE;AACA,WAAW,uCAAuC;AAClD,WAAW,SAAS;AACpB,WAAW,KAAK,6BAA6B,mDAAmD;AAChG,iDAAiD,OAAO;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,sCAAsC;AACjD,aAAa;AACb;AACA,eAAe,+DAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA,qBAAqB,4CAA4C;AACjE;AACA;AACA,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP;AACA,WAAW,sCAAsC;AACjD,aAAa,sCAAsC;AACnD;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,oDAAoD,wFAAM;AAC1D;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,uCAAuC,4CAA4C;AACnF;AACA;AACA;AACA,SAAS,yCAAyC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yCAAyC;AACpD;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+BAA+B,4CAA4C;AAC3E;AACA;AACA;AACA,SAAS,yCAAyC;AAClD,WAAW,yCAAyC,SAAS,MAAM;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yCAAyC;AACpD,WAAW,yCAAyC,SAAS,MAAM;AACnE;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wBAAwB,4CAA4C;AACpE;AACA;AACA;AACA;AACA;AACA,KAAK,kBAAkB;AACvB;AACA,WAAW,OAAO;AAClB,aAAa,sCAAsC;AACnD;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,4CAA4C;AAChE;AACA;AACA,MAAM,cAAc;AACpB,MAAM,QAAQ,yCAAyC;AACvD;AACA;AACA;AACA;AACA;AACA,MAAM,kBAAkB;AACxB,MAAM,UAAU,yCAAyC;AACzD;AACA;AACA,WAAW,sCAAsC;AACjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF,YAAY,OAAO,GAAG,MAAM;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,iBAAiB,yCAAyC,uBAAuB,kCAAkC;AACnH,sBAAsB,4CAA4C,OAAO,yCAAyC;AAClH;AACA,WAAW,4BAA4B;AACvC,WAAW,sCAAsC;AACjD,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;;AAEA,yCAAyC;AACzC;AACA;AACA,WAAW,EAAE;AACb;AACA,wBAAwB,6CAAI;AAC5B;;AAEA,yCAAyC;AACzC;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;;AAEA,yCAAyC;AACzC;AACA;AACA,WAAW,EAAE;AACb;AACA,wBAAwB,uDAAc;AACtC;;AAEA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,wCAAwC;AAC5C;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA,wBAAwB,kCAAkC;AAC1D;AACA;AACA;AACA;AACA,MAAM,6CAA6C;AACnD,MAAM,gDAAgD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,cAAc,6CAA6C;AAC3D,WAAW,6CAA6C;AACxD,cAAc;AACd;AACA;AACA,MAAM;AACN;AACA,gBAAgB;AAChB;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,KAAK;AACL;AACA,MAAM,0BAA0B,WAAW,kCAAkC;AAC7E,sEAAsE,kCAAkC;AACxG;AACA;AACA,yCAAyC,MAAM;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,cAAc,8CAA8C;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,OAAO,uBAAuB,sCAAsC;AAClF;AACA,cAAc,8CAA8C;AAC5D,qBAAqB,2CAA2C;AAChE;AACA,cAAc,wDAAwD;AACtE,qBAAqB,6CAA6C;AAClE;AACA,cAAc,oGAAoG;AAClH,qBAAqB,uCAAuC;AAC5D;AACA,cAAc,2DAA2D;AACzE,qBAAqB,iDAAiD;AACtE;;AAEA;AACA;AACA,wCAAwC,8CAA8C;AACtF;AACA;AACA,MAAM,4CAA4C;AAClD,MAAM,uCAAuC;AAC7C,IAAI,8CAA8C;AAClD,MAAM,yCAAyC;AAC/C,MAAM,6CAA6C,MAAM;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,MAAM;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,+CAA+C,MAAM;AACrD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,oCAAoC,eAAe;AACnD;AACA;AACA;AACA;AACA,6BAA6B,MAAM;AACnC;AACA,KAAK;AACL;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA,eAAe,8CAA8C;AAC7D;AACA;AACA;AACA,MAAM,4CAA4C;AAClD,MAAM,6CAA6C;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,aAAa;AACrC,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA;AACA,UAAU;AACV;;AAEA;AACA,wBAAwB,uCAAuC;AAC/D,0BAA0B,yDAAyD;AACnF;AACA;AACA;;AAEA;AACA,aAAa,yDAAyD;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA,yCAAyC,6CAA6C;AACtF,IAAI,gDAAgD;AACpD;AACA;AACA,WAAW,gBAAgB;AAC3B,IAAI,8CAA8C;AAClD,WAAW,SAAS;AACpB,aAAa;AACb;;AAEA;AACA,aAAa,yDAAyD;AACtE;AACA;AACA,WAAW,sCAAsC;AACjD,uCAAuC,8CAA8C;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,yCAAyC,6CAA6C;AACtF;AACA;AACA,WAAW,OAAO,iCAAiC,8CAA8C;AACjG,WAAW,OAAO,mCAAmC,8CAA8C;AACnG;AACA,WAAW,SAAS;AACpB,aAAa;AACb;;AAEA;AACA,QAAQ,8CAA8C;AACtD;AACA;AACA;AACA;;AAEA;AACA,UAAU,8CAA8C;AACxD;AACA;AACA;AACA,YAAY,QAAQ;AACpB;;AAEA;AACA;AACA;AACA,YAAY,iBAAiB;AAC7B;;AAEA;AACA,0BAA0B,2CAA2C;AACrE,qBAAqB,mCAAmC;AACxD;AACA,YAAY,QAAQ;AACpB;;AAEA;AACA,0CAA0C;AAC1C;AACA,IAAI,mCAAmC;AACvC;AACA,YAAY,OAAO;AACnB;;;;;;;;;;;;;ACjwDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEyD;AACa;AAC7B;AAC8B;AACD;AACZ;AACK;AAC1B;AACyC;AAChB;;AAE9D,aAAa,wFAAM;;AAEnB;AACA;AACA;AACA,gBAAgB,4FAA4F;AAC5G;AACA;AACA;AACe,6BAA6B,2EAAM;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,wEAAiB;AAC5B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,wBAAwB,uEAAsB;;AAE9C;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,8BAA8B;AAC9B,cAAc,mBAAmB;AACjC;AACA;AACA,YAAY;AACZ;AACA,0BAA0B,kFAAY;;AAEtC;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,MAAM,gFAAgF;AACtF;AACA,2BAA2B,YAAY;AACvC;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,sCAAsC,wEAAiB;;AAEvD;AACA,YAAY,uCAAuC;AACnD;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,uCAAuC,0DAAQ;;AAE/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA,+BAA+B,wFAAc;AAC7C;AACA;AACA;AACA,2CAA2C,8EAAI;AAC/C,KAAK;AACL,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,0BAA0B,oDAAW;AACrC;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yCAAyC,gBAAgB;AACzD;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8EAAI;;AAE3B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA,0BAA0B,0EAAgB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,2DAA2D;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,YAAY,sBAAsB;AAClC;;;;;;;;;;;;;ACpYA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb;AACA,WAAW,+CAA+C;AAC1D;AACA,WAAW,uCAAuC;AAClD;AACA,WAAW,0CAA0C;AACrD;AACA,WAAW,SAAS;AACpB;AACA,WAAW,SAAS;AACpB;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;;;;;;;;;;;;;AC/DA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC,aAAa,OAAO;AACpB;AACe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;;;;;;;;;;;;;AC9CA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE2B;;AAE3B;AACA;AACA;AACA;AACA;AACe,mCAAmC,6CAAI;AACtD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;;;;;;;;;;;ACjCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC2B;AAC2C;AAC7B;AACqC;AACpB;AACoB;AACnB;AACD;AACI;AAInC;AAC6D;AACI;AACxC;AACpD;AACA;AACA;AACA;AACA;AACA;AACe,0BAA0B,6CAAI;AAC7C;AACA,gCAAgC,gDAAgD;AAChF;AACA,cAAc,cAAc;AAC5B;AACA,YAAY,2BAA2B;AACvC,YAAY,6CAA6C;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,uCAAuC,aAAa;AACpD;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,gCAAgC,kFAAY;AAC5C;AACA,yBAAyB;AACzB;AACA;AACA;AACA,cAAc;AACd;AACA,8BAA8B,sFAAgB;AAC9C;AACA,2CAA2C,eAAe;AAC1D;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA,yDAAyD,eAAe;AACxE;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA,gCAAgC,2BAA2B;AAC3D;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iBAAiB;AACnD;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC,6EAA6E,aAAa;AAC1F;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA,yBAAyB,kCAAkC;AAC3D;AACA;AACA;AACA,cAAc;AACd;AACA,gCAAgC,oDAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,aAAa;AACb;AACA;AACA;AACA,2BAA2B,2EAAc;AACzC;AACA,SAAS;AACT;AACA;AACA;AACA,UAAU,oDAAoD;AAC9D;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA;AACA;AACA;AACA,mCAAmC,kBAAkB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,sDAAsD;AAC3D;AACA,YAAY,eAAe;AAC3B,YAAY,4CAA4C;AACxD;AACA;AACA;AACA;AACA,mCAAmC,6DAAoB;AACvD,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,+CAA+C,gCAAgC;AAC/E;AACA;AACA;AACA,yBAAyB,oCAAoC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA,6BAA6B,8GAAyB,+EAA+E,OAAO;AAC5I;AACA,SAAS;AACT;AACA;AACA;AACA,0BAA0B,gDAAgD;AAC1E,IAAI,sDAAsD;AAC1D;AACA;AACA;AACA;AACA,wBAAwB,6CAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,cAAc,2DAA2D;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iDAAiD;AACjF;AACA;AACA,YAAY,0CAA0C;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,oDAAoD;AACpF;AACA;AACA,YAAY,0CAA0C;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;AACA,0BAA0B,sDAAsD;AAChF,8EAA8E;AAC9E,aAAa,qCAAqC;AAClD,MAAM,0DAA0D;AAChE;AACA,uBAAuB,sDAAsD;AAC7E,kBAAkB,sDAAsD;AACxE;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,0BAA0B,sDAAsD;AAChF;AACA,iDAAiD,qCAAqC;AACtF;AACA,uBAAuB,sDAAsD;AAC7E;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,mCAAmC,kCAAkC;AACrE;AACA,MAAM,0EAA0E;AAChF;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+BAA+B;AAC1D;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,6DAA6D;AAC7D,oBAAoB,sDAAsD;AAC1E;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,YAAY,0CAA0C;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,sBAAsB;AACpE,kCAAkC,oBAAoB;AACtD;AACA;AACA,KAAK,oBAAoB,yBAAyB,sBAAsB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,wDAAwD;AACjF;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,8EAAI;AACtC,gCAAgC,8EAAI;AACpC;AACA,kCAAkC,gFAAM;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,6CAA6C,sBAAsB;AACnE;AACA,KAAK,oBAAoB;AACzB;AACA,6EAA6E,sBAAsB;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,wFAAc;AAChD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mDAAmD,+BAA+B;AAClF,kCAAkC,yDAAyD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,oDAAoD,sBAAsB;AAC1E,YAAY,oBAAoB;AAChC;AACA,qBAAqB,yBAAyB;AAC9C;AACA;AACA;AACA;AACA;AACA,sCAAsC,6DAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,oBAAoB;AAChE,YAAY,sBAAsB;AAClC;AACA,qBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,4BAA4B,gCAAgC;AAC7E;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,yBAAyB,sEAAc;AACvC;AACA;AACA;AACA;AACA,QAAQ,4EAAoB;AAC5B;AACA;AACA;AACA,kBAAkB,qGAAgB;AAClC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA,aAAa,sEAAsE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;AACD,0BAA0B,4DAA4D;AACtF;AACA;AACA;AACA;AACA,6DAA6D,sDAAsD;AACnH;AACA;AACA;AACA,cAAc,yDAAyD;AACvE;AACA,YAAY,QAAQ;AACpB;AACA;AACA,mDAAmD,gDAAgD;AACnG;AACA;AACA,IAAI,wDAAwD;AAC5D,IAAI,iEAAiE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,4DAA4D;AAC/F,0CAA0C,yDAAyD;AACnG;AACA;AACA;AACA,WAAW,0CAA0C;AACrD;AACA;AACA,+CAA+C,gEAAgE;AAC/G,mFAAmF;AACnF;AACA;AACA;AACA,YAAY,SAAS;AACrB,WAAW,0CAA0C;AACrD;AACA;AACA,+CAA+C,kEAAkE;AACjH;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB,G;;;;;;;;;;;;ACrwBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE2B;;AAEyB;;AAEpD;AACA;AACA;AACA;AACA;AACe,0BAA0B,6CAAI;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;;;;;;;;;;;ACtFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEwE;AAC1B;AACZ;AAC2C;AACD;AACV;AACd;AACc;;AAE5B;;AAEtC;AACA;AACA,IAAI,mCAAmC;AACvC;AACA;AACA,UAAU,kDAAkD;AAC5D,IAAI,uDAAuD;AAC3D;AACA;AACA,YAAY,4CAA4C;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACe;AACf;AACA,gCAAgC,0BAA0B;AAC1D;AACA,cAAc,cAAc;AAC5B;AACA,YAAY,2BAA2B;AACvC;AACA;AACA;AACA,gDAAgD;AAChD,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,gDAAgD,0CAA0C;AAC1F;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA,eAAe,8CAA8C;AAC7D;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,oBAAoB,mCAAmC;AACvD;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,wBAAwB;AAC1D;AACA;AACA,cAAc;AACd;AACA,8BAA8B,gFAAU;;AAExC;AACA;AACA,eAAe,2CAA2C;AAC1D;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA,6CAA6C,eAAe;AAC5D,gCAAgC,uBAAuB;AACvD;AACA,cAAc,4BAA4B;AAC1C;;AAEA;AACA,aAAa,8CAA8C;AAC3D,MAAM,gBAAgB,OAAO,oBAAoB;AACjD;AACA;AACA,cAAc,OAAO;AACrB;;AAEA;AACA;;AAEA;AACA,mBAAmB,uCAAuC;AAC1D,KAAK,6CAA6C;AAClD;AACA,iBAAiB,6CAA6C;AAC9D,KAAK,6CAA6C;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,yDAAyD;AAC1E;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC,iDAAQ;AACxC;;AAEA;AACA;AACA,KAAK,2CAA2C;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,wCAAwC;AACtD;AACA;AACA,yBAAyB,uDAAc;;AAEvC;;AAEA;AACA;;AAEA;AACA;AACA,8CAA8C;AAC9C,SAAS,2BAA2B;AACpC;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,gBAAgB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,qBAAqB;AAC/C;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,YAAY,mDAAmD;AAC/D;AACA;AACA,QAAQ,wFAAU;AAClB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;AACA,YAAY,mDAAmD;AAC/D;AACA;AACA,QAAQ,wFAAU;AAClB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,cAAc,gBAAgB;AAC9B;AACA;AACA;AACA;AACA;AACA,YAAY,sCAAsC;AAClD;AACA;AACA,sBAAsB,iDAAQ;AAC9B;;AAEA;AACA,KAAK,iDAAiD,MAAM,gBAAgB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB,yBAAyB,mBAAmB;AAC3F;AACA,YAAY,sCAAsC;AAClD,iBAAiB,gBAAgB;AACjC;AACA;AACA,EAAE,iDAAQ;AACV;;AAEA;AACA;AACA;AACA;AACA,WAAW,eAAe,iCAAiC,gBAAgB;AAC3E,WAAW,kBAAkB;AAC7B;AACA;AACA,+BAA+B;AAC/B,8CAA8C,wBAAwB;AACtE,oBAAoB;AACpB;AACA;AACA;AACA,KAAK,eAAe;AACpB;AACA,uBAAuB,yCAAyC,MAAM,gBAAgB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qEAAqE,qBAAqB;AAC1F,4CAA4C,wBAAwB;AACpE;AACA;AACA,2DAA2D;AAC3D,sBAAsB,gBAAgB;AACtC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,cAAc;AACtC;AACA;AACA,SAAS,4DAA4D;AACrE;AACA;AACA;AACA;;AAEA,iFAAG,QAAQ,sFAAe;AAC1B,iFAAG,QAAQ,qFAAe;;;;;;;;;;;;;ACpgB1B;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEwE;AACN;;AAElE;AACA,aAAa,0BAA0B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,2CAA2C;AACxF;AACA;AACA;AACA;AACA,gDAAgD;AAChD,gDAAgD;AAChD;AACA,OAAO,kEAAkE;AACzE;AACA;AACA;AACA;AACA;AACA,qBAAqB,aAAa;AAClC,KAAK;AACL;AACA;AACA;AACA;AACA,4DAA4D;AAC5D,SAAS,2CAA2C;AACpD;AACA;AACA;AACA;AACe,6BAA6B,gFAAU;AACtD;AACA,mCAAmC,8CAA8C;AACjF;AACA,YAAY,2BAA2B,eAAe,uDAAuD;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,aAAa,kCAAkC;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH,aAAa,kCAAkC;AAC/C;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,UAAU,8DAA8D;AACxE,mBAAmB,wCAAwC;AAC3D;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,kCAAkC;AACpD;AACA;AACA;AACA;;AAEA;AACA,0EAA0E,kBAAkB;AAC5F,KAAK,uBAAuB;AAC5B,KAAK,2CAA2C;AAChD;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK,wCAAwC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iDAAiD;AAC1D;AACA,YAAY,UAAU,SAAS,0BAA0B;AACzD,KAAK,wCAAwC;AAC7C,cAAc;AACd,cAAc,SAAS;AACvB,KAAK,2DAA2D;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mFAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,iDAAiD;AAChF;AACA;AACA;AACA,cAAc,kCAAkC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,sDAAsD,gCAAgC;AACtF,kCAAkC,0CAA0C;AAC5E;AACA;AACA,aAAa,WAAW;AACxB;AACA;AACA,YAAY,kCAAkC;AAC9C,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;;;;;;;;;;;;ACxNA,UAAU,mBAAO,CAAC,mJAAuE;AACzF,0BAA0B,mBAAO,CAAC,yLAAqE;;AAEvG;;AAEA;AACA,0BAA0B,QAAS;AACnC;;AAEA,eAAe;;AAEf;AACA;;AAEA;;AAEA;;;;AAIA,0B;;;;;;;;;;;ACpBA,UAAU,mBAAO,CAAC,mJAAuE;AACzF,0BAA0B,mBAAO,CAAC,qMAA2E;;AAE7G;;AAEA;AACA,0BAA0B,QAAS;AACnC;;AAEA,eAAe;;AAEf;AACA;;AAEA;;AAEA;;;;AAIA,0B;;;;;;;;;;;ACpBA,UAAU,mBAAO,CAAC,mJAAuE;AACzF,0BAA0B,mBAAO,CAAC,kMAAwE;;AAE1G;;AAEA;AACA,0BAA0B,QAAS;AACnC;;AAEA,eAAe;;AAEf;AACA;;AAEA;;AAEA;;;;AAIA,0B;;;;;;;;;;;ACpBA,UAAU,mBAAO,CAAC,mJAAuE;AACzF,0BAA0B,mBAAO,CAAC,+LAAuE;;AAEzG;;AAEA;AACA,0BAA0B,QAAS;AACnC;;AAEA,eAAe;;AAEf;AACA;;AAEA;;AAEA;;;;AAIA,0B;;;;;;;;;;;ACpBA,UAAU,mBAAO,CAAC,mJAAuE;AACzF,0BAA0B,mBAAO,CAAC,uMAA2E;;AAE7G;;AAEA;AACA,0BAA0B,QAAS;AACnC;;AAEA,eAAe;;AAEf;AACA;;AAEA;;AAEA;;;;AAIA,0B;;;;;;;;;;;ACpBA,UAAU,mBAAO,CAAC,mJAAuE;AACzF,0BAA0B,mBAAO,CAAC,6MAA8E;;AAEhH;;AAEA;AACA,0BAA0B,QAAS;AACnC;;AAEA,eAAe;;AAEf;AACA;;AAEA;;AAEA;;;;AAIA,0B;;;;;;;;;;;ACpBA,UAAU,mBAAO,CAAC,mJAAuE;AACzF,0BAA0B,mBAAO,CAAC,+LAAuE;;AAEzG;;AAEA;AACA,0BAA0B,QAAS;AACnC;;AAEA,eAAe;;AAEf;AACA;;AAEA;;AAEA;;;;AAIA,0B;;;;;;;;;;;ACpBA,UAAU,mBAAO,CAAC,mJAAuE;AACzF,0BAA0B,mBAAO,CAAC,mLAAmE;;AAErG;;AAEA;AACA,0BAA0B,QAAS;AACnC;;AAEA,eAAe;;AAEf;AACA;;AAEA;;AAEA;;;;AAIA,0B;;;;;;;;;;;ACpBA,UAAU,mBAAO,CAAC,mJAAuE;AACzF,0BAA0B,mBAAO,CAAC,kMAAwE;;AAE1G;;AAEA;AACA,0BAA0B,QAAS;AACnC;;AAEA,eAAe;;AAEf;AACA;;AAEA;;AAEA;;;;AAIA,0B;;;;;;;;;;;ACpBA,UAAU,mBAAO,CAAC,mJAAuE;AACzF,0BAA0B,mBAAO,CAAC,sLAAoE;;AAEtG;;AAEA;AACA,0BAA0B,QAAS;AACnC;;AAEA,eAAe;;AAEf;AACA;;AAEA;;AAEA;;;;AAIA,0B;;;;;;;;;;;ACpBA,UAAU,mBAAO,CAAC,mJAAuE;AACzF,0BAA0B,mBAAO,CAAC,2MAA2E;;AAE7G;;AAEA;AACA,0BAA0B,QAAS;AACnC;;AAEA,eAAe;;AAEf;AACA;;AAEA;;AAEA;;;;AAIA,0B;;;;;;;;;;;ACpBA,UAAU,mBAAO,CAAC,mJAAuE;AACzF,0BAA0B,mBAAO,CAAC,mLAAmE;;AAErG;;AAEA;AACA,0BAA0B,QAAS;AACnC;;AAEA,eAAe;;AAEf;AACA;;AAEA;;AAEA;;;;AAIA,0B;;;;;;;;;;;ACpBA,UAAU,mBAAO,CAAC,mJAAuE;AACzF,0BAA0B,mBAAO,CAAC,oMAA2E;;AAE7G;;AAEA;AACA,0BAA0B,QAAS;AACnC;;AAEA,eAAe;;AAEf;AACA;;AAEA;;AAEA;;;;AAIA,0B;;;;;;;;;;;ACpBA,UAAU,mBAAO,CAAC,mJAAuE;AACzF,0BAA0B,mBAAO,CAAC,wMAA6E;;AAE/G;;AAEA;AACA,0BAA0B,QAAS;AACnC;;AAEA,eAAe;;AAEf;AACA;;AAEA;;AAEA;;;;AAIA,0B;;;;;;;;;;;ACpBA,UAAU,mBAAO,CAAC,mJAAuE;AACzF,0BAA0B,mBAAO,CAAC,8LAAwE;;AAE1G;;AAEA;AACA,0BAA0B,QAAS;AACnC;;AAEA,eAAe;;AAEf;AACA;;AAEA;;AAEA;;;;AAIA,0B;;;;;;;;;;;ACpBA,UAAU,mBAAO,CAAC,mJAAuE;AACzF,0BAA0B,mBAAO,CAAC,4LAAsE;;AAExG;;AAEA;AACA,0BAA0B,QAAS;AACnC;;AAEA,eAAe;;AAEf;AACA;;AAEA;;AAEA;;;;AAIA,0B;;;;;;;;;;;ACpBA,UAAU,mBAAO,CAAC,mJAAuE;AACzF,0BAA0B,mBAAO,CAAC,4LAAsE;;AAExG;;AAEA;AACA,0BAA0B,QAAS;AACnC;;AAEA,eAAe;;AAEf;AACA;;AAEA;;AAEA;;;;AAIA,0B;;;;;;;;;;;ACpBA,UAAU,mBAAO,CAAC,gJAAoE;AACtF,0BAA0B,mBAAO,CAAC,8KAAmE;;AAErG;;AAEA;AACA,0BAA0B,QAAS;AACnC;;AAEA,eAAe;;AAEf;AACA;;AAEA;;AAEA;;;;AAIA,0B;;;;;;;;;;;;ACpBA;AAAe,ye;;;;;;;;;;;;ACAf;AAAe,sR;;;;;;;;;;;;ACAf;AAAe,+R;;;;;;;;;;;;ACAf;AAAe,6R;;;;;;;;;;;;ACAf;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE2D;AAC8B;;AAEzF;AACA,0CAA0C,0CAA0C,MAAM,0CAA0C;AACpI;AACA;AACA;AACA;AACe,0BAA0B,4EAAO;AAChD;AACA;;AAEA;AACA;AACA;AACA,QAAQ,4CAA4C;AACpD,QAAQ,wDAAwD;AAChE;AACA;AACA,cAAc,MAAM;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,0CAA0C;AACxD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6EAA6E;AAC7E;AACA;AACA,YAAY,gCAAgC;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB,mBAAmB;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,yEAAyE;AAC3F;AACA;AACA,YAAY,wCAAwC;AACpD,YAAY,QAAQ;AACpB,YAAY,0DAA0D;AACtE;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C,uBAAuB;AAClE,IAAI;AACJ;AACA;;AAEA;AACA;AACA,iCAAiC,eAAe;AAChD;AACA;AACA,YAAY,gCAAgC;AAC5C,YAAY,gCAAgC;AAC5C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B,8GAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,wBAAwB;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACjMA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEwC;;AAExC;AACA,4BAA4B,8CAA8C;AAC1E,IAAI,0CAA0C;AAC9C;AACA,IAAI,4DAA4D;AAChE;AACA,sDAAsD,yEAAyE;AAC/H;AACA;AACA;AACe,0BAA0B,oDAAW;AACpD;AACA,wDAAwD,4CAA4C;AACpG;AACA,KAAK,qDAAqD;AAC1D,2BAA2B,yEAAyE;AACpG;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;;;;;;;;;;;;AC/CA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEyD;AACjB;AACV;;AAE9B;AACA;AACA;AACA,4CAA4C;AAC5C,QAAQ,gDAAgD;AACxD;AACA,yEAAyE,kDAAkD;AAC3H;AACA,eAAe,kEAAkE;AACjF,IAAI,qDAAqD;AACzD,QAAQ,4CAA4C;AACpD,IAAI,0CAA0C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,6EAA6E;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,mBAAmB,2EAAM;AACxC;AACA;AACA;AACA;AACA,WAAW,oDAAW,EAAE,+CAAM;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtHA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEwC;;AAExC;AACA,4BAA4B,8CAA8C;AAC1E,IAAI,qDAAqD;AACzD,iBAAiB,4DAA4D;AAC7E;AACA,sDAAsD,yEAAyE;AAC/H;AACA;AACA;AACe,0BAA0B,oDAAW;AACpD;AACA,iDAAiD,4CAA4C;AAC7F,6CAA6C,qDAAqD;AAClG,2BAA2B,yEAAyE;AACpG;AACA;AACA;AACA,YAAY,gCAAgC;AAC5C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxDA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEyD;AACjB;AACA;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACe,0BAA0B,2EAAM;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,8CAA8C;AAClF,wCAAwC,mCAAmC;AAC3E;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA,oCAAoC,8CAA8C;AAClF,wCAAwC,mCAAmC;AAC3E;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,oDAAW;AACrC,0BAA0B,oDAAW;;AAErC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG,GAAG,sBAAsB;;AAE5B;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACyD;AACa;AACvB;AACA;AAC/C;AACA;AACA;AACA;AACA;AACe,qBAAqB,2EAAM;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,6DAAQ,GAAG,6DAAQ;AAC3F,wEAAwE,6DAAQ,GAAG,6DAAQ;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,6BAA6B,oFAAU;AACvC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA,C;;;;;;;;;;;;ACzDA;AAAe,kZ;;;;;;;;;;;;ACAf;AAAe,iZ;;;;;;;;;;;;ACAf;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iDAAiD;AAC5D;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,YAAY,qBAAqB,YAAY;AAC1H;AACA;AACA,KAAK;AACL;AACA;AACA;AACe;AACf;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA,YAAY,YAAY,8CAA8C;AACtE;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA,wDAAwD,YAAY;AACpE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sDAAsD,+CAA+C;AACrG,yCAAyC,wCAAwC;AACjF,UAAU,+CAA+C;AACzD;AACA,YAAY,MAAM;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yEAAyE,wCAAwC;AACjH,oCAAoC,+CAA+C;AACnF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,+CAA+C;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA,qFAAqF,OAAO;AAC5F;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACO;AACP;;AAEA;AACA;AACA;;AAEA,iCAAiC,oBAAoB,SAAS,wBAAwB;AACtF;;;;;;;;;;;;;ACxJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE0C;AACE;AACpB;AACA;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA,YAAY,OAAO,YAAY;AAC/B,YAAY,OAAO;AACnB;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,6DAA6D,cAAc;AAC3E;AACA;AACA;AACA,UAAU,oCAAoC;AAC9C;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,OAAO,cAAc;AACrB;AACA;AACA,UAAU,oCAAoC;AAC9C;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA,cAAc,mCAAmC;AACjD;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,sDAAa;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,sDAAa;AAC3B;AACA,GAAG;AACH,iCAAiC,oDAAG;AACpC;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,aAAa,sDAAa;AAC1B;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,cAAc,YAAY;AAC1B;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,aAAa,sDAAa;AAC1B;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,GAAG,OAAO;AACV;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,cAAc,OAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,qBAAqB;AACjC,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sDAAa;AAC1B;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc,MAAM;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK,cAAc;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,sBAAsB;AAC3D;AACA;AACA;AACA;AACA,kBAAkB,eAAe;AACjC,kBAAkB,eAAe;AACjC;AACA,kCAAkC;AAClC,0CAA0C;AAC1C;AACA;AACA,kCAAkC;AAClC,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,sBAAsB;AAC3D;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,MAAM;AACN;AACA,kBAAkB,eAAe;AACjC,kBAAkB,eAAe;AACjC;AACA,kCAAkC;AAClC,wDAAwD;AACxD,wDAAwD;AACxD;AACA;AACA;AACA,qCAAqC,sBAAsB;AAC3D;AACA;AACA;AACA;AACA,kBAAkB,SAAS,eAAe,EAAE;AAC5C,kBAAkB,SAAS,eAAe,EAAE;AAC5C;AACA,kCAAkC;AAClC,0CAA0C;AAC1C,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,kBAAkB,eAAe;AACjC,kBAAkB,gBAAgB;AAClC;AACA,kCAAkC;AAClC,kCAAkC;AAClC;AACA,eAAe,aAAa;AAC5B;AACA,YAAY,mCAAmC;AAC/C,cAAc;AACd,cAAc,8CAA8C;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sDAAa;AAC1B;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,oDAAoD,QAAQ;AAC5D;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,2DAA2D;AAC/E;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;AACJ,GAAG;AACH;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;;AAEA,oDAAG,cAAc,qDAAY;;AAE7B;AACA,8BAA8B,2DAA2D;AACzF;AACA;AACA,YAAY,2DAA2D;AACvE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;;;;;;;;;;;;;AChpBA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,2CAA2C;AAC3C,qCAAqC;AACrC,wCAAwC;AACxC,wCAAwC;AACxC;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,yCAAyC;AACtD;AACe;AACf;;AAEA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA,aAAa,4BAA4B;AACzC;;;;;;;;;;;;;AClDA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEoE;;AAEpE;AACA;AACA;AACe;AACf;AACA,gCAAgC,cAAc;AAC9C;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA,uCAAuC;AACvC,mCAAmC;AACnC;AACA,YAAY,cAAc;AAC1B;AACA,YAAY,EAAE;AACd;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B;AACA,YAAY,EAAE;AACd;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,EAAE;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,cAAc;AAC1B;AACA,YAAY,EAAE;AACd,YAAY,QAAQ;AACpB;AACA;AACA;AACA,OAAO,+DAAa;AACpB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS,+DAAa;AACtB;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO,+DAAa;AACpB;AACA,SAAS,+DAAa;AACtB;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc,EAAE;AAChB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS,+DAAa;AACtB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8CAA8C,oBAAoB;AAClE;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,WAAW,EAAE;AACb,aAAa,EAAE;AACf;AACA,QAAQ,+DAAa;AACrB;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACA,QAAQ,2DAAS;AACjB;;;;;;;;;;;;;ACrPA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,WAAW,aAAa;AACxB,aAAa,OAAO;AACpB;AACe;AACf;;AAEA,8BAA8B;AAC9B;AACA;;AAEA;AACA;;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEuC;;AAEvC;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,kDAAkD,kDAAkD;AACpG;AACA;AACA,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACe;AACf;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;;AAEA;AACA,sBAAsB,WAAW;AACjC;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,qDAAQ;;;;;;;;;;;;;ACzIxB;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA,0CAA0C;AAC1C;AACA,WAAW,kCAAkC,iBAAiB,6BAA6B;AAC3F,WAAW,aAAa;AACxB,aAAa,eAAe;AAC5B;AACA;AACe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACrFA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEuC;AACF;;AAErC;AACA;AACA;AACA,mCAAmC;AACnC,mCAAmC,eAAe,GAAG;AACrD,gDAAgD;AAChD,sFAAsF;AACtF;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,gCAAgC;AAC3C;AACA,aAAa,QAAQ;AACrB;AACe,kDAAkD;AACjE;AACA;;AAEA;AACA;AACA;;AAEA,MAAM,0DAAQ,iBAAiB,2DAAU;AACzC;AACA;;AAEA;AACA,OAAO,0DAAQ;AACf;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;AChDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEgG;AACvE;AACK;AACI;AACC;;AAEnC;AACA;AACA,oBAAoB,6CAA6C;AACjE;AACA,qDAAqD,0BAA0B;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,wBAAwB,wDAAM,IAAI,EAAE,qDAAY;AAChD;AACA;AACA,qCAAqC,sDAAsD;AAC3F;AACA,YAAY,uCAAuC;AACnD,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB,YAAY,OAAO,YAAY;AAC/B,YAAY,8CAA8C;AAC1D;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA,OAAO,uDAAM,eAAe,yDAAQ;AACpC;;AAEA;;AAEA;AACA;;AAEA;AACA,EAAE,qDAAY;AACd,EAAE;;AAEF;AACA;AACA,qCAAqC,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,uCAAuC;AACnD,YAAY,OAAO;AACnB;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA,OAAO,uDAAM,eAAe,yDAAQ;AACpC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE,qDAAY;;AAEd;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB,cAAc,2CAA2C;AACzD;AACA;AACA,SAAS,2EAAqB;AAC9B;AACA,CAAC;;AAEc,8EAAe,EAAC;;AAE/B;AACA;AACA,oEAAoE,gDAAgD;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,iBAAiB;AACjB;AACA,yBAAyB,uCAAuC;AAChE;AACA,cAAc,0CAA0C;AACxD,YAAY;AACZ,UAAU,8DAA8D;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB,cAAc,OAAO;AACrB;AACA;AACA;AACA,EAAE,mEAAa;;AAEf;AACA;AACA;AACA;;AAEA,wDAAM,0BAA0B,qDAAY;AAC5C;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB,YAAY,OAAO,YAAY;AAC/B,YAAY,QAAQ;AACpB;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA,WAAW,aAAa;;AAExB;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA,mEAAmE,oDAAG;AACtE;;AAEA;AACA,gDAAgD,iDAAiD;AACjG;AACA;AACA;;;;;;;;;;;;;ACtQA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,8BAA8B;AAC3C;AACe;AACf;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC9BA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,aAAa,OAAO;AACpB;AACA;AACe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE0C;;AAE1C;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,oCAAoC;AACjD;AACe;AACf,oBAAoB,6DAAY;AAChC,oBAAoB,6DAAY;;AAEhC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC9BA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,aAAa,OAAO;AACpB;AACe;AACf;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE8B;;AAE9B;AACA;AACA;AACA,WAAW,YAAY;AACvB,aAAa;AACb;AACe;AACf;AACA,OAAO,+CAAM;AACb;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC3BA;AAAA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACe,gEAAC,mBAAmB,EAAC;;;;;;;;;;;;;ACzBpC;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACe;AACf;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACxBA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB;AACe;AACf;AACA;;;;;;;;;;;;;AClBA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACe;AACf;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACzBA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACe;AACf;AACA;;;;;;;;;;;;;ACjBA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACe;AACf;AACA;;;;;;;;;;;;;ACjBA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACe;AACf;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE8B;AACJ;AACkC;AACZ;AACT;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kCAAkC;AAC7C,aAAa;AACb;AACO,8BAA8B,qDAAqD;AAC1F,YAAY,+CAA+C;AAC3D;AACA,MAAM,4DAAU;AAChB;AACA;;AAEA,YAAY,gDAAgD;AAC5D;AACA,MAAM,4DAAU;AAChB;AACA;;AAEA,mCAAmC,sEAAqB;AACxD,yBAAyB,6CAAI;AAC7B,wBAAwB,6CAAI;;AAE5B;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF,qCAAqC,6CAAI;AACzC,4CAA4C,6CAAI,EAAE,+CAAM;;AAExD;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM,YAAY;;AAElB;AACA,2DAA2D,6CAAI;AAC/D,+BAA+B,gEAAe;;AAE9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,sCAAsC;AAClD;AACA;AACA;AACA;;AAEA,SAAS;AACT;;AAEA;AACA;AACA;AACA,WAAW,SAAS,gCAAgC,yCAAyC;AAC7F,WAAW,oBAAoB;AAC/B,WAAW,oBAAoB;AAC/B,aAAa,MAAM;AACnB;AACA,QAAQ,kBAAkB;;AAE1B;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,4CAA4C;AACvD,IAAI,yCAAyC;AAC7C,WAAW,oBAAoB,2BAA2B,+CAA+C;AACzG,WAAW,oBAAoB,mCAAmC,gDAAgD;AAClH,WAAW,oBAAoB,4BAA4B,gDAAgD;AAC3G,WAAW,oBAAoB;AAC/B,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa,OAAO;AACpB,sCAAsC,YAAY;AAClD,QAAQ,mBAAmB,GAAG,+CAAM;;AAEpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,YAAY;AACxB;;AAEA;AACA;AACA;AACA,YAAY,2CAA2C;AACvD;;AAEA;AACA,uCAAuC,yCAAyC;AAChF;AACA;AACA,YAAY,iBAAiB;AAC7B;;AAEA;AACA;AACA;AACA;AACA,YAAY,2CAA2C;AACvD;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;;;;;;;;;;;;;AChTA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEgC;AACE;AACc;AAClB;AACQ;;AAEtC;;AAEA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,gEAAgE;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA,YAAY,sEAAsE;AAClF;AACA;AACA,wBAAwB,wDAAO;;AAE/B;AACA;AACA;AACA;AACA;AACA,cAAc,+DAA+D;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,OAAO,2DAAS;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,SAAS;AAClC;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG,WAAW,yDAAQ;AACtB,UAAU,0BAA0B;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA,cAAc,2BAA2B;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc,2BAA2B;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc,2BAA2B;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,2BAA2B;AACvC,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,2BAA2B;AACvC,cAAc,OAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,gCAAgC;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oCAAoC,WAAW,GAAG,YAAY,GAAG,aAAa;AAC9E,KAAK,cAAc,GAAG,aAAa,MAAM,cAAc;AACvD;AACA;AACA,YAAY,2BAA2B;AACvC,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,2BAA2B;AACvC,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC,eAAe;AAC/C;AACA;AACA,cAAc,2BAA2B;AACzC;AACA;AACA;AACA;;AAEA,OAAO,yDAAQ;AACf;AACA;AACA;AACA,GAAG;AACH,wBAAwB,gEAAe;;AAEvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,MAAM;AAClB,cAAc,mCAAmC;AACjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,uDAAM;AACd;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC,WAAW,6CAA6C;AACxD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,aAAa;AACb;AACA,OAAO,2DAAS;AAChB;AACA;;AAEA;AACA;;;;;;;;;;;;;ACvZA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB;AACe;AACf;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEyB;AACK;AACJ;AACmB;;AAE7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,4CAA4C;AAC5C,KAAK;AACL;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA,YAAY,YAAY;AACxB;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,sCAAsC,gBAAgB;AACtD;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uEAAuE,mBAAmB;AAC1F;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,SAAS;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,YAAY;AACxB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,+CAAM;AACpB,yBAAyB,+CAAM;AAC/B,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,sBAAsB,qDAAqD;AAC3E;AACA;AACA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;;AAEA;AACA;AACA,IAAI,qDAAqD;AACzD;AACA;AACA;AACA;AACA,cAAc,2BAA2B;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,6DAA6D;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA,0CAA0C,yBAAyB;AACnE;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,iBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,8BAA8B,qCAAqC;AACnE;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yCAAyC,iCAAiC;AAC1E,KAAK,0BAA0B;AAC/B,2BAA2B,iCAAiC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,+CAAM;AACvB;AACA,GAAG;;AAEH;AACA;;AAEA;AACA,gDAAgD,0BAA0B;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,yBAAyB;AACnE,SAAS,iCAAiC;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,8CAA8C,sCAAsC;AACpF;AACA;AACA;AACA,YAAY,YAAY;AACxB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA,0BAA0B,6CAAI;AAC9B;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,oDAAG,0BAA0B,qDAAe;;;;;;;;;;;;;ACzX5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEgC;AACN;AACI;;AAE9B;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACO,sCAAsC,6BAA6B;AAC1E;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B;AACO;AACP;;AAEA;AACA,aAAa,6CAAI;AACjB,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,2BAA2B;AACtC,WAAW,OAAO;AAClB;AACA;AACA;AACA,0BAA0B,6CAAI;;AAE9B;;AAEA;AACA,OAAO,mBAAmB;;AAE1B;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,SAAS;AACpB;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,6CAAI;;AAEvB;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC,WAAW,2BAA2B;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC,WAAW,2BAA2B;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC,WAAW,2BAA2B;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC,WAAW,2BAA2B;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,aAAa;AACb;AACA,MAAM,wDAAO;AACb;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,aAAa;AACb;AACA,MAAM,wDAAO;AACb;;AAEA;AACA,OAAO,uDAAM;AACb;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA,kBAAkB,6CAAI;;AAEtB;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA,yBAAyB,6CAAI;;AAE7B;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC7SA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB;AACe;AACf;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACvBA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACe;AACf;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf,eAAe,OAAO;AACtB;AACA;AACA;;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEoC;AACZ;AACc;;AAEtC;AACmB;AACyB;;AAE5C;AACA;;AAEA;AACA,2BAA2B,0BAA0B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA,iDAAiD;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,mBAAmB,mDAAU;;AAE7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,sBAAsB;AACzC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,4CAA4C,kDAAS,qBAAqB,kDAAS;AACnF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,sBAAsB;AAC1C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA,GAAG,sDAAa;AAChB;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe,2EAAY,EAAC;;AAE5B;AACA;AACA;AACA,uDAAuD,6CAA6C;AACpG;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,kEAAkE;AACpF;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO,YAAY;AAC9B,WAAW,8CAA8C;AACzD;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU,cAAc,WAAW;AAC/C;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO,YAAY;AAC9B,WAAW,8CAA8C;AACzD;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,mEAAmE;AACrF;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,2DAA2D;AACrF,YAAY,2DAA2D,SAAS,YAAY;AAC5F;AACA;AACA,WAAW,kCAAkC;AAC7C,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO,YAAY;AAC9B,WAAW,8CAA8C;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kCAAkC;AAC7C,WAAW,OAAO;AAClB;AACA,WAAW,SAAS;AACpB;AACA;;AAEA;AACA;AACA;AACA,kDAAkD,uCAAuC;AACzF;AACA;AACA;AACA,WAAW,wCAAwC;AACnD,WAAW,KAAK;AAChB,aAAa,EAAE;AACf,gCAAgC,2DAA2D;AAC3F;AACA;;AAEA;AACA,yCAAyC,wCAAwC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,kCAAkC;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,kCAAkC;AAC7C,WAAW,OAAO;AAClB,aAAa;AACb;AACO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kCAAkC;AAC7C,WAAW,OAAO;AAClB;AACO;AACP;AACA,gCAAgC,oDAAG;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,kCAAkC;AAC7C;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,iBAAiB,kCAAkC;AACnD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,oBAAoB;AACjC,OAAO,wCAAwC;AAC/C,aAAa,gBAAgB;AAC7B,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,4BAA4B,kDAAS;;AAErC;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,kCAAkC;AAC7C,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;;AAEA;AACA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,6BAA6B;AACrD;AACA;AACA;;AAEA;AACA,4BAA4B,sDAAsD;AAClF;AACA;AACA,WAAW,kCAAkC;AAC7C,WAAW,gBAAgB;AAC3B;;;;;;;;;;;;;ACnpBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF,EAAE,SAAS,EAAE;AACrG;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEe,kEAAG,EAAC;;AAEnB;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;;AAEA;AACA,iFAAiF,EAAE,SAAS,EAAE;AAC9F;AACA;AACA;AACA,aAAa;AACb;AACO;AACP;;AAEA;AACA;;AAEA;AACA;AACA,8CAA8C,EAAE;AAChD,EAAE;AACF;AACA;;AAEA;AACA;;;;;;;;;;;;;ACtJA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEwB;;AAExB;AACA;AACA;AACA;AACe;AACf;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,wCAAwC,sDAAsD;AAC9F;AACA;AACA,cAAc;AACd;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,oDAAG;;AAEjB;AACA;AACA;AACA;AACA;AACA,aAAa,oDAAG;;AAEhB;AACA,0CAA0C,kDAAkD;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9EA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,sDAAsD;AAChE;AACA;AACA,UAAU,4CAA4C;AACtD;AACA;AACA,UAAU,uCAAuC;AACjD;AACA;AACA,UAAU,uCAAuC;AACjD;AACA;AACA,UAAU,sDAAsD,GAAG,uCAAuC;AAC1G;AACA;AACA;AACA;AACA,iBAAiB,WAAW,GAAG,WAAW,OAAO,WAAW,GAAG,WAAW;AAC1E;AACA,KAAK;AACL,UAAU,sCAAsC,WAAW,IAAI,GAAG,uCAAuC;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,QAAQ,sCAAsC;AAC9C;AACA;AACA;AACA;AACA;AACA,IAAI,iEAAiE;AACrE,kCAAkC,sCAAsC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,iFAAiF,sCAAsC;AACvH,aAAa,MAAM;AACnB;AACe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,KAAK;AAChC;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa;AACb,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAAS;AACT;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa;AACb;AACA,iBAAiB,0CAA0C;AAC3D;AACA;AACA;AACA;;AAEA,WAAW;AACX;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,eAAe,mCAAmC,+CAA+C;AAC9G;AACA;AACA,QAAQ,yCAAyC;;AAEjD,6EAA6E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,eAAe,mCAAmC,6BAA6B;AAC5F;AACA,QAAQ,yCAAyC;;AAEjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC/PA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa;AACb;AACe;AACf;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEiD;AACD;AACJ;AACpB;;AAExB;AACA;AACA;AACA,gBAAgB,uCAAuC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA,YAAY,6BAA6B;AACzC;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA,aAAa,sDAAa;AAC1B;;AAEA,kEAAkE,mBAAmB;AACrF,uDAAuD,mBAAmB;AAC1E;AACA;;AAEA;AACA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAA8C,WAAW;AACzD;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8CAA8C,iBAAiB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oDAAG,gBAAgB,yDAAe;AAClC,oDAAG,gBAAgB,wDAAe;;;;;;;;;;;;;ACrJlC;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACe;AACf;AACA;;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAE4C;AACpB;;AAExB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA,6BAA6B,yDAAyD;AACtF;AACA,qCAAqC,qCAAqC;AAC1E;AACA,WAAW,2CAA2C,gBAAgB,qCAAqC;AAC3G;AACA,aAAa,OAAO;AACpB;AACO;AACP;;AAEA;AACA;;AAEA;AACA;AACA,yDAAyD,qCAAqC;AAC9F;AACA;AACA,cAAc,OAAO;AACrB;AACA,aAAa,sDAAa;AAC1B;AACA,WAAW;AACX;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS,oCAAoC,sBAAsB,yDAAyD;AAC5H;AACA;AACA;AACA;AACA,qBAAqB,qDAAqD;AAC1E;AACA;AACA;AACA,qCAAqC,qCAAqC;AAC1E;AACA;AACA;AACA,WAAW,6BAA6B;AACxC,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACO;AACP,OAAO,4CAAG;AACV;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,YAAY;AACjC;;AAEA;AACA;;AAEA;AACA,qBAAqB,YAAY;AACjC;AACA;;AAEA;AACA,sBAAsB,aAAa;AACnC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;;;;;;;;;;;;;AC9MA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEiD;AACI;;AAErD;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,+FAA+F;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,kCAAkC,yDAAe;AACjD;;AAEA;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,yDAAO;AAC7C,GAAG;AACH;;AAEA;AACA;AACA;AACA,YAAY,6BAA6B;AACzC,SAAS,2CAA2C;AACpD,YAAY,SAAS;AACrB,KAAK,0EAA0E;AAC/E;AACA,YAAY,OAAO,YAAY;AAC/B,YAAY,8CAA8C;AAC1D;AACA;AACA;AACA,uCAAuC;AACvC,kBAAkB,gEAAc;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,GAAG,GAAG,WAAW;AACjB;;AAEA;AACA,2FAA2F,mBAAmB;AAC9G;AACA,YAAY,qDAAqD;AACjE,cAAc,QAAQ;AACtB;AACA;AACA,8CAA8C,yDAAO;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEkD;;AAElD;;AAEA;AACA;AACA;AACe;AACf;AACA;AACA,KAAK,+DAA+D;AACpE;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,sEAAsE,kBAAkB;AACxF,YAAY,OAAO;AACnB;AACA,SAAS,uBAAuB;AAChC;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,aAAa,wCAAwC;AACrD;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,0BAA0B,kCAAkC;AAC5D;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,4BAA4B,qCAAqC;AACjE;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,4BAA4B,+CAA+C;AAC3E;AACA;AACA;AACA;AACA,aAAa,+CAA+C,uBAAuB,kCAAkC;AACrH,wDAAwD,iDAAiD;AACzG;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,yCAAyC,kBAAkB;AAC3D,MAAM,yCAAyC,MAAM,4BAA4B;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA,6DAA6D,kBAAkB,MAAM;AACrF;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,UAAU,4DAA4D;AACtE,gDAAgD,kBAAkB,MAAM,uBAAuB;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA,yBAAyB,sEAAS;;AAElC;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;;;;;;;;;;;;;ACnJA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;AACe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAI;AACJ,EAAE;AACF;;;;;;;;;;;;;AC9CA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B,qBAAqB;AACnD,qBAAqB;AACrB;AACA,0EAA0E,+BAA+B;AACzG;AACA,WAAW,OAAO;AAClB,aAAa,IAAI;AACjB;AACe;AACf;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE0C;AACE;AACC;;AAE7C;AACA;AACA;;AAEA;AACA;AACA,IAAI,kBAAkB;AACtB;AACA;AACA,MAAM;AACN,mBAAmB,yFAAyF;AAC5G,MAAM,sEAAsE;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,0DAAQ;AACf;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,2CAA2C,0BAA0B;AACrE;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,aAAa,sDAAa;AAC1B;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sDAAa;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sDAAa;AAC1B;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,sDAAa;AAC3B;AACA,GAAG;;AAEH;;AAEA,eAAe,OAAO;AACtB,gBAAgB,MAAM;AACtB,gBAAgB,MAAM,8DAA8D,gCAAgC;AACpH,gBAAgB,MAAM;AACtB;AACA,oBAAoB;;AAEpB;AACA;AACA,GAAG;;AAEH,eAAe,OAAO;AACtB,gBAAgB,SAAS,SAAS,+BAA+B;AACjE,gBAAgB,SAAS,aAAa,mCAAmC;AACzE,gBAAgB,wCAAwC;AACxD,gBAAgB,MAAM;AACtB,gBAAgB,MAAM,8CAA8C,wDAAwD;AAC5H,gBAAgB,IAAI;AACpB,MAAM,wCAAwC,EAAE;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,sDAAa;AAC3B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA,aAAa,sDAAa;AAC1B;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA,wDAAM,mBAAmB,qDAAY;;AAEtB,8EAAe,EAAC;;AAE/B;AACA;AACA;AACA,WAAW,6CAA6C;AACxD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,EAAE;;AAEF;AACA,OAAO,wCAAwC,SAAS,oEAAoE;AAC5H;AACA,SAAS,wDAAwD;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,mDAAmD;AAC7D,UAAU;AACV;AACA;AACA,UAAU,mDAAmD;AAC7D;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,mDAAmD;AAC7D,UAAU;AACV;AACA;AACA,UAAU,mDAAmD;AAC7D;AACA;AACA,UAAU;AACV;AACA,QAAQ;AACR;AACA;AACA,UAAU;AACV;AACA;AACA,OAAO;AACP;AACA;AACA,WAAW;AACX;AACA;AACA,EAAE;;AAEF;AACA,2BAA2B,wCAAwC;AACnE,KAAK,qEAAqE;AAC1E,kBAAkB,qEAAqE;AACvF,KAAK,0DAA0D;AAC/D;AACA,SAAS,wDAAwD;AACjE;AACA;AACA;AACA;AACA;AACA,WAAW,mDAAmD;AAC9D,WAAW,mDAAmD;AAC9D,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,mDAAmD;AAC9D,WAAW,mDAAmD;AAC9D,WAAW,mDAAmD;AAC9D,WAAW;AACX,OAAO;AACP;AACA;AACA,WAAW;AACX;AACA;AACA,EAAE;AACF;;AAEA,mBAAmB,wDAAwD;AAC3E;AACA;AACA,WAAW,gCAAgC;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAa;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAa;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sDAAa;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;;AAEA,UAAU,0BAA0B;AACpC;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAa;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,sBAAsB;AAC1B;AACA,WAAW,mBAAmB;AAC9B,WAAW,OAAO;AAClB,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;;AAEA,yBAAyB,sBAAsB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,qCAAqC;AAC5C,OAAO,qCAAqC;AAC5C;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK,oBAAoB,sBAAsB;AAC1D,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAa;AACzB;;AAEA,iBAAiB;AACjB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH,qBAAqB;AACrB;AACA,GAAG;AACH,aAAa,sDAAa;AAC1B;AACA,EAAE;;AAEF;AACA;;AAEA,iBAAiB,qDAAqD,OAAO,cAAc;AAC3F;AACA;AACA,WAAW,QAAQ,gCAAgC,mCAAmC;AACtF,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,kCAAkC,MAAM;AACzD,SAAS,gBAAgB;AACzB;AACA;AACA;AACA;AACA;AACA,+CAA+C,sBAAsB,KAAK,0BAA0B;AACpG;AACA;AACA,UAAU,uCAAuC;AACjD,UAAU,uCAAuC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,+CAA+C;AACzD,UAAU,+CAA+C;AACzD;AACA;AACA,iCAAiC,mCAAmC;AACpE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS,mDAAmD;AAC5D;AACA;AACA,MAAM;AACN;AACA;AACA,WAAW,UAAU,mCAAmC,sBAAsB;AAC9E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH,EAAE;AACF;;AAEA,6BAA6B,iBAAiB;AAC9C,8BAA8B,kCAAkC;AAChE;AACA;AACA,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA,mCAAmC,oBAAoB;AACvD,IAAI,4BAA4B,EAAE,gCAAgC;AAClE,qBAAqB,4BAA4B;AACjD;AACA;AACA,WAAW,UAAU,iCAAiC,sBAAsB;AAC5E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,IAAI;AACJ;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA,uDAAuD,mDAAmD;AAC1G;AACA;AACA,MAAM;AACN,mBAAmB,yFAAyF;AAC5G,MAAM,sEAAsE;AAC5E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,eAAe,oBAAoB,WAAW,MAAM,WAAW;AACpF,KAAK;AACL;AACA,wBAAwB;AACxB;AACA,kBAAkB;AAClB,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,WAAW,EAAE;AACb;;AAEA;AACA;AACA;AACA;AACA,QAAQ,wEAAwE;AAChF;AACA;AACA;AACA;AACA,uDAAuD,WAAW,MAAM,WAAW;AACnF,+CAA+C,6BAA6B;AAC5E;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,4CAA4C,WAAW,MAAM,WAAW;AACxE,KAAK;AACL;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,WAAW,EAAE;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,EAAE;AACb;;AAEA;AACA,UAAU,iCAAiC;AAC3C,IAAI,8CAA8C;AAClD;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,qDAAqD;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;;AAEA;AACA,qCAAqC,YAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iEAAiE,oDAAoD;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG,mBAAmB;AAC3B;AACA,iBAAiB;AACjB;AACA;AACA,uBAAuB,sDAAsD;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB,IAAI,IAAI,IAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,KAAK,GAAG,mBAAmB;AAC3B;AACA,uBAAuB;AACvB;AACA;AACA,WAAW,OAAO;AAClB;;;;;;;;;;;;;AC72BA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,yCAAyC;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8CAA8C;AAC1D,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;AC3C1B;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEe,kEAAG,EAAC;;;;;;;;;;;;;ACxBnB;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEwC;AACF;;AAEtC;AACA;AACA;AACA,kBAAkB,qBAAqB;AACvC;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,IAAI;AACjB;AACe;AACf,MAAM,2DAAU;AAChB;AACA,EAAE;AACF,SAAS,4DAAW;AACpB;AACA;;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,+DAA+D;AACtH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mHAAmH;AACnH;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,wBAAwB;AACnC;AACO;AACP,+GAA+G;;AAE/G;AACA;;AAEA;AACA;AACA,QAAQ,2DAA2D;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACxGA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACO;AACP;AACA;;;;;;;;;;;;;ACnEA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAE4C;;AAE5C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iGAAiG;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yEAAyE;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,uGAAuG;AAC5G,eAAe,kDAAkD;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sDAAa;AACxB;AACA;AACA;AACA,CAAC;AACD;AACA;;;;;;;;;;;;;;ACrJA;AAAA;AAAA;AAAwC;AACV;;AAE9B;AACA,eAAe,6DAAS,CAAC,gDAAI;;AAEd,uEAAQ,EAAC;;;;;;;;;;;;;ACNxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACE;AACN;AACA;AACA;;AAEpC;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,qDAAS;AAChC,2BAA2B,sDAAU;AACrC,qBAAqB,mDAAO;AAC5B,qBAAqB,mDAAO;AAC5B,qBAAqB,mDAAO;;AAEb,mEAAI,EAAC;;;;;;;;;;;;;AC/BpB;AAAA;AAAA;AAA0C;AACA;;AAE1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,8DAAU,CAAC,sDAAU;AAC7C;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;AC3B3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACE;AACN;AACA;AACA;;AAE9C;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,0DAAc;AAC1C,gCAAgC,2DAAe;AAC/C,0BAA0B,wDAAY;AACtC,0BAA0B,wDAAY;AACtC,0BAA0B,wDAAY;;AAEvB,wEAAS,EAAC;;;;;;;;;;;;;AC/BzB;AAAA;AAAA;AAA0C;AACA;;AAE1C;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B,8DAAU,CAAC,sDAAU;AAC/C;;AAEe,4EAAa,EAAC;;;;;;;;;;;;;ACrB7B;AAAA;AAAA;AAAwC;AACV;;AAE9B;AACA,UAAU,6DAAS,CAAC,gDAAI;;AAET,kEAAG,EAAC;;;;;;;;;;;;;ACNnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACE;AACN;AACA;AACA;;AAE5C;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,yDAAa;AACxC,+BAA+B,0DAAc;AAC7C,yBAAyB,uDAAW;AACpC,yBAAyB,uDAAW;AACpC,yBAAyB,uDAAW;;AAErB,uEAAQ,EAAC;;;;;;;;;;;;;AC/BxB;AAAA;AAAA;AAAwC;AACV;;AAE9B;AACA,cAAc,6DAAS,CAAC,gDAAI;;AAEb,sEAAO,EAAC;;;;;;;;;;;;;ACNvB;AAAA;AAAA;AAAwC;AACV;;AAE9B;AACA,UAAU,6DAAS,CAAC,gDAAI;;AAET,kEAAG,EAAC;;;;;;;;;;;;;ACNnB;AAAA;AAAA;AAAA;AAAsC;AACM;AACA;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;;AAEA,sBAAsB,oDAAQ;AAC9B;AACA;AACA;AACA;;AAEA;AACA,mDAAmD,uDAAW;AAC9D,yBAAyB,uDAAW;;AAErB,uEAAQ,EAAC;;;;;;;;;;;;;AC1BxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACE;AACE;AACN;AACA;AACA;;AAEtC;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA,iCAAiC,qDAAS;AAC1C;AACA;;AAEA;AACA,wBAAwB,sDAAU;AAClC,4BAA4B,uDAAW;AACvC,sBAAsB,oDAAQ;AAC9B,sBAAsB,oDAAQ;AAC9B,sBAAsB,oDAAQ;;AAEf,oEAAK,EAAC;;;;;;;;;;;;;AC1BrB;AAAA;AAA8B;;AAE9B;AACA,aAAa,gDAAI;;AAEF,qEAAM,EAAC;;;;;;;;;;;;;ACLtB;AAAA;AAA8B;;AAE9B;AACA,iBAAiB,gDAAI;;AAEN,yEAAU,EAAC;;;;;;;;;;;;;ACL1B;AAAA;AAAA;AAAwC;AACV;;AAE9B;AACA,cAAc,6DAAS,CAAC,gDAAI;;AAEb,sEAAO,EAAC;;;;;;;;;;;;;ACNvB;AAAA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,WAAW,MAAM;AACjB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,oEAAK,EAAC;;;;;;;;;;;;;ACpBrB;AAAA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe,8EAAe,EAAC;;;;;;;;;;;;;ACrB/B;AAAA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACrBzB;AAAA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,6EAAc,EAAC;;;;;;;;;;;;;ACpB9B;AAAA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACtB1B;AAAA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;ACxB3B;AAAA;AAA4C;;AAE5C;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA,qBAAqB,+DAAW;AAChC;;AAEe,4EAAa,EAAC;;;;;;;;;;;;;AChB7B;AAAA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,EAAE;AACb,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,gFAAiB,EAAC;;;;;;;;;;;;;ACrBjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACG;AACR;AACE;AACD;AACS;;AAE7C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACA;AACA,cAAc,2DAAO;AACrB,wBAAwB,+DAAW;AACnC,mCAAmC,4DAAQ;AAC3C,8CAA8C,gEAAY;AAC1D;AACA,6BAA6B,6DAAS;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,2DAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEe,4EAAa,EAAC;;;;;;;;;;;;;AChD7B;AAAA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;ACpBxB;AAAA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACnBzB;AAAA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,WAAW,QAAQ;AACnB;AACA,aAAa,EAAE;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;ACzB3B;AAAA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,WAAW,QAAQ;AACnB;AACA,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,+EAAgB,EAAC;;;;;;;;;;;;;ACvBhC;AAAA;AAA0C;;AAE1C;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,EAAE;AACf;AACA;AACA;AACA,wBAAwB,8DAAU;AAClC;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;ACd3B;AAAA;AAAA;AAAA;AAAwC;AACA;AACI;;AAE5C;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA,SAAS,+DAAW,CAAC,6DAAS,SAAS,6DAAS;AAChD;;AAEe,8EAAe,EAAC;;;;;;;;;;;;;AChB/B;AAAA;AAAA;AAAwC;AACI;;AAE5C;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA,SAAS,+DAAW,CAAC,6DAAS;AAC9B;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;ACd5B;AAAA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACtBzB;AAAA;AAA8C;;AAE9C;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA,gBAAgB,gEAAY;;AAEb,wEAAS,EAAC;;;;;;;;;;;;;ACXzB;AAAA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;ACX5B;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACd1B;AAAA;AAAA;AAAoD;AAC3B;;AAEzB;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,EAAE;AACb;AACA;AACA,+BAA+B,sDAAE;AACjC;AACA,IAAI,mEAAe;AACnB;AACA;;AAEe,+EAAgB,EAAC;;;;;;;;;;;;;ACnBhC;AAAA;AAAA;AAAoD;AAC3B;;AAEzB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,EAAE;AACb;AACA;AACA;AACA,4CAA4C,sDAAE;AAC9C;AACA,IAAI,mEAAe;AACnB;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;AC3B3B;AAAA;AAAyB;;AAEzB;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,QAAQ,sDAAE;AACV;AACA;AACA;AACA;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;ACpB5B;AAAA;AAAsC;;AAEtC;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA,EAAE,4DAAQ;AACV;AACA,GAAG;AACH;AACA;;AAEe,6EAAc,EAAC;;;;;;;;;;;;;ACpB9B;AAAA;AAAA;AAA0C;AACb;;AAE7B;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA,mBAAmB,8DAAU,SAAS,wDAAI;AAC1C;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;AChB1B;AAAA;AAAA;AAA0C;AACT;;AAEjC;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA,mBAAmB,8DAAU,SAAS,0DAAM;AAC5C;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;AChB5B;AAAA;AAAkD;;AAElD;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,EAAE;AACb;AACA;AACA,4BAA4B,0DAAc;AAC1C,IAAI,kEAAc;AAClB;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEe,8EAAe,EAAC;;;;;;;;;;;;;ACxB/B;AAAA;AAA2B;;AAE3B;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,uDAAG;AAC1C;AACA;AACA;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;ACtBtB;AAAA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACrBzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgC;AACQ;AACI;AACF;AACI;AACF;AACJ;AACI;AACI;AACN;AACI;AACZ;AACgB;AACA;AACE;AACjB;AACE;AACN;AACM;AACN;AACF;;AAE7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,QAAQ;AACnB;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,6DAAQ;AACf;AACA;AACA,cAAc,4DAAO;AACrB;AACA,aAAa,mEAAc;AAC3B;AACA,aAAa,6DAAS;AACtB;AACA,GAAG;AACH,cAAc,2DAAM;AACpB;;AAEA,QAAQ,6DAAQ;AAChB,aAAa,+DAAW;AACxB;AACA;AACA,sCAAsC,GAAG,oEAAe;AACxD;AACA;AACA,YAAY,iEAAa,QAAQ,gEAAY;AAC7C,YAAY,+DAAW,QAAQ,8DAAU;AACzC;AACA,KAAK;AACL;AACA;AACA;AACA,eAAe,mEAAc;AAC7B;AACA;AACA;AACA,wBAAwB,iDAAK;AAC7B;AACA;AACA;AACA;AACA;;AAEA,MAAM,0DAAK;AACX;AACA;AACA,KAAK;AACL,GAAG,UAAU,0DAAK;AAClB;AACA;AACA,KAAK;AACL;;AAEA;AACA,gBAAgB,yDAAY,GAAG,sDAAU;AACzC,yBAAyB,iDAAI;;AAE7B;AACA,EAAE,6DAAS;AACX;AACA;AACA;AACA;AACA;AACA,IAAI,+DAAW;AACf,GAAG;AACH;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACpKzB;AAAA;AAAA;AAAkD;AACrB;;AAE7B;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA,cAAc,wDAAI;AAClB;AACA,WAAW,kEAAc;AACzB;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;ACjB5B;AAAA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe,6EAAc,EAAC;;;;;;;;;;;;;AC1B9B;AAAA;AAAqC;;AAErC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,SAAS,4DAAQ;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAEc,yEAAU,EAAC;;;;;;;;;;;;;AC7B1B;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA,gCAAgC,6BAA6B,EAAE;AAC/D;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACpBzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsC;AACU;AACQ;AAClB;AACE;AACF;;AAEtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA,iBAAiB,yDAAa;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,4DAAQ,SAAS,6DAAS;AACvC;AACA;AACA,eAAe,6DAAiB;AAChC;AACA;AACA;AACA,eAAe,oDAAQ;AACvB;AACA,iBAAiB,oDAAQ;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,6EAAc,EAAC;;;;;;;;;;;;;AClE9B;AAAA;AAAA;AAA0C;AACQ;;AAElD;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB,aAAa,aAAa;AAC1B;AACA,eAAe,kEAAc,CAAC,sDAAU;;AAEzB,uEAAQ,EAAC;;;;;;;;;;;;;ACbxB;AAAA;AAAA;AAAoD;AACF;;AAElD;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB,aAAa,aAAa;AAC1B;AACA,oBAAoB,kEAAc,CAAC,2DAAe;;AAEnC,4EAAa,EAAC;;;;;;;;;;;;;ACb7B;AAAA;AAAsC;;AAEtC;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,EAAE,4DAAQ;AACV;AACA;AACA,GAAG;AACH;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACpBzB;AAAA;AAAqC;;AAErC;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,EAAE;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qCAAqC,4DAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;AC/B5B;AAAA;AAAA;AAAuC;AACF;;AAErC;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;;AAEA,UAAU,6DAAS;AACnB;AACA;AACA;AACA,uDAAuD,6DAAS;AAChE;AACA;AACA;AACA,0BAA0B,4DAAQ;AAClC;AACA;AACA;AACA;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;AC/BxB;AAAA;AAAsC;;AAEtC;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA,EAAE,4DAAQ;AACV;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACpB1B;AAAA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,4EAAa,EAAC;;;;;;;;;;;;;ACvB7B;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;ACtB3B;AAAA;AAAA;AAAwC;AACQ;;AAEhD;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA,4BAA4B,yDAAa;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,QAAQ,6DAAS;AACjB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;ACrC3B;AAAA;AAAgD;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA,cAAc,iEAAa;;AAEZ,sEAAO,EAAC;;;;;;;;;;;;;ACfvB;AAAA;AAAA;AAAoC;AACP;;AAE7B;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA,mBAAmB,2DAAO,mBAAmB,gDAAI;AACjD;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACf1B;AAAA;AAAA;AAA8C;AACjB;;AAE7B;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA,mBAAmB,gEAAY,mBAAmB,gDAAI;AACtD;;AAEe,8EAAe,EAAC;;;;;;;;;;;;;ACf/B;AAAA;AAAgD;;AAEhD;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA,mBAAmB,iEAAa;;AAEjB,2EAAY,EAAC;;;;;;;;;;;;;ACd5B;AAAA;AAAA;AAA4C;AACH;;AAEzC;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA,SAAS,+DAAW;AACpB,WAAW,8DAAU;AACrB,GAAG;AACH;;AAEe,4EAAa,EAAC;;;;;;;;;;;;;AClB7B;AAAA;AAAA;AAAsC;AACN;;AAEhC;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB,aAAa,EAAE;AACf;AACA;AACA,SAAS,4DAAQ;;AAEjB;AACA;;AAEA;AACA,oBAAoB,yDAAK;AACzB;AACA;AACA;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;ACvBvB;AAAA;AAAA;AAAwC;AACL;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA,SAAS,2DAAO,oBAAoB,6DAAS;AAC7C;;AAEe,6EAAc,EAAC;;;;;;;;;;;;;ACnB9B;AAAA;AAAA;AAAA;AAAkC;AACM;AACU;;AAElD;AACA;AACA;;AAEA;AACA,qBAAqB,kDAAM,GAAG,kDAAM;;AAEpC;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6DAAS;AACf,MAAM,kEAAc;AACpB;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;AC3B1B;AAAA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;ACbtB;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;AClBvB;AAAA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACZzB;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;ACjB3B;AAAA;AAAA;AAAA;AAAgD;AACR;AACQ;;AAEhD;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA,MAAM,iEAAa;AACnB,MAAM,iEAAa,QAAQ,qDAAS;AACpC;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;ACnB3B;AAAA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,8EAAe,EAAC;;;;;;;;;;;;;ACtB/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsC;AACU;AACQ;AAClB;AACE;AACF;;AAEtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA,8BAA8B,6DAAiB,GAAG,yDAAa;AAC/D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,4DAAQ,QAAQ,6DAAS;AACvC;AACA;AACA;AACA,YAAY,oDAAQ;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,4DAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4DAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,+EAAgB,EAAC;;;;;;;;;;;;;ACzEhC;AAAA;AAA0C;;AAE1C;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA,EAAE,8DAAU;AACZ;AACA,GAAG;AACH;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;ACpB5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgC;AACM;AACT;AACK;AACF;;AAEhC;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB,WAAW,MAAM;AACjB,aAAa,EAAE;AACf;AACA;AACA,SAAS,4DAAQ;AACjB,WAAW,0DAAM;AACjB,8CAA8C,yDAAK,CAAC,wDAAI;AACxD,oCAAoC,yDAAK;AACzC;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACvB1B;AAAA;AAAA;AAA0C;AACG;;AAE7C;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,SAAS,gEAAY,WAAW,8DAAU;AAC1C;;AAEe,8EAAe,EAAC;;;;;;;;;;;;;ACjB/B;AAAA;AAAA;AAA0C;AACG;;AAE7C;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,SAAS,gEAAY,WAAW,8DAAU;AAC1C;;AAEe,gFAAiB,EAAC;;;;;;;;;;;;;AChBjC;AAAA;AAAA;AAA0C;AACG;;AAE7C;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,SAAS,gEAAY,WAAW,8DAAU;AAC1C;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACjB1B;AAAA;AAAA;AAAoD;AACP;;AAE7C;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,QAAQ;AACnB;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,0CAA0C,gEAAY,YAAY,gEAAY;AAC9E;AACA;AACA,SAAS,mEAAe;AACxB;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;AC3B3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgC;AACY;AACF;AACI;AACZ;AACC;AACE;AACQ;;AAE7C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA,iBAAiB,2DAAO;AACxB,iBAAiB,2DAAO;AACxB,qCAAqC,0DAAM;AAC3C,qCAAqC,0DAAM;;AAE3C;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,4DAAQ;AAC3B,SAAS,4DAAQ;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iDAAK;AAC/B,wBAAwB,gEAAY;AACpC,QAAQ,+DAAW;AACnB,QAAQ,8DAAU;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA4B,iDAAK;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iDAAK;AAC7B,SAAS,gEAAY;AACrB;;AAEe,8EAAe,EAAC;;;;;;;;;;;;;AClF/B;AAAA;AAAA;AAAkC;AACW;;AAE7C;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,SAAS,gEAAY,WAAW,0DAAM;AACtC;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACjBzB;AAAA;AAAA;AAAgC;AACY;;AAE5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,sBAAsB,iDAAK;AAC3B;AACA;AACA;AACA;AACA,cAAc,+DAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;AC7D3B;AAAA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACXzB;AAAA;AAAA;AAAA;AAAA;AAAyC;AACH;AACD;AACC;;AAEtC;AACA;AACA;AACA;AACA,oCAAoC;;AAEpC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA,OAAO,4DAAQ,WAAW,4DAAQ;AAClC;AACA;AACA,gBAAgB,8DAAU;AAC1B,sBAAsB,4DAAQ;AAC9B;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;AC9C5B;AAAA;AAAA;AAA0C;AACG;;AAE7C;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,SAAS,gEAAY,WAAW,8DAAU;AAC1C;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;ACjB5B;AAAA;AAAA;AAAkC;AACW;;AAE7C;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,SAAS,gEAAY,WAAW,0DAAM;AACtC;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACjBzB;AAAA;AAAA;AAAA;AAA0C;AACL;AACQ;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,SAAS,gEAAY;AACrB,IAAI,4DAAQ,mCAAmC,8DAAU;AACzD;;AAEe,+EAAgB,EAAC;;;;;;;;;;;;;AC3DhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACgB;AACvB;AACF;AACE;;AAErC;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oDAAQ;AACnB;AACA;AACA,WAAW,2DAAO;AAClB,QAAQ,uEAAmB;AAC3B,QAAQ,+DAAW;AACnB;AACA,SAAS,4DAAQ;AACjB;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;AC9B5B;AAAA;AAAA;AAA4C;AACF;;AAE1C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA,OAAO,+DAAW;AAClB,WAAW,8DAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;AC7BxB;AAAA;AAAA;AAAA;AAAqC;AACO;AACE;;AAE9C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA,OAAO,4DAAQ;AACf,WAAW,gEAAY;AACvB;AACA,gBAAgB,+DAAW;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;AChC1B;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACT1B;AAAA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;ACbtB;AAAA;AAAA;AAAsC;AACK;;AAE3C;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA,eAAe,+DAAW;;AAE1B,EAAE,4DAAQ;AACV;AACA,GAAG;AACH;AACA;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;ACrBvB;AAAA;AAAA;AAAA;AAA4C;AACE;AACsB;;AAEpE;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA,kBAAkB,gEAAY;AAC9B;AACA,WAAW,2EAAuB;AAClC;AACA;AACA,gCAAgC,+DAAW;AAC3C;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;ACrB3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACjB;AACI;AACC;AAC0B;AACU;AACpC;;AAEhC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,aAAa,SAAS;AACtB;AACA;AACA,MAAM,yDAAK,UAAU,sEAAkB;AACvC,WAAW,2EAAuB,CAAC,yDAAK;AACxC;AACA;AACA,mBAAmB,uDAAG;AACtB;AACA,QAAQ,yDAAK;AACb,QAAQ,+DAAW;AACnB;AACA;;AAEe,kFAAmB,EAAC;;;;;;;;;;;;;AChCnC;AAAA;AAAoC;;AAEpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA,mBAAmB,2DAAO;AAC1B;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;ACnBxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgC;AACsB;AAClB;AACY;AACX;AACJ;AACG;;AAEpC;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,2DAAO;AACT,0BAA0B,iDAAK;AAC/B,QAAQ,4DAAQ;AAChB,MAAM,iEAAa;AACnB;AACA;AACA;AACA,qBAAqB,2DAAO;AAC5B;;AAEA;AACA;AACA;AACA,MAAM,oEAAgB;AACtB;AACA,GAAG,EAAE,kDAAM;AACX;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACzCzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsD;AACV;AACQ;AACZ;AACY;AACT;AACR;AACoB;AAClB;AACI;AACJ;AACU;AACF;AACT;AACW;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;AACA;AACA;AACA,iBAAiB,4DAAO;AACxB,iBAAiB,4DAAO;AACxB;;AAEA;AACA,IAAI,oEAAgB;AACpB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,gBAAgB,2DAAO;AACvB,2BAA2B,4DAAQ;AACnC,uCAAuC,iEAAY;;AAEnD;AACA;AACA,UAAU,2DAAO;AACjB;AACA;AACA,eAAe,qEAAiB;AAChC,mBAAmB,6DAAS;AAC5B;AACA;AACA;AACA,mBAAmB,+DAAW;AAC9B;AACA;AACA;AACA,mBAAmB,mEAAe;AAClC;AACA;AACA;AACA;AACA;AACA,aAAa,kEAAa,cAAc,+DAAW;AACnD;AACA,UAAU,+DAAW;AACrB,mBAAmB,kEAAa;AAChC;AACA,gBAAgB,6DAAQ,cAAc,8DAAU;AAChD,mBAAmB,mEAAe;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,oEAAgB;AAClB;;AAEe,4EAAa,EAAC;;;;;;;;;;;;;AC7F7B;AAAA;AAAoC;;AAEpC;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,2DAAO;AAChB;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;ACnBvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsC;AACQ;AACV;AACM;AACF;AACY;AACf;;AAErC;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,6BAA6B;AACxC,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA,cAAc,4DAAQ,iCAAiC,oDAAQ,GAAG,6DAAS,CAAC,wDAAY;;AAExF,eAAe,2DAAO;AACtB,mBAAmB,4DAAQ;AAC3B;AACA,KAAK;AACL,YAAY;AACZ,GAAG;;AAEH,SAAS,8DAAU;AACnB,WAAW,mEAAe;AAC1B,GAAG;AACH;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;ACjC3B;AAAA;AAAA;AAA0C;AACX;;AAE/B;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA,SAAS,8DAAU;AACnB,WAAW,yDAAK;AAChB,GAAG;AACH;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;AClBxB;AAAA;AAAA;AAAA;AAAoC;AACA;AACE;;AAEtC;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,2DAAO;;AAEvB;AACA,MAAM,2DAAO,SAAS,4DAAQ;AAC9B;AACA;AACA;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;AC7B1B;AAAA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;ACb5B;AAAA;AAAoC;;AAEpC;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,SAAS;AACtB;AACA;AACA;AACA,WAAW,2DAAO;AAClB;AACA;;AAEe,+EAAgB,EAAC;;;;;;;;;;;;;ACfhC;AAAA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEe,6EAAc,EAAC;;;;;;;;;;;;;ACb9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsC;AACM;AACQ;AACZ;AACA;;AAExC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA,6BAA6B,2DAAe,GAAG,uDAAW;AAC1D;AACA;AACA;;AAEA;AACA,aAAa,6DAAS;AACtB;AACA;AACA,WAAW,4DAAQ,QAAQ,6DAAS;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;AClD3B;AAAA;AAAA;AAAwC;AACJ;;AAEpC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,2DAAO;AACjB;AACA,OAAO;AACP,QAAQ,6DAAS;AACjB;AACA;AACA;AACA;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACpC1B;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACjB1B;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;AC3BzB;AAAA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,WAAW,QAAQ;AACnB;AACA,WAAW,SAAS;AACpB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACtB1B;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;AClC1B;AAAA;AAAA;AAAA;AAAqC;AACC;AACM;;AAE5C;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA,SAAS,+DAAW,CAAC,4DAAQ,cAAc,oDAAQ;AACnD;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;AChBxB;AAAA;AAAA;AAA4C;AACX;;AAEjC;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,EAAE;AACf;AACA;AACA,SAAS,+DAAW,CAAC,0DAAM;AAC3B;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACd1B;AAAA;AAAA;AAAA;AAAwC;AACI;AACX;;AAEjC;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA,cAAc,0DAAM;AACpB,SAAS,+DAAW,QAAQ,6DAAS;AACrC;;AAEe,6EAAc,EAAC;;;;;;;;;;;;;ACjB9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACN;AACF;AACC;AACL;;AAEhC;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB,WAAW,EAAE;AACb,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA,OAAO,4DAAQ;AACf;AACA;AACA,SAAS,4DAAQ;;AAEjB;AACA;AACA;AACA;;AAEA;AACA,cAAc,yDAAK;AACnB;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,4DAAQ;AAC3B;AACA,aAAa,2DAAO,2BAA2B;AAC/C;AACA;AACA,IAAI,+DAAW;AACf;AACA;AACA;AACA;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;AC9CvB;AAAA;AAAA;AAAqC;AACD;;AAEpC;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,aAAa,SAAS;AACtB;AACA,mBAAmB,mDAAO,GAAG,oDAAQ;AACrC,EAAE,mDAAO;AACT;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;AChB3B;AAAA;AAAA;AAAA;AAAqC;AACa;AACb;;AAErC;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA,uBAAuB,0DAAc,GAAG,oDAAQ;AAChD,SAAS,kEAAc;AACvB;AACA;AACA,aAAa,4DAAQ;AACrB;AACA,GAAG;AACH;;AAEe,8EAAe,EAAC;;;;;;;;;;;;;ACrB/B;AAAA;AAAA;AAA4C;AACX;;AAEjC;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,MAAM;AACnB;AACA;AACA,SAAS,+DAAW,CAAC,0DAAM;AAC3B;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;ACd3B;AAAA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;AC9BzB;AAAA;AAAsC;;AAEtC;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA,EAAE,4DAAQ;AACV;AACA;AACA,GAAG;AACH;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;ACrBxB;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACpB1B;AAAA;AAAA;AAAA;AAAwD;AACnB;AACA;;AAErC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,EAAE;AACb,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gCAAgC,4DAAQ;AACxC;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS,qEAAiB,eAAe,oDAAQ;AACjD;;AAEe,8EAAe,EAAC;;;;;;;;;;;;;ACzC/B;AAAA;AAAqC;;AAErC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA,WAAW,MAAM;AACjB,WAAW,EAAE;AACb,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,4DAAQ;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4DAAQ;;AAE9B;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEe,gFAAiB,EAAC;;;;;;;;;;;;;AC/DjC;AAAA;AAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,sDAAE;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEe,6EAAc,EAAC;;;;;;;;;;;;;AC7B9B;AAAA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;ACvBvB;AAAA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACnBzB;AAAA;AAAqC;;AAErC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,MAAM,4DAAQ;AACd;AACA;AACA;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;ACvB5B;AAAA;AAAsC;;AAEtC;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA,SAAS,4DAAQ;AACjB;AACA,GAAG;AACH;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;ACjB3B;AAAA;AAAA;AAAA;AAAA;AAAkC;AACI;AACH;AACE;;AAErC;AACA;;AAEA;AACA,kBAAkB,kDAAM,GAAG,kDAAM;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,2DAAO;AACb;AACA,WAAW,4DAAQ;AACnB;AACA,MAAM,4DAAQ;AACd;AACA;AACA;AACA;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;ACpC5B;AAAA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACbzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsC;AACU;AACQ;AAClB;AACE;AACE;;AAE1C;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA,iBAAiB,yDAAa;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,6DAAiB;AAChC;AACA;AACA,gCAAgC,6DAAS;AACzC;AACA,aAAa,8DAAU;AACvB;AACA;AACA,eAAe,oDAAQ;AACvB,eAAe,oDAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;ACvExB;AAAA;AAAA;AAAA;AAAA;AAAsC;AACT;AACK;AACF;;AAEhC;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB,aAAa,QAAQ;AACrB;AACA;AACA,SAAS,4DAAQ;AACjB,WAAW,0DAAM;AACjB,yCAAyC,yDAAK,CAAC,wDAAI;AACnD;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACnBzB;AAAA;AAAA;AAAoC;AACA;;AAEpC;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA,SAAS,2DAAO,uBAAuB,2DAAO;AAC9C;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACjB1B;AAAA;AAAsC;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA,SAAS,4DAAQ;AACjB;AACA,GAAG;AACH;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;AClB1B;AAAA;AAAwC;;AAExC;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAM,6DAAS;AACf,MAAM,6DAAS;AACf;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACzBzB;AAAA;AAAA;AAAA;AAA4C;AACJ;AACI;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,MAAM;AACjB,aAAa,EAAE;AACf;AACA;AACA;AACA,wBAAwB,uDAAW;AACnC;AACA;AACA,SAAS,+DAAW;AACpB,6CAA6C,6DAAS;AACtD,GAAG;AACH;;AAEe,+EAAgB,EAAC;;;;;;;;;;;;;ACxBhC;AAAA;AAAA;AAAA;AAAkD;AACN;AACN;;AAEtC;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA,oBAAoB,4DAAQ;AAC5B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,kEAAc;AACtC;AACA;AACA;AACA,SAAS,4DAAQ,CAAC,+DAAW;AAC7B;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;ACnCvB;AAAA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe,4EAAa,EAAC;;;;;;;;;;;;;ACtB7B;AAAA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;ACZxB;AAAA;AAAuD;;AAEvD;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,aAAa;AAC1B;AACA;AACA,SAAS,qEAAiB;AAC1B;;AAEe,kFAAmB,EAAC;;;;;;;;;;;;;ACbnC;AAAA;AAAqC;;AAErC;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,SAAS;AACtB;AACA;AACA,8CAA8C,oDAAQ;AACtD;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;ACb5B;AAAA;AAAA;AAAA;AAAA;AAAmC;AACH;AACc;AACT;;AAErC;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA,MAAM,2DAAO;AACb;AACA;AACA,SAAS,yDAAK,4BAA4B,gEAAY,CAAC,4DAAQ;AAC/D;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;ACpBxB;AAAA;AAAsC;;AAEtC;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA,eAAe,oDAAQ;;AAER,uEAAQ,EAAC;;;;;;;;;;;;;ACbxB;AAAA;AAAwC;;AAExC;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA,6CAA6C,6DAAS;AACtD;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACjBzB;AAAA;AAA4C;;AAE5C;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA,oBAAoB,+DAAW;AAC/B;AACA;;AAEe,4EAAa,EAAC;;;;;;;;;;;;;AClB7B;AAAA;AAA4C;;AAE5C;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA,6BAA6B,+DAAW;AACxC;AACA;;AAEe,8EAAe,EAAC;;;;;;;;;;;;;ACnB/B;AAAA;AAA0C;;AAE1C;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,aAAa,YAAY;AACzB;AACA;AACA;AACA,MAAM,sDAAU,iBAAiB,sDAAU;AAC3C;AACA;;AAEe,+EAAgB,EAAC;;;;;;;;;;;;;ACfhC;AAAA;AAA8B;;AAE9B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,6BAA6B,gDAAI;AACjC;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;;AClC3B;AAAA;AAAsD;;AAEtD;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA,wBAAwB,oEAAgB;AACxC;AACA;;AAEe,4EAAa,EAAC;;;;;;;;;;;;;ACf7B;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;AChB3B;AAAA;AAAkC;;AAElC;AACA,kBAAkB,kDAAM,GAAG,kDAAM;AACjC;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;ACjB3B;AAAA;AAAsD;;AAEtD;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA,wBAAwB,oEAAgB;AACxC;AACA;;AAEe,8EAAe,EAAC;;;;;;;;;;;;;ACf/B;AAAA;AAAqC;;AAErC;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4DAAQ;;AAE9B;AACA;AACA;AACA,sBAAsB,4DAAQ;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,+EAAgB,EAAC;;;;;;;;;;;;;ACxChC;AAAA;AAAsD;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,mBAAmB;AAC9B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,oEAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,8EAAe,EAAC;;;;;;;;;;;;;AC3C/B;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,YAAY,QAAQ;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;ACtC3B;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,YAAY,QAAQ;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,+EAAgB,EAAC;;;;;;;;;;;;;ACxChC;AAAA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACnBzB;AAAA;AAAA;AAA4C;AACQ;;AAEpD;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,OAAO,WAAW;AAC7B,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA,wBAAwB;;AAExB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM,mEAAe;AACrB,KAAK;AACL,MAAM,+DAAW;AACjB;AACA;AACA;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACvC1B;AAAA;AAAA;AAA0C;AACA;;AAE1C;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO,WAAW;AAC7B,aAAa,OAAO;AACpB;AACA;AACA,SAAS,8DAAU,SAAS,8DAAU;AACtC;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;ACf3B;AAAA;AAAA;AAA0C;AACI;;AAE9C;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO,WAAW;AAC7B,aAAa,OAAO;AACpB;AACA;AACA,SAAS,8DAAU,SAAS,gEAAY;AACxC;;AAEe,4EAAa,EAAC;;;;;;;;;;;;;ACf7B;AAAA;AAA8B;;AAE9B;AACA,iBAAiB,gDAAI;;AAEN,yEAAU,EAAC;;;;;;;;;;;;;ACL1B;AAAA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;ACpB5B;AAAA;AAAA;AAAA;AAAA;AAAoD;AACF;AACJ;AACX;;AAEnC;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA,eAAe,2DAAO,eAAe,2DAAe,GAAG,0DAAc;AACrE;;AAEA,oCAAoC,gEAAY;AAChD;AACA;;AAEe,+EAAgB,EAAC;;;;;;;;;;;;;ACtBhC;AAAA;AAAA;AAAsC;AACY;;AAElD;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA,SAAS,4DAAQ;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,kEAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEe,6EAAc,EAAC;;;;;;;;;;;;;ACpC9B;AAAA;AAA2C;;AAE3C;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,+DAAW;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,6EAAc,EAAC;;;;;;;;;;;;;AC/B9B;AAAA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,4EAAa,EAAC;;;;;;;;;;;;;ACxB7B;AAAA;AAAA;AAA0C;AACZ;;AAE9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,aAAa,SAAS;AACtB;AACA;AACA;AACA,aAAa,8DAAU;;AAEvB;AACA,+BAA+B,gDAAI;AACnC;AACA;AACA;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;AC3B1B;AAAA;AAAA;AAAA;AAAA;AAAwC;AACE;AACM;AACX;;AAErC;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA,aAAa,4DAAQ;;AAErB,qBAAqB,8DAAU;AAC/B,QAAQ,iEAAa;AACrB;;AAEA;AACA;AACA;;AAEA;AACA,QAAQ,6DAAS;AACjB;;AAEA;AACA;AACA;;AAEe,8EAAe,EAAC;;;;;;;;;;;;;AChC/B;AAAA;AAAA;AAAA;AAA4C;AACX;AACF;;AAE/B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA,WAAW,+DAAW,CAAC,yDAAK,CAAC,0DAAM;AACnC;AACA;;AAEe,+EAAgB,EAAC;;;;;;;;;;;;;ACvBhC;AAAA;AAAA;AAA0C;AACL;;AAErC;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8DAAU;AAChC;;AAEA;AACA;AACA,WAAW,4DAAQ;AACnB;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACpC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgC;AACU;AACI;AACE;AACR;AACU;AACpB;;AAE9B;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA,aAAa,8DAAU;;AAEvB;AACA;AACA;AACA;AACA,sBAAsB,6DAAS;;AAE/B;AACA;AACA;AACA;AACA;AACA,QAAQ,kEAAc;;AAEtB;AACA;AACA,aAAa,iEAAa;AAC1B,uBAAuB,wDAAY;AACnC;AACA;AACA,+BAA+B,gDAAI;AACnC,WAAW,yDAAK;AAChB;AACA;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;AC7C3B;AAAA;AAAA;AAAA;AAA8C;AACH;AACd;;AAE7B;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA,SAAS,+DAAW;AACpB,qBAAqB,gEAAY;AACjC,mBAAmB,wDAAI;AACvB,iCAAiC,+CAA+C;AAChF;AACA;AACA;AACA;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACxB1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACV;AACF;AACQ;AACT;AACO;;AAE1C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA,SAAS,4DAAQ;AACjB;AACA;AACA,iBAAiB,yDAAa;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,+DAAW;AAC3C,0BAA0B,yDAAa;AACvC;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,+DAAW;AAChC,yCAAyC,2DAAO;;AAEhD,kBAAkB,8DAAU;AAC5B;AACA;AACA;AACA,0BAA0B,+DAAW;AACrC,OAAO;AACP,uCAAuC,8DAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC,2DAAO;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;AC7E1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACU;AACR;AACJ;AACM;AACR;AACJ;AACc;AACpB;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,WAAW,MAAM;AACjB;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,8DAAU;;AAE/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,6DAAS;AACjC,yBAAyB,gEAAY;AACrC;AACA;AACA,aAAa,+DAAW;AACxB;AACA;AACA,aAAa,oEAAgB;AAC7B;AACA;AACA;AACA,uBAAuB,kEAAc;AACrC,aAAa,iEAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,2DAAO;AACpB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,yBAAyB,gDAAI;AAC7B,mBAAmB,8DAAU;AAC7B;AACA;AACA;AACA;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;AC3F5B;AAAA;AAA8C;;AAE9C;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA,WAAW,gEAAY,yCAAyC;AAChE;AACA;;AAEe,6EAAc,EAAC;;;;;;;;;;;;;AChB9B;AAAA;AAAA;AAA8C;AACA;;AAE9C;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gEAAY;AAC5B,gBAAgB,gEAAY;AAC5B,OAAO;AACP,gBAAgB,gEAAY;AAC5B,gBAAgB,gEAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEe,kFAAmB,EAAC;;;;;;;;;;;;;ACrCnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgC;AACM;AACQ;AACR;AACE;AACF;;AAEtC;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA,SAAS,4DAAQ;AACjB,gBAAgB,4DAAQ,YAAY,6DAAS,CAAC,wDAAY;AAC1D,WAAW,4DAAQ;AACnB;AACA;AACA,eAAe,yDAAK;AACpB,OAAO;AACP,KAAK;AACL,GAAG;AACH;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;AC1B1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACI;AACN;AACE;AACA;AACM;;AAEhD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA,sCAAsC,gEAAY;;AAElD;AACA;AACA,yBAAyB,8DAAU;AACnC;AACA,eAAe,8DAAU,4BAA4B,8DAAU;AAC/D,SAAS,8DAAU;AACnB,MAAM,6DAAS,CAAC,iEAAa;AAC7B;AACA;;AAEe,4EAAa,EAAC;;;;;;;;;;;;;AChC7B;AAAA;AAAA;AAAA;AAAgC;AACU;AACZ;;AAE9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,WAAW,MAAM;AACjB;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA,aAAa,8DAAU;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gDAAI;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yDAAK;AAChB;AACA;AACA;;AAEe,4EAAa,EAAC;;;;;;;;;;;;;AC1C7B;AAAA;AAAA;AAAA;AAAwC;AACU;AACb;;AAErC;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA,2CAA2C,kEAAc;AACzD;AACA;AACA;AACA,YAAY,4DAAQ;AACpB;AACA;AACA;AACA,KAAK;AACL,YAAY,4DAAQ;AACpB;AACA,yDAAyD,4DAAQ;AACjE,WAAW,6DAAS;AACpB;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;AC7B3B;AAAA;AAAA;AAAA;AAA0C;AACN;AACgB;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,MAAM;AACjB;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM,8DAAU;AAChB,IAAI,2DAAO;AACX;AACA;AACA,SAAS,mEAAe;AACxB;;AAEe,4EAAa,EAAC;;;;;;;;;;;;;ACvD7B;AAAA;AAAqC;;AAErC;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA,cAAc,4DAAQ;AACtB,cAAc,4DAAQ;AACtB;AACA;AACA;AACA;;AAEe,wFAAyB,EAAC;;;;;;;;;;;;;ACnBzC;AAAA;AAAA;AAAA;AAAA;AAA8B;AACS;AACF;AACA;;AAErC;AACA,qBAAqB,gDAAI;AACzB;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA,aAAa,4DAAQ;AACrB,kDAAkD,6DAAS;AAC3D;AACA;AACA;AACA,kBAAkB,4DAAQ;AAC1B;;AAEA,cAAc,4DAAQ;AACtB;AACA;AACA;AACA;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;AClC3B;AAAA;AAAA;AAAA;AAA4B;AACC;AACa;;AAE1C;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA,kBAAkB,+CAAG,SAAS,8DAAU,KAAK,+CAAG,4BAA4B,gDAAI;AAChF,aAAa,+CAAG;AAChB;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;AClBzB;AAAA;AAAA;AAAA;AAAA;AAA4C;AACV;AACQ;AACA;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA,cAAc,0DAAM;AACpB;AACA,aAAa,8DAAU;AACvB;AACA;AACA,aAAa,8DAAU;AACvB;AACA,WAAW,+DAAW;AACtB;AACA;;AAEe,4EAAa,EAAC;;;;;;;;;;;;;AC7B7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACF;AACE;AACE;AACE;AACZ;AACI;AACJ;AACgB;AACb;;AAEvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,6DAAS;AACrD,wCAAwC,6DAAS;AACjD;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qCAAqC,2DAAO;;AAE5C;AACA;AACA;AACA;;AAEA;AACA,IAAI,6DAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,8DAAU;AAC3B,GAAG;AACH,aAAa,+DAAW;AACxB,GAAG;AACH,aAAa,iEAAa;AAC1B,GAAG;AACH,aAAa,wDAAY;AACzB;AACA,sBAAsB,uDAAW,GAAG,mDAAO;AAC3C,SAAS,mEAAe;AACxB;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACzG1B;AAAA;AAAyB;;AAEzB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA,OAAO,sDAAE;AACT;AACA;AACA;AACA;;AAEe,qFAAsB,EAAC;;;;;;;;;;;;;AC5BtC;AAAA;AAAA;AAAwC;AACH;;AAErC;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,aAAa,EAAE;AACf;AACA;AACA,MAAM,4DAAQ,cAAc,4DAAQ;AACpC;AACA;AACA,IAAI,6DAAS;AACb;AACA;AACA;AACA;;AAEe,kFAAmB,EAAC;;;;;;;;;;;;;AC3BnC;AAAA;AAA+C;;AAE/C;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA,SAAS,iEAAa;AACtB;;AAEe,8EAAe,EAAC;;;;;;;;;;;;;ACf/B;AAAA;AAAkD;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA,mBAAmB,kEAAc;;AAElB,2EAAY,EAAC;;;;;;;;;;;;;ACtE5B;AAAA;AAAwC;;AAExC;AACA;AACA,eAAe,6DAAS;AACxB,WAAW,QAAQ;AACnB;AACA,GAAG;AACH,CAAC;;AAEc,6EAAc,EAAC;;;;;;;;;;;;;ACV9B;AAAA;AAAA;AAAA;AAAsC;AACE;AACF;;AAEtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,oDAAQ;;AAE9D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,6DAAS;AACpB,iBAAiB,4DAAQ;AACzB;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;AClF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACQ;AACjB;AACmB;AACF;AACA;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,kDAAM,GAAG,kDAAM;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,sDAAU,cAAc,sDAAU;AAC3D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,sDAAE;;AAEf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,sDAAU;;AAE9B;AACA;AACA,4BAA4B,sDAAU;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,+DAAW;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;AC/G1B;AAAA;AAA0C;;AAE1C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA,iBAAiB,8DAAU;AAC3B;AACA,iBAAiB,8DAAU;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;ACxF5B;AAAA;AAAkD;;AAElD;AACA;AACA,aAAa;AACb,YAAY;AACZ,YAAY;AACZ,cAAc;AACd,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA,qBAAqB,kEAAc;;AAEpB,6EAAc,EAAC;;;;;;;;;;;;;ACpB9B;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEe,+EAAgB,EAAC;;;;;;;;;;;;;ACrBhC;AAAA;AAAA;AAAA;AAAmC;AACG;AACM;;AAE5C;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA,SAAS,+DAAW,CAAC,4DAAQ,kBAAkB,mDAAO;AACtD;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;ACfxB;AAAA;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;;ACH1B;AAAA;AAAA;AAAA;AAAkD;AACR;AACb;;AAE7B;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA,SAAS,kEAAc,SAAS,gDAAI,EAAE,sDAAU;AAChD;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACf1B;AAAA;AAAA;AAAA;AAAkD;AACJ;AACb;;AAEjC;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA,SAAS,kEAAc,SAAS,kDAAM,EAAE,wDAAY;AACpD;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;AChB5B;AAAA;AAAA;AAAoC;AACP;;AAE7B;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,EAAE;AACf;AACA,eAAe,mDAAO,GAAG,gDAAI;AAC7B,SAAS,mDAAO;AAChB;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;ACdvB;AAAA;AAAwC;;AAExC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA,cAAc,qDAAS;AACvB,mCAAmC,qDAAS;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;AC9B3B;AAAA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACZzB;AAAA;AAAwC;;AAExC;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA,SAAS,6DAAS;AAClB;AACA;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACjB1B;AAAA;AAAA;AAA0D;AAC7B;;AAE7B;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA,eAAe,wDAAI;AACnB;;AAEA;AACA;AACA;;AAEA,kCAAkC,sEAAkB;AACpD;AACA;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;ACvB5B;AAAA;AAAA;AAA8C;AACR;;AAEtC;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA,cAAc,4DAAQ;AACtB,SAAS,gEAAY;AACrB;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;AChBzB;AAAA;AAAoC;;AAEpC;AACA,mBAAmB,2DAAO;;AAEX,2EAAY,EAAC;;;;;;;;;;;;;ACL5B;AAAA;AAAkC;;AAElC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,kDAAM,GAAG,kDAAM;;AAEpC;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;AC7CzB;AAAA;AAAA;AAA4C;AACL;;AAEvC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA,qCAAqC,qDAAS;AAC9C;AACA;AACA;AACA;AACA,SAAS,+DAAW;AACpB;AACA,GAAG;AACH;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;AC7B1B;AAAA;AAAA;AAAA;AAAA;AAAwC;AACM;AACJ;AACH;;AAEvC;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA,uCAAuC,qDAAS;AAChD;AACA;AACA,IAAI,6DAAS,SAAS,8DAAU;AAChC,aAAa,gEAAY;AACzB;AACA;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;ACxB5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsC;AACV;AACQ;AACR;AACQ;AACM;AACJ;;AAEtC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,yBAAyB,4DAAQ,CAAC,oDAAQ;AAC1C,oBAAoB,4DAAQ,CAAC,+CAAG;AAChC,wBAAwB,4DAAQ,CAAC,mDAAO;AACxC,oBAAoB,4DAAQ,CAAC,+CAAG;AAChC,wBAAwB,4DAAQ,CAAC,mDAAO;;AAExC;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA,aAAa,sDAAU;;AAEvB;AACA,KAAK,oDAAQ,eAAe,oDAAQ;AACpC,KAAK,+CAAG,eAAe,+CAAG;AAC1B,KAAK,mDAAO,WAAW,mDAAO;AAC9B,KAAK,+CAAG,eAAe,+CAAG;AAC1B,KAAK,mDAAO,eAAe,mDAAO;AAClC;AACA,iBAAiB,8DAAU;AAC3B;AACA,4BAA4B,4DAAQ;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;ACzDtB;AAAA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;ACZxB;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sCAAsC;AACtC,oCAAoC;AACpC,2DAA2D;AAC3D,6DAA6D;AAC7D;AACA;AACA,UAAU;AACV;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;AChCvB;AAAA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEe,6EAAc,EAAC;;;;;;;;;;;;;AChB9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsC;AACK;AACR;AACC;AACC;AACL;;AAEhC;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA;AACA,SAAS,4DAAQ;;AAEjB;AACA;AACA;;AAEA;AACA,cAAc,yDAAK;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,4DAAQ,YAAY,2DAAO;AAChD,KAAK,2DAAO,YAAY,+DAAW;AACnC;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;ACtCvB;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACzB1B;AAAA;AACA,yCAAyC,EAAE;;AAE3C;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEe,6EAAc,EAAC;;;;;;;;;;;;;ACd9B;AAAA;AAA8C;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,wDAAY,GAAG,gEAAY;AAC7C;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACdzB;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;AChB1B;AAAA;AAA8C;;AAE9C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA,MAAM,wDAAY;AAClB;AACA;AACA;AACA;AACA;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;AC7BvB;AAAA;AAA8C;;AAE9C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA,SAAS,wDAAY;AACrB;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;ACtBvB;AAAA;AAA8C;;AAE9C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,eAAe,wDAAY;AAC3B;AACA;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;ACtBvB;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,6EAAc,EAAC;;;;;;;;;;;;;ACzB9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsD;AACN;AACJ;AACA;AACQ;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,aAAa,oEAAgB;;AAE7B;AACA;AACA;;AAEA;AACA,aAAa,iEAAa;;AAE1B;AACA;AACA;AACA,aAAa,mEAAe;;AAE5B;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa,+DAAW;;AAExB;AACA;;AAEA;AACA,aAAa,+DAAW;AACxB;AACA;;AAEe,6EAAc,EAAC;;;;;;;;;;;;;AC5E9B;AAAA;AAAA;AAAA;AAA0C;AACI;AACF;;AAE5C;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA,sDAAsD,+DAAW;AACjE,MAAM,8DAAU,CAAC,gEAAY;AAC7B;AACA;;AAEe,8EAAe,EAAC;;;;;;;;;;;;;ACjB/B;AAAA;AACA,uBAAuB;;AAEvB;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;;AAEe,gFAAiB,EAAC;;;;;;;;;;;;;ACtBjC;AAAA;AAAA;AAAA;AAAkC;AACS;AACR;;AAEnC;AACA,uBAAuB,kDAAM,GAAG,kDAAM;;AAEtC;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,SAAS,2DAAO,WAAW,+DAAW;AACtC;AACA;;AAEe,4EAAa,EAAC;;;;;;;;;;;;;ACnB7B;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;ACxBvB;AAAA;AAAA;AAAA;AAAA;AAAyB;AACkB;AACP;AACC;;AAErC;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA,OAAO,4DAAQ;AACf;AACA;AACA;AACA;AACA,WAAW,+DAAW,YAAY,2DAAO;AACzC;AACA;AACA,WAAW,sDAAE;AACb;AACA;AACA;;AAEe,6EAAc,EAAC;;;;;;;;;;;;;AC7B9B;AAAA;AAAA;AAAmC;AACE;;AAErC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA,MAAM,2DAAO;AACb;AACA;AACA;AACA;AACA,uBAAuB,4DAAQ;AAC/B;AACA;AACA;AACA;AACA;;AAEe,oEAAK,EAAC;;;;;;;;;;;;;AC5BrB;AAAA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACdzB;AAAA;AAAA;AAAA;AAAA;AAA4C;AACR;AACQ;AACJ;;AAExC;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA,iBAAiB,+DAAW;AAC5B,cAAc,yDAAM;;AAEpB,kDAAkD,uDAAW;AAC7D;AACA;AACA;AACA;AACA;AACA,aAAa,2DAAO;AACpB;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;AC3B1B;AAAA;AAAA;AAAA;AAA0C;AACD;AACF;;AAEvC;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA,iBAAiB,sDAAU,GAAG,sDAAU,GAAG,qDAAS;;AAErC,yEAAU,EAAC;;;;;;;;;;;;;ACb1B;AAAA;AAA0C;;AAE1C;AACA;AACA,0BAA0B,sDAAU,IAAI,sDAAU,SAAS,sDAAU;AACrE;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;ACnBxB;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;ACjB3B;AAAA;AAAqC;;AAErC;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA,6BAA6B,4DAAQ;AACrC;;AAEe,iFAAkB,EAAC;;;;;;;;;;;;;ACdlC;AAAA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe,8EAAe,EAAC;;;;;;;;;;;;;ACjB/B;AAAA;AAAA;AAA4C;AACJ;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA,mBAAmB,uDAAW;AAC9B,uBAAuB,6DAAS;AAChC;AACA;AACA,yBAAyB,6DAAS;AAClC;AACA,qBAAqB,6DAAS;AAC9B;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACtBzB;AAAA;AAA4C;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA,qBAAqB,uDAAW;AAChC;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;ACtB3B;AAAA;AAAA;AAAA;AAAsD;AAClB;AACD;;AAEnC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA,cAAc,2DAAO;AACrB;AACA;AACA,aAAa,2DAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,oEAAgB;AAC3B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACpEzB;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,6EAAc,EAAC;;;;;;;;;;;;;ACZ9B;AAAA;AAA8C;;AAE9C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA,cAAc,gEAAY;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEe,8EAAe,EAAC;;;;;;;;;;;;;AClC/B;AAAA;AAA8C;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA,cAAc,gEAAY;;AAE1B;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;AClB5B;AAAA;AAA8C;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA,SAAS,gEAAY;AACrB;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;ACf5B;AAAA;AAA8C;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA,cAAc,gEAAY;;AAE1B;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;ACzB5B;AAAA;AAAA;AAAA;AAA8B;AACU;AACZ;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gDAAI;AACpB,gBAAgB,+CAAG,IAAI,qDAAS;AAChC,kBAAkB,gDAAI;AACtB;AACA;;AAEe,4EAAa,EAAC;;;;;;;;;;;;;ACpB7B;AAAA;AAA0C;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA,eAAe,8DAAU;AACzB;AACA;AACA;;AAEe,6EAAc,EAAC;;;;;;;;;;;;;ACjB9B;AAAA;AAA0C;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA,SAAS,8DAAU;AACnB;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;ACf3B;AAAA;AAA0C;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA,SAAS,8DAAU;AACnB;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;ACf3B;AAAA;AAA0C;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA,aAAa,8DAAU;AACvB;;AAEA;AACA;AACA;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;ACrB3B;AAAA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACjB1B;AAAA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,sFAAuB,EAAC;;;;;;;;;;;;;ACnBvC;AAAA;AAAmC;;AAEnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA,eAAe,2DAAO;AACtB;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEe,4EAAa,EAAC;;;;;;;;;;;;;ACzB7B;AAAA;AAAA;AAAA;AAA4C;AACU;AACJ;;AAElD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,+DAAW;AACpC,yBAAyB,kEAAc;AACvC;AACA;AACA;AACA;AACA;AACA,yBAAyB,oEAAgB;AACzC,yBAAyB,kEAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACzFzB;AAAA;AAAoC;;AAEpC;AACA,cAAc,mDAAO,QAAQ,mDAAO;;AAErB,sEAAO,EAAC;;;;;;;;;;;;;ACLvB;AAAA;AAAwC;;AAExC;AACA,mBAAmB,6DAAS;;AAEb,2EAAY,EAAC;;;;;;;;;;;;;ACL5B;AAAA;AAAoC;;AAEpC;AACA,iBAAiB,2DAAO;;AAET,yEAAU,EAAC;;;;;;;;;;;;;ACL1B;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;ACnB5B;AAAA;AAA0C;;AAE1C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,mCAAmC,sDAAU;;AAE7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH,CAAC;;AAEc,uEAAQ,EAAC;;;;;;;;;;;;;;AC7BxB;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEe,6EAAc,EAAC;;;;;;;;;;;;;ACrB9B;AAAA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;ACdvB;AAAA;AAAgC;;AAEhC;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yDAAK;AAChB;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;ACnCxB;AAAA;AAAA;AAAoC;AACI;;AAExC;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,aAAa,EAAE;AACf;AACA;AACA,oCAAoC,2DAAO,SAAS,6DAAS;AAC7D;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;ACftB;AAAA;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;ACHxB;AAAA;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACH1B;AAAA;AACA;;AAEe,4EAAa,EAAC;;;;;;;;;;;;;ACH7B;AAAA;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACHzB;AAAA;AAAA;AAAwC;AACJ;;AAEpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA,iBAAiB,6DAAS;;AAE1B;AACA;AACA,oBAAoB,2DAAO;AAC3B;AACA;AACA;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;AC5BvB;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,EAAE;AACb,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,6EAAc,EAAC;;;;;;;;;;;;;AC5B9B;AAAA;AAA0C;;AAE1C;AACA;;AAEA;AACA,WAAW,sDAAU;;AAEN,mEAAI,EAAC;;;;;;;;;;;;;ACRpB;AAAA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;ACpBvB;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;AClB3B;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;ACb3B;AAAA;AAAA;AAA4C;AACN;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,aAAa,SAAS;AACtB;AACA,cAAc,4DAAQ,CAAC,uDAAW;;AAEnB,sEAAO,EAAC;;;;;;;;;;;;;ACnBvB;AAAA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACjB1B;AAAA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACjB1B;AAAA;AAAA;AAAoD;AACd;;AAEtC;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA,kBAAkB,4DAAQ,CAAC,2DAAe;;AAE3B,0EAAW,EAAC;;;;;;;;;;;;;ACb3B;AAAA;AAAA;AAAA;AAAA;AAAkD;AACM;AACZ;AACY;;AAExD;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA,SAAS,+DAAW,UAAU,qEAAiB,SAAS,qEAAiB,CAAC,kEAAc;AACxF;;AAEe,8EAAe,EAAC;;;;;;;;;;;;;ACpB/B;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;ACpCxB;AAAA;AAA0C;;AAE1C;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,8DAAU;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;AC3B3B;AAAA;AAAwC;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,qDAAS;AAC/B;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACd1B;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;ACjB3B;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;ACbxB;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;ACbxB;AAAA;AAAA;AAAA;AAAwC;AACZ;AACU;;AAEtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA,sBAAsB,qDAAS;AAC/B;AACA,SAAS,+CAAG;AACZ;AACA;AACA;AACA;AACA,+BAA+B,oDAAQ;AACvC;AACA;AACA;AACA;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;ACjCxB;AAAA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,4EAAa,EAAC;;;;;;;;;;;;;ACtB7B;AAAA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,gFAAiB,EAAC;;;;;;;;;;;;;ACpBjC;AAAA;AAAA;AAAA;AAAwC;AACE;AACE;;AAE5C;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA,SAAS,8DAAU;AACnB,MAAM,+DAAW;AACjB,MAAM,6DAAS;AACf;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACjB1B;AAAA;AAAA;AAAA;AAA8C;AACJ;AACQ;;AAElD;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA,SAAS,8DAAU;AACnB,MAAM,kEAAc;AACpB,MAAM,gEAAY;AAClB;;AAEe,4EAAa,EAAC;;;;;;;;;;;;;ACjB7B;AAAA;AAAgD;;AAEhD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA,mBAAmB,iEAAa;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAEc,2EAAY,EAAC;;;;;;;;;;;;;AC1B5B;AAAA;AAAqC;;AAErC;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,cAAc;AAC3B;AACA;AACA,kCAAkC,4DAAQ;AAC1C;AACA;AACA;AACA;AACA;;AAEe,oEAAK,EAAC;;;;;;;;;;;;;ACpBrB;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;ACzBxB;AAAA;AAAkD;;AAElD;AACA;AACA,QAAQ;AACR,OAAO;AACP,OAAO;AACP,SAAS;AACT,QAAQ;AACR;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA,uBAAuB,kEAAc;;AAEtB,+EAAgB,EAAC;;;;;;;;;;;;;ACpBhC;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,EAAE;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;AC3C3B;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,EAAE;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEe,6EAAc,EAAC;;;;;;;;;;;;;ACvC9B;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,EAAE;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;ACpE5B;AAAA;AAAA;AAAwC;AACQ;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA,EAAE,6DAAS;AACX;AACA,gCAAgC,iEAAa;AAC7C;AACA;AACA,GAAG;AACH;AACA;;AAEe,gFAAiB,EAAC;;;;;;;;;;;;;AC7CjC;AAAA;AAAA;AAAA;AAA4C;AACI;AACR;;AAExC;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA,yBAAyB,uDAAW;AACpC;AACA;AACA,mBAAmB,yDAAa;AAChC,uBAAuB,6DAAS;AAChC;AACA;AACA;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;ACtB5B;AAAA;AAA4D;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,UAAU,uEAAmB;AAC7B;AACA,CAAC;;AAEc,kEAAG,EAAC;;;;;;;;;;;;;ACrBnB;AAAA;AAAuC;;AAEvC;AACA;;AAEA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,gBAAgB,iCAAiC;AACjD,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6DAAS;AACf;AACA;AACA;AACA;AACA;AACA;;AAEe,oEAAK,EAAC;;;;;;;;;;;;;ACzCrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;AACI;AACF;AACQ;AACI;AACI;AACpB;AACU;AACU;AACV;AACV;AACU;AACQ;AAChB;AACI;AACQ;AACE;AACN;AACV;AACM;AACA;AACU;AACI;AACI;AACxB;AACA;AACc;AAChB;AACE;AACM;AACI;AACI;AACV;AACA;AACE;AACJ;AACY;AACI;AACA;AACI;AACI;AACA;AACd;AACI;AAChB;AACA;AACU;AACU;AACV;AACR;AACI;AACI;AACV;AACI;AACI;AACN;AACQ;AACJ;AACR;AACI;AACI;AACR;AACY;AACQ;AACZ;;AAEpB;AACf,EAAE,wDAAK,EAAE,4DAAO,EAAE,0DAAM,EAAE,kEAAU,EAAE,sEAAY;AAClD,EAAE,0EAAc,EAAE,sDAAI,EAAE,gEAAS,EAAE,0EAAc,EAAE,gEAAS;AAC5D,EAAE,uDAAI,EAAE,iEAAS,EAAE,yEAAa,EAAE,yDAAK,EAAE,6DAAO;AAChD,EAAE,qEAAW,EAAE,uEAAY,EAAE,iEAAS,EAAE,uDAAI,EAAE,6DAAO;AACrD,EAAE,6DAAO,EAAE,uEAAY,EAAE,2EAAc,EAAE,+EAAgB,EAAE,uDAAI;AAC/D,EAAE,uDAAI,EAAE,qEAAW,EAAE,qDAAG,EAAE,uDAAI,EAAE,6DAAO;AACvC,EAAE,iEAAS,EAAE,qEAAW,EAAE,2DAAM,EAAE,2DAAM,EAAE,6DAAO;AACjD,EAAE,yDAAK,EAAE,qEAAW,EAAE,yEAAa,EAAE,yEAAa,EAAE,6EAAe;AACnE,EAAE,iFAAiB,EAAE,iFAAiB,EAAE,mEAAU,EAAE,uEAAY,EAAE,uDAAI;AACtE,EAAE,uDAAI,EAAE,iEAAS,EAAE,2EAAc,EAAE,iEAAS,EAAE,yDAAK;AACnD,EAAE,6DAAO,EAAE,iEAAS,EAAE,uDAAI,EAAE,2DAAM,EAAE,+DAAQ;AAC5C,EAAE,yDAAK,EAAE,iEAAS,EAAE,6DAAO,EAAE,qDAAG,EAAE,yDAAK;AACvC,EAAE,6DAAO,EAAE,qDAAG,EAAE,iEAAS,EAAE,yEAAa,EAAE,6DAAO;AACjD,CAAC,EAAC;;;;;;;;;;;;;AChpB;AACU;AACU;AACV;AACV;AACU;AACQ;AAChB;AACI;AACQ;AACE;AACN;AACV;AACM;AACA;AACU;AACI;AACI;AACxB;AACA;AACc;AAChB;AACE;AACM;AACI;AACI;AACV;AACA;AACE;AACJ;AACY;AACI;AACA;AACI;AACI;AACA;AACd;AACI;AAChB;AACA;AACU;AACU;AACV;AACR;AACI;AACI;AACV;AACI;AACI;AACN;AACQ;AACJ;AACR;AACI;AACI;AACR;AACY;AACQ;AACZ;AACL;;;;;;;;;;;;;ACjE7C;AAAA;AAA0C;;AAE1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,8DAAU;AACnB;;AAEe,kEAAG,EAAC;;;;;;;;;;;;;AC5BnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACF;AACQ;AACP;AACC;AACf;;AAE7B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,UAAU;AACV;AACA,aAAa,kEAAc;AAC3B,MAAM,+DAAW,YAAY,+DAAW;AACxC,IAAI,8DAAU,SAAS,wDAAI;AAC3B;AACA;AACA;AACA;AACA,MAAM,+DAAW;AACjB;AACA;AACA,CAAC;;AAEc,qEAAM,EAAC;;;;;;;;;;;;;ACzDtB;AAAA;AAAA;AAAA;AAA0C;AACQ;AACjB;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,UAAU;AACV;AACA,eAAe,kEAAc;AAC7B,EAAE,8DAAU,SAAS,0DAAM;AAC3B,CAAC;;AAEc,uEAAQ,EAAC;;;;;;;;;;;;;ACvCxB;AAAA;AAAA;AAAA;AAA0C;AACQ;AACjB;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS,GAAG,SAAS,GAAG,SAAS;AAC9C,UAAU;AACV;AACA,mBAAmB,kEAAc;AACjC,EAAE,8DAAU,SAAS,0DAAM;AAC3B,CAAC;;AAEc,2EAAY,EAAC;;;;;;;;;;;;;ACrC5B;AAAA;AAAA;AAAA;AAA0C;AACQ;AACrB;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS,GAAG,SAAS,GAAG,SAAS;AAC9C,UAAU;AACV;AACA,iBAAiB,kEAAc;AAC/B,EAAE,8DAAU,SAAS,wDAAI;AACzB,CAAC;;AAEc,yEAAU,EAAC;;;;;;;;;;;;;ACpC1B;AAAA;AAAA;AAAkC;AACI;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,qBAAqB;AAChC,aAAa,MAAM;AACnB;AACA;AACA,iBAAiB,QAAQ,OAAO,SAAS,EAAE;AAC3C;AACA;AACA;AACA;AACA,SAAS,4DAAQ,CAAC,kDAAM;;AAET,iEAAE,EAAC;;;;;;;;;;;;;ACtBlB;AAAA;AAAA;AAAA;AAAgC;AACM;AACH;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,KAAK;AAChB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,cAAc,4DAAQ;AACtB;AACA,WAAW,yDAAK;AAChB,GAAG;AACH,WAAW,2DAAO;AAClB;AACA,CAAC;;AAEc,sEAAO,EAAC;;;;;;;;;;;;;AClCvB;AAAA;AAAuC;;AAEvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6DAAS;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;ACvCtB;AAAA;AAAA;AAAA;AAAA;AAAsC;AACI;AACF;AACU;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,WAAW,KAAK;AAChB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4DAAQ;AACnB;AACA;AACA,kBAAkB,kEAAc,WAAW,6DAAS;AACpD;AACA;AACA,SAAS,8DAAU;AACnB,CAAC;;AAED;AACA;;AAEe,mEAAI,EAAC;;;;;;;;;;;;;ACxDpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACY;AACvB;AACS;AACN;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,qBAAqB;AAChC,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,4DAAQ;AACtB,EAAE,6DAAS;AACX,UAAU,yDAAK;AACf,IAAI,mEAAe,cAAc,wDAAI;AACrC,GAAG;AACH;AACA,CAAC;;AAEc,sEAAO,EAAC;;;;;;;;;;;;;ACxCvB;AAAA;AAAA;AAAA;AAAA;AAAsC;AACI;AACF;AACU;;AAElD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,4DAAQ;AACtB;AACA;AACA,kBAAkB,kEAAc,WAAW,6DAAS;AACpD;AACA;AACA,SAAS,8DAAU;AACnB,CAAC;;AAED;AACA;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;ACnEvB;AAAA;AAAA;AAAyC;AACa;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oEAAgB;AAChC;AACA,2BAA2B,8DAAU;AACrC,CAAC;;AAEc,wEAAS,EAAC;;;;;;;;;;;;;AC5BzB;AAAA;AAAA;AAAqC;AACI;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,8DAAU,CAAC,4DAAQ;AAC5B;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACtB1B;AAAA;AAAmC;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA,gBAAgB,SAAS;AACzB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,2DAAO;AAChB;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;AC3CzB;AAAA;AAA4C;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+DAAW;;AAEP,mEAAI,EAAC;;;;;;;;;;;;;ACzBpB;AAAA;AAAwC;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA,MAAM,+BAA+B;AACrC,MAAM,+BAA+B;AACrC,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,eAAe,iEAAM;AACrB;AACA;AACA;;AAEe,oEAAK,EAAC;;;;;;;;;;;;;ACrCrB;AAAA;AAAA;AAAA;AAAwC;AACU;AACX;;AAEvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kEAAc;AAC7B;AACA,GAAG;AACH,qBAAqB,6DAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,6DAAS;AAClC;AACA;AACA;;AAEe,oEAAK,EAAC;;;;;;;;;;;;;ACjDrB;AAAA;AAAA;AAAwC;AACH;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAQ;AACpB;AACA;AACA;AACA,YAAY,4DAAQ;AACpB;AACA;AACA,SAAS,6DAAS,CAAC,4DAAQ;AAC3B;;AAEe,oEAAK,EAAC;;;;;;;;;;;;;ACtCrB;AAAA;AAAwC;;AAExC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,EAAE;AACf;AACA;AACA;AACA,mBAAmB,SAAS,GAAG,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6DAAS;AAClB;;AAEe,oEAAK,EAAC;;;;;;;;;;;;;ACnCrB;AAAA;AAAwC;;AAExC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,EAAE;AACf;AACA;AACA;AACA,mBAAmB,SAAS,GAAG,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6DAAS;AAClB;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;AC5BzB;AAAA;AAAwC;;AAExC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,SAAS;AACpB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6DAAS;AAClB;;AAEe,4EAAa,EAAC;;;;;;;;;;;;;ACvC7B;AAAA;AAAwC;;AAExC;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,SAAS;AACpB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6DAAS;AAClB;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACzCzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmC;AACN;AACU;AACR;AACE;AACJ;AACQ;AACF;AACQ;AACE;AACV;AACU;AACV;AACE;AACE;AACR;AACJ;AACQ;AACI;AACN;AACU;AACV;AACA;AACQ;AACN;AACN;AACA;AACI;;AAElB;AACf,EAAE,4DAAO,EAAE,sDAAI,EAAE,gEAAS,EAAE,wDAAK,EAAE,0DAAM;AACzC,EAAE,sDAAI,EAAE,8DAAQ,EAAE,4DAAO,EAAE,oEAAW,EAAE,sEAAY;AACpD,EAAE,6DAAO,EAAE,uEAAY,EAAE,6DAAO,EAAE,+DAAQ,EAAE,iEAAS;AACrD,EAAE,yDAAK,EAAE,qDAAG,EAAE,6DAAO,EAAE,iEAAS,EAAE,2DAAM;AACxC,EAAE,qEAAW,EAAE,2DAAM,EAAE,2DAAM,EAAE,mEAAU,EAAE,6DAAO;AAClD,EAAE,uDAAI,EAAE,uDAAI,EAAE,2DAAM;AACpB,CAAC,EAAC;;;;;;;;;;;;;ACpCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACN;AACU;AACR;AACE;AACJ;AACQ;AACF;AACQ;AACE;AACV;AACU;AACV;AACE;AACE;AACR;AACJ;AACQ;AACI;AACN;AACU;AACV;AACA;AACQ;AACN;AACN;AACA;AACI;AACE;;;;;;;;;;;;;AC5BlD;AAAA;AAAgD;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,yDAAa;AAC1B;;AAEe,4EAAa,EAAC;;;;;;;;;;;;;AChC7B;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;AC9BvB;AAAA;AAAA;AAAA;AAAA;AAAwC;AACI;AACJ;AACL;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS,6DAAS,CAAC,2DAAO,UAAU,6DAAS,mBAAmB,+DAAW;AAC3E;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;AC1CtB;AAAA;AAAA;AAAA;AAAA;AAAgC;AACM;AACQ;AACR;;AAEtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,SAAS;AACtB;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA,SAAS,iBAAiB;AAC1B;AACA;AACA,SAAS,iBAAiB;AAC1B;AACA;AACA,SAAS,qBAAqB;AAC9B;AACA;AACA;AACA;AACA,mBAAmB,wDAAY;;AAE/B,yBAAyB,4DAAQ;AACjC;AACA;AACA;AACA;AACA,GAAG;;AAEH,SAAS,4DAAQ;AACjB;AACA;AACA;AACA,UAAU,yDAAK;AACf,eAAe,yDAAK;AACpB;AACA;AACA,GAAG;AACH;;AAEe,mEAAI,EAAC;;;;;;;;;;;;;AC3DpB;AAAA;AAAA;AAAwC;AACM;;AAE9C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA,MAAM,iBAAiB;AACvB,MAAM;AACN;AACA;AACA,iCAAiC,mBAAmB,cAAc,EAAE,EAAE;AACtE,WAAW,iBAAiB;AAC5B;AACA;AACA,SAAS,gEAAY,CAAC,6DAAS;AAC/B;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;AClCxB;AAAA;AAAA;AAAkD;AACrB;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA,iBAAiB;AACjB;AACA,yBAAyB,mBAAmB,cAAc,EAAE,EAAE;AAC9D;AACA;AACA,yBAAyB,mBAAmB,cAAc,EAAE,EAAE;AAC9D;AACA;AACA;AACA,2BAA2B,kEAAc,iBAAiB,wDAAI;AAC9D;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;AC/B1B;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,SAAS;AACtB;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA,WAAW,SAAS,GAAG,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;ACzBxB;AAAA;AAAA;AAAoD;AACE;;AAEtD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,UAAU;AACV;AACA,cAAc,oEAAgB;AAC9B;AACA;AACA,GAAG;AACH,IAAI,mEAAe;AACnB;AACA,CAAC;;AAEc,sEAAO,EAAC;;;;;;;;;;;;;ACvCvB;AAAA;AAAA;AAA0C;AACA;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,8DAAU;AACzB,uCAAuC,8DAAU;AACjD;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;AC1CtB;AAAA;AAA0C;;AAE1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,8DAAU;AACzB;AACA;AACA;;AAEA;AACA;;AAEe,oEAAK,EAAC;;;;;;;;;;;;;ACxDrB;AAAA;AAA0C;;AAE1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,8DAAU;AACzB;AACA;AACA;;AAEA;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACrD1B;AAAA;AAA2B;;AAEZ;AACf,EAAE,oDAAG;AACL,CAAC,EAAC;;;;;;;;;;;;;ACJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACE;;;;;;;;;;;;;ACD5C;AAAA;AAAA;AAAA;AAAqC;AACV;AACU;;AAErC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,OAAO,YAAY;AAC9B,WAAW,QAAQ;AACnB;AACA,WAAW,OAAO;AAClB;AACA,WAAW,QAAQ;AACnB;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,8CAA8C,kBAAkB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS,4DAAQ;AACjB,MAAM,4DAAQ;AACd;AACA;AACA,iCAAiC,4DAAQ;AACzC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,uDAAG;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yDAAyD,uDAAG;AAC5D;;AAEA;AACA,eAAe,uDAAG;AAClB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;AC9LxB;AAAA;AAAA;AAA8C;AACT;;AAErC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4DAAQ;AACnB,2CAA2C,wDAAY;AACvD;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;AC5CtB;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACxBzB;AAAA;AAAA;AAAA;AAAA;AAAsC;AACb;AACyB;AACjB;;AAEjC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA,eAAe,SAAS,GAAG,SAAS,GAAG,SAAS;AAChD,UAAU;AACV;AACA,eAAe,4DAAQ;AACvB;;AAEA;AACA;AACA;;AAEA,eAAe,kEAAc;AAC7B;AACA;;AAEA;AACA;AACA,gBAAgB,0DAAM;AACtB;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,sDAAE;AACb;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAEc,uEAAQ,EAAC;;;;;;;;;;;;;AC/DxB;AAAA;AAAA;AAAA;AAAA;AAAgC;AACM;AACsB;AACrB;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA,mBAAmB,OAAO,SAAS,EAAE,GAAG,OAAO,iBAAiB,EAAE;AAClE,UAAU,OAAO,iBAAiB;AAClC;AACA,mBAAmB,4DAAQ;AAC3B,uBAAuB,+DAAmB;AAC1C,SAAS,yDAAK,CAAC,qDAAS;AACxB,CAAC;;AAEc,2EAAY,EAAC;;;;;;;;;;;;;AC7B5B;AAAA;AAAA;AAAwC;AACF;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,YAAY,4DAAQ;AACpB,SAAS,6DAAS;AAClB,CAAC;;AAEc,oEAAK,EAAC;;;;;;;;;;;;;ACzBrB;AAAA;AAAA;AAAA;AAAwC;AACF;AACD;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,YAAY,4DAAQ;AACpB,SAAS,6DAAS,OAAO,4DAAQ;AACjC,CAAC;;AAEc,oEAAK,EAAC;;;;;;;;;;;;;AC3BrB;AAAA;AAAA;AAAA;AAAA;AAAkD;AACN;AACN;AACiB;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,4DAAQ;AACzB,SAAS,qEAAiB;AAC1B,MAAM,kEAAc,QAAQ,+DAAW,YAAY,6DAAiB;AACpE;AACA,CAAC;;AAEc,yEAAU,EAAC;;;;;;;;;;;;;AChC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACN;AACE;AACR;AACiB;AAC1B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,SAAS,GAAG,SAAS,KAAK,SAAS;AACvD,WAAW,SAAS;AACpB;AACA,mBAAmB,4DAAQ;AAC3B,iBAAiB,wDAAI;AACrB,MAAM,qEAAiB;AACvB;AACA;AACA,SAAS,qEAAiB;AAC1B,MAAM,kEAAc,QAAQ,+DAAW,YAAY,6DAAiB,SAAS,gEAAY;AACzF;AACA,CAAC;;AAEc,2EAAY,EAAC;;;;;;;;;;;;;AC3C5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACN;AACN;AACiB;AAC1B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA,mBAAmB,iBAAiB,GAAG,iBAAiB;AACxD;AACA,+BAA+B,iBAAiB;AAChD,WAAW,iBAAiB;AAC5B;AACA,qBAAqB,4DAAQ;AAC7B,mBAAmB,wDAAI;AACvB,MAAM,qEAAiB;AACvB;AACA;AACA,SAAS,qEAAiB;AAC1B,MAAM,kEAAc,QAAQ,+DAAW,YAAY,6DAAiB;AACpE;AACA,CAAC;;AAEc,6EAAc,EAAC;;;;;;;;;;;;;ACvC9B;AAAA;AAA4D;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,aAAa,uEAAmB;AAChC;AACA,CAAC;;AAEc,qEAAM,EAAC;;;;;;;;;;;;;ACrBtB;AAAA;AAAA;AAAwC;AACD;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,6DAAS;AAChD,SAAS,6DAAS;AAClB;;AAEe,mEAAI,EAAC;;;;;;;;;;;;;ACrCpB;AAAA;AAAA;AAAwC;AACD;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,6DAAS;AAChD;AACA,SAAS,6DAAS;AAClB;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACtCzB;AAAA;AAAA;AAA8C;AACN;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA,MAAM,oCAAoC;AAC1C,MAAM,qCAAqC;AAC3C,MAAM;AACN;AACA;AACA,wCAAwC,kBAAkB,EAAE;AAC5D;AACA;AACA;AACA,4BAA4B,qCAAqC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6DAAS,QAAQ,gEAAY;AACnC;AACA;;AAEe,6EAAc,EAAC;;;;;;;;;;;;;AC5C9B;AAAA;AAAA;AAA8C;AACN;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA,MAAM,qCAAqC;AAC3C,MAAM,qCAAqC;AAC3C,MAAM;AACN;AACA;AACA,mCAAmC,kBAAkB,EAAE;AACvD;AACA;AACA;AACA,uBAAuB,oCAAoC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6DAAS,QAAQ,gEAAY;AACnC;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;AC5CzB;AAAA;AAAA;AAAA;AAAsC;;;;;;;;;;;;;ACAtC;AAAA;AAAA;AAAA;AAA2C;;;;;;;;;;;;;ACA3C;AAAA;AAAA;AAAA;AAAA;AAAwC;AACM;AACP;AACF;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4DAAQ;AACnB,WAAW,gEAAY;;AAEvB;AACA;AACA;AACA,MAAM,6DAAS,CAAC,6DAAS;;AAEzB;AACA;AACA;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;AC1CxB;AAAA;AAAA;AAAA;AAAsC;;;;;;;;;;;;;ACAtC;AAAA;AAAA;AAAA;AAAwC;;;;;;;;;;;;;ACAxC;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,iBAAiB;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,iEAAE,EAAC;;;;;;;;;;;;;ACpClB;AAAA;AAAA;AAAkD;AACb;;AAErC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,WAAW,4DAAQ;AACnB;AACA,sCAAsC,0DAAc;AACpD;AACA;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;AC1CtB;AAAA;AAAqC;;AAErC;AACA;AACA;AACA;AACA,oCAAoC;AACpC;;AAEA;AACA;AACA,8BAA8B,KAAK;AACnC;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4DAAQ;AACnB;AACA;AACA;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;AC/B5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACF;AACM;AACX;AACe;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB,YAAY,OAAO;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,+CAA+C;AACrD,MAAM;AACN;AACA;AACA;AACA,mBAAmB,oCAAoC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,2DAAO,eAAe,sDAAU,GAAG,qDAAS;AACzD,eAAe,kEAAc;AAC7B;AACA;AACA,0BAA0B,gEAAY;AACtC;;AAEe,oEAAK,EAAC;;;;;;;;;;;;;ACvDrB;AAAA;AAAA;AAAA;AAAuC;;;;;;;;;;;;;ACAvC;AAAA;AAAA;AAAA;AAA2C;;;;;;;;;;;;;ACA3C;AAAA;AAAA;AAAsC;AACY;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,kEAAc;AACzD;AACA;AACA;AACA,SAAS,4DAAQ;AACjB;;AAEe,mEAAI,EAAC;;;;;;;;;;;;;AC5CpB;AAAA;AAAA;AAAA;AAAA;AAA4C;AACF;AACI;AACX;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA,MAAM,8CAA8C;AACpD,MAAM;AACN;AACA;AACA,gCAAgC,kBAAkB,EAAE;AACpD;AACA;AACA;AACA,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,2DAAO,eAAe,uDAAW,GAAG,sDAAU;AAC3D,0BAA0B,gEAAY;AACtC;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;AC/CtB;AAAA;AAAA;AAA0C;AACH;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA,MAAM,+CAA+C;AACrD,MAAM,gDAAgD;AACtD,MAAM;AACN;AACA;AACA,8BAA8B,mBAAmB,EAAE;AACnD;AACA;AACA;AACA,kBAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,8DAAU,CAAC,qDAAS;;AAEhB,mEAAI,EAAC;;;;;;;;;;;;;ACzCpB;AAAA;AAAA;AAAA;AAAgD;AACF;AACP;;AAEvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA,MAAM,qCAAqC;AAC3C,MAAM,qCAAqC;AAC3C,MAAM;AACN;AACA;AACA,mCAAmC,2BAA2B,EAAE;AAChE;AACA;AACA;AACA,uBAAuB,kCAAkC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,6DAAS;AAC/C;AACA;AACA;AACA,SAAS,iEAAa,QAAQ,gEAAY;AAC1C;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACtDzB;AAAA;AAAA;AAAA;AAA4C;AACF;AACI;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA,iBAAiB,4BAA4B;AAC7C,iBAAiB,6BAA6B;AAC9C,iBAAiB;AACjB;AACA;AACA,iCAAiC,mBAAmB,EAAE;AACtD;AACA;AACA;AACA,qBAAqB,2BAA2B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,+DAAW,SAAS,gEAAY,gBAAgB,sDAAU;AACnE;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;AC3CvB;AAAA;AAAA;AAA0C;AACK;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,eAAe,8DAAU,CAAC,yDAAa;;AAExB,uEAAQ,EAAC;;;;;;;;;;;;;ACxBxB;AAAA;AAAA;AAAA;AAAgD;AACF;AACP;;AAEvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA,MAAM,oCAAoC;AAC1C,MAAM,qCAAqC;AAC3C,MAAM;AACN;AACA;AACA,uCAAuC,4BAA4B,EAAE;AACrE;AACA;AACA;AACA,2BAA2B,mCAAmC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,6DAAS;AACrB;AACA;AACA;AACA;AACA,SAAS,iEAAa,QAAQ,gEAAY;AAC1C;;AAEe,4EAAa,EAAC;;;;;;;;;;;;;AC1D7B;AAAA;AAAA;AAAA;AAA4C;AACQ;AACN;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA,iBAAiB,4BAA4B;AAC7C,iBAAiB,6BAA6B;AAC9C,iBAAiB;AACjB;AACA;AACA,qCAAqC,mBAAmB,EAAE;AAC1D;AACA;AACA;AACA,yBAAyB,4BAA4B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,+DAAW,SAAS,gEAAY,gBAAgB,2DAAe;AACxE;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;AC3C3B;AAAA;AAAA;AAAA;AAAmC;;;;;;;;;;;;;ACAnC;AAAA;AAAA;AAA4C;AACjB;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,+DAAW,CAAC,uDAAG;AACxB;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;AC5BvB;AAAA;AAAA;AAA4C;AACjB;;AAE3B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,+DAAW,CAAC,uDAAG;AACxB;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;AC9B3B;AAAA;AAAA;AAAA;AAA4C;AACjB;AACY;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,6DAAS;AAC7C,SAAS,+DAAW,CAAC,uDAAG;AACxB;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;AC9B5B;AAAA;AAA4C;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,+DAAW;AAC7B;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;ACrBvB;AAAA;AAA4C;;AAE5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,+DAAW;AAC7B;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;ACxB3B;AAAA;AAAA;AAA4C;AACL;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,6DAAS;AAC7C,SAAS,+DAAW;AACpB;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;AChC5B;AAAA;AAA0C;;AAE1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,SAAS,8DAAU;AACnB;;AAEe,mEAAI,EAAC;;;;;;;;;;;;;AC3BpB;AAAA;AAA4C;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,+DAAW;;AAER,oEAAK,EAAC;;;;;;;;;;;;;ACzBrB;AAAA;AAA0C;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,8DAAU;;AAEN,mEAAI,EAAC;;;;;;;;;;;;;AC1BpB;AAAA;AAA0C;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,8DAAU;;AAEX,wEAAS,EAAC;;;;;;;;;;;;;ACzBzB;AAAA;AAAA;AAAA;AAAA;AAAwC;AACF;AACQ;AACX;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,cAAc,iBAAiB;AAC/B;AACA,IAAI;AACJ;AACA;AACA;AACA,aAAa,2DAAO,eAAe,qDAAS,GAAG,oDAAQ;AACvD,0BAA0B,gEAAY;AACtC;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;ACxCvB;AAAA;AAAA;AAAA;AAAA;AAAkD;AACF;AACF;AACX;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,aAAa,2DAAO,eAAe,0DAAc,GAAG,yDAAa;AACjE,0BAA0B,gEAAY;AACtC;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;AC9B5B;AAAA;AAAA;AAAA;AAAoC;AACU;AACb;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,MAAM,2DAAO,SAAS,gEAAY,YAAY,kDAAM;AACpD;;AAEe,oEAAK,EAAC;;;;;;;;;;;;;ACtCrB;AAAA;AAAA;AAAA;AAA8C;AACA;AACb;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,MAAM,gEAAY,SAAS,gEAAY,YAAY,kDAAM;AACzD;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACpC1B;AAAA;AAAA;AAA0C;AACI;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,mBAAmB,8DAAU,SAAS,gEAAY;AAClD;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;ACnCtB;AAAA;AAAA;AAAoD;AACN;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,mBAAmB,mEAAe,SAAS,gEAAY;AACvD;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;ACjC3B;AAAA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;AC3BzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;AACJ;AACM;AACJ;AACM;AACJ;AACU;AACJ;AACN;AACA;AACF;AACM;AACF;AACJ;AACQ;AACF;AACU;AACd;AACF;AACI;AACI;AACN;AACF;;AAEd;AACf,EAAE,wDAAK,EAAE,oDAAG,EAAE,0DAAM,EAAE,sDAAI,EAAE,4DAAO;AACnC,EAAE,wDAAK,EAAE,kEAAU,EAAE,8DAAQ,EAAE,wDAAK,EAAE,wDAAK;AAC3C,EAAE,uDAAI,EAAE,6DAAO,EAAE,2DAAM,EAAE,uDAAI,EAAE,+DAAQ;AACvC,EAAE,6DAAO,EAAE,uEAAY,EAAE,yDAAK,EAAE,uDAAI,EAAE,2DAAM;AAC5C,EAAE,+DAAQ,EAAE,yDAAK,EAAE,uDAAI;AACvB,CAAC,EAAC;;;;;;;;;;;;;AC9BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACJ;AACM;AACJ;AACM;AACJ;AACU;AACJ;AACN;AACA;AACF;AACM;AACF;AACJ;AACQ;AACF;AACU;AACd;AACF;AACI;AACI;AACN;AACF;AACI;;;;;;;;;;;;;ACvBhD;AAAA;AAAA;AAAgD;AACnB;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iEAAa,SAAS,wDAAI;AACzD;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;AC9BzB;AAAA;AAAA;AAAgD;AACf;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iEAAa,SAAS,0DAAM;AAC3D;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;AC9B3B;AAAA;AAAoC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB,WAAW,EAAE;AACb,aAAa,EAAE;AACf;AACA;AACA,iBAAiB,QAAQ,OAAO,SAAS,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,2DAAO;AACnD;AACA;;AAEe,kEAAG,EAAC;;;;;;;;;;;;;AChCnB;AAAA;AAAA;AAAoD;AACE;;AAEtD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,UAAU;AACV;AACA,cAAc,oEAAgB;AAC9B;AACA;AACA,GAAG;AACH,IAAI,mEAAe;AACnB;AACA,CAAC;;AAEc,sEAAO,EAAC;;;;;;;;;;;;;ACxCvB;AAAA;AAAA;AAAkC;AACsC;;AAExE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6EAAyB,CAAC,kDAAM;;AAE1B,iEAAE,EAAC;;;;;;;;;;;;;AC5BlB;AAAA;AAAwE;;AAExE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,6EAAyB;AACnC;AACA,CAAC;;AAEc,kEAAG,EAAC;;;;;;;;;;;;;AC7BnB;AAAA;AAAA;AAAoC;AACA;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB,aAAa,QAAQ;AACrB;AACA;AACA,iBAAiB,OAAO,SAAS;AACjC,yBAAyB,gBAAgB,SAAS,GAAG;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2DAAO,eAAe,mDAAO;AACxD;;AAEe,kEAAG,EAAC;;;;;;;;;;;;;AClCnB;AAAA;AAAA;AAAwC;AACJ;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB,aAAa,QAAQ;AACrB;AACA;AACA,0BAA0B,gBAAgB,SAAS,GAAG;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2DAAO,eAAe,qDAAS;AAC1D;;AAEe,oEAAK,EAAC;;;;;;;;;;;;;ACjCrB;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,mEAAI,EAAC;;;;;;;;;;;;;ACtBpB;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,EAAE;AACf;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;ACpBxB;AAAA;AAAA;AAAA;AAA4C;AACP;AACA;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,4DAAQ;AAClB;AACA;AACA;AACA,GAAG;AACH,UAAU,4DAAQ;AAClB;AACA,WAAW,4DAAQ;AACnB,SAAS,+DAAW;AACpB;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;ACtDvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACD;AACN;AACE;AACN;;AAEjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+DAAW,4BAA4B,0DAAM;AAC5D,sCAAsC,6DAAS;;AAE/C;AACA;AACA;AACA;AACA,SAAS,4DAAQ;AACjB;AACA,mBAAmB,+DAAW;AAC9B;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;ACpDxB;AAAA;AAAA;AAA4C;AACL;;AAEvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,6DAAS;AAC/C;AACA;AACA;AACA,SAAS,+DAAW;AACpB;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;ACzCvB;AAAA;AAAwC;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6DAAS;AAC3B;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;ACrBvB;AAAA;AAAA;AAAA;AAAA;AAAsC;AACgB;AAChB;AACsB;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA,mBAAmB,4DAAQ;AAC3B,eAAe,4DAAQ,SAAS,+DAAmB;AACnD;AACA,MAAM,oEAAgB;AACtB;AACA,CAAC;;AAEc,2EAAY,EAAC;;;;;;;;;;;;;AC7B5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsC;AACgB;AACR;AACR;AACsB;AAC/B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,SAAS,KAAK,SAAS,GAAG,SAAS;AACzD,WAAW,SAAS;AACpB;AACA,qBAAqB,4DAAQ;AAC7B,iBAAiB,wDAAI;AACrB,eAAe,4DAAQ,SAAS,+DAAmB;;AAEnD,mBAAmB,wDAAI;AACvB;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM,oEAAgB,SAAS,gEAAY;AAC3C;AACA,CAAC;;AAEc,6EAAc,EAAC;;;;;;;;;;;;;AC5C9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsC;AACgB;AAChB;AACsB;AAC/B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA,mBAAmB,iBAAiB,GAAG,iBAAiB;AACxD,kBAAkB,iBAAiB,GAAG,iBAAiB;AACvD;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA,uBAAuB,4DAAQ;AAC/B,mBAAmB,wDAAI;AACvB,eAAe,4DAAQ,SAAS,+DAAmB;;AAEnD;AACA;AACA;AACA;AACA;AACA,MAAM,oEAAgB;AACtB;AACA,CAAC;;AAEc,+EAAgB,EAAC;;;;;;;;;;;;;ACxChC;AAAA;AAAA;AAAA;AAAqC;AACa;AACb;;AAErC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,UAAU;AACV;AACA,aAAa,kEAAc;AAC3B;AACA;AACA;AACA;;AAEA;AACA,CAAC,EAAE,4DAAQ,CAAC,oDAAQ;;AAEL,qEAAM,EAAC;;;;;;;;;;;;;ACzCtB;AAAA;AAAA;AAA8C;AACI;;AAElD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,IAAI;AACJ,UAAU;AACV;AACA,eAAe,kEAAc;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC,EAAE,wDAAY;;AAEA,uEAAQ,EAAC;;;;;;;;;;;;;ACvDxB;AAAA;AAAA;AAA0C;AACJ;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB,WAAW,KAAK;AAChB,aAAa,EAAE;AACf;AACA;AACA,iBAAiB,QAAQ,OAAO,oBAAoB,EAAE;AACtD;AACA;AACA;AACA;AACA,aAAa,4DAAQ,CAAC,sDAAU;;AAEjB,qEAAM,EAAC;;;;;;;;;;;;;ACvBtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgC;AACM;AACI;AACJ;AACK;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,sBAAsB;AACjC;AACA,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4DAAQ;AACxB;AACA;AACA,eAAe,+DAAW;;AAE1B,EAAE,4DAAQ;AACV,+BAA+B,yDAAK,sBAAsB,8DAAU;AACpE,GAAG;AACH;AACA,CAAC;;AAEc,wEAAS,EAAC;;;;;;;;;;;;;ACxCzB;AAAA;AAAA;AAAoD;AACP;;AAE7C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA,6BAA6B,kBAAkB,EAAE;AACjD;AACA;AACA;AACA;AACA;AACA,kBAAkB,mEAAe,aAAa,kBAAkB,EAAE,MAAM,2DAAe;AACvF,SAAS,gEAAY;AACrB;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;ACnC3B;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;ACzBvB;AAAA;AAAA;AAAA;AAAwD;AAChB;AACF;;AAEtC;AACA,wBAAwB,oDAAQ,IAAI,oDAAQ;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,6DAAS,sBAAsB,6DAAiB;;AAEzE,4EAAa,EAAC;;;;;;;;;;;;;AC1B7B;AAAA;AAAA;AAAyC;AACJ;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,4DAAQ,mBAAmB,8DAAU;AAC/D;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;AChC3B;AAAA;AAAA;AAA2C;AACE;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,gEAAY,WAAW,+DAAW;AAC3C;;AAEe,gFAAiB,EAAC;;;;;;;;;;;;;AChCjC;AAAA;AAAA;AAA0C;AACG;;AAE7C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,gEAAY,WAAW,8DAAU;AACtC;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;AC5BzB;AAAA;AAAA;AAA8B;AACS;;AAEvC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,6BAA6B,gDAAI;;AAEjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qDAAS;;AAE3B,uEAAQ,EAAC;;;;;;;;;;;;;;ACrCxB;AAAA;AAAA;AAAA;AAA0C;AACF;AACF;;AAEtC;AACA,iBAAiB,oDAAQ,IAAI,oDAAQ;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,6DAAS,eAAe,sDAAU;;AAE7C,qEAAM,EAAC;;;;;;;;;;;;;AC1BtB;AAAA;AAAA;AAA6C;AACE;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,gEAAY,oCAAoC,iEAAa;AACtE;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACxBzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsC;AACJ;AACS;AACR;AACQ;AACN;AACO;AACC;;AAE7C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,+DAAW;AACjB,OAAO,2DAAO;AACd,QAAQ,4DAAQ,WAAW,gEAAY,WAAW,+DAAW;AAC7D;AACA;AACA,YAAY,0DAAM;AAClB;AACA;AACA;AACA,MAAM,+DAAW;AACjB,YAAY,4DAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;AC5EvB;AAAA;AAA4C;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,iBAAiB;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,+DAAW;AACpB;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;AClCvB;AAAA;AAA4C;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,+DAAW;AAC3C;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;ACxC3B;AAAA;AAAA;AAAA;AAA0C;AACG;AACE;;AAE/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,gEAAY;AACnB;AACA;AACA,YAAY,8DAAU;AACtB;AACA,2EAA2E,iEAAa;AACxF;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;ACnCvB;AAAA;AAA8B;;AAE9B;AACA,qBAAqB,gDAAI;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;ACnCxB;AAAA;AAAA;AAA0C;AACL;;AAErC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,4DAAQ;AACf;AACA;AACA;AACA;AACA,YAAY,8DAAU;AACtB;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACpC1B;AAAA;AAAuC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,6DAAS;AACvD;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;AChCzB;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;AClCxB;AAAA;AAAA;AAAA;AAAwC;AACA;AACF;;AAEtC;AACA,gBAAgB,oDAAQ,IAAI,oDAAQ;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,6DAAS,cAAc,qDAAS;;AAEzC,oEAAK,EAAC;;;;;;;;;;;;;AC1BrB;AAAA;AAAA;AAA4C;AACE;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA,iBAAiB;AACjB;AACA,sBAAsB,SAAS;AAC/B;AACA;AACA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA,8BAA8B,+DAAW,iBAAiB,gEAAY;AACtE;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;ACnCvB;AAAA;AAAA;AAA4C;AACE;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,+DAAW,iBAAiB,gEAAY;AACjD;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;ACxC3B;AAAA;AAAqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,4DAAQ;AACjB;;AAEe,oEAAK,EAAC;;;;;;;;;;;;;ACrCrB;AAAA;AAAA;AAA8C;AACJ;;AAE1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,8DAAU;AAChB;AACA;AACA,SAAS,gEAAY;AACrB;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;ACvCxB;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,oEAAK,EAAC;;;;;;;;;;;;;ACxBrB;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;ACrBtB;AAAA;AAAA;AAA0C;AACG;;AAE7C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,gEAAY,WAAW,8DAAU;AACtC;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;ACrCxB;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;AC9BxB;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;AC5B5B;AAAA;AAAA;AAAA;AAA0C;AACI;AACD;;AAE7C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,gEAAY,WAAW,8DAAU;AACxC;AACA;AACA,cAAc,gEAAY;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,4EAAa,EAAC;;;;;;;;;;;;;AC7D7B;AAAA;AAAA;AAAA;AAA8C;AACN;AACF;;AAEtC;AACA,mBAAmB,oDAAQ,IAAI,oDAAQ;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,6DAAS,iBAAiB,wDAAY;;AAErD,uEAAQ,EAAC;;;;;;;;;;;;;AC1BxB;AAAA;AAAuC;;AAEvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6DAAS;AAClB;;AAEe,4EAAa,EAAC;;;;;;;;;;;;;ACpC7B;AAAA;AAAA;AAAA;AAAwC;AACA;AACF;;AAEtC;AACA,gBAAgB,oDAAQ,IAAI,oDAAQ;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,6DAAS,cAAc,qDAAS;;AAEzC,oEAAK,EAAC;;;;;;;;;;;;;AC1BrB;AAAA;AAAA;AAAA;AAA0C;AACP;AACU;;AAE7C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,2DAAO,WAAW,gEAAY,WAAW,8DAAU;AACzD;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;AC7BxB;AAAA;AAAA;AAA0C;AACG;;AAE7C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,gEAAY,WAAW,8DAAU;AACtC;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;AC5BxB;AAAA;AAAA;AAAA;AAAsD;AACd;AACF;;AAEtC;AACA,uBAAuB,oDAAQ,IAAI,oDAAQ;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,6DAAS,qBAAqB,4DAAgB;;AAErE,2EAAY,EAAC;;;;;;;;;;;;;AC1B5B;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;ACrB3B;AAAA;AAAA;AAAkC;AACW;;AAE7C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,gEAAY,WAAW,0DAAM;AACtC;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;AC3BzB;AAAA;AAAA;AAA0C;AACG;;AAE7C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,gEAAY,WAAW,8DAAU;AAC1C;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;AC3BzB;AAAA;AAAA;AAAwC;AACM;;AAE9C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,SAAS;AACtB;AACA;AACA;AACA,MAAM,8CAA8C;AACpD,MAAM;AACN;AACA;AACA;AACA,+BAA+B,mCAAmC;AAClE,WAAW,8CAA8C;AACzD;AACA;AACA;AACA,WAAW,4BAA4B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,SAAS,gEAAY,oCAAoC,6DAAS;AAClE;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;ACpDxB;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,mEAAI,EAAC;;;;;;;;;;;;;ACzBpB;AAAA;AAAsD;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oEAAgB;AAChC;AACA,CAAC;;AAEc,wEAAS,EAAC;;;;;;;;;;;;;AC3BzB;AAAA;AAAA;AAAoD;AACE;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA,MAAM,4BAA4B;AAClC,MAAM;AACN;AACA;AACA;AACA;AACA,IAAI;AACJ,UAAU,OAAO,4BAA4B,QAAQ,8BAA8B;AACnF;AACA;AACA,UAAU,UAAU,4BAA4B,YAAY,8BAA8B;AAC1F;AACA,YAAY,oEAAgB;AAC5B,EAAE,mEAAe;AACjB,CAAC;;AAEc,oEAAK,EAAC;;;;;;;;;;;;;ACnCrB;AAAA;AAAA;AAAA;AAAgD;AACV;AACK;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,+DAAW,WAAW,iEAAa,WAAW,4DAAQ;AAC/D;;AAEe,mEAAI,EAAC;;;;;;;;;;;;;ACpCpB;AAAA;AAAA;AAAA;AAAgD;AACN;AACC;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,+DAAW,WAAW,iEAAa,iBAAiB,8DAAU;AACvE;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;AC/BtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACR;AACQ;AACQ;AACR;AACE;AAChB;AACA;AACE;AACgB;AACR;AACY;AACJ;AACY;AAChB;AACF;AACJ;AACM;AACJ;AACA;AACQ;AACR;AACE;AACI;AACF;AACF;AACN;AACI;AACQ;AACZ;AACM;AACN;AACE;AACI;AACA;AACQ;AACE;AACV;AACU;AAChB;AACM;AACA;AACQ;AACF;AACJ;AACA;AACd;AACE;AACQ;AACE;AACE;AACF;AACA;AACU;AACA;AACV;;AAEtB;AACf,EAAE,gEAAS,EAAE,wDAAK,EAAE,gEAAS,EAAE,wEAAa,EAAE,gEAAS;AACvD,EAAE,kEAAU,EAAE,kDAAE,EAAE,kDAAE,EAAE,oDAAG,EAAE,oEAAW;AACtC,EAAE,6DAAO,EAAE,yEAAa,EAAE,qEAAW,EAAE,iFAAiB,EAAE,iEAAS;AACnE,EAAE,+DAAQ,EAAE,2DAAM,EAAE,iEAAS,EAAE,6DAAO,EAAE,6DAAO;AAC/C,EAAE,qEAAW,EAAE,6DAAO,EAAE,+DAAQ,EAAE,mEAAU,EAAE,iEAAS;AACvD,EAAE,+DAAQ,EAAE,yDAAK,EAAE,6DAAO,EAAE,qEAAW,EAAE,yDAAK;AAC9C,EAAE,+DAAQ,EAAE,yDAAK,EAAE,2DAAM,EAAE,+DAAQ,EAAE,+DAAQ;AAC7C,EAAE,uEAAY,EAAE,yEAAa,EAAE,+DAAQ,EAAE,yEAAa,EAAE,yDAAK;AAC7D,EAAE,+DAAQ,EAAE,+DAAQ,EAAE,uEAAY,EAAE,qEAAW,EAAE,iEAAS;AAC1D,EAAE,iEAAS,EAAE,mDAAE,EAAE,qDAAG,EAAE,6DAAO,EAAE,+DAAQ;AACvC,EAAE,iEAAS,EAAE,+DAAQ,EAAE,+DAAQ,EAAE,yEAAa,EAAE,yEAAa;AAC7D,EAAE,+DAAQ;AACV,CAAC,EAAC;;;;;;;;;;;;;ACtsD;AACR;AACQ;AACQ;AACR;AACE;AAChB;AACA;AACE;AACgB;AACR;AACY;AACJ;AACY;AAChB;AACF;AACJ;AACM;AACJ;AACA;AACQ;AACR;AACE;AACI;AACF;AACF;AACN;AACI;AACQ;AACZ;AACM;AACN;AACE;AACI;AACA;AACQ;AACE;AACV;AACU;AAChB;AACM;AACA;AACQ;AACF;AACJ;AACA;AACd;AACE;AACQ;AACE;AACE;AACF;AACA;AACU;AACA;AACV;AACR;;;;;;;;;;;;;ACxD5C;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,mEAAI,EAAC;;;;;;;;;;;;;ACnBpB;AAAA;AAAA;AAAA;AAAA;AAAgD;AACR;AACgB;AACjB;;AAEvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,6DAAS;AACrB;AACA;AACA;AACA,MAAM,qEAAiB;AACvB,MAAM,iEAAa,QAAQ,qDAAS;AACpC;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;AC7C3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC+B;AACU;AACZ;AACI;AACJ;AACA;AACI;AACA;AACN;AACM;AACJ;AACe;AACI;AACd;AACM;AACA;AACE;AACM;AACN;AACI;AACR;AACQ;AACT;AACF;AACE;AACR;AACA;AACW;AACI;AACJ;AACR;AACC;AACO;AACX;AACU;AACC;;AAExC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,mDAAM,GAAG,mDAAM;;AAEjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,6DAAQ;AAC1B,2BAA2B,yDAAI;AAC/B,iDAAiD,kEAAa;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,kDAAM;;AAER;AACA,0DAAM,SAAS,oDAAI;AACnB,0DAAM,OAAO,oDAAI;AACjB,0DAAM,UAAU,kDAAM;AACtB,0DAAM,YAAY,kDAAM;AACxB,0DAAM,gBAAgB,kDAAM;AAC5B,0DAAM,cAAc,kDAAM;AAC1B,0DAAM,MAAM,kDAAM;AAClB,0DAAM,UAAU,oDAAI;AACpB,0DAAM,QAAQ,oDAAI;AAClB,0DAAM,WAAW,iDAAI;AACrB,0DAAM,WAAW,oDAAI;AACrB,0DAAM,aAAa,gDAAI;AACvB,0DAAM,SAAS,+CAAG;AAClB,0DAAM,SAAS,iDAAK;AACpB,0DAAM,WAAW,iDAAK;AACtB,0DAAM,UAAU,iDAAK;AACrB,0DAAM,QAAQ,iDAAI;AAClB,0DAAM,YAAY,iDAAI;AACtB,0DAAM,YAAY,iDAAI;AACtB,0DAAM,WAAW,sDAAU;AAC3B,0DAAM,UAAU,kDAAM;AACtB,0DAAM,SAAS,oDAAI;AACnB,0DAAM,cAAc,oDAAI;AACxB,0DAAM,YAAY,oDAAI;AACtB,0DAAM,YAAY,kDAAM;AACxB,0DAAM,gBAAgB,kDAAM;AAC5B,0DAAM,SAAS,oDAAI;AACnB,0DAAM,SAAS,oDAAI;AACnB,0DAAM,cAAc,iDAAK;AACzB,0DAAM,gBAAgB,iDAAK;AAC3B,0DAAM,kBAAkB,iDAAK;AAC7B,0DAAM,QAAQ,iDAAK;AACnB,0DAAM,aAAa,iDAAK;AACxB,0DAAM,kBAAkB,iDAAK;AAC7B,0DAAM,aAAa,iDAAK;AACxB,0DAAM,QAAQ,iDAAK;AACnB,0DAAM,UAAU,sDAAU;AAC1B,0DAAM,WAAW,sDAAU;AAC3B,0DAAM,eAAe,sDAAU;AAC/B,0DAAM,gBAAgB,sDAAU;AAChC,0DAAM,WAAW,iDAAK;AACtB,0DAAM,eAAe,iDAAK;AAC1B,0DAAM,gBAAgB,iDAAK;AAC3B,0DAAM,QAAQ,oDAAI;AAClB,0DAAM,QAAQ,iDAAI;AAClB,0DAAM,aAAa,iDAAI;AACvB,0DAAM,aAAa,iDAAK;AACxB,0DAAM,aAAa,kDAAM;AACzB,0DAAM,eAAe,kDAAM;AAC3B,0DAAM,WAAW,sDAAU;AAC3B,0DAAM,WAAW,iDAAK;AACtB,0DAAM,gBAAgB,iDAAK;AAC3B,0DAAM,kBAAkB,iDAAK;AAC7B,0DAAM,oBAAoB,iDAAK;AAC/B,0DAAM,UAAU,kDAAM;AACtB,0DAAM,YAAY,kDAAM;AACxB,0DAAM,aAAa,sDAAU;AAC7B,0DAAM,YAAY,iDAAI;AACtB,0DAAM,SAAS,sDAAU;AACzB,0DAAM,QAAQ,iDAAI;AAClB,0DAAM,UAAU,kDAAM;AACtB,0DAAM,OAAO,sDAAU;AACvB,0DAAM,WAAW,kDAAM;AACvB,0DAAM,aAAa,kDAAM;AACzB,0DAAM,WAAW,iDAAI;AACrB,0DAAM,mBAAmB,iDAAI;AAC7B,0DAAM,WAAW,oDAAI;AACrB,0DAAM,SAAS,kDAAM;AACrB,0DAAM,aAAa,kDAAM;AACzB,0DAAM,UAAU,iDAAI;AACpB,0DAAM,YAAY,iDAAI;AACtB,0DAAM;AACN,0DAAM,UAAU,mDAAM;AACtB,0DAAM,UAAU,iDAAI;AACpB,0DAAM,QAAQ,kDAAM;AACpB,0DAAM,UAAU,kDAAM;AACtB,0DAAM,QAAQ,oDAAI;AAClB,0DAAM,WAAW,sDAAU;AAC3B,0DAAM,QAAQ,iDAAI;AAClB,0DAAM,YAAY,oDAAI;AACtB,0DAAM,aAAa,iDAAI;AACvB,0DAAM,YAAY,iDAAI;AACtB,0DAAM,WAAW,oDAAI;AACrB,0DAAM,gBAAgB,oDAAI;AAC1B,0DAAM,aAAa,sDAAU;AAC7B,0DAAM,QAAQ,kDAAM;AACpB,0DAAM,UAAU,kDAAM;AACtB,0DAAM,YAAY,iDAAI;AACtB,0DAAM,cAAc,iDAAI;AACxB,0DAAM,QAAQ,iDAAK;AACnB,0DAAM,WAAW,iDAAK;AACtB,0DAAM,aAAa,iDAAK;AACxB,0DAAM,eAAe,iDAAK;AAC1B,0DAAM,UAAU,iDAAK;AACrB,0DAAM,SAAS,iDAAI;AACnB,0DAAM,cAAc,iDAAI;AACxB,0DAAM,SAAS,oDAAI;AACnB,0DAAM,UAAU,sDAAU;AAC1B,0DAAM,UAAU,iDAAK;AACrB,0DAAM,QAAQ,oDAAI;AAClB,0DAAM,WAAW,iDAAK;AACtB,0DAAM,cAAc,sDAAU;AAC9B,0DAAM,OAAO,kDAAM;AACnB,0DAAM,WAAW,kDAAM;AACvB,0DAAM,WAAW,sDAAU;AAC3B,0DAAM,SAAS,iDAAK;AACpB,0DAAM,UAAU,sDAAU;AAC1B,0DAAM,cAAc,iDAAK;AACzB,0DAAM,gBAAgB,iDAAK;AAC3B,0DAAM,SAAS,kDAAM;AACrB,0DAAM,UAAU,oDAAI;AACpB,0DAAM,QAAQ,iDAAK;AACnB,0DAAM,QAAQ,iDAAK;AACnB,0DAAM,aAAa,iDAAK;AACxB,0DAAM,kBAAkB,iDAAK;AAC7B,0DAAM,aAAa,iDAAK;AACxB,0DAAM,OAAO,+CAAG;AAChB,0DAAM,YAAY,oDAAI;AACtB,0DAAM,QAAQ,iDAAI;AAClB,0DAAM,WAAW,gDAAI;AACrB,0DAAM,WAAW,kDAAM;AACvB,0DAAM,aAAa,kDAAM;AACzB,0DAAM,UAAU,iDAAI;AACpB,0DAAM,iBAAiB,gDAAI;AAC3B,0DAAM,aAAa,kDAAM;AACzB,0DAAM,SAAS,oDAAI;AACnB,0DAAM,SAAS,iDAAK;AACpB,0DAAM,WAAW,iDAAK;AACtB,0DAAM,aAAa,iDAAK;AACxB,0DAAM,QAAQ,iDAAK;AACnB,0DAAM,UAAU,iDAAK;AACrB,0DAAM,YAAY,iDAAK;AACvB,0DAAM,SAAS,kDAAM;AACrB,0DAAM,SAAS,iDAAK;AACpB,0DAAM,aAAa,iDAAK;AACxB,0DAAM,UAAU,kDAAM;AACtB,0DAAM,cAAc,kDAAM;AAC1B,0DAAM,UAAU,kDAAM;AACtB,0DAAM,YAAY,kDAAM;AACxB,0DAAM,WAAW,iDAAK;AACtB,0DAAM,SAAS,kDAAM;AACrB,0DAAM,QAAQ,oDAAI;AAClB,0DAAM,OAAO,iDAAK;AAClB,0DAAM,SAAS,iDAAK;AACpB,0DAAM,WAAW,iDAAK;AACtB,0DAAM,OAAO,iDAAK;AAClB,0DAAM,aAAa,iDAAK;AACxB,0DAAM,iBAAiB,iDAAK;AAC5B,0DAAM,WAAW,iDAAK;;AAEtB;AACA,0DAAM,WAAW,kDAAM;AACvB,0DAAM,aAAa,kDAAM;AACzB,0DAAM,UAAU,kDAAM;AACtB,0DAAM,cAAc,kDAAM;;AAE1B;AACA,MAAM,0DAAM,EAAE,0DAAM;;AAEpB;AACA,0DAAM,OAAO,gDAAI;AACjB,0DAAM,WAAW,iDAAI;AACrB,0DAAM,aAAa,kDAAM;AACzB,0DAAM,cAAc,kDAAM;AAC1B,0DAAM,QAAQ,gDAAI;AAClB,0DAAM,SAAS,kDAAM;AACrB,0DAAM,SAAS,gDAAI;AACnB,0DAAM,aAAa,gDAAI;AACvB,0DAAM,iBAAiB,gDAAI;AAC3B,0DAAM,aAAa,gDAAI;AACvB,0DAAM,cAAc,gDAAI;AACxB,0DAAM,UAAU,kDAAM;AACtB,0DAAM,aAAa,iDAAI;AACvB,0DAAM,UAAU,gDAAI;AACpB,0DAAM,YAAY,kDAAM;AACxB,0DAAM,MAAM,gDAAI;AAChB,0DAAM,UAAU,kDAAM;AACtB,0DAAM,gBAAgB,kDAAM;AAC5B,0DAAM,SAAS,sDAAU;AACzB,0DAAM,QAAQ,sDAAU;AACxB,0DAAM,aAAa,iDAAK;AACxB,0DAAM,WAAW,kDAAM;AACvB,0DAAM,YAAY,sDAAU;AAC5B,0DAAM,iBAAiB,iDAAK;AAC5B,0DAAM,eAAe,kDAAM;AAC3B,0DAAM,SAAS,gDAAI;AACnB,0DAAM,WAAW,sDAAU;AAC3B,0DAAM,gBAAgB,sDAAU;AAChC,0DAAM,SAAS,kDAAM;AACrB,0DAAM,cAAc,kDAAM;AAC1B,0DAAM,UAAU,kDAAM;AACtB,0DAAM,eAAe,kDAAM;AAC3B,0DAAM,OAAO,kDAAM;AACnB,0DAAM,MAAM,gDAAI;AAChB,0DAAM,OAAO,gDAAI;AACjB,0DAAM,OAAO,kDAAM;AACnB,0DAAM,SAAS,kDAAM;AACrB,0DAAM,QAAQ,iDAAK;AACnB,0DAAM,YAAY,qDAAQ;AAC1B,0DAAM,YAAY,sDAAU;AAC5B,0DAAM,WAAW,iDAAK;AACtB,0DAAM,WAAW,kDAAM;AACvB,0DAAM,UAAU,kDAAM;AACtB,0DAAM,eAAe,gDAAI;AACzB,0DAAM,WAAW,oDAAO;AACxB,0DAAM,iBAAiB,gDAAI;AAC3B,0DAAM,eAAe,gDAAI;AACzB,0DAAM,qBAAqB,gDAAI;AAC/B,0DAAM,aAAa,gDAAI;AACvB,0DAAM,YAAY,gDAAI;AACtB,0DAAM,UAAU,gDAAI;AACpB,0DAAM,aAAa,gDAAI;AACvB,0DAAM,WAAW,gDAAI;AACrB,0DAAM,WAAW,gDAAI;AACrB,0DAAM,eAAe,gDAAI;AACzB,0DAAM,WAAW,gDAAI;AACrB,0DAAM,YAAY,gDAAI;AACtB,0DAAM,cAAc,gDAAI;AACxB,0DAAM,aAAa,gDAAI;AACvB,0DAAM,YAAY,gDAAI;AACtB,0DAAM,SAAS,gDAAI;AACnB,0DAAM,WAAW,gDAAI;AACrB,0DAAM,eAAe,gDAAI;AACzB,0DAAM,SAAS,gDAAI;AACnB,0DAAM,YAAY,gDAAI;AACtB,0DAAM,SAAS,gDAAI;AACnB,0DAAM,UAAU,gDAAI;AACpB,0DAAM,YAAY,gDAAI;AACtB,0DAAM,YAAY,qDAAQ;AAC1B,0DAAM,gBAAgB,gDAAI;AAC1B,0DAAM,iBAAiB,gDAAI;AAC3B,0DAAM,YAAY,gDAAI;AACtB,0DAAM,iBAAiB,gDAAI;AAC3B,0DAAM,SAAS,gDAAI;AACnB,0DAAM,YAAY,gDAAI;AACtB,0DAAM,YAAY,gDAAI;AACtB,0DAAM,gBAAgB,gDAAI;AAC1B,0DAAM,eAAe,gDAAI;AACzB,0DAAM,aAAa,gDAAI;AACvB,0DAAM,aAAa,gDAAI;AACvB,0DAAM,QAAQ,iDAAK;AACnB,0DAAM,aAAa,kDAAM;AACzB,0DAAM,QAAQ,iDAAI;AAClB,0DAAM,eAAe,iDAAK;AAC1B,0DAAM,aAAa,kDAAM;AACzB,0DAAM,cAAc,kDAAM;AAC1B,0DAAM,MAAM,gDAAI;AAChB,0DAAM,OAAO,gDAAI;AACjB,0DAAM,OAAO,gDAAI;AACjB,0DAAM,SAAS,gDAAI;AACnB,0DAAM,QAAQ,gDAAI;AAClB,0DAAM,UAAU,gDAAI;AACpB,0DAAM,OAAO,gDAAI;AACjB,0DAAM,SAAS,gDAAI;AACnB,0DAAM,aAAa,iDAAI;AACvB,0DAAM,aAAa,iDAAI;AACvB,0DAAM,cAAc,iDAAI;AACxB,0DAAM,cAAc,iDAAI;AACxB,0DAAM,YAAY,iDAAI;AACtB,0DAAM,YAAY,gDAAI;AACtB,0DAAM,OAAO,iDAAK;AAClB,0DAAM,QAAQ,iDAAI;AAClB,0DAAM,OAAO,gDAAI;AACjB,0DAAM,OAAO,kDAAM;AACnB,0DAAM,UAAU,kDAAM;AACtB,0DAAM,YAAY,kDAAM;AACxB,0DAAM,YAAY,kDAAM;AACxB,0DAAM,UAAU,kDAAM;AACtB,0DAAM,UAAU,sDAAU;AAC1B,0DAAM,eAAe,sDAAU;AAC/B,0DAAM,UAAU,kDAAM;AACtB,0DAAM,WAAW,kDAAM;AACvB,0DAAM,UAAU,kDAAM;AACtB,0DAAM,SAAS,gDAAI;AACnB,0DAAM,UAAU,sDAAU;AAC1B,0DAAM,QAAQ,sDAAU;AACxB,0DAAM,aAAa,kDAAM;AACzB,0DAAM,QAAQ,sDAAU;AACxB,0DAAM,eAAe,iDAAK;AAC1B,0DAAM,iBAAiB,iDAAK;AAC5B,0DAAM,iBAAiB,iDAAK;AAC5B,0DAAM,mBAAmB,iDAAK;AAC9B,0DAAM,qBAAqB,iDAAK;AAChC,0DAAM,qBAAqB,iDAAK;AAChC,0DAAM,aAAa,kDAAM;AACzB,0DAAM,cAAc,kDAAM;AAC1B,0DAAM,YAAY,gDAAI;AACtB,0DAAM,OAAO,gDAAI;AACjB,0DAAM,SAAS,gDAAI;AACnB,0DAAM,YAAY,kDAAM;AACxB,0DAAM,SAAS,iDAAI;AACnB,0DAAM,YAAY,gDAAI;AACtB,0DAAM,aAAa,sDAAS;AAC5B,0DAAM,YAAY,gDAAI;AACtB,0DAAM,WAAW,kDAAM;AACvB,0DAAM,YAAY,gDAAI;AACtB,0DAAM,iBAAiB,gDAAI;AAC3B,0DAAM,YAAY,gDAAI;AACtB,0DAAM,WAAW,kDAAM;AACvB,0DAAM,QAAQ,kDAAM;AACpB,0DAAM,WAAW,kDAAM;AACvB,0DAAM,aAAa,kDAAM;AACzB,0DAAM,YAAY,kDAAM;AACxB,0DAAM,YAAY,kDAAM;AACxB,0DAAM,YAAY,iDAAI;AACtB,0DAAM,aAAa,kDAAM;AACzB,0DAAM,cAAc,kDAAM;;AAE1B;AACA,0DAAM,QAAQ,sDAAU;AACxB,0DAAM,aAAa,sDAAU;AAC7B,0DAAM,SAAS,iDAAK;;AAEpB,MAAM,0DAAM;AACZ;AACA,EAAE,+DAAU,CAAC,0DAAM;AACnB,6BAA6B,0DAAM;AACnC;AACA;AACA,GAAG;AACH;AACA,CAAC,MAAM,iBAAiB;;AAExB;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,0DAAM;AACN,CAAC,0DAAM,oBAAoB,kDAAM,+BAA+B,0DAAM;;AAEtE;AACA,8DAAS;AACT,EAAE,0DAAM,2BAA2B,0DAAM;AACzC,CAAC;;AAED;AACA,8DAAS;AACT,EAAE,wDAAW;AACb,wCAAwC,8DAAS;;AAEjD;AACA,YAAY,wDAAW;AACvB;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA,EAAE,wDAAW;AACb;AACA;AACA,CAAC;;AAED;AACA,8DAAS;AACT;AACA;;AAEA,EAAE,wDAAW;AACb;AACA;AACA,kBAAkB,iEAAY;AAC9B;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA,8DAAS;AACT;;AAEA,EAAE,wDAAW;AACb;AACA;AACA,CAAC;;AAED;AACA,8DAAS;AACT;;AAEA,EAAE,wDAAW;AACb,mCAAmC,wDAAW;AAC9C;AACA,CAAC;;AAED,wDAAW;AACX,qBAAqB,qDAAQ;AAC7B;;AAEA,wDAAW;AACX;AACA;;AAEA,wDAAW;AACX;AACA;;AAEA,wDAAW,uBAAuB,6DAAQ;AAC1C;AACA,eAAe,wDAAW;AAC1B;AACA;AACA,WAAW,+DAAU;AACrB,GAAG;AACH,CAAC;;AAED,wDAAW;AACX,qBAAqB,2DAAM,CAAC,iEAAY;AACxC;;AAEA,wDAAW;AACX,UAAU,8DAAS;;AAEnB;AACA;AACA,eAAe,wDAAW;AAC1B;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,UAAU,8DAAS;AACnB;AACA;AACA;AACA;;AAEA,wDAAW;AACX;AACA;;AAEA,wDAAW;AACX;AACA;;AAEA;AACA,+DAAU,CAAC,wDAAW;AACtB;AACA;AACA,mBAAmB,0DAAM;AACzB;;AAEA;AACA;AACA;AACA,EAAE,0DAAM;AACR;AACA;AACA,kCAAkC,wDAAW;AAC7C;AACA,4BAA4B,4DAAO;;AAEnC;AACA,oCAAoC,0DAAM,EAAE,8DAAS;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,wDAAW;AAChD;AACA,+BAA+B,SAAS,iDAAI,+CAA+C;AAC3F,iBAAiB,0DAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,8DAAS;AACT;AACA;AACA;;AAEA,EAAE,0DAAM;AACR;AACA;AACA;AACA,wBAAwB,4DAAO;AAC/B;AACA;AACA,wBAAwB,4DAAO;AAC/B,KAAK;AACL;AACA,CAAC;;AAED;AACA,+DAAU,CAAC,wDAAW;AACtB,mBAAmB,0DAAM;AACzB;AACA;AACA,6BAA6B,sDAAS;AACtC,MAAM,sDAAS;AACf;AACA,IAAI,sDAAS,YAAY,yCAAyC;AAClE;AACA,CAAC;;AAED,sDAAS,CAAC,iEAAY;AACtB;AACA;AACA,CAAC;;AAED;AACA,wDAAW,mBAAmB,sDAAS;AACvC,wDAAW,qBAAqB,wDAAW;AAC3C,wDAAW,mBAAmB,sDAAS;;AAEvC;AACA,0DAAM,gBAAgB,+CAAG;AACzB,0DAAM,mBAAmB,+CAAG;AAC5B,0DAAM,oBAAoB,+CAAG;AAC7B,0DAAM,kBAAkB,+CAAG;AAC3B,0DAAM,mBAAmB,+CAAG;AAC5B,0DAAM,qBAAqB,+CAAG;AAC9B,0DAAM,oBAAoB,0DAAM,qBAAqB,0DAAM,mBAAmB,+CAAG;;AAEjF;AACA,0DAAM,mBAAmB,0DAAM;;AAE/B;AACA,EAAE,0DAAM,0BAA0B,+CAAG;AACrC;;AAEe,yHAAM,EAAC;;;;;;;;;;;;;ACloBthB;AACU;AACF;AACJ;AACM;AACA;AACI;AACE;AACF;AACV;AACE;AACA;AACA;AACA;AACQ;AACQ;AACR;AACN;AACE;AACF;AACJ;AACQ;AACI;AACJ;AACF;AACF;AACF;AACU;AACJ;AACJ;AACM;AACF;AACQ;AACd;AACA;AACU;AACI;AACI;AAChB;AACJ;AACU;AACU;AACV;AACV;AACU;AACF;AACF;AACI;AACd;AACQ;AACY;AACd;AACE;AACQ;AACZ;AACI;AACJ;AACU;AACJ;AACE;AACU;AACJ;AACZ;AACI;AACQ;AACE;AACV;AACQ;AACE;AAChB;AACE;AACF;AACU;AACJ;AACU;AACd;AACU;AACR;AACU;AACJ;AACA;AACI;AAChB;AACQ;AACV;AACE;AACA;AACI;AACF;AACQ;AACF;AACE;AACF;AACA;AACU;AACI;AACI;AACpB;AACI;AACJ;AACM;AACI;AACR;AACY;AACJ;AACY;AAChB;AACF;AACJ;AACM;AACJ;AACA;AACQ;AACR;AACE;AACI;AACF;AACF;AACN;AACI;AACQ;AACZ;AACM;AACN;AACE;AACI;AACA;AACQ;AACE;AACV;AACU;AAChB;AACM;AACA;AACQ;AACF;AACJ;AACA;AACF;AACR;AACU;AACR;AACF;AACI;AACJ;AACc;AACH;AACD;AACE;AAChB;AACE;AACA;AACQ;AACI;AACJ;AACgB;AACxB;AACI;AACF;AACI;AACE;AACJ;AACQ;AACN;AACI;AACV;AACI;AACA;AACM;AACJ;AACJ;AACA;AACF;AACA;AACM;AACJ;AACI;AACJ;AACM;AACN;AACQ;AACE;AACF;AACV;AACM;AACI;AACA;AACF;AACU;AACN;AACV;AACI;AACF;AACM;AACI;AACZ;AACM;AACI;AACI;AACV;AACA;AACF;AACU;AACV;AACE;AACU;AACV;AACA;AACA;AACE;AACN;AACI;AACE;AACJ;AACE;AACQ;AACd;AACQ;AACA;AACN;AACE;AACQ;AACV;AACI;AACU;AACI;AACA;AACI;AACI;AACA;AACd;AACI;AACd;AACE;AACM;AACE;AACF;AACA;AACE;AACA;AACJ;AACA;AACV;AACI;AACF;AACA;AACU;AACU;AACV;AACZ;AACU;AACgB;AAChB;AACR;AACE;AACI;AACE;AACE;AACE;AACR;AACI;AACF;AACE;AACF;AACI;AACN;AACc;AACA;AACV;AACF;AACI;AACV;AACM;AACI;AACF;AACN;AACM;AACN;AACI;AACI;AACV;AACI;AACI;AACA;AACN;AACA;AACQ;AACN;AACQ;AACF;AACE;AACV;AACI;AACF;AACI;AACF;AACJ;AACF;AACU;AACM;AACL;AACO;AACX;AACE;AACW;AACD;AACH;AAClB;AACI;AACI;AACR;AACY;AACQ;AACZ;AACJ;;;;;;;;;;;;;AC1U9C;AAAA;AAAsD;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oEAAgB;AAChC;AACA,CAAC;;AAEc,wEAAS,EAAC;;;;;;;;;;;;;AC1BzB;AAAA;AAAoD;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,mEAAe;;AAEjB,yEAAU,EAAC;;;;;;;;;;;;;ACrB1B;AAAA;AAAA;AAAkC;AACsC;;AAExE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6EAAyB,CAAC,kDAAM;;AAE1B,iEAAE,EAAC;;;;;;;;;;;;;AC5BlB;AAAA;AAAwE;;AAExE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,6EAAyB;AACnC;AACA,CAAC;;AAEc,kEAAG,EAAC;;;;;;;;;;;;;AC7BnB;AAAA;AAAA;AAAA;AAAA;AAAsC;AACQ;AACV;AACD;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,iBAAiB;AAC3B;AACA;AACA;AACA,MAAM,mBAAmB;AACzB,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,2DAAO,eAAe,oDAAQ,GAAG,mDAAO;AACrD,0BAA0B,gEAAY;AACtC;;AAEe,kEAAG,EAAC;;;;;;;;;;;;;ACpDnB;AAAA;AAAA;AAAA;AAAoD;AACV;AACI;;AAE9C;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA,cAAc,iBAAiB;AAC/B;AACA,IAAI;AACJ,UAAU;AACV;AACA;AACA;AACA,aAAa,gEAAY;;AAEzB,EAAE,8DAAU;AACZ,IAAI,mEAAe;AACnB,GAAG;AACH;AACA;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;ACnCvB;AAAA;AAAA;AAAA;AAAoD;AACV;AACI;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,iBAAiB,+BAA+B;AAChD,iBAAiB;AACjB;AACA;AACA,mCAAmC,cAAc,EAAE;AACnD,UAAU,2BAA2B;AACrC;AACA;AACA;AACA,UAAU,2BAA2B;AACrC;AACA;AACA;AACA,aAAa,gEAAY;;AAEzB,EAAE,8DAAU;AACZ,IAAI,mEAAe;AACnB,GAAG;AACH;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;AC1CzB;AAAA;AAAA;AAAwC;AACI;;AAE5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA,MAAM,yBAAyB;AAC/B,MAAM;AACN;AACA;AACA,gCAAgC,iBAAiB;AACjD,WAAW,yBAAyB;AACpC;AACA;AACA,SAAS,+DAAW,CAAC,6DAAS;AAC9B;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;ACtCvB;AAAA;AAAA;AAAwC;AACoB;;AAE5D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,EAAE;AACb,aAAa,SAAS;AACtB;AACA;AACA;AACA,MAAM,yBAAyB;AAC/B,MAAM;AACN;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,SAAS,uEAAmB,OAAO,6DAAS;AAC5C;;AAEe,8EAAe,EAAC;;;;;;;;;;;;;ACpC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2B;AACE;AACI;AACF;AACJ;AACI;AACF;AACI;AACN;AACI;AACM;AACN;AACM;AACV;AACI;;AAEhB;AACf,EAAE,oDAAG,EAAE,sDAAI,EAAE,0DAAM,EAAE,wDAAK,EAAE,oDAAG;AAC/B,EAAE,wDAAK,EAAE,sDAAI,EAAE,0DAAM,EAAE,oDAAG,EAAE,wDAAK;AACjC,EAAE,+DAAQ,EAAE,yDAAK,EAAE,+DAAQ,EAAE,qDAAG,EAAE,yDAAK;AACvC,CAAC,EAAC;;;;;;;;;;;;;ACpBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACE;AACI;AACF;AACJ;AACI;AACF;AACI;AACN;AACI;AACM;AACN;AACM;AACV;AACI;AACF;;;;;;;;;;;;;ACf5C;AAAA;AAAA;AAAA;AAA8C;AACZ;AACG;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,gEAAY,QAAQ,oDAAQ,EAAE,kDAAM;AAC1C;AACA;;AAEe,kEAAG,EAAC;;;;;;;;;;;;;AC5BnB;AAAA;AAAA;AAAA;AAA8C;AACZ;AACY;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,EAAE;AACf;AACA;AACA,mBAAmB,SAAS,GAAG,SAAS;AACxC;AACA,iCAAiC,YAAY,EAAE;AAC/C,UAAU;AACV;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,MAAM,gEAAY,QAAQ,gEAAY,eAAe,kDAAM;AAC3D;AACA;;AAEe,oEAAK,EAAC;;;;;;;;;;;;;ACjCrB;AAAA;AAAA;AAAsC;AACD;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,4DAAQ,QAAQ,oDAAQ;AACjC;;AAEe,mEAAI,EAAC;;;;;;;;;;;;;ACrBpB;AAAA;AAAA;AAA8C;AACR;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA,mBAAmB,SAAS,GAAG,SAAS,GAAG,SAAS,GAAG,SAAS;AAChE;AACA,kCAAkC,YAAY,EAAE;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,4DAAQ,QAAQ,gEAAY;AACrC;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;AC9BtB;AAAA;AAAsC;;AAEtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA,iBAAiB;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,oDAAQ;AACjD;AACA;;AAEA;AACA,gBAAgB,oDAAQ;;AAET,sEAAO,EAAC;;;;;;;;;;;;;ACxEvB;AAAA;AAAA;AAAwC;AACU;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA,YAAY,SAAS,GAAG,SAAS;AACjC;AACA;AACA;AACA,YAAY,SAAS,GAAG,SAAS;AACjC;AACA;AACA;AACA,UAAU,QAAQ,iBAAiB,GAAG,iBAAiB;AACvD;AACA,YAAY,kEAAc;AAC1B,EAAE,6DAAS;AACX,CAAC;;AAEc,oEAAK,EAAC;;;;;;;;;;;;;ACtCrB;AAAA;AAAA;AAAwC;AACU;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB;AAChB;AACA;AACA,UAAU;AACV;AACA,gBAAgB,kEAAc;AAC9B,EAAE,6DAAS;AACX,CAAC;;AAEc,wEAAS,EAAC;;;;;;;;;;;;;ACtCzB;AAAA;AAAA;AAA0C;AACJ;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,KAAK;AAChB,aAAa,SAAS;AACtB;AACA;AACA;AACA,MAAM,OAAO,qBAAqB,EAAE;AACpC,MAAM,OAAO,qBAAqB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,4DAAQ;AACrB;AACA,WAAW,8DAAU;AACrB;AACA,CAAC;;AAEc,qEAAM,EAAC;;;;;;;;;;;;;ACjCtB;AAAA;AAAA;AAA0C;AACJ;;AAEtC;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB,aAAa,SAAS;AACtB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4DAAQ;AACvB;AACA,WAAW,8DAAU;AACrB;AACA,CAAC;;AAEc,uEAAQ,EAAC;;;;;;;;;;;;;AChCxB;AAAA;AAAA;AAAA;AAA8C;AACZ;AACG;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,gEAAY,QAAQ,oDAAQ,EAAE,kDAAM;AAC1C;AACA;;AAEe,kEAAG,EAAC;;;;;;;;;;;;;AC5BnB;AAAA;AAAA;AAAA;AAA8C;AACA;AACZ;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,EAAE;AACf;AACA;AACA,mBAAmB,SAAS,GAAG,SAAS;AACxC;AACA,iCAAiC,YAAY,EAAE;AAC/C,UAAU;AACV;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,MAAM,gEAAY,QAAQ,gEAAY,eAAe,kDAAM;AAC3D;AACA;;AAEe,oEAAK,EAAC;;;;;;;;;;;;;ACjCrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACA;AACQ;AACR;AACC;AACJ;AACR;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,OAAO;AAClB,WAAW,OAAO,YAAY;AAC9B,WAAW,QAAQ;AACnB,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mBAAmB,GAAG,iBAAiB;AACnD;AACA;AACA;AACA;AACA,cAAc,wDAAI;AAClB,oBAAoB,iEAAa;;AAEjC,gBAAgB,4DAAQ;AACxB,eAAe,8DAAU;;AAEzB,EAAE,6DAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,6DAAS;;AAEtD,wBAAwB,qDAAqD;AAC7E;AACA;AACA;AACA,kCAAkC,6DAAS;AAC3C;AACA;AACA,GAAG;;AAEH;AACA;;AAEe,oEAAK,EAAC;;;;;;;;;;;;;ACzErB;AAAA;AAA4D;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,eAAe,uEAAmB;AAClC;AACA,CAAC;;AAEc,uEAAQ,EAAC;;;;;;;;;;;;;ACrBxB;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;ACvCtB;AAAA;AAAmC;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,sBAAsB,2DAAO;AAC7B;AACA;AACA;;AAEA,UAAU;AACV;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;AClC3B;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,mEAAI,EAAC;;;;;;;;;;;;;AChBpB;AAAA;AAA8B;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,SAAS,gDAAI;AACb;;AAEe,kEAAG,EAAC;;;;;;;;;;;;;ACtBnB;AAAA;AAAA;AAAoC;AACG;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,2DAAO,QAAQ,6DAAS;AAC3D;;AAEe,kEAAG,EAAC;;;;;;;;;;;;;AC5BnB;AAAA;AAAA;AAAA;AAAoC;AACE;AACC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6DAAS;AACf,SAAS,4DAAQ;AACjB,WAAW,2DAAO;AAClB,GAAG;AACH;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;AC/BtB;AAAA;AAAA;AAAA;AAA+B;AACI;AACF;;AAElB;AACf,EAAE,wDAAK,EAAE,4DAAO,EAAE,0DAAM;AACxB,CAAC,EAAC;;;;;;;;;;;;;ACNF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACI;AACF;AACF;;;;;;;;;;;;;ACH9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiC;AACI;AACQ;AACJ;AAChB;AACQ;AACI;AACQ;AACV;AACI;AACN;AACQ;AACN;AACQ;AACZ;AACU;AACR;AACU;AACJ;AACI;AAChB;AACA;AACI;AACE;AACI;AACJ;AACJ;AACI;AACE;AACI;AACR;AACQ;AACV;AACI;AACJ;AACI;AACA;AACN;AACQ;AACA;AACI;AACA;AACR;AACE;AACQ;AACR;AACI;;AAEtB;AACf,EAAE,0DAAM,EAAE,8DAAQ,EAAE,sEAAY,EAAE,kEAAU,EAAE,kDAAE;AAChD,EAAE,0DAAM,EAAE,8DAAQ,EAAE,sEAAY,EAAE,4DAAO,EAAE,gEAAS;AACpD,EAAE,2DAAM,EAAE,mEAAU,EAAE,6DAAO,EAAE,qEAAW,EAAE,yDAAK;AACjD,EAAE,mEAAU,EAAE,2DAAM,EAAE,qEAAW,EAAE,iEAAS,EAAE,qEAAW;AACzD,EAAE,qDAAG,EAAE,qDAAG,EAAE,yDAAK,EAAE,2DAAM,EAAE,+DAAQ;AACnC,EAAE,2DAAM,EAAE,uDAAI,EAAE,2DAAM,EAAE,6DAAO,EAAE,iEAAS;AAC1C,EAAE,yDAAK,EAAE,iEAAS,EAAE,uDAAI,EAAE,2DAAM,EAAE,uDAAI;AACtC,EAAE,2DAAM,EAAE,2DAAM,EAAE,qDAAG,EAAE,6DAAO,EAAE,6DAAO;AACvC,EAAE,iEAAS,EAAE,iEAAS,EAAE,yDAAK,EAAE,2DAAM,EAAE,mEAAU;AACjD,EAAE,2DAAM,EAAE,+DAAQ;AAClgD;AACI;AACQ;AACJ;AAChB;AACQ;AACI;AACQ;AACV;AACI;AACN;AACQ;AACN;AACQ;AACZ;AACU;AACR;AACU;AACJ;AACI;AAChB;AACA;AACI;AACE;AACI;AACJ;AACJ;AACI;AACE;AACI;AACR;AACQ;AACV;AACI;AACJ;AACI;AACA;AACN;AACQ;AACA;AACI;AACA;AACR;AACE;AACQ;AACR;AACI;AACN;;;;;;;;;;;;;AC/C9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsC;AACE;AACA;AACF;AACI;AACU;AACd;AACQ;;AAE9C;AACA;AACA;AACA;;AAEA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,qBAAqB;AAChC,aAAa,OAAO;AACpB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,UAAU;AACV;AACA,WAAW,4DAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,UAAU,4DAAQ;AAClB,WAAW,4DAAQ;AACnB;AACA;AACA,GAAG;AACH,EAAE,8DAAU,SAAS,gEAAY;AACjC;AACA,aAAa,6DAAS,iEAAiE,2DAAe;AACtG;AACA;AACA;AACA,IAAI,6DAAS;AACb;AACA;AACA,CAAC;;AAEc,mEAAI,EAAC;;;;;;;;;;;;;ACxDpB;AAAA;AAAA;AAAA;AAA8C;AACb;AACA;;AAEjC;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,UAAU;AACV;AACA;AACA,SAAS,0DAAM,SAAS,0DAAM,CAAC,gEAAY;AAC3C;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;AC5BtB;AAAA;AAAiC;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0DAAM;AACf;;AAEe,mEAAI,EAAC;;;;;;;;;;;;;ACxBpB;AAAA;AAAA;AAA4C;AACT;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,qCAAqC;AAChD;AACA,WAAW,SAAS;AACpB,YAAY,OAAO;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA,MAAM,8BAA8B;AACpC,MAAM,8BAA8B;AACpC,MAAM,8BAA8B;AACpC,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,2DAAO;AACd;AACA;AACA;AACA,OAAO,2DAAO;AACd;AACA;AACA,SAAS,+DAAW;AACpB;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;AC9CvB;AAAA;AAAA;AAAsC;AACI;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,8DAAU,CAAC,oDAAQ;;AAEf,mEAAI,EAAC;;;;;;;;;;;;;ACvBpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgC;AACM;AACM;AACE;AACR;AACE;AACF;AACH;;AAEnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,yBAAyB;AACpC;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4DAAQ;AACvB,0CAA0C,2DAAO;AACjD,MAAM,4DAAQ,gBAAgB,6DAAS,CAAC,wDAAY;AACpD,MAAM,4DAAQ,CAAC,+DAAW,iBAAiB,6DAAS,CAAC,wDAAY;;AAEjE;AACA,SAAS,4DAAQ;AACjB;AACA;;AAEA;AACA;AACA;AACA,WAAW,yDAAK;AAChB,GAAG;AACH,CAAC;;AAEc,uEAAQ,EAAC;;;;;;;;;;;;;AC5DxB;AAAA;AAAA;AAA0C;AACA;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,8DAAU,CAAC,sDAAU;;AAEtB,wEAAS,EAAC;;;;;;;;;;;;;AC7BzB;AAAA;AAAA;AAAwC;AACE;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,8DAAU,CAAC,qDAAS;;AAEpB,uEAAQ,EAAC;;;;;;;;;;;;;AC7BxB;AAAA;AAAA;AAAA;AAAA;AAAgD;AACN;AACH;AACF;;AAErC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4DAAQ;AACnB,WAAW,6DAAS;;AAEpB,2BAA2B,8DAAU;AACrC;AACA;AACA;AACA;AACA;AACA,IAAI,iEAAa;AACjB;AACA,IAAI,iEAAa;AACjB;AACA;;AAEe,kEAAG,EAAC;;;;;;;;;;;;;AChDnB;AAAA;AAAA;AAAA;AAAA;AAAgD;AACN;AACH;AACF;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4DAAQ;AACnB,WAAW,6DAAS;;AAEpB,2BAA2B,8DAAU;AACrC;AACA,gBAAgB,iEAAa;AAC7B;AACA;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;ACtCtB;AAAA;AAAA;AAAA;AAAA;AAAgD;AACN;AACH;AACF;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4DAAQ;AACnB,WAAW,6DAAS;;AAEpB,2BAA2B,8DAAU;AACrC;AACA,OAAO,iEAAa;AACpB;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;ACtCxB;AAAA;AAAA;AAA8B;AACO;;AAErC;AACA;;AAEA;AACA,qBAAqB,gDAAI;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,wBAAwB,4DAAQ;AAChC;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;AC1CxB;AAAA;AAAA;AAAA;AAAA;AAAsC;AACI;AACF;AACU;;AAElD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,KAAK;AAChB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,4DAAQ;AACtB,gBAAgB,kEAAc,WAAW,6DAAS;AAClD,SAAS,8DAAU;AACnB,CAAC;;AAED;AACA;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;ACjDvB;AAAA;AAAA;AAAA;AAAA;AAAsC;AACI;AACF;AACU;;AAElD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,KAAK;AAChB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4DAAQ;AAC3B,gBAAgB,kEAAc,WAAW,6DAAS;AAClD,SAAS,8DAAU;AACnB,CAAC;;AAED;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;AChD5B;AAAA;AAAsD;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA,MAAM,gDAAgD;AACtD,MAAM,+CAA+C;AACrD,MAAM;AACN;AACA;AACA,mCAAmC,iBAAiB,EAAE;AACtD;AACA;AACA;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oEAAgB;AAChC;AACA,CAAC,cAAc,iBAAiB,EAAE;;AAEnB,wEAAS,EAAC;;;;;;;;;;;;;AC1CzB;AAAA;AAAA;AAAsC;AACA;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,qBAAqB;AAChC,aAAa,OAAO;AACpB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,UAAU;AACV;AACA,WAAW,4DAAQ;AACnB,4BAA4B,GAAG,4DAAQ;AACvC,CAAC;;AAEc,mEAAI,EAAC;;;;;;;;;;;;;ACxBpB;AAAA;AAAA;AAAA;AAAA;AAAsC;AACQ;AACJ;AACI;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,cAAc,4DAAQ,CAAC,gEAAY;AACnC;AACA,GAAG;AACH,cAAc,gEAAY;AAC1B,SAAS,8DAAU;AACnB;AACA,GAAG;AACH;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;ACpCtB;AAAA;AAAA;AAA0C;AACI;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B,sDAAU;AACrC,gBAAgB,gEAAY;AAC5B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;AC/C5B;AAAA;AAAA;AAAA;AAAA;AAA8C;AACQ;AACtB;AACA;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,SAAS;AACtB;AACA;AACA;AACA,MAAM,OAAO,SAAS,EAAE;AACxB,MAAM,OAAO,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,yDAAK,SAAS,gEAAY,CAAC,yDAAK,UAAU,oEAAgB;AACnE;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;AC/BxB;AAAA;AAAoC;;AAEpC;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,2DAAO;AAC/C;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;AC7B1B;AAAA;AAAA;AAAsC;AACH;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4DAAQ,CAAC,mDAAO;;AAEZ,mEAAI,EAAC;;;;;;;;;;;;;AC5BpB;AAAA;AAA4C;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,+DAAW;AACjB;AACA;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;AC5BvB;AAAA;AAAA;AAA8C;AACF;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA,iBAAiB,SAAS,GAAG,SAAS,GAAG,SAAS,GAAG,SAAS;AAC9D;AACA,wBAAwB,SAAS,GAAG,SAAS;AAC7C;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA,MAAM,+DAAW,gBAAgB,gEAAY;AAC7C;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;AChCzB;AAAA;AAA4C;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA,iBAAiB,iBAAiB,GAAG,iBAAiB,GAAG,iBAAiB;AAC1E;AACA,0BAA0B,iBAAiB;AAC3C;AACA,WAAW,iBAAiB,GAAG,iBAAiB;AAChD;AACA;AACA;AACA,MAAM,+DAAW;AACjB;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;AC/B3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsC;AACJ;AACQ;AACY;AAChB;AACF;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,qBAAqB;AAChC,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,4DAAQ;AACrB;AACA,eAAe,0DAAM;;AAErB,EAAE,8DAAU,QAAQ,4DAAQ;AAC5B,WAAW,2DAAO;AAClB,GAAG,OAAO,4DAAgB;;AAE1B;AACA,CAAC;;AAEc,qEAAM,EAAC;;;;;;;;;;;;;AC1CtB;AAAA;AAAA;AAAA;AAA0C;AACQ;AACb;;AAErC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,kEAAc;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAQ;AACpB;AACA;AACA;AACA,KAAK;AACL,cAAc,4DAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,8DAAU;AACnB;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;ACjFtB;AAAA;AAA4C;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,+DAAW;;AAER,oEAAK,EAAC;;;;;;;;;;;;;AC7CrB;AAAA;AAA4C;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,+DAAW;;AAEb,yEAAU,EAAC;;;;;;;;;;;;;ACxC1B;AAAA;AAAA;AAA0C;AACJ;;AAEtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,qBAAqB;AAChC,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,YAAY,4DAAQ;AACpB,SAAS,8DAAU;AACnB,CAAC;;AAEc,oEAAK,EAAC;;;;;;;;;;;;;AChCrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACN;AACQ;AACJ;AACP;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,aAAa,yBAAyB;AACtC;AACA;AACA,IAAI,IAAI;AACR,UAAU,8BAA8B;AACxC;AACA;AACA,aAAa,2DAAO,eAAe,uDAAW,GAAG,sDAAU;AAC3D;;AAEA,0BAA0B,gEAAY,uCAAuC,oDAAQ;AACrF;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;AClDtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsD;AACN;AACF;AACJ;AACP;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,aAAa,2DAAO,eAAe,4DAAgB,GAAG,sDAAU;AAChE;;AAEA,0BAA0B,gEAAY,uCAAuC,yDAAa;AAC1F;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;ACnC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACF;AACI;AACX;AACF;;AAEjC;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA,MAAM,+CAA+C;AACrD,MAAM;AACN;AACA;AACA,gCAAgC,kBAAkB,EAAE;AACpD;AACA;AACA;AACA,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,2DAAO,eAAe,uDAAW,GAAG,sDAAU;AAC3D,0BAA0B,0DAAM,CAAC,gEAAY;AAC7C;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;AC7CtB;AAAA;AAAA;AAA8C;AACJ;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,gEAAY;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,8DAAU;AACZ;AACA;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;ACpDtB;AAAA;AAAA;AAAA;AAAA;AAA0C;AACQ;AACX;AACF;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kEAAc;AAC7B;AACA,GAAG;AACH,QAAQ,6DAAS;AACjB;AACA,SAAS,8DAAU,CAAC,4DAAQ;AAC5B;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;ACpCtB;AAAA;AAAqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4DAAQ;;AAEvB;AACA;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;AC5BvB;AAAA;AAAA;AAAsC;AACC;;AAEvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,6DAAS;AACjD,SAAS,4DAAQ;AACjB;;AAEe,mEAAI,EAAC;;;;;;;;;;;;;ACvCpB;AAAA;AAAA;AAAA;AAAsC;AACG;AACT;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB,WAAW,EAAE;AACb,aAAa,EAAE;AACf;AACA;AACA,iBAAiB,QAAQ,OAAO,+BAA+B,EAAE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,4DAAQ;;AAEjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,yDAAK;AACzD;AACA;AACA;AACA;AACA,aAAa,8DAAU;AACvB;AACA;AACA;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;ACvDtB;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;ACjCvB;AAAA;AAA4C;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,+DAAW;;AAER,oEAAK,EAAC;;;;;;;;;;;;;ACzBrB;AAAA;AAAA;AAAA;AAA4C;AACF;AACP;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,2DAAO,eAAe,uDAAW,GAAG,sDAAU;AAC3D;AACA;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;ACvBtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoD;AACF;AACf;AACe;AACX;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kEAAc;AAC7B;AACA,GAAG;AACH,QAAQ,6DAAS;AACjB;AACA,aAAa,2DAAO,eAAe,2DAAe,GAAG,0DAAc;AACnE;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACpC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgC;AACD;AACE;AACO;AACX;AACE;AACW;AACf;AACE;AACY;AACR;AACK;AACH;AACU;;AAE9B;AACf,EAAE,yDAAE,EAAE,wDAAK,EAAE,0DAAM,EAAE,iEAAM,EAAE,sDAAI;AACjC,EAAE,wDAAK,EAAE,mEAAO,EAAE,oDAAG,EAAE,sDAAI,EAAE,kEAAU;AACvC,EAAE,2DAAM,EAAE,gEAAK,EAAE,6DAAO,EAAE,uEAAY;AACtC,CAAC,EAAC;;;;;;;;;;;;;ACnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACD;AACE;AACO;AACX;AACE;AACW;AACf;AACE;AACY;AACR;AACK;AACH;AACU;AACjB;;;;;;;;;;;;;ACd3C;AAAA;AAAoC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA,iBAAiB,QAAQ,OAAO,SAAS,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,2DAAO;AAC1C;;AAEe,kEAAG,EAAC;;;;;;;;;;;;;AClCnB;AAAA;AAAoC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB,WAAW,EAAE;AACb,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,UAAU,OAAO,WAAW;AAC5B;AACA;AACA;AACA,mCAAmC,2DAAO;AAC1C;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;AC/BvB;AAAA;AAAA;AAAA;AAA8C;AACF;AACT;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,2DAAO,eAAe,wDAAY,GAAG,uDAAW;AAC7D;AACA;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;ACxBvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsC;AACJ;AACS;AACN;AACK;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,+DAAW;AACjB,WAAW,4DAAQ,eAAe,8DAAU;AAC5C;AACA,YAAY,0DAAM;AAClB;AACA;AACA;AACA,SAAS,4DAAQ;AACjB;;AAEe,mEAAI,EAAC;;;;;;;;;;;;;AC7CpB;AAAA;AAAA;AAAA;AAAwC;AACU;AACX;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,kEAAc;AACrD;AACA;AACA;AACA;AACA,gCAAgC,6DAAS;AACzC,uCAAuC,6DAAS;AAChD;AACA,SAAS,6DAAS;AAClB;;AAEe,oEAAK,EAAC;;;;;;;;;;;;;ACpCrB;AAAA;AAAsD;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oEAAgB;AAChC;AACA,CAAC;;AAEc,wEAAS,EAAC;;;;;;;;;;;;;AC3BzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACM;AACR;AACH;AACe;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB,YAAY,OAAO;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,mCAAmC;AACzC,MAAM;AACN;AACA;AACA;AACA,kBAAkB,oCAAoC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,2DAAO,eAAe,qDAAS,GAAG,oDAAQ;AACvD,eAAe,kEAAc;AAC7B;AACA;AACA,0BAA0B,gEAAY;AACtC;;AAEe,mEAAI,EAAC;;;;;;;;;;;;;AClDpB;AAAA;AAAA;AAAA;AAAA;AAA4C;AACA;AACN;AACY;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,yBAAyB;AACpC;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA,MAAM,8BAA8B;AACpC,MAAM,8BAA8B;AACpC,MAAM,8BAA8B;AACpC,MAAM;AACN;AACA;AACA,iCAAiC,eAAe,EAAE;AAClD;AACA;AACA;AACA;AACA;AACA,aAAa,4DAAQ;AACrB;AACA;AACA;AACA;AACA,oBAAoB,kEAAc;AAClC;AACA,GAAG,wBAAwB,kEAAc;AACzC;AACA;AACA,SAAS,+DAAW,aAAa,+DAAW;AAC5C,CAAC;;AAEc,qEAAM,EAAC;;;;;;;;;;;;;AC/CtB;AAAA;AAAoD;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mEAAe;AACxB;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;ACvB3B;AAAA;AAAA;AAA8C;AACU;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,EAAE;AACb,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA,mBAAmB,SAAS,GAAG,SAAS;AACxC;AACA,6BAA6B,SAAS,eAAe,YAAY,EAAE;AACnE;AACA;AACA;AACA,6BAA6B,SAAS;AACtC;AACA;AACA;AACA,SAAS,qEAAiB,eAAe,gEAAY;AACrD;;AAEe,4EAAa,EAAC;;;;;;;;;;;;;AChC7B;AAAA;AAAA;AAAoD;AAC3B;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mEAAe;AAC/B,0BAA0B,sDAAE;AAC5B;AACA;AACA;AACA;AACA;;AAEe,4EAAa,EAAC;;;;;;;;;;;;;AC9B7B;AAAA;AAAoD;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mEAAe;AACxB;;AAEe,8EAAe,EAAC;;;;;;;;;;;;;ACxB/B;AAAA;AAAA;AAA8C;AACU;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,EAAE;AACb,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA,mBAAmB,SAAS,GAAG,SAAS;AACxC;AACA,iCAAiC,SAAS,eAAe,YAAY,EAAE;AACvE;AACA;AACA;AACA,iCAAiC,SAAS;AAC1C;AACA;AACA;AACA,SAAS,qEAAiB,eAAe,gEAAY;AACrD;;AAEe,gFAAiB,EAAC;;;;;;;;;;;;;AChCjC;AAAA;AAAA;AAAoD;AAC3B;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mEAAe;AAC/B,QAAQ,sDAAE;AACV;AACA;AACA;AACA;AACA;;AAEe,gFAAiB,EAAC;;;;;;;;;;;;;AC9BjC;AAAA;AAAkD;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,kEAAc;AACpB;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACvB1B;AAAA;AAAA;AAA8C;AACI;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,kEAAc,QAAQ,gEAAY;AACxC;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;ACzB5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACN;AACE;AACQ;AACb;AACW;AACX;;AAErC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,kEAAc;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4DAAQ;AACnB;AACA;AACA,+BAA+B,4DAAQ;AACvC;AACA,gBAAgB,gEAAY;AAC5B,sBAAsB,8DAAU;AAChC,aAAa,6DAAS,CAAC,iEAAa;AACpC;AACA;AACA;AACA;;AAEe,oEAAK,EAAC;;;;;;;;;;;;;ACnDrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgC;AACQ;AACF;AACE;AACD;;AAEvC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,6DAAS;AACjD,SAAS,4DAAQ;AACjB;AACA,oBAAoB,6DAAS;;AAE7B;AACA,MAAM,6DAAS;AACf;AACA,WAAW,yDAAK;AAChB,GAAG;AACH;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;AC9DtB;AAAA;AAAA;AAAsD;AACb;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oEAAgB;AAChC,uCAAuC,8DAAU;AACjD,CAAC;;AAEc,wEAAS,EAAC;;;;;;;;;;;;;AC5BzB;AAAA;AAAA;AAAA;AAAA;AAAwC;AACM;AACP;AACF;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4DAAQ;AACnB;AACA;AACA,MAAM,6DAAS,CAAC,6DAAS;;AAEzB,WAAW,gEAAY;AACvB;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACtC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACE;AACR;AACI;AACJ;AACY;AACN;AACA;AACE;AACd;AACM;AACI;AACA;AACJ;AACE;AACI;AACR;AACQ;AACE;AACJ;AACgB;AAClB;AACA;AACN;AACM;AACI;AACF;AACA;AACE;AACE;AACV;;AAEhB;AACf,EAAE,gEAAS,EAAE,kEAAU,EAAE,0DAAM,EAAE,8DAAQ,EAAE,0DAAM;AACjD,EAAE,sEAAY,EAAE,gEAAS,EAAE,gEAAS,EAAE,kEAAU,EAAE,oDAAG;AACrD,EAAE,2DAAM,EAAE,+DAAQ,EAAE,+DAAQ,EAAE,2DAAM,EAAE,6DAAO;AAC7C,EAAE,iEAAS,EAAE,yDAAK,EAAE,iEAAS,EAAE,mEAAU,EAAE,+DAAQ;AACnD,EAAE,+EAAgB,EAAE,6DAAO,EAAE,6DAAO,EAAE,uDAAI,EAAE,6DAAO;AACnD,EAAE,iEAAS,EAAE,+DAAQ,EAAE,+DAAQ,EAAE,iEAAS,EAAE,mEAAU;AACtD,EAAE,yDAAK;AACP,CAAC,EAAC;;;;;;;;;;;;;ACxCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsD;AACE;AACR;AACI;AACJ;AACY;AACN;AACA;AACE;AACd;AACM;AACI;AACA;AACJ;AACE;AACI;AACR;AACQ;AACE;AACJ;AACgB;AAClB;AACA;AACN;AACM;AACI;AACF;AACA;AACE;AACE;AACV;AACA;;;;;;;;;;;;;AC/B9C;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACtBzB;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACjBzB;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACtB1B;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACjB1B;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;ACjBxB;AAAA;AAA4D;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,eAAe,uEAAmB;AAClC;AACA,CAAC;;AAEc,uEAAQ,EAAC;;;;;;;;;;;;;ACrBxB;AAAA;AAAA;AAAoC;AACC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,2DAAO,QAAQ,oDAAQ;AAC7B;AACA;;AAEe,kEAAG,EAAC;;;;;;;;;;;;;ACvBnB;AAAA;AAAA;AAA8C;AACV;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA,mBAAmB,SAAS,GAAG,SAAS,GAAG,SAAS,GAAG,SAAS;AAChE;AACA,iCAAiC,YAAY,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,2DAAO,QAAQ,gEAAY;AACjC;AACA;;AAEe,oEAAK,EAAC;;;;;;;;;;;;;AChCrB;AAAA;AAAwC;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6DAAS;AAC3B;;AAEe,mEAAI,EAAC;;;;;;;;;;;;;ACrBpB;AAAA;AAAA;AAAwC;AACD;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,6DAAS;AAChD,SAAS,6DAAS;AAClB;;AAEe,mEAAI,EAAC;;;;;;;;;;;;;ACpCpB;AAAA;AAAA;AAAwC;AACD;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,6DAAS;AAChD;AACA,SAAS,6DAAS;AAClB;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACtCzB;AAAA;AAAA;AAA8C;AACN;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA,MAAM,oCAAoC;AAC1C,MAAM,qCAAqC;AAC3C,MAAM;AACN;AACA;AACA,wCAAwC,kBAAkB,EAAE;AAC5D;AACA;AACA;AACA,4BAA4B,qCAAqC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6DAAS,QAAQ,gEAAY;AACnC;AACA;;AAEe,6EAAc,EAAC;;;;;;;;;;;;;AC5C9B;AAAA;AAAA;AAA8C;AACN;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA,MAAM,qCAAqC;AAC3C,MAAM,qCAAqC;AAC3C,MAAM;AACN;AACA;AACA,mCAAmC,kBAAkB,EAAE;AACvD;AACA;AACA;AACA,uBAAuB,oCAAoC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6DAAS,QAAQ,gEAAY;AACnC;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;AC5CzB;AAAA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,SAAS;AACpB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,kEAAG,EAAC;;;;;;;;;;;;;AC5BnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACV;AACO;AACwB;AACZ;AACnB;AACe;AACrB;AACmB;AACK;AAChB;;AAErC;AACA,yCAAyC;AACzC;AACA,yDAAyD;;AAEzD;AACA;AACA;AACA;AACA,wBAAwB,MAAM,aAAa,OAAO;;AAElD;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO,YAAY;AAC9B,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB;AACA,YAAY,OAAO;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC,iBAAiB,UAAU;AAC3B;AACA;AACA,kEAAkE,2BAA2B,EAAE;AAC/F,aAAa,8BAA8B;AAC3C;AACA;AACA;AACA,wDAAwD;AACxD,aAAa,mBAAmB;AAChC;AACA;AACA;AACA;AACA,sCAAsC,OAAO;AAC7C,aAAa,oBAAoB;AACjC;AACA;AACA;AACA;AACA,aAAa,qBAAqB;AAClC;AACA;AACA;AACA,iDAAiD,2BAA2B,EAAE;AAC9E,oCAAoC,aAAa,eAAe,EAAE;AAClE,aAAa,8BAA8B;AAC3C;AACA;AACA;AACA,oDAAoD,qCAAqC;AACzF;AACA;AACA;AACA;AACA,sDAAsD,qBAAqB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,YAAY;AACnD,sCAAsC,QAAQ;AAC9C,aAAa,qBAAqB;AAClC;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,4DAAgB,+BAA+B,4DAAgB;;AAEhF,eAAe,kEAAc;AAC7B;AACA;AACA,WAAW,6DAAQ;AACnB,YAAY,gEAAY,GAAG,qBAAqB,kEAAsB;;AAEtE,gBAAgB,gEAAY,GAAG,qCAAqC,kEAAsB;AAC1F,oBAAoB,wDAAI;AACxB,sBAAsB,8DAAU;;AAEhC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,yDAAa;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qEAAqE,4DAAgB;;AAErF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH,eAAe;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mBAAmB;AAC7C;AACA;AACA;AACA;AACA,wCAAwC;;AAExC;AACA,mDAAmD;AACnD;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,2BAA2B,iCAAiC;AAC5D,UAAU;AACV;AACA;AACA,kBAAkB;;AAElB,eAAe,2DAAO;AACtB;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,MAAM,2DAAO;AACb;AACA;AACA;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;AC5PxB;AAAA;AAAA;AAAA;AAAA;AAAiC;AACK;AACI;AACM;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,YAAY,oDAAQ;;AAEpB;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,cAAc,sDAAU;;AAExB;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,iBAAiB,yDAAa;;AAE9B;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,UAAU,WAAW,kDAAM;AAC3B;AACA;;AAEe,+EAAgB,EAAC;;;;;;;;;;;;;AClEhC;AAAA;AAAA;AAAqC;AACA;;AAErC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,OAAO,YAAY;AAC9B,WAAW,QAAQ;AACnB;AACA,WAAW,QAAQ;AACnB;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,oBAAoB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM,4DAAQ;AACd;AACA;AACA;AACA,SAAS,4DAAQ;AACjB;AACA;AACA;AACA,GAAG;AACH;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;ACpExB;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,SAAS;AACpB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEe,mEAAI,EAAC;;;;;;;;;;;;;AC3BpB;AAAA;AAAA;AAAA;AAAwC;AACM;AACP;;AAEvC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6DAAS;AACf;AACA;AACA;AACA;AACA;;AAEA,aAAa,gEAAY;AACzB;;AAEA,eAAe,6DAAS;AACxB;AACA;AACA;AACA;AACA;;AAEe,oEAAK,EAAC;;;;;;;;;;;;;AClDrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACM;AACN;AACS;AACN;AACe;AACV;AACA;AACM;AACf;;AAEjC;AACA;AACA;;AAEA;AACA,kBAAkB,kDAAM,GAAG,kDAAM;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,MAAM;AACnB;AACA;AACA,cAAc,iBAAiB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,+DAAW;AACjB,WAAW,4DAAQ,UAAU,iEAAa,UAAU,6DAAS;AAC7D;AACA;AACA,WAAW,mEAAe;AAC1B;AACA,YAAY,0DAAM;AAClB,6BAA6B,sDAAU,oBAAoB,sDAAU,GAAG,kDAAM;;AAE9E;AACA;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;ACzDvB;AAAA;AAAqC;;AAErC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,4DAAQ;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;ACzCxB;AAAA;AAAqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4DAAQ;AACvB;;AAEA;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACnCzB;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,gFAAiB,EAAC;;;;;;;;;;;;;ACtBjC;AAAA;AAAA;AAAA;AAA2C;;;;;;;;;;;;;ACA3C;AAAA;AAAA;AAAwC;AACD;;AAEvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,6DAAS,CAAC,6DAAS;AACpC;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;ACrCxB;AAAA;AAAqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,4DAAQ;AACjB;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;AC3BvB;AAAA;AAAA;AAAqC;AACA;;AAErC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4DAAQ;AACd;AACA;AACA,MAAM,4DAAQ;AACd;AACA,YAAY,4DAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;ACjExB;AAAA;AAAA;AAAgD;AACnB;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,iEAAa,CAAC,gDAAI;;AAEjB,sEAAO,EAAC;;;;;;;;;;;;;AC7BvB;AAAA;AAAA;AAAgD;AACf;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iEAAa,CAAC,kDAAM;;AAErB,wEAAS,EAAC;;;;;;;;;;;;;AC7BzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsC;AACE;AACL;AACE;AACS;AACd;AACK;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,2DAAO;AACb,WAAW,4DAAQ,QAAQ,iDAAK;AAChC;AACA,SAAS,4DAAQ,oBAAoB,6DAAS,CAAC,gEAAY,CAAC,4DAAQ;AACpE;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;AChCtB;AAAA;AAAA;AAA0C;AACT;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,UAAU;AACV;AACA,aAAa,SAAS;AACtB,UAAU;AACV;AACA;AACA,SAAS,8DAAU,QAAQ,0DAAM;AACjC;;AAEe,4EAAa,EAAC;;;;;;;;;;;;;AC/B7B;AAAA;AAAA;AAAwC;AACD;;AAEvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6DAAS,CAAC,6DAAS;AACzB;AACA;;AAEe,4EAAa,EAAC;;;;;;;;;;;;;ACpC7B;AAAA;AAA8C;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,gEAAY;AAC1C;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;AC3BxB;AAAA;AAAqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,4DAAQ;AACjB;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;AC3BvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACE;AACA;AACI;AACA;AACX;AACE;AACI;AACJ;AACQ;;AAE7C;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,gBAAgB,yBAAyB;AACzC;AACA,IAAI,IAAI;AACR,UAAU;AACV;AACA;AACA,cAAc,2DAAO;AACrB,2BAA2B,4DAAQ,YAAY,gEAAY;;AAE3D,aAAa,gEAAY;AACzB;AACA;AACA;AACA;AACA;AACA,aAAa,4DAAQ;AACrB,oBAAoB,8DAAU,SAAS,8DAAU,CAAC,gEAAY;AAC9D;AACA;AACA;AACA;AACA;AACA,eAAe,qDAAS,GAAG,sDAAU;AACrC;AACA,GAAG;AACH;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;AChEzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACN;AACQ;AACI;AACJ;AACX;;AAErC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4DAAQ;AACnB;AACA;AACA;AACA,2BAA2B,gEAAY;AACvC;AACA;AACA,mBAAmB,iEAAa;AAChC,mBAAmB,iEAAa;AAChC,cAAc,mEAAe;AAC7B,YAAY,iEAAa;;AAEzB,SAAS,6DAAS;AAClB;;AAEe,mEAAI,EAAC;;;;;;;;;;;;;AChDpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACN;AACQ;AACA;AACX;;AAErC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4DAAQ;AACnB;AACA;AACA;AACA,2BAA2B,gEAAY;AACvC;AACA;AACA,mBAAmB,iEAAa;AAChC,YAAY,iEAAa,aAAa,iEAAa;;AAEnD,SAAS,6DAAS;AAClB;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;AC1CvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACN;AACY;AACJ;AACX;;AAErC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4DAAQ;AACnB;AACA;AACA;AACA,2BAA2B,gEAAY;AACvC;AACA;AACA,mBAAmB,iEAAa;AAChC,cAAc,mEAAe,aAAa,iEAAa;;AAEvD,SAAS,6DAAS;AAClB;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;AC1CzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACN;AACE;AACL;AACA;AACK;AACM;AACT;AACF;;AAErC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO,YAAY;AAC9B,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA,MAAM,4DAAQ;AACd;AACA,mCAAmC,6DAAS;AAC5C,uCAAuC,gEAAY;AACnD;AACA,WAAW,4DAAQ;;AAEnB;AACA,MAAM,8DAAU;AAChB,qBAAqB,iEAAa;AAClC;AACA;AACA;AACA;AACA;AACA,qBAAqB,8DAAU;AAC/B;AACA;AACA;AACA;AACA,MAAM,6DAAS;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4DAAQ;AACd;AACA;AACA;;AAEA;AACA,6CAA6C,4DAAQ;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,yBAAyB,gEAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;AC9GxB;AAAA;AAA2B;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,uDAAG;AACZ;;AAEe,oEAAK,EAAC;;;;;;;;;;;;;ACrBrB;AAAA;AAAA;AAAqC;AACiB;;AAEtD;AACA,6CAA6C;AAC7C;;AAEA;AACA,6BAA6B;AAC7B,SAAS,QAAQ,QAAQ,UAAU,aAAa;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA,WAAW,4DAAQ;AACnB;AACA,oCAAoC,4DAAgB;AACpD;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;ACjCxB;AAAA;AAAA;AAAA;AAAA;AAA4C;AACN;AACA;AACiB;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAQ;AACpB,SAAS,4DAAQ,CAAC,+DAAW,YAAY,6DAAiB;AAC1D,CAAC;;AAEc,oEAAK,EAAC;;;;;;;;;;;;;ACzBrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACE;AACR;AACA;AACiB;AAC1B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS,KAAK,SAAS,GAAG,SAAS;AAClD,WAAW,SAAS,GAAG,SAAS;AAChC;AACA,cAAc,4DAAQ;AACtB,iBAAiB,wDAAI;AACrB,MAAM,qEAAiB;AACvB;AACA;AACA,SAAS,4DAAQ,CAAC,+DAAW,YAAY,6DAAiB,SAAS,gEAAY;AAC/E,CAAC;;AAEc,sEAAO,EAAC;;;;;;;;;;;;;ACtCvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACN;AACA;AACiB;AAC1B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA,mBAAmB,iBAAiB,GAAG,iBAAiB;AACxD,kBAAkB,iBAAiB,GAAG,iBAAiB;AACvD;AACA;AACA,WAAW,iBAAiB,GAAG,iBAAiB,GAAG,iBAAiB;AACpE;AACA,gBAAgB,4DAAQ;AACxB,mBAAmB,wDAAI;AACvB;AACA,SAAS,4DAAQ,CAAC,+DAAW,YAAY,6DAAiB;AAC1D,CAAC;;AAEc,wEAAS,EAAC;;;;;;;;;;;;;ACjCzB;AAAA;AAAsC;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,4DAAQ;AAC3C;;AAEe,mEAAI,EAAC;;;;;;;;;;;;;ACxBpB;AAAA;AAAA;AAA8C;AACR;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,SAAS,GAAG,SAAS,GAAG,SAAS;AAC/C,WAAW,SAAS,GAAG,SAAS;AAChC;AACA;AACA,mCAAmC,4DAAQ,QAAQ,gEAAY;AAC/D;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;AC9BtB;AAAA;AAAsC;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA,mBAAmB,iBAAiB,GAAG,iBAAiB,GAAG,iBAAiB;AAC5E;AACA;AACA,WAAW,iBAAiB,GAAG,iBAAiB;AAChD;AACA;AACA;AACA,mCAAmC,4DAAQ;AAC3C;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;AC3BxB;AAAA;AAAqC;;AAErC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,4DAAQ;AACjB;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;AC3BxB;AAAA;AAAwC;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB,aAAa,QAAQ;AACrB;AACA;AACA,iBAAiB,QAAQ,OAAO,SAAS,EAAE;AAC3C;AACA;AACA;AACA;AACA,UAAU,QAAQ,QAAQ,EAAE;AAC5B;AACA;AACA;AACA;AACA;AACA,UAAU,QAAQ,QAAQ,EAAE;AAC5B;AACA;AACA,iCAAiC,6DAAS;AAC1C;;AAEe,oEAAK,EAAC;;;;;;;;;;;;;ACjCrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACN;AACQ;AACN;AACe;;AAEvD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,+DAAW;AACrB,QAAQ,qEAAiB;AACzB;AACA;AACA;AACA,GAAG;AACH,SAAS,6DAAS;AAClB,WAAW,4DAAQ,QAAQ,gEAAY;AACvC,GAAG;AACH;;AAEe,oEAAK,EAAC;;;;;;;;;;;;;AC5CrB;AAAA;AAAA;AAAA;AAAgC;AACM;AACP;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yDAAK;AACpB;AACA;AACA;AACA,SAAS,4DAAQ;AACjB,WAAW,yDAAK;AAChB,GAAG;AACH;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACtCzB;AAAA;AAAA;AAA0C;AACI;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA,iBAAiB,QAAQ,OAAO,SAAS,EAAE;AAC3C;AACA,6CAA6C,cAAc,EAAE;AAC7D;AACA;AACA;AACA,6CAA6C,sBAAsB,EAAE;AACrE;AACA;AACA;AACA;AACA,mCAAmC,8DAAU,eAAe,gEAAY;AACxE;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;AClCtB;AAAA;AAAA;AAA0C;AACI;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,UAAU,OAAO,WAAW;AAC5B;AACA;AACA;AACA,mCAAmC,8DAAU,eAAe,gEAAY;AACxE;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;AChC1B;AAAA;AAAsD;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oEAAgB;AAChC;AACA,CAAC;;AAEc,wEAAS,EAAC;;;;;;;;;;;;;AC1BzB;AAAA;AAAoD;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,mEAAe;;AAEjB,yEAAU,EAAC;;;;;;;;;;;;;ACrB1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmC;AACA;AACN;AACQ;AACA;AACE;AACV;AACU;AACF;AACA;AACF;AACgB;AAClB;AACI;AACN;AACF;AACI;AACJ;AACU;AACF;AACA;AACI;AACV;AACU;AACF;AACA;AACE;AACA;AACJ;AACN;AACE;AACI;;AAEtB;AACf,EAAE,4DAAO,EAAE,4DAAO,EAAE,sDAAI,EAAE,8DAAQ,EAAE,8DAAQ;AAC5C,EAAE,gEAAS,EAAE,sDAAI,EAAE,gEAAS,EAAE,8DAAQ,EAAE,8DAAQ;AAChD,EAAE,6DAAO,EAAE,6EAAe,EAAE,2DAAM,EAAE,+DAAQ,EAAE,yDAAK;AACnD,EAAE,uDAAI,EAAE,2DAAM,EAAE,uDAAI,EAAE,iEAAS,EAAE,+DAAQ;AACzC,EAAE,+DAAQ,EAAE,mEAAU,EAAE,yDAAK,EAAE,mEAAU,EAAE,iEAAS;AACpD,EAAE,iEAAS,EAAE,mEAAU,EAAE,mEAAU,EAAE,+DAAQ,EAAE,yDAAK;AACpD,EAAE,2DAAM,EAAE,+DAAQ;AAClB,CAAC,EAAC;;;;;;;;;;;;;ACzkD;AACA;AACN;AACQ;AACA;AACE;AACV;AACU;AACF;AACA;AACF;AACgB;AAClB;AACI;AACN;AACF;AACI;AACJ;AACU;AACF;AACA;AACI;AACV;AACU;AACF;AACA;AACE;AACA;AACJ;AACN;AACE;AACI;AACR;;;;;;;;;;;;;AChC5C;AAAA;AAAA;AAAA;AAA2C;;;;;;;;;;;;;ACA3C;AAAA;AAAA;AAAA;AAA2C;;;;;;;;;;;;;ACA3C;AAAA;AAAA;AAA0C;AACb;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,8DAAU,SAAS,wDAAI;AACtD;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;ACjCtB;AAAA;AAAA;AAA0C;AACT;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,8DAAU,SAAS,0DAAM;AACxD;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;AC/BxB;AAAA;AAAA;AAAA;AAAkD;AACZ;AACiB;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,4DAAQ;AACtB,SAAS,qEAAiB;AAC1B,MAAM,kEAAc;AACpB;AACA,CAAC;;AAEc,sEAAO,EAAC;;;;;;;;;;;;;AC9BvB;AAAA;AAAA;AAAA;AAAA;AAA0C;AACQ;AACb;AACS;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,YAAY,OAAO;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4DAAQ;AACnB;;AAEA;AACA,WAAW,kEAAc,WAAW,gEAAY,WAAW,8DAAU;AACrE;AACA;AACA;;AAEe,oEAAK,EAAC;;;;;;;;;;;;;AClCrB;AAAA;AAAA;AAA8C;AACX;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,gCAAgC;AAChC;AACA;AACA,SAAS,2DAAO,CAAC,gEAAY;AAC7B;;AAEe,mEAAI,EAAC;;;;;;;;;;;;;AC7BpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACI;AACd;AACI;AACF;AACP;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,aAAa,OAAO;AACpB;AACA;AACA,iBAAiB,QAAQ,OAAO,SAAS,EAAE;AAC3C;AACA;AACA;AACA;AACA,gBAAgB,4DAAQ;AACxB;AACA;AACA;AACA,sCAAsC,QAAQ,0DAAM,gBAAgB;;AAEpE;AACA,yBAAyB,uDAAW,MAAM,2DAAO;AACjD;AACA;AACA;AACA;AACA,YAAY,gDAAI;AAChB;AACA;AACA,GAAG;AACH,aAAa,yDAAa;AAC1B;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAEc,wEAAS,EAAC;;;;;;;;;;;;;AC/CzB;AAAA;AAA+B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA,MAAM,8BAA8B;AACpC,MAAM;AACN;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,SAAS,yDAAK;AACd;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;ACjC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACI;AACN;AACP;AACU;AACC;;AAE9C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,gEAAY,YAAY,2DAAO,8BAA8B,uDAAW;AAC9E,yBAAyB,yDAAa;AACtC;AACA;AACA;AACA,aAAa,gEAAY;AACzB;AACA;AACA,aAAa,yDAAa;AAC1B;;AAEA;AACA,mBAAmB,sDAAU;AAC7B;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;AClJtB;AAAA;AAAA;AAAA;AAAA;AAA4C;AACI;AACb;AACN;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uDAAW;AAClC;AACA;AACA,oBAAoB,uDAAW;AAC/B;AACA;AACA;AACA,cAAc,gDAAI;AAClB,eAAe,mDAAO;AACtB;AACA,KAAK;AACL,eAAe,yDAAa;AAC5B;AACA,mBAAmB,mDAAO;AAC1B;;AAEe,6EAAc,EAAC;;;;;;;;;;;;;AC3C9B;AAAA;AAAsD;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,oEAAgB;AACzB;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;ACpB5B;AAAA;AAAA;AAAA;AAAA;AAA4C;AACN;AACF;AACmB;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,4DAAQ;AAClB,SAAS,2DAAO,CAAC,+DAAW,SAAS,6DAAiB;AACtD,CAAC;;AAEc,kEAAG,EAAC;;;;;;;;;;;;;AC3BnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACE;AACR;AACF;AACmB;AAC1B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS,KAAK,SAAS,GAAG,SAAS;AAChD,WAAW,SAAS;AACpB;AACA,YAAY,4DAAQ;AACpB,iBAAiB,wDAAI;AACrB,MAAM,qEAAiB;AACvB;AACA;AACA,SAAS,2DAAO,CAAC,+DAAW,SAAS,6DAAiB,GAAG,gEAAY;AACrE,CAAC;;AAEc,oEAAK,EAAC;;;;;;;;;;;;;ACtCrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACN;AACF;AACmB;AAC1B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA,mBAAmB,iBAAiB,GAAG,iBAAiB;AACxD,kBAAkB,iBAAiB,GAAG,iBAAiB;AACvD;AACA;AACA,WAAW,iBAAiB,GAAG,iBAAiB;AAChD;AACA,cAAc,4DAAQ;AACtB,mBAAmB,wDAAI;AACvB;AACA,SAAS,2DAAO,CAAC,+DAAW,SAAS,6DAAiB;AACtD,CAAC;;AAEc,sEAAO,EAAC;;;;;;;;;;;;;ACjCvB;AAAA;AAAA;AAAsC;AACP;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA,UAAU,4DAAQ,CAAC,iDAAK;;AAET,kEAAG,EAAC;;;;;;;;;;;;;ACrBnB;AAAA;AAAA;AAA4C;AACI;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,SAAS,iEAAa,4BAA4B,uDAAW;AAC7D;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACvBzB;AAAA;AAAA;AAAoC;AACY;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA,UAAU,OAAO,QAAQ,SAAS,GAAG,SAAS,GAAG;AACjD;AACA;AACA,SAAS,iEAAa,4BAA4B,mDAAO;AACzD;;AAEe,4EAAa,EAAC;;;;;;;;;;;;;ACtB7B;AAAA;AAAA;AAAsC;AACC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,cAAc,4DAAQ;AACtB;AACA;;AAEA;AACA,SAAS,6DAAS;AAClB,CAAC;;AAEc,sEAAO,EAAC;;;;;;;;;;;;AC/BvB,uEAAuE,+BAA+B,oBAAoB,wCAAwC,aAAa,qDAAqD,YAAY,8CAA8C,C;;;;;;;;;;;ACA9R,8DAA8D,aAAa,mBAAmB,WAAW,8BAA8B,kBAAkB,4CAA4C,sEAAsE,4BAA4B,6BAA6B,wDAAwD,oDAAoD,kEAAkE,wCAAwC,kEAAkE,uCAAuC,C;;;;;;;;;;;ACAnoB,wCAAwC,oDAAoD,C;;;;;;;;;;;ACA5F,sCAAsC,aAAa,mBAAmB,iBAAiB,8CAA8C,qBAAqB,gEAAgE,gBAAgB,oCAAoC,oBAAoB,eAAe,8CAA8C,gBAAgB,8DAA8D,gBAAgB,oBAAoB,mCAAmC,wDAAwD,eAAe,gBAAgB,0EAA0E,mCAAmC,mCAAmC,uBAAuB,eAAe,qCAAqC,cAAc,kBAAkB,gFAAgF,0BAA0B,mPAAmP,gBAAgB,+DAA+D,gBAAgB,gFAAgF,0BAA0B,0BAA0B,aAAa,qHAAqH,uCAAuC,oCAAoC,oBAAoB,UAAU,2CAA2C,wDAAwD,+DAA+D,0EAA0E,YAAY,eAAe,8DAA8D,mCAAmC,sCAAsC,gBAAgB,SAAS,iDAAiD,wEAAwE,cAAc,sFAAsF,mDAAmD,wEAAwE,cAAc,qFAAqF,oDAAoD,C;;;;;;;;;;;ACAvgF,mCAAmC,aAAa,2BAA2B,aAAa,oCAAoC,iBAAiB,eAAe,mCAAmC,gBAAgB,4BAA4B,gBAAgB,iCAAiC,cAAc,iBAAiB,mCAAmC,uBAAuB,aAAa,2FAA2F,uCAAuC,oCAAoC,iBAAiB,UAAU,2CAA2C,mCAAmC,+DAA+D,kDAAkD,YAAY,WAAW,4BAA4B,mCAAmC,sCAAsC,gBAAgB,SAAS,iDAAiD,sCAAsC,cAAc,oDAAoD,mDAAmD,sCAAsC,cAAc,mDAAmD,oDAAoD,iCAAiC,UAAU,qCAAqC,mDAAmD,qFAAqF,kEAAkE,YAAY,WAAW,4CAA4C,mCAAmC,SAAS,gBAAgB,SAAS,iDAAiD,UAAU,sDAAsD,cAAc,oEAAoE,mDAAmD,sDAAsD,cAAc,mEAAmE,mDAAmD,6CAA6C,cAAc,wEAAwE,SAAS,WAAW,8EAA8E,gBAAgB,C;;;;;;;;;;;ACAr0E,+CAA+C,sBAAsB,yBAAyB,qBAAqB,iBAAiB,qDAAqD,cAAc,oBAAoB,qDAAqD,cAAc,6BAA6B,kBAAkB,oBAAoB,mBAAmB,qBAAqB,iEAAiE,aAAa,yGAAyG,qBAAqB,iFAAiF,uBAAuB,iEAAiE,mBAAmB,UAAU,yFAAyF,aAAa,6BAA6B,qDAAqD,6EAA6E,2DAA2D,+EAA+E,4DAA4D,wEAAwE,qDAAqD,8DAA8D,6BAA6B,gBAAgB,wIAAwI,sCAAsC,6BAA6B,mBAAmB,eAAe,sBAAsB,+BAA+B,kBAAkB,4CAA4C,6CAA6C,cAAc,kBAAkB,6BAA6B,6DAA6D,wBAAwB,oFAAoF,aAAa,4BAA4B,4CAA4C,kJAAkJ,cAAc,iEAAiE,kBAAkB,oBAAoB,cAAc,eAAe,sBAAsB,qFAAqF,gBAAgB,qFAAqF,iBAAiB,yEAAyE,cAAc,6FAA6F,oCAAoC,6FAA6F,qCAAqC,yEAAyE,gBAAgB,WAAW,oIAAoI,qDAAqD,uFAAuF,mCAAmC,yFAAyF,mCAAmC,iGAAiG,WAAW,qEAAqE,0DAA0D,2HAA2H,6CAA6C,qCAAqC,2HAA2H,8CAA8C,oCAAoC,mHAAmH,YAAY,yCAAyC,gDAAgD,yFAAyF,sDAAsD,2FAA2F,uDAAuD,mEAAmE,iEAAiE,yDAAyD,2DAA2D,kCAAkC,+DAA+D,oCAAoC,2CAA2C,oDAAoD,2FAA2F,0DAA0D,6FAA6F,2DAA2D,uEAAuE,mEAAmE,6DAA6D,2CAA2C,yCAAyC,uCAAuC,gBAAgB,C;;;;;;;;;;;ACAjuL,8IAA8I,cAAc,MAAM,+CAA+C,oDAAoD,sCAAsC,8CAA8C,0DAA0D,6CAA6C,0DAA0D,4CAA4C,iDAAiD,gBAAgB,yIAAyI,sCAAsC,2DAA2D,iBAAiB,2DAA2D,kBAAkB,iDAAiD,+BAA+B,2CAA2C,wDAAwD,2EAA2E,gBAAgB,6LAA6L,sCAAsC,gDAAgD,2EAA2E,8CAA8C,gDAAgD,iDAAiD,0DAA0D,wBAAwB,uDAAuD,8DAA8D,iFAAiF,gEAAgE,6DAA6D,mCAAmC,uDAAuD,uDAAuD,6DAA6D,6DAA6D,2FAA2F,0DAA0D,2FAA2F,mEAAmE,C;;;;;;;;;;;ACA7nF,oCAAoC,aAAa,MAAM,+BAA+B,sCAAsC,kBAAkB,aAAa,YAAY,wBAAwB,qCAAqC,sCAAsC,yCAAyC,0CAA0C,UAAU,+BAA+B,SAAS,oCAAoC,aAAa,iBAAiB,4DAA4D,iDAAiD,oCAAoC,aAAa,4CAA4C,8BAA8B,+FAA+F,0CAA0C,cAAc,8HAA8H,SAAS,gGAAgG,kGAAkG,yBAAyB,qCAAqC,C;;;;;;;;;;;ACAvtC,kCAAkC,qBAAqB,kBAAkB,oCAAoC,oBAAoB,4BAA4B,+CAA+C,WAAW,iEAAiE,aAAa,oCAAoC,mCAAmC,aAAa,0BAA0B,kBAAkB,+DAA+D,qBAAqB,oHAAoH,YAAY,oHAAoH,SAAS,YAAY,oHAAoH,OAAO,oHAAoH,QAAQ,MAAM,uDAAuD,gBAAgB,kBAAkB,oCAAoC,oCAAoC,8CAA8C,iCAAiC,oCAAoC,8CAA8C,gCAAgC,qCAAqC,gDAAgD,mCAAmC,mFAAmF,qCAAqC,mFAAmF,sCAAsC,iEAAiE,UAAU,gBAAgB,uBAAuB,6EAA6E,mCAAmC,qDAAqD,4BAA4B,6BAA6B,uBAAuB,gBAAgB,qFAAqF,sCAAsC,uBAAuB,qCAAqC,qDAAqD,uDAAuD,SAAS,eAAe,6CAA6C,yBAAyB,6CAA6C,0BAA0B,6CAA6C,4BAA4B,6CAA6C,6BAA6B,C;;;;;;;;;;;ACA5pF,+DAA+D,gBAAgB,iIAAiI,sCAAsC,yBAAyB,mFAAmF,gBAAgB,6MAA6M,sCAAsC,yBAAyB,4BAA4B,6BAA6B,kFAAkF,gBAAgB,2MAA2M,sCAAsC,yBAAyB,0BAA0B,C;;;;;;;;;;;ACA7jC,+EAA+E,iBAAiB,6DAA6D,sCAAsC,oCAAoC,SAAS,C;;;;;;;;;;;ACAhP,2EAA2E,gBAAgB,yJAAyJ,sCAAsC,oEAAoE,aAAa,4BAA4B,sCAAsC,+BAA+B,cAAc,qCAAqC,6BAA6B,wCAAwC,gBAAgB,wCAAwC,iBAAiB,4CAA4C,mCAAmC,2CAA2C,sCAAsC,gEAAgE,oDAAoD,gEAAgE,iDAAiD,C;;;;;;;;;;;ACAlhC,8BAA8B,sBAAsB,MAAM,2EAA2E,YAAY,0BAA0B,2BAA2B,wBAAwB,sBAAsB,0BAA0B,cAAc,eAAe,yBAAyB,kBAAkB,C;;;;;;;;;;;ACAtV,wBAAwB,2BAA2B,kBAAkB,gBAAgB,2EAA2E,sCAAsC,kBAAkB,sCAAsC,4CAA4C,8CAA8C,8DAA8D,qCAAqC,6CAA6C,6DAA6D,wBAAwB,aAAa,4BAA4B,+DAA+D,4BAA4B,uDAAuD,qDAAqD,0CAA0C,kCAAkC,wEAAwE,2BAA2B,gDAAgD,4CAA4C,iCAAiC,qEAAqE,+BAA+B,IAAI,2BAA2B,IAAI,0BAA0B,IAAI,2BAA2B,IAAI,2BAA2B,C;;;;;;;;;;;ACAxzC,+BAA+B,cAAc,mBAAmB,aAAa,aAAa,gBAAgB,C;;;;;;;;;;;ACA1G,iEAAiE,oCAAoC,mCAAmC,mBAAmB,qDAAqD,iCAAiC,C;;;;;;;;;;;ACAjP,8BAA8B,sBAAsB,yBAAyB,qBAAqB,iBAAiB,aAAa,sBAAsB,2DAA2D,cAAc,kCAAkC,kBAAkB,4BAA4B,YAAY,gBAAgB,+DAA+D,sCAAsC,YAAY,qBAAqB,2CAA2C,kBAAkB,eAAe,eAAe,6BAA6B,iBAAiB,WAAW,gBAAgB,gBAAgB,oIAAoI,+CAA+C,0EAA0E,oCAAoC,gBAAgB,mCAAmC,qDAAqD,0CAA0C,0CAA0C,gBAAgB,2DAA2D,2DAA2D,2DAA2D,6CAA6C,qDAAqD,wDAAwD,yCAAyC,2CAA2C,cAAc,iEAAiE,wDAAwD,cAAc,uBAAuB,WAAW,WAAW,uCAAuC,C;;;;;;;;;;;ACA1vD,wBAAwB,+DAA+D,qBAAqB,aAAa,kBAAkB,0BAA0B,+GAA+G,aAAa,kBAAkB,wDAAwD,8CAA8C,uDAAuD,wDAAwD,4CAA4C,8CAA8C,2CAA2C,wDAAwD,4CAA4C,8CAA8C,2CAA2C,wDAAwD,8CAA8C,cAAc,MAAM,8BAA8B,+BAA+B,kCAAkC,qBAAqB,gBAAgB,iFAAiF,sCAAsC,qBAAqB,qCAAqC,gBAAgB,4CAA4C,8CAA8C,+GAA+G,QAAQ,SAAS,mBAAmB,uFAAuF,qDAAqD,mDAAmD,sDAAsD,mBAAmB,4CAA4C,iDAAiD,uFAAuF,8BAA8B,+BAA+B,6BAA6B,2CAA2C,qDAAqD,0CAA0C,uFAAuF,qDAAqD,sBAAsB,sDAAsD,gDAAgD,4CAA4C,8CAA8C,uFAAuF,8BAA8B,gCAAgC,+BAA+B,2CAA2C,kDAAkD,6CAA6C,yGAAyG,SAAS,wDAAwD,4CAA4C,2GAA2G,gDAAgD,4CAA4C,2GAA2G,iDAAiD,4CAA4C,yGAAyG,SAAS,wDAAwD,+CAA+C,2GAA2G,gDAAgD,+CAA+C,2GAA2G,iDAAiD,+CAA+C,6GAA6G,UAAU,wDAAwD,+CAA+C,6GAA6G,SAAS,uDAAuD,+CAA+C,6GAA6G,UAAU,wDAAwD,4CAA4C,6GAA6G,SAAS,uDAAuD,4CAA4C,C;;;;;;;;;;;ACAv3J,sDAAsD,aAAa,mBAAmB,uBAAuB,6CAA6C,uBAAuB,oCAAoC,8CAA8C,uDAAuD,kCAAkC,sCAAsC,qCAAqC,mCAAmC,sCAAsC,iEAAiE,wCAAwC,oCAAoC,2DAA2D,gBAAgB,C;;;;;;;;;;;ACAxsB,qCAAqC,kBAAkB,oCAAoC,uBAAuB,kBAAkB,mCAAmC,UAAU,oCAAoC,UAAU,MAAM,8CAA8C,4CAA4C,uBAAuB,qCAAqC,gBAAgB,4CAA4C,8CAA8C,sCAAsC,WAAW,YAAY,mCAAmC,2DAA2D,wDAAwD,oCAAoC,mEAAmE,gEAAgE,oCAAoC,mEAAmE,gEAAgE,yIAAyI,6CAA6C,C;;;;;;;;;;;ACA5rC,iCAAiC,sBAAsB,yBAAyB,qBAAqB,iBAAiB,aAAa,qBAAqB,mBAAmB,kCAAkC,aAAa,mBAAmB,mBAAmB,YAAY,yCAAyC,qBAAqB,yGAAyG,aAAa,sDAAsD,iBAAiB,sDAAsD,sBAAsB,sDAAsD,iBAAiB,yFAAyF,aAAa,eAAe,gBAAgB,qEAAqE,sCAAsC,eAAe,8CAA8C,kCAAkC,gDAAgD,yCAAyC,mBAAmB,UAAU,cAAc,aAAa,gBAAgB,0CAA0C,oCAAoC,mCAAmC,sCAAsC,qCAAqC,kEAAkE,aAAa,oFAAoF,mCAAmC,sCAAsC,mCAAmC,UAAU,0DAA0D,WAAW,SAAS,gBAAgB,SAAS,kCAAkC,UAAU,uDAAuD,SAAS,yFAAyF,gBAAgB,kFAAkF,oCAAoC,qCAAqC,SAAS,+FAA+F,eAAe,iJAAiJ,oCAAoC,qHAAqH,cAAc,6JAA6J,yBAAyB,4BAA4B,2JAA2J,0BAA0B,6BAA6B,qGAAqG,oCAAoC,yLAAyL,oCAAoC,qHAAqH,eAAe,6JAA6J,0BAA0B,6BAA6B,2JAA2J,yBAAyB,4BAA4B,qGAAqG,qCAAqC,yLAAyL,qCAAqC,C;;;;;;;;;;;ACA/nI,wEAAwE,kBAAkB,oBAAoB,mCAAmC,eAAe,kBAAkB,UAAU,aAAa,0BAA0B,iCAAiC,qBAAqB,uCAAuC,aAAa,QAAQ,SAAS,MAAM,4BAA4B,eAAe,SAAS,MAAM,uCAAuC,iCAAiC,gBAAgB,yGAAyG,sCAAsC,iCAAiC,eAAe,gBAAgB,mCAAmC,yDAAyD,8CAA8C,kBAAkB,UAAU,uCAAuC,uCAAuC,mBAAmB,SAAS,4BAA4B,6CAA6C,2BAA2B,oDAAoD,0CAA0C,2BAA2B,8BAA8B,uDAAuD,+BAA+B,6BAA6B,+CAA+C,iDAAiD,gDAAgD,mBAAmB,4BAA4B,0CAA0C,4BAA4B,oDAAoD,6CAA6C,2BAA2B,8BAA8B,gCAAgC,+BAA+B,oDAAoD,+CAA+C,sBAAsB,gDAAgD,8CAA8C,C;;;;;;;;;;;ACAx/D,6BAA6B,uBAAuB,iDAAiD,sBAAsB,WAAW,YAAY,gBAAgB,MAAM,iBAAiB,6CAA6C,mCAAmC,gCAAgC,+BAA+B,+BAA+B,8BAA8B,0BAA0B,+BAA+B,qCAAqC,8BAA8B,gCAAgC,sCAAsC,uDAAuD,kDAAkD,0CAA0C,wCAAwC,8CAA8C,wCAAwC,iDAAiD,mDAAmD,oDAAoD,gDAAgD,0DAA0D,wCAAwC,8CAA8C,+CAA+C,2CAA2C,iDAAiD,gEAAgE,kDAAkD,mDAAmD,+CAA+C,qDAAqD,8DAA8D,+BAA+B,iCAAiC,gDAAgD,sDAAsD,gFAAgF,qDAAqD,0EAA0E,sDAAsD,qEAAqE,6DAA6D,4DAA4D,gCAAgC,yDAAyD,gDAAgD,6CAA6C,yCAAyC,uCAAuC,2DAA2D,wFAAwF,iEAAiE,6EAA6E,+DAA+D,4DAA4D,oDAAoD,8DAA8D,sDAAsD,wDAAwD,wDAAwD,2CAA2C,yCAAyC,gCAAgC,yDAAyD,yBAAyB,2CAA2C,iGAAiG,6GAA6G,uGAAuG,uDAAuD,yBAAyB,8BAA8B,yDAAyD,0BAA0B,4BAA4B,0BAA0B,yBAAyB,2BAA2B,mCAAmC,iDAAiD,SAAS,UAAU,SAAS,uBAAuB,qBAAqB,sBAAsB,gBAAgB,qBAAqB,oCAAoC,yBAAyB,kGAAkG,2BAA2B,gBAAgB,mBAAmB,YAAY,WAAW,2BAA2B,iBAAiB,wBAAwB,uBAAuB,0BAA0B,qBAAqB,kGAAkG,YAAY,gIAAgI,eAAe,0BAA0B,aAAa,0BAA0B,0CAA0C,UAAU,SAAS,8BAA8B,iBAAiB,MAAM,uBAAuB,iEAAiE,2DAA2D,yEAAyE,wBAAwB,oDAAoD,6CAA6C,qDAAqD,oDAAoD,mDAAmD,0DAA0D,C;;;;;;;;;;;ACAtiL,iDAAiD,eAAe,oEAAoE,YAAY,gBAAgB,MAAM,uBAAuB,sBAAsB,6BAA6B,C;;;;;;;;;;;;ACAnO;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,uDAAuD;;AAEvD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB,KAAwC,GAAG,sBAAiB,GAAG,SAAI;;AAEnF;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,qEAAqE,qBAAqB,aAAa;;AAEvG;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,yDAAyD;AACzD,GAAG;;AAEH;;;AAGA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;;AAEA;;AAEA,oBAAoB,6BAA6B;AACjD;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,E;;;;;;;;;;;AC5QA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;;;;;ACvBA,UAAU,mBAAO,CAAC,oJAAwE;AAC1F,0BAA0B,mBAAO,CAAC,2IAAyE;;AAE3G;;AAEA;AACA,0BAA0B,QAAS;AACnC;;AAEA,eAAe;;AAEf;AACA;;AAEA;;AAEA;;;;AAIA,0B;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACoF;AACpB;AACI;AACZ;AACgC;AACF;AACpB;AACQ;AACH;AACH;AACpE;AACoC;;AAEpC;AACA;AACA;AACA;;AAEe,qBAAqB,+FAAa;;AAEjD;AACA;AACA,CAAC,oFAAI;AACL,CAAC,sFAAM;AACP,CAAC,4EAAI;AACL,CAAC,iGAAe;AAChB,CAAC,2FAAmB;AACpB,CAAC,iFAAS;AACV,CAAC,wFAAU;AACX,CAAC,sFAAS;AACV,CAAC,oFAAQ;AACT;;AAEA,+FAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA","file":"ckeditor.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"BalloonEditor\"] = factory();\n\telse\n\t\troot[\"BalloonEditor\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/ckeditor.js\");\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\n/**\r\n * @module autosave/autosave\r\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport PendingActions from '@ckeditor/ckeditor5-core/src/pendingactions';\nimport DomEmitterMixin from '@ckeditor/ckeditor5-utils/src/dom/emittermixin';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport { debounce } from 'lodash-es';\n/* globals window */\n/**\r\n * The {@link module:autosave/autosave~Autosave} plugin allows you to automatically save the data (e.g. send it to the server)\r\n * when needed (when the user changed the content).\r\n *\r\n * It listens to the {@link module:engine/model/document~Document#event:change:data `editor.model.document#change:data`}\r\n * and `window#beforeunload` events and calls the\r\n * {@link module:autosave/autosave~AutosaveAdapter#save `config.autosave.save()`} function.\r\n *\r\n *\t\tClassicEditor\r\n *\t\t\t.create( document.querySelector( '#editor' ), {\r\n *\t\t\t\tplugins: [ ArticlePluginSet, Autosave ],\r\n *\t\t\t\ttoolbar: [ 'heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'numberedList', 'blockQuote', 'undo', 'redo' ],\r\n *\t\t\t\timage: {\r\n *\t\t\t\t\ttoolbar: [ 'imageStyle:full', 'imageStyle:side', '|', 'imageTextAlternative' ],\r\n *\t\t\t\t},\r\n *\t\t\t\tautosave: {\r\n *\t\t\t\t\tsave( editor ) {\r\n *\t\t\t\t\t\t// The saveData() function must return a promise\r\n *\t\t\t\t\t\t// which should be resolved when the data is successfully saved.\r\n *\t\t\t\t\t\treturn saveData( editor.getData() );\r\n *\t\t\t\t\t}\r\n *\t\t\t\t}\r\n *\t\t\t} );\r\n *\r\n * Read more about this feature in the {@glink builds/guides/integration/saving-data#autosave-feature Autosave feature}\r\n * section of the {@glink builds/guides/integration/saving-data Saving and getting data}.\r\n *\r\n * @extends module:core/plugin~Plugin\r\n */\nexport default class Autosave extends Plugin {\n    /**\r\n\t * @inheritDoc\r\n\t */\n    static get pluginName() {\n        return 'Autosave';\n    }\n    /**\r\n\t * @inheritDoc\r\n\t */\n    static get requires() {\n        return [PendingActions];\n    }\n    /**\r\n\t * @inheritDoc\r\n\t */\n    constructor(editor) {\n        super(editor);\n        const config = editor.config.get('autosave') || {};\n        // A minimum amount of time that needs to pass after the last action.\n        // After that time the provided save callbacks are being called.\n        const waitingTime = config.waitingTime || 1000;\n        /**\r\n\t\t * The adapter is an object with a `save()` method. That method will be called whenever\r\n\t\t * the data changes. It might be called some time after the change,\r\n\t\t * since the event is throttled for performance reasons.\r\n\t\t *\r\n\t\t * @member {module:autosave/autosave~AutosaveAdapter} #adapter\r\n\t\t */\n        /**\r\n\t\t * The state of this plugin.\r\n\t\t *\r\n\t\t * The plugin can be in the following states:\r\n\t\t *\r\n\t\t * * synchronized &ndash; When all changes are saved.\r\n\t\t * * waiting &ndash; When the plugin is waiting for other changes before calling `adapter#save()` and `config.autosave.save()`.\r\n\t\t * * saving &ndash; When the provided save method is called and the plugin waits for the response.\r\n\t\t * * error &ndash When the provided save method will throw an error. This state immediately changes to the `saving` state and\r\n\t\t * the save method will be called again in the short period of time.\r\n\t\t *\r\n\t\t * @member {'synchronized'|'waiting'|'saving'} #state\r\n\t\t */\n        this.set('state', 'synchronized');\n        /**\r\n\t\t * Debounced save method. The `save()` method is called the specified `waitingTime` after `debouncedSave()` is called,\r\n\t\t * unless a new action happens in the meantime.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {Function}\r\n\t\t */\n        this._debouncedSave = debounce(this._save.bind(this), waitingTime);\n        /**\r\n\t\t * The last document version.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {Number}\r\n\t\t */\n        this._lastDocumentVersion = editor.model.document.version;\n        /**\r\n\t\t * DOM emitter.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {DomEmitterMixin}\r\n\t\t */\n        this._domEmitter = Object.create(DomEmitterMixin);\n        /**\r\n\t\t * The configuration of this plugins.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {Object}\r\n\t\t */\n        this._config = config;    /**\r\n\t\t * An action that will be added to pending action manager for actions happening in that plugin.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Object} #_action\r\n\t\t */\n                                  /**\r\n\t\t * Editor's pending actions manager.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {@module:core/pendingactions~PendingActions} #_pendingActions\r\n\t\t */\n    }\n    /**\r\n\t * @inheritDoc\r\n\t */\n    init() {\n        const editor = this.editor;\n        const doc = editor.model.document;\n        const t = editor.t;\n        this._pendingActions = editor.plugins.get(PendingActions);\n        this.listenTo(doc, 'change:data', () => {\n            if (!this._saveCallbacks.length) {\n                return;\n            }\n            if (this.state == 'synchronized') {\n                this._action = this._pendingActions.add(t('a'));\n                this.state = 'waiting';\n                this._debouncedSave();\n            } else if (this.state == 'waiting') {\n                this._debouncedSave();\n            }    // If the plugin is in `saving` state, it will change its state later basing on the `document.version`.\n                 // If the `document.version` will be higher than stored `#_lastDocumentVersion`, then it means, that some `change:data`\n                 // event has fired in the meantime.\n        });\n        // Flush on the editor's destroy listener with the highest priority to ensure that\n        // `editor.getData()` will be called before plugins are destroyed.\n        this.listenTo(editor, 'destroy', () => this._flush(), { priority: 'highest' });\n        // It's not possible to easy test it because karma uses `beforeunload` event\n        // to warn before full page reload and this event cannot be dispatched manually.\n        /* istanbul ignore next */\n        this._domEmitter.listenTo(window, 'beforeunload', (evtInfo, domEvt) => {\n            if (this._pendingActions.hasAny) {\n                domEvt.returnValue = this._pendingActions.first.message;\n            }\n        });\n    }\n    /**\r\n\t * @inheritDoc\r\n\t */\n    destroy() {\n        // There's no need for canceling or flushing the throttled save, as\n        // it's done on the editor's destroy event with the highest priority.\n        this._domEmitter.stopListening();\n        super.destroy();\n    }\n    /**\r\n\t * Invokes the remaining `_save()` method call.\r\n\t *\r\n\t * @protected\r\n\t */\n    _flush() {\n        this._debouncedSave.flush();\n    }\n    /**\r\n\t * If the adapter is set and a new document version exists,\r\n\t * the `_save()` method creates a pending action and calls the `adapter.save()` method.\r\n\t * It waits for the result and then removes the created pending action.\r\n\t *\r\n\t * @private\r\n\t */\n    _save() {\n        const version = this.editor.model.document.version;\n        // Change may not produce an operation, so the document's version\n        // can be the same after that change.\n        if (version < this._lastDocumentVersion || this.editor.state === 'initializing') {\n            this._debouncedSave.cancel();\n            return;\n        }\n        this._lastDocumentVersion = version;\n        this.state = 'saving';\n        // Wait one promise cycle to be sure that save callbacks are not called\n        // inside a conversion or when the editor's state changes.\n        Promise.resolve().then(() => Promise.all(this._saveCallbacks.map(cb => cb(this.editor))))    // In case of an error re-try the save later and throw the original error.\n                                                                                                     // Being in the `saving` state ensures that the debounced save action\n                                                                                                     // won't be delayed further by the `change:data` event listener.\n.catch(err => {\n            this.state = 'error';\n            // Change immediately to the `saving` state so the `change:state` event will be fired.\n            this.state = 'saving';\n            this._debouncedSave();\n            throw err;\n        }).then(() => {\n            if (this.editor.model.document.version > this._lastDocumentVersion) {\n                this.state = 'waiting';\n                this._debouncedSave();\n            } else {\n                this.state = 'synchronized';\n                this._pendingActions.remove(this._action);\n                this._action = null;\n            }\n        });\n    }\n    /**\r\n\t * Saves callbacks.\r\n\t *\r\n\t * @private\r\n\t * @type {Array.<Function>}\r\n\t */\n    get _saveCallbacks() {\n        const saveCallbacks = [];\n        if (this.adapter && this.adapter.save) {\n            saveCallbacks.push(this.adapter.save);\n        }\n        if (this._config.save) {\n            saveCallbacks.push(this._config.save);\n        }\n        return saveCallbacks;\n    }\n}\nmix(Autosave, ObservableMixin);    /**\r\n * An interface that requires the `save()` method.\r\n *\r\n * Used by {@link module:autosave/autosave~Autosave#adapter}.\r\n *\r\n * @interface module:autosave/autosave~AutosaveAdapter\r\n */\n                                   /**\r\n * The method that will be called when the data changes. It should return a promise (e.g. in case of saving content to the database),\r\n * so the autosave plugin will wait for that action before removing it from pending actions.\r\n *\r\n * @method #save\r\n * @param {module:core/editor/editor~Editor} editor The editor instance.\r\n * @returns {Promise.<*>}\r\n */\n                                   /**\r\n * The configuration of the {@link module:autosave/autosave~Autosave autosave feature}.\r\n *\r\n * Read more in {@link module:autosave/autosave~AutosaveConfig}.\r\n *\r\n * @member {module:autosave/autosave~AutosaveConfig} module:core/editor/editorconfig~EditorConfig#autosave\r\n */\n                                   /**\r\n * The configuration of the {@link module:autosave/autosave~Autosave autosave feature}.\r\n *\r\n *\t\tClassicEditor\r\n *\t\t\t.create( editorElement, {\r\n *\t\t\t\tautosave: {\r\n *\t\t\t\t\tsave( editor ) {\r\n *\t\t\t\t\t\t// The saveData() function must return a promise\r\n *\t\t\t\t\t\t// which should be resolved when the data is successfully saved.\r\n *\t\t\t\t\t\treturn saveData( editor.getData() );\r\n *\t\t\t\t\t}\r\n *\t\t\t\t}\r\n *\t\t\t} );\r\n *\t\t\t.then( ... )\r\n *\t\t\t.catch( ... );\r\n *\r\n * See {@link module:core/editor/editorconfig~EditorConfig all editor configuration options}.\r\n *\r\n * See also the demo of the {@glink builds/guides/integration/saving-data#autosave-feature autosave feature}.\r\n *\r\n * @interface AutosaveConfig\r\n */\n                                   /**\r\n * The callback to be executed when the data needs to be saved.\r\n *\r\n * This function must return a promise which should be resolved when the data is successfully saved.\r\n *\r\n *\t\tClassicEditor\r\n *\t\t\t.create( editorElement, {\r\n *\t\t\t\tautosave: {\r\n *\t\t\t\t\tsave( editor ) {\r\n *\t\t\t\t\t\treturn saveData( editor.getData() );\r\n *\t\t\t\t\t}\r\n *\t\t\t\t}\r\n *\t\t\t} );\r\n *\t\t\t.then( ... )\r\n *\t\t\t.catch( ... );\r\n *\r\n * @method module:autosave/autosave~AutosaveConfig#save\r\n * @param {module:core/editor/editor~Editor} editor The editor instance.\r\n * @returns {Promise.<*>}\r\n */\n                                   /**\r\n * The minimum amount of time that needs to pass after the last action to call the provided callback.\r\n * By default it is 1000 ms.\r\n *\r\n *\t\tClassicEditor\r\n *\t\t\t.create( editorElement, {\r\n *\t\t\t\tautosave: {\r\n *\t\t\t\t\tsave( editor ) {\r\n *\t\t\t\t\t\treturn saveData( editor.getData() );\r\n *\t\t\t\t\t},\r\n *\t\t\t\t\twaitingTime: 2000\r\n *\t\t\t\t}\r\n *\t\t\t} );\r\n *\t\t\t.then( ... )\r\n *\t\t\t.catch( ... );\r\n *\r\n * @member {Number} module:autosave/autosave~AutosaveConfig#waitingTime\r\n */","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module basic-styles/attributecommand\r\n */\r\n\r\nimport Command from '@ckeditor/ckeditor5-core/src/command';\r\n\r\n/**\r\n * An extension of the base {@link module:core/command~Command} class, which provides utilities for a command\r\n * that toggles a single attribute on a text or an element.\r\n *\r\n * `AttributeCommand` uses {@link module:engine/model/document~Document#selection}\r\n * to decide which nodes (if any) should be changed, and applies or removes the attribute from them.\r\n *\r\n * The command checks the {@link module:engine/model/model~Model#schema} to decide if it can be enabled\r\n * for the current selection and to which nodes the attribute can be applied.\r\n *\r\n * @extends module:core/command~Command\r\n */\r\nexport default class AttributeCommand extends Command {\r\n\t/**\r\n\t * @param {module:core/editor/editor~Editor} editor\r\n\t * @param {String} attributeKey Attribute that will be set by the command.\r\n\t */\r\n\tconstructor( editor, attributeKey ) {\r\n\t\tsuper( editor );\r\n\r\n\t\t/**\r\n\t\t * The attribute that will be set by the command.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {String}\r\n\t\t */\r\n\t\tthis.attributeKey = attributeKey;\r\n\r\n\t\t/**\r\n\t\t * Flag indicating whether the command is active. The command is active when the\r\n\t\t * {@link module:engine/model/selection~Selection#hasAttribute selection has the attribute} which means that:\r\n\t\t *\r\n\t\t * * If the selection is not empty &ndash; That the attribute is set on the first node in the selection that allows this attribute.\r\n\t\t * * If the selection is empty &ndash; That the selection has the attribute itself (which means that newly typed\r\n\t\t * text will have this attribute, too).\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @readonly\r\n\t\t * @member {Boolean} #value\r\n\t\t */\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the command's {@link #value} and {@link #isEnabled} based on the current selection.\r\n\t */\r\n\trefresh() {\r\n\t\tconst model = this.editor.model;\r\n\t\tconst doc = model.document;\r\n\r\n\t\tthis.value = this._getValueFromFirstAllowedNode();\r\n\t\tthis.isEnabled = model.schema.checkAttributeInSelection( doc.selection, this.attributeKey );\r\n\t}\r\n\r\n\t/**\r\n\t * Executes the command &mdash; applies the attribute to the selection or removes it from the selection.\r\n\t *\r\n\t * If the command is active (`value == true`), it will remove attributes. Otherwise, it will set attributes.\r\n\t *\r\n\t * The execution result differs, depending on the {@link module:engine/model/document~Document#selection}:\r\n\t *\r\n\t * * If the selection is on a range, the command applies the attribute to all nodes in that range\r\n\t * (if they are allowed to have this attribute by the {@link module:engine/model/schema~Schema schema}).\r\n\t * * If the selection is collapsed in a non-empty node, the command applies the attribute to the\r\n\t * {@link module:engine/model/document~Document#selection} itself (note that typed characters copy attributes from the selection).\r\n\t * * If the selection is collapsed in an empty node, the command applies the attribute to the parent node of the selection (note\r\n\t * that the selection inherits all attributes from a node if it is in an empty node).\r\n\t *\r\n\t * @fires execute\r\n\t * @param {Object} [options] Command options.\r\n\t * @param {Boolean} [options.forceValue] If set, it will force the command behavior. If `true`, the command will apply the attribute,\r\n\t * otherwise the command will remove the attribute.\r\n\t * If not set, the command will look for its current value to decide what it should do.\r\n\t */\r\n\texecute( options = {} ) {\r\n\t\tconst model = this.editor.model;\r\n\t\tconst doc = model.document;\r\n\t\tconst selection = doc.selection;\r\n\t\tconst value = ( options.forceValue === undefined ) ? !this.value : options.forceValue;\r\n\r\n\t\tmodel.change( writer => {\r\n\t\t\tif ( selection.isCollapsed ) {\r\n\t\t\t\tif ( value ) {\r\n\t\t\t\t\twriter.setSelectionAttribute( this.attributeKey, true );\r\n\t\t\t\t} else {\r\n\t\t\t\t\twriter.removeSelectionAttribute( this.attributeKey );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconst ranges = model.schema.getValidRanges( selection.getRanges(), this.attributeKey );\r\n\r\n\t\t\t\tfor ( const range of ranges ) {\r\n\t\t\t\t\tif ( value ) {\r\n\t\t\t\t\t\twriter.setAttribute( this.attributeKey, value, range );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\twriter.removeAttribute( this.attributeKey, range );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * Checks the attribute value of the first node in the selection that allows the attribute.\r\n\t * For the collapsed selection returns the selection attribute.\r\n\t *\r\n\t * @private\r\n\t * @returns {Boolean} The attribute value.\r\n\t */\r\n\t_getValueFromFirstAllowedNode() {\r\n\t\tconst model = this.editor.model;\r\n\t\tconst schema = model.schema;\r\n\t\tconst selection = model.document.selection;\r\n\r\n\t\tif ( selection.isCollapsed ) {\r\n\t\t\treturn selection.hasAttribute( this.attributeKey );\r\n\t\t}\r\n\r\n\t\tfor ( const range of selection.getRanges() ) {\r\n\t\t\tfor ( const item of range.getItems() ) {\r\n\t\t\t\tif ( schema.checkAttribute( item, this.attributeKey ) ) {\r\n\t\t\t\t\treturn item.hasAttribute( this.attributeKey );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module basic-styles/bold\r\n */\r\n\r\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\r\nimport BoldEditing from './bold/boldediting';\r\nimport BoldUI from './bold/boldui';\r\n\r\n/**\r\n * The bold feature.\r\n *\r\n * For a detailed overview check the {@glink features/basic-styles Basic styles feature documentation}\r\n * and the {@glink api/basic-styles package page}.\r\n *\r\n * This is a \"glue\" plugin which loads the {@link module:basic-styles/bold/boldediting~BoldEditing bold editing feature}\r\n * and {@link module:basic-styles/bold/boldui~BoldUI bold UI feature}.\r\n *\r\n * @extends module:core/plugin~Plugin\r\n */\r\nexport default class Bold extends Plugin {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get requires() {\r\n\t\treturn [ BoldEditing, BoldUI ];\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get pluginName() {\r\n\t\treturn 'Bold';\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module basic-styles/bold/boldediting\r\n */\r\n\r\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\r\nimport AttributeCommand from '../attributecommand';\r\n\r\nconst BOLD = 'bold';\r\n\r\n/**\r\n * The bold editing feature.\r\n *\r\n * It registers the `'bold'` command and introduces the `bold` attribute in the model which renders to the view\r\n * as a `<strong>` element.\r\n *\r\n * @extends module:core/plugin~Plugin\r\n */\r\nexport default class BoldEditing extends Plugin {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get pluginName() {\r\n\t\treturn 'BoldEditing';\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tinit() {\r\n\t\tconst editor = this.editor;\r\n\t\t// Allow bold attribute on text nodes.\r\n\t\teditor.model.schema.extend( '$text', { allowAttributes: BOLD } );\r\n\t\teditor.model.schema.setAttributeProperties( BOLD, {\r\n\t\t\tisFormatting: true,\r\n\t\t\tcopyOnEnter: true\r\n\t\t} );\r\n\r\n\t\t// Build converter from model to view for data and editing pipelines.\r\n\t\teditor.conversion.attributeToElement( {\r\n\t\t\tmodel: BOLD,\r\n\t\t\tview: 'strong',\r\n\t\t\tupcastAlso: [\r\n\t\t\t\t'b',\r\n\t\t\t\tviewElement => {\r\n\t\t\t\t\tconst fontWeight = viewElement.getStyle( 'font-weight' );\r\n\r\n\t\t\t\t\tif ( !fontWeight ) {\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Value of the `font-weight` attribute can be defined as a string or a number.\r\n\t\t\t\t\tif ( fontWeight == 'bold' || Number( fontWeight ) >= 600 ) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tname: true,\r\n\t\t\t\t\t\t\tstyles: [ 'font-weight' ]\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t} );\r\n\r\n\t\t// Create bold command.\r\n\t\teditor.commands.add( BOLD, new AttributeCommand( editor, BOLD ) );\r\n\r\n\t\t// Set the Ctrl+B keystroke.\r\n\t\teditor.keystrokes.set( 'CTRL+B', BOLD );\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\n/**\r\n * @module basic-styles/bold/boldui\r\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport boldIcon from '../../theme/icons/bold.svg';\nconst BOLD = 'bold';\n/**\r\n * The bold UI feature. It introduces the Bold button.\r\n *\r\n * @extends module:core/plugin~Plugin\r\n */\nexport default class BoldUI extends Plugin {\n    /**\r\n\t * @inheritDoc\r\n\t */\n    init() {\n        const editor = this.editor;\n        const t = editor.t;\n        // Add bold button to feature components.\n        editor.ui.componentFactory.add(BOLD, locale => {\n            const command = editor.commands.get(BOLD);\n            const view = new ButtonView(locale);\n            view.set({\n                label: t('d'),\n                icon: boldIcon,\n                keystroke: 'CTRL+B',\n                tooltip: true,\n                isToggleable: true\n            });\n            view.bind('isOn', 'isEnabled').to(command, 'value', 'isEnabled');\n            // Execute command.\n            this.listenTo(view, 'execute', () => {\n                editor.execute(BOLD);\n                editor.editing.view.focus();\n            });\n            return view;\n        });\n    }\n}","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module basic-styles/italic\r\n */\r\n\r\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\r\nimport ItalicEditing from './italic/italicediting';\r\nimport ItalicUI from './italic/italicui';\r\n\r\n/**\r\n * The italic feature.\r\n *\r\n * For a detailed overview check the {@glink features/basic-styles Basic styles feature documentation}\r\n * and the {@glink api/basic-styles package page}.\r\n *\r\n * This is a \"glue\" plugin which loads the {@link module:basic-styles/italic/italicediting~ItalicEditing} and\r\n * {@link module:basic-styles/italic/italicui~ItalicUI} plugins.\r\n *\r\n * @extends module:core/plugin~Plugin\r\n */\r\nexport default class Italic extends Plugin {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get requires() {\r\n\t\treturn [ ItalicEditing, ItalicUI ];\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get pluginName() {\r\n\t\treturn 'Italic';\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module basic-styles/italic/italicediting\r\n */\r\n\r\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\r\nimport AttributeCommand from '../attributecommand';\r\n\r\nconst ITALIC = 'italic';\r\n\r\n/**\r\n * The italic editing feature.\r\n *\r\n * It registers the `'italic'` command, the <kbd>Ctrl+I</kbd> keystroke and introduces the `italic` attribute in the model\r\n * which renders to the view as an `<i>` element.\r\n *\r\n * @extends module:core/plugin~Plugin\r\n */\r\nexport default class ItalicEditing extends Plugin {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get pluginName() {\r\n\t\treturn 'ItalicEditing';\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tinit() {\r\n\t\tconst editor = this.editor;\r\n\r\n\t\t// Allow italic attribute on text nodes.\r\n\t\teditor.model.schema.extend( '$text', { allowAttributes: ITALIC } );\r\n\t\teditor.model.schema.setAttributeProperties( ITALIC, {\r\n\t\t\tisFormatting: true,\r\n\t\t\tcopyOnEnter: true\r\n\t\t} );\r\n\r\n\t\teditor.conversion.attributeToElement( {\r\n\t\t\tmodel: ITALIC,\r\n\t\t\tview: 'i',\r\n\t\t\tupcastAlso: [\r\n\t\t\t\t'em',\r\n\t\t\t\t{\r\n\t\t\t\t\tstyles: {\r\n\t\t\t\t\t\t'font-style': 'italic'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t} );\r\n\r\n\t\t// Create italic command.\r\n\t\teditor.commands.add( ITALIC, new AttributeCommand( editor, ITALIC ) );\r\n\r\n\t\t// Set the Ctrl+I keystroke.\r\n\t\teditor.keystrokes.set( 'CTRL+I', ITALIC );\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\n/**\r\n * @module basic-styles/italic/italicui\r\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport italicIcon from '../../theme/icons/italic.svg';\nconst ITALIC = 'italic';\n/**\r\n * The italic UI feature. It introduces the Italic button.\r\n *\r\n * @extends module:core/plugin~Plugin\r\n */\nexport default class ItalicUI extends Plugin {\n    /**\r\n\t * @inheritDoc\r\n\t */\n    init() {\n        const editor = this.editor;\n        const t = editor.t;\n        // Add bold button to feature components.\n        editor.ui.componentFactory.add(ITALIC, locale => {\n            const command = editor.commands.get(ITALIC);\n            const view = new ButtonView(locale);\n            view.set({\n                label: t('c'),\n                icon: italicIcon,\n                keystroke: 'CTRL+I',\n                tooltip: true,\n                isToggleable: true\n            });\n            view.bind('isOn', 'isEnabled').to(command, 'value', 'isEnabled');\n            // Execute command.\n            this.listenTo(view, 'execute', () => {\n                editor.execute(ITALIC);\n                editor.editing.view.focus();\n            });\n            return view;\n        });\n    }\n}","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M10.187 17H5.773c-.637 0-1.092-.138-1.364-.415-.273-.277-.409-.718-.409-1.323V4.738c0-.617.14-1.062.419-1.332.279-.27.73-.406 1.354-.406h4.68c.69 0 1.288.041 1.793.124.506.083.96.242 1.36.478.341.197.644.447.906.75a3.262 3.262 0 0 1 .808 2.162c0 1.401-.722 2.426-2.167 3.075C15.05 10.175 16 11.315 16 13.01a3.756 3.756 0 0 1-2.296 3.504 6.1 6.1 0 0 1-1.517.377c-.571.073-1.238.11-2 .11zm-.217-6.217H7v4.087h3.069c1.977 0 2.965-.69 2.965-2.072 0-.707-.256-1.22-.768-1.537-.512-.319-1.277-.478-2.296-.478zM7 5.13v3.619h2.606c.729 0 1.292-.067 1.69-.2a1.6 1.6 0 0 0 .91-.765c.165-.267.247-.566.247-.897 0-.707-.26-1.176-.778-1.409-.519-.232-1.31-.348-2.375-.348H7z\\\"/></svg>\"","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M9.586 14.633l.021.004c-.036.335.095.655.393.962.082.083.173.15.274.201h1.474a.6.6 0 1 1 0 1.2H5.304a.6.6 0 0 1 0-1.2h1.15c.474-.07.809-.182 1.005-.334.157-.122.291-.32.404-.597l2.416-9.55a1.053 1.053 0 0 0-.281-.823 1.12 1.12 0 0 0-.442-.296H8.15a.6.6 0 0 1 0-1.2h6.443a.6.6 0 1 1 0 1.2h-1.195c-.376.056-.65.155-.823.296-.215.175-.423.439-.623.79l-2.366 9.347z\\\"/></svg>\"","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module clipboard/clipboard\r\n */\r\n\r\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\r\n\r\nimport ClipboardObserver from './clipboardobserver';\r\n\r\nimport plainTextToHtml from './utils/plaintexttohtml';\r\nimport normalizeClipboardHtml from './utils/normalizeclipboarddata';\r\nimport viewToPlainText from './utils/viewtoplaintext.js';\r\n\r\nimport HtmlDataProcessor from '@ckeditor/ckeditor5-engine/src/dataprocessor/htmldataprocessor';\r\n\r\n/**\r\n * The clipboard feature. It is responsible for intercepting the `paste` and `drop` events and\r\n * passing the pasted content through the clipboard pipeline in order to insert it into the editor's content.\r\n * It also handles the `cut` and `copy` events to fill the native clipboard with serialized editor's data.\r\n *\r\n * Read more about the clipboard integration in {@glink framework/guides/deep-dive/clipboard \"Clipboard\" deep dive} guide.\r\n *\r\n * @extends module:core/plugin~Plugin\r\n */\r\nexport default class Clipboard extends Plugin {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get pluginName() {\r\n\t\treturn 'Clipboard';\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tinit() {\r\n\t\tconst editor = this.editor;\r\n\t\tconst modelDocument = editor.model.document;\r\n\t\tconst view = editor.editing.view;\r\n\t\tconst viewDocument = view.document;\r\n\r\n\t\t/**\r\n\t\t * Data processor used to convert pasted HTML to a view structure.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {module:engine/dataprocessor/htmldataprocessor~HtmlDataProcessor} #_htmlDataProcessor\r\n\t\t */\r\n\t\tthis._htmlDataProcessor = new HtmlDataProcessor( viewDocument );\r\n\r\n\t\tview.addObserver( ClipboardObserver );\r\n\r\n\t\t// The clipboard paste pipeline.\r\n\r\n\t\t// Pasting and dropping is disabled when editor is read-only.\r\n\t\t// See: https://github.com/ckeditor/ckeditor5-clipboard/issues/26.\r\n\t\tthis.listenTo( viewDocument, 'clipboardInput', evt => {\r\n\t\t\tif ( editor.isReadOnly ) {\r\n\t\t\t\tevt.stop();\r\n\t\t\t}\r\n\t\t}, { priority: 'highest' } );\r\n\r\n\t\tthis.listenTo( viewDocument, 'clipboardInput', ( evt, data ) => {\r\n\t\t\tconst dataTransfer = data.dataTransfer;\r\n\t\t\tlet content = '';\r\n\r\n\t\t\tif ( dataTransfer.getData( 'text/html' ) ) {\r\n\t\t\t\tcontent = normalizeClipboardHtml( dataTransfer.getData( 'text/html' ) );\r\n\t\t\t} else if ( dataTransfer.getData( 'text/plain' ) ) {\r\n\t\t\t\tcontent = plainTextToHtml( dataTransfer.getData( 'text/plain' ) );\r\n\t\t\t}\r\n\r\n\t\t\tcontent = this._htmlDataProcessor.toView( content );\r\n\r\n\t\t\tthis.fire( 'inputTransformation', { content, dataTransfer } );\r\n\r\n\t\t\tview.scrollToTheSelection();\r\n\t\t}, { priority: 'low' } );\r\n\r\n\t\tthis.listenTo( this, 'inputTransformation', ( evt, data ) => {\r\n\t\t\tif ( !data.content.isEmpty ) {\r\n\t\t\t\tconst dataController = this.editor.data;\r\n\t\t\t\tconst model = this.editor.model;\r\n\r\n\t\t\t\t// Convert the pasted content to a model document fragment.\r\n\t\t\t\t// Conversion is contextual, but in this case we need an \"all allowed\" context and for that\r\n\t\t\t\t// we use the $clipboardHolder item.\r\n\t\t\t\tconst modelFragment = dataController.toModel( data.content, '$clipboardHolder' );\r\n\r\n\t\t\t\tif ( modelFragment.childCount == 0 ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmodel.insertContent( modelFragment );\r\n\t\t\t}\r\n\t\t}, { priority: 'low' } );\r\n\r\n\t\t// The clipboard copy/cut pipeline.\r\n\r\n\t\tfunction onCopyCut( evt, data ) {\r\n\t\t\tconst dataTransfer = data.dataTransfer;\r\n\r\n\t\t\tdata.preventDefault();\r\n\r\n\t\t\tconst content = editor.data.toView( editor.model.getSelectedContent( modelDocument.selection ) );\r\n\r\n\t\t\tviewDocument.fire( 'clipboardOutput', { dataTransfer, content, method: evt.name } );\r\n\t\t}\r\n\r\n\t\tthis.listenTo( viewDocument, 'copy', onCopyCut, { priority: 'low' } );\r\n\t\tthis.listenTo( viewDocument, 'cut', ( evt, data ) => {\r\n\t\t\t// Cutting is disabled when editor is read-only.\r\n\t\t\t// See: https://github.com/ckeditor/ckeditor5-clipboard/issues/26.\r\n\t\t\tif ( editor.isReadOnly ) {\r\n\t\t\t\tdata.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tonCopyCut( evt, data );\r\n\t\t\t}\r\n\t\t}, { priority: 'low' } );\r\n\r\n\t\tthis.listenTo( viewDocument, 'clipboardOutput', ( evt, data ) => {\r\n\t\t\tif ( !data.content.isEmpty ) {\r\n\t\t\t\tdata.dataTransfer.setData( 'text/html', this._htmlDataProcessor.toData( data.content ) );\r\n\t\t\t\tdata.dataTransfer.setData( 'text/plain', viewToPlainText( data.content ) );\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.method == 'cut' ) {\r\n\t\t\t\teditor.model.deleteContent( modelDocument.selection );\r\n\t\t\t}\r\n\t\t}, { priority: 'low' } );\r\n\t}\r\n}\r\n\r\n/**\r\n * Fired with a `content` and `dataTransfer` objects. The `content` which comes from the clipboard (was pasted or dropped)\r\n * should be processed in order to be inserted into the editor. The `dataTransfer` object is available\r\n * in case the transformation functions needs access to a raw clipboard data.\r\n *\r\n * It is a part of the {@glink framework/guides/deep-dive/clipboard#input-pipeline \"clipboard input pipeline\"}.\r\n *\r\n * @see module:clipboard/clipboardobserver~ClipboardObserver\r\n * @see module:clipboard/clipboard~Clipboard\r\n * @event module:clipboard/clipboard~Clipboard#event:inputTransformation\r\n * @param {Object} data Event data.\r\n * @param {module:engine/view/documentfragment~DocumentFragment} data.content Event data. Content to be inserted into the editor.\r\n * It can be modified by the event listeners. Read more about the clipboard pipelines in\r\n * {@glink framework/guides/deep-dive/clipboard \"Clipboard\" deep dive}.\r\n * @param {module:clipboard/datatransfer~DataTransfer} data.dataTransfer Data transfer instance.\r\n */\r\n\r\n/**\r\n * Fired on {@link module:engine/view/document~Document#event:copy} and {@link module:engine/view/document~Document#event:cut}\r\n * with a copy of selected content. The content can be processed before it ends up in the clipboard.\r\n *\r\n * It is a part of the {@glink framework/guides/deep-dive/clipboard#output-pipeline \"clipboard output pipeline\"}.\r\n *\r\n * @see module:clipboard/clipboardobserver~ClipboardObserver\r\n * @see module:clipboard/clipboard~Clipboard\r\n * @event module:engine/view/document~Document#event:clipboardOutput\r\n * @param {module:clipboard/clipboard~ClipboardOutputEventData} data Event data.\r\n */\r\n\r\n/**\r\n * The value of the {@link module:engine/view/document~Document#event:clipboardOutput} event.\r\n *\r\n * @class module:clipboard/clipboard~ClipboardOutputEventData\r\n */\r\n\r\n/**\r\n * Data transfer instance.\r\n *\r\n * @readonly\r\n * @member {module:clipboard/datatransfer~DataTransfer} module:clipboard/clipboard~ClipboardOutputEventData#dataTransfer\r\n */\r\n\r\n/**\r\n * Content to be put into the clipboard. It can be modified by the event listeners.\r\n * Read more about the clipboard pipelines in {@glink framework/guides/deep-dive/clipboard \"Clipboard\" deep dive}.\r\n *\r\n * @member {module:engine/view/documentfragment~DocumentFragment} module:clipboard/clipboard~ClipboardOutputEventData#content\r\n */\r\n\r\n/**\r\n * Whether the event was triggered by copy or cut operation.\r\n *\r\n * @member {'copy'|'cut'} module:clipboard/clipboard~ClipboardOutputEventData#method\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module clipboard/clipboardobserver\r\n */\r\n\r\nimport DomEventObserver from '@ckeditor/ckeditor5-engine/src/view/observer/domeventobserver';\r\nimport EventInfo from '@ckeditor/ckeditor5-utils/src/eventinfo';\r\nimport DataTransfer from './datatransfer';\r\n\r\n/**\r\n * Clipboard events observer.\r\n *\r\n * Fires the following events:\r\n *\r\n * * {@link module:engine/view/document~Document#event:clipboardInput}\r\n * * {@link module:engine/view/document~Document#event:dragover}\r\n * * {@link module:engine/view/document~Document#event:drop}\r\n * * {@link module:engine/view/document~Document#event:paste}\r\n * * {@link module:engine/view/document~Document#event:copy}\r\n * * {@link module:engine/view/document~Document#event:cut}\r\n *\r\n * Note that this observer is not available by default (it is not added by the engine).\r\n * To make it available it needs to be added to {@link module:engine/view/document~Document} by\r\n * the {@link module:engine/view/view~View#addObserver `View#addObserver()`} method. You can also load the\r\n * {@link module:clipboard/clipboard~Clipboard} plugin which adds this observer automatically (because it uses it).\r\n *\r\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\r\n */\r\nexport default class ClipboardObserver extends DomEventObserver {\r\n\tconstructor( view ) {\r\n\t\tsuper( view );\r\n\r\n\t\tconst viewDocument = this.document;\r\n\r\n\t\tthis.domEventType = [ 'paste', 'copy', 'cut', 'drop', 'dragover' ];\r\n\r\n\t\tthis.listenTo( viewDocument, 'paste', handleInput, { priority: 'low' } );\r\n\t\tthis.listenTo( viewDocument, 'drop', handleInput, { priority: 'low' } );\r\n\r\n\t\tfunction handleInput( evt, data ) {\r\n\t\t\tdata.preventDefault();\r\n\r\n\t\t\tconst targetRanges = data.dropRange ? [ data.dropRange ] : Array.from( viewDocument.selection.getRanges() );\r\n\r\n\t\t\tconst eventInfo = new EventInfo( viewDocument, 'clipboardInput' );\r\n\r\n\t\t\tviewDocument.fire( eventInfo, {\r\n\t\t\t\tdataTransfer: data.dataTransfer,\r\n\t\t\t\ttargetRanges\r\n\t\t\t} );\r\n\r\n\t\t\t// If CKEditor handled the input, do not bubble the original event any further.\r\n\t\t\t// This helps external integrations recognize that fact and act accordingly.\r\n\t\t\t// https://github.com/ckeditor/ckeditor5-upload/issues/92\r\n\t\t\tif ( eventInfo.stop.called ) {\r\n\t\t\t\tdata.stopPropagation();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tonDomEvent( domEvent ) {\r\n\t\tconst evtData = {\r\n\t\t\tdataTransfer: new DataTransfer( domEvent.clipboardData ? domEvent.clipboardData : domEvent.dataTransfer )\r\n\t\t};\r\n\r\n\t\tif ( domEvent.type == 'drop' ) {\r\n\t\t\tevtData.dropRange = getDropViewRange( this.view, domEvent );\r\n\t\t}\r\n\r\n\t\tthis.fire( domEvent.type, domEvent, evtData );\r\n\t}\r\n}\r\n\r\nfunction getDropViewRange( view, domEvent ) {\r\n\tconst domDoc = domEvent.target.ownerDocument;\r\n\tconst x = domEvent.clientX;\r\n\tconst y = domEvent.clientY;\r\n\tlet domRange;\r\n\r\n\t// Webkit & Blink.\r\n\tif ( domDoc.caretRangeFromPoint && domDoc.caretRangeFromPoint( x, y ) ) {\r\n\t\tdomRange = domDoc.caretRangeFromPoint( x, y );\r\n\t}\r\n\t// FF.\r\n\telse if ( domEvent.rangeParent ) {\r\n\t\tdomRange = domDoc.createRange();\r\n\t\tdomRange.setStart( domEvent.rangeParent, domEvent.rangeOffset );\r\n\t\tdomRange.collapse( true );\r\n\t}\r\n\r\n\tif ( domRange ) {\r\n\t\treturn view.domConverter.domRangeToView( domRange );\r\n\t} else {\r\n\t\treturn view.document.selection.getFirstRange();\r\n\t}\r\n}\r\n\r\n/**\r\n * Fired as a continuation of {@link #event:paste} and {@link #event:drop} events.\r\n *\r\n * It is a part of the {@glink framework/guides/deep-dive/clipboard#input-pipeline \"clipboard input pipeline\"}.\r\n *\r\n * Fired with a `dataTransfer` which comes from the clipboard and which content should be processed\r\n * and inserted into the editor.\r\n *\r\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\r\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\r\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\r\n *\r\n * @see module:clipboard/clipboardobserver~ClipboardObserver\r\n * @see module:clipboard/clipboard~Clipboard\r\n * @event module:engine/view/document~Document#event:clipboardInput\r\n * @param {Object} data Event data.\r\n * @param {module:clipboard/datatransfer~DataTransfer} data.dataTransfer Data transfer instance.\r\n * @param {Array.<module:engine/view/range~Range>} data.targetRanges Ranges which are the target of the operation\r\n * (usually – into which the content should be inserted).\r\n * If clipboard input was triggered by a paste operation, then these are the selection ranges. If by a drop operation,\r\n * then it's the drop position (which can be different than the selection at the moment of drop).\r\n */\r\n\r\n/**\r\n * Fired when user drags content over one of the editables.\r\n *\r\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\r\n *\r\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\r\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\r\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\r\n *\r\n * @see module:engine/view/document~Document#event:clipboardInput\r\n * @event module:engine/view/document~Document#event:dragover\r\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\r\n */\r\n\r\n/**\r\n * Fired when user dropped content into one of the editables.\r\n *\r\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\r\n *\r\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\r\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\r\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\r\n *\r\n * @see module:engine/view/document~Document#event:clipboardInput\r\n * @event module:engine/view/document~Document#event:drop\r\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\r\n * @param {module:engine/view/range~Range} dropRange The position into which the content is dropped.\r\n */\r\n\r\n/**\r\n * Fired when user pasted content into one of the editables.\r\n *\r\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\r\n *\r\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\r\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\r\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\r\n *\r\n * @see module:engine/view/document~Document#event:clipboardInput\r\n * @event module:engine/view/document~Document#event:paste\r\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\r\n */\r\n\r\n/**\r\n * Fired when user copied content from one of the editables.\r\n *\r\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\r\n *\r\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\r\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\r\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\r\n *\r\n * @see module:clipboard/clipboardobserver~ClipboardObserver\r\n * @event module:engine/view/document~Document#event:copy\r\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\r\n */\r\n\r\n/**\r\n * Fired when user cut content from one of the editables.\r\n *\r\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\r\n *\r\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\r\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\r\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\r\n *\r\n * @see module:clipboard/clipboardobserver~ClipboardObserver\r\n * @event module:engine/view/document~Document#event:cut\r\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\r\n */\r\n\r\n/**\r\n * The value of the {@link module:engine/view/document~Document#event:paste},\r\n * {@link module:engine/view/document~Document#event:copy} and {@link module:engine/view/document~Document#event:cut} events.\r\n *\r\n * In order to access clipboard data use `dataTransfer` property.\r\n *\r\n * @class module:clipboard/clipboardobserver~ClipboardEventData\r\n * @extends module:engine/view/observer/domeventdata~DomEventData\r\n */\r\n\r\n/**\r\n * Data transfer instance.\r\n *\r\n * @readonly\r\n * @member {module:clipboard/datatransfer~DataTransfer} module:clipboard/clipboardobserver~ClipboardEventData#dataTransfer\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module clipboard/datatransfer\r\n */\r\n\r\n/**\r\n * Facade over the native [`DataTransfer`](https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer) object.\r\n */\r\nexport default class DataTransfer {\r\n\tconstructor( nativeDataTransfer ) {\r\n\t\t/**\r\n\t\t * The array of files created from the native `DataTransfer#files` or `DataTransfer#items`.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Array.<File>} #files\r\n\t\t */\r\n\t\tthis.files = getFiles( nativeDataTransfer );\r\n\r\n\t\t/**\r\n\t\t * The native DataTransfer object.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {DataTransfer} #_native\r\n\t\t */\r\n\t\tthis._native = nativeDataTransfer;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of available native content types.\r\n\t *\r\n\t * @returns {Array.<String>}\r\n\t */\r\n\tget types() {\r\n\t\treturn this._native.types;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets data from the data transfer by its mime type.\r\n\t *\r\n\t *\t\tdataTransfer.getData( 'text/plain' );\r\n\t *\r\n\t * @param {String} type The mime type. E.g. `text/html` or `text/plain`.\r\n\t * @returns {String}\r\n\t */\r\n\tgetData( type ) {\r\n\t\treturn this._native.getData( type );\r\n\t}\r\n\r\n\t/**\r\n\t * Sets data in the data transfer.\r\n\t *\r\n\t * @param {String} type The mime type. E.g. `text/html` or `text/plain`.\r\n\t * @param {String} data\r\n\t */\r\n\tsetData( type, data ) {\r\n\t\tthis._native.setData( type, data );\r\n\t}\r\n}\r\n\r\nfunction getFiles( nativeDataTransfer ) {\r\n\t// DataTransfer.files and items are Array-like and might not have an iterable interface.\r\n\tconst files = nativeDataTransfer.files ? Array.from( nativeDataTransfer.files ) : [];\r\n\tconst items = nativeDataTransfer.items ? Array.from( nativeDataTransfer.items ) : [];\r\n\r\n\tif ( files.length ) {\r\n\t\treturn files;\r\n\t}\r\n\t// Chrome have empty DataTransfer.files, but let get files through the items interface.\r\n\treturn items\r\n\t\t.filter( item => item.kind === 'file' )\r\n\t\t.map( item => item.getAsFile() );\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module clipboard/utils/normalizeclipboarddata\r\n */\r\n\r\n/**\r\n * Removes some popular browser quirks out of the clipboard data (HTML).\r\n *\r\n * @param {String} data The HTML data to normalize.\r\n * @returns {String} Normalized HTML.\r\n */\r\nexport default function normalizeClipboardData( data ) {\r\n\treturn data\r\n\t\t.replace( /<span(?: class=\"Apple-converted-space\"|)>(\\s+)<\\/span>/g, ( fullMatch, spaces ) => {\r\n\t\t\t// Handle the most popular and problematic case when even a single space becomes an nbsp;.\r\n\t\t\t// Decode those to normal spaces. Read more in https://github.com/ckeditor/ckeditor5-clipboard/issues/2.\r\n\t\t\tif ( spaces.length == 1 ) {\r\n\t\t\t\treturn ' ';\r\n\t\t\t}\r\n\r\n\t\t\treturn spaces;\r\n\t\t} );\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module clipboard/utils/plaintexttohtml\r\n */\r\n\r\n/**\r\n * Converts plain text to its HTML-ized version.\r\n *\r\n * @param {String} text The plain text to convert.\r\n * @returns {String} HTML generated from the plain text.\r\n */\r\nexport default function plainTextToHtml( text ) {\r\n\ttext = text\r\n\t\t// Encode <>.\r\n\t\t.replace( /</g, '&lt;' )\r\n\t\t.replace( />/g, '&gt;' )\r\n\t\t// Creates paragraphs for every line breaks.\r\n\t\t.replace( /\\n/g, '</p><p>' )\r\n\t\t// Preserve trailing spaces (only the first and last one – the rest is handled below).\r\n\t\t.replace( /^\\s/, '&nbsp;' )\r\n\t\t.replace( /\\s$/, '&nbsp;' )\r\n\t\t// Preserve other subsequent spaces now.\r\n\t\t.replace( /\\s\\s/g, ' &nbsp;' );\r\n\r\n\tif ( text.indexOf( '</p><p>' ) > -1 ) {\r\n\t\t// If we created paragraphs above, add the trailing ones.\r\n\t\ttext = `<p>${ text }</p>`;\r\n\t}\r\n\r\n\t// TODO:\r\n\t// * What about '\\nfoo' vs ' foo'?\r\n\r\n\treturn text;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module clipboard/utils/viewtoplaintext\r\n */\r\n\r\n// Elements which should not have empty-line padding.\r\n// Most `view.ContainerElement` want to be separate by new-line, but some are creating one structure\r\n// together (like `<li>`) so it is better to separate them by only one \"\\n\".\r\nconst smallPaddingElements = [ 'figcaption', 'li' ];\r\n\r\n/**\r\n * Converts {@link module:engine/view/item~Item view item} and all of its children to plain text.\r\n *\r\n * @param {module:engine/view/item~Item} viewItem View item to convert.\r\n * @returns {String} Plain text representation of `viewItem`.\r\n */\r\nexport default function viewToPlainText( viewItem ) {\r\n\tlet text = '';\r\n\r\n\tif ( viewItem.is( 'text' ) || viewItem.is( 'textProxy' ) ) {\r\n\t\t// If item is `Text` or `TextProxy` simple take its text data.\r\n\t\ttext = viewItem.data;\r\n\t} else if ( viewItem.is( 'img' ) && viewItem.hasAttribute( 'alt' ) ) {\r\n\t\t// Special case for images - use alt attribute if it is provided.\r\n\t\ttext = viewItem.getAttribute( 'alt' );\r\n\t} else {\r\n\t\t// Other elements are document fragments, attribute elements or container elements.\r\n\t\t// They don't have their own text value, so convert their children.\r\n\t\tlet prev = null;\r\n\r\n\t\tfor ( const child of viewItem.getChildren() ) {\r\n\t\t\tconst childText = viewToPlainText( child );\r\n\r\n\t\t\t// Separate container element children with one or more new-line characters.\r\n\t\t\tif ( prev && ( prev.is( 'containerElement' ) || child.is( 'containerElement' ) ) ) {\r\n\t\t\t\tif ( smallPaddingElements.includes( prev.name ) || smallPaddingElements.includes( child.name ) ) {\r\n\t\t\t\t\ttext += '\\n';\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttext += '\\n\\n';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttext += childText;\r\n\t\t\tprev = child;\r\n\t\t}\r\n\t}\r\n\r\n\treturn text;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module core/command\r\n */\r\n\r\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\r\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\r\n\r\n/**\r\n * The base class for CKEditor commands.\r\n *\r\n * Commands are the main way to manipulate editor contents and state. They are mostly used by UI elements (or by other\r\n * commands) to make changes in the model. Commands are available in every part of code that has access to\r\n * the {@link module:core/editor/editor~Editor editor} instance.\r\n *\r\n * Instances of registered commands can be retrieved from {@link module:core/editor/editor~Editor#commands `editor.commands`}.\r\n * The easiest way to execute a command is through {@link module:core/editor/editor~Editor#execute `editor.execute()`}.\r\n *\r\n * By default commands are disabled when the editor is in {@link module:core/editor/editor~Editor#isReadOnly read-only} mode.\r\n *\r\n * @mixes module:utils/observablemixin~ObservableMixin\r\n */\r\nexport default class Command {\r\n\t/**\r\n\t * Creates a new `Command` instance.\r\n\t *\r\n\t * @param {module:core/editor/editor~Editor} editor Editor on which this command will be used.\r\n\t */\r\n\tconstructor( editor ) {\r\n\t\t/**\r\n\t\t * The editor on which this command will be used.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:core/editor/editor~Editor}\r\n\t\t */\r\n\t\tthis.editor = editor;\r\n\r\n\t\t/**\r\n\t\t * The value of the command. A concrete command class should define what it represents for it.\r\n\t\t *\r\n\t\t * For example, the `'bold'` command's value indicates whether the selection starts in a bolded text.\r\n\t\t * And the value of the `'link'` command may be an object with links details.\r\n\t\t *\r\n\t\t * It is possible for a command to have no value (e.g. for stateless actions such as `'imageUpload'`).\r\n\t\t *\r\n\t\t * A concrete command class should control this value by overriding the {@link #refresh `refresh()`} method.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @readonly\r\n\t\t * @member #value\r\n\t\t */\r\n\t\tthis.set( 'value', undefined );\r\n\r\n\t\t/**\r\n\t\t * Flag indicating whether a command is enabled or disabled.\r\n\t\t * A disabled command will do nothing when executed.\r\n\t\t *\r\n\t\t * A concrete command class should control this value by overriding the {@link #refresh `refresh()`} method.\r\n\t\t *\r\n\t\t * It is possible to disable a command from \"outside\". For instance, in your integration you may want to disable\r\n\t\t * a certain set of commands for the time being. To do that, you can use the fact that `isEnabled` is observable\r\n\t\t * and it fires the `set:isEnabled` event every time anyone tries to modify its value:\r\n\t\t *\r\n\t\t *\t\tfunction disableCommand( cmd ) {\r\n\t\t *\t\t\tcmd.on( 'set:isEnabled', forceDisable, { priority: 'highest' } );\r\n\t\t *\r\n\t\t *\t\t\tcmd.isEnabled = false;\r\n\t\t *\r\n\t\t *\t\t\t// Make it possible to enable the command again.\r\n\t\t *\t\t\treturn () => {\r\n\t\t *\t\t\t\tcmd.off( 'set:isEnabled', forceDisable );\r\n\t\t *\t\t\t\tcmd.refresh();\r\n\t\t *\t\t\t};\r\n\t\t *\r\n\t\t *\t\t\tfunction forceDisable( evt ) {\r\n\t\t *\t\t\t\tevt.return = false;\r\n\t\t *\t\t\t\tevt.stop();\r\n\t\t *\t\t\t}\r\n\t\t *\t\t}\r\n\t\t *\r\n\t\t *\t\t// Usage:\r\n\t\t *\r\n\t\t *\t\t// Disabling the command.\r\n\t\t *\t\tconst enableBold = disableCommand( editor.commands.get( 'bold' ) );\r\n\t\t *\r\n\t\t *\t\t// Enabling the command again.\r\n\t\t *\t\tenableBold();\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @readonly\r\n\t\t * @member {Boolean} #isEnabled\r\n\t\t */\r\n\t\tthis.set( 'isEnabled', false );\r\n\r\n\t\t/**\r\n\t\t * Holds identifiers for {@link #forceDisabled} mechanism.\r\n\t\t *\r\n\t\t * @type {Set.<String>}\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis._disableStack = new Set();\r\n\r\n\t\tthis.decorate( 'execute' );\r\n\r\n\t\t// By default every command is refreshed when changes are applied to the model.\r\n\t\tthis.listenTo( this.editor.model.document, 'change', () => {\r\n\t\t\tthis.refresh();\r\n\t\t} );\r\n\r\n\t\tthis.on( 'execute', evt => {\r\n\t\t\tif ( !this.isEnabled ) {\r\n\t\t\t\tevt.stop();\r\n\t\t\t}\r\n\t\t}, { priority: 'high' } );\r\n\r\n\t\t// By default commands are disabled when the editor is in read-only mode.\r\n\t\tthis.listenTo( editor, 'change:isReadOnly', ( evt, name, value ) => {\r\n\t\t\tif ( value ) {\r\n\t\t\t\tthis.forceDisabled( 'readOnlyMode' );\r\n\t\t\t} else {\r\n\t\t\t\tthis.clearForceDisabled( 'readOnlyMode' );\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * Refreshes the command. The command should update its {@link #isEnabled} and {@link #value} properties\r\n\t * in this method.\r\n\t *\r\n\t * This method is automatically called when\r\n\t * {@link module:engine/model/document~Document#event:change any changes are applied to the document}.\r\n\t */\r\n\trefresh() {\r\n\t\tthis.isEnabled = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Disables the command.\r\n\t *\r\n\t * Command may be disabled by multiple features or algorithms (at once). When disabling a command, unique id should be passed\r\n\t * (e.g. feature name). The same identifier should be used when {@link #clearForceDisabled enabling back} the command.\r\n\t * The command becomes enabled only after all features {@link #clearForceDisabled enabled it back}.\r\n\t *\r\n\t * Disabling and enabling a command:\r\n\t *\r\n\t *\t\tcommand.isEnabled; // -> true\r\n\t *\t\tcommand.forceDisabled( 'MyFeature' );\r\n\t *\t\tcommand.isEnabled; // -> false\r\n\t *\t\tcommand.clearForceDisabled( 'MyFeature' );\r\n\t *\t\tcommand.isEnabled; // -> true\r\n\t *\r\n\t * Command disabled by multiple features:\r\n\t *\r\n\t *\t\tcommand.forceDisabled( 'MyFeature' );\r\n\t *\t\tcommand.forceDisabled( 'OtherFeature' );\r\n\t *\t\tcommand.clearForceDisabled( 'MyFeature' );\r\n\t *\t\tcommand.isEnabled; // -> false\r\n\t *\t\tcommand.clearForceDisabled( 'OtherFeature' );\r\n\t *\t\tcommand.isEnabled; // -> true\r\n\t *\r\n\t * Multiple disabling with the same identifier is redundant:\r\n\t *\r\n\t *\t\tcommand.forceDisabled( 'MyFeature' );\r\n\t *\t\tcommand.forceDisabled( 'MyFeature' );\r\n\t *\t\tcommand.clearForceDisabled( 'MyFeature' );\r\n\t *\t\tcommand.isEnabled; // -> true\r\n\t *\r\n\t * **Note:** some commands or algorithms may have more complex logic when it comes to enabling or disabling certain commands,\r\n\t * so the command might be still disabled after {@link #clearForceDisabled} was used.\r\n\t *\r\n\t * @param {String} id Unique identifier for disabling. Use the same id when {@link #clearForceDisabled enabling back} the command.\r\n\t */\r\n\tforceDisabled( id ) {\r\n\t\tthis._disableStack.add( id );\r\n\r\n\t\tif ( this._disableStack.size == 1 ) {\r\n\t\t\tthis.on( 'set:isEnabled', forceDisable, { priority: 'highest' } );\r\n\t\t\tthis.isEnabled = false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Clears forced disable previously set through {@link #forceDisabled}. See {@link #forceDisabled}.\r\n\t *\r\n\t * @param {String} id Unique identifier, equal to the one passed in {@link #forceDisabled} call.\r\n\t */\r\n\tclearForceDisabled( id ) {\r\n\t\tthis._disableStack.delete( id );\r\n\r\n\t\tif ( this._disableStack.size == 0 ) {\r\n\t\t\tthis.off( 'set:isEnabled', forceDisable );\r\n\t\t\tthis.refresh();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Executes the command.\r\n\t *\r\n\t * A command may accept parameters. They will be passed from {@link module:core/editor/editor~Editor#execute `editor.execute()`}\r\n\t * to the command.\r\n\t *\r\n\t * The `execute()` method will automatically abort when the command is disabled ({@link #isEnabled} is `false`).\r\n\t * This behavior is implemented by a high priority listener to the {@link #event:execute} event.\r\n\t *\r\n\t * In order to see how to disable a command from \"outside\" see the {@link #isEnabled} documentation.\r\n\t *\r\n\t * @fires execute\r\n\t */\r\n\texecute() {}\r\n\r\n\t/**\r\n\t * Destroys the command.\r\n\t */\r\n\tdestroy() {\r\n\t\tthis.stopListening();\r\n\t}\r\n\r\n\t/**\r\n\t * Event fired by the {@link #execute} method. The command action is a listener to this event so it's\r\n\t * possible to change/cancel the behavior of the command by listening to this event.\r\n\t *\r\n\t * See {@link module:utils/observablemixin~ObservableMixin#decorate} for more information and samples.\r\n\t *\r\n\t * **Note:** This event is fired even if command is disabled. However, it is automatically blocked\r\n\t * by a high priority listener in order to prevent command execution.\r\n\t *\r\n\t * @event execute\r\n\t */\r\n}\r\n\r\nmix( Command, ObservableMixin );\r\n\r\n// Helper function that forces command to be disabled.\r\nfunction forceDisable( evt ) {\r\n\tevt.return = false;\r\n\tevt.stop();\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module core/commandcollection\r\n */\r\n\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\n\r\n/**\r\n * Collection of commands. Its instance is available in {@link module:core/editor/editor~Editor#commands `editor.commands`}.\r\n */\r\nexport default class CommandCollection {\r\n\t/**\r\n\t * Creates collection instance.\r\n\t */\r\n\tconstructor() {\r\n\t\t/**\r\n\t\t * Command map.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Map}\r\n\t\t */\r\n\t\tthis._commands = new Map();\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a new command.\r\n\t *\r\n\t * @param {String} commandName The name of the command.\r\n\t * @param {module:core/command~Command} command\r\n\t */\r\n\tadd( commandName, command ) {\r\n\t\tthis._commands.set( commandName, command );\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves a command from the collection.\r\n\t *\r\n\t * @param {String} commandName The name of the command.\r\n\t * @returns {module:core/command~Command}\r\n\t */\r\n\tget( commandName ) {\r\n\t\treturn this._commands.get( commandName );\r\n\t}\r\n\r\n\t/**\r\n\t * Executes a command.\r\n\t *\r\n\t * @param {String} commandName The name of the command.\r\n\t * @param {*} [...commandParams] Command parameters.\r\n\t */\r\n\texecute( commandName, ...args ) {\r\n\t\tconst command = this.get( commandName );\r\n\r\n\t\tif ( !command ) {\r\n\t\t\t/**\r\n\t\t\t * Command does not exist.\r\n\t\t\t *\r\n\t\t\t * @error commandcollection-command-not-found\r\n\t\t\t * @param {String} commandName Name of the command.\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'commandcollection-command-not-found: Command does not exist.', this, { commandName } );\r\n\t\t}\r\n\r\n\t\tcommand.execute( ...args );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns iterator of command names.\r\n\t *\r\n\t * @returns {Iterable.<String>}\r\n\t */\r\n\t* names() {\r\n\t\tyield* this._commands.keys();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns iterator of command instances.\r\n\t *\r\n\t * @returns {Iterable.<module:core/command~Command>}\r\n\t */\r\n\t* commands() {\r\n\t\tyield* this._commands.values();\r\n\t}\r\n\r\n\t/**\r\n\t * Iterable interface.\r\n\t *\r\n\t * Returns `[ commandName, commandInstance ]` pairs.\r\n\t *\r\n\t * @returns {Iterable.<Array>}\r\n\t */\r\n\t[ Symbol.iterator ]() {\r\n\t\treturn this._commands[ Symbol.iterator ]();\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys all collection commands.\r\n\t */\r\n\tdestroy() {\r\n\t\tfor ( const command of this.commands() ) {\r\n\t\t\tcommand.destroy();\r\n\t\t}\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module core/context\r\n */\r\n\r\nimport Config from '@ckeditor/ckeditor5-utils/src/config';\r\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\r\nimport PluginCollection from './plugincollection';\r\nimport Locale from '@ckeditor/ckeditor5-utils/src/locale';\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\n\r\n/**\r\n * Provides a common, higher-level environment for solutions that use multiple {@link module:core/editor/editor~Editor editors}\r\n * or plugins that work outside the editor. Use it instead of {@link module:core/editor/editor~Editor.create `Editor.create()`}\r\n * in advanced application integrations.\r\n *\r\n * All configuration options passed to a context will be used as default options for editor instances initialized in that context.\r\n *\r\n * {@link module:core/contextplugin~ContextPlugin Context plugins} passed to a context instance will be shared among all\r\n * editor instances initialized in this context. These will be the same plugin instances for all the editors.\r\n *\r\n * **Note:** The context can only be initialized with {@link module:core/contextplugin~ContextPlugin context plugins}\r\n * (e.g. [comments](https://ckeditor.com/collaboration/comments/)). Regular {@link module:core/plugin~Plugin plugins} require an\r\n * editor instance to work and cannot be added to a context.\r\n *\r\n * **Note:** You can add a context plugin to an editor instance, though.\r\n *\r\n * If you are using multiple editor instances on one page and use any context plugins, create a context to share the configuration and\r\n * plugins among these editors. Some plugins will use the information about all existing editors to better integrate between them.\r\n *\r\n * If you are using plugins that do not require an editor to work (e.g. [comments](https://ckeditor.com/collaboration/comments/)),\r\n * enable and configure them using the context.\r\n *\r\n * If you are using only a single editor on each page, use {@link module:core/editor/editor~Editor.create `Editor.create()`} instead.\r\n * In such case, a context instance will be created by the editor instance in a transparent way.\r\n *\r\n * See {@link module:core/context~Context.create `Context.create()`} for usage examples.\r\n */\r\nexport default class Context {\r\n\t/**\r\n\t * Creates a context instance with a given configuration.\r\n\t *\r\n\t * Usually not to be used directly. See the static {@link module:core/context~Context.create `create()`} method.\r\n\t *\r\n\t * @param {Object} [config={}] The context configuration.\r\n\t */\r\n\tconstructor( config ) {\r\n\t\t/**\r\n\t\t * Stores all the configurations specific to this context instance.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @type {module:utils/config~Config}\r\n\t\t */\r\n\t\tthis.config = new Config( config, this.constructor.defaultConfig );\r\n\r\n\t\tconst availablePlugins = this.constructor.builtinPlugins;\r\n\r\n\t\tthis.config.define( 'plugins', availablePlugins );\r\n\r\n\t\t/**\r\n\t\t * The plugins loaded and in use by this context instance.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @type {module:core/plugincollection~PluginCollection}\r\n\t\t */\r\n\t\tthis.plugins = new PluginCollection( this, availablePlugins );\r\n\r\n\t\tconst languageConfig = this.config.get( 'language' ) || {};\r\n\r\n\t\t/**\r\n\t\t * @readonly\r\n\t\t * @type {module:utils/locale~Locale}\r\n\t\t */\r\n\t\tthis.locale = new Locale( {\r\n\t\t\tuiLanguage: typeof languageConfig === 'string' ? languageConfig : languageConfig.ui,\r\n\t\t\tcontentLanguage: this.config.get( 'language.content' )\r\n\t\t} );\r\n\r\n\t\t/**\r\n\t\t * Shorthand for {@link module:utils/locale~Locale#t}.\r\n\t\t *\r\n\t\t * @see module:utils/locale~Locale#t\r\n\t\t * @method #t\r\n\t\t */\r\n\t\tthis.t = this.locale.t;\r\n\r\n\t\t/**\r\n\t\t * A list of editors that this context instance is injected to.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @type {module:utils/collection~Collection}\r\n\t\t */\r\n\t\tthis.editors = new Collection();\r\n\r\n\t\t/**\r\n\t\t * Reference to the editor which created the context.\r\n\t\t * Null when the context was created outside of the editor.\r\n\t\t *\r\n\t\t * It is used to destroy the context when removing the editor that has created the context.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {module:core/editor/editor~Editor|null}\r\n\t\t */\r\n\t\tthis._contextOwner = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads and initializes plugins specified in the configuration.\r\n\t *\r\n\t * @returns {Promise.<module:core/plugin~LoadedPlugins>} A promise which resolves\r\n\t * once the initialization is completed, providing an array of loaded plugins.\r\n\t */\r\n\tinitPlugins() {\r\n\t\tconst plugins = this.config.get( 'plugins' ) || [];\r\n\r\n\t\tfor ( const Plugin of plugins ) {\r\n\t\t\tif ( typeof Plugin != 'function' ) {\r\n\t\t\t\t/**\r\n\t\t\t\t * Only a constructor function is allowed as a {@link module:core/contextplugin~ContextPlugin context plugin}.\r\n\t\t\t\t *\r\n\t\t\t\t * @error context-initplugins-constructor-only\r\n\t\t\t\t */\r\n\t\t\t\tthrow new CKEditorError(\r\n\t\t\t\t\t'context-initplugins-constructor-only: Only a constructor function is allowed as a context plugin.',\r\n\t\t\t\t\tnull,\r\n\t\t\t\t\t{ Plugin }\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tif ( Plugin.isContextPlugin !== true ) {\r\n\t\t\t\t/**\r\n\t\t\t\t * Only a plugin marked as a {@link module:core/contextplugin~ContextPlugin.isContextPlugin context plugin}\r\n\t\t\t\t * is allowed to be used with a context.\r\n\t\t\t\t *\r\n\t\t\t\t * @error context-initplugins-invalid-plugin\r\n\t\t\t\t */\r\n\t\t\t\tthrow new CKEditorError(\r\n\t\t\t\t\t'context-initplugins-invalid-plugin: Only a plugin marked as a context plugin is allowed to be used with a context.',\r\n\t\t\t\t\tnull,\r\n\t\t\t\t\t{ Plugin }\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this.plugins.init( plugins );\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys the context instance and all editors used with the context,\r\n\t * releasing all resources used by the context.\r\n\t *\r\n\t * @returns {Promise} A promise that resolves once the context instance is fully destroyed.\r\n\t */\r\n\tdestroy() {\r\n\t\treturn Promise.all( Array.from( this.editors, editor => editor.destroy() ) )\r\n\t\t\t.then( () => this.plugins.destroy() );\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a reference to the editor which is used with this context.\r\n\t *\r\n\t * When the given editor has created the context, the reference to this editor will be stored\r\n\t * as a {@link ~Context#_contextOwner}.\r\n\t *\r\n\t * This method should only be used by the editor.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:core/editor/editor~Editor} editor\r\n\t * @param {Boolean} isContextOwner Stores the given editor as a context owner.\r\n\t */\r\n\t_addEditor( editor, isContextOwner ) {\r\n\t\tif ( this._contextOwner ) {\r\n\t\t\t/**\r\n\t\t\t * Cannot add multiple editors to the context which is created by the editor.\r\n\t\t\t *\r\n\t\t\t * @error context-addEditor-private-context\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'context-addEditor-private-context: Cannot add multiple editors to the context which is created by the editor.'\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tthis.editors.add( editor );\r\n\r\n\t\tif ( isContextOwner ) {\r\n\t\t\tthis._contextOwner = editor;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a reference to the editor which was used with this context.\r\n\t * When the context was created by the given editor, the context will be destroyed.\r\n\t *\r\n\t * This method should only be used by the editor.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:core/editor/editor~Editor} editor\r\n\t * @return {Promise} A promise that resolves once the editor is removed from the context or when the context was destroyed.\r\n\t */\r\n\t_removeEditor( editor ) {\r\n\t\tif ( this.editors.has( editor ) ) {\r\n\t\t\tthis.editors.remove( editor );\r\n\t\t}\r\n\r\n\t\tif ( this._contextOwner === editor ) {\r\n\t\t\treturn this.destroy();\r\n\t\t}\r\n\r\n\t\treturn Promise.resolve();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the context configuration which will be copied to the editors created using this context.\r\n\t *\r\n\t * The configuration returned by this method has the plugins configuration removed &mdash; plugins are shared with all editors\r\n\t * through another mechanism.\r\n\t *\r\n\t * This method should only be used by the editor.\r\n\t *\r\n\t * @protected\r\n\t * @returns {Object} Configuration as a plain object.\r\n\t */\r\n\t_getEditorConfig() {\r\n\t\tconst result = {};\r\n\r\n\t\tfor ( const name of this.config.names() ) {\r\n\t\t\tif ( ![ 'plugins', 'removePlugins', 'extraPlugins' ].includes( name ) ) {\r\n\t\t\t\tresult[ name ] = this.config.get( name );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and initializes a new context instance.\r\n\t *\r\n\t *\t\tconst commonConfig = { ... }; // Configuration for all the plugins and editors.\r\n\t *\t\tconst editorPlugins = [ ... ]; // Regular plugins here.\r\n\t *\r\n\t *\t\tContext\r\n\t *\t\t\t.create( {\r\n\t *\t\t\t\t// Only context plugins here.\r\n\t *\t\t\t\tplugins: [ ... ],\r\n\t *\r\n\t *\t\t\t\t// Configure the language for all the editors (it cannot be overwritten).\r\n\t *\t\t\t\tlanguage: { ... },\r\n\t *\r\n\t *\t\t\t\t// Configuration for context plugins.\r\n\t *\t\t\t\tcomments: { ... },\r\n\t *\t\t\t\t...\r\n\t *\r\n\t *\t\t\t\t// Default configuration for editor plugins.\r\n\t *\t\t\t\ttoolbar: { ... },\r\n\t *\t\t\t\timage: { ... },\r\n\t *\t\t\t\t...\r\n\t *\t\t\t} )\r\n\t *\t\t\t.then( context => {\r\n\t *\t\t\t\tconst promises = [];\r\n\t *\r\n\t *\t\t\t\tpromises.push( ClassicEditor.create(\r\n\t *\t\t\t\t\tdocument.getElementById( 'editor1' ),\r\n\t *\t\t\t\t\t{\r\n\t *\t\t\t\t\t\teditorPlugins,\r\n\t *\t\t\t\t\t\tcontext\r\n\t *\t\t\t\t\t}\r\n\t *\t\t\t\t) );\r\n\t *\r\n\t *\t\t\t\tpromises.push( ClassicEditor.create(\r\n\t *\t\t\t\t\tdocument.getElementById( 'editor2' ),\r\n\t *\t\t\t\t\t{\r\n\t *\t\t\t\t\t\teditorPlugins,\r\n\t *\t\t\t\t\t\tcontext,\r\n\t *\t\t\t\t\t\ttoolbar: { ... } // You can overwrite the configuration of the context.\r\n\t *\t\t\t\t\t}\r\n\t *\t\t\t\t) );\r\n\t *\r\n\t *\t\t\t\treturn Promise.all( promises );\r\n\t *\t\t\t} );\r\n\t *\r\n\t * @param {Object} [config] The context configuration.\r\n\t * @returns {Promise} A promise resolved once the context is ready. The promise resolves with the created context instance.\r\n\t */\r\n\tstatic create( config ) {\r\n\t\treturn new Promise( resolve => {\r\n\t\t\tconst context = new this( config );\r\n\r\n\t\t\tresolve( context.initPlugins().then( () => context ) );\r\n\t\t} );\r\n\t}\r\n}\r\n\r\n/**\r\n * An array of plugins built into the `Context` class.\r\n *\r\n * It is used in CKEditor 5 builds featuring `Context` to provide a list of context plugins which are later automatically initialized\r\n * during the context initialization.\r\n *\r\n * They will be automatically initialized by `Context` unless `config.plugins` is passed.\r\n *\r\n *\t\t// Build some context plugins into the Context class first.\r\n *\t\tContext.builtinPlugins = [ FooPlugin, BarPlugin ];\r\n *\r\n *\t\t// Normally, you need to define config.plugins, but since Context.builtinPlugins was\r\n *\t\t// defined, now you can call create() without any configuration.\r\n *\t\tContext\r\n *\t\t\t.create()\r\n *\t\t\t.then( context => {\r\n *\t\t\t\tcontext.plugins.get( FooPlugin ); // -> An instance of the Foo plugin.\r\n *\t\t\t\tcontext.plugins.get( BarPlugin ); // -> An instance of the Bar plugin.\r\n *\t\t\t} );\r\n *\r\n * See also {@link module:core/context~Context.defaultConfig `Context.defaultConfig`}\r\n * and {@link module:core/editor/editor~Editor.builtinPlugins `Editor.builtinPlugins`}.\r\n *\r\n * @static\r\n * @member {Array.<Function>} module:core/context~Context.builtinPlugins\r\n */\r\n\r\n/**\r\n * The default configuration which is built into the `Context` class.\r\n *\r\n * It is used in CKEditor 5 builds featuring `Context` to provide the default configuration options which are later used during the\r\n * context initialization.\r\n *\r\n *\t\tContext.defaultConfig = {\r\n *\t\t\tfoo: 1,\r\n *\t\t\tbar: 2\r\n *\t\t};\r\n *\r\n *\t\tContext\r\n *\t\t\t.create()\r\n *\t\t\t.then( context => {\r\n *\t\t\t\tcontext.config.get( 'foo' ); // -> 1\r\n *\t\t\t\tcontext.config.get( 'bar' ); // -> 2\r\n *\t\t\t} );\r\n *\r\n *\t\t// The default options can be overridden by the configuration passed to create().\r\n *\t\tContext\r\n *\t\t\t.create( { bar: 3 } )\r\n *\t\t\t.then( context => {\r\n *\t\t\t\tcontext.config.get( 'foo' ); // -> 1\r\n *\t\t\t\tcontext.config.get( 'bar' ); // -> 3\r\n *\t\t\t} );\r\n *\r\n * See also {@link module:core/context~Context.builtinPlugins `Context.builtinPlugins`}\r\n * and {@link module:core/editor/editor~Editor.defaultConfig `Editor.defaultConfig`}.\r\n *\r\n * @static\r\n * @member {Object} module:core/context~Context.defaultConfig\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module core/contextplugin\r\n */\r\n\r\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\r\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\r\n\r\n/**\r\n * The base class for {@link module:core/context~Context} plugin classes.\r\n *\r\n * A context plugin can either be initialized for an {@link module:core/editor/editor~Editor editor} or for\r\n * a {@link module:core/context~Context context}. In other words, it can either\r\n * work within one editor instance or with one or more editor instances that use a single context.\r\n * It is the context plugin's role to implement handling for both modes.\r\n *\r\n * There are a few rules for interaction between the editor plugins and context plugins:\r\n *\r\n * * A context plugin can require another context plugin.\r\n * * An {@link module:core/plugin~Plugin editor plugin} can require a context plugin.\r\n * * A context plugin MUST NOT require an {@link module:core/plugin~Plugin editor plugin}.\r\n *\r\n * @implements module:core/plugin~PluginInterface\r\n * @mixes module:utils/observablemixin~ObservableMixin\r\n */\r\nexport default class ContextPlugin {\r\n\t/**\r\n\t * Creates a new plugin instance.\r\n\t *\r\n\t * @param {module:core/context~Context|module:core/editor/editor~Editor} context\r\n\t */\r\n\tconstructor( context ) {\r\n\t\t/**\r\n\t\t * The context instance.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @type {module:core/context~Context|module:core/editor/editor~Editor}\r\n\t\t */\r\n\t\tthis.context = context;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tdestroy() {\r\n\t\tthis.stopListening();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get isContextPlugin() {\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nmix( ContextPlugin, ObservableMixin );\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module core/editingkeystrokehandler\r\n */\r\n\r\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\r\n\r\n/**\r\n * A keystroke handler for editor editing. Its instance is available\r\n * in {@link module:core/editor/editor~Editor#keystrokes} so plugins\r\n * can register their keystrokes.\r\n *\r\n * E.g. an undo plugin would do this:\r\n *\r\n *\t\teditor.keystrokes.set( 'Ctrl+Z', 'undo' );\r\n *\t\teditor.keystrokes.set( 'Ctrl+Shift+Z', 'redo' );\r\n *\t\teditor.keystrokes.set( 'Ctrl+Y', 'redo' );\r\n *\r\n * @extends module:utils/keystrokehandler~KeystrokeHandler\r\n */\r\nexport default class EditingKeystrokeHandler extends KeystrokeHandler {\r\n\t/**\r\n\t * Creates an instance of the keystroke handler.\r\n\t *\r\n\t * @param {module:core/editor/editor~Editor} editor\r\n\t */\r\n\tconstructor( editor ) {\r\n\t\tsuper();\r\n\r\n\t\t/**\r\n\t\t * The editor instance.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:core/editor/editor~Editor}\r\n\t\t */\r\n\t\tthis.editor = editor;\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a handler for the specified keystroke.\r\n\t *\r\n\t * The handler can be specified as a command name or a callback.\r\n\t *\r\n\t * @param {String|Array.<String|Number>} keystroke Keystroke defined in a format accepted by\r\n\t * the {@link module:utils/keyboard~parseKeystroke} function.\r\n\t * @param {Function|String} callback If a string is passed, then the keystroke will\r\n\t * {@link module:core/editor/editor~Editor#execute execute a command}.\r\n\t * If a function, then it will be called with the\r\n\t * {@link module:engine/view/observer/keyobserver~KeyEventData key event data} object and\r\n\t * a `cancel()` helper to both `preventDefault()` and `stopPropagation()` of the event.\r\n\t * @param {Object} [options={}] Additional options.\r\n\t * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of the keystroke\r\n\t * callback. The higher the priority value the sooner the callback will be executed. Keystrokes having the same priority\r\n\t * are called in the order they were added.\r\n\t */\r\n\tset( keystroke, callback, options = {} ) {\r\n\t\tif ( typeof callback == 'string' ) {\r\n\t\t\tconst commandName = callback;\r\n\r\n\t\t\tcallback = ( evtData, cancel ) => {\r\n\t\t\t\tthis.editor.execute( commandName );\r\n\t\t\t\tcancel();\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tsuper.set( keystroke, callback, options );\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module core/editor/editor\r\n */\r\n\r\nimport Context from '../context';\r\nimport Config from '@ckeditor/ckeditor5-utils/src/config';\r\nimport EditingController from '@ckeditor/ckeditor5-engine/src/controller/editingcontroller';\r\nimport PluginCollection from '../plugincollection';\r\nimport CommandCollection from '../commandcollection';\r\nimport DataController from '@ckeditor/ckeditor5-engine/src/controller/datacontroller';\r\nimport Conversion from '@ckeditor/ckeditor5-engine/src/conversion/conversion';\r\nimport Model from '@ckeditor/ckeditor5-engine/src/model/model';\r\nimport EditingKeystrokeHandler from '../editingkeystrokehandler';\r\n\r\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\r\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\nimport { StylesProcessor } from '@ckeditor/ckeditor5-engine/src/view/stylesmap';\r\n\r\n/**\r\n * The class representing a basic, generic editor.\r\n *\r\n * Check out the list of its subclasses to learn about specific editor implementations.\r\n *\r\n * All editor implementations (like {@link module:editor-classic/classiceditor~ClassicEditor} or\r\n * {@link module:editor-inline/inlineeditor~InlineEditor}) should extend this class. They can add their\r\n * own methods and properties.\r\n *\r\n * When you are implementing a plugin, this editor represents the API\r\n * which your plugin can expect to get when using its {@link module:core/plugin~Plugin#editor} property.\r\n *\r\n * This API should be sufficient in order to implement the \"editing\" part of your feature\r\n * (schema definition, conversion, commands, keystrokes, etc.).\r\n * It does not define the editor UI, which is available only if\r\n * the specific editor implements also the {@link module:core/editor/editorwithui~EditorWithUI} interface\r\n * (as most editor implementations do).\r\n *\r\n * @abstract\r\n * @mixes module:utils/observablemixin~ObservableMixin\r\n */\r\nexport default class Editor {\r\n\t/**\r\n\t * Creates a new instance of the editor class.\r\n\t *\r\n\t * Usually, not to be used directly. See the static {@link module:core/editor/editor~Editor.create `create()`} method.\r\n\t *\r\n\t * @param {Object} [config={}] The editor configuration.\r\n\t */\r\n\tconstructor( config = {} ) {\r\n\t\t/**\r\n\t\t * The editor context.\r\n\t\t * When it is not provided through the configuration, the editor creates it.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @type {module:core/context~Context}\r\n\t\t */\r\n\t\tthis._context = config.context || new Context( { language: config.language } );\r\n\t\tthis._context._addEditor( this, !config.context );\r\n\r\n\t\t// Clone the plugins to make sure that the plugin array will not be shared\r\n\t\t// between editors and make the watchdog feature work correctly.\r\n\t\tconst availablePlugins = Array.from( this.constructor.builtinPlugins || [] );\r\n\r\n\t\t/**\r\n\t\t * Stores all configurations specific to this editor instance.\r\n\t\t *\r\n\t\t *\t\teditor.config.get( 'image.toolbar' );\r\n\t\t *\t\t// -> [ 'imageStyle:full', 'imageStyle:side', '|', 'imageTextAlternative' ]\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:utils/config~Config}\r\n\t\t */\r\n\t\tthis.config = new Config( config, this.constructor.defaultConfig );\r\n\t\tthis.config.define( 'plugins', availablePlugins );\r\n\t\tthis.config.define( this._context._getEditorConfig() );\r\n\r\n\t\t/**\r\n\t\t * The plugins loaded and in use by this editor instance.\r\n\t\t *\r\n\t\t *\t\teditor.plugins.get( 'Clipboard' ); // -> An instance of the clipboard plugin.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:core/plugincollection~PluginCollection}\r\n\t\t */\r\n\t\tthis.plugins = new PluginCollection( this, availablePlugins, this._context.plugins );\r\n\r\n\t\t/**\r\n\t\t * @readonly\r\n\t\t * @type {module:utils/locale~Locale}\r\n\t\t */\r\n\t\tthis.locale = this._context.locale;\r\n\r\n\t\t/**\r\n\t\t * Shorthand for {@link module:utils/locale~Locale#t}.\r\n\t\t *\r\n\t\t * @see module:utils/locale~Locale#t\r\n\t\t * @method #t\r\n\t\t */\r\n\t\tthis.t = this.locale.t;\r\n\r\n\t\t/**\r\n\t\t * Commands registered to the editor.\r\n\t\t *\r\n\t\t * Use the shorthand {@link #execute `editor.execute()`} method to execute commands:\r\n\t\t *\r\n\t\t *\t\t// Execute the bold command:\r\n\t\t *\t\teditor.execute( 'bold' );\r\n\t\t *\r\n\t\t *\t\t// Check the state of the bold command:\r\n\t\t *\t\teditor.commands.get( 'bold' ).value;\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:core/commandcollection~CommandCollection}\r\n\t\t */\r\n\t\tthis.commands = new CommandCollection();\r\n\r\n\t\t/**\r\n\t\t * Indicates the editor life-cycle state.\r\n\t\t *\r\n\t\t * The editor is in one of the following states:\r\n\t\t *\r\n\t\t * * `initializing` &ndash; During the editor initialization (before\r\n\t\t * {@link module:core/editor/editor~Editor.create `Editor.create()`}) finished its job.\r\n\t\t * * `ready` &ndash; After the promise returned by the {@link module:core/editor/editor~Editor.create `Editor.create()`}\r\n\t\t * method is resolved.\r\n\t\t * * `destroyed` &ndash; Once the {@link #destroy `editor.destroy()`} method was called.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @member {'initializing'|'ready'|'destroyed'} #state\r\n\t\t */\r\n\t\tthis.set( 'state', 'initializing' );\r\n\t\tthis.once( 'ready', () => ( this.state = 'ready' ), { priority: 'high' } );\r\n\t\tthis.once( 'destroy', () => ( this.state = 'destroyed' ), { priority: 'high' } );\r\n\r\n\t\t/**\r\n\t\t * Defines whether this editor is in read-only mode.\r\n\t\t *\r\n\t\t * In read-only mode the editor {@link #commands commands} are disabled so it is not possible\r\n\t\t * to modify the document by using them. Also, the editable element(s) become non-editable.\r\n\t\t *\r\n\t\t * In order to make the editor read-only, you can set this value directly:\r\n\t\t *\r\n\t\t *\t\teditor.isReadOnly = true;\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @member {Boolean} #isReadOnly\r\n\t\t */\r\n\t\tthis.set( 'isReadOnly', false );\r\n\r\n\t\t/**\r\n\t\t * The editor's model.\r\n\t\t *\r\n\t\t * The central point of the editor's abstract data model.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/model/model~Model}\r\n\t\t */\r\n\t\tthis.model = new Model();\r\n\r\n\t\tconst stylesProcessor = new StylesProcessor();\r\n\r\n\t\t/**\r\n\t\t * The {@link module:engine/controller/datacontroller~DataController data controller}.\r\n\t\t * Used e.g. for setting and retrieving the editor data.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/controller/datacontroller~DataController}\r\n\t\t */\r\n\t\tthis.data = new DataController( this.model, stylesProcessor );\r\n\r\n\t\t/**\r\n\t\t * The {@link module:engine/controller/editingcontroller~EditingController editing controller}.\r\n\t\t * Controls user input and rendering the content for editing.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/controller/editingcontroller~EditingController}\r\n\t\t */\r\n\t\tthis.editing = new EditingController( this.model, stylesProcessor );\r\n\t\tthis.editing.view.document.bind( 'isReadOnly' ).to( this );\r\n\r\n\t\t/**\r\n\t\t * Conversion manager through which you can register model-to-view and view-to-model converters.\r\n\t\t *\r\n\t\t * See the {@link module:engine/conversion/conversion~Conversion} documentation to learn how to add converters.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/conversion/conversion~Conversion}\r\n\t\t */\r\n\t\tthis.conversion = new Conversion( [ this.editing.downcastDispatcher, this.data.downcastDispatcher ], this.data.upcastDispatcher );\r\n\t\tthis.conversion.addAlias( 'dataDowncast', this.data.downcastDispatcher );\r\n\t\tthis.conversion.addAlias( 'editingDowncast', this.editing.downcastDispatcher );\r\n\r\n\t\t/**\r\n\t\t * An instance of the {@link module:core/editingkeystrokehandler~EditingKeystrokeHandler}.\r\n\t\t *\r\n\t\t * It allows setting simple keystrokes:\r\n\t\t *\r\n\t\t *\t\t// Execute the bold command on Ctrl+E:\r\n\t\t *\t\teditor.keystrokes.set( 'Ctrl+E', 'bold' );\r\n\t\t *\r\n\t\t *\t\t// Execute your own callback:\r\n\t\t *\t\teditor.keystrokes.set( 'Ctrl+E', ( data, cancel ) => {\r\n\t\t *\t\t\tconsole.log( data.keyCode );\r\n\t\t *\r\n\t\t *\t\t\t// Prevent the default (native) action and stop the underlying keydown event\r\n\t\t *\t\t\t// so no other editor feature will interfere.\r\n\t\t *\t\t\tcancel();\r\n\t\t *\t\t} );\r\n\t\t *\r\n\t\t * Note: Certain typing-oriented keystrokes (like <kbd>Backspace</kbd> or <kbd>Enter</kbd>) are handled\r\n\t\t * by a low-level mechanism and trying to listen to them via the keystroke handler will not work reliably.\r\n\t\t * To handle these specific keystrokes, see the events fired by the\r\n\t\t * {@link module:engine/view/document~Document editing view document} (`editor.editing.view.document`).\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:core/editingkeystrokehandler~EditingKeystrokeHandler}\r\n\t\t */\r\n\t\tthis.keystrokes = new EditingKeystrokeHandler( this );\r\n\t\tthis.keystrokes.listenTo( this.editing.view.document );\r\n\t}\r\n\r\n\t/**\r\n\t * Loads and initializes plugins specified in the configuration.\r\n\t *\r\n\t * @returns {Promise.<module:core/plugin~LoadedPlugins>} A promise which resolves\r\n\t * once the initialization is completed, providing an array of loaded plugins.\r\n\t */\r\n\tinitPlugins() {\r\n\t\tconst config = this.config;\r\n\t\tconst plugins = config.get( 'plugins' );\r\n\t\tconst removePlugins = config.get( 'removePlugins' ) || [];\r\n\t\tconst extraPlugins = config.get( 'extraPlugins' ) || [];\r\n\r\n\t\treturn this.plugins.init( plugins.concat( extraPlugins ), removePlugins );\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys the editor instance, releasing all resources used by it.\r\n\t *\r\n\t * **Note** The editor cannot be destroyed during the initialization phase so if it is called\r\n\t * while the editor {@link #state is being initialized}, it will wait for the editor initialization before destroying it.\r\n\t *\r\n\t * @fires destroy\r\n\t * @returns {Promise} A promise that resolves once the editor instance is fully destroyed.\r\n\t */\r\n\tdestroy() {\r\n\t\tlet readyPromise = Promise.resolve();\r\n\r\n\t\tif ( this.state == 'initializing' ) {\r\n\t\t\treadyPromise = new Promise( resolve => this.once( 'ready', resolve ) );\r\n\t\t}\r\n\r\n\t\treturn readyPromise\r\n\t\t\t.then( () => {\r\n\t\t\t\tthis.fire( 'destroy' );\r\n\t\t\t\tthis.stopListening();\r\n\t\t\t\tthis.commands.destroy();\r\n\t\t\t} )\r\n\t\t\t.then( () => this.plugins.destroy() )\r\n\t\t\t.then( () => {\r\n\t\t\t\tthis.model.destroy();\r\n\t\t\t\tthis.data.destroy();\r\n\t\t\t\tthis.editing.destroy();\r\n\t\t\t\tthis.keystrokes.destroy();\r\n\t\t\t} )\r\n\t\t\t// Remove the editor from the context.\r\n\t\t\t// When the context was created by this editor, the context will be destroyed.\r\n\t\t\t.then( () => this._context._removeEditor( this ) );\r\n\t}\r\n\r\n\t/**\r\n\t * Executes the specified command with given parameters.\r\n\t *\r\n\t * Shorthand for:\r\n\t *\r\n\t *\t\teditor.commands.get( commandName ).execute( ... );\r\n\t *\r\n\t * @param {String} commandName The name of the command to execute.\r\n\t * @param {*} [...commandParams] Command parameters.\r\n\t */\r\n\texecute( ...args ) {\r\n\t\ttry {\r\n\t\t\tthis.commands.execute( ...args );\r\n\t\t} catch ( err ) {\r\n\t\t\t// @if CK_DEBUG // throw err;\r\n\t\t\t/* istanbul ignore next */\r\n\t\t\tCKEditorError.rethrowUnexpectedError( err, this );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and initializes a new editor instance.\r\n\t *\r\n\t * This is an abstract method. Every editor type needs to implement its own initialization logic.\r\n\t *\r\n\t * See the `create()` methods of the existing editor types to learn how to use them:\r\n\t *\r\n\t * * {@link module:editor-classic/classiceditor~ClassicEditor.create `ClassicEditor.create()`}\r\n\t * * {@link module:editor-balloon/ballooneditor~BalloonEditor.create `BalloonEditor.create()`}\r\n\t * * {@link module:editor-decoupled/decouplededitor~DecoupledEditor.create `DecoupledEditor.create()`}\r\n\t * * {@link module:editor-inline/inlineeditor~InlineEditor.create `InlineEditor.create()`}\r\n\t *\r\n\t * @abstract\r\n\t * @method module:core/editor/editor~Editor.create\r\n\t */\r\n}\r\n\r\nmix( Editor, ObservableMixin );\r\n\r\n/**\r\n * Fired when the {@link module:engine/controller/datacontroller~DataController#event:ready data} and all additional\r\n * editor components are ready.\r\n *\r\n * Note: This event is most useful for plugin developers. When integrating the editor with your website or\r\n * application, you do not have to listen to `editor#ready` because when the promise returned by the static\r\n * {@link module:core/editor/editor~Editor.create `Editor.create()`} event is resolved, the editor is already ready.\r\n * In fact, since the first moment when the editor instance is available to you is inside `then()`'s callback,\r\n * you cannot even add a listener to the `editor#ready` event.\r\n *\r\n * See also the {@link #state `editor.state`} property.\r\n *\r\n * @event ready\r\n */\r\n\r\n/**\r\n * Fired when this editor instance is destroyed. The editor at this point is not usable and this event should be used to\r\n * perform the clean-up in any plugin.\r\n *\r\n *\r\n * See also the {@link #state `editor.state`} property.\r\n *\r\n * @event destroy\r\n */\r\n\r\n/**\r\n * This error is thrown when trying to pass a `<textarea>` element to a `create()` function of an editor class.\r\n *\r\n * The only editor type which can be initialized on `<textarea>` elements is {@glink builds/guides/overview#classic-editor classic editor}.\r\n * This editor hides the passed element and inserts its own UI next to it. Other types of editors reuse the passed element as their root\r\n * editable element and therefore `<textarea>` is not appropriate for them. Use a `<div>` or another text container instead:\r\n *\r\n *\t\t<div id=\"editor\">\r\n *\t\t\t<p>Initial content.</p>\r\n *\t\t</div>\r\n *\r\n * @error editor-wrong-element\r\n */\r\n\r\n/**\r\n * An array of plugins built into this editor class.\r\n *\r\n * It is used in CKEditor 5 builds to provide a list of plugins which are later automatically initialized\r\n * during the editor initialization.\r\n *\r\n * They will be automatically initialized by the editor, unless listed in `config.removePlugins` and\r\n * unless `config.plugins` is passed.\r\n *\r\n *\t\t// Build some plugins into the editor class first.\r\n *\t\tClassicEditor.builtinPlugins = [ FooPlugin, BarPlugin ];\r\n *\r\n *\t\t// Normally, you need to define config.plugins, but since ClassicEditor.builtinPlugins was\r\n *\t\t// defined, now you can call create() without any configuration.\r\n *\t\tClassicEditor\r\n *\t\t\t.create( sourceElement )\r\n *\t\t\t.then( editor => {\r\n *\t\t\t\teditor.plugins.get( FooPlugin ); // -> An instance of the Foo plugin.\r\n *\t\t\t\teditor.plugins.get( BarPlugin ); // -> An instance of the Bar plugin.\r\n *\t\t\t} );\r\n *\r\n *\t\tClassicEditor\r\n *\t\t\t.create( sourceElement, {\r\n *\t\t\t\t// Do not initialize these plugins (note: it is defined by a string):\r\n *\t\t\t\tremovePlugins: [ 'Foo' ]\r\n *\t\t\t} )\r\n *\t\t\t.then( editor => {\r\n *\t\t\t\teditor.plugins.get( FooPlugin ); // -> Undefined.\r\n *\t\t\t\teditor.config.get( BarPlugin ); // -> An instance of the Bar plugin.\r\n *\t\t\t} );\r\n *\r\n *\t\tClassicEditor\r\n *\t\t\t.create( sourceElement, {\r\n *\t\t\t\t// Load only this plugin. It can also be defined by a string if\r\n *\t\t\t\t// this plugin was built into the editor class.\r\n *\t\t\t\tplugins: [ FooPlugin ]\r\n *\t\t\t} )\r\n *\t\t\t.then( editor => {\r\n *\t\t\t\teditor.plugins.get( FooPlugin ); // -> An instance of the Foo plugin.\r\n *\t\t\t\teditor.config.get( BarPlugin ); // -> Undefined.\r\n *\t\t\t} );\r\n *\r\n * See also {@link module:core/editor/editor~Editor.defaultConfig}.\r\n *\r\n * @static\r\n * @member {Array.<Function>} module:core/editor/editor~Editor.builtinPlugins\r\n */\r\n\r\n/**\r\n * The default configuration which is built into the editor class.\r\n *\r\n * It is used in CKEditor 5 builds to provide the default configuration options which are later used during the editor initialization.\r\n *\r\n *\t\tClassicEditor.defaultConfig = {\r\n *\t\t\tfoo: 1,\r\n *\t\t\tbar: 2\r\n *\t\t};\r\n *\r\n *\t\tClassicEditor\r\n *\t\t\t.create( sourceElement )\r\n *\t\t\t.then( editor => {\r\n *\t\t\t\teditor.config.get( 'foo' ); // -> 1\r\n *\t\t\t\teditor.config.get( 'bar' ); // -> 2\r\n *\t\t\t} );\r\n *\r\n *\t\t// The default options can be overridden by the configuration passed to create().\r\n *\t\tClassicEditor\r\n *\t\t\t.create( sourceElement, { bar: 3 } )\r\n *\t\t\t.then( editor => {\r\n *\t\t\t\teditor.config.get( 'foo' ); // -> 1\r\n *\t\t\t\teditor.config.get( 'bar' ); // -> 3\r\n *\t\t\t} );\r\n *\r\n * See also {@link module:core/editor/editor~Editor.builtinPlugins}.\r\n *\r\n * @static\r\n * @member {Object} module:core/editor/editor~Editor.defaultConfig\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module core/editor/editorui\r\n */\r\n\r\n/* globals console */\r\n\r\nimport ComponentFactory from '@ckeditor/ckeditor5-ui/src/componentfactory';\r\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\r\n\r\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\r\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\r\n\r\n/**\r\n * A class providing the minimal interface that is required to successfully bootstrap any editor UI.\r\n *\r\n * @mixes module:utils/emittermixin~EmitterMixin\r\n */\r\nexport default class EditorUI {\r\n\t/**\r\n\t * Creates an instance of the editor UI class.\r\n\t *\r\n\t * @param {module:core/editor/editor~Editor} editor The editor instance.\r\n\t */\r\n\tconstructor( editor ) {\r\n\t\t/**\r\n\t\t * The editor that the UI belongs to.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:core/editor/editor~Editor} #editor\r\n\t\t */\r\n\t\tthis.editor = editor;\r\n\r\n\t\t/**\r\n\t\t * An instance of the {@link module:ui/componentfactory~ComponentFactory}, a registry used by plugins\r\n\t\t * to register factories of specific UI components.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:ui/componentfactory~ComponentFactory} #componentFactory\r\n\t\t */\r\n\t\tthis.componentFactory = new ComponentFactory( editor );\r\n\r\n\t\t/**\r\n\t\t * Stores the information about the editor UI focus and propagates it so various plugins and components\r\n\t\t * are unified as a focus group.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:utils/focustracker~FocusTracker} #focusTracker\r\n\t\t */\r\n\t\tthis.focusTracker = new FocusTracker();\r\n\r\n\t\t/**\r\n\t\t * Stores all editable elements used by the editor instance.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Map.<String,HTMLElement>}\r\n\t\t */\r\n\t\tthis._editableElementsMap = new Map();\r\n\r\n\t\t// Informs UI components that should be refreshed after layout change.\r\n\t\tthis.listenTo( editor.editing.view.document, 'layoutChanged', () => this.update() );\r\n\t}\r\n\r\n\t/**\r\n\t * The main (outermost) DOM element of the editor UI.\r\n\t *\r\n\t * For example, in {@link module:editor-classic/classiceditor~ClassicEditor} it is a `<div>` which\r\n\t * wraps the editable element and the toolbar. In {@link module:editor-inline/inlineeditor~InlineEditor}\r\n\t * it is the editable element itself (as there is no other wrapper). However, in\r\n\t * {@link module:editor-decoupled/decouplededitor~DecoupledEditor} it is set to `null` because this editor does not\r\n\t * come with a single \"main\" HTML element (its editable element and toolbar are separate).\r\n\t *\r\n\t * This property can be understood as a shorthand for retrieving the element that a specific editor integration\r\n\t * considers to be its main DOM element.\r\n\t *\r\n\t * @readonly\r\n\t * @member {HTMLElement|null} #element\r\n\t */\r\n\tget element() {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Fires the {@link module:core/editor/editorui~EditorUI#event:update `update`} event.\r\n\t *\r\n\t * This method should be called when the editor UI (e.g. positions of its balloons) needs to be updated due to\r\n\t * some environmental change which CKEditor 5 is not aware of (e.g. resize of a container in which it is used).\r\n\t */\r\n\tupdate() {\r\n\t\tthis.fire( 'update' );\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys the UI.\r\n\t */\r\n\tdestroy() {\r\n\t\tthis.stopListening();\r\n\r\n\t\tthis.focusTracker.destroy();\r\n\r\n\t\t// Clean–up the references to the CKEditor instance stored in the native editable DOM elements.\r\n\t\tfor ( const domElement of this._editableElementsMap.values() ) {\r\n\t\t\tdomElement.ckeditorInstance = null;\r\n\t\t}\r\n\r\n\t\tthis._editableElementsMap = new Map();\r\n\t}\r\n\r\n\t/**\r\n\t * Store the native DOM editable element used by the editor under\r\n\t * a unique name.\r\n\t *\r\n\t * @param {String} rootName The unique name of the editable element.\r\n\t * @param {HTMLElement} domElement The native DOM editable element.\r\n\t */\r\n\tsetEditableElement( rootName, domElement ) {\r\n\t\tthis._editableElementsMap.set( rootName, domElement );\r\n\r\n\t\t// Put a reference to the CKEditor instance in the editable native DOM element.\r\n\t\t// It helps 3rd–party software (browser extensions, other libraries) access and recognize\r\n\t\t// CKEditor 5 instances (editing roots) and use their API (there is no global editor\r\n\t\t// instance registry).\r\n\t\tif ( !domElement.ckeditorInstance ) {\r\n\t\t\tdomElement.ckeditorInstance = this.editor;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the editable editor element with the given name or null if editable does not exist.\r\n\t *\r\n\t * @param {String} [rootName=main] The editable name.\r\n\t * @returns {HTMLElement|undefined}\r\n\t */\r\n\tgetEditableElement( rootName = 'main' ) {\r\n\t\treturn this._editableElementsMap.get( rootName );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns array of names of all editor editable elements.\r\n\t *\r\n\t * @returns {Iterable.<String>}\r\n\t */\r\n\tgetEditableElementsNames() {\r\n\t\treturn this._editableElementsMap.keys();\r\n\t}\r\n\r\n\t/**\r\n\t * Stores all editable elements used by the editor instance.\r\n\t *\r\n\t * @protected\r\n\t * @deprecated\r\n\t * @member {Map.<String,HTMLElement>}\r\n\t */\r\n\tget _editableElements() {\r\n\t\t/**\r\n\t\t * The {@link module:core/editor/editorui~EditorUI#_editableElements `EditorUI#_editableElements`} property has been\r\n\t\t * deprecated and will be removed in the near future. Please use {@link #setEditableElement `setEditableElement()`} and\r\n\t\t * {@link #getEditableElement `getEditableElement()`} methods instead.\r\n\t\t *\r\n\t\t * @error editor-ui-deprecated-editable-elements\r\n\t\t * @param {module:core/editor/editorui~EditorUI} editorUI Editor UI instance the deprecated property belongs to.\r\n\t\t */\r\n\t\tconsole.warn(\r\n\t\t\t'editor-ui-deprecated-editable-elements: ' +\r\n\t\t\t'The EditorUI#_editableElements property has been deprecated and will be removed in the near future.',\r\n\t\t\t{ editorUI: this } );\r\n\r\n\t\treturn this._editableElementsMap;\r\n\t}\r\n\r\n\t/**\r\n\t * Fired when the editor UI is ready.\r\n\t *\r\n\t * Fired before {@link module:engine/controller/datacontroller~DataController#event:ready}.\r\n\t *\r\n\t * @event ready\r\n\t */\r\n\r\n\t/**\r\n\t * Fired whenever the UI (all related components) should be refreshed.\r\n\t *\r\n\t * **Note:**: The event is fired after each {@link module:engine/view/document~Document#event:layoutChanged}.\r\n\t * It can also be fired manually via the {@link module:core/editor/editorui~EditorUI#update} method.\r\n\t *\r\n\t * @event update\r\n\t */\r\n}\r\n\r\nmix( EditorUI, EmitterMixin );\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\nimport { isFunction } from 'lodash-es';\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\n\r\n/**\r\n * @module core/editor/utils/attachtoform\r\n */\r\n\r\n/**\r\n * Checks if the editor is initialized on a `<textarea>` element that belongs to a form. If yes, it updates the editor's element\r\n * content before submitting the form.\r\n *\r\n * This helper requires the {@link module:core/editor/utils/elementapimixin~ElementApi ElementApi interface}.\r\n *\r\n * @param {module:core/editor/editor~Editor} editor Editor instance.\r\n */\r\nexport default function attachToForm( editor ) {\r\n\tif ( !isFunction( editor.updateSourceElement ) ) {\r\n\t\t/**\r\n\t\t * The editor passed to `attachToForm()` must implement the\r\n\t\t * {@link module:core/editor/utils/elementapimixin~ElementApi} interface.\r\n\t\t *\r\n\t\t * @error attachtoform-missing-elementapi-interface\r\n\t\t */\r\n\t\tthrow new CKEditorError(\r\n\t\t\t'attachtoform-missing-elementapi-interface: Editor passed to attachToForm() must implement ElementApi.',\r\n\t\t\teditor\r\n\t\t);\r\n\t}\r\n\r\n\tconst sourceElement = editor.sourceElement;\r\n\r\n\t// Only when replacing a textarea which is inside of a form element.\r\n\tif ( sourceElement && sourceElement.tagName.toLowerCase() === 'textarea' && sourceElement.form ) {\r\n\t\tlet originalSubmit;\r\n\t\tconst form = sourceElement.form;\r\n\t\tconst onSubmit = () => editor.updateSourceElement();\r\n\r\n\t\t// Replace the original form#submit() to call a custom submit function first.\r\n\t\t// Check if #submit is a function because the form might have an input named \"submit\".\r\n\t\tif ( isFunction( form.submit ) ) {\r\n\t\t\toriginalSubmit = form.submit;\r\n\r\n\t\t\tform.submit = () => {\r\n\t\t\t\tonSubmit();\r\n\t\t\t\toriginalSubmit.apply( form );\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// Update the replaced textarea with data before each form#submit event.\r\n\t\tform.addEventListener( 'submit', onSubmit );\r\n\r\n\t\t// Remove the submit listener and revert the original submit method on\r\n\t\t// editor#destroy.\r\n\t\teditor.on( 'destroy', () => {\r\n\t\t\tform.removeEventListener( 'submit', onSubmit );\r\n\r\n\t\t\tif ( originalSubmit ) {\r\n\t\t\t\tform.submit = originalSubmit;\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module core/editor/utils/dataapimixin\r\n */\r\n\r\n/**\r\n * Implementation of the {@link module:core/editor/utils/dataapimixin~DataApi}.\r\n *\r\n * @mixin DataApiMixin\r\n * @implements module:core/editor/utils/dataapimixin~DataApi\r\n */\r\nconst DataApiMixin = {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tsetData( data ) {\r\n\t\tthis.data.set( data );\r\n\t},\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tgetData( options ) {\r\n\t\treturn this.data.get( options );\r\n\t}\r\n};\r\n\r\nexport default DataApiMixin;\r\n\r\n/**\r\n * Interface defining editor methods for setting and getting data to and from the editor's main root element\r\n * using the {@link module:core/editor/editor~Editor#data data pipeline}.\r\n *\r\n * This interface is not a part of the {@link module:core/editor/editor~Editor} class because one may want to implement\r\n * an editor with multiple root elements, in which case the methods for setting and getting data will need to be implemented\r\n * differently.\r\n *\r\n * @interface DataApi\r\n */\r\n\r\n/**\r\n * Sets the data in the editor.\r\n *\r\n *\t\teditor.setData( '<p>This is editor!</p>' );\r\n *\r\n * By default the editor accepts HTML. This can be controlled by injecting a different data processor.\r\n * See the {@glink features/markdown Markdown output} guide for more details.\r\n *\r\n * Note: Not only is the format of the data configurable, but the type of the `setData()`'s parameter does not\r\n * have to be a string either. You can e.g. accept an object or a DOM `DocumentFragment` if you consider this\r\n * the right format for you.\r\n *\r\n * @method #setData\r\n * @param {String} data Input data.\r\n */\r\n\r\n/**\r\n * Gets the data from the editor.\r\n *\r\n *\t\teditor.getData(); // -> '<p>This is editor!</p>'\r\n *\r\n * By default the editor outputs HTML. This can be controlled by injecting a different data processor.\r\n * See the {@glink features/markdown Markdown output} guide for more details.\r\n *\r\n * Note: Not only is the format of the data configurable, but the type of the `getData()`'s return value does not\r\n * have to be a string either. You can e.g. return an object or a DOM `DocumentFragment` if you consider this\r\n * the right format for you.\r\n *\r\n * @method #getData\r\n * @param {Object} [options]\r\n * @param {String} [options.rootName='main'] Root name.\r\n * @param {String} [options.trim='empty'] Whether returned data should be trimmed. This option is set to `'empty'` by default,\r\n * which means that whenever editor content is considered empty, an empty string is returned. To turn off trimming\r\n * use `'none'`. In such cases exact content will be returned (for example `'<p>&nbsp;</p>'` for an empty editor).\r\n * @returns {String} Output data.\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\nimport setDataInElement from '@ckeditor/ckeditor5-utils/src/dom/setdatainelement';\r\n\r\n/**\r\n * @module core/editor/utils/elementapimixin\r\n */\r\n\r\n/**\r\n * Implementation of the {@link module:core/editor/utils/elementapimixin~ElementApi}.\r\n *\r\n * @mixin ElementApiMixin\r\n * @implements module:core/editor/utils/elementapimixin~ElementApi\r\n */\r\nconst ElementApiMixin = {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tupdateSourceElement() {\r\n\t\tif ( !this.sourceElement ) {\r\n\t\t\t/**\r\n\t\t\t * Cannot update the source element of a detached editor.\r\n\t\t\t *\r\n\t\t\t * The {@link ~ElementApi#updateSourceElement `updateSourceElement()`} method cannot be called if you did not\r\n\t\t\t * pass an element to `Editor.create()`.\r\n\t\t\t *\r\n\t\t\t * @error editor-missing-sourceelement\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'editor-missing-sourceelement: Cannot update the source element of a detached editor.',\r\n\t\t\t\tthis\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tsetDataInElement( this.sourceElement, this.data.get() );\r\n\t}\r\n};\r\n\r\nexport default ElementApiMixin;\r\n\r\n/**\r\n * Interface describing an editor that replaced a DOM element (was \"initialized on an element\").\r\n *\r\n * Such an editor should provide a method to\r\n * {@link module:core/editor/utils/elementapimixin~ElementApi#updateSourceElement update the replaced element with the current data}.\r\n *\r\n * @interface ElementApi\r\n */\r\n\r\n/**\r\n * The element on which the editor has been initialized.\r\n *\r\n * @readonly\r\n * @member {HTMLElement} #sourceElement\r\n */\r\n\r\n/**\r\n * Updates the {@link #sourceElement editor source element}'s content with the data.\r\n *\r\n * @method #updateSourceElement\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\n\r\n/**\r\n * @module core/editor/utils/securesourceelement\r\n */\r\n\r\n/**\r\n * Marks the source element on which the editor was initialized. This prevents other editor instances from using this element.\r\n *\r\n * Running multiple editor instances on the same source element causes various issues and it is\r\n * crucial this helper is called as soon as the source element is known to prevent collisions.\r\n *\r\n * @param {module:core/editor/editor~Editor} editor Editor instance.\r\n */\r\nexport default function secureSourceElement( editor ) {\r\n\tconst sourceElement = editor.sourceElement;\r\n\r\n\t// If the editor was initialized without specifying an element, we don't need to secure anything.\r\n\tif ( !sourceElement ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tif ( sourceElement.ckeditorInstance ) {\r\n\t\t/**\r\n\t\t * A DOM element used to create the editor (e.g.\r\n\t\t * {@link module:editor-inline/inlineeditor~InlineEditor.create `InlineEditor.create()`})\r\n\t\t * has already been used to create another editor instance. Make sure each editor is\r\n\t\t * created with an unique DOM element.\r\n\t\t *\r\n\t\t * @error editor-source-element-already-used\r\n\t\t * @param {HTMLElement} element DOM element that caused the collision.\r\n\t\t */\r\n\t\tthrow new CKEditorError(\r\n\t\t\t'editor-source-element-already-used: ' +\r\n\t\t\t'The DOM element cannot be used to create multiple editor instances.',\r\n\t\t\teditor\r\n\t\t);\r\n\t}\r\n\r\n\tsourceElement.ckeditorInstance = editor;\r\n\r\n\teditor.once( 'destroy', () => {\r\n\t\tdelete sourceElement.ckeditorInstance;\r\n\t} );\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module core/pendingactions\r\n */\r\n\r\nimport ContextPlugin from './contextplugin';\r\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\r\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\n\r\n/**\r\n * The list of pending editor actions.\r\n *\r\n * This plugin should be used to synchronise plugins that execute long-lasting actions\r\n * (e.g. file upload) with the editor integration. It gives the developer who integrates the editor\r\n * an easy way to check if there are any actions pending whenever such information is needed.\r\n * All plugins that register a pending action also provide a message about the action that is ongoing\r\n * which can be displayed to the user. This lets them decide if they want to interrupt the action or wait.\r\n *\r\n * Adding and updating a pending action:\r\n *\r\n * \t\tconst pendingActions = editor.plugins.get( 'PendingActions' );\r\n * \t\tconst action = pendingActions.add( 'Upload in progress: 0%.' );\r\n *\r\n *\t\t// You can update the message:\r\n * \t\taction.message = 'Upload in progress: 10%.';\r\n *\r\n * Removing a pending action:\r\n *\r\n * \t\tconst pendingActions = editor.plugins.get( 'PendingActions' );\r\n * \t\tconst action = pendingActions.add( 'Unsaved changes.' );\r\n *\r\n * \t\tpendingActions.remove( action );\r\n *\r\n * Getting pending actions:\r\n *\r\n * \t\tconst pendingActions = editor.plugins.get( 'PendingActions' );\r\n *\r\n * \t\tconst action1 = pendingActions.add( 'Action 1' );\r\n * \t\tconst action2 = pendingActions.add( 'Action 2' );\r\n *\r\n * \t\tpendingActions.first; // Returns action1\r\n * \t\tArray.from( pendingActions ); // Returns [ action1, action2 ]\r\n *\r\n * This plugin is used by features like {@link module:upload/filerepository~FileRepository} to register their ongoing actions\r\n * and by features like {@link module:autosave/autosave~Autosave} to detect whether there are any ongoing actions.\r\n * Read more about saving the data in the {@glink builds/guides/integration/saving-data Saving and getting data} guide.\r\n *\r\n * @extends module:core/contextplugin~ContextPlugin\r\n */\r\nexport default class PendingActions extends ContextPlugin {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get pluginName() {\r\n\t\treturn 'PendingActions';\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tinit() {\r\n\t\t/**\r\n\t\t * Defines whether there is any registered pending action.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @observable\r\n\t\t * @member {Boolean} #hasAny\r\n\t\t */\r\n\t\tthis.set( 'hasAny', false );\r\n\r\n\t\t/**\r\n\t\t * A list of pending actions.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {module:utils/collection~Collection}\r\n\t\t */\r\n\t\tthis._actions = new Collection( { idProperty: '_id' } );\r\n\t\tthis._actions.delegate( 'add', 'remove' ).to( this );\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an action to the list of pending actions.\r\n\t *\r\n\t * This method returns an action object with an observable message property.\r\n\t * The action object can be later used in the {@link #remove} method. It also allows you to change the message.\r\n\t *\r\n\t * @param {String} message The action message.\r\n\t * @returns {Object} An observable object that represents a pending action.\r\n\t */\r\n\tadd( message ) {\r\n\t\tif ( typeof message !== 'string' ) {\r\n\t\t\t/**\r\n\t\t\t * The message must be a string.\r\n\t\t\t *\r\n\t\t\t * @error pendingactions-add-invalid-message\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'pendingactions-add-invalid-message: The message must be a string.', this );\r\n\t\t}\r\n\r\n\t\tconst action = Object.create( ObservableMixin );\r\n\r\n\t\taction.set( 'message', message );\r\n\t\tthis._actions.add( action );\r\n\t\tthis.hasAny = true;\r\n\r\n\t\treturn action;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an action from the list of pending actions.\r\n\t *\r\n\t * @param {Object} action An action object.\r\n\t */\r\n\tremove( action ) {\r\n\t\tthis._actions.remove( action );\r\n\t\tthis.hasAny = !!this._actions.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the first action from the list or null when list is empty\r\n\t *\r\n\t * returns {Object|null} The pending action object.\r\n\t */\r\n\tget first() {\r\n\t\treturn this._actions.get( 0 );\r\n\t}\r\n\r\n\t/**\r\n\t * Iterable interface.\r\n\t *\r\n\t * @returns {Iterable.<*>}\r\n\t */\r\n\t[ Symbol.iterator ]() {\r\n\t\treturn this._actions[ Symbol.iterator ]();\r\n\t}\r\n\r\n\t/**\r\n\t * Fired when an action is added to the list.\r\n\t *\r\n\t * @event add\r\n\t * @param {Object} action The added action.\r\n\t */\r\n\r\n\t/**\r\n\t * Fired when an action is removed from the list.\r\n\t *\r\n\t * @event remove\r\n\t * @param {Object} action The removed action.\r\n\t */\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module core/plugin\r\n */\r\n\r\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\r\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\r\n\r\n/**\r\n * The base class for CKEditor plugin classes.\r\n *\r\n * @implements module:core/plugin~PluginInterface\r\n * @mixes module:utils/observablemixin~ObservableMixin\r\n */\r\nexport default class Plugin {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tconstructor( editor ) {\r\n\t\t/**\r\n\t\t * The editor instance.\r\n\t\t *\r\n\t\t * Note that most editors implement the {@link module:core/editor/editorwithui~EditorWithUI} interface in addition\r\n\t\t * to the base {@link module:core/editor/editor~Editor} interface. However, editors with an external UI\r\n\t\t * (i.e. Bootstrap-based) or a headless editor may not implement the {@link module:core/editor/editorwithui~EditorWithUI}\r\n\t\t * interface.\r\n\t\t *\r\n\t\t * Because of above, to make plugins more universal, it is recommended to split features into:\r\n\t\t *  - The \"editing\" part that only uses the {@link module:core/editor/editor~Editor} interface.\r\n\t\t *  - The \"UI\" part that uses both the {@link module:core/editor/editor~Editor} interface and\r\n\t\t *  the {@link module:core/editor/editorwithui~EditorWithUI} interface.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:core/editor/editor~Editor} #editor\r\n\t\t */\r\n\t\tthis.editor = editor;\r\n\r\n\t\t/**\r\n\t\t * Flag indicating whether a plugin is enabled or disabled.\r\n\t\t * A disabled plugin will not transform text.\r\n\t\t *\r\n\t\t * Plugin can be simply disabled like that:\r\n\t\t *\r\n\t\t *\t\t// Disable the plugin so that no toolbars are visible.\r\n\t\t *\t\teditor.plugins.get( 'TextTransformation' ).isEnabled = false;\r\n\t\t *\r\n\t\t * You can also use {@link #forceDisabled} method.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @readonly\r\n\t\t * @member {Boolean} #isEnabled\r\n\t\t */\r\n\t\tthis.set( 'isEnabled', true );\r\n\r\n\t\t/**\r\n\t\t * Holds identifiers for {@link #forceDisabled} mechanism.\r\n\t\t *\r\n\t\t * @type {Set.<String>}\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis._disableStack = new Set();\r\n\t}\r\n\r\n\t/**\r\n\t * Disables the plugin.\r\n\t *\r\n\t * Plugin may be disabled by multiple features or algorithms (at once). When disabling a plugin, unique id should be passed\r\n\t * (e.g. feature name). The same identifier should be used when {@link #clearForceDisabled enabling back} the plugin.\r\n\t * The plugin becomes enabled only after all features {@link #clearForceDisabled enabled it back}.\r\n\t *\r\n\t * Disabling and enabling a plugin:\r\n\t *\r\n\t *\t\tplugin.isEnabled; // -> true\r\n\t *\t\tplugin.forceDisabled( 'MyFeature' );\r\n\t *\t\tplugin.isEnabled; // -> false\r\n\t *\t\tplugin.clearForceDisabled( 'MyFeature' );\r\n\t *\t\tplugin.isEnabled; // -> true\r\n\t *\r\n\t * Plugin disabled by multiple features:\r\n\t *\r\n\t *\t\tplugin.forceDisabled( 'MyFeature' );\r\n\t *\t\tplugin.forceDisabled( 'OtherFeature' );\r\n\t *\t\tplugin.clearForceDisabled( 'MyFeature' );\r\n\t *\t\tplugin.isEnabled; // -> false\r\n\t *\t\tplugin.clearForceDisabled( 'OtherFeature' );\r\n\t *\t\tplugin.isEnabled; // -> true\r\n\t *\r\n\t * Multiple disabling with the same identifier is redundant:\r\n\t *\r\n\t *\t\tplugin.forceDisabled( 'MyFeature' );\r\n\t *\t\tplugin.forceDisabled( 'MyFeature' );\r\n\t *\t\tplugin.clearForceDisabled( 'MyFeature' );\r\n\t *\t\tplugin.isEnabled; // -> true\r\n\t *\r\n\t * **Note:** some plugins or algorithms may have more complex logic when it comes to enabling or disabling certain plugins,\r\n\t * so the plugin might be still disabled after {@link #clearForceDisabled} was used.\r\n\t *\r\n\t * @param {String} id Unique identifier for disabling. Use the same id when {@link #clearForceDisabled enabling back} the plugin.\r\n\t */\r\n\tforceDisabled( id ) {\r\n\t\tthis._disableStack.add( id );\r\n\r\n\t\tif ( this._disableStack.size == 1 ) {\r\n\t\t\tthis.on( 'set:isEnabled', forceDisable, { priority: 'highest' } );\r\n\t\t\tthis.isEnabled = false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Clears forced disable previously set through {@link #forceDisabled}. See {@link #forceDisabled}.\r\n\t *\r\n\t * @param {String} id Unique identifier, equal to the one passed in {@link #forceDisabled} call.\r\n\t */\r\n\tclearForceDisabled( id ) {\r\n\t\tthis._disableStack.delete( id );\r\n\r\n\t\tif ( this._disableStack.size == 0 ) {\r\n\t\t\tthis.off( 'set:isEnabled', forceDisable );\r\n\t\t\tthis.isEnabled = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tdestroy() {\r\n\t\tthis.stopListening();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get isContextPlugin() {\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nmix( Plugin, ObservableMixin );\r\n\r\n/**\r\n * The base interface for CKEditor plugins.\r\n *\r\n * In its minimal form a plugin can be a simple function that accepts {@link module:core/editor/editor~Editor the editor}\r\n * as a parameter:\r\n *\r\n *\t\t// A simple plugin that enables a data processor.\r\n *\t\tfunction MyPlugin( editor ) {\r\n *\t\t\teditor.data.processor = new MyDataProcessor();\r\n *\t\t}\r\n *\r\n * In most cases however, you will want to inherit from the {@link module:core/plugin~Plugin} class which implements the\r\n * {@link module:utils/observablemixin~ObservableMixin} and is, therefore, more convenient:\r\n *\r\n *\t\tclass MyPlugin extends Plugin {\r\n *\t\t\tinit() {\r\n *\t\t\t\t// `listenTo()` and `editor` are available thanks to `Plugin`.\r\n *\t\t\t\t// By using `listenTo()` you will ensure that the listener is removed when\r\n *\t\t\t\t// the plugin is destroyed.\r\n *\t\t\t\tthis.listenTo( this.editor.data, 'ready', () => {\r\n *\t\t\t\t\t// Do something when the data is ready.\r\n *\t\t\t\t} );\r\n *\t\t\t}\r\n *\t\t}\r\n *\r\n * The plugin can also implement methods (e.g. {@link module:core/plugin~PluginInterface#init `init()`} or\r\n * {@link module:core/plugin~PluginInterface#destroy `destroy()`}) which, when present, will be used to properly\r\n * initialize and destroy the plugin.\r\n *\r\n * **Note:** When defined as a plain function, the plugin acts as a constructor and will be\r\n * called in parallel with other plugins' {@link module:core/plugin~PluginInterface#constructor constructors}.\r\n * This means the code of that plugin will be executed **before** {@link module:core/plugin~PluginInterface#init `init()`} and\r\n * {@link module:core/plugin~PluginInterface#afterInit `afterInit()`} methods of other plugins and, for instance,\r\n * you cannot use it to extend other plugins' {@glink framework/guides/architecture/editing-engine#schema schema}\r\n * rules as they are defined later on during the `init()` stage.\r\n *\r\n * @interface PluginInterface\r\n */\r\n\r\n/**\r\n * Creates a new plugin instance. This is the first step of the plugin initialization.\r\n * See also {@link #init} and {@link #afterInit}.\r\n *\r\n * A plugin is always instantiated after its {@link module:core/plugin~PluginInterface.requires dependencies} and the\r\n * {@link #init} and {@link #afterInit} methods are called in the same order.\r\n *\r\n * Usually, you will want to put your plugin's initialization code in the {@link #init} method.\r\n * The constructor can be understood as \"before init\" and used in special cases, just like\r\n * {@link #afterInit} serves the special \"after init\" scenarios (e.g.the code which depends on other\r\n * plugins, but which does not {@link module:core/plugin~PluginInterface.requires explicitly require} them).\r\n *\r\n * @method #constructor\r\n * @param {module:core/editor/editor~Editor} editor\r\n */\r\n\r\n/**\r\n * An array of plugins required by this plugin.\r\n *\r\n * To keep the plugin class definition tight it is recommended to define this property as a static getter:\r\n *\r\n *\t\timport Image from './image.js';\r\n *\r\n *\t\texport default class ImageCaption {\r\n *\t\t\tstatic get requires() {\r\n *\t\t\t\treturn [ Image ];\r\n *\t\t\t}\r\n *\t\t}\r\n *\r\n * @static\r\n * @readonly\r\n * @member {Array.<Function>|undefined} module:core/plugin~PluginInterface.requires\r\n */\r\n\r\n/**\r\n * An optional name of the plugin. If set, the plugin will be available in\r\n * {@link module:core/plugincollection~PluginCollection#get} by its\r\n * name and its constructor. If not, then only by its constructor.\r\n *\r\n * The name should reflect the constructor name.\r\n *\r\n * To keep the plugin class definition tight, it is recommended to define this property as a static getter:\r\n *\r\n *\t\texport default class ImageCaption {\r\n *\t\t\tstatic get pluginName() {\r\n *\t\t\t\treturn 'ImageCaption';\r\n *\t\t\t}\r\n *\t\t}\r\n *\r\n * Note: The native `Function.name` property could not be used to keep the plugin name because\r\n * it will be mangled during code minification.\r\n *\r\n * Naming a plugin is necessary to enable removing it through the\r\n * {@link module:core/editor/editorconfig~EditorConfig#removePlugins `config.removePlugins`} option.\r\n *\r\n * @static\r\n * @readonly\r\n * @member {String|undefined} module:core/plugin~PluginInterface.pluginName\r\n */\r\n\r\n/**\r\n * The second stage (after plugin {@link #constructor}) of the plugin initialization.\r\n * Unlike the plugin constructor this method can be asynchronous.\r\n *\r\n * A plugin's `init()` method is called after its {@link module:core/plugin~PluginInterface.requires dependencies} are initialized,\r\n * so in the same order as the constructors of these plugins.\r\n *\r\n * **Note:** This method is optional. A plugin instance does not need to have it defined.\r\n *\r\n * @method #init\r\n * @returns {null|Promise}\r\n */\r\n\r\n/**\r\n * The third (and last) stage of the plugin initialization. See also {@link #constructor} and {@link #init}.\r\n *\r\n * **Note:** This method is optional. A plugin instance does not need to have it defined.\r\n *\r\n * @method #afterInit\r\n * @returns {null|Promise}\r\n */\r\n\r\n/**\r\n * Destroys the plugin.\r\n *\r\n * **Note:** This method is optional. A plugin instance does not need to have it defined.\r\n *\r\n * @method #destroy\r\n * @returns {null|Promise}\r\n */\r\n\r\n/**\r\n * A flag which defines if a plugin is allowed or not allowed to be used directly by a {@link module:core/context~Context}.\r\n *\r\n * @static\r\n * @readonly\r\n * @member {Boolean} module:core/plugin~PluginInterface.isContextPlugin\r\n */\r\n\r\n/**\r\n * An array of loaded plugins.\r\n *\r\n * @typedef {Array.<module:core/plugin~PluginInterface>} module:core/plugin~LoadedPlugins\r\n */\r\n\r\n// Helper function that forces plugin to be disabled.\r\nfunction forceDisable( evt ) {\r\n\tevt.return = false;\r\n\tevt.stop();\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module core/plugincollection\r\n */\r\n\r\n/* globals console */\r\n\r\nimport CKEditorError, { attachLinkToDocumentation } from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\n\r\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\r\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\r\n\r\n/**\r\n * Manages a list of CKEditor plugins, including loading, resolving dependencies and initialization.\r\n *\r\n * @mixes module:utils/emittermixin~EmitterMixin\r\n */\r\nexport default class PluginCollection {\r\n\t/**\r\n\t * Creates an instance of the plugin collection class.\r\n\t * Allows loading and initializing plugins and their dependencies.\r\n\t * Allows to provide a list of already loaded plugins. These plugins will not be destroyed along with this collection.\r\n\t *\r\n\t * @param {module:core/editor/editor~Editor|module:core/context~Context} context\r\n\t * @param {Array.<Function>} [availablePlugins] Plugins (constructors) which the collection will be able to use\r\n\t * when {@link module:core/plugincollection~PluginCollection#init} is used with plugin names (strings, instead of constructors).\r\n\t * Usually, the editor will pass its built-in plugins to the collection so they can later be\r\n\t * used in `config.plugins` or `config.removePlugins` by names.\r\n\t * @param {Iterable.<Array>} contextPlugins A list of already initialized plugins represented by a\r\n\t * `[ PluginConstructor, pluginInstance ]` pair.\r\n\t */\r\n\tconstructor( context, availablePlugins = [], contextPlugins = [] ) {\r\n\t\t/**\r\n\t\t * @protected\r\n\t\t * @type {module:core/editor/editor~Editor|module:core/context~Context}\r\n\t\t */\r\n\t\tthis._context = context;\r\n\r\n\t\t/**\r\n\t\t * @protected\r\n\t\t * @type {Map}\r\n\t\t */\r\n\t\tthis._plugins = new Map();\r\n\r\n\t\t/**\r\n\t\t * A map of plugin constructors that can be retrieved by their names.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @type {Map.<String|Function,Function>}\r\n\t\t */\r\n\t\tthis._availablePlugins = new Map();\r\n\r\n\t\tfor ( const PluginConstructor of availablePlugins ) {\r\n\t\t\tif ( PluginConstructor.pluginName ) {\r\n\t\t\t\tthis._availablePlugins.set( PluginConstructor.pluginName, PluginConstructor );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Map of {@link module:core/contextplugin~ContextPlugin context plugins} which can be retrieved by their constructors or instances.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @type {Map<Function,Function>}\r\n\t\t */\r\n\t\tthis._contextPlugins = new Map();\r\n\r\n\t\tfor ( const [ PluginConstructor, pluginInstance ] of contextPlugins ) {\r\n\t\t\tthis._contextPlugins.set( PluginConstructor, pluginInstance );\r\n\t\t\tthis._contextPlugins.set( pluginInstance, PluginConstructor );\r\n\r\n\t\t\t// To make it possible to require a plugin by its name.\r\n\t\t\tif ( PluginConstructor.pluginName ) {\r\n\t\t\t\tthis._availablePlugins.set( PluginConstructor.pluginName, PluginConstructor );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Iterable interface.\r\n\t *\r\n\t * Returns `[ PluginConstructor, pluginInstance ]` pairs.\r\n\t *\r\n\t * @returns {Iterable.<Array>}\r\n\t */\r\n\t* [ Symbol.iterator ]() {\r\n\t\tfor ( const entry of this._plugins ) {\r\n\t\t\tif ( typeof entry[ 0 ] == 'function' ) {\r\n\t\t\t\tyield entry;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the plugin instance by its constructor or name.\r\n\t *\r\n\t *\t\t// Check if 'Clipboard' plugin was loaded.\r\n\t *\t\tif ( editor.plugins.has( 'Clipboard' ) ) {\r\n\t *\t\t\t// Get clipboard plugin instance\r\n\t *\t\t\tconst clipboard = editor.plugins.get( 'Clipboard' );\r\n\t *\r\n\t *\t\t\tthis.listenTo( clipboard, 'inputTransformation', ( evt, data ) => {\r\n\t *\t\t\t\t// Do something on clipboard input.\r\n\t *\t\t\t} );\r\n\t *\t\t}\r\n\t *\r\n\t * **Note**: This method will throw error if plugin is not loaded. Use `{@link #has editor.plugins.has()}`\r\n\t * to check if plugin is available.\r\n\t *\r\n\t * @param {Function|String} key The plugin constructor or {@link module:core/plugin~PluginInterface.pluginName name}.\r\n\t * @returns {module:core/plugin~PluginInterface}\r\n\t */\r\n\tget( key ) {\r\n\t\tconst plugin = this._plugins.get( key );\r\n\r\n\t\tif ( !plugin ) {\r\n\t\t\t/**\r\n\t\t\t * The plugin is not loaded and could not be obtained.\r\n\t\t\t *\r\n\t\t\t * Plugin classes (constructors) need to be provided to the editor and must be loaded before they can be obtained from\r\n\t\t\t * the plugin collection.\r\n\t\t\t * This is usually done in CKEditor 5 builds by setting the {@link module:core/editor/editor~Editor.builtinPlugins}\r\n\t\t\t * property.\r\n\t\t\t *\r\n\t\t\t * **Note**: You can use `{@link module:core/plugincollection~PluginCollection#has editor.plugins.has()}`\r\n\t\t\t * to check if plugin was loaded.\r\n\t\t\t *\r\n\t\t\t * @error plugincollection-plugin-not-loaded\r\n\t\t\t * @param {String} plugin The name of the plugin which is not loaded.\r\n\t\t\t */\r\n\t\t\tconst errorMsg = 'plugincollection-plugin-not-loaded: The requested plugin is not loaded.';\r\n\r\n\t\t\tlet pluginName = key;\r\n\r\n\t\t\tif ( typeof key == 'function' ) {\r\n\t\t\t\tpluginName = key.pluginName || key.name;\r\n\t\t\t}\r\n\r\n\t\t\tthrow new CKEditorError( errorMsg, this._context, { plugin: pluginName } );\r\n\t\t}\r\n\r\n\t\treturn plugin;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if a plugin is loaded.\r\n\t *\r\n\t *\t\t// Check if the 'Clipboard' plugin was loaded.\r\n\t *\t\tif ( editor.plugins.has( 'Clipboard' ) ) {\r\n\t *\t\t\t// Now use the clipboard plugin instance:\r\n\t *\t\t\tconst clipboard = editor.plugins.get( 'Clipboard' );\r\n\t *\r\n\t *\t\t\t// ...\r\n\t *\t\t}\r\n\t *\r\n\t * @param {Function|String} key The plugin constructor or {@link module:core/plugin~PluginInterface.pluginName name}.\r\n\t * @returns {Boolean}\r\n\t */\r\n\thas( key ) {\r\n\t\treturn this._plugins.has( key );\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes a set of plugins and adds them to the collection.\r\n\t *\r\n\t * @param {Array.<Function|String>} plugins An array of {@link module:core/plugin~PluginInterface plugin constructors}\r\n\t * or {@link module:core/plugin~PluginInterface.pluginName plugin names}. The second option (names) works only if\r\n\t * `availablePlugins` were passed to the {@link #constructor}.\r\n\t * @param {Array.<String|Function>} [removePlugins] Names of plugins or plugin constructors\r\n\t * that should not be loaded (despite being specified in the `plugins` array).\r\n\t * @returns {Promise.<module:core/plugin~LoadedPlugins>} A promise which gets resolved once all plugins are loaded\r\n\t * and available in the collection.\r\n\t */\r\n\tinit( plugins, removePlugins = [] ) {\r\n\t\tconst that = this;\r\n\t\tconst context = this._context;\r\n\t\tconst loading = new Set();\r\n\t\tconst loaded = [];\r\n\r\n\t\tconst pluginConstructors = mapToAvailableConstructors( plugins );\r\n\t\tconst removePluginConstructors = mapToAvailableConstructors( removePlugins );\r\n\t\tconst missingPlugins = getMissingPluginNames( plugins );\r\n\r\n\t\tif ( missingPlugins ) {\r\n\t\t\t/**\r\n\t\t\t * Some plugins are not available and could not be loaded.\r\n\t\t\t *\r\n\t\t\t * Plugin classes (constructors) need to be provided to the editor before they can be loaded by name.\r\n\t\t\t * This is usually done in CKEditor 5 builds by setting the {@link module:core/editor/editor~Editor.builtinPlugins}\r\n\t\t\t * property.\r\n\t\t\t *\r\n\t\t\t * **If you see this warning when using one of the {@glink builds/index CKEditor 5 Builds}**, it means\r\n\t\t\t * that you try to enable a plugin which was not included in that build. This may be due to a typo\r\n\t\t\t * in the plugin name or simply because that plugin is not a part of this build. In the latter scenario,\r\n\t\t\t * read more about {@glink builds/guides/development/custom-builds custom builds}.\r\n\t\t\t *\r\n\t\t\t * **If you see this warning when using one of the editor creators directly** (not a build), then it means\r\n\t\t\t * that you tried loading plugins by name. However, unlike CKEditor 4, CKEditor 5 does not implement a \"plugin loader\".\r\n\t\t\t * This means that CKEditor 5 does not know where to load the plugin modules from. Therefore, you need to\r\n\t\t\t * provide each plugin through reference (as a constructor function). Check out the examples in\r\n\t\t\t * {@glink builds/guides/integration/advanced-setup#scenario-2-building-from-source \"Building from source\"}.\r\n\t\t\t *\r\n\t\t\t * @error plugincollection-plugin-not-found\r\n\t\t\t * @param {Array.<String>} plugins The name of the plugins which could not be loaded.\r\n\t\t\t */\r\n\t\t\tconst errorMsg = 'plugincollection-plugin-not-found: Some plugins are not available and could not be loaded.';\r\n\r\n\t\t\t// Log the error so it's more visible on the console. Hopefully, for better DX.\r\n\t\t\tconsole.error( attachLinkToDocumentation( errorMsg ), { plugins: missingPlugins } );\r\n\r\n\t\t\treturn Promise.reject( new CKEditorError( errorMsg, context, { plugins: missingPlugins } ) );\r\n\t\t}\r\n\r\n\t\treturn Promise.all( pluginConstructors.map( loadPlugin ) )\r\n\t\t\t.then( () => initPlugins( loaded, 'init' ) )\r\n\t\t\t.then( () => initPlugins( loaded, 'afterInit' ) )\r\n\t\t\t.then( () => loaded );\r\n\r\n\t\tfunction loadPlugin( PluginConstructor ) {\r\n\t\t\tif ( removePluginConstructors.includes( PluginConstructor ) ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// The plugin is already loaded or being loaded - do nothing.\r\n\t\t\tif ( that._plugins.has( PluginConstructor ) || loading.has( PluginConstructor ) ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\treturn instantiatePlugin( PluginConstructor )\r\n\t\t\t\t.catch( err => {\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * It was not possible to load the plugin.\r\n\t\t\t\t\t *\r\n\t\t\t\t\t * This is a generic error logged to the console when a JavaSript error is thrown during the initialization\r\n\t\t\t\t\t * of one of the plugins.\r\n\t\t\t\t\t *\r\n\t\t\t\t\t * If you correctly handled the promise returned by the editor's `create()` method (like shown below),\r\n\t\t\t\t\t * you will find the original error logged to the console, too:\r\n\t\t\t\t\t *\r\n\t\t\t\t\t *\t\tClassicEditor.create( document.getElementById( 'editor' ) )\r\n\t\t\t\t\t *\t\t\t.then( editor => {\r\n\t\t\t\t\t *\t\t\t\t// ...\r\n\t\t\t\t\t * \t\t\t} )\r\n\t\t\t\t\t *\t\t\t.catch( error => {\r\n\t\t\t\t\t *\t\t\t\tconsole.error( error );\r\n\t\t\t\t\t *\t\t\t} );\r\n\t\t\t\t\t *\r\n\t\t\t\t\t * @error plugincollection-load\r\n\t\t\t\t\t * @param {String} plugin The name of the plugin that could not be loaded.\r\n\t\t\t\t\t */\r\n\t\t\t\t\tconsole.error( attachLinkToDocumentation(\r\n\t\t\t\t\t\t'plugincollection-load: It was not possible to load the plugin.'\r\n\t\t\t\t\t), { plugin: PluginConstructor } );\r\n\r\n\t\t\t\t\tthrow err;\r\n\t\t\t\t} );\r\n\t\t}\r\n\r\n\t\tfunction initPlugins( loadedPlugins, method ) {\r\n\t\t\treturn loadedPlugins.reduce( ( promise, plugin ) => {\r\n\t\t\t\tif ( !plugin[ method ] ) {\r\n\t\t\t\t\treturn promise;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( that._contextPlugins.has( plugin ) ) {\r\n\t\t\t\t\treturn promise;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn promise.then( plugin[ method ].bind( plugin ) );\r\n\t\t\t}, Promise.resolve() );\r\n\t\t}\r\n\r\n\t\tfunction instantiatePlugin( PluginConstructor ) {\r\n\t\t\treturn new Promise( resolve => {\r\n\t\t\t\tloading.add( PluginConstructor );\r\n\r\n\t\t\t\tif ( PluginConstructor.requires ) {\r\n\t\t\t\t\tPluginConstructor.requires.forEach( RequiredPluginConstructorOrName => {\r\n\t\t\t\t\t\tconst RequiredPluginConstructor = getPluginConstructor( RequiredPluginConstructorOrName );\r\n\r\n\t\t\t\t\t\tif ( PluginConstructor.isContextPlugin && !RequiredPluginConstructor.isContextPlugin ) {\r\n\t\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t\t * If a plugin is a context plugin, all plugins it requires should also be context plugins\r\n\t\t\t\t\t\t\t * instead of plugins. In other words, if one plugin can be used in the context,\r\n\t\t\t\t\t\t\t * all its requirements should also be ready to be used in the context. Note that the context\r\n\t\t\t\t\t\t\t * provides only a part of the API provided by the editor. If one plugin needs a full\r\n\t\t\t\t\t\t\t * editor API, all plugins which require it are considered as plugins that need a full\r\n\t\t\t\t\t\t\t * editor API.\r\n\t\t\t\t\t\t\t *\r\n\t\t\t\t\t\t\t * @error plugincollection-context-required\r\n\t\t\t\t\t\t\t * @param {String} plugin The name of the required plugin.\r\n\t\t\t\t\t\t\t * @param {String} requiredBy The name of the parent plugin.\r\n\t\t\t\t\t\t\t */\r\n\t\t\t\t\t\t\tthrow new CKEditorError(\r\n\t\t\t\t\t\t\t\t'plugincollection-context-required: Context plugin can not require plugin which is not a context plugin',\r\n\t\t\t\t\t\t\t\tnull,\r\n\t\t\t\t\t\t\t\t{ plugin: RequiredPluginConstructor.name, requiredBy: PluginConstructor.name }\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( removePlugins.includes( RequiredPluginConstructor ) ) {\r\n\t\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t\t * Cannot load a plugin because one of its dependencies is listed in the `removePlugins` option.\r\n\t\t\t\t\t\t\t *\r\n\t\t\t\t\t\t\t * @error plugincollection-required\r\n\t\t\t\t\t\t\t * @param {String} plugin The name of the required plugin.\r\n\t\t\t\t\t\t\t * @param {String} requiredBy The name of the parent plugin.\r\n\t\t\t\t\t\t\t */\r\n\t\t\t\t\t\t\tthrow new CKEditorError(\r\n\t\t\t\t\t\t\t\t'plugincollection-required: Cannot load a plugin because one of its dependencies is listed in' +\r\n\t\t\t\t\t\t\t\t'the `removePlugins` option.',\r\n\t\t\t\t\t\t\t\tcontext,\r\n\t\t\t\t\t\t\t\t{ plugin: RequiredPluginConstructor.name, requiredBy: PluginConstructor.name }\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tloadPlugin( RequiredPluginConstructor );\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst plugin = that._contextPlugins.get( PluginConstructor ) || new PluginConstructor( context );\r\n\t\t\t\tthat._add( PluginConstructor, plugin );\r\n\t\t\t\tloaded.push( plugin );\r\n\r\n\t\t\t\tresolve();\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tfunction getPluginConstructor( PluginConstructorOrName ) {\r\n\t\t\tif ( typeof PluginConstructorOrName == 'function' ) {\r\n\t\t\t\treturn PluginConstructorOrName;\r\n\t\t\t}\r\n\r\n\t\t\treturn that._availablePlugins.get( PluginConstructorOrName );\r\n\t\t}\r\n\r\n\t\tfunction getMissingPluginNames( plugins ) {\r\n\t\t\tconst missingPlugins = [];\r\n\r\n\t\t\tfor ( const pluginNameOrConstructor of plugins ) {\r\n\t\t\t\tif ( !getPluginConstructor( pluginNameOrConstructor ) ) {\r\n\t\t\t\t\tmissingPlugins.push( pluginNameOrConstructor );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn missingPlugins.length ? missingPlugins : null;\r\n\t\t}\r\n\r\n\t\tfunction mapToAvailableConstructors( plugins ) {\r\n\t\t\treturn plugins\r\n\t\t\t\t.map( pluginNameOrConstructor => getPluginConstructor( pluginNameOrConstructor ) )\r\n\t\t\t\t.filter( PluginConstructor => !!PluginConstructor );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys all loaded plugins.\r\n\t *\r\n\t * @returns {Promise}\r\n\t */\r\n\tdestroy() {\r\n\t\tconst promises = [];\r\n\r\n\t\tfor ( const [ , pluginInstance ] of this ) {\r\n\t\t\tif ( typeof pluginInstance.destroy == 'function' && !this._contextPlugins.has( pluginInstance ) ) {\r\n\t\t\t\tpromises.push( pluginInstance.destroy() );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn Promise.all( promises );\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the plugin to the collection. Exposed mainly for testing purposes.\r\n\t *\r\n\t * @protected\r\n\t * @param {Function} PluginConstructor The plugin constructor.\r\n\t * @param {module:core/plugin~PluginInterface} plugin The instance of the plugin.\r\n\t */\r\n\t_add( PluginConstructor, plugin ) {\r\n\t\tthis._plugins.set( PluginConstructor, plugin );\r\n\r\n\t\tconst pluginName = PluginConstructor.pluginName;\r\n\r\n\t\tif ( !pluginName ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( this._plugins.has( pluginName ) ) {\r\n\t\t\t/**\r\n\t\t\t * Two plugins with the same {@link module:core/plugin~PluginInterface.pluginName} were loaded.\r\n\t\t\t * This will lead to runtime conflicts between these plugins.\r\n\t\t\t *\r\n\t\t\t * In practice, this warning usually means that new plugins were added to an existing CKEditor 5 build.\r\n\t\t\t * Plugins should always be added to a source version of the editor (`@ckeditor/ckeditor5-editor-*`),\r\n\t\t\t * not to an editor imported from one of the `@ckeditor/ckeditor5-build-*` packages.\r\n\t\t\t *\r\n\t\t\t * Check your import paths and the list of plugins passed to\r\n\t\t\t * {@link module:core/editor/editor~Editor.create `Editor.create()`}\r\n\t\t\t * or specified in {@link module:core/editor/editor~Editor.builtinPlugins `Editor.builtinPlugins`}.\r\n\t\t\t *\r\n\t\t\t * The second option is that your `node_modules/` directory contains duplicated versions of the same\r\n\t\t\t * CKEditor 5 packages. Normally, on clean installations, npm deduplicates packages in `node_modules/`, so\r\n\t\t\t * it may be enough to call `rm -rf node_modules && npm i`. However, if you installed conflicting versions\r\n\t\t\t * of packages, their dependencies may need to be installed in more than one version which may lead to this\r\n\t\t\t * warning.\r\n\t\t\t *\r\n\t\t\t * Technically speaking, this error occurs because after adding a plugin to an existing editor build\r\n\t\t\t * dependencies of this plugin are being duplicated.\r\n\t\t\t * They are already built into that editor build and now get added for the second time as dependencies\r\n\t\t\t * of the plugin you are installing.\r\n\t\t\t *\r\n\t\t\t * Read more about {@glink builds/guides/integration/installing-plugins installing plugins}.\r\n\t\t\t *\r\n\t\t\t * @error plugincollection-plugin-name-conflict\r\n\t\t\t * @param {String} pluginName The duplicated plugin name.\r\n\t\t\t * @param {Function} plugin1 The first plugin constructor.\r\n\t\t\t * @param {Function} plugin2 The second plugin constructor.\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'plugincollection-plugin-name-conflict: Two plugins with the same name were loaded.',\r\n\t\t\t\tnull,\r\n\t\t\t\t{ pluginName, plugin1: this._plugins.get( pluginName ).constructor, plugin2: PluginConstructor }\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tthis._plugins.set( pluginName, plugin );\r\n\t}\r\n}\r\n\r\nmix( PluginCollection, EmitterMixin );\r\n","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M11.591 10.177l4.243 4.242a1 1 0 0 1-1.415 1.415l-4.242-4.243-4.243 4.243a1 1 0 0 1-1.414-1.415l4.243-4.242L4.52 5.934A1 1 0 0 1 5.934 4.52l4.243 4.243 4.242-4.243a1 1 0 1 1 1.415 1.414l-4.243 4.243z\\\"/></svg>\"","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M6.972 16.615a.997.997 0 0 1-.744-.292l-4.596-4.596a1 1 0 1 1 1.414-1.414l3.926 3.926 9.937-9.937a1 1 0 0 1 1.414 1.415L7.717 16.323a.997.997 0 0 1-.745.292z\\\"/></svg>\"","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M8.636 9.531l-2.758 3.94a.5.5 0 0 0 .122.696l3.224 2.284h1.314l2.636-3.736L8.636 9.53zm.288 8.451L5.14 15.396a2 2 0 0 1-.491-2.786l6.673-9.53a2 2 0 0 1 2.785-.49l3.742 2.62a2 2 0 0 1 .491 2.785l-7.269 10.053-2.147-.066z\\\"/><path d=\\\"M4 18h5.523v-1H4zm-2 0h1v-1H2z\\\"/></svg>\"","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M7.3 17.37l-.061.088a1.518 1.518 0 0 1-.934.535l-4.178.663-.806-4.153a1.495 1.495 0 0 1 .187-1.058l.056-.086L8.77 2.639c.958-1.351 2.803-1.076 4.296-.03 1.497 1.047 2.387 2.693 1.433 4.055L7.3 17.37zM9.14 4.728l-5.545 8.346 3.277 2.294 5.544-8.346L9.14 4.728zM6.07 16.512l-3.276-2.295.53 2.73 2.746-.435zM9.994 3.506L13.271 5.8c.316-.452-.16-1.333-1.065-1.966-.905-.634-1.895-.78-2.212-.328zM8 18.5L9.375 17H19v1.5H8z\\\"/></svg>\"","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle cx=\\\"9.5\\\" cy=\\\"4.5\\\" r=\\\"1.5\\\"/><circle cx=\\\"9.5\\\" cy=\\\"10.5\\\" r=\\\"1.5\\\"/><circle cx=\\\"9.5\\\" cy=\\\"16.5\\\" r=\\\"1.5\\\"/></svg>\"","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module editor-balloon/ballooneditor\r\n */\r\n\r\nimport Editor from '@ckeditor/ckeditor5-core/src/editor/editor';\r\nimport HtmlDataProcessor from '@ckeditor/ckeditor5-engine/src/dataprocessor/htmldataprocessor';\r\nimport BalloonToolbar from '@ckeditor/ckeditor5-ui/src/toolbar/balloon/balloontoolbar';\r\nimport BalloonEditorUI from './ballooneditorui';\r\nimport BalloonEditorUIView from './ballooneditoruiview';\r\nimport setDataInElement from '@ckeditor/ckeditor5-utils/src/dom/setdatainelement';\r\nimport getDataFromElement from '@ckeditor/ckeditor5-utils/src/dom/getdatafromelement';\r\nimport DataApiMixin from '@ckeditor/ckeditor5-core/src/editor/utils/dataapimixin';\r\nimport ElementApiMixin from '@ckeditor/ckeditor5-core/src/editor/utils/elementapimixin';\r\nimport attachToForm from '@ckeditor/ckeditor5-core/src/editor/utils/attachtoform';\r\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\r\nimport { isElement } from 'lodash-es';\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\nimport secureSourceElement from '@ckeditor/ckeditor5-core/src/editor/utils/securesourceelement';\r\n\r\n/**\r\n * The {@glink builds/guides/overview#balloon-editor balloon editor} implementation (Medium-like editor).\r\n * It uses an inline editable and a toolbar based on the {@link module:ui/toolbar/balloon/balloontoolbar~BalloonToolbar}.\r\n * See the {@glink examples/builds/balloon-editor demo}.\r\n *\r\n * In order to create a balloon editor instance, use the static\r\n * {@link module:editor-balloon/ballooneditor~BalloonEditor.create `BalloonEditor.create()`} method.\r\n *\r\n * # Balloon editor and balloon build\r\n *\r\n * The balloon editor can be used directly from source (if you installed the\r\n * [`@ckeditor/ckeditor5-editor-balloon`](https://www.npmjs.com/package/@ckeditor/ckeditor5-editor-balloon) package)\r\n * but it is also available in the {@glink builds/guides/overview#balloon-editor balloon build}.\r\n *\r\n * {@glink builds/guides/overview Builds} are ready-to-use editors with plugins bundled in. When using the editor from\r\n * source you need to take care of loading all plugins by yourself\r\n * (through the {@link module:core/editor/editorconfig~EditorConfig#plugins `config.plugins`} option).\r\n * Using the editor from source gives much better flexibility and allows easier customization.\r\n *\r\n * Read more about initializing the editor from source or as a build in\r\n * {@link module:editor-balloon/ballooneditor~BalloonEditor.create `BalloonEditor.create()`}.\r\n *\r\n * @mixes module:core/editor/utils/dataapimixin~DataApiMixin\r\n * @mixes module:core/editor/utils/elementapimixin~ElementApiMixin\r\n * @implements module:core/editor/editorwithui~EditorWithUI\r\n * @extends module:core/editor/editor~Editor\r\n */\r\nexport default class BalloonEditor extends Editor {\r\n\t/**\r\n\t * Creates an instance of the balloon editor.\r\n\t *\r\n\t * **Note:** do not use the constructor to create editor instances. Use the static\r\n\t * {@link module:editor-balloon/ballooneditor~BalloonEditor.create `BalloonEditor.create()`} method instead.\r\n\t *\r\n\t * @protected\r\n\t * @param {HTMLElement|String} sourceElementOrData The DOM element that will be the source for the created editor\r\n\t * (on which the editor will be initialized) or initial data for the editor. For more information see\r\n\t * {@link module:editor-balloon/ballooneditor~BalloonEditor.create `BalloonEditor.create()`}.\r\n\t * @param {module:core/editor/editorconfig~EditorConfig} config The editor configuration.\r\n\t */\r\n\tconstructor( sourceElementOrData, config ) {\r\n\t\tsuper( config );\r\n\r\n\t\tif ( isElement( sourceElementOrData ) ) {\r\n\t\t\tthis.sourceElement = sourceElementOrData;\r\n\t\t\tsecureSourceElement( this );\r\n\t\t}\r\n\r\n\t\tconst plugins = this.config.get( 'plugins' );\r\n\t\tplugins.push( BalloonToolbar );\r\n\r\n\t\tthis.config.set( 'plugins', plugins );\r\n\r\n\t\tthis.config.define( 'balloonToolbar', this.config.get( 'toolbar' ) );\r\n\r\n\t\tthis.data.processor = new HtmlDataProcessor( this.data.viewDocument );\r\n\r\n\t\tthis.model.document.createRoot();\r\n\r\n\t\tconst view = new BalloonEditorUIView( this.locale, this.editing.view, this.sourceElement );\r\n\t\tthis.ui = new BalloonEditorUI( this, view );\r\n\r\n\t\tattachToForm( this );\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys the editor instance, releasing all resources used by it.\r\n\t *\r\n\t * Updates the original editor element with the data.\r\n\t *\r\n\t * @returns {Promise}\r\n\t */\r\n\tdestroy() {\r\n\t\t// Cache the data, then destroy.\r\n\t\t// It's safe to assume that the model->view conversion will not work after super.destroy().\r\n\t\tconst data = this.getData();\r\n\r\n\t\tthis.ui.destroy();\r\n\r\n\t\treturn super.destroy()\r\n\t\t\t.then( () => {\r\n\t\t\t\tif ( this.sourceElement ) {\r\n\t\t\t\t\tsetDataInElement( this.sourceElement, data );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new balloon editor instance.\r\n\t *\r\n\t * There are three general ways how the editor can be initialized.\r\n\t *\r\n\t * # Using an existing DOM element (and loading data from it)\r\n\t *\r\n\t * You can initialize the editor using an existing DOM element:\r\n\t *\r\n\t *\t\tBalloonEditor\r\n\t *\t\t\t.create( document.querySelector( '#editor' ) )\r\n\t *\t\t\t.then( editor => {\r\n\t *\t\t\t\tconsole.log( 'Editor was initialized', editor );\r\n\t *\t\t\t} )\r\n\t *\t\t\t.catch( err => {\r\n\t *\t\t\t\tconsole.error( err.stack );\r\n\t *\t\t\t} );\r\n\t *\r\n\t * The element's content will be used as the editor data and the element will become the editable element.\r\n\t *\r\n\t * # Creating a detached editor\r\n\t *\r\n\t * Alternatively, you can initialize the editor by passing the initial data directly as a string.\r\n\t * In this case, the editor will render an element that must be inserted into the DOM for the editor to work properly:\r\n\t *\r\n\t *\t\tBalloonEditor\r\n\t *\t\t\t.create( '<p>Hello world!</p>' )\r\n\t *\t\t\t.then( editor => {\r\n\t *\t\t\t\tconsole.log( 'Editor was initialized', editor );\r\n\t *\r\n\t *\t\t\t\t// Initial data was provided so the editor UI element needs to be added manually to the DOM.\r\n\t *\t\t\t\tdocument.body.appendChild( editor.ui.element );\r\n\t *\t\t\t} )\r\n\t *\t\t\t.catch( err => {\r\n\t *\t\t\t\tconsole.error( err.stack );\r\n\t *\t\t\t} );\r\n\t *\r\n\t * This lets you dynamically append the editor to your web page whenever it is convenient for you. You may use this method if your\r\n\t * web page content is generated on the client side and the DOM structure is not ready at the moment when you initialize the editor.\r\n\t *\r\n\t * # Using an existing DOM element (and data provided in `config.initialData`)\r\n\t *\r\n\t * You can also mix these two ways by providing a DOM element to be used and passing the initial data through the configuration:\r\n\t *\r\n\t *\t\tBalloonEditor\r\n\t *\t\t\t.create( document.querySelector( '#editor' ), {\r\n\t *\t\t\t\tinitialData: '<h2>Initial data</h2><p>Foo bar.</p>'\r\n\t *\t\t\t} )\r\n\t *\t\t\t.then( editor => {\r\n\t *\t\t\t\tconsole.log( 'Editor was initialized', editor );\r\n\t *\t\t\t} )\r\n\t *\t\t\t.catch( err => {\r\n\t *\t\t\t\tconsole.error( err.stack );\r\n\t *\t\t\t} );\r\n\t *\r\n\t * This method can be used to initialize the editor on an existing element with the specified content in case if your integration\r\n\t * makes it difficult to set the content of the source element.\r\n\t *\r\n\t * Note that an error will be thrown if you pass the initial data both as the first parameter and also in the configuration.\r\n\t *\r\n\t * # Configuring the editor\r\n\t *\r\n\t * See the {@link module:core/editor/editorconfig~EditorConfig editor configuration documentation} to learn more about\r\n\t * customizing plugins, toolbar and more.\r\n\t *\r\n\t * # Using the editor from source\r\n\t *\r\n\t * The code samples listed in the previous sections of this documentation assume that you are using an\r\n\t * {@glink builds/guides/overview editor build} (for example – `@ckeditor/ckeditor5-build-balloon`).\r\n\t *\r\n\t * If you want to use the balloon editor from source (`@ckeditor/ckeditor5-editor-balloon/src/ballooneditor`),\r\n\t * you need to define the list of\r\n\t * {@link module:core/editor/editorconfig~EditorConfig#plugins plugins to be initialized} and\r\n\t * {@link module:core/editor/editorconfig~EditorConfig#toolbar toolbar items}. Read more about using the editor from\r\n\t * source in the {@glink builds/guides/integration/advanced-setup \"Advanced setup\" guide}.\r\n\t *\r\n\t * @param {HTMLElement|String} sourceElementOrData The DOM element that will be the source for the created editor\r\n\t * or the editor's initial data.\r\n\t *\r\n\t * If a DOM element is passed, its content will be automatically loaded to the editor upon initialization.\r\n\t * Moreover, the editor data will be set back to the original element once the editor is destroyed.\r\n\t *\r\n\t * If the initial data is passed, a detached editor will be created. In this case you need to insert it into the DOM manually.\r\n\t * It is available under the {@link module:editor-balloon/ballooneditorui~BalloonEditorUI#element `editor.ui.element`} property.\r\n\t *\r\n\t * @param {module:core/editor/editorconfig~EditorConfig} [config] The editor configuration.\r\n\t * @returns {Promise} A promise resolved once the editor is ready. The promise resolves with the created editor instance.\r\n\t */\r\n\tstatic create( sourceElementOrData, config = {} ) {\r\n\t\treturn new Promise( resolve => {\r\n\t\t\tconst isHTMLElement = isElement( sourceElementOrData );\r\n\r\n\t\t\tif ( isHTMLElement && sourceElementOrData.tagName === 'TEXTAREA' ) {\r\n\t\t\t\t// Documented in core/editor/editor.js\r\n\t\t\t\tthrow new CKEditorError(\r\n\t\t\t\t\t'editor-wrong-element: This type of editor cannot be initialized inside <textarea> element.',\r\n\t\t\t\t\tnull\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tconst editor = new this( sourceElementOrData, config );\r\n\r\n\t\t\tresolve(\r\n\t\t\t\teditor.initPlugins()\r\n\t\t\t\t\t.then( () => {\r\n\t\t\t\t\t\teditor.ui.init();\r\n\t\t\t\t\t} )\r\n\t\t\t\t\t.then( () => {\r\n\t\t\t\t\t\tif ( !isHTMLElement && config.initialData ) {\r\n\t\t\t\t\t\t\t// Documented in core/editor/editorconfig.jdoc.\r\n\t\t\t\t\t\t\tthrow new CKEditorError(\r\n\t\t\t\t\t\t\t\t'editor-create-initial-data: ' +\r\n\t\t\t\t\t\t\t\t'The config.initialData option cannot be used together with initial data passed in Editor.create().',\r\n\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst initialData = config.initialData || getInitialData( sourceElementOrData );\r\n\r\n\t\t\t\t\t\treturn editor.data.init( initialData );\r\n\t\t\t\t\t} )\r\n\t\t\t\t\t.then( () => editor.fire( 'ready' ) )\r\n\t\t\t\t\t.then( () => editor )\r\n\t\t\t);\r\n\t\t} );\r\n\t}\r\n}\r\n\r\nmix( BalloonEditor, DataApiMixin );\r\nmix( BalloonEditor, ElementApiMixin );\r\n\r\nfunction getInitialData( sourceElementOrData ) {\r\n\treturn isElement( sourceElementOrData ) ? getDataFromElement( sourceElementOrData ) : sourceElementOrData;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module editor-balloon/ballooneditorui\r\n */\r\n\r\nimport EditorUI from '@ckeditor/ckeditor5-core/src/editor/editorui';\r\nimport enableToolbarKeyboardFocus from '@ckeditor/ckeditor5-ui/src/toolbar/enabletoolbarkeyboardfocus';\r\nimport { enablePlaceholder } from '@ckeditor/ckeditor5-engine/src/view/placeholder';\r\n\r\n/**\r\n * The balloon editor UI class.\r\n *\r\n * @extends module:core/editor/editorui~EditorUI\r\n */\r\nexport default class BalloonEditorUI extends EditorUI {\r\n\t/**\r\n\t * Creates an instance of the balloon editor UI class.\r\n\t *\r\n\t * @param {module:core/editor/editor~Editor} editor The editor instance.\r\n\t * @param {module:ui/editorui/editoruiview~EditorUIView} view The view of the UI.\r\n\t */\r\n\tconstructor( editor, view ) {\r\n\t\tsuper( editor );\r\n\r\n\t\t/**\r\n\t\t * The main (top–most) view of the editor UI.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:ui/editorui/editoruiview~EditorUIView} #view\r\n\t\t */\r\n\t\tthis.view = view;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tget element() {\r\n\t\treturn this.view.editable.element;\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes the UI.\r\n\t */\r\n\tinit() {\r\n\t\tconst editor = this.editor;\r\n\t\tconst view = this.view;\r\n\t\tconst balloonToolbar = editor.plugins.get( 'BalloonToolbar' );\r\n\t\tconst editingView = editor.editing.view;\r\n\t\tconst editable = view.editable;\r\n\t\tconst editingRoot = editingView.document.getRoot();\r\n\r\n\t\t// The editable UI and editing root should share the same name. Then name is used\r\n\t\t// to recognize the particular editable, for instance in ARIA attributes.\r\n\t\teditable.name = editingRoot.rootName;\r\n\r\n\t\tview.render();\r\n\r\n\t\t// The editable UI element in DOM is available for sure only after the editor UI view has been rendered.\r\n\t\t// But it can be available earlier if a DOM element has been passed to BalloonEditor.create().\r\n\t\tconst editableElement = editable.element;\r\n\r\n\t\t// Register the editable UI view in the editor. A single editor instance can aggregate multiple\r\n\t\t// editable areas (roots) but the balloon editor has only one.\r\n\t\tthis.setEditableElement( editable.name, editableElement );\r\n\r\n\t\t// Let the global focus tracker know that the editable UI element is focusable and\r\n\t\t// belongs to the editor. From now on, the focus tracker will sustain the editor focus\r\n\t\t// as long as the editable is focused (e.g. the user is typing).\r\n\t\tthis.focusTracker.add( editableElement );\r\n\r\n\t\t// Let the editable UI element respond to the changes in the global editor focus\r\n\t\t// tracker. It has been added to the same tracker a few lines above but, in reality, there are\r\n\t\t// many focusable areas in the editor, like balloons, toolbars or dropdowns and as long\r\n\t\t// as they have focus, the editable should act like it is focused too (although technically\r\n\t\t// it isn't), e.g. by setting the proper CSS class, visually announcing focus to the user.\r\n\t\t// Doing otherwise will result in editable focus styles disappearing, once e.g. the\r\n\t\t// toolbar gets focused.\r\n\t\teditable.bind( 'isFocused' ).to( this.focusTracker );\r\n\r\n\t\t// Bind the editable UI element to the editing view, making it an end– and entry–point\r\n\t\t// of the editor's engine. This is where the engine meets the UI.\r\n\t\teditingView.attachDomRoot( editableElement );\r\n\r\n\t\tenableToolbarKeyboardFocus( {\r\n\t\t\torigin: editingView,\r\n\t\t\toriginFocusTracker: this.focusTracker,\r\n\t\t\toriginKeystrokeHandler: editor.keystrokes,\r\n\t\t\ttoolbar: balloonToolbar.toolbarView,\r\n\t\t\tbeforeFocus() {\r\n\t\t\t\tballoonToolbar.show();\r\n\t\t\t},\r\n\t\t\tafterBlur() {\r\n\t\t\t\tballoonToolbar.hide();\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tthis._initPlaceholder();\r\n\t\tthis.fire( 'ready' );\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tdestroy() {\r\n\t\tconst view = this.view;\r\n\t\tconst editingView = this.editor.editing.view;\r\n\r\n\t\teditingView.detachDomRoot( view.editable.name );\r\n\t\tview.destroy();\r\n\r\n\t\tsuper.destroy();\r\n\t}\r\n\r\n\t/**\r\n\t * Enable the placeholder text on the editing root, if any was configured.\r\n\t *\r\n\t * @private\r\n\t */\r\n\t_initPlaceholder() {\r\n\t\tconst editor = this.editor;\r\n\t\tconst editingView = editor.editing.view;\r\n\t\tconst editingRoot = editingView.document.getRoot();\r\n\t\tconst sourceElement = editor.sourceElement;\r\n\r\n\t\tconst placeholderText = editor.config.get( 'placeholder' ) ||\r\n\t\t\tsourceElement && sourceElement.tagName.toLowerCase() === 'textarea' && sourceElement.getAttribute( 'placeholder' );\r\n\r\n\t\tif ( placeholderText ) {\r\n\t\t\tenablePlaceholder( {\r\n\t\t\t\tview: editingView,\r\n\t\t\t\telement: editingRoot,\r\n\t\t\t\ttext: placeholderText,\r\n\t\t\t\tisDirectHost: false\r\n\t\t\t} );\r\n\t\t}\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module editor-balloon/ballooneditoruiview\r\n */\r\n\r\nimport EditorUIView from '@ckeditor/ckeditor5-ui/src/editorui/editoruiview';\r\nimport InlineEditableUIView from '@ckeditor/ckeditor5-ui/src/editableui/inline/inlineeditableuiview';\r\n\r\n/**\r\n * Contextual editor UI view. Uses the {@link module:ui/editableui/inline/inlineeditableuiview~InlineEditableUIView}.\r\n *\r\n * @extends module:ui/editorui/editoruiview~EditorUIView\r\n */\r\nexport default class BalloonEditorUIView extends EditorUIView {\r\n\t/**\r\n\t * Creates an instance of the balloon editor UI view.\r\n\t *\r\n\t * @param {module:utils/locale~Locale} locale The {@link module:core/editor/editor~Editor#locale} instance.\r\n\t * @param {module:engine/view/view~View} editingView The editing view instance this view is related to.\r\n\t * @param {HTMLElement} [editableElement] The editable element. If not specified, it will be automatically created by\r\n\t * {@link module:ui/editableui/editableuiview~EditableUIView}. Otherwise, the given element will be used.\r\n\t */\r\n\tconstructor( locale, editingView, editableElement ) {\r\n\t\tsuper( locale );\r\n\r\n\t\t/**\r\n\t\t * The editable UI view.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:ui/editableui/inline/inlineeditableuiview~InlineEditableUIView}\r\n\t\t */\r\n\t\tthis.editable = new InlineEditableUIView( locale, editingView, editableElement );\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\trender() {\r\n\t\tsuper.render();\r\n\r\n\t\tthis.registerChild( this.editable );\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/controller/datacontroller\r\n */\r\n\r\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\r\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\n\r\nimport Mapper from '../conversion/mapper';\r\n\r\nimport DowncastDispatcher from '../conversion/downcastdispatcher';\r\nimport { insertText } from '../conversion/downcasthelpers';\r\n\r\nimport UpcastDispatcher from '../conversion/upcastdispatcher';\r\nimport { convertText, convertToModelFragment } from '../conversion/upcasthelpers';\r\n\r\nimport ViewDocumentFragment from '../view/documentfragment';\r\nimport ViewDocument from '../view/document';\r\nimport ViewDowncastWriter from '../view/downcastwriter';\r\n\r\nimport ModelRange from '../model/range';\r\n\r\n/**\r\n * Controller for the data pipeline. The data pipeline controls how data is retrieved from the document\r\n * and set inside it. Hence, the controller features two methods which allow to {@link ~DataController#get get}\r\n * and {@link ~DataController#set set} data of the {@link ~DataController#model model}\r\n * using given:\r\n *\r\n * * {@link module:engine/dataprocessor/dataprocessor~DataProcessor data processor},\r\n * * downcast converters,\r\n * * upcast converters.\r\n *\r\n * An instance of the data controller is always available in the {@link module:core/editor/editor~Editor#data `editor.data`}\r\n * property:\r\n *\r\n *\t\teditor.data.get( { rootName: 'customRoot' } ); // -> '<p>Hello!</p>'\r\n *\r\n * @mixes module:utils/observablemixin~ObservableMixin\r\n */\r\nexport default class DataController {\r\n\t/**\r\n\t * Creates a data controller instance.\r\n\t *\r\n\t * @param {module:engine/model/model~Model} model Data model.\r\n\t * @param {module:engine/view/stylesmap~StylesProcessor} stylesProcessor The styles processor instance.\r\n\t */\r\n\tconstructor( model, stylesProcessor ) {\r\n\t\t/**\r\n\t\t * Data model.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/model/model~Model}\r\n\t\t */\r\n\t\tthis.model = model;\r\n\r\n\t\t/**\r\n\t\t * Styles processor used during the conversion.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/view/stylesmap~StylesProcessor}\r\n\t\t */\r\n\t\tthis.stylesProcessor = stylesProcessor;\r\n\r\n\t\t/**\r\n\t\t * Data processor used during the conversion.\r\n\t\t *\r\n\t\t * @member {module:engine/dataprocessor/dataprocessor~DataProcessor} #processor\r\n\t\t */\r\n\t\tthis.processor;\r\n\r\n\t\t/**\r\n\t\t * Mapper used for the conversion. It has no permanent bindings, because they are created when getting data and\r\n\t\t * cleared directly after the data are converted. However, the mapper is defined as a class property, because\r\n\t\t * it needs to be passed to the `DowncastDispatcher` as a conversion API.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/conversion/mapper~Mapper}\r\n\t\t */\r\n\t\tthis.mapper = new Mapper();\r\n\r\n\t\t/**\r\n\t\t * Downcast dispatcher used by the {@link #get get method}. Downcast converters should be attached to it.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/conversion/downcastdispatcher~DowncastDispatcher}\r\n\t\t */\r\n\t\tthis.downcastDispatcher = new DowncastDispatcher( {\r\n\t\t\tmapper: this.mapper\r\n\t\t} );\r\n\t\tthis.downcastDispatcher.on( 'insert:$text', insertText(), { priority: 'lowest' } );\r\n\r\n\t\t/**\r\n\t\t * Upcast dispatcher used by the {@link #set set method}. Upcast converters should be attached to it.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/conversion/upcastdispatcher~UpcastDispatcher}\r\n\t\t */\r\n\t\tthis.upcastDispatcher = new UpcastDispatcher( {\r\n\t\t\tschema: model.schema\r\n\t\t} );\r\n\r\n\t\t/**\r\n\t\t * The view document used by the data controller.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/view/document~Document}\r\n\t\t */\r\n\t\tthis.viewDocument = new ViewDocument( stylesProcessor );\r\n\r\n\t\t/**\r\n\t\t * The view downcast writer just for data conversion purposes, i.e. to modify\r\n\t\t * the {@link #viewDocument}.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/view/downcastwriter~DowncastWriter}\r\n\t\t */\r\n\t\tthis._viewWriter = new ViewDowncastWriter( this.viewDocument );\r\n\r\n\t\t// Define default converters for text and elements.\r\n\t\t//\r\n\t\t// Note that if there is no default converter for the element it will be skipped, for instance `<b>foo</b>` will be\r\n\t\t// converted to nothing. We add `convertToModelFragment` as a last converter so it converts children of that\r\n\t\t// element to the document fragment so `<b>foo</b>` will be converted to `foo` if there is no converter for `<b>`.\r\n\t\tthis.upcastDispatcher.on( 'text', convertText(), { priority: 'lowest' } );\r\n\t\tthis.upcastDispatcher.on( 'element', convertToModelFragment(), { priority: 'lowest' } );\r\n\t\tthis.upcastDispatcher.on( 'documentFragment', convertToModelFragment(), { priority: 'lowest' } );\r\n\r\n\t\tthis.decorate( 'init' );\r\n\r\n\t\t// Fire `ready` event when initialisation has completed. Such low level listener gives possibility\r\n\t\t// to plug into initialisation pipeline without interrupting the initialisation flow.\r\n\t\tthis.on( 'init', () => {\r\n\t\t\tthis.fire( 'ready' );\r\n\t\t}, { priority: 'lowest' } );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the model's data converted by downcast dispatchers attached to {@link #downcastDispatcher} and\r\n\t * formatted by the {@link #processor data processor}.\r\n\t *\r\n\t * @param {Object} [options]\r\n\t * @param {String} [options.rootName='main'] Root name.\r\n\t * @param {String} [options.trim='empty'] Whether returned data should be trimmed. This option is set to `empty` by default,\r\n\t * which means whenever editor content is considered empty, an empty string will be returned. To turn off trimming completely\r\n\t * use `'none'`. In such cases exact content will be returned (for example `<p>&nbsp;</p>` for an empty editor).\r\n\t * @returns {String} Output data.\r\n\t */\r\n\tget( options ) {\r\n\t\tconst { rootName = 'main', trim = 'empty' } = options || {};\r\n\r\n\t\tif ( !this._checkIfRootsExists( [ rootName ] ) ) {\r\n\t\t\t/**\r\n\t\t\t * Cannot get data from a non-existing root. This error is thrown when {@link #get DataController#get() method}\r\n\t\t\t * is called with non-existent root name. For example, if there is an editor instance with only `main` root,\r\n\t\t\t * calling {@link #get} like:\r\n\t\t\t *\r\n\t\t\t *\t\tdata.get( { rootName: 'root2' } );\r\n\t\t\t *\r\n\t\t\t * will throw this error.\r\n\t\t\t *\r\n\t\t\t * @error datacontroller-get-non-existent-root\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'datacontroller-get-non-existent-root: Attempting to get data from a non-existing root.', this );\r\n\t\t}\r\n\r\n\t\tconst root = this.model.document.getRoot( rootName );\r\n\r\n\t\tif ( trim === 'empty' && !this.model.hasContent( root, { ignoreWhitespaces: true } ) ) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\r\n\t\treturn this.stringify( root );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the content of the given {@link module:engine/model/element~Element model's element} or\r\n\t * {@link module:engine/model/documentfragment~DocumentFragment model document fragment} converted by the downcast converters\r\n\t * attached to {@link #downcastDispatcher} and formatted by the {@link #processor data processor}.\r\n\t *\r\n\t * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} modelElementOrFragment\r\n\t * Element whose content will be stringified.\r\n\t * @returns {String} Output data.\r\n\t */\r\n\tstringify( modelElementOrFragment ) {\r\n\t\t// Model -> view.\r\n\t\tconst viewDocumentFragment = this.toView( modelElementOrFragment );\r\n\r\n\t\t// View -> data.\r\n\t\treturn this.processor.toData( viewDocumentFragment );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the content of the given {@link module:engine/model/element~Element model element} or\r\n\t * {@link module:engine/model/documentfragment~DocumentFragment model document fragment} converted by the downcast\r\n\t * converters attached to {@link #downcastDispatcher} to a\r\n\t * {@link module:engine/view/documentfragment~DocumentFragment view document fragment}.\r\n\t *\r\n\t * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} modelElementOrFragment\r\n\t * Element or document fragment whose content will be converted.\r\n\t * @returns {module:engine/view/documentfragment~DocumentFragment} Output view DocumentFragment.\r\n\t */\r\n\ttoView( modelElementOrFragment ) {\r\n\t\tconst viewDocument = this.viewDocument;\r\n\t\tconst viewWriter = this._viewWriter;\r\n\r\n\t\t// Clear bindings so the call to this method gives correct results.\r\n\t\tthis.mapper.clearBindings();\r\n\r\n\t\t// First, convert elements.\r\n\t\tconst modelRange = ModelRange._createIn( modelElementOrFragment );\r\n\t\tconst viewDocumentFragment = new ViewDocumentFragment( viewDocument );\r\n\r\n\t\tthis.mapper.bindElements( modelElementOrFragment, viewDocumentFragment );\r\n\r\n\t\t// We have no view controller and rendering do DOM in DataController so view.change() block is not used here.\r\n\t\tthis.downcastDispatcher.convertInsert( modelRange, viewWriter );\r\n\r\n\t\tif ( !modelElementOrFragment.is( 'documentFragment' ) ) {\r\n\t\t\t// Then, if a document element is converted, convert markers.\r\n\t\t\t// From all document markers, get those, which \"intersect\" with the converter element.\r\n\t\t\tconst markers = _getMarkersRelativeToElement( modelElementOrFragment );\r\n\r\n\t\t\tfor ( const [ name, range ] of markers ) {\r\n\t\t\t\tthis.downcastDispatcher.convertMarkerAdd( name, range, viewWriter );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn viewDocumentFragment;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets initial input data parsed by the {@link #processor data processor} and\r\n\t * converted by the {@link #upcastDispatcher view-to-model converters}.\r\n\t * Initial data can be set only to document that {@link module:engine/model/document~Document#version} is equal 0.\r\n\t *\r\n\t * **Note** This method is {@link module:utils/observablemixin~ObservableMixin#decorate decorated} which is\r\n\t * used by e.g. collaborative editing plugin that syncs remote data on init.\r\n\t *\r\n\t * When data is passed as a string it is initialized on a default `main` root:\r\n\t *\r\n\t *\t\tdataController.init( '<p>Foo</p>' ); // Initializes data on the `main` root.\r\n\t *\r\n\t * To initialize data on a different root or multiple roots at once, object containing `rootName` - `data` pairs should be passed:\r\n\t *\r\n\t *\t\tdataController.init( { main: '<p>Foo</p>', title: '<h1>Bar</h1>' } ); // Initializes data on the `main` and `title` roots.\r\n\t *\r\n\t * @fires init\r\n\t * @param {String|Object.<String,String>} data Input data as a string or an object containing `rootName` - `data`\r\n\t * pairs to initialize data on multiple roots at once.\r\n\t * @returns {Promise} Promise that is resolved after the data is set on the editor.\r\n\t */\r\n\tinit( data ) {\r\n\t\tif ( this.model.document.version ) {\r\n\t\t\t/**\r\n\t\t\t * Cannot set initial data to not empty {@link module:engine/model/document~Document}.\r\n\t\t\t * Initial data should be set once, during {@link module:core/editor/editor~Editor} initialization,\r\n\t\t\t * when the {@link module:engine/model/document~Document#version} is equal 0.\r\n\t\t\t *\r\n\t\t\t * @error datacontroller-init-document-not-empty\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'datacontroller-init-document-not-empty: Trying to set initial data to not empty document.', this );\r\n\t\t}\r\n\r\n\t\tlet initialData = {};\r\n\t\tif ( typeof data === 'string' ) {\r\n\t\t\tinitialData.main = data; // Default root is 'main'. To initiate data on a different root, object should be passed.\r\n\t\t} else {\r\n\t\t\tinitialData = data;\r\n\t\t}\r\n\r\n\t\tif ( !this._checkIfRootsExists( Object.keys( initialData ) ) ) {\r\n\t\t\t/**\r\n\t\t\t * Cannot init data on a non-existing root. This error is thrown when {@link #init DataController#init() method}\r\n\t\t\t * is called with non-existent root name. For example, if there is an editor instance with only `main` root,\r\n\t\t\t * calling {@link #init} like:\r\n\t\t\t *\r\n\t\t\t * \t\tdata.init( { main: '<p>Foo</p>', root2: '<p>Bar</p>' } );\r\n\t\t\t *\r\n\t\t\t * will throw this error.\r\n\t\t\t *\r\n\t\t\t * @error datacontroller-init-non-existent-root\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'datacontroller-init-non-existent-root: Attempting to init data on a non-existing root.', this );\r\n\t\t}\r\n\r\n\t\tthis.model.enqueueChange( 'transparent', writer => {\r\n\t\t\tfor ( const rootName of Object.keys( initialData ) ) {\r\n\t\t\t\tconst modelRoot = this.model.document.getRoot( rootName );\r\n\t\t\t\twriter.insert( this.parse( initialData[ rootName ], modelRoot ), modelRoot, 0 );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\treturn Promise.resolve();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets input data parsed by the {@link #processor data processor} and\r\n\t * converted by the {@link #upcastDispatcher view-to-model converters}.\r\n\t * This method can be used any time to replace existing editor data by the new one without clearing the\r\n\t * {@link module:engine/model/document~Document#history document history}.\r\n\t *\r\n\t * This method also creates a batch with all the changes applied. If all you need is to parse data, use\r\n\t * the {@link #parse} method.\r\n\t *\r\n\t * When data is passed as a string it is set on a default `main` root:\r\n\t *\r\n\t *\t\tdataController.set( '<p>Foo</p>' ); // Sets data on the `main` root.\r\n\t *\r\n\t * To set data on a different root or multiple roots at once, object containing `rootName` - `data` pairs should be passed:\r\n\t *\r\n\t *\t\tdataController.set( { main: '<p>Foo</p>', title: '<h1>Bar</h1>' } ); // Sets data on the `main` and `title` roots.\r\n\t *\r\n\t * @param {String|Object.<String,String>} data Input data as a string or an object containing `rootName` - `data`\r\n\t * pairs to set data on multiple roots at once.\r\n\t */\r\n\tset( data ) {\r\n\t\tlet newData = {};\r\n\r\n\t\tif ( typeof data === 'string' ) {\r\n\t\t\tnewData.main = data; // Default root is 'main'. To set data on a different root, object should be passed.\r\n\t\t} else {\r\n\t\t\tnewData = data;\r\n\t\t}\r\n\r\n\t\tif ( !this._checkIfRootsExists( Object.keys( newData ) ) ) {\r\n\t\t\t/**\r\n\t\t\t * Cannot set data on a non-existing root. This error is thrown when {@link #set DataController#set() method}\r\n\t\t\t * is called with non-existent root name. For example, if there is an editor instance with only `main` root,\r\n\t\t\t * calling {@link #set} like:\r\n\t\t\t *\r\n\t\t\t * \t\tdata.set( { main: '<p>Foo</p>', root2: '<p>Bar</p>' } );\r\n\t\t\t *\r\n\t\t\t * will throw this error.\r\n\t\t\t *\r\n\t\t\t * @error datacontroller-set-non-existent-root\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'datacontroller-set-non-existent-root: Attempting to set data on a non-existing root.', this );\r\n\t\t}\r\n\r\n\t\tthis.model.enqueueChange( 'transparent', writer => {\r\n\t\t\twriter.setSelection( null );\r\n\t\t\twriter.removeSelectionAttribute( this.model.document.selection.getAttributeKeys() );\r\n\r\n\t\t\tfor ( const rootName of Object.keys( newData ) ) {\r\n\t\t\t\t// Save to model.\r\n\t\t\t\tconst modelRoot = this.model.document.getRoot( rootName );\r\n\r\n\t\t\t\twriter.remove( writer.createRangeIn( modelRoot ) );\r\n\t\t\t\twriter.insert( this.parse( newData[ rootName ], modelRoot ), modelRoot, 0 );\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the data parsed by the {@link #processor data processor} and then converted by upcast converters\r\n\t * attached to the {@link #upcastDispatcher}.\r\n\t *\r\n\t * @see #set\r\n\t * @param {String} data Data to parse.\r\n\t * @param {module:engine/model/schema~SchemaContextDefinition} [context='$root'] Base context in which the view will\r\n\t * be converted to the model. See: {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher#convert}.\r\n\t * @returns {module:engine/model/documentfragment~DocumentFragment} Parsed data.\r\n\t */\r\n\tparse( data, context = '$root' ) {\r\n\t\t// data -> view\r\n\t\tconst viewDocumentFragment = this.processor.toView( data );\r\n\r\n\t\t// view -> model\r\n\t\treturn this.toModel( viewDocumentFragment, context );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the result of the given {@link module:engine/view/element~Element view element} or\r\n\t * {@link module:engine/view/documentfragment~DocumentFragment view document fragment} converted by the\r\n\t * {@link #upcastDispatcher view-to-model converters}, wrapped by {@link module:engine/model/documentfragment~DocumentFragment}.\r\n\t *\r\n\t * When marker elements were converted during the conversion process, it will be set as a document fragment's\r\n\t * {@link module:engine/model/documentfragment~DocumentFragment#markers static markers map}.\r\n\t *\r\n\t * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} viewElementOrFragment\r\n\t * Element or document fragment whose content will be converted.\r\n\t * @param {module:engine/model/schema~SchemaContextDefinition} [context='$root'] Base context in which the view will\r\n\t * be converted to the model. See: {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher#convert}.\r\n\t * @returns {module:engine/model/documentfragment~DocumentFragment} Output document fragment.\r\n\t */\r\n\ttoModel( viewElementOrFragment, context = '$root' ) {\r\n\t\treturn this.model.change( writer => {\r\n\t\t\treturn this.upcastDispatcher.convert( viewElementOrFragment, writer, context );\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a style processor normalization rules.\r\n\t *\r\n\t * You can implement your own rules as well as use one of the available processor rules:\r\n\t *\r\n\t * * background: {@link module:engine/view/styles/background~addBackgroundRules}\r\n\t * * border: {@link module:engine/view/styles/border~addBorderRules}\r\n\t * * margin: {@link module:engine/view/styles/margin~addMarginRules}\r\n\t * * padding: {@link module:engine/view/styles/padding~addPaddingRules}\r\n\t *\r\n\t * @param {Function} callback\r\n\t */\r\n\taddStyleProcessorRules( callback ) {\r\n\t\tcallback( this.stylesProcessor );\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all event listeners set by the DataController.\r\n\t */\r\n\tdestroy() {\r\n\t\tthis.stopListening();\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if all provided root names are existing editor roots.\r\n\t *\r\n\t * @private\r\n\t * @param {Array.<String>} rootNames Root names to check.\r\n\t * @returns {Boolean} Whether all provided root names are existing editor roots.\r\n\t */\r\n\t_checkIfRootsExists( rootNames ) {\r\n\t\tfor ( const rootName of rootNames ) {\r\n\t\t\tif ( !this.model.document.getRootNames().includes( rootName ) ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Event fired once data initialisation has finished.\r\n\t *\r\n\t * @event ready\r\n\t */\r\n\r\n\t/**\r\n\t * Event fired after {@link #init init() method} has been run. It can be {@link #listenTo listened to} to adjust/modify\r\n\t * the initialisation flow. However, if the `init` event is stopped or prevented, the {@link #event:ready ready event}\r\n\t * should be fired manually.\r\n\t *\r\n\t * The `init` event is fired by decorated {@link #init} method.\r\n\t * See {@link module:utils/observablemixin~ObservableMixin#decorate} for more information and samples.\r\n\t *\r\n\t * @event init\r\n\t */\r\n}\r\n\r\nmix( DataController, ObservableMixin );\r\n\r\n// Helper function for downcast conversion.\r\n//\r\n// Takes a document element (element that is added to a model document) and checks which markers are inside it\r\n// and which markers are containing it. If the marker is intersecting with element, the intersection is returned.\r\nfunction _getMarkersRelativeToElement( element ) {\r\n\tconst result = [];\r\n\tconst doc = element.root.document;\r\n\r\n\tif ( !doc ) {\r\n\t\treturn [];\r\n\t}\r\n\r\n\tconst elementRange = ModelRange._createIn( element );\r\n\r\n\tfor ( const marker of doc.model.markers ) {\r\n\t\tconst intersection = elementRange.getIntersection( marker.getRange() );\r\n\r\n\t\tif ( intersection ) {\r\n\t\t\tresult.push( [ marker.name, intersection ] );\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/controller/editingcontroller\r\n */\r\n\r\nimport RootEditableElement from '../view/rooteditableelement';\r\nimport View from '../view/view';\r\nimport Mapper from '../conversion/mapper';\r\nimport DowncastDispatcher from '../conversion/downcastdispatcher';\r\nimport { clearAttributes, convertCollapsedSelection, convertRangeSelection, insertText, remove } from '../conversion/downcasthelpers';\r\n\r\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\r\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\r\nimport { convertSelectionChange } from '../conversion/upcasthelpers';\r\n\r\n// @if CK_DEBUG_ENGINE // const { dumpTrees, initDocumentDumping } = require( '../dev-utils/utils' );\r\n\r\n/**\r\n * Controller for the editing pipeline. The editing pipeline controls {@link ~EditingController#model model} rendering,\r\n * including selection handling. It also creates the {@link ~EditingController#view view} which builds a\r\n * browser-independent virtualization over the DOM elements. The editing controller also attaches default converters.\r\n *\r\n * @mixes module:utils/observablemixin~ObservableMixin\r\n */\r\nexport default class EditingController {\r\n\t/**\r\n\t * Creates an editing controller instance.\r\n\t *\r\n\t * @param {module:engine/model/model~Model} model Editing model.\r\n\t * @param {module:engine/view/stylesmap~StylesProcessor} stylesProcessor The styles processor instance.\r\n\t */\r\n\tconstructor( model, stylesProcessor ) {\r\n\t\t/**\r\n\t\t * Editor model.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/model/model~Model}\r\n\t\t */\r\n\t\tthis.model = model;\r\n\r\n\t\t/**\r\n\t\t * Editing view controller.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/view/view~View}\r\n\t\t */\r\n\t\tthis.view = new View( stylesProcessor );\r\n\r\n\t\t/**\r\n\t\t * Mapper which describes the model-view binding.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/conversion/mapper~Mapper}\r\n\t\t */\r\n\t\tthis.mapper = new Mapper();\r\n\r\n\t\t/**\r\n\t\t * Downcast dispatcher that converts changes from the model to {@link #view the editing view}.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/conversion/downcastdispatcher~DowncastDispatcher} #downcastDispatcher\r\n\t\t */\r\n\t\tthis.downcastDispatcher = new DowncastDispatcher( {\r\n\t\t\tmapper: this.mapper\r\n\t\t} );\r\n\r\n\t\tconst doc = this.model.document;\r\n\t\tconst selection = doc.selection;\r\n\t\tconst markers = this.model.markers;\r\n\r\n\t\t// When plugins listen on model changes (on selection change, post fixers, etc) and change the view as a result of\r\n\t\t// model's change, they might trigger view rendering before the conversion is completed (e.g. before the selection\r\n\t\t// is converted). We disable rendering for the length of the outermost model change() block to prevent that.\r\n\t\t//\r\n\t\t// See https://github.com/ckeditor/ckeditor5-engine/issues/1528\r\n\t\tthis.listenTo( this.model, '_beforeChanges', () => {\r\n\t\t\tthis.view._disableRendering( true );\r\n\t\t}, { priority: 'highest' } );\r\n\r\n\t\tthis.listenTo( this.model, '_afterChanges', () => {\r\n\t\t\tthis.view._disableRendering( false );\r\n\t\t}, { priority: 'lowest' } );\r\n\r\n\t\t// Whenever model document is changed, convert those changes to the view (using model.Document#differ).\r\n\t\t// Do it on 'low' priority, so changes are converted after other listeners did their job.\r\n\t\t// Also convert model selection.\r\n\t\tthis.listenTo( doc, 'change', () => {\r\n\t\t\tthis.view.change( writer => {\r\n\t\t\t\tthis.downcastDispatcher.convertChanges( doc.differ, markers, writer );\r\n\t\t\t\tthis.downcastDispatcher.convertSelection( selection, markers, writer );\r\n\t\t\t} );\r\n\t\t}, { priority: 'low' } );\r\n\r\n\t\t// Convert selection from the view to the model when it changes in the view.\r\n\t\tthis.listenTo( this.view.document, 'selectionChange', convertSelectionChange( this.model, this.mapper ) );\r\n\r\n\t\t// Attach default model converters.\r\n\t\tthis.downcastDispatcher.on( 'insert:$text', insertText(), { priority: 'lowest' } );\r\n\t\tthis.downcastDispatcher.on( 'remove', remove(), { priority: 'low' } );\r\n\r\n\t\t// Attach default model selection converters.\r\n\t\tthis.downcastDispatcher.on( 'selection', clearAttributes(), { priority: 'low' } );\r\n\t\tthis.downcastDispatcher.on( 'selection', convertRangeSelection(), { priority: 'low' } );\r\n\t\tthis.downcastDispatcher.on( 'selection', convertCollapsedSelection(), { priority: 'low' } );\r\n\r\n\t\t// Binds {@link module:engine/view/document~Document#roots view roots collection} to\r\n\t\t// {@link module:engine/model/document~Document#roots model roots collection} so creating\r\n\t\t// model root automatically creates corresponding view root.\r\n\t\tthis.view.document.roots.bindTo( this.model.document.roots ).using( root => {\r\n\t\t\t// $graveyard is a special root that has no reflection in the view.\r\n\t\t\tif ( root.rootName == '$graveyard' ) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tconst viewRoot = new RootEditableElement( this.view.document, root.name );\r\n\r\n\t\t\tviewRoot.rootName = root.rootName;\r\n\t\t\tthis.mapper.bindElements( root, viewRoot );\r\n\r\n\t\t\treturn viewRoot;\r\n\t\t} );\r\n\r\n\t\t// @if CK_DEBUG_ENGINE // initDocumentDumping( this.model.document );\r\n\t\t// @if CK_DEBUG_ENGINE // initDocumentDumping( this.view.document );\r\n\r\n\t\t// @if CK_DEBUG_ENGINE // dumpTrees( this.model.document, this.model.document.version );\r\n\t\t// @if CK_DEBUG_ENGINE // dumpTrees( this.view.document, this.model.document.version );\r\n\r\n\t\t// @if CK_DEBUG_ENGINE // this.model.document.on( 'change', () => {\r\n\t\t// @if CK_DEBUG_ENGINE //\tdumpTrees( this.view.document, this.model.document.version );\r\n\t\t// @if CK_DEBUG_ENGINE // }, { priority: 'lowest' } );\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all event listeners attached to the `EditingController`. Destroys all objects created\r\n\t * by `EditingController` that need to be destroyed.\r\n\t */\r\n\tdestroy() {\r\n\t\tthis.view.destroy();\r\n\t\tthis.stopListening();\r\n\t}\r\n}\r\n\r\nmix( EditingController, ObservableMixin );\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/conversion/conversion\r\n */\r\n\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\nimport UpcastHelpers from './upcasthelpers';\r\nimport DowncastHelpers from './downcasthelpers';\r\n\r\n/**\r\n * A utility class that helps add converters to upcast and downcast dispatchers.\r\n *\r\n * We recommend reading the {@glink framework/guides/architecture/editing-engine Editing engine architecture} guide first to\r\n * understand the core concepts of the conversion mechanisms.\r\n *\r\n * An instance of the conversion manager is available in the\r\n * {@link module:core/editor/editor~Editor#conversion `editor.conversion`} property\r\n * and by default has the following groups of dispatchers (i.e. directions of conversion):\r\n *\r\n * * `downcast` (editing and data downcasts)\r\n * * `editingDowncast`\r\n * * `dataDowncast`\r\n * * `upcast`\r\n *\r\n * # One-way converters\r\n *\r\n * To add a converter to a specific group, use the {@link module:engine/conversion/conversion~Conversion#for `for()`}\r\n * method:\r\n *\r\n *\t\t// Add a converter to editing downcast and data downcast.\r\n *\t\teditor.conversion.for( 'downcast' ).elementToElement( config ) );\r\n *\r\n *\t\t// Add a converter to the data pipepline only:\r\n *\t\teditor.conversion.for( 'dataDowncast' ).elementToElement( dataConversionConfig ) );\r\n *\r\n *\t\t// And a slightly different one for the editing pipeline:\r\n *\t\teditor.conversion.for( 'editingDowncast' ).elementToElement( editingConversionConfig ) );\r\n *\r\n * See {@link module:engine/conversion/conversion~Conversion#for `for()`} method documentation to learn more about\r\n * available conversion helpers and how to use your custom ones.\r\n *\r\n * # Two-way converters\r\n *\r\n * Besides using one-way converters via the `for()` method, you can also use other methods available in this\r\n * class to add two-way converters (upcast and downcast):\r\n *\r\n * * {@link module:engine/conversion/conversion~Conversion#elementToElement `elementToElement()`} &ndash;\r\n * Model element to view element and vice versa.\r\n * * {@link module:engine/conversion/conversion~Conversion#attributeToElement `attributeToElement()`} &ndash;\r\n * Model attribute to view element and vice versa.\r\n * * {@link module:engine/conversion/conversion~Conversion#attributeToAttribute `attributeToAttribute()`} &ndash;\r\n * Model attribute to view element and vice versa.\r\n */\r\nexport default class Conversion {\r\n\t/**\r\n\t * Creates a new conversion instance.\r\n\t *\r\n\t * @param {module:engine/conversion/downcastdispatcher~DowncastDispatcher|\r\n\t * Array.<module:engine/conversion/downcastdispatcher~DowncastDispatcher>} downcastDispatchers\r\n\t * @param {module:engine/conversion/upcastdispatcher~UpcastDispatcher|\r\n\t * Array.<module:engine/conversion/upcastdispatcher~UpcastDispatcher>} upcastDispatchers\r\n\t */\r\n\tconstructor( downcastDispatchers, upcastDispatchers ) {\r\n\t\t/**\r\n\t\t * Maps dispatchers group name to ConversionHelpers instances.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Map.<String,module:engine/conversion/conversionhelpers~ConversionHelpers>}\r\n\t\t */\r\n\t\tthis._helpers = new Map();\r\n\r\n\t\t// Define default 'downcast' & 'upcast' dispatchers groups. Those groups are always available as two-way converters needs them.\r\n\t\tthis._downcast = Array.isArray( downcastDispatchers ) ? downcastDispatchers : [ downcastDispatchers ];\r\n\t\tthis._createConversionHelpers( { name: 'downcast', dispatchers: this._downcast, isDowncast: true } );\r\n\r\n\t\tthis._upcast = Array.isArray( upcastDispatchers ) ? upcastDispatchers : [ upcastDispatchers ];\r\n\t\tthis._createConversionHelpers( { name: 'upcast', dispatchers: this._upcast, isDowncast: false } );\r\n\t}\r\n\r\n\t/**\r\n\t * Define an alias for registered dispatcher.\r\n\t *\r\n\t *\t\tconst conversion = new Conversion(\r\n\t *\t\t\t[ dataDowncastDispatcher, editingDowncastDispatcher ],\r\n\t *\t\t\tupcastDispatcher\r\n\t *\t\t);\r\n\t *\r\n\t *\t\tconversion.addAlias( 'dataDowncast', dataDowncastDispatcher );\r\n\t *\r\n\t * @param {String} alias An alias of a dispatcher.\r\n\t * @param {module:engine/conversion/downcastdispatcher~DowncastDispatcher|\r\n\t * module:engine/conversion/upcastdispatcher~UpcastDispatcher} dispatcher Dispatcher which should have an alias.\r\n\t */\r\n\taddAlias( alias, dispatcher ) {\r\n\t\tconst isDowncast = this._downcast.includes( dispatcher );\r\n\t\tconst isUpcast = this._upcast.includes( dispatcher );\r\n\r\n\t\tif ( !isUpcast && !isDowncast ) {\r\n\t\t\t/**\r\n\t\t\t * Trying to register and alias for a dispatcher that nas not been registered.\r\n\t\t\t *\r\n\t\t\t * @error conversion-add-alias-dispatcher-not-registered\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'conversion-add-alias-dispatcher-not-registered: ' +\r\n\t\t\t\t'Trying to register and alias for a dispatcher that nas not been registered.',\r\n\t\t\t\tthis\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tthis._createConversionHelpers( { name: alias, dispatchers: [ dispatcher ], isDowncast } );\r\n\t}\r\n\r\n\t/**\r\n\t * Provides a chainable API to assign converters to conversion dispatchers group.\r\n\t *\r\n\t * If the given group name has not been registered, the\r\n\t * {@link module:utils/ckeditorerror~CKEditorError `conversion-for-unknown-group` error} is thrown.\r\n\t *\r\n\t * You can use conversion helpers available directly in the `for()` chain or your custom ones via\r\n\t * the {@link module:engine/conversion/conversionhelpers~ConversionHelpers#add `add()`} method.\r\n\t *\r\n\t * # Using bulit-in conversion helpers\r\n\t *\r\n\t * The `for()` chain comes with a set of conversion helpers which you can use like this:\r\n\t *\r\n\t *\t\teditor.conversion.for( 'downcast' )\r\n\t *\t\t\t.elementToElement( config1 )        // Adds an element-to-element downcast converter.\r\n\t *\t\t\t.attributeToElement( config2 );     // Adds an attribute-to-element downcast converter.\r\n\t *\r\n\t *\t\teditor.conversion.for( 'upcast' )\r\n\t *\t\t\t.elementToAttribute( config3 );     // Adds an element-to-attribute upcast converter.\r\n\t *\r\n\t * Refer to the documentation of built-in conversion helpers to learn about their configuration options.\r\n\t *\r\n\t * * downcast (model-to-view) conversion helpers:\r\n\t *\r\n\t *\t* {@link module:engine/conversion/downcasthelpers~DowncastHelpers#elementToElement `elementToElement()`},\r\n\t *\t* {@link module:engine/conversion/downcasthelpers~DowncastHelpers#attributeToElement `attributeToElement()`},\r\n\t *\t* {@link module:engine/conversion/downcasthelpers~DowncastHelpers#attributeToAttribute `attributeToAttribute()`}.\r\n\t *\t* {@link module:engine/conversion/downcasthelpers~DowncastHelpers#markerToElement `markerToElement()`}.\r\n\t *\t* {@link module:engine/conversion/downcasthelpers~DowncastHelpers#markerToHighlight `markerToHighlight()`}.\r\n\t *\r\n\t * * upcast (view-to-model) conversion helpers:\r\n\t *\r\n\t *\t* {@link module:engine/conversion/upcasthelpers~UpcastHelpers#elementToElement `elementToElement()`},\r\n\t *\t* {@link module:engine/conversion/upcasthelpers~UpcastHelpers#elementToAttribute `elementToAttribute()`},\r\n\t *\t* {@link module:engine/conversion/upcasthelpers~UpcastHelpers#attributeToAttribute `attributeToAttribute()`}.\r\n\t *\t* {@link module:engine/conversion/upcasthelpers~UpcastHelpers#elementToMarker `elementToMarker()`}.\r\n\t *\r\n\t * # Using custom conversion helpers\r\n\t *\r\n\t * If you need to implement a nontypical converter, you can do so by calling:\r\n\t *\r\n\t *\t\teditor.conversion.for( direction ).add( customHelper );\r\n\t *\r\n\t * The `.add()` method takes exactly one parameter, which is a function. This function should accept one parameter that\r\n\t * is a dispatcher instance. The function should add an actual converter to the passed dispatcher instance.\r\n\t *\r\n\t * Example:\r\n\t *\r\n\t *\t\teditor.conversion.for( 'upcast' ).add( dispatcher => {\r\n\t *\t\t\tdispatcher.on( 'element:a',  ( evt, data, conversionApi ) => {\r\n\t *\t\t\t\t// Do something with a view <a> element.\r\n\t *\t\t\t} );\r\n\t *\t\t} );\r\n\t *\r\n\t * Refer to the documentation of {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher}\r\n\t * and {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher} to learn how to write\r\n\t * custom converters.\r\n\t *\r\n\t * @param {String} groupName The name of dispatchers group to add the converters to.\r\n\t * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers|module:engine/conversion/upcasthelpers~UpcastHelpers}\r\n\t */\r\n\tfor( groupName ) {\r\n\t\tif ( !this._helpers.has( groupName ) ) {\r\n\t\t\t/**\r\n\t\t\t * Trying to add a converter to an unknown dispatchers group.\r\n\t\t\t *\r\n\t\t\t * @error conversion-for-unknown-group\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'conversion-for-unknown-group: Trying to add a converter to an unknown dispatchers group.', this );\r\n\t\t}\r\n\r\n\t\treturn this._helpers.get( groupName );\r\n\t}\r\n\r\n\t/**\r\n\t * Sets up converters between the model and the view that convert a model element to a view element (and vice versa).\r\n\t * For example, the model `<paragraph>Foo</paragraph>` is `<p>Foo</p>` in the view.\r\n\t *\r\n\t *\t\t// A simple conversion from the `paragraph` model element to the `<p>` view element (and vice versa).\r\n\t *\t\teditor.conversion.elementToElement( { model: 'paragraph', view: 'p' } );\r\n\t *\r\n\t *\t\t// Override other converters by specifying a converter definition with a higher priority.\r\n\t *\t\teditor.conversion.elementToElement( { model: 'paragraph', view: 'div', converterPriority: 'high' } );\r\n\t *\r\n\t *\t\t// View specified as an object instead of a string.\r\n\t *\t\teditor.conversion.elementToElement( {\r\n\t *\t\t\tmodel: 'fancyParagraph',\r\n\t *\t\t\tview: {\r\n\t *\t\t\t\tname: 'p',\r\n\t *\t\t\t\tclasses: 'fancy'\r\n\t *\t\t\t}\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\t// Use `upcastAlso` to define other view elements that should also be converted to a `paragraph` element.\r\n\t *\t\teditor.conversion.elementToElement( {\r\n\t *\t\t\tmodel: 'paragraph',\r\n\t *\t\t\tview: 'p',\r\n\t *\t\t\tupcastAlso: [\r\n\t *\t\t\t\t'div',\r\n\t *\t\t\t\t{\r\n\t *\t\t\t\t\t// Any element with the `display: block` style.\r\n\t *\t\t\t\t\tstyles: {\r\n\t *\t\t\t\t\t\tdisplay: 'block'\r\n\t *\t\t\t\t\t}\r\n\t *\t\t\t\t}\r\n\t *\t\t\t]\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\t// `upcastAlso` set as callback enables a conversion of a wide range of different view elements.\r\n\t *\t\teditor.conversion.elementToElement( {\r\n\t *\t\t\tmodel: 'heading',\r\n\t *\t\t\tview: 'h2',\r\n\t *\t\t\t// Convert \"headling-like\" paragraphs to headings.\r\n\t *\t\t\tupcastAlso: viewElement => {\r\n\t *\t\t\t\tconst fontSize = viewElement.getStyle( 'font-size' );\r\n\t *\r\n\t *\t\t\t\tif ( !fontSize ) {\r\n\t *\t\t\t\t\treturn null;\r\n\t *\t\t\t\t}\r\n\t *\r\n\t *\t\t\t\tconst match = fontSize.match( /(\\d+)\\s*px/ );\r\n\t *\r\n\t *\t\t\t\tif ( !match ) {\r\n\t *\t\t\t\t\treturn null;\r\n\t *\t\t\t\t}\r\n\t *\r\n\t *\t\t\t\tconst size = Number( match[ 1 ] );\r\n\t *\r\n\t *\t\t\t\tif ( size > 26 ) {\r\n\t *\t\t\t\t\t// Returned value can be an object with the matched properties.\r\n\t *\t\t\t\t\t// These properties will be \"consumed\" during the conversion.\r\n\t *\t\t\t\t\t// See `engine.view.Matcher~MatcherPattern` and `engine.view.Matcher#match` for more details.\r\n\t *\r\n\t *\t\t\t\t\treturn { name: true, styles: [ 'font-size' ] };\r\n\t *\t\t\t\t}\r\n\t *\r\n\t *\t\t\t\treturn null;\r\n\t *\t\t\t}\r\n\t *\t\t} );\r\n\t *\r\n\t * `definition.model` is a `String` with a model element name to convert from or to.\r\n\t * See {@link module:engine/conversion/conversion~ConverterDefinition} to learn about other parameters.\r\n\t *\r\n\t * @param {module:engine/conversion/conversion~ConverterDefinition} definition The converter definition.\r\n\t */\r\n\telementToElement( definition ) {\r\n\t\t// Set up downcast converter.\r\n\t\tthis.for( 'downcast' ).elementToElement( definition );\r\n\r\n\t\t// Set up upcast converter.\r\n\t\tfor ( const { model, view } of _getAllUpcastDefinitions( definition ) ) {\r\n\t\t\tthis.for( 'upcast' )\r\n\t\t\t\t.elementToElement( {\r\n\t\t\t\t\tmodel,\r\n\t\t\t\t\tview,\r\n\t\t\t\t\tconverterPriority: definition.converterPriority\r\n\t\t\t\t} );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets up converters between the model and the view that convert a model attribute to a view element (and vice versa).\r\n\t * For example, a model text node with `\"Foo\"` as data and the `bold` attribute is `<strong>Foo</strong>` in the view.\r\n\t *\r\n\t *\t\t// A simple conversion from the `bold=true` attribute to the `<strong>` view element (and vice versa).\r\n\t *\t\teditor.conversion.attributeToElement( { model: 'bold', view: 'strong' } );\r\n\t *\r\n\t *\t\t// Override other converters by specifying a converter definition with a higher priority.\r\n\t *\t\teditor.conversion.attributeToElement( { model: 'bold', view: 'b', converterPriority: 'high' } );\r\n\t *\r\n\t *\t\t// View specified as an object instead of a string.\r\n\t *\t\teditor.conversion.attributeToElement( {\r\n\t *\t\t\tmodel: 'bold',\r\n\t *\t\t\tview: {\r\n\t *\t\t\t\tname: 'span',\r\n\t *\t\t\t\tclasses: 'bold'\r\n\t *\t\t\t}\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\t// Use `config.model.name` to define the conversion only from a given node type, `$text` in this case.\r\n\t *\t\t// The same attribute on different elements may then be handled by a different converter.\r\n\t *\t\teditor.conversion.attributeToElement( {\r\n\t *\t\t\tmodel: {\r\n\t *\t\t\t\tkey: 'textDecoration',\r\n\t *\t\t\t\tvalues: [ 'underline', 'lineThrough' ],\r\n\t *\t\t\t\tname: '$text'\r\n\t *\t\t\t},\r\n\t *\t\t\tview: {\r\n\t *\t\t\t\tunderline: {\r\n\t *\t\t\t\t\tname: 'span',\r\n\t *\t\t\t\t\tstyles: {\r\n\t *\t\t\t\t\t\t'text-decoration': 'underline'\r\n\t *\t\t\t\t\t}\r\n\t *\t\t\t\t},\r\n\t *\t\t\t\tlineThrough: {\r\n\t *\t\t\t\t\tname: 'span',\r\n\t *\t\t\t\t\tstyles: {\r\n\t *\t\t\t\t\t\t'text-decoration': 'line-through'\r\n\t *\t\t\t\t\t}\r\n\t *\t\t\t\t}\r\n\t *\t\t\t}\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\t// Use `upcastAlso` to define other view elements that should also be converted to the `bold` attribute.\r\n\t *\t\teditor.conversion.attributeToElement( {\r\n\t *\t\t\tmodel: 'bold',\r\n\t *\t\t\tview: 'strong',\r\n\t *\t\t\tupcastAlso: [\r\n\t *\t\t\t\t'b',\r\n\t *\t\t\t\t{\r\n\t *\t\t\t\t\tname: 'span',\r\n\t *\t\t\t\t\tclasses: 'bold'\r\n\t *\t\t\t\t},\r\n\t *\t\t\t\t{\r\n\t *\t\t\t\t\tname: 'span',\r\n\t *\t\t\t\t\tstyles: {\r\n\t *\t\t\t\t\t\t'font-weight': 'bold'\r\n\t *\t\t\t\t\t}\r\n\t *\t\t\t\t},\r\n\t *\t\t\t\tviewElement => {\r\n\t *\t\t\t\t\tconst fontWeight = viewElement.getStyle( 'font-weight' );\r\n\t *\r\n\t *\t\t\t\t\tif ( viewElement.is( 'span' ) && fontWeight && /\\d+/.test() && Number( fontWeight ) > 500 ) {\r\n\t *\t\t\t\t\t\t// Returned value can be an object with the matched properties.\r\n\t *\t\t\t\t\t\t// These properties will be \"consumed\" during the conversion.\r\n\t *\t\t\t\t\t\t// See `engine.view.Matcher~MatcherPattern` and `engine.view.Matcher#match` for more details.\r\n\t *\r\n\t *\t\t\t\t\t\treturn {\r\n\t *\t\t\t\t\t\t\tname: true,\r\n\t *\t\t\t\t\t\t\tstyles: [ 'font-weight' ]\r\n\t *\t\t\t\t\t\t};\r\n\t *\t\t\t\t\t}\r\n\t *\t\t\t\t}\r\n\t *\t\t\t]\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\t// Conversion from and to a model attribute key whose value is an enum (`fontSize=big|small`).\r\n\t *\t\t// `upcastAlso` set as callback enables a conversion of a wide range of different view elements.\r\n\t *\t\teditor.conversion.attributeToElement( {\r\n\t *\t\t\tmodel: {\r\n\t *\t\t\t\tkey: 'fontSize',\r\n\t *\t\t\t\tvalues: [ 'big', 'small' ]\r\n\t *\t\t\t},\r\n\t *\t\t\tview: {\r\n\t *\t\t\t\tbig: {\r\n\t *\t\t\t\t\tname: 'span',\r\n\t *\t\t\t\t\tstyles: {\r\n\t *\t\t\t\t\t\t'font-size': '1.2em'\r\n\t *\t\t\t\t\t}\r\n\t *\t\t\t\t},\r\n\t *\t\t\t\tsmall: {\r\n\t *\t\t\t\t\tname: 'span',\r\n\t *\t\t\t\t\tstyles: {\r\n\t *\t\t\t\t\t\t'font-size': '0.8em'\r\n\t *\t\t\t\t\t}\r\n\t *\t\t\t\t}\r\n\t *\t\t\t},\r\n\t *\t\t\tupcastAlso: {\r\n\t *\t\t\t\tbig: viewElement => {\r\n\t *\t\t\t\t\tconst fontSize = viewElement.getStyle( 'font-size' );\r\n\t *\r\n\t *\t\t\t\t\tif ( !fontSize ) {\r\n\t *\t\t\t\t\t\treturn null;\r\n\t *\t\t\t\t\t}\r\n\t *\r\n\t *\t\t\t\t\tconst match = fontSize.match( /(\\d+)\\s*px/ );\r\n\t *\r\n\t *\t\t\t\t\tif ( !match ) {\r\n\t *\t\t\t\t\t\treturn null;\r\n\t *\t\t\t\t\t}\r\n\t *\r\n\t *\t\t\t\t\tconst size = Number( match[ 1 ] );\r\n\t *\r\n\t *\t\t\t\t\tif ( viewElement.is( 'span' ) && size > 10 ) {\r\n\t *\t\t\t\t\t\t// Returned value can be an object with the matched properties.\r\n\t *\t\t\t\t\t\t// These properties will be \"consumed\" during the conversion.\r\n\t *\t\t\t\t\t\t// See `engine.view.Matcher~MatcherPattern` and `engine.view.Matcher#match` for more details.\r\n\t *\r\n\t *\t\t\t\t\t\treturn { name: true, styles: [ 'font-size' ] };\r\n\t *\t\t\t\t\t}\r\n\t *\r\n\t *\t\t\t\t\treturn null;\r\n\t *\t\t\t\t},\r\n\t *\t\t\t\tsmall: viewElement => {\r\n\t *\t\t\t\t\tconst fontSize = viewElement.getStyle( 'font-size' );\r\n\t *\r\n\t *\t\t\t\t\tif ( !fontSize ) {\r\n\t *\t\t\t\t\t\treturn null;\r\n\t *\t\t\t\t\t}\r\n\t *\r\n\t *\t\t\t\t\tconst match = fontSize.match( /(\\d+)\\s*px/ );\r\n\t *\r\n\t *\t\t\t\t\tif ( !match ) {\r\n\t *\t\t\t\t\t\treturn null;\r\n\t *\t\t\t\t\t}\r\n\t *\r\n\t *\t\t\t\t\tconst size = Number( match[ 1 ] );\r\n\t *\r\n\t *\t\t\t\t\tif ( viewElement.is( 'span' ) && size < 10 ) {\r\n\t *\t\t\t\t\t\t// Returned value can be an object with the matched properties.\r\n\t *\t\t\t\t\t\t// These properties will be \"consumed\" during the conversion.\r\n\t *\t\t\t\t\t\t// See `engine.view.Matcher~MatcherPattern` and `engine.view.Matcher#match` for more details.\r\n\t *\r\n\t *\t\t\t\t\t\treturn { name: true, styles: [ 'font-size' ] };\r\n\t *\t\t\t\t\t}\r\n\t *\r\n\t *\t\t\t\t\treturn null;\r\n\t *\t\t\t\t}\r\n\t *\t\t\t}\r\n\t *\t\t} );\r\n\t *\r\n\t * The `definition.model` parameter specifies which model attribute should be converted from or to. It can be a `{ key, value }` object\r\n\t * describing the attribute key and value to convert or a `String` specifying just the attribute key (then `value` is set to `true`).\r\n\t * See {@link module:engine/conversion/conversion~ConverterDefinition} to learn about other parameters.\r\n\t *\r\n\t * @param {module:engine/conversion/conversion~ConverterDefinition} definition The converter definition.\r\n\t */\r\n\tattributeToElement( definition ) {\r\n\t\t// Set up downcast converter.\r\n\t\tthis.for( 'downcast' ).attributeToElement( definition );\r\n\r\n\t\t// Set up upcast converter.\r\n\t\tfor ( const { model, view } of _getAllUpcastDefinitions( definition ) ) {\r\n\t\t\tthis.for( 'upcast' )\r\n\t\t\t\t.elementToAttribute( {\r\n\t\t\t\t\tview,\r\n\t\t\t\t\tmodel,\r\n\t\t\t\t\tconverterPriority: definition.converterPriority\r\n\t\t\t\t} );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets up converters between the model and the view that convert a model attribute to a view attribute (and vice versa).\r\n\t * For example, `<image src='foo.jpg'></image>` is converted to `<img src='foo.jpg'></img>` (the same attribute key and value).\r\n\t * This type of converters is intended to be used with {@link module:engine/model/element~Element model element} nodes.\r\n\t * To convert text attributes {@link module:engine/conversion/conversion~Conversion#attributeToElement `attributeToElement converter`}\r\n\t * should be set up.\r\n\t *\r\n\t *\t\t// A simple conversion from the `source` model attribute to the `src` view attribute (and vice versa).\r\n\t *\t\teditor.conversion.attributeToAttribute( { model: 'source', view: 'src' } );\r\n\t *\r\n\t *\t\t// Attribute values are strictly specified.\r\n\t *\t\teditor.conversion.attributeToAttribute( {\r\n\t *\t\t\tmodel: {\r\n\t *\t\t\t\tname: 'image',\r\n\t *\t\t\t\tkey: 'aside',\r\n\t *\t\t\t\tvalues: [ 'aside' ]\r\n\t *\t\t\t},\r\n\t *\t\t\tview: {\r\n\t *\t\t\t\taside: {\r\n\t *\t\t\t\t\tname: 'img',\r\n\t *\t\t\t\t\tkey: 'class',\r\n\t *\t\t\t\t\tvalue: [ 'aside', 'half-size' ]\r\n\t *\t\t\t\t}\r\n\t *\t\t\t}\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\t// Set the style attribute.\r\n\t *\t\teditor.conversion.attributeToAttribute( {\r\n\t *\t\t\tmodel: {\r\n\t *\t\t\t\tname: 'image',\r\n\t *\t\t\t\tkey: 'aside',\r\n\t *\t\t\t\tvalues: [ 'aside' ]\r\n\t *\t\t\t},\r\n\t *\t\t\tview: {\r\n\t *\t\t\t\taside: {\r\n\t *\t\t\t\t\tname: 'img',\r\n\t *\t\t\t\t\tkey: 'style',\r\n\t *\t\t\t\t\tvalue: {\r\n\t *\t\t\t\t\t\tfloat: 'right',\r\n\t *\t\t\t\t\t\twidth: '50%',\r\n\t *\t\t\t\t\t\tmargin: '5px'\r\n\t *\t\t\t\t\t}\r\n\t *\t\t\t\t}\r\n\t *\t\t\t}\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\t// Conversion from and to a model attribute key whose value is an enum (`align=right|center`).\r\n\t *\t\t// Use `upcastAlso` to define other view elements that should also be converted to the `align=right` attribute.\r\n\t *\t\teditor.conversion.attributeToAttribute( {\r\n\t *\t\t\tmodel: {\r\n\t *\t\t\t\tkey: 'align',\r\n\t *\t\t\t\tvalues: [ 'right', 'center' ]\r\n\t *\t\t\t},\r\n\t *\t\t\tview: {\r\n\t *\t\t\t\tright: {\r\n\t *\t\t\t\t\tkey: 'class',\r\n\t *\t\t\t\t\tvalue: 'align-right'\r\n\t *\t\t\t\t},\r\n\t *\t\t\t\tcenter: {\r\n\t *\t\t\t\t\tkey: 'class',\r\n\t *\t\t\t\t\tvalue: 'align-center'\r\n\t *\t\t\t\t}\r\n\t *\t\t\t},\r\n\t *\t\t\tupcastAlso: {\r\n\t *\t\t\t\tright: {\r\n\t *\t\t\t\t\tstyles: {\r\n\t *\t\t\t\t\t\t'text-align': 'right'\r\n\t *\t\t\t\t\t}\r\n\t *\t\t\t\t},\r\n\t *\t\t\t\tcenter: {\r\n\t *\t\t\t\t\tstyles: {\r\n\t *\t\t\t\t\t\t'text-align': 'center'\r\n\t *\t\t\t\t\t}\r\n\t *\t\t\t\t}\r\n\t *\t\t\t}\r\n\t *\t\t} );\r\n\t *\r\n\t * The `definition.model` parameter specifies which model attribute should be converted from and to.\r\n\t * It can be a `{ key, [ values ], [ name ] }` object or a `String`, which will be treated like `{ key: definition.model }`.\r\n\t * The `key` property is the model attribute key to convert from and to.\r\n\t * The `values` are the possible model attribute values. If `values` is not set, the model attribute value will be the same as the\r\n\t * view attribute value.\r\n\t * If `name` is set, the conversion will be set up only for model elements with the given name.\r\n\t *\r\n\t * The `definition.view` parameter specifies which view attribute should be converted from and to.\r\n\t * It can be a `{ key, value, [ name ] }` object or a `String`, which will be treated like `{ key: definition.view }`.\r\n\t * The `key` property is the view attribute key to convert from and to.\r\n\t * The `value` is the view attribute value to convert from and to. If `definition.value` is not set, the view attribute value will be\r\n\t * the same as the model attribute value.\r\n\t * If `key` is `'class'`, `value` can be a `String` or an array of `String`s.\r\n\t * If `key` is `'style'`, `value` is an object with key-value pairs.\r\n\t * In other cases, `value` is a `String`.\r\n\t * If `name` is set, the conversion will be set up only for model elements with the given name.\r\n\t * If `definition.model.values` is set, `definition.view` is an object that assigns values from `definition.model.values`\r\n\t * to `{ key, value, [ name ] }` objects.\r\n\t *\r\n\t * `definition.upcastAlso` specifies which other matching view elements should also be upcast to the given model configuration.\r\n\t * If `definition.model.values` is set, `definition.upcastAlso` should be an object assigning values from `definition.model.values`\r\n\t * to {@link module:engine/view/matcher~MatcherPattern}s or arrays of {@link module:engine/view/matcher~MatcherPattern}s.\r\n\t *\r\n\t * **Note:** `definition.model` and `definition.view` form should be mirrored, so the same types of parameters should\r\n\t * be given in both parameters.\r\n\t *\r\n\t * @param {Object} definition The converter definition.\r\n\t * @param {String|Object} definition.model The model attribute to convert from and to.\r\n\t * @param {String|Object} definition.view The view attribute to convert from and to.\r\n\t * @param {module:engine/view/matcher~MatcherPattern|Array.<module:engine/view/matcher~MatcherPattern>} [definition.upcastAlso]\r\n\t * Any view element matching `definition.upcastAlso` will also be converted to the given model attribute. `definition.upcastAlso`\r\n\t * is used only if `config.model.values` is specified.\r\n\t */\r\n\tattributeToAttribute( definition ) {\r\n\t\t// Set up downcast converter.\r\n\t\tthis.for( 'downcast' ).attributeToAttribute( definition );\r\n\r\n\t\t// Set up upcast converter.\r\n\t\tfor ( const { model, view } of _getAllUpcastDefinitions( definition ) ) {\r\n\t\t\tthis.for( 'upcast' )\r\n\t\t\t\t.attributeToAttribute( {\r\n\t\t\t\t\tview,\r\n\t\t\t\t\tmodel\r\n\t\t\t\t} );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and caches conversion helpers for given dispatchers group.\r\n\t *\r\n\t * @private\r\n\t * @param {Object} options\r\n\t * @param {String} options.name Group name.\r\n\t * @param {Array.<module:engine/conversion/downcastdispatcher~DowncastDispatcher|\r\n\t * module:engine/conversion/upcastdispatcher~UpcastDispatcher>} options.dispatchers\r\n\t * @param {Boolean} options.isDowncast\r\n\t */\r\n\t_createConversionHelpers( { name, dispatchers, isDowncast } ) {\r\n\t\tif ( this._helpers.has( name ) ) {\r\n\t\t\t/**\r\n\t\t\t * Trying to register a group name that has already been registered.\r\n\t\t\t *\r\n\t\t\t * @error conversion-group-exists\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'conversion-group-exists: Trying to register a group name that has already been registered.', this );\r\n\t\t}\r\n\r\n\t\tconst helpers = isDowncast ? new DowncastHelpers( dispatchers ) : new UpcastHelpers( dispatchers );\r\n\r\n\t\tthis._helpers.set( name, helpers );\r\n\t}\r\n}\r\n\r\n/**\r\n * Defines how the model should be converted from and to the view.\r\n *\r\n * @typedef {Object} module:engine/conversion/conversion~ConverterDefinition\r\n *\r\n * @property {*} [model] The model conversion definition. Describes the model element or model attribute to convert. This parameter differs\r\n * for different functions that accept `ConverterDefinition`. See the description of the function to learn how to set it.\r\n * @property {module:engine/view/elementdefinition~ElementDefinition|Object} view The definition of the view element to convert from and\r\n * to. If `model` describes multiple values, `view` is an object that assigns these values (`view` object keys) to view element definitions\r\n * (`view` object values).\r\n * @property {module:engine/view/matcher~MatcherPattern|Array.<module:engine/view/matcher~MatcherPattern>} [upcastAlso]\r\n * Any view element matching `upcastAlso` will also be converted to the model. If `model` describes multiple values, `upcastAlso`\r\n * is an object that assigns these values (`upcastAlso` object keys) to {@link module:engine/view/matcher~MatcherPattern}s\r\n * (`upcastAlso` object values).\r\n * @property {module:utils/priorities~PriorityString} [converterPriority] The converter priority.\r\n */\r\n\r\n// Helper function that creates a joint array out of an item passed in `definition.view` and items passed in\r\n// `definition.upcastAlso`.\r\n//\r\n// @param {module:engine/conversion/conversion~ConverterDefinition} definition\r\n// @returns {Array} Array containing view definitions.\r\nfunction* _getAllUpcastDefinitions( definition ) {\r\n\tif ( definition.model.values ) {\r\n\t\tfor ( const value of definition.model.values ) {\r\n\t\t\tconst model = { key: definition.model.key, value };\r\n\t\t\tconst view = definition.view[ value ];\r\n\t\t\tconst upcastAlso = definition.upcastAlso ? definition.upcastAlso[ value ] : undefined;\r\n\r\n\t\t\tyield* _getUpcastDefinition( model, view, upcastAlso );\r\n\t\t}\r\n\t} else {\r\n\t\tyield* _getUpcastDefinition( definition.model, definition.view, definition.upcastAlso );\r\n\t}\r\n}\r\n\r\nfunction* _getUpcastDefinition( model, view, upcastAlso ) {\r\n\tyield { model, view };\r\n\r\n\tif ( upcastAlso ) {\r\n\t\tupcastAlso = Array.isArray( upcastAlso ) ? upcastAlso : [ upcastAlso ];\r\n\r\n\t\tfor ( const upcastAlsoItem of upcastAlso ) {\r\n\t\t\tyield { model, view: upcastAlsoItem };\r\n\t\t}\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/conversion/conversionhelpers\r\n */\r\n\r\n/**\r\n * Base class for conversion helpers.\r\n */\r\nexport default class ConversionHelpers {\r\n\t/**\r\n\t * Creates a conversion helpers instance.\r\n\t *\r\n\t * @param {Array.<module:engine/conversion/downcastdispatcher~DowncastDispatcher|\r\n\t * module:engine/conversion/upcastdispatcher~UpcastDispatcher>} dispatchers\r\n\t */\r\n\tconstructor( dispatchers ) {\r\n\t\tthis._dispatchers = dispatchers;\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a conversion helper.\r\n\t *\r\n\t * **Note**: See full usage example in the `{@link module:engine/conversion/conversion~Conversion#for conversion.for()}`\r\n\t * method description.\r\n\t *\r\n\t * @param {Function} conversionHelper The function to be called on event.\r\n\t * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers|module:engine/conversion/upcasthelpers~UpcastHelpers}\r\n\t */\r\n\tadd( conversionHelper ) {\r\n\t\tfor ( const dispatcher of this._dispatchers ) {\r\n\t\t\tconversionHelper( dispatcher );\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/conversion/downcastdispatcher\r\n */\r\n\r\nimport Consumable from './modelconsumable';\r\nimport Range from '../model/range';\r\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\r\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\r\nimport { extend } from 'lodash-es';\r\n\r\n/**\r\n * `DowncastDispatcher` is a central point of downcasting (conversion from model to view), which is a process of reacting to changes\r\n * in the model and firing a set of events. Callbacks listening to those events are called converters. Those\r\n * converters role is to convert the model changes to changes in view (for example, adding view nodes or\r\n * changing attributes on view elements).\r\n *\r\n * During conversion process, `DowncastDispatcher` fires events, basing on state of the model and prepares\r\n * data for those events. It is important to understand that those events are connected with changes done on model,\r\n * for example: \"node has been inserted\" or \"attribute has changed\". This is in a contrary to upcasting (view to model conversion),\r\n * where we convert view state (view nodes) to a model tree.\r\n *\r\n * The events are prepared basing on a diff created by {@link module:engine/model/differ~Differ Differ}, which buffers them\r\n * and then passes to `DowncastDispatcher` as a diff between old model state and new model state.\r\n *\r\n * Note, that because changes are converted there is a need to have a mapping between model structure and view structure.\r\n * To map positions and elements during downcast (model to view conversion) use {@link module:engine/conversion/mapper~Mapper}.\r\n *\r\n * `DowncastDispatcher` fires following events for model tree changes:\r\n *\r\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:insert insert}\r\n * if a range of nodes has been inserted to the model tree,\r\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:remove remove}\r\n * if a range of nodes has been removed from the model tree,\r\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute attribute}\r\n * if attribute has been added, changed or removed from a model node.\r\n *\r\n * For {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:insert insert}\r\n * and {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute attribute},\r\n * `DowncastDispatcher` generates {@link module:engine/conversion/modelconsumable~ModelConsumable consumables}.\r\n * These are used to have a control over which changes has been already consumed. It is useful when some converters\r\n * overwrite other or converts multiple changes (for example converts insertion of an element and also converts that\r\n * element's attributes during insertion).\r\n *\r\n * Additionally, `DowncastDispatcher` fires events for {@link module:engine/model/markercollection~Marker marker} changes:\r\n *\r\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:addMarker} if a marker has been added,\r\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:removeMarker} if a marker has been removed.\r\n *\r\n * Note, that changing a marker is done through removing the marker from the old range, and adding on the new range,\r\n * so both those events are fired.\r\n *\r\n * Finally, `DowncastDispatcher` also handles firing events for {@link module:engine/model/selection model selection}\r\n * conversion:\r\n *\r\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:selection}\r\n * which converts selection from model to view,\r\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute}\r\n * which is fired for every selection attribute,\r\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:addMarker}\r\n * which is fired for every marker which contains selection.\r\n *\r\n * Unlike model tree and markers, events for selection are not fired for changes but for selection state.\r\n *\r\n * When providing custom listeners for `DowncastDispatcher` remember to check whether given change has not been\r\n * {@link module:engine/conversion/modelconsumable~ModelConsumable#consume consumed} yet.\r\n *\r\n * When providing custom listeners for `DowncastDispatcher` keep in mind that any callback that had\r\n * {@link module:engine/conversion/modelconsumable~ModelConsumable#consume consumed} a value from a consumable and\r\n * converted the change should also stop the event (for efficiency purposes).\r\n *\r\n * When providing custom listeners for `DowncastDispatcher` remember to use provided\r\n * {@link module:engine/view/downcastwriter~DowncastWriter view downcast writer} to apply changes to the view document.\r\n *\r\n * Example of a custom converter for `DowncastDispatcher`:\r\n *\r\n *\t\t// We will convert inserting \"paragraph\" model element into the model.\r\n *\t\tdowncastDispatcher.on( 'insert:paragraph', ( evt, data, conversionApi ) => {\r\n *\t\t\t// Remember to check whether the change has not been consumed yet and consume it.\r\n *\t\t\tif ( conversionApi.consumable.consume( data.item, 'insert' ) ) {\r\n *\t\t\t\treturn;\r\n *\t\t\t}\r\n *\r\n *\t\t\t// Translate position in model to position in view.\r\n *\t\t\tconst viewPosition = conversionApi.mapper.toViewPosition( data.range.start );\r\n *\r\n *\t\t\t// Create <p> element that will be inserted in view at `viewPosition`.\r\n *\t\t\tconst viewElement = conversionApi.writer.createContainerElement( 'p' );\r\n *\r\n *\t\t\t// Bind the newly created view element to model element so positions will map accordingly in future.\r\n *\t\t\tconversionApi.mapper.bindElements( data.item, viewElement );\r\n *\r\n *\t\t\t// Add the newly created view element to the view.\r\n *\t\t\tconversionApi.writer.insert( viewPosition, viewElement );\r\n *\r\n *\t\t\t// Remember to stop the event propagation.\r\n *\t\t\tevt.stop();\r\n *\t\t} );\r\n */\r\nexport default class DowncastDispatcher {\r\n\t/**\r\n\t * Creates a `DowncastDispatcher` instance.\r\n\t *\r\n\t * @see module:engine/conversion/downcastdispatcher~DowncastConversionApi\r\n\t * @param {Object} conversionApi Additional properties for interface that will be passed to events fired\r\n\t * by `DowncastDispatcher`.\r\n\t */\r\n\tconstructor( conversionApi ) {\r\n\t\t/**\r\n\t\t * Interface passed by dispatcher to the events callbacks.\r\n\t\t *\r\n\t\t * @member {module:engine/conversion/downcastdispatcher~DowncastConversionApi}\r\n\t\t */\r\n\t\tthis.conversionApi = extend( { dispatcher: this }, conversionApi );\r\n\t}\r\n\r\n\t/**\r\n\t * Takes {@link module:engine/model/differ~Differ model differ} object with buffered changes and fires conversion basing on it.\r\n\t *\r\n\t * @param {module:engine/model/differ~Differ} differ Differ object with buffered changes.\r\n\t * @param {module:engine/model/markercollection~MarkerCollection} markers Markers connected with converted model.\r\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\r\n\t */\r\n\tconvertChanges( differ, markers, writer ) {\r\n\t\t// Before the view is updated, remove markers which have changed.\r\n\t\tfor ( const change of differ.getMarkersToRemove() ) {\r\n\t\t\tthis.convertMarkerRemove( change.name, change.range, writer );\r\n\t\t}\r\n\r\n\t\t// Convert changes that happened on model tree.\r\n\t\tfor ( const entry of differ.getChanges() ) {\r\n\t\t\tif ( entry.type == 'insert' ) {\r\n\t\t\t\tthis.convertInsert( Range._createFromPositionAndShift( entry.position, entry.length ), writer );\r\n\t\t\t} else if ( entry.type == 'remove' ) {\r\n\t\t\t\tthis.convertRemove( entry.position, entry.length, entry.name, writer );\r\n\t\t\t} else {\r\n\t\t\t\t// entry.type == 'attribute'.\r\n\t\t\t\tthis.convertAttribute( entry.range, entry.attributeKey, entry.attributeOldValue, entry.attributeNewValue, writer );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor ( const markerName of this.conversionApi.mapper.flushUnboundMarkerNames() ) {\r\n\t\t\tconst markerRange = markers.get( markerName ).getRange();\r\n\r\n\t\t\tthis.convertMarkerRemove( markerName, markerRange, writer );\r\n\t\t\tthis.convertMarkerAdd( markerName, markerRange, writer );\r\n\t\t}\r\n\r\n\t\t// After the view is updated, convert markers which have changed.\r\n\t\tfor ( const change of differ.getMarkersToAdd() ) {\r\n\t\t\tthis.convertMarkerAdd( change.name, change.range, writer );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Starts conversion of a range insertion.\r\n\t *\r\n\t * For each node in the range, {@link #event:insert insert event is fired}. For each attribute on each node,\r\n\t * {@link #event:attribute attribute event is fired}.\r\n\t *\r\n\t * @fires insert\r\n\t * @fires attribute\r\n\t * @param {module:engine/model/range~Range} range Inserted range.\r\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\r\n\t */\r\n\tconvertInsert( range, writer ) {\r\n\t\tthis.conversionApi.writer = writer;\r\n\r\n\t\t// Create a list of things that can be consumed, consisting of nodes and their attributes.\r\n\t\tthis.conversionApi.consumable = this._createInsertConsumable( range );\r\n\r\n\t\t// Fire a separate insert event for each node and text fragment contained in the range.\r\n\t\tfor ( const value of range ) {\r\n\t\t\tconst item = value.item;\r\n\t\t\tconst itemRange = Range._createFromPositionAndShift( value.previousPosition, value.length );\r\n\t\t\tconst data = {\r\n\t\t\t\titem,\r\n\t\t\t\trange: itemRange\r\n\t\t\t};\r\n\r\n\t\t\tthis._testAndFire( 'insert', data );\r\n\r\n\t\t\t// Fire a separate addAttribute event for each attribute that was set on inserted items.\r\n\t\t\t// This is important because most attributes converters will listen only to add/change/removeAttribute events.\r\n\t\t\t// If we would not add this part, attributes on inserted nodes would not be converted.\r\n\t\t\tfor ( const key of item.getAttributeKeys() ) {\r\n\t\t\t\tdata.attributeKey = key;\r\n\t\t\t\tdata.attributeOldValue = null;\r\n\t\t\t\tdata.attributeNewValue = item.getAttribute( key );\r\n\r\n\t\t\t\tthis._testAndFire( `attribute:${ key }`, data );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._clearConversionApi();\r\n\t}\r\n\r\n\t/**\r\n\t * Fires conversion of a single node removal. Fires {@link #event:remove remove event} with provided data.\r\n\t *\r\n\t * @param {module:engine/model/position~Position} position Position from which node was removed.\r\n\t * @param {Number} length Offset size of removed node.\r\n\t * @param {String} name Name of removed node.\r\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\r\n\t */\r\n\tconvertRemove( position, length, name, writer ) {\r\n\t\tthis.conversionApi.writer = writer;\r\n\r\n\t\tthis.fire( 'remove:' + name, { position, length }, this.conversionApi );\r\n\r\n\t\tthis._clearConversionApi();\r\n\t}\r\n\r\n\t/**\r\n\t * Starts conversion of attribute change on given `range`.\r\n\t *\r\n\t * For each node in the given `range`, {@link #event:attribute attribute event} is fired with the passed data.\r\n\t *\r\n\t * @fires attribute\r\n\t * @param {module:engine/model/range~Range} range Changed range.\r\n\t * @param {String} key Key of the attribute that has changed.\r\n\t * @param {*} oldValue Attribute value before the change or `null` if the attribute has not been set before.\r\n\t * @param {*} newValue New attribute value or `null` if the attribute has been removed.\r\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\r\n\t */\r\n\tconvertAttribute( range, key, oldValue, newValue, writer ) {\r\n\t\tthis.conversionApi.writer = writer;\r\n\r\n\t\t// Create a list with attributes to consume.\r\n\t\tthis.conversionApi.consumable = this._createConsumableForRange( range, `attribute:${ key }` );\r\n\r\n\t\t// Create a separate attribute event for each node in the range.\r\n\t\tfor ( const value of range ) {\r\n\t\t\tconst item = value.item;\r\n\t\t\tconst itemRange = Range._createFromPositionAndShift( value.previousPosition, value.length );\r\n\t\t\tconst data = {\r\n\t\t\t\titem,\r\n\t\t\t\trange: itemRange,\r\n\t\t\t\tattributeKey: key,\r\n\t\t\t\tattributeOldValue: oldValue,\r\n\t\t\t\tattributeNewValue: newValue\r\n\t\t\t};\r\n\r\n\t\t\tthis._testAndFire( `attribute:${ key }`, data );\r\n\t\t}\r\n\r\n\t\tthis._clearConversionApi();\r\n\t}\r\n\r\n\t/**\r\n\t * Starts model selection conversion.\r\n\t *\r\n\t * Fires events for given {@link module:engine/model/selection~Selection selection} to start selection conversion.\r\n\t *\r\n\t * @fires selection\r\n\t * @fires addMarker\r\n\t * @fires attribute\r\n\t * @param {module:engine/model/selection~Selection} selection Selection to convert.\r\n\t * @param {module:engine/model/markercollection~MarkerCollection} markers Markers connected with converted model.\r\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\r\n\t */\r\n\tconvertSelection( selection, markers, writer ) {\r\n\t\tconst markersAtSelection = Array.from( markers.getMarkersAtPosition( selection.getFirstPosition() ) );\r\n\r\n\t\tthis.conversionApi.writer = writer;\r\n\t\tthis.conversionApi.consumable = this._createSelectionConsumable( selection, markersAtSelection );\r\n\r\n\t\tthis.fire( 'selection', { selection }, this.conversionApi );\r\n\r\n\t\tif ( !selection.isCollapsed ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor ( const marker of markersAtSelection ) {\r\n\t\t\tconst markerRange = marker.getRange();\r\n\r\n\t\t\tif ( !shouldMarkerChangeBeConverted( selection.getFirstPosition(), marker, this.conversionApi.mapper ) ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tconst data = {\r\n\t\t\t\titem: selection,\r\n\t\t\t\tmarkerName: marker.name,\r\n\t\t\t\tmarkerRange\r\n\t\t\t};\r\n\r\n\t\t\tif ( this.conversionApi.consumable.test( selection, 'addMarker:' + marker.name ) ) {\r\n\t\t\t\tthis.fire( 'addMarker:' + marker.name, data, this.conversionApi );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor ( const key of selection.getAttributeKeys() ) {\r\n\t\t\tconst data = {\r\n\t\t\t\titem: selection,\r\n\t\t\t\trange: selection.getFirstRange(),\r\n\t\t\t\tattributeKey: key,\r\n\t\t\t\tattributeOldValue: null,\r\n\t\t\t\tattributeNewValue: selection.getAttribute( key )\r\n\t\t\t};\r\n\r\n\t\t\t// Do not fire event if the attribute has been consumed.\r\n\t\t\tif ( this.conversionApi.consumable.test( selection, 'attribute:' + data.attributeKey ) ) {\r\n\t\t\t\tthis.fire( 'attribute:' + data.attributeKey + ':$text', data, this.conversionApi );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._clearConversionApi();\r\n\t}\r\n\r\n\t/**\r\n\t * Converts added marker. Fires {@link #event:addMarker addMarker} event for each item\r\n\t * in marker's range. If range is collapsed single event is dispatched. See event description for more details.\r\n\t *\r\n\t * @fires addMarker\r\n\t * @param {String} markerName Marker name.\r\n\t * @param {module:engine/model/range~Range} markerRange Marker range.\r\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\r\n\t */\r\n\tconvertMarkerAdd( markerName, markerRange, writer ) {\r\n\t\t// Do not convert if range is in graveyard or not in the document (e.g. in DocumentFragment).\r\n\t\tif ( !markerRange.root.document || markerRange.root.rootName == '$graveyard' ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.conversionApi.writer = writer;\r\n\r\n\t\t// In markers' case, event name == consumable name.\r\n\t\tconst eventName = 'addMarker:' + markerName;\r\n\r\n\t\t//\r\n\t\t// First, fire an event for the whole marker.\r\n\t\t//\r\n\t\tconst consumable = new Consumable();\r\n\t\tconsumable.add( markerRange, eventName );\r\n\r\n\t\tthis.conversionApi.consumable = consumable;\r\n\r\n\t\tthis.fire( eventName, { markerName, markerRange }, this.conversionApi );\r\n\r\n\t\t//\r\n\t\t// Do not fire events for each item inside the range if the range got consumed.\r\n\t\t//\r\n\t\tif ( !consumable.test( markerRange, eventName ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//\r\n\t\t// Then, fire an event for each item inside the marker range.\r\n\t\t//\r\n\t\tthis.conversionApi.consumable = this._createConsumableForRange( markerRange, eventName );\r\n\r\n\t\tfor ( const item of markerRange.getItems() ) {\r\n\t\t\t// Do not fire event for already consumed items.\r\n\t\t\tif ( !this.conversionApi.consumable.test( item, eventName ) ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tconst data = { item, range: Range._createOn( item ), markerName, markerRange };\r\n\r\n\t\t\tthis.fire( eventName, data, this.conversionApi );\r\n\t\t}\r\n\r\n\t\tthis._clearConversionApi();\r\n\t}\r\n\r\n\t/**\r\n\t * Fires conversion of marker removal. Fires {@link #event:removeMarker removeMarker} event with provided data.\r\n\t *\r\n\t * @fires removeMarker\r\n\t * @param {String} markerName Marker name.\r\n\t * @param {module:engine/model/range~Range} markerRange Marker range.\r\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\r\n\t */\r\n\tconvertMarkerRemove( markerName, markerRange, writer ) {\r\n\t\t// Do not convert if range is in graveyard or not in the document (e.g. in DocumentFragment).\r\n\t\tif ( !markerRange.root.document || markerRange.root.rootName == '$graveyard' ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.conversionApi.writer = writer;\r\n\r\n\t\tthis.fire( 'removeMarker:' + markerName, { markerName, markerRange }, this.conversionApi );\r\n\r\n\t\tthis._clearConversionApi();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates {@link module:engine/conversion/modelconsumable~ModelConsumable} with values to consume from given range,\r\n\t * assuming that the range has just been inserted to the model.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/model/range~Range} range Inserted range.\r\n\t * @returns {module:engine/conversion/modelconsumable~ModelConsumable} Values to consume.\r\n\t */\r\n\t_createInsertConsumable( range ) {\r\n\t\tconst consumable = new Consumable();\r\n\r\n\t\tfor ( const value of range ) {\r\n\t\t\tconst item = value.item;\r\n\r\n\t\t\tconsumable.add( item, 'insert' );\r\n\r\n\t\t\tfor ( const key of item.getAttributeKeys() ) {\r\n\t\t\t\tconsumable.add( item, 'attribute:' + key );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn consumable;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates {@link module:engine/conversion/modelconsumable~ModelConsumable} with values to consume for given range.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/model/range~Range} range Affected range.\r\n\t * @param {String} type Consumable type.\r\n\t * @returns {module:engine/conversion/modelconsumable~ModelConsumable} Values to consume.\r\n\t */\r\n\t_createConsumableForRange( range, type ) {\r\n\t\tconst consumable = new Consumable();\r\n\r\n\t\tfor ( const item of range.getItems() ) {\r\n\t\t\tconsumable.add( item, type );\r\n\t\t}\r\n\r\n\t\treturn consumable;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates {@link module:engine/conversion/modelconsumable~ModelConsumable} with selection consumable values.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/model/selection~Selection} selection Selection to create consumable from.\r\n\t * @param {Iterable.<module:engine/model/markercollection~Marker>} markers Markers which contains selection.\r\n\t * @returns {module:engine/conversion/modelconsumable~ModelConsumable} Values to consume.\r\n\t */\r\n\t_createSelectionConsumable( selection, markers ) {\r\n\t\tconst consumable = new Consumable();\r\n\r\n\t\tconsumable.add( selection, 'selection' );\r\n\r\n\t\tfor ( const marker of markers ) {\r\n\t\t\tconsumable.add( selection, 'addMarker:' + marker.name );\r\n\t\t}\r\n\r\n\t\tfor ( const key of selection.getAttributeKeys() ) {\r\n\t\t\tconsumable.add( selection, 'attribute:' + key );\r\n\t\t}\r\n\r\n\t\treturn consumable;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests passed `consumable` to check whether given event can be fired and if so, fires it.\r\n\t *\r\n\t * @private\r\n\t * @fires insert\r\n\t * @fires attribute\r\n\t * @param {String} type Event type.\r\n\t * @param {Object} data Event data.\r\n\t */\r\n\t_testAndFire( type, data ) {\r\n\t\tif ( !this.conversionApi.consumable.test( data.item, type ) ) {\r\n\t\t\t// Do not fire event if the item was consumed.\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst name = data.item.name || '$text';\r\n\r\n\t\tthis.fire( type + ':' + name, data, this.conversionApi );\r\n\t}\r\n\r\n\t/**\r\n\t * Clears conversion API object.\r\n\t *\r\n\t * @private\r\n\t */\r\n\t_clearConversionApi() {\r\n\t\tdelete this.conversionApi.writer;\r\n\t\tdelete this.conversionApi.consumable;\r\n\t}\r\n\r\n\t/**\r\n\t * Fired for inserted nodes.\r\n\t *\r\n\t * `insert` is a namespace for a class of events. Names of actually called events follow this pattern:\r\n\t * `insert:name`. `name` is either `'$text'`, when {@link module:engine/model/text~Text a text node} has been inserted,\r\n\t * or {@link module:engine/model/element~Element#name name} of inserted element.\r\n\t *\r\n\t * This way listeners can either listen to a general `insert` event or specific event (for example `insert:paragraph`).\r\n\t *\r\n\t * @event insert\r\n\t * @param {Object} data Additional information about the change.\r\n\t * @param {module:engine/model/item~Item} data.item Inserted item.\r\n\t * @param {module:engine/model/range~Range} data.range Range spanning over inserted item.\r\n\t * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface\r\n\t * to be used by callback, passed in `DowncastDispatcher` constructor.\r\n\t */\r\n\r\n\t/**\r\n\t * Fired for removed nodes.\r\n\t *\r\n\t * `remove` is a namespace for a class of events. Names of actually called events follow this pattern:\r\n\t * `remove:name`. `name` is either `'$text'`, when {@link module:engine/model/text~Text a text node} has been removed,\r\n\t * or the {@link module:engine/model/element~Element#name name} of removed element.\r\n\t *\r\n\t * This way listeners can either listen to a general `remove` event or specific event (for example `remove:paragraph`).\r\n\t *\r\n\t * @event remove\r\n\t * @param {Object} data Additional information about the change.\r\n\t * @param {module:engine/model/position~Position} data.position Position from which the node has been removed.\r\n\t * @param {Number} data.length Offset size of the removed node.\r\n\t * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface\r\n\t * to be used by callback, passed in `DowncastDispatcher` constructor.\r\n\t */\r\n\r\n\t/**\r\n\t * Fired in the following cases:\r\n\t *\r\n\t * * when an attribute has been added, changed, or removed from a node,\r\n\t * * when a node with an attribute is inserted,\r\n\t * * when collapsed model selection attribute is converted.\r\n\t *\r\n\t * `attribute` is a namespace for a class of events. Names of actually called events follow this pattern:\r\n\t * `attribute:attributeKey:name`. `attributeKey` is the key of added/changed/removed attribute.\r\n\t * `name` is either `'$text'` if change was on {@link module:engine/model/text~Text a text node},\r\n\t * or the {@link module:engine/model/element~Element#name name} of element which attribute has changed.\r\n\t *\r\n\t * This way listeners can either listen to a general `attribute:bold` event or specific event (for example `attribute:src:image`).\r\n\t *\r\n\t * @event attribute\r\n\t * @param {Object} data Additional information about the change.\r\n\t * @param {module:engine/model/item~Item|module:engine/model/documentselection~DocumentSelection} data.item Changed item\r\n\t * or converted selection.\r\n\t * @param {module:engine/model/range~Range} data.range Range spanning over changed item or selection range.\r\n\t * @param {String} data.attributeKey Attribute key.\r\n\t * @param {*} data.attributeOldValue Attribute value before the change. This is `null` when selection attribute is converted.\r\n\t * @param {*} data.attributeNewValue New attribute value.\r\n\t * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface\r\n\t * to be used by callback, passed in `DowncastDispatcher` constructor.\r\n\t */\r\n\r\n\t/**\r\n\t * Fired for {@link module:engine/model/selection~Selection selection} changes.\r\n\t *\r\n\t * @event selection\r\n\t * @param {module:engine/model/selection~Selection} selection Selection that is converted.\r\n\t * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface\r\n\t * to be used by callback, passed in `DowncastDispatcher` constructor.\r\n\t */\r\n\r\n\t/**\r\n\t * Fired when a new marker is added to the model. Also fired when collapsed model selection that is inside marker is converted.\r\n\t *\r\n\t * `addMarker` is a namespace for a class of events. Names of actually called events follow this pattern:\r\n\t * `addMarker:markerName`. By specifying certain marker names, you can make the events even more gradual. For example,\r\n\t * if markers are named `foo:abc`, `foo:bar`, then it is possible to listen to `addMarker:foo` or `addMarker:foo:abc` and\r\n\t * `addMarker:foo:bar` events.\r\n\t *\r\n\t * If the marker range is not collapsed:\r\n\t *\r\n\t * * the event is fired for each item in the marker range one by one,\r\n\t * * `conversionApi.consumable` includes each item of the marker range and the consumable value is same as event name.\r\n\t *\r\n\t * If the marker range is collapsed:\r\n\t *\r\n\t * * there is only one event,\r\n\t * * `conversionApi.consumable` includes marker range with event name.\r\n\t *\r\n\t * If selection inside a marker is converted:\r\n\t *\r\n\t * * there is only one event,\r\n\t * * `conversionApi.consumable` includes selection instance with event name.\r\n\t *\r\n\t * @event addMarker\r\n\t * @param {Object} data Additional information about the change.\r\n\t * @param {module:engine/model/item~Item|module:engine/model/selection~Selection} data.item Item inside the new marker or\r\n\t * the selection that is being converted.\r\n\t * @param {module:engine/model/range~Range} [data.range] Range spanning over converted item. Available only in marker conversion, if\r\n\t * the marker range was not collapsed.\r\n\t * @param {module:engine/model/range~Range} data.markerRange Marker range.\r\n\t * @param {String} data.markerName Marker name.\r\n\t * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface\r\n\t * to be used by callback, passed in `DowncastDispatcher` constructor.\r\n\t */\r\n\r\n\t/**\r\n\t * Fired when marker is removed from the model.\r\n\t *\r\n\t * `removeMarker` is a namespace for a class of events. Names of actually called events follow this pattern:\r\n\t * `removeMarker:markerName`. By specifying certain marker names, you can make the events even more gradual. For example,\r\n\t * if markers are named `foo:abc`, `foo:bar`, then it is possible to listen to `removeMarker:foo` or `removeMarker:foo:abc` and\r\n\t * `removeMarker:foo:bar` events.\r\n\t *\r\n\t * @event removeMarker\r\n\t * @param {Object} data Additional information about the change.\r\n\t * @param {module:engine/model/range~Range} data.markerRange Marker range.\r\n\t * @param {String} data.markerName Marker name.\r\n\t * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface\r\n\t * to be used by callback, passed in `DowncastDispatcher` constructor.\r\n\t */\r\n}\r\n\r\nmix( DowncastDispatcher, EmitterMixin );\r\n\r\n// Helper function, checks whether change of `marker` at `modelPosition` should be converted. Marker changes are not\r\n// converted if they happen inside an element with custom conversion method.\r\n//\r\n// @param {module:engine/model/position~Position} modelPosition\r\n// @param {module:engine/model/markercollection~Marker} marker\r\n// @param {module:engine/conversion/mapper~Mapper} mapper\r\n// @returns {Boolean}\r\nfunction shouldMarkerChangeBeConverted( modelPosition, marker, mapper ) {\r\n\tconst range = marker.getRange();\r\n\tconst ancestors = Array.from( modelPosition.getAncestors() );\r\n\tancestors.shift(); // Remove root element. It cannot be passed to `model.Range#containsItem`.\r\n\tancestors.reverse();\r\n\r\n\tconst hasCustomHandling = ancestors.some( element => {\r\n\t\tif ( range.containsItem( element ) ) {\r\n\t\t\tconst viewElement = mapper.toViewElement( element );\r\n\r\n\t\t\treturn !!viewElement.getCustomProperty( 'addHighlight' );\r\n\t\t}\r\n\t} );\r\n\r\n\treturn !hasCustomHandling;\r\n}\r\n\r\n/**\r\n * Conversion interface that is registered for given {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}\r\n * and is passed as one of parameters when {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher dispatcher}\r\n * fires it's events.\r\n *\r\n * @interface module:engine/conversion/downcastdispatcher~DowncastConversionApi\r\n */\r\n\r\n/**\r\n * The {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher} instance.\r\n *\r\n * @member {module:engine/conversion/downcastdispatcher~DowncastDispatcher} #dispatcher\r\n */\r\n\r\n/**\r\n * Stores information about what parts of processed model item are still waiting to be handled. After a piece of model item\r\n * was converted, appropriate consumable value should be {@link module:engine/conversion/modelconsumable~ModelConsumable#consume consumed}.\r\n *\r\n * @member {module:engine/conversion/modelconsumable~ModelConsumable} #consumable\r\n */\r\n\r\n/**\r\n * The {@link module:engine/conversion/mapper~Mapper} instance.\r\n *\r\n * @member {module:engine/conversion/mapper~Mapper} #mapper\r\n */\r\n\r\n/**\r\n * The {@link module:engine/view/downcastwriter~DowncastWriter} instance used to manipulate data during conversion.\r\n *\r\n * @member {module:engine/view/downcastwriter~DowncastWriter} #writer\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * Contains downcast (model-to-view) converters for {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}.\r\n *\r\n * @module engine/conversion/downcasthelpers\r\n */\r\n\r\nimport ModelRange from '../model/range';\r\nimport ModelSelection from '../model/selection';\r\nimport ModelElement from '../model/element';\r\n\r\nimport ViewAttributeElement from '../view/attributeelement';\r\nimport DocumentSelection from '../model/documentselection';\r\nimport ConversionHelpers from './conversionhelpers';\r\n\r\nimport { cloneDeep } from 'lodash-es';\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\n\r\n/**\r\n * Downcast conversion helper functions.\r\n *\r\n * @extends module:engine/conversion/conversionhelpers~ConversionHelpers\r\n */\r\nexport default class DowncastHelpers extends ConversionHelpers {\r\n\t/**\r\n\t * Model element to view element conversion helper.\r\n\t *\r\n\t * This conversion results in creating a view element. For example, model `<paragraph>Foo</paragraph>` becomes `<p>Foo</p>` in the view.\r\n\t *\r\n\t *\t\teditor.conversion.for( 'downcast' ).elementToElement( {\r\n\t *\t\t\tmodel: 'paragraph',\r\n\t *\t\t\tview: 'p'\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\teditor.conversion.for( 'downcast' ).elementToElement( {\r\n\t *\t\t\tmodel: 'paragraph',\r\n\t *\t\t\tview: 'div',\r\n\t *\t\t\tconverterPriority: 'high'\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\teditor.conversion.for( 'downcast' ).elementToElement( {\r\n\t *\t\t\tmodel: 'fancyParagraph',\r\n\t *\t\t\tview: {\r\n\t *\t\t\t\tname: 'p',\r\n\t *\t\t\t\tclasses: 'fancy'\r\n\t *\t\t\t}\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\teditor.conversion.for( 'downcast' ).elementToElement( {\r\n\t *\t\t\tmodel: 'heading',\r\n\t *\t\t\tview: ( modelElement, viewWriter ) => {\r\n\t *\t\t\t\treturn viewWriter.createContainerElement( 'h' + modelElement.getAttribute( 'level' ) )\r\n\t *\t\t\t}\r\n\t *\t\t} );\r\n\t *\r\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\r\n\t * to the conversion process.\r\n\t *\r\n\t * @method #elementToElement\r\n\t * @param {Object} config Conversion configuration.\r\n\t * @param {String} config.model The name of the model element to convert.\r\n\t * @param {module:engine/view/elementdefinition~ElementDefinition|Function} config.view A view element definition or a function\r\n\t * that takes the model element and {@link module:engine/view/downcastwriter~DowncastWriter view downcast writer}\r\n\t * as parameters and returns a view container element.\r\n\t * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers}\r\n\t */\r\n\telementToElement( config ) {\r\n\t\treturn this.add( downcastElementToElement( config ) );\r\n\t}\r\n\r\n\t/**\r\n\t * Model attribute to view element conversion helper.\r\n\t *\r\n\t * This conversion results in wrapping view nodes with a view attribute element. For example, a model text node with\r\n\t * `\"Foo\"` as data and the `bold` attribute becomes `<strong>Foo</strong>` in the view.\r\n\t *\r\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\r\n\t *\t\t\tmodel: 'bold',\r\n\t *\t\t\tview: 'strong'\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\r\n\t *\t\t\tmodel: 'bold',\r\n\t *\t\t\tview: 'b',\r\n\t *\t\t\tconverterPriority: 'high'\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\r\n\t *\t\t\tmodel: 'invert',\r\n\t *\t\t\tview: {\r\n\t *\t\t\t\tname: 'span',\r\n\t *\t\t\t\tclasses: [ 'font-light', 'bg-dark' ]\r\n\t *\t\t\t}\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\r\n\t *\t\t\tmodel: {\r\n\t *\t\t\t\tkey: 'fontSize',\r\n\t *\t\t\t\tvalues: [ 'big', 'small' ]\r\n\t *\t\t\t},\r\n\t *\t\t\tview: {\r\n\t *\t\t\t\tbig: {\r\n\t *\t\t\t\t\tname: 'span',\r\n\t *\t\t\t\t\tstyles: {\r\n\t *\t\t\t\t\t\t'font-size': '1.2em'\r\n\t *\t\t\t\t\t}\r\n\t *\t\t\t\t},\r\n\t *\t\t\t\tsmall: {\r\n\t *\t\t\t\t\tname: 'span',\r\n\t *\t\t\t\t\tstyles: {\r\n\t *\t\t\t\t\t\t'font-size': '0.8em'\r\n\t *\t\t\t\t\t}\r\n\t *\t\t\t\t}\r\n\t *\t\t\t}\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\r\n\t *\t\t\tmodel: 'bold',\r\n\t *\t\t\tview: ( modelAttributeValue, viewWriter ) => {\r\n\t *\t\t\t\treturn viewWriter.createAttributeElement( 'span', {\r\n\t *\t\t\t\t\tstyle: 'font-weight:' + modelAttributeValue\r\n\t *\t\t\t\t} );\r\n\t *\t\t\t}\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\r\n\t *\t\t\tmodel: {\r\n\t *\t\t\t\tkey: 'color',\r\n\t *\t\t\t\tname: '$text'\r\n\t *\t\t\t},\r\n\t *\t\t\tview: ( modelAttributeValue, viewWriter ) => {\r\n\t *\t\t\t\treturn viewWriter.createAttributeElement( 'span', {\r\n\t *\t\t\t\t\tstyle: 'color:' + modelAttributeValue\r\n\t *\t\t\t\t} );\r\n\t *\t\t\t}\r\n\t *\t\t} );\r\n\t *\r\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\r\n\t * to the conversion process.\r\n\t *\r\n\t * @method #attributeToElement\r\n\t * @param {Object} config Conversion configuration.\r\n\t * @param {String|Object} config.model The key of the attribute to convert from or a `{ key, values }` object. `values` is an array\r\n\t * of `String`s with possible values if the model attribute is an enumerable.\r\n\t * @param {module:engine/view/elementdefinition~ElementDefinition|Function|Object} config.view A view element definition or a function\r\n\t * that takes the model attribute value and {@link module:engine/view/downcastwriter~DowncastWriter view downcast writer}\r\n\t * as parameters and returns a view attribute element. If `config.model.values` is\r\n\t * given, `config.view` should be an object assigning values from `config.model.values` to view element definitions or functions.\r\n\t * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\r\n\t * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers}\r\n\t */\r\n\tattributeToElement( config ) {\r\n\t\treturn this.add( downcastAttributeToElement( config ) );\r\n\t}\r\n\r\n\t/**\r\n\t * Model attribute to view attribute conversion helper.\r\n\t *\r\n\t * This conversion results in adding an attribute to a view node, basing on an attribute from a model node. For example,\r\n\t * `<image src='foo.jpg'></image>` is converted to `<img src='foo.jpg'></img>`.\r\n\t *\r\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\r\n\t *\t\t\tmodel: 'source',\r\n\t *\t\t\tview: 'src'\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\r\n\t *\t\t\tmodel: 'source',\r\n\t *\t\t\tview: 'href',\r\n\t *\t\t\tconverterPriority: 'high'\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\r\n\t *\t\t\tmodel: {\r\n\t *\t\t\t\tname: 'image',\r\n\t *\t\t\t\tkey: 'source'\r\n\t *\t\t\t},\r\n\t *\t\t\tview: 'src'\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\r\n\t *\t\t\tmodel: {\r\n\t *\t\t\t\tname: 'styled',\r\n\t *\t\t\t\tvalues: [ 'dark', 'light' ]\r\n\t *\t\t\t},\r\n\t *\t\t\tview: {\r\n\t *\t\t\t\tdark: {\r\n\t *\t\t\t\t\tkey: 'class',\r\n\t *\t\t\t\t\tvalue: [ 'styled', 'styled-dark' ]\r\n\t *\t\t\t\t},\r\n\t *\t\t\t\tlight: {\r\n\t *\t\t\t\t\tkey: 'class',\r\n\t *\t\t\t\t\tvalue: [ 'styled', 'styled-light' ]\r\n\t *\t\t\t\t}\r\n\t *\t\t\t}\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\r\n\t *\t\t\tmodel: 'styled',\r\n\t *\t\t\tview: modelAttributeValue => ( { key: 'class', value: 'styled-' + modelAttributeValue } )\r\n\t *\t\t} );\r\n\t *\r\n\t * **Note**: Downcasting to a style property requires providing `value` as an object:\r\n\t *\r\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\r\n\t *\t\t\tmodel: 'lineHeight',\r\n\t *\t\t\tview: modelAttributeValue => ( {\r\n\t *\t\t\t\tkey: 'style',\r\n\t *\t\t\t\tvalue: {\r\n\t *\t\t\t\t\t'line-height': modelAttributeValue,\r\n\t *\t\t\t\t\t'border-bottom': '1px dotted #ba2'\r\n\t *\t\t\t\t}\r\n\t *\t\t\t} )\r\n\t *\t\t} );\r\n\t *\r\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\r\n\t * to the conversion process.\r\n\t *\r\n\t * @method #attributeToAttribute\r\n\t * @param {Object} config Conversion configuration.\r\n\t * @param {String|Object} config.model The key of the attribute to convert from or a `{ key, values, [ name ] }` object describing\r\n\t * the attribute key, possible values and, optionally, an element name to convert from.\r\n\t * @param {String|Object|Function} config.view A view attribute key, or a `{ key, value }` object or a function that takes\r\n\t * the model attribute value and returns a `{ key, value }` object. If `key` is `'class'`, `value` can be a `String` or an\r\n\t * array of `String`s. If `key` is `'style'`, `value` is an object with key-value pairs. In other cases, `value` is a `String`.\r\n\t * If `config.model.values` is set, `config.view` should be an object assigning values from `config.model.values` to\r\n\t * `{ key, value }` objects or a functions.\r\n\t * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\r\n\t * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers}\r\n\t */\r\n\tattributeToAttribute( config ) {\r\n\t\treturn this.add( downcastAttributeToAttribute( config ) );\r\n\t}\r\n\r\n\t/**\r\n\t * Model marker to view element conversion helper.\r\n\t *\r\n\t * This conversion results in creating a view element on the boundaries of the converted marker. If the converted marker\r\n\t * is collapsed, only one element is created. For example, model marker set like this: `<paragraph>F[oo b]ar</paragraph>`\r\n\t * becomes `<p>F<span data-marker=\"search\"></span>oo b<span data-marker=\"search\"></span>ar</p>` in the view.\r\n\t *\r\n\t *\t\teditor.conversion.for( 'downcast' ).markerToElement( {\r\n\t *\t\t\tmodel: 'search',\r\n\t *\t\t\tview: 'marker-search'\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\teditor.conversion.for( 'downcast' ).markerToElement( {\r\n\t *\t\t\tmodel: 'search',\r\n\t *\t\t\tview: 'search-result',\r\n\t *\t\t\tconverterPriority: 'high'\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\teditor.conversion.for( 'downcast' ).markerToElement( {\r\n\t *\t\t\tmodel: 'search',\r\n\t *\t\t\tview: {\r\n\t *\t\t\t\tname: 'span',\r\n\t *\t\t\t\tattributes: {\r\n\t *\t\t\t\t\t'data-marker': 'search'\r\n\t *\t\t\t\t}\r\n\t *\t\t\t}\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\teditor.conversion.for( 'downcast' ).markerToElement( {\r\n\t *\t\t\tmodel: 'search',\r\n\t *\t\t\tview: ( markerData, viewWriter ) => {\r\n\t *\t\t\t\treturn viewWriter.createUIElement( 'span', {\r\n\t *\t\t\t\t\t'data-marker': 'search',\r\n\t *\t\t\t\t\t'data-start': markerData.isOpening\r\n\t *\t\t\t\t} );\r\n\t *\t\t\t}\r\n\t *\t\t} );\r\n\t *\r\n\t * If a function is passed as the `config.view` parameter, it will be used to generate both boundary elements. The function\r\n\t * receives the `data` object as a parameter and should return an instance of the\r\n\t * {@link module:engine/view/uielement~UIElement view UI element}. The `data` object and\r\n\t * {@link module:engine/conversion/downcastdispatcher~DowncastConversionApi `conversionApi`} are passed from\r\n\t * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:addMarker}. Additionally,\r\n\t * the `data.isOpening` parameter is passed, which is set to `true` for the marker start boundary element, and `false` to\r\n\t * the marker end boundary element.\r\n\t *\r\n\t * This kind of conversion is useful for saving data into the database, so it should be used in the data conversion pipeline.\r\n\t *\r\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\r\n\t * to the conversion process.\r\n\t *\r\n\t * @method #markerToElement\r\n\t * @param {Object} config Conversion configuration.\r\n\t * @param {String} config.model The name of the model marker (or model marker group) to convert.\r\n\t * @param {module:engine/view/elementdefinition~ElementDefinition|Function} config.view A view element definition or a function\r\n\t * that takes the model marker data as a parameter and returns a view UI element.\r\n\t * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\r\n\t * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers}\r\n\t */\r\n\tmarkerToElement( config ) {\r\n\t\treturn this.add( downcastMarkerToElement( config ) );\r\n\t}\r\n\r\n\t/**\r\n\t * Model marker to highlight conversion helper.\r\n\t *\r\n\t * This conversion results in creating a highlight on view nodes. For this kind of conversion,\r\n\t * {@link module:engine/conversion/downcasthelpers~HighlightDescriptor} should be provided.\r\n\t *\r\n\t * For text nodes, a `<span>` {@link module:engine/view/attributeelement~AttributeElement} is created and it wraps all text nodes\r\n\t * in the converted marker range. For example, a model marker set like this: `<paragraph>F[oo b]ar</paragraph>` becomes\r\n\t * `<p>F<span class=\"comment\">oo b</span>ar</p>` in the view.\r\n\t *\r\n\t * {@link module:engine/view/containerelement~ContainerElement} may provide a custom way of handling highlight. Most often,\r\n\t * the element itself is given classes and attributes described in the highlight descriptor (instead of being wrapped in `<span>`).\r\n\t * For example, a model marker set like this: `[<image src=\"foo.jpg\"></image>]` becomes `<img src=\"foo.jpg\" class=\"comment\"></img>`\r\n\t * in the view.\r\n\t *\r\n\t * For container elements, the conversion is two-step. While the converter processes the highlight descriptor and passes it\r\n\t * to a container element, it is the container element instance itself that applies values from the highlight descriptor.\r\n\t * So, in a sense, the converter takes care of stating what should be applied on what, while the element decides how to apply that.\r\n\t *\r\n\t *\t\teditor.conversion.for( 'downcast' ).markerToHighlight( { model: 'comment', view: { classes: 'comment' } } );\r\n\t *\r\n\t *\t\teditor.conversion.for( 'downcast' ).markerToHighlight( {\r\n\t *\t\t\tmodel: 'comment',\r\n\t *\t\t\tview: { classes: 'new-comment' },\r\n\t *\t\t\tconverterPriority: 'high'\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\teditor.conversion.for( 'downcast' ).markerToHighlight( {\r\n\t *\t\t\tmodel: 'comment',\r\n\t *\t\t\tview: data => {\r\n\t *\t\t\t\t// Assuming that the marker name is in a form of comment:commentType.\r\n\t *\t\t\t\tconst commentType = data.markerName.split( ':' )[ 1 ];\r\n\t *\r\n\t *\t\t\t\treturn {\r\n\t *\t\t\t\t\tclasses: [ 'comment', 'comment-' + commentType ]\r\n\t *\t\t\t\t};\r\n\t *\t\t\t}\r\n\t *\t\t} );\r\n\t *\r\n\t * If a function is passed as the `config.view` parameter, it will be used to generate the highlight descriptor. The function\r\n\t * receives the `data` object as a parameter and should return a\r\n\t * {@link module:engine/conversion/downcasthelpers~HighlightDescriptor highlight descriptor}.\r\n\t * The `data` object properties are passed from {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:addMarker}.\r\n\t *\r\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\r\n\t * to the conversion process.\r\n\t *\r\n\t * @method #markerToHighlight\r\n\t * @param {Object} config Conversion configuration.\r\n\t * @param {String} config.model The name of the model marker (or model marker group) to convert.\r\n\t * @param {module:engine/conversion/downcasthelpers~HighlightDescriptor|Function} config.view A highlight descriptor\r\n\t * that will be used for highlighting or a function that takes the model marker data as a parameter and returns a highlight descriptor.\r\n\t * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\r\n\t * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers}\r\n\t */\r\n\tmarkerToHighlight( config ) {\r\n\t\treturn this.add( downcastMarkerToHighlight( config ) );\r\n\t}\r\n}\r\n\r\n/**\r\n * Function factory that creates a default downcast converter for text insertion changes.\r\n *\r\n * The converter automatically consumes the corresponding value from the consumables list and stops the event (see\r\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}).\r\n *\r\n *\t\tmodelDispatcher.on( 'insert:$text', insertText() );\r\n *\r\n * @returns {Function} Insert text event converter.\r\n */\r\nexport function insertText() {\r\n\treturn ( evt, data, conversionApi ) => {\r\n\t\tif ( !conversionApi.consumable.consume( data.item, 'insert' ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst viewWriter = conversionApi.writer;\r\n\t\tconst viewPosition = conversionApi.mapper.toViewPosition( data.range.start );\r\n\t\tconst viewText = viewWriter.createText( data.item.data );\r\n\r\n\t\tviewWriter.insert( viewPosition, viewText );\r\n\t};\r\n}\r\n\r\n/**\r\n * Function factory that creates a default downcast converter for node remove changes.\r\n *\r\n *\t\tmodelDispatcher.on( 'remove', remove() );\r\n *\r\n * @returns {Function} Remove event converter.\r\n */\r\nexport function remove() {\r\n\treturn ( evt, data, conversionApi ) => {\r\n\t\t// Find view range start position by mapping model position at which the remove happened.\r\n\t\tconst viewStart = conversionApi.mapper.toViewPosition( data.position );\r\n\r\n\t\tconst modelEnd = data.position.getShiftedBy( data.length );\r\n\t\tconst viewEnd = conversionApi.mapper.toViewPosition( modelEnd, { isPhantom: true } );\r\n\r\n\t\tconst viewRange = conversionApi.writer.createRange( viewStart, viewEnd );\r\n\r\n\t\t// Trim the range to remove in case some UI elements are on the view range boundaries.\r\n\t\tconst removed = conversionApi.writer.remove( viewRange.getTrimmed() );\r\n\r\n\t\t// After the range is removed, unbind all view elements from the model.\r\n\t\t// Range inside view document fragment is used to unbind deeply.\r\n\t\tfor ( const child of conversionApi.writer.createRangeIn( removed ).getItems() ) {\r\n\t\t\tconversionApi.mapper.unbindViewElement( child );\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * Creates a `<span>` {@link module:engine/view/attributeelement~AttributeElement view attribute element} from the information\r\n * provided by the {@link module:engine/conversion/downcasthelpers~HighlightDescriptor highlight descriptor} object. If a priority\r\n * is not provided in the descriptor, the default priority will be used.\r\n *\r\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer\r\n * @param {module:engine/conversion/downcasthelpers~HighlightDescriptor} descriptor\r\n * @returns {module:engine/view/attributeelement~AttributeElement}\r\n */\r\nexport function createViewElementFromHighlightDescriptor( writer, descriptor ) {\r\n\tconst viewElement = writer.createAttributeElement( 'span', descriptor.attributes );\r\n\r\n\tif ( descriptor.classes ) {\r\n\t\tviewElement._addClass( descriptor.classes );\r\n\t}\r\n\r\n\tif ( descriptor.priority ) {\r\n\t\tviewElement._priority = descriptor.priority;\r\n\t}\r\n\r\n\tviewElement._id = descriptor.id;\r\n\r\n\treturn viewElement;\r\n}\r\n\r\n/**\r\n * Function factory that creates a converter which converts a non-collapsed {@link module:engine/model/selection~Selection model selection}\r\n * to a {@link module:engine/view/documentselection~DocumentSelection view selection}. The converter consumes appropriate\r\n * value from the `consumable` object and maps model positions from the selection to view positions.\r\n *\r\n *\t\tmodelDispatcher.on( 'selection', convertRangeSelection() );\r\n *\r\n * @returns {Function} Selection converter.\r\n */\r\nexport function convertRangeSelection() {\r\n\treturn ( evt, data, conversionApi ) => {\r\n\t\tconst selection = data.selection;\r\n\r\n\t\tif ( selection.isCollapsed ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( !conversionApi.consumable.consume( selection, 'selection' ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst viewRanges = [];\r\n\r\n\t\tfor ( const range of selection.getRanges() ) {\r\n\t\t\tconst viewRange = conversionApi.mapper.toViewRange( range );\r\n\t\t\tviewRanges.push( viewRange );\r\n\t\t}\r\n\r\n\t\tconversionApi.writer.setSelection( viewRanges, { backward: selection.isBackward } );\r\n\t};\r\n}\r\n\r\n/**\r\n * Function factory that creates a converter which converts a collapsed {@link module:engine/model/selection~Selection model selection} to\r\n * a {@link module:engine/view/documentselection~DocumentSelection view selection}. The converter consumes appropriate\r\n * value from the `consumable` object, maps the model selection position to the view position and breaks\r\n * {@link module:engine/view/attributeelement~AttributeElement attribute elements} at the selection position.\r\n *\r\n *\t\tmodelDispatcher.on( 'selection', convertCollapsedSelection() );\r\n *\r\n * An example of the view state before and after converting the collapsed selection:\r\n *\r\n *\t\t   <p><strong>f^oo<strong>bar</p>\r\n *\t\t-> <p><strong>f</strong>^<strong>oo</strong>bar</p>\r\n *\r\n * By breaking attribute elements like `<strong>`, the selection is in a correct element. Then, when the selection attribute is\r\n * converted, broken attributes might be merged again, or the position where the selection is may be wrapped\r\n * with different, appropriate attribute elements.\r\n *\r\n * See also {@link module:engine/conversion/downcasthelpers~clearAttributes} which does a clean-up\r\n * by merging attributes.\r\n *\r\n * @returns {Function} Selection converter.\r\n */\r\nexport function convertCollapsedSelection() {\r\n\treturn ( evt, data, conversionApi ) => {\r\n\t\tconst selection = data.selection;\r\n\r\n\t\tif ( !selection.isCollapsed ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( !conversionApi.consumable.consume( selection, 'selection' ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst viewWriter = conversionApi.writer;\r\n\t\tconst modelPosition = selection.getFirstPosition();\r\n\t\tconst viewPosition = conversionApi.mapper.toViewPosition( modelPosition );\r\n\t\tconst brokenPosition = viewWriter.breakAttributes( viewPosition );\r\n\r\n\t\tviewWriter.setSelection( brokenPosition );\r\n\t};\r\n}\r\n\r\n/**\r\n * Function factory that creates a converter which clears artifacts after the previous\r\n * {@link module:engine/model/selection~Selection model selection} conversion. It removes all empty\r\n * {@link module:engine/view/attributeelement~AttributeElement view attribute elements} and merges sibling attributes at all start and end\r\n * positions of all ranges.\r\n *\r\n *\t\t   <p><strong>^</strong></p>\r\n *\t\t-> <p>^</p>\r\n *\r\n *\t\t   <p><strong>foo</strong>^<strong>bar</strong>bar</p>\r\n *\t\t-> <p><strong>foo^bar<strong>bar</p>\r\n *\r\n *\t\t   <p><strong>foo</strong><em>^</em><strong>bar</strong>bar</p>\r\n *\t\t-> <p><strong>foo^bar<strong>bar</p>\r\n *\r\n * This listener should be assigned before any converter for the new selection:\r\n *\r\n *\t\tmodelDispatcher.on( 'selection', clearAttributes() );\r\n *\r\n * See {@link module:engine/conversion/downcasthelpers~convertCollapsedSelection}\r\n * which does the opposite by breaking attributes in the selection position.\r\n *\r\n * @returns {Function} Selection converter.\r\n */\r\nexport function clearAttributes() {\r\n\treturn ( evt, data, conversionApi ) => {\r\n\t\tconst viewWriter = conversionApi.writer;\r\n\t\tconst viewSelection = viewWriter.document.selection;\r\n\r\n\t\tfor ( const range of viewSelection.getRanges() ) {\r\n\t\t\t// Not collapsed selection should not have artifacts.\r\n\t\t\tif ( range.isCollapsed ) {\r\n\t\t\t\t// Position might be in the node removed by the view writer.\r\n\t\t\t\tif ( range.end.parent.isAttached() ) {\r\n\t\t\t\t\tconversionApi.writer.mergeAttributes( range.start );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tviewWriter.setSelection( null );\r\n\t};\r\n}\r\n\r\n/**\r\n * Function factory that creates a converter which converts set/change/remove attribute changes from the model to the view.\r\n * It can also be used to convert selection attributes. In that case, an empty attribute element will be created and the\r\n * selection will be put inside it.\r\n *\r\n * Attributes from the model are converted to a view element that will be wrapping these view nodes that are bound to\r\n * model elements having the given attribute. This is useful for attributes like `bold` that may be set on text nodes in the model\r\n * but are represented as an element in the view:\r\n *\r\n *\t\t[paragraph]              MODEL ====> VIEW        <p>\r\n *\t\t\t|- a {bold: true}                             |- <b>\r\n *\t\t\t|- b {bold: true}                             |   |- ab\r\n *\t\t\t|- c                                          |- c\r\n *\r\n * Passed `Function` will be provided with the attribute value and then all the parameters of the\r\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute `attribute` event}.\r\n * It is expected that the function returns an {@link module:engine/view/element~Element}.\r\n * The result of the function will be the wrapping element.\r\n * When the provided `Function` does not return any element, no conversion will take place.\r\n *\r\n * The converter automatically consumes the corresponding value from the consumables list and stops the event (see\r\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}).\r\n *\r\n *\t\tmodelDispatcher.on( 'attribute:bold', wrap( ( modelAttributeValue, viewWriter ) => {\r\n *\t\t\treturn viewWriter.createAttributeElement( 'strong' );\r\n *\t\t} );\r\n *\r\n * @protected\r\n * @param {Function} elementCreator Function returning a view element that will be used for wrapping.\r\n * @returns {Function} Set/change attribute converter.\r\n */\r\nexport function wrap( elementCreator ) {\r\n\treturn ( evt, data, conversionApi ) => {\r\n\t\t// Recreate current wrapping node. It will be used to unwrap view range if the attribute value has changed\r\n\t\t// or the attribute was removed.\r\n\t\tconst oldViewElement = elementCreator( data.attributeOldValue, conversionApi.writer );\r\n\r\n\t\t// Create node to wrap with.\r\n\t\tconst newViewElement = elementCreator( data.attributeNewValue, conversionApi.writer );\r\n\r\n\t\tif ( !oldViewElement && !newViewElement ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( !conversionApi.consumable.consume( data.item, evt.name ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst viewWriter = conversionApi.writer;\r\n\t\tconst viewSelection = viewWriter.document.selection;\r\n\r\n\t\tif ( data.item instanceof ModelSelection || data.item instanceof DocumentSelection ) {\r\n\t\t\t// Selection attribute conversion.\r\n\t\t\tviewWriter.wrap( viewSelection.getFirstRange(), newViewElement );\r\n\t\t} else {\r\n\t\t\t// Node attribute conversion.\r\n\t\t\tlet viewRange = conversionApi.mapper.toViewRange( data.range );\r\n\r\n\t\t\t// First, unwrap the range from current wrapper.\r\n\t\t\tif ( data.attributeOldValue !== null && oldViewElement ) {\r\n\t\t\t\tviewRange = viewWriter.unwrap( viewRange, oldViewElement );\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.attributeNewValue !== null && newViewElement ) {\r\n\t\t\t\tviewWriter.wrap( viewRange, newViewElement );\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * Function factory that creates a converter which converts node insertion changes from the model to the view.\r\n * The function passed will be provided with all the parameters of the dispatcher's\r\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:insert `insert` event}.\r\n * It is expected that the function returns an {@link module:engine/view/element~Element}.\r\n * The result of the function will be inserted into the view.\r\n *\r\n * The converter automatically consumes the corresponding value from the consumables list, stops the event (see\r\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}) and binds the model and view elements.\r\n *\r\n *\t\tdowncastDispatcher.on(\r\n *\t\t\t'insert:myElem',\r\n *\t\t\tinsertElement( ( modelItem, viewWriter ) => {\r\n *\t\t\t\tconst text = viewWriter.createText( 'myText' );\r\n *\t\t\t\tconst myElem = viewWriter.createElement( 'myElem', { myAttr: 'my-' + modelItem.getAttribute( 'myAttr' ) }, text );\r\n *\r\n *\t\t\t\t// Do something fancy with `myElem` using `modelItem` or other parameters.\r\n *\r\n *\t\t\t\treturn myElem;\r\n *\t\t\t}\r\n *\t\t) );\r\n *\r\n * @protected\r\n * @param {Function} elementCreator Function returning a view element, which will be inserted.\r\n * @returns {Function} Insert element event converter.\r\n */\r\nexport function insertElement( elementCreator ) {\r\n\treturn ( evt, data, conversionApi ) => {\r\n\t\tconst viewElement = elementCreator( data.item, conversionApi.writer );\r\n\r\n\t\tif ( !viewElement ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( !conversionApi.consumable.consume( data.item, 'insert' ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst viewPosition = conversionApi.mapper.toViewPosition( data.range.start );\r\n\r\n\t\tconversionApi.mapper.bindElements( data.item, viewElement );\r\n\t\tconversionApi.writer.insert( viewPosition, viewElement );\r\n\t};\r\n}\r\n\r\n/**\r\n * Function factory that creates a converter which converts marker adding change to the\r\n * {@link module:engine/view/uielement~UIElement view UI element}.\r\n *\r\n * The view UI element that will be added to the view depends on the passed parameter. See {@link ~insertElement}.\r\n * In case of a non-collapsed range, the UI element will not wrap nodes but separate elements will be placed at the beginning\r\n * and at the end of the range.\r\n *\r\n * This converter binds created UI elements with the marker name using {@link module:engine/conversion/mapper~Mapper#bindElementToMarker}.\r\n *\r\n * @protected\r\n * @param {module:engine/view/uielement~UIElement|Function} elementCreator A view UI element or a function returning the view element\r\n * that will be inserted.\r\n * @returns {Function} Insert element event converter.\r\n */\r\nexport function insertUIElement( elementCreator ) {\r\n\treturn ( evt, data, conversionApi ) => {\r\n\t\t// Create two view elements. One will be inserted at the beginning of marker, one at the end.\r\n\t\t// If marker is collapsed, only \"opening\" element will be inserted.\r\n\t\tdata.isOpening = true;\r\n\t\tconst viewStartElement = elementCreator( data, conversionApi.writer );\r\n\r\n\t\tdata.isOpening = false;\r\n\t\tconst viewEndElement = elementCreator( data, conversionApi.writer );\r\n\r\n\t\tif ( !viewStartElement || !viewEndElement ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst markerRange = data.markerRange;\r\n\r\n\t\t// Marker that is collapsed has consumable build differently that non-collapsed one.\r\n\t\t// For more information see `addMarker` event description.\r\n\t\t// If marker's range is collapsed - check if it can be consumed.\r\n\t\tif ( markerRange.isCollapsed && !conversionApi.consumable.consume( markerRange, evt.name ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// If marker's range is not collapsed - consume all items inside.\r\n\t\tfor ( const value of markerRange ) {\r\n\t\t\tif ( !conversionApi.consumable.consume( value.item, evt.name ) ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst mapper = conversionApi.mapper;\r\n\t\tconst viewWriter = conversionApi.writer;\r\n\r\n\t\t// Add \"opening\" element.\r\n\t\tviewWriter.insert( mapper.toViewPosition( markerRange.start ), viewStartElement );\r\n\t\tconversionApi.mapper.bindElementToMarker( viewStartElement, data.markerName );\r\n\r\n\t\t// Add \"closing\" element only if range is not collapsed.\r\n\t\tif ( !markerRange.isCollapsed ) {\r\n\t\t\tviewWriter.insert( mapper.toViewPosition( markerRange.end ), viewEndElement );\r\n\t\t\tconversionApi.mapper.bindElementToMarker( viewEndElement, data.markerName );\r\n\t\t}\r\n\r\n\t\tevt.stop();\r\n\t};\r\n}\r\n\r\n// Function factory that returns a default downcast converter for removing a {@link module:engine/view/uielement~UIElement UI element}\r\n// basing on marker remove change.\r\n//\r\n// This converter unbinds elements from the marker name.\r\n//\r\n// @returns {Function} Removed UI element converter.\r\nfunction removeUIElement() {\r\n\treturn ( evt, data, conversionApi ) => {\r\n\t\tconst elements = conversionApi.mapper.markerNameToElements( data.markerName );\r\n\r\n\t\tif ( !elements ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor ( const element of elements ) {\r\n\t\t\tconversionApi.mapper.unbindElementFromMarkerName( element, data.markerName );\r\n\t\t\tconversionApi.writer.clear( conversionApi.writer.createRangeOn( element ), element );\r\n\t\t}\r\n\r\n\t\tconversionApi.writer.clearClonedElementsGroup( data.markerName );\r\n\r\n\t\tevt.stop();\r\n\t};\r\n}\r\n\r\n// Function factory that creates a converter which converts set/change/remove attribute changes from the model to the view.\r\n//\r\n// Attributes from the model are converted to the view element attributes in the view. You may provide a custom function to generate\r\n// a key-value attribute pair to add/change/remove. If not provided, model attributes will be converted to view element\r\n// attributes on a one-to-one basis.\r\n//\r\n// *Note:** The provided attribute creator should always return the same `key` for a given attribute from the model.\r\n//\r\n// The converter automatically consumes the corresponding value from the consumables list and stops the event (see\r\n// {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}).\r\n//\r\n//\t\tmodelDispatcher.on( 'attribute:customAttr:myElem', changeAttribute( ( value, data ) => {\r\n//\t\t\t// Change attribute key from `customAttr` to `class` in the view.\r\n//\t\t\tconst key = 'class';\r\n//\t\t\tlet value = data.attributeNewValue;\r\n//\r\n//\t\t\t// Force attribute value to 'empty' if the model element is empty.\r\n//\t\t\tif ( data.item.childCount === 0 ) {\r\n//\t\t\t\tvalue = 'empty';\r\n//\t\t\t}\r\n//\r\n//\t\t\t// Return the key-value pair.\r\n//\t\t\treturn { key, value };\r\n//\t\t} ) );\r\n//\r\n// @param {Function} [attributeCreator] Function returning an object with two properties: `key` and `value`, which\r\n// represent the attribute key and attribute value to be set on a {@link module:engine/view/element~Element view element}.\r\n// The function is passed the model attribute value as the first parameter and additional data about the change as the second parameter.\r\n// @returns {Function} Set/change attribute converter.\r\nfunction changeAttribute( attributeCreator ) {\r\n\treturn ( evt, data, conversionApi ) => {\r\n\t\tconst oldAttribute = attributeCreator( data.attributeOldValue, data );\r\n\t\tconst newAttribute = attributeCreator( data.attributeNewValue, data );\r\n\r\n\t\tif ( !oldAttribute && !newAttribute ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( !conversionApi.consumable.consume( data.item, evt.name ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst viewElement = conversionApi.mapper.toViewElement( data.item );\r\n\t\tconst viewWriter = conversionApi.writer;\r\n\r\n\t\t// If model item cannot be mapped to a view element, it means item is not an `Element` instance but a `TextProxy` node.\r\n\t\t// Only elements can have attributes in a view so do not proceed for anything else (#1587).\r\n\t\tif ( !viewElement ) {\r\n\t\t\t/**\r\n\t\t\t * This error occurs when a {@link module:engine/model/textproxy~TextProxy text node's} attribute is to be downcasted\r\n\t\t\t * by {@link module:engine/conversion/conversion~Conversion#attributeToAttribute `Attribute to Attribute converter`}.\r\n\t\t\t * In most cases it is caused by converters misconfiguration when only \"generic\" converter is defined:\r\n\t\t\t *\r\n\t\t\t *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\r\n\t\t\t *\t\t\tmodel: 'attribute-name',\r\n\t\t\t *\t\t\tview: 'attribute-name'\r\n\t\t\t *\t\t} ) );\r\n\t\t\t *\r\n\t\t\t * and given attribute is used on text node, for example:\r\n\t\t\t *\r\n\t\t\t *\t\tmodel.change( writer => {\r\n\t\t\t *\t\t\twriter.insertText( 'Foo', { 'attribute-name': 'bar' }, parent, 0 );\r\n\t\t\t *\t\t} );\r\n\t\t\t *\r\n\t\t\t * In such cases, to convert the same attribute for both {@link module:engine/model/element~Element}\r\n\t\t\t * and {@link module:engine/model/textproxy~TextProxy `Text`} nodes, text specific\r\n\t\t\t * {@link module:engine/conversion/conversion~Conversion#attributeToElement `Attribute to Element converter`}\r\n\t\t\t * with higher {@link module:utils/priorities~PriorityString priority} must also be defined:\r\n\t\t\t *\r\n\t\t\t *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\r\n\t\t\t *\t\t\tmodel: {\r\n\t\t\t *\t\t\t\tkey: 'attribute-name',\r\n\t\t\t *\t\t\t\tname: '$text'\r\n\t\t\t *\t\t\t},\r\n\t\t\t *\t\t\tview: ( value, writer ) => {\r\n\t\t\t *\t\t\t\treturn writer.createAttributeElement( 'span', { 'attribute-name': value } );\r\n\t\t\t *\t\t\t},\r\n\t\t\t *\t\t\tconverterPriority: 'high'\r\n\t\t\t *\t\t} ) );\r\n\t\t\t *\r\n\t\t\t * @error conversion-attribute-to-attribute-on-text\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'conversion-attribute-to-attribute-on-text: ' +\r\n\t\t\t\t'Trying to convert text node\\'s attribute with attribute-to-attribute converter.',\r\n\t\t\t\t[ data, conversionApi ]\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\t// First remove the old attribute if there was one.\r\n\t\tif ( data.attributeOldValue !== null && oldAttribute ) {\r\n\t\t\tif ( oldAttribute.key == 'class' ) {\r\n\t\t\t\tconst classes = Array.isArray( oldAttribute.value ) ? oldAttribute.value : [ oldAttribute.value ];\r\n\r\n\t\t\t\tfor ( const className of classes ) {\r\n\t\t\t\t\tviewWriter.removeClass( className, viewElement );\r\n\t\t\t\t}\r\n\t\t\t} else if ( oldAttribute.key == 'style' ) {\r\n\t\t\t\tconst keys = Object.keys( oldAttribute.value );\r\n\r\n\t\t\t\tfor ( const key of keys ) {\r\n\t\t\t\t\tviewWriter.removeStyle( key, viewElement );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tviewWriter.removeAttribute( oldAttribute.key, viewElement );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Then set the new attribute.\r\n\t\tif ( data.attributeNewValue !== null && newAttribute ) {\r\n\t\t\tif ( newAttribute.key == 'class' ) {\r\n\t\t\t\tconst classes = Array.isArray( newAttribute.value ) ? newAttribute.value : [ newAttribute.value ];\r\n\r\n\t\t\t\tfor ( const className of classes ) {\r\n\t\t\t\t\tviewWriter.addClass( className, viewElement );\r\n\t\t\t\t}\r\n\t\t\t} else if ( newAttribute.key == 'style' ) {\r\n\t\t\t\tconst keys = Object.keys( newAttribute.value );\r\n\r\n\t\t\t\tfor ( const key of keys ) {\r\n\t\t\t\t\tviewWriter.setStyle( key, newAttribute.value[ key ], viewElement );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tviewWriter.setAttribute( newAttribute.key, newAttribute.value, viewElement );\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\n// Function factory that creates a converter which converts the text inside marker's range. The converter wraps the text with\r\n// {@link module:engine/view/attributeelement~AttributeElement} created from the provided descriptor.\r\n// See {link module:engine/conversion/downcasthelpers~createViewElementFromHighlightDescriptor}.\r\n//\r\n// It can also be used to convert the selection that is inside a marker. In that case, an empty attribute element will be\r\n// created and the selection will be put inside it.\r\n//\r\n// If the highlight descriptor does not provide the `priority` property, `10` will be used.\r\n//\r\n// If the highlight descriptor does not provide the `id` property, the name of the marker will be used.\r\n//\r\n// This converter binds the created {@link module:engine/view/attributeelement~AttributeElement attribute elemens} with the marker name\r\n// using the {@link module:engine/conversion/mapper~Mapper#bindElementToMarker} method.\r\n//\r\n// @param {module:engine/conversion/downcasthelpers~HighlightDescriptor|Function} highlightDescriptor\r\n// @returns {Function}\r\nfunction highlightText( highlightDescriptor ) {\r\n\treturn ( evt, data, conversionApi ) => {\r\n\t\tif ( !data.item ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( !( data.item instanceof ModelSelection || data.item instanceof DocumentSelection ) && !data.item.is( 'textProxy' ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst descriptor = prepareDescriptor( highlightDescriptor, data, conversionApi );\r\n\r\n\t\tif ( !descriptor ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( !conversionApi.consumable.consume( data.item, evt.name ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst viewWriter = conversionApi.writer;\r\n\t\tconst viewElement = createViewElementFromHighlightDescriptor( viewWriter, descriptor );\r\n\t\tconst viewSelection = viewWriter.document.selection;\r\n\r\n\t\tif ( data.item instanceof ModelSelection || data.item instanceof DocumentSelection ) {\r\n\t\t\tviewWriter.wrap( viewSelection.getFirstRange(), viewElement, viewSelection );\r\n\t\t} else {\r\n\t\t\tconst viewRange = conversionApi.mapper.toViewRange( data.range );\r\n\t\t\tconst rangeAfterWrap = viewWriter.wrap( viewRange, viewElement );\r\n\r\n\t\t\tfor ( const element of rangeAfterWrap.getItems() ) {\r\n\t\t\t\tif ( element.is( 'attributeElement' ) && element.isSimilar( viewElement ) ) {\r\n\t\t\t\t\tconversionApi.mapper.bindElementToMarker( element, data.markerName );\r\n\r\n\t\t\t\t\t// One attribute element is enough, because all of them are bound together by the view writer.\r\n\t\t\t\t\t// Mapper uses this binding to get all the elements no matter how many of them are registered in the mapper.\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\n// Converter function factory. It creates a function which applies the marker's highlight to an element inside the marker's range.\r\n//\r\n// The converter checks if an element has the `addHighlight` function stored as a\r\n// {@link module:engine/view/element~Element#_setCustomProperty custom property} and, if so, uses it to apply the highlight.\r\n// In such case the converter will consume all element's children, assuming that they were handled by the element itself.\r\n//\r\n// When the `addHighlight` custom property is not present, the element is not converted in any special way.\r\n// This means that converters will proceed to convert the element's child nodes.\r\n//\r\n// If the highlight descriptor does not provide the `priority` property, `10` will be used.\r\n//\r\n// If the highlight descriptor does not provide the `id` property, the name of the marker will be used.\r\n//\r\n// This converter binds altered {@link module:engine/view/containerelement~ContainerElement container elements} with the marker name using\r\n// the {@link module:engine/conversion/mapper~Mapper#bindElementToMarker} method.\r\n//\r\n// @param {module:engine/conversion/downcasthelpers~HighlightDescriptor|Function} highlightDescriptor\r\n// @returns {Function}\r\nfunction highlightElement( highlightDescriptor ) {\r\n\treturn ( evt, data, conversionApi ) => {\r\n\t\tif ( !data.item ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( !( data.item instanceof ModelElement ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst descriptor = prepareDescriptor( highlightDescriptor, data, conversionApi );\r\n\r\n\t\tif ( !descriptor ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( !conversionApi.consumable.test( data.item, evt.name ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst viewElement = conversionApi.mapper.toViewElement( data.item );\r\n\r\n\t\tif ( viewElement && viewElement.getCustomProperty( 'addHighlight' ) ) {\r\n\t\t\t// Consume element itself.\r\n\t\t\tconversionApi.consumable.consume( data.item, evt.name );\r\n\r\n\t\t\t// Consume all children nodes.\r\n\t\t\tfor ( const value of ModelRange._createIn( data.item ) ) {\r\n\t\t\t\tconversionApi.consumable.consume( value.item, evt.name );\r\n\t\t\t}\r\n\r\n\t\t\tviewElement.getCustomProperty( 'addHighlight' )( viewElement, descriptor, conversionApi.writer );\r\n\r\n\t\t\tconversionApi.mapper.bindElementToMarker( viewElement, data.markerName );\r\n\t\t}\r\n\t};\r\n}\r\n\r\n// Function factory that creates a converter which converts the removing model marker to the view.\r\n//\r\n// Both text nodes and elements are handled by this converter but they are handled a bit differently.\r\n//\r\n// Text nodes are unwrapped using the {@link module:engine/view/attributeelement~AttributeElement attribute element} created from the\r\n// provided highlight descriptor. See {link module:engine/conversion/downcasthelpers~HighlightDescriptor}.\r\n//\r\n// For elements, the converter checks if an element has the `removeHighlight` function stored as a\r\n// {@link module:engine/view/element~Element#_setCustomProperty custom property}. If so, it uses it to remove the highlight.\r\n// In such case, the children of that element will not be converted.\r\n//\r\n// When `removeHighlight` is not present, the element is not converted in any special way.\r\n// The converter will proceed to convert the element's child nodes instead.\r\n//\r\n// If the highlight descriptor does not provide the `priority` property, `10` will be used.\r\n//\r\n// If the highlight descriptor does not provide the `id` property, the name of the marker will be used.\r\n//\r\n// This converter unbinds elements from the marker name.\r\n//\r\n// @param {module:engine/conversion/downcasthelpers~HighlightDescriptor|Function} highlightDescriptor\r\n// @returns {Function}\r\nfunction removeHighlight( highlightDescriptor ) {\r\n\treturn ( evt, data, conversionApi ) => {\r\n\t\t// This conversion makes sense only for non-collapsed range.\r\n\t\tif ( data.markerRange.isCollapsed ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst descriptor = prepareDescriptor( highlightDescriptor, data, conversionApi );\r\n\r\n\t\tif ( !descriptor ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// View element that will be used to unwrap `AttributeElement`s.\r\n\t\tconst viewHighlightElement = createViewElementFromHighlightDescriptor( conversionApi.writer, descriptor );\r\n\r\n\t\t// Get all elements bound with given marker name.\r\n\t\tconst elements = conversionApi.mapper.markerNameToElements( data.markerName );\r\n\r\n\t\tif ( !elements ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor ( const element of elements ) {\r\n\t\t\tconversionApi.mapper.unbindElementFromMarkerName( element, data.markerName );\r\n\r\n\t\t\tif ( element.is( 'attributeElement' ) ) {\r\n\t\t\t\tconversionApi.writer.unwrap( conversionApi.writer.createRangeOn( element ), viewHighlightElement );\r\n\t\t\t} else {\r\n\t\t\t\t// if element.is( 'containerElement' ).\r\n\t\t\t\telement.getCustomProperty( 'removeHighlight' )( element, descriptor.id, conversionApi.writer );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconversionApi.writer.clearClonedElementsGroup( data.markerName );\r\n\r\n\t\tevt.stop();\r\n\t};\r\n}\r\n\r\n// Model element to view element conversion helper.\r\n//\r\n// See {@link ~DowncastHelpers#elementToElement `.elementToElement()` downcast helper} for examples.\r\n//\r\n// @param {Object} config Conversion configuration.\r\n// @param {String} config.model The name of the model element to convert.\r\n// @param {module:engine/view/elementdefinition~ElementDefinition|Function} config.view A view element definition or a function\r\n// that takes the model element and {@link module:engine/view/downcastwriter~DowncastWriter view downcast writer}\r\n// as parameters and returns a view container element.\r\n// @returns {Function} Conversion helper.\r\nfunction downcastElementToElement( config ) {\r\n\tconfig = cloneDeep( config );\r\n\r\n\tconfig.view = normalizeToElementConfig( config.view, 'container' );\r\n\r\n\treturn dispatcher => {\r\n\t\tdispatcher.on( 'insert:' + config.model, insertElement( config.view ), { priority: config.converterPriority || 'normal' } );\r\n\t};\r\n}\r\n\r\n// Model attribute to view element conversion helper.\r\n//\r\n// See {@link ~DowncastHelpers#attributeToElement `.attributeToElement()` downcast helper} for examples.\r\n//\r\n// @param {Object} config Conversion configuration.\r\n// @param {String|Object} config.model The key of the attribute to convert from or a `{ key, values }` object. `values` is an array\r\n// of `String`s with possible values if the model attribute is an enumerable.\r\n// @param {module:engine/view/elementdefinition~ElementDefinition|Function|Object} config.view A view element definition or a function\r\n// that takes the model attribute value and {@link module:engine/view/downcastwriter~DowncastWriter view downcast writer}\r\n// as parameters and returns a view attribute element. If `config.model.values` is\r\n// given, `config.view` should be an object assigning values from `config.model.values` to view element definitions or functions.\r\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\r\n// @returns {Function} Conversion helper.\r\nfunction downcastAttributeToElement( config ) {\r\n\tconfig = cloneDeep( config );\r\n\r\n\tconst modelKey = config.model.key ? config.model.key : config.model;\r\n\tlet eventName = 'attribute:' + modelKey;\r\n\r\n\tif ( config.model.name ) {\r\n\t\teventName += ':' + config.model.name;\r\n\t}\r\n\r\n\tif ( config.model.values ) {\r\n\t\tfor ( const modelValue of config.model.values ) {\r\n\t\t\tconfig.view[ modelValue ] = normalizeToElementConfig( config.view[ modelValue ], 'attribute' );\r\n\t\t}\r\n\t} else {\r\n\t\tconfig.view = normalizeToElementConfig( config.view, 'attribute' );\r\n\t}\r\n\r\n\tconst elementCreator = getFromAttributeCreator( config );\r\n\r\n\treturn dispatcher => {\r\n\t\tdispatcher.on( eventName, wrap( elementCreator ), { priority: config.converterPriority || 'normal' } );\r\n\t};\r\n}\r\n\r\n// Model attribute to view attribute conversion helper.\r\n//\r\n// See {@link ~DowncastHelpers#attributeToAttribute `.attributeToAttribute()` downcast helper} for examples.\r\n//\r\n// @param {Object} config Conversion configuration.\r\n// @param {String|Object} config.model The key of the attribute to convert from or a `{ key, values, [ name ] }` object describing\r\n// the attribute key, possible values and, optionally, an element name to convert from.\r\n// @param {String|Object|Function} config.view A view attribute key, or a `{ key, value }` object or a function that takes\r\n// the model attribute value and returns a `{ key, value }` object. If `key` is `'class'`, `value` can be a `String` or an\r\n// array of `String`s. If `key` is `'style'`, `value` is an object with key-value pairs. In other cases, `value` is a `String`.\r\n// If `config.model.values` is set, `config.view` should be an object assigning values from `config.model.values` to\r\n// `{ key, value }` objects or a functions.\r\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\r\n// @returns {Function} Conversion helper.\r\nfunction downcastAttributeToAttribute( config ) {\r\n\tconfig = cloneDeep( config );\r\n\r\n\tconst modelKey = config.model.key ? config.model.key : config.model;\r\n\tlet eventName = 'attribute:' + modelKey;\r\n\r\n\tif ( config.model.name ) {\r\n\t\teventName += ':' + config.model.name;\r\n\t}\r\n\r\n\tif ( config.model.values ) {\r\n\t\tfor ( const modelValue of config.model.values ) {\r\n\t\t\tconfig.view[ modelValue ] = normalizeToAttributeConfig( config.view[ modelValue ] );\r\n\t\t}\r\n\t} else {\r\n\t\tconfig.view = normalizeToAttributeConfig( config.view );\r\n\t}\r\n\r\n\tconst elementCreator = getFromAttributeCreator( config );\r\n\r\n\treturn dispatcher => {\r\n\t\tdispatcher.on( eventName, changeAttribute( elementCreator ), { priority: config.converterPriority || 'normal' } );\r\n\t};\r\n}\r\n\r\n// Model marker to view element conversion helper.\r\n//\r\n// See {@link ~DowncastHelpers#markerToElement `.markerToElement()` downcast helper} for examples.\r\n//\r\n// @param {Object} config Conversion configuration.\r\n// @param {String} config.model The name of the model marker (or model marker group) to convert.\r\n// @param {module:engine/view/elementdefinition~ElementDefinition|Function} config.view A view element definition or a function\r\n// that takes the model marker data as a parameter and returns a view UI element.\r\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\r\n// @returns {Function} Conversion helper.\r\nfunction downcastMarkerToElement( config ) {\r\n\tconfig = cloneDeep( config );\r\n\r\n\tconfig.view = normalizeToElementConfig( config.view, 'ui' );\r\n\r\n\treturn dispatcher => {\r\n\t\tdispatcher.on( 'addMarker:' + config.model, insertUIElement( config.view ), { priority: config.converterPriority || 'normal' } );\r\n\t\tdispatcher.on( 'removeMarker:' + config.model, removeUIElement( config.view ), { priority: config.converterPriority || 'normal' } );\r\n\t};\r\n}\r\n\r\n// Model marker to highlight conversion helper.\r\n//\r\n// See {@link ~DowncastHelpers#markerToElement `.markerToElement()` downcast helper} for examples.\r\n//\r\n// @param {Object} config Conversion configuration.\r\n// @param {String} config.model The name of the model marker (or model marker group) to convert.\r\n// @param {module:engine/conversion/downcasthelpers~HighlightDescriptor|Function} config.view A highlight descriptor\r\n// that will be used for highlighting or a function that takes the model marker data as a parameter and returns a highlight descriptor.\r\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\r\n// @returns {Function} Conversion helper.\r\nfunction downcastMarkerToHighlight( config ) {\r\n\treturn dispatcher => {\r\n\t\tdispatcher.on( 'addMarker:' + config.model, highlightText( config.view ), { priority: config.converterPriority || 'normal' } );\r\n\t\tdispatcher.on( 'addMarker:' + config.model, highlightElement( config.view ), { priority: config.converterPriority || 'normal' } );\r\n\t\tdispatcher.on( 'removeMarker:' + config.model, removeHighlight( config.view ), { priority: config.converterPriority || 'normal' } );\r\n\t};\r\n}\r\n\r\n// Takes `config.view`, and if it is an {@link module:engine/view/elementdefinition~ElementDefinition}, converts it\r\n// to a function (because lower level converters accept only element creator functions).\r\n//\r\n// @param {module:engine/view/elementdefinition~ElementDefinition|Function} view View configuration.\r\n// @param {'container'|'attribute'|'ui'} viewElementType View element type to create.\r\n// @returns {Function} Element creator function to use in lower level converters.\r\nfunction normalizeToElementConfig( view, viewElementType ) {\r\n\tif ( typeof view == 'function' ) {\r\n\t\t// If `view` is already a function, don't do anything.\r\n\t\treturn view;\r\n\t}\r\n\r\n\treturn ( modelData, viewWriter ) => createViewElementFromDefinition( view, viewWriter, viewElementType );\r\n}\r\n\r\n// Creates a view element instance from the provided {@link module:engine/view/elementdefinition~ElementDefinition} and class.\r\n//\r\n// @param {module:engine/view/elementdefinition~ElementDefinition} viewElementDefinition\r\n// @param {module:engine/view/downcastwriter~DowncastWriter} viewWriter\r\n// @param {'container'|'attribute'|'ui'} viewElementType\r\n// @returns {module:engine/view/element~Element}\r\nfunction createViewElementFromDefinition( viewElementDefinition, viewWriter, viewElementType ) {\r\n\tif ( typeof viewElementDefinition == 'string' ) {\r\n\t\t// If `viewElementDefinition` is given as a `String`, normalize it to an object with `name` property.\r\n\t\tviewElementDefinition = { name: viewElementDefinition };\r\n\t}\r\n\r\n\tlet element;\r\n\tconst attributes = Object.assign( {}, viewElementDefinition.attributes );\r\n\r\n\tif ( viewElementType == 'container' ) {\r\n\t\telement = viewWriter.createContainerElement( viewElementDefinition.name, attributes );\r\n\t} else if ( viewElementType == 'attribute' ) {\r\n\t\tconst options = {\r\n\t\t\tpriority: viewElementDefinition.priority || ViewAttributeElement.DEFAULT_PRIORITY\r\n\t\t};\r\n\r\n\t\telement = viewWriter.createAttributeElement( viewElementDefinition.name, attributes, options );\r\n\t} else {\r\n\t\t// 'ui'.\r\n\t\telement = viewWriter.createUIElement( viewElementDefinition.name, attributes );\r\n\t}\r\n\r\n\tif ( viewElementDefinition.styles ) {\r\n\t\tconst keys = Object.keys( viewElementDefinition.styles );\r\n\r\n\t\tfor ( const key of keys ) {\r\n\t\t\tviewWriter.setStyle( key, viewElementDefinition.styles[ key ], element );\r\n\t\t}\r\n\t}\r\n\r\n\tif ( viewElementDefinition.classes ) {\r\n\t\tconst classes = viewElementDefinition.classes;\r\n\r\n\t\tif ( typeof classes == 'string' ) {\r\n\t\t\tviewWriter.addClass( classes, element );\r\n\t\t} else {\r\n\t\t\tfor ( const className of classes ) {\r\n\t\t\t\tviewWriter.addClass( className, element );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn element;\r\n}\r\n\r\nfunction getFromAttributeCreator( config ) {\r\n\tif ( config.model.values ) {\r\n\t\treturn ( modelAttributeValue, viewWriter ) => {\r\n\t\t\tconst view = config.view[ modelAttributeValue ];\r\n\r\n\t\t\tif ( view ) {\r\n\t\t\t\treturn view( modelAttributeValue, viewWriter );\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t};\r\n\t} else {\r\n\t\treturn config.view;\r\n\t}\r\n}\r\n\r\n// Takes the configuration, adds default parameters if they do not exist and normalizes other parameters to be used in downcast converters\r\n// for generating a view attribute.\r\n//\r\n// @param {Object} view View configuration.\r\nfunction normalizeToAttributeConfig( view ) {\r\n\tif ( typeof view == 'string' ) {\r\n\t\treturn modelAttributeValue => ( { key: view, value: modelAttributeValue } );\r\n\t} else if ( typeof view == 'object' ) {\r\n\t\t// { key, value, ... }\r\n\t\tif ( view.value ) {\r\n\t\t\treturn () => view;\r\n\t\t}\r\n\t\t// { key, ... }\r\n\t\telse {\r\n\t\t\treturn modelAttributeValue => ( { key: view.key, value: modelAttributeValue } );\r\n\t\t}\r\n\t} else {\r\n\t\t// function.\r\n\t\treturn view;\r\n\t}\r\n}\r\n\r\n// Helper function for `highlight`. Prepares the actual descriptor object using value passed to the converter.\r\nfunction prepareDescriptor( highlightDescriptor, data, conversionApi ) {\r\n\t// If passed descriptor is a creator function, call it. If not, just use passed value.\r\n\tconst descriptor = typeof highlightDescriptor == 'function' ?\r\n\t\thighlightDescriptor( data, conversionApi ) :\r\n\t\thighlightDescriptor;\r\n\r\n\tif ( !descriptor ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// Apply default descriptor priority.\r\n\tif ( !descriptor.priority ) {\r\n\t\tdescriptor.priority = 10;\r\n\t}\r\n\r\n\t// Default descriptor id is marker name.\r\n\tif ( !descriptor.id ) {\r\n\t\tdescriptor.id = data.markerName;\r\n\t}\r\n\r\n\treturn descriptor;\r\n}\r\n\r\n/**\r\n * An object describing how the marker highlight should be represented in the view.\r\n *\r\n * Each text node contained in a highlighted range will be wrapped in a `<span>`\r\n * {@link module:engine/view/attributeelement~AttributeElement view attribute element} with CSS class(es), attributes and a priority\r\n * described by this object.\r\n *\r\n * Additionally, each {@link module:engine/view/containerelement~ContainerElement container element} can handle displaying the highlight\r\n * separately by providing the `addHighlight` and `removeHighlight` custom properties. In this case:\r\n *\r\n *  * The `HighlightDescriptor` object is passed to the `addHighlight` function upon conversion and should be used to apply the highlight to\r\n *  the element.\r\n *  * The descriptor `id` is passed to the `removeHighlight` function upon conversion and should be used to remove the highlight with the\r\n *  given ID from the element.\r\n *\r\n * @typedef {Object} module:engine/conversion/downcasthelpers~HighlightDescriptor\r\n *\r\n * @property {String|Array.<String>} classes A CSS class or an array of classes to set. If the descriptor is used to\r\n * create an {@link module:engine/view/attributeelement~AttributeElement attribute element} over text nodes, these classes will be set\r\n * on that attribute element. If the descriptor is applied to an element, usually these classes will be set on that element, however,\r\n * this depends on how the element converts the descriptor.\r\n *\r\n * @property {String} [id] Descriptor identifier. If not provided, it defaults to the converted marker's name.\r\n *\r\n * @property {Number} [priority] Descriptor priority. If not provided, it defaults to `10`. If the descriptor is used to create\r\n * an {@link module:engine/view/attributeelement~AttributeElement attribute element}, it will be that element's\r\n * {@link module:engine/view/attributeelement~AttributeElement#priority priority}. If the descriptor is applied to an element,\r\n * the priority will be used to determine which descriptor is more important.\r\n *\r\n * @property {Object} [attributes] Attributes to set. If the descriptor is used to create\r\n * an {@link module:engine/view/attributeelement~AttributeElement attribute element} over text nodes, these attributes will be set on that\r\n * attribute element. If the descriptor is applied to an element, usually these attributes will be set on that element, however,\r\n * this depends on how the element converts the descriptor.\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/conversion/mapper\r\n */\r\n\r\nimport ModelPosition from '../model/position';\r\nimport ModelRange from '../model/range';\r\n\r\nimport ViewPosition from '../view/position';\r\nimport ViewRange from '../view/range';\r\nimport ViewText from '../view/text';\r\n\r\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\r\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\r\n\r\n/**\r\n * Maps elements, positions and markers between {@link module:engine/view/document~Document the view} and\r\n * {@link module:engine/model/model the model}.\r\n *\r\n * The instance of the Mapper used for the editing pipeline is available in\r\n * {@link module:engine/controller/editingcontroller~EditingController#mapper `editor.editing.mapper`}.\r\n *\r\n * Mapper uses bound elements to find corresponding elements and positions, so, to get proper results,\r\n * all model elements should be {@link module:engine/conversion/mapper~Mapper#bindElements bound}.\r\n *\r\n * To map complex model to/from view relations, you may provide custom callbacks for\r\n * {@link module:engine/conversion/mapper~Mapper#event:modelToViewPosition modelToViewPosition event} and\r\n * {@link module:engine/conversion/mapper~Mapper#event:viewToModelPosition viewToModelPosition event} that are fired whenever\r\n * a position mapping request occurs.\r\n * Those events are fired by {@link module:engine/conversion/mapper~Mapper#toViewPosition toViewPosition}\r\n * and {@link module:engine/conversion/mapper~Mapper#toModelPosition toModelPosition} methods. `Mapper` adds it's own default callbacks\r\n * with `'lowest'` priority. To override default `Mapper` mapping, add custom callback with higher priority and\r\n * stop the event.\r\n */\r\nexport default class Mapper {\r\n\t/**\r\n\t * Creates an instance of the mapper.\r\n\t */\r\n\tconstructor() {\r\n\t\t/**\r\n\t\t * Model element to view element mapping.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {WeakMap}\r\n\t\t */\r\n\t\tthis._modelToViewMapping = new WeakMap();\r\n\r\n\t\t/**\r\n\t\t * View element to model element mapping.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {WeakMap}\r\n\t\t */\r\n\t\tthis._viewToModelMapping = new WeakMap();\r\n\r\n\t\t/**\r\n\t\t * A map containing callbacks between view element names and functions evaluating length of view elements\r\n\t\t * in model.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Map}\r\n\t\t */\r\n\t\tthis._viewToModelLengthCallbacks = new Map();\r\n\r\n\t\t/**\r\n\t\t * Model marker name to view elements mapping.\r\n\t\t *\r\n\t\t * Keys are `String`s while values are `Set`s with {@link module:engine/view/element~Element view elements}.\r\n\t\t * One marker (name) can be mapped to multiple elements.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Map}\r\n\t\t */\r\n\t\tthis._markerNameToElements = new Map();\r\n\r\n\t\t/**\r\n\t\t * View element to model marker names mapping.\r\n\t\t *\r\n\t\t * This is reverse to {@link ~Mapper#_markerNameToElements} map.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Map}\r\n\t\t */\r\n\t\tthis._elementToMarkerNames = new Map();\r\n\r\n\t\t/**\r\n\t\t * Stores marker names of markers which has changed due to unbinding a view element (so it is assumed that the view element\r\n\t\t * has been removed, moved or renamed).\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Set.<module:engine/model/markercollection~Marker>}\r\n\t\t */\r\n\t\tthis._unboundMarkerNames = new Set();\r\n\r\n\t\t// Default mapper algorithm for mapping model position to view position.\r\n\t\tthis.on( 'modelToViewPosition', ( evt, data ) => {\r\n\t\t\tif ( data.viewPosition ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst viewContainer = this._modelToViewMapping.get( data.modelPosition.parent );\r\n\r\n\t\t\tdata.viewPosition = this._findPositionIn( viewContainer, data.modelPosition.offset );\r\n\t\t}, { priority: 'low' } );\r\n\r\n\t\t// Default mapper algorithm for mapping view position to model position.\r\n\t\tthis.on( 'viewToModelPosition', ( evt, data ) => {\r\n\t\t\tif ( data.modelPosition ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst viewBlock = this.findMappedViewAncestor( data.viewPosition );\r\n\t\t\tconst modelParent = this._viewToModelMapping.get( viewBlock );\r\n\t\t\tconst modelOffset = this._toModelOffset( data.viewPosition.parent, data.viewPosition.offset, viewBlock );\r\n\r\n\t\t\tdata.modelPosition = ModelPosition._createAt( modelParent, modelOffset );\r\n\t\t}, { priority: 'low' } );\r\n\t}\r\n\r\n\t/**\r\n\t * Marks model and view elements as corresponding. Corresponding elements can be retrieved by using\r\n\t * the {@link module:engine/conversion/mapper~Mapper#toModelElement toModelElement} and\r\n\t * {@link module:engine/conversion/mapper~Mapper#toViewElement toViewElement} methods.\r\n\t * The information that elements are bound is also used to translate positions.\r\n\t *\r\n\t * @param {module:engine/model/element~Element} modelElement Model element.\r\n\t * @param {module:engine/view/element~Element} viewElement View element.\r\n\t */\r\n\tbindElements( modelElement, viewElement ) {\r\n\t\tthis._modelToViewMapping.set( modelElement, viewElement );\r\n\t\tthis._viewToModelMapping.set( viewElement, modelElement );\r\n\t}\r\n\r\n\t/**\r\n\t * Unbinds given {@link module:engine/view/element~Element view element} from the map.\r\n\t *\r\n\t * **Note:** view-to-model binding will be removed, if it existed. However, corresponding model-to-view binding\r\n\t * will be removed only if model element is still bound to passed `viewElement`.\r\n\t *\r\n\t * This behavior lets for re-binding model element to another view element without fear of losing the new binding\r\n\t * when the previously bound view element is unbound.\r\n\t *\r\n\t * @param {module:engine/view/element~Element} viewElement View element to unbind.\r\n\t */\r\n\tunbindViewElement( viewElement ) {\r\n\t\tconst modelElement = this.toModelElement( viewElement );\r\n\r\n\t\tthis._viewToModelMapping.delete( viewElement );\r\n\r\n\t\tif ( this._elementToMarkerNames.has( viewElement ) ) {\r\n\t\t\tfor ( const markerName of this._elementToMarkerNames.get( viewElement ) ) {\r\n\t\t\t\tthis._unboundMarkerNames.add( markerName );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( this._modelToViewMapping.get( modelElement ) == viewElement ) {\r\n\t\t\tthis._modelToViewMapping.delete( modelElement );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Unbinds given {@link module:engine/model/element~Element model element} from the map.\r\n\t *\r\n\t * **Note:** model-to-view binding will be removed, if it existed. However, corresponding view-to-model binding\r\n\t * will be removed only if view element is still bound to passed `modelElement`.\r\n\t *\r\n\t * This behavior lets for re-binding view element to another model element without fear of losing the new binding\r\n\t * when the previously bound model element is unbound.\r\n\t *\r\n\t * @param {module:engine/model/element~Element} modelElement Model element to unbind.\r\n\t */\r\n\tunbindModelElement( modelElement ) {\r\n\t\tconst viewElement = this.toViewElement( modelElement );\r\n\r\n\t\tthis._modelToViewMapping.delete( modelElement );\r\n\r\n\t\tif ( this._viewToModelMapping.get( viewElement ) == modelElement ) {\r\n\t\t\tthis._viewToModelMapping.delete( viewElement );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Binds given marker name with given {@link module:engine/view/element~Element view element}. The element\r\n\t * will be added to the current set of elements bound with given marker name.\r\n\t *\r\n\t * @param {module:engine/view/element~Element} element Element to bind.\r\n\t * @param {String} name Marker name.\r\n\t */\r\n\tbindElementToMarker( element, name ) {\r\n\t\tconst elements = this._markerNameToElements.get( name ) || new Set();\r\n\t\telements.add( element );\r\n\r\n\t\tconst names = this._elementToMarkerNames.get( element ) || new Set();\r\n\t\tnames.add( name );\r\n\r\n\t\tthis._markerNameToElements.set( name, elements );\r\n\t\tthis._elementToMarkerNames.set( element, names );\r\n\t}\r\n\r\n\t/**\r\n\t * Unbinds an element from given marker name.\r\n\t *\r\n\t * @param {module:engine/view/element~Element} element Element to unbind.\r\n\t * @param {String} name Marker name.\r\n\t */\r\n\tunbindElementFromMarkerName( element, name ) {\r\n\t\tconst nameToElements = this._markerNameToElements.get( name );\r\n\r\n\t\tif ( nameToElements ) {\r\n\t\t\tnameToElements.delete( element );\r\n\r\n\t\t\tif ( nameToElements.size == 0 ) {\r\n\t\t\t\tthis._markerNameToElements.delete( name );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst elementToNames = this._elementToMarkerNames.get( element );\r\n\r\n\t\tif ( elementToNames ) {\r\n\t\t\telementToNames.delete( name );\r\n\r\n\t\t\tif ( elementToNames.size == 0 ) {\r\n\t\t\t\tthis._elementToMarkerNames.delete( element );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all marker names of markers which has changed due to unbinding a view element (so it is assumed that the view element\r\n\t * has been removed, moved or renamed) since the last flush. After returning, the marker names list is cleared.\r\n\t *\r\n\t * @returns {Array.<String>}\r\n\t */\r\n\tflushUnboundMarkerNames() {\r\n\t\tconst markerNames = Array.from( this._unboundMarkerNames );\r\n\r\n\t\tthis._unboundMarkerNames.clear();\r\n\r\n\t\treturn markerNames;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all model to view and view to model bindings.\r\n\t */\r\n\tclearBindings() {\r\n\t\tthis._modelToViewMapping = new WeakMap();\r\n\t\tthis._viewToModelMapping = new WeakMap();\r\n\t\tthis._markerNameToElements = new Map();\r\n\t\tthis._elementToMarkerNames = new Map();\r\n\t\tthis._unboundMarkerNames = new Set();\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the corresponding model element.\r\n\t *\r\n\t * **Note:** {@link module:engine/view/uielement~UIElement} does not have corresponding element in model.\r\n\t *\r\n\t * @param {module:engine/view/element~Element} viewElement View element.\r\n\t * @returns {module:engine/model/element~Element|undefined} Corresponding model element or `undefined` if not found.\r\n\t */\r\n\ttoModelElement( viewElement ) {\r\n\t\treturn this._viewToModelMapping.get( viewElement );\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the corresponding view element.\r\n\t *\r\n\t * @param {module:engine/model/element~Element} modelElement Model element.\r\n\t * @returns {module:engine/view/element~Element|undefined} Corresponding view element or `undefined` if not found.\r\n\t */\r\n\ttoViewElement( modelElement ) {\r\n\t\treturn this._modelToViewMapping.get( modelElement );\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the corresponding model range.\r\n\t *\r\n\t * @param {module:engine/view/range~Range} viewRange View range.\r\n\t * @returns {module:engine/model/range~Range} Corresponding model range.\r\n\t */\r\n\ttoModelRange( viewRange ) {\r\n\t\treturn new ModelRange( this.toModelPosition( viewRange.start ), this.toModelPosition( viewRange.end ) );\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the corresponding view range.\r\n\t *\r\n\t * @param {module:engine/model/range~Range} modelRange Model range.\r\n\t * @returns {module:engine/view/range~Range} Corresponding view range.\r\n\t */\r\n\ttoViewRange( modelRange ) {\r\n\t\treturn new ViewRange( this.toViewPosition( modelRange.start ), this.toViewPosition( modelRange.end ) );\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the corresponding model position.\r\n\t *\r\n\t * @fires viewToModelPosition\r\n\t * @param {module:engine/view/position~Position} viewPosition View position.\r\n\t * @returns {module:engine/model/position~Position} Corresponding model position.\r\n\t */\r\n\ttoModelPosition( viewPosition ) {\r\n\t\tconst data = {\r\n\t\t\tviewPosition,\r\n\t\t\tmapper: this\r\n\t\t};\r\n\r\n\t\tthis.fire( 'viewToModelPosition', data );\r\n\r\n\t\treturn data.modelPosition;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the corresponding view position.\r\n\t *\r\n\t * @fires modelToViewPosition\r\n\t * @param {module:engine/model/position~Position} modelPosition Model position.\r\n\t * @param {Object} [options] Additional options for position mapping process.\r\n\t * @param {Boolean} [options.isPhantom=false] Should be set to `true` if the model position to map is pointing to a place\r\n\t * in model tree which no longer exists. For example, it could be an end of a removed model range.\r\n\t * @returns {module:engine/view/position~Position} Corresponding view position.\r\n\t */\r\n\ttoViewPosition( modelPosition, options = { isPhantom: false } ) {\r\n\t\tconst data = {\r\n\t\t\tmodelPosition,\r\n\t\t\tmapper: this,\r\n\t\t\tisPhantom: options.isPhantom\r\n\t\t};\r\n\r\n\t\tthis.fire( 'modelToViewPosition', data );\r\n\r\n\t\treturn data.viewPosition;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets all view elements bound to the given marker name.\r\n\t *\r\n\t * @param {String} name Marker name.\r\n\t * @returns {Set.<module:engine/view/element~Element>|null} View elements bound with given marker name or `null`\r\n\t * if no elements are bound to given marker name.\r\n\t */\r\n\tmarkerNameToElements( name ) {\r\n\t\tconst boundElements = this._markerNameToElements.get( name );\r\n\r\n\t\tif ( !boundElements ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tconst elements = new Set();\r\n\r\n\t\tfor ( const element of boundElements ) {\r\n\t\t\tif ( element.is( 'attributeElement' ) ) {\r\n\t\t\t\tfor ( const clone of element.getElementsWithSameId() ) {\r\n\t\t\t\t\telements.add( clone );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\telements.add( element );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn elements;\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a callback that evaluates the length in the model of a view element with given name.\r\n\t *\r\n\t * The callback is fired with one argument, which is a view element instance. The callback is expected to return\r\n\t * a number representing the length of view element in model.\r\n\t *\r\n\t *\t\t// List item in view may contain nested list, which have other list items. In model though,\r\n\t *\t\t// the lists are represented by flat structure. Because of those differences, length of list view element\r\n\t *\t\t// may be greater than one. In the callback it's checked how many nested list items are in evaluated list item.\r\n\t *\r\n\t *\t\tfunction getViewListItemLength( element ) {\r\n\t *\t\t\tlet length = 1;\r\n\t *\r\n\t *\t\t\tfor ( let child of element.getChildren() ) {\r\n\t *\t\t\t\tif ( child.name == 'ul' || child.name == 'ol' ) {\r\n\t *\t\t\t\t\tfor ( let item of child.getChildren() ) {\r\n\t *\t\t\t\t\t\tlength += getViewListItemLength( item );\r\n\t *\t\t\t\t\t}\r\n\t *\t\t\t\t}\r\n\t *\t\t\t}\r\n\t *\r\n\t *\t\t\treturn length;\r\n\t *\t\t}\r\n\t *\r\n\t *\t\tmapper.registerViewToModelLength( 'li', getViewListItemLength );\r\n\t *\r\n\t * @param {String} viewElementName Name of view element for which callback is registered.\r\n\t * @param {Function} lengthCallback Function return a length of view element instance in model.\r\n\t */\r\n\tregisterViewToModelLength( viewElementName, lengthCallback ) {\r\n\t\tthis._viewToModelLengthCallbacks.set( viewElementName, lengthCallback );\r\n\t}\r\n\r\n\t/**\r\n\t * For given `viewPosition`, finds and returns the closest ancestor of this position that has a mapping to\r\n\t * the model.\r\n\t *\r\n\t * @param {module:engine/view/position~Position} viewPosition Position for which mapped ancestor should be found.\r\n\t * @returns {module:engine/view/element~Element}\r\n\t */\r\n\tfindMappedViewAncestor( viewPosition ) {\r\n\t\tlet parent = viewPosition.parent;\r\n\r\n\t\twhile ( !this._viewToModelMapping.has( parent ) ) {\r\n\t\t\tparent = parent.parent;\r\n\t\t}\r\n\r\n\t\treturn parent;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates model offset based on the view position and the block element.\r\n\t *\r\n\t * Example:\r\n\t *\r\n\t *\t\t<p>foo<b>ba|r</b></p> // _toModelOffset( b, 2, p ) -> 5\r\n\t *\r\n\t * Is a sum of:\r\n\t *\r\n\t *\t\t<p>foo|<b>bar</b></p> // _toModelOffset( p, 3, p ) -> 3\r\n\t *\t\t<p>foo<b>ba|r</b></p> // _toModelOffset( b, 2, b ) -> 2\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/view/element~Element} viewParent Position parent.\r\n\t * @param {Number} viewOffset Position offset.\r\n\t * @param {module:engine/view/element~Element} viewBlock Block used as a base to calculate offset.\r\n\t * @returns {Number} Offset in the model.\r\n\t */\r\n\t_toModelOffset( viewParent, viewOffset, viewBlock ) {\r\n\t\tif ( viewBlock != viewParent ) {\r\n\t\t\t// See example.\r\n\t\t\tconst offsetToParentStart = this._toModelOffset( viewParent.parent, viewParent.index, viewBlock );\r\n\t\t\tconst offsetInParent = this._toModelOffset( viewParent, viewOffset, viewParent );\r\n\r\n\t\t\treturn offsetToParentStart + offsetInParent;\r\n\t\t}\r\n\r\n\t\t// viewBlock == viewParent, so we need to calculate the offset in the parent element.\r\n\r\n\t\t// If the position is a text it is simple (\"ba|r\" -> 2).\r\n\t\tif ( viewParent.is( 'text' ) ) {\r\n\t\t\treturn viewOffset;\r\n\t\t}\r\n\r\n\t\t// If the position is in an element we need to sum lengths of siblings ( <b> bar </b> foo | -> 3 + 3 = 6 ).\r\n\t\tlet modelOffset = 0;\r\n\r\n\t\tfor ( let i = 0; i < viewOffset; i++ ) {\r\n\t\t\tmodelOffset += this.getModelLength( viewParent.getChild( i ) );\r\n\t\t}\r\n\r\n\t\treturn modelOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the length of the view element in the model.\r\n\t *\r\n\t * The length is calculated as follows:\r\n\t * * if {@link #registerViewToModelLength length mapping callback} is provided for given `viewNode` it is used to\r\n\t * evaluate model length (`viewNode` is used as first and only parameter passed to the callback),\r\n\t * * length of a {@link module:engine/view/text~Text text node} is equal to the length of it's\r\n\t * {@link module:engine/view/text~Text#data data},\r\n\t * * length of a {@link module:engine/view/uielement~UIElement ui element} is equal to 0,\r\n\t * * length of a mapped {@link module:engine/view/element~Element element} is equal to 1,\r\n\t * * length of a not-mapped {@link module:engine/view/element~Element element} is equal to the length of it's children.\r\n\t *\r\n\t * Examples:\r\n\t *\r\n\t *\t\tfoo                          -> 3 // Text length is equal to it's data length.\r\n\t *\t\t<p>foo</p>                   -> 1 // Length of an element which is mapped is by default equal to 1.\r\n\t *\t\t<b>foo</b>                   -> 3 // Length of an element which is not mapped is a length of its children.\r\n\t *\t\t<div><p>x</p><p>y</p></div>  -> 2 // Assuming that <div> is not mapped and <p> are mapped.\r\n\t *\r\n\t * @param {module:engine/view/element~Element} viewNode View node.\r\n\t * @returns {Number} Length of the node in the tree model.\r\n\t */\r\n\tgetModelLength( viewNode ) {\r\n\t\tif ( this._viewToModelLengthCallbacks.get( viewNode.name ) ) {\r\n\t\t\tconst callback = this._viewToModelLengthCallbacks.get( viewNode.name );\r\n\r\n\t\t\treturn callback( viewNode );\r\n\t\t} else if ( this._viewToModelMapping.has( viewNode ) ) {\r\n\t\t\treturn 1;\r\n\t\t} else if ( viewNode.is( 'text' ) ) {\r\n\t\t\treturn viewNode.data.length;\r\n\t\t} else if ( viewNode.is( 'uiElement' ) ) {\r\n\t\t\treturn 0;\r\n\t\t} else {\r\n\t\t\tlet len = 0;\r\n\r\n\t\t\tfor ( const child of viewNode.getChildren() ) {\r\n\t\t\t\tlen += this.getModelLength( child );\r\n\t\t\t}\r\n\r\n\t\t\treturn len;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Finds the position in the view node (or its children) with the expected model offset.\r\n\t *\r\n\t * Example:\r\n\t *\r\n\t *\t\t<p>fo<b>bar</b>bom</p> -> expected offset: 4\r\n\t *\r\n\t *\t\t_findPositionIn( p, 4 ):\r\n\t *\t\t<p>|fo<b>bar</b>bom</p> -> expected offset: 4, actual offset: 0\r\n\t *\t\t<p>fo|<b>bar</b>bom</p> -> expected offset: 4, actual offset: 2\r\n\t *\t\t<p>fo<b>bar</b>|bom</p> -> expected offset: 4, actual offset: 5 -> we are too far\r\n\t *\r\n\t *\t\t_findPositionIn( b, 4 - ( 5 - 3 ) ):\r\n\t *\t\t<p>fo<b>|bar</b>bom</p> -> expected offset: 2, actual offset: 0\r\n\t *\t\t<p>fo<b>bar|</b>bom</p> -> expected offset: 2, actual offset: 3 -> we are too far\r\n\t *\r\n\t *\t\t_findPositionIn( bar, 2 - ( 3 - 3 ) ):\r\n\t *\t\tWe are in the text node so we can simple find the offset.\r\n\t *\t\t<p>fo<b>ba|r</b>bom</p> -> expected offset: 2, actual offset: 2 -> position found\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/view/element~Element} viewParent Tree view element in which we are looking for the position.\r\n\t * @param {Number} expectedOffset Expected offset.\r\n\t * @returns {module:engine/view/position~Position} Found position.\r\n\t */\r\n\t_findPositionIn( viewParent, expectedOffset ) {\r\n\t\t// Last scanned view node.\r\n\t\tlet viewNode;\r\n\t\t// Length of the last scanned view node.\r\n\t\tlet lastLength = 0;\r\n\r\n\t\tlet modelOffset = 0;\r\n\t\tlet viewOffset = 0;\r\n\r\n\t\t// In the text node it is simple: offset in the model equals offset in the text.\r\n\t\tif ( viewParent.is( 'text' ) ) {\r\n\t\t\treturn new ViewPosition( viewParent, expectedOffset );\r\n\t\t}\r\n\r\n\t\t// In other cases we add lengths of child nodes to find the proper offset.\r\n\r\n\t\t// If it is smaller we add the length.\r\n\t\twhile ( modelOffset < expectedOffset ) {\r\n\t\t\tviewNode = viewParent.getChild( viewOffset );\r\n\t\t\tlastLength = this.getModelLength( viewNode );\r\n\t\t\tmodelOffset += lastLength;\r\n\t\t\tviewOffset++;\r\n\t\t}\r\n\r\n\t\t// If it equals we found the position.\r\n\t\tif ( modelOffset == expectedOffset ) {\r\n\t\t\treturn this._moveViewPositionToTextNode( new ViewPosition( viewParent, viewOffset ) );\r\n\t\t}\r\n\t\t// If it is higher we need to enter last child.\r\n\t\telse {\r\n\t\t\t// ( modelOffset - lastLength ) is the offset to the child we enter,\r\n\t\t\t// so we subtract it from the expected offset to fine the offset in the child.\r\n\t\t\treturn this._findPositionIn( viewNode, expectedOffset - ( modelOffset - lastLength ) );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Because we prefer positions in text nodes over positions next to text node moves view position to the text node\r\n\t * if it was next to it.\r\n\t *\r\n\t *\t\t<p>[]<b>foo</b></p> -> <p>[]<b>foo</b></p> // do not touch if position is not directly next to text\r\n\t *\t\t<p>foo[]<b>foo</b></p> -> <p>foo{}<b>foo</b></p> // move to text node\r\n\t *\t\t<p><b>[]foo</b></p> -> <p><b>{}foo</b></p> // move to text node\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/view/position~Position} viewPosition Position potentially next to text node.\r\n\t * @returns {module:engine/view/position~Position} Position in text node if possible.\r\n\t */\r\n\t_moveViewPositionToTextNode( viewPosition ) {\r\n\t\t// If the position is just after text node, put it at the end of that text node.\r\n\t\t// If the position is just before text node, put it at the beginning of that text node.\r\n\t\tconst nodeBefore = viewPosition.nodeBefore;\r\n\t\tconst nodeAfter = viewPosition.nodeAfter;\r\n\r\n\t\tif ( nodeBefore instanceof ViewText ) {\r\n\t\t\treturn new ViewPosition( nodeBefore, nodeBefore.data.length );\r\n\t\t} else if ( nodeAfter instanceof ViewText ) {\r\n\t\t\treturn new ViewPosition( nodeAfter, 0 );\r\n\t\t}\r\n\r\n\t\t// Otherwise, just return the given position.\r\n\t\treturn viewPosition;\r\n\t}\r\n\r\n\t/**\r\n\t * Fired for each model-to-view position mapping request. The purpose of this event is to enable custom model-to-view position\r\n\t * mapping. Callbacks added to this event take {@link module:engine/model/position~Position model position} and are expected to\r\n\t * calculate {@link module:engine/view/position~Position view position}. Calculated view position should be added as `viewPosition`\r\n\t * value in `data` object that is passed as one of parameters to the event callback.\r\n\t *\r\n\t * \t\t// Assume that \"captionedImage\" model element is converted to <img> and following <span> elements in view,\r\n\t * \t\t// and the model element is bound to <img> element. Force mapping model positions inside \"captionedImage\" to that\r\n\t * \t\t// <span> element.\r\n\t *\t\tmapper.on( 'modelToViewPosition', ( evt, data ) => {\r\n\t *\t\t\tconst positionParent = modelPosition.parent;\r\n\t *\r\n\t *\t\t\tif ( positionParent.name == 'captionedImage' ) {\r\n\t *\t\t\t\tconst viewImg = data.mapper.toViewElement( positionParent );\r\n\t *\t\t\t\tconst viewCaption = viewImg.nextSibling; // The <span> element.\r\n\t *\r\n\t *\t\t\t\tdata.viewPosition = new ViewPosition( viewCaption, modelPosition.offset );\r\n\t *\r\n\t *\t\t\t\t// Stop the event if other callbacks should not modify calculated value.\r\n\t *\t\t\t\tevt.stop();\r\n\t *\t\t\t}\r\n\t *\t\t} );\r\n\t *\r\n\t * **Note:** keep in mind that sometimes a \"phantom\" model position is being converted. \"Phantom\" model position is\r\n\t * a position that points to a non-existing place in model. Such position might still be valid for conversion, though\r\n\t * (it would point to a correct place in view when converted). One example of such situation is when a range is\r\n\t * removed from model, there may be a need to map the range's end (which is no longer valid model position). To\r\n\t * handle such situation, check `data.isPhantom` flag:\r\n\t *\r\n\t * \t\t// Assume that there is \"customElement\" model element and whenever position is before it, we want to move it\r\n\t * \t\t// to the inside of the view element bound to \"customElement\".\r\n\t *\t\tmapper.on( 'modelToViewPosition', ( evt, data ) => {\r\n\t *\t\t\tif ( data.isPhantom ) {\r\n\t *\t\t\t\treturn;\r\n\t *\t\t\t}\r\n\t *\r\n\t *\t\t\t// Below line might crash for phantom position that does not exist in model.\r\n\t *\t\t\tconst sibling = data.modelPosition.nodeBefore;\r\n\t *\r\n\t *\t\t\t// Check if this is the element we are interested in.\r\n\t *\t\t\tif ( !sibling.is( 'customElement' ) ) {\r\n\t *\t\t\t\treturn;\r\n\t *\t\t\t}\r\n\t *\r\n\t *\t\t\tconst viewElement = data.mapper.toViewElement( sibling );\r\n\t *\r\n\t *\t\t\tdata.viewPosition = new ViewPosition( sibling, 0 );\r\n\t *\r\n\t *\t\t\tevt.stop();\r\n\t *\t\t} );\r\n\t *\r\n\t * **Note:** default mapping callback is provided with `low` priority setting and does not cancel the event, so it is possible to\r\n\t * attach a custom callback after default callback and also use `data.viewPosition` calculated by default callback\r\n\t * (for example to fix it).\r\n\t *\r\n\t * **Note:** default mapping callback will not fire if `data.viewPosition` is already set.\r\n\t *\r\n\t * **Note:** these callbacks are called **very often**. For efficiency reasons, it is advised to use them only when position\r\n\t * mapping between given model and view elements is unsolvable using just elements mapping and default algorithm. Also,\r\n\t * the condition that checks if special case scenario happened should be as simple as possible.\r\n\t *\r\n\t * @event modelToViewPosition\r\n\t * @param {Object} data Data pipeline object that can store and pass data between callbacks. The callback should add\r\n\t * `viewPosition` value to that object with calculated {@link module:engine/view/position~Position view position}.\r\n\t * @param {module:engine/conversion/mapper~Mapper} data.mapper Mapper instance that fired the event.\r\n\t */\r\n\r\n\t/**\r\n\t * Fired for each view-to-model position mapping request. See {@link module:engine/conversion/mapper~Mapper#event:modelToViewPosition}.\r\n\t *\r\n\t * \t\t// See example in `modelToViewPosition` event description.\r\n\t * \t\t// This custom mapping will map positions from <span> element next to <img> to the \"captionedImage\" element.\r\n\t *\t\tmapper.on( 'viewToModelPosition', ( evt, data ) => {\r\n\t *\t\t\tconst positionParent = viewPosition.parent;\r\n\t *\r\n\t *\t\t\tif ( positionParent.hasClass( 'image-caption' ) ) {\r\n\t *\t\t\t\tconst viewImg = positionParent.previousSibling;\r\n\t *\t\t\t\tconst modelImg = data.mapper.toModelElement( viewImg );\r\n\t *\r\n\t *\t\t\t\tdata.modelPosition = new ModelPosition( modelImg, viewPosition.offset );\r\n\t *\t\t\t\tevt.stop();\r\n\t *\t\t\t}\r\n\t *\t\t} );\r\n\t *\r\n\t * **Note:** default mapping callback is provided with `low` priority setting and does not cancel the event, so it is possible to\r\n\t * attach a custom callback after default callback and also use `data.modelPosition` calculated by default callback\r\n\t * (for example to fix it).\r\n\t *\r\n\t * **Note:** default mapping callback will not fire if `data.modelPosition` is already set.\r\n\t *\r\n\t * **Note:** these callbacks are called **very often**. For efficiency reasons, it is advised to use them only when position\r\n\t * mapping between given model and view elements is unsolvable using just elements mapping and default algorithm. Also,\r\n\t * the condition that checks if special case scenario happened should be as simple as possible.\r\n\t *\r\n\t * @event viewToModelPosition\r\n\t * @param {Object} data Data pipeline object that can store and pass data between callbacks. The callback should add\r\n\t * `modelPosition` value to that object with calculated {@link module:engine/model/position~Position model position}.\r\n\t * @param {module:engine/conversion/mapper~Mapper} data.mapper Mapper instance that fired the event.\r\n\t */\r\n}\r\n\r\nmix( Mapper, EmitterMixin );\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/conversion/modelconsumable\r\n */\r\n\r\nimport TextProxy from '../model/textproxy';\r\n\r\n/**\r\n * Manages a list of consumable values for {@link module:engine/model/item~Item model items}.\r\n *\r\n * Consumables are various aspects of the model. A model item can be broken down into singular properties that might be\r\n * taken into consideration when converting that item.\r\n *\r\n * `ModelConsumable` is used by {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher} while analyzing changed\r\n * parts of {@link module:engine/model/document~Document the document}. The added / changed / removed model items are broken down\r\n * into singular properties (the item itself and it's attributes). All those parts are saved in `ModelConsumable`. Then,\r\n * during conversion, when given part of model item is converted (i.e. the view element has been inserted into the view,\r\n * but without attributes), consumable value is removed from `ModelConsumable`.\r\n *\r\n * For model items, `ModelConsumable` stores consumable values of one of following types: `insert`, `addattribute:<attributeKey>`,\r\n * `changeattributes:<attributeKey>`, `removeattributes:<attributeKey>`.\r\n *\r\n * In most cases, it is enough to let {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}\r\n * gather consumable values, so there is no need to use\r\n * {@link module:engine/conversion/modelconsumable~ModelConsumable#add add method} directly.\r\n * However, it is important to understand how consumable values can be\r\n * {@link module:engine/conversion/modelconsumable~ModelConsumable#consume consumed}.\r\n * See {@link module:engine/conversion/downcasthelpers default downcast converters} for more information.\r\n *\r\n * Keep in mind, that one conversion event may have multiple callbacks (converters) attached to it. Each of those is\r\n * able to convert one or more parts of the model. However, when one of those callbacks actually converts\r\n * something, other should not, because they would duplicate the results. Using `ModelConsumable` helps avoiding\r\n * this situation, because callbacks should only convert those values, which were not yet consumed from `ModelConsumable`.\r\n *\r\n * Consuming multiple values in a single callback:\r\n *\r\n *\t\t// Converter for custom `image` element that might have a `caption` element inside which changes\r\n *\t\t// how the image is displayed in the view:\r\n *\t\t//\r\n *\t\t// Model:\r\n *\t\t//\r\n *\t\t// [image]\r\n *\t\t//   └─ [caption]\r\n *\t\t//       └─ foo\r\n *\t\t//\r\n *\t\t// View:\r\n *\t\t//\r\n *\t\t// <figure>\r\n *\t\t//   ├─ <img />\r\n *\t\t//   └─ <caption>\r\n *\t\t//       └─ foo\r\n *\t\tmodelConversionDispatcher.on( 'insert:image', ( evt, data, conversionApi ) => {\r\n *\t\t\t// First, consume the `image` element.\r\n *\t\t\tconversionApi.consumable.consume( data.item, 'insert' );\r\n *\r\n *\t\t\t// Just create normal image element for the view.\r\n *\t\t\t// Maybe it will be \"decorated\" later.\r\n *\t\t\tconst viewImage = new ViewElement( 'img' );\r\n *\t\t\tconst insertPosition = conversionApi.mapper.toViewPosition( data.range.start );\r\n *\t\t\tconst viewWriter = conversionApi.writer;\r\n *\r\n *\t\t\t// Check if the `image` element has children.\r\n *\t\t\tif ( data.item.childCount > 0 ) {\r\n *\t\t\t\tconst modelCaption = data.item.getChild( 0 );\r\n *\r\n *\t\t\t\t// `modelCaption` insertion change is consumed from consumable values.\r\n *\t\t\t\t// It will not be converted by other converters, but it's children (probably some text) will be.\r\n *\t\t\t\t// Through mapping, converters for text will know where to insert contents of `modelCaption`.\r\n *\t\t\t\tif ( conversionApi.consumable.consume( modelCaption, 'insert' ) ) {\r\n *\t\t\t\t\tconst viewCaption = new ViewElement( 'figcaption' );\r\n *\r\n *\t\t\t\t\tconst viewImageHolder = new ViewElement( 'figure', null, [ viewImage, viewCaption ] );\r\n *\r\n *\t\t\t\t\tconversionApi.mapper.bindElements( modelCaption, viewCaption );\r\n *\t\t\t\t\tconversionApi.mapper.bindElements( data.item, viewImageHolder );\r\n *\t\t\t\t\tviewWriter.insert( insertPosition, viewImageHolder );\r\n *\t\t\t\t}\r\n *\t\t\t} else {\r\n *\t\t\t\tconversionApi.mapper.bindElements( data.item, viewImage );\r\n *\t\t\t\tviewWriter.insert( insertPosition, viewImage );\r\n *\t\t\t}\r\n *\r\n *\t\t\tevt.stop();\r\n *\t\t} );\r\n */\r\nexport default class ModelConsumable {\r\n\t/**\r\n\t * Creates an empty consumables list.\r\n\t */\r\n\tconstructor() {\r\n\t\t/**\r\n\t\t * Contains list of consumable values.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Map} module:engine/conversion/modelconsumable~ModelConsumable#_consumable\r\n\t\t */\r\n\t\tthis._consumable = new Map();\r\n\r\n\t\t/**\r\n\t\t * For each {@link module:engine/model/textproxy~TextProxy} added to `ModelConsumable`, this registry holds parent\r\n\t\t * of that `TextProxy` and start and end indices of that `TextProxy`. This allows identification of `TextProxy`\r\n\t\t * instances that points to the same part of the model but are different instances. Each distinct `TextProxy`\r\n\t\t * is given unique `Symbol` which is then registered as consumable. This process is transparent for `ModelConsumable`\r\n\t\t * API user because whenever `TextProxy` is added, tested, consumed or reverted, internal mechanisms of\r\n\t\t * `ModelConsumable` translates `TextProxy` to that unique `Symbol`.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Map} module:engine/conversion/modelconsumable~ModelConsumable#_textProxyRegistry\r\n\t\t */\r\n\t\tthis._textProxyRegistry = new Map();\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a consumable value to the consumables list and links it with given model item.\r\n\t *\r\n\t *\t\tmodelConsumable.add( modelElement, 'insert' ); // Add `modelElement` insertion change to consumable values.\r\n\t *\t\tmodelConsumable.add( modelElement, 'addAttribute:bold' ); // Add `bold` attribute insertion on `modelElement` change.\r\n\t *\t\tmodelConsumable.add( modelElement, 'removeAttribute:bold' ); // Add `bold` attribute removal on `modelElement` change.\r\n\t *\t\tmodelConsumable.add( modelSelection, 'selection' ); // Add `modelSelection` to consumable values.\r\n\t *\t\tmodelConsumable.add( modelRange, 'range' ); // Add `modelRange` to consumable values.\r\n\t *\r\n\t * @param {module:engine/model/item~Item|module:engine/model/selection~Selection|module:engine/model/range~Range} item\r\n\t * Model item, range or selection that has the consumable.\r\n\t * @param {String} type Consumable type. Will be normalized to a proper form, that is either `<word>` or `<part>:<part>`.\r\n\t * Second colon and everything after will be cut. Passing event name is a safe and good practice.\r\n\t */\r\n\tadd( item, type ) {\r\n\t\ttype = _normalizeConsumableType( type );\r\n\r\n\t\tif ( item instanceof TextProxy ) {\r\n\t\t\titem = this._getSymbolForTextProxy( item );\r\n\t\t}\r\n\r\n\t\tif ( !this._consumable.has( item ) ) {\r\n\t\t\tthis._consumable.set( item, new Map() );\r\n\t\t}\r\n\r\n\t\tthis._consumable.get( item ).set( type, true );\r\n\t}\r\n\r\n\t/**\r\n\t * Removes given consumable value from given model item.\r\n\t *\r\n\t *\t\tmodelConsumable.consume( modelElement, 'insert' ); // Remove `modelElement` insertion change from consumable values.\r\n\t *\t\tmodelConsumable.consume( modelElement, 'addAttribute:bold' ); // Remove `bold` attribute insertion on `modelElement` change.\r\n\t *\t\tmodelConsumable.consume( modelElement, 'removeAttribute:bold' ); // Remove `bold` attribute removal on `modelElement` change.\r\n\t *\t\tmodelConsumable.consume( modelSelection, 'selection' ); // Remove `modelSelection` from consumable values.\r\n\t *\t\tmodelConsumable.consume( modelRange, 'range' ); // Remove 'modelRange' from consumable values.\r\n\t *\r\n\t * @param {module:engine/model/item~Item|module:engine/model/selection~Selection|module:engine/model/range~Range} item\r\n\t * Model item, range or selection from which consumable will be consumed.\r\n\t * @param {String} type Consumable type. Will be normalized to a proper form, that is either `<word>` or `<part>:<part>`.\r\n\t * Second colon and everything after will be cut. Passing event name is a safe and good practice.\r\n\t * @returns {Boolean} `true` if consumable value was available and was consumed, `false` otherwise.\r\n\t */\r\n\tconsume( item, type ) {\r\n\t\ttype = _normalizeConsumableType( type );\r\n\r\n\t\tif ( item instanceof TextProxy ) {\r\n\t\t\titem = this._getSymbolForTextProxy( item );\r\n\t\t}\r\n\r\n\t\tif ( this.test( item, type ) ) {\r\n\t\t\tthis._consumable.get( item ).set( type, false );\r\n\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Tests whether there is a consumable value of given type connected with given model item.\r\n\t *\r\n\t *\t\tmodelConsumable.test( modelElement, 'insert' ); // Check for `modelElement` insertion change.\r\n\t *\t\tmodelConsumable.test( modelElement, 'addAttribute:bold' ); // Check for `bold` attribute insertion on `modelElement` change.\r\n\t *\t\tmodelConsumable.test( modelElement, 'removeAttribute:bold' ); // Check for `bold` attribute removal on `modelElement` change.\r\n\t *\t\tmodelConsumable.test( modelSelection, 'selection' ); // Check if `modelSelection` is consumable.\r\n\t *\t\tmodelConsumable.test( modelRange, 'range' ); // Check if `modelRange` is consumable.\r\n\t *\r\n\t * @param {module:engine/model/item~Item|module:engine/model/selection~Selection|module:engine/model/range~Range} item\r\n\t * Model item, range or selection to be tested.\r\n\t * @param {String} type Consumable type. Will be normalized to a proper form, that is either `<word>` or `<part>:<part>`.\r\n\t * Second colon and everything after will be cut. Passing event name is a safe and good practice.\r\n\t * @returns {null|Boolean} `null` if such consumable was never added, `false` if the consumable values was\r\n\t * already consumed or `true` if it was added and not consumed yet.\r\n\t */\r\n\ttest( item, type ) {\r\n\t\ttype = _normalizeConsumableType( type );\r\n\r\n\t\tif ( item instanceof TextProxy ) {\r\n\t\t\titem = this._getSymbolForTextProxy( item );\r\n\t\t}\r\n\r\n\t\tconst itemConsumables = this._consumable.get( item );\r\n\r\n\t\tif ( itemConsumables === undefined ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tconst value = itemConsumables.get( type );\r\n\r\n\t\tif ( value === undefined ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Reverts consuming of consumable value.\r\n\t *\r\n\t *\t\tmodelConsumable.revert( modelElement, 'insert' ); // Revert consuming `modelElement` insertion change.\r\n\t *\t\tmodelConsumable.revert( modelElement, 'addAttribute:bold' ); // Revert consuming `bold` attribute insert from `modelElement`.\r\n\t *\t\tmodelConsumable.revert( modelElement, 'removeAttribute:bold' ); // Revert consuming `bold` attribute remove from `modelElement`.\r\n\t *\t\tmodelConsumable.revert( modelSelection, 'selection' ); // Revert consuming `modelSelection`.\r\n\t *\t\tmodelConsumable.revert( modelRange, 'range' ); // Revert consuming `modelRange`.\r\n\t *\r\n\t * @param {module:engine/model/item~Item|module:engine/model/selection~Selection|module:engine/model/range~Range} item\r\n\t * Model item, range or selection to be reverted.\r\n\t * @param {String} type Consumable type.\r\n\t * @returns {null|Boolean} `true` if consumable has been reversed, `false` otherwise. `null` if the consumable has\r\n\t * never been added.\r\n\t */\r\n\trevert( item, type ) {\r\n\t\ttype = _normalizeConsumableType( type );\r\n\r\n\t\tif ( item instanceof TextProxy ) {\r\n\t\t\titem = this._getSymbolForTextProxy( item );\r\n\t\t}\r\n\r\n\t\tconst test = this.test( item, type );\r\n\r\n\t\tif ( test === false ) {\r\n\t\t\tthis._consumable.get( item ).set( type, true );\r\n\r\n\t\t\treturn true;\r\n\t\t} else if ( test === true ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets a unique symbol for passed {@link module:engine/model/textproxy~TextProxy} instance. All `TextProxy` instances that\r\n\t * have same parent, same start index and same end index will get the same symbol.\r\n\t *\r\n\t * Used internally to correctly consume `TextProxy` instances.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/model/textproxy~TextProxy} textProxy `TextProxy` instance to get a symbol for.\r\n\t * @returns {Symbol} Symbol representing all equal instances of `TextProxy`.\r\n\t */\r\n\t_getSymbolForTextProxy( textProxy ) {\r\n\t\tlet symbol = null;\r\n\r\n\t\tconst startMap = this._textProxyRegistry.get( textProxy.startOffset );\r\n\r\n\t\tif ( startMap ) {\r\n\t\t\tconst endMap = startMap.get( textProxy.endOffset );\r\n\r\n\t\t\tif ( endMap ) {\r\n\t\t\t\tsymbol = endMap.get( textProxy.parent );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( !symbol ) {\r\n\t\t\tsymbol = this._addSymbolForTextProxy( textProxy.startOffset, textProxy.endOffset, textProxy.parent );\r\n\t\t}\r\n\r\n\t\treturn symbol;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a symbol for given properties that characterizes a {@link module:engine/model/textproxy~TextProxy} instance.\r\n\t *\r\n\t * Used internally to correctly consume `TextProxy` instances.\r\n\t *\r\n\t * @private\r\n\t * @param {Number} startIndex Text proxy start index in it's parent.\r\n\t * @param {Number} endIndex Text proxy end index in it's parent.\r\n\t * @param {module:engine/model/element~Element} parent Text proxy parent.\r\n\t * @returns {Symbol} Symbol generated for given properties.\r\n\t */\r\n\t_addSymbolForTextProxy( start, end, parent ) {\r\n\t\tconst symbol = Symbol( 'textProxySymbol' );\r\n\t\tlet startMap, endMap;\r\n\r\n\t\tstartMap = this._textProxyRegistry.get( start );\r\n\r\n\t\tif ( !startMap ) {\r\n\t\t\tstartMap = new Map();\r\n\t\t\tthis._textProxyRegistry.set( start, startMap );\r\n\t\t}\r\n\r\n\t\tendMap = startMap.get( end );\r\n\r\n\t\tif ( !endMap ) {\r\n\t\t\tendMap = new Map();\r\n\t\t\tstartMap.set( end, endMap );\r\n\t\t}\r\n\r\n\t\tendMap.set( parent, symbol );\r\n\r\n\t\treturn symbol;\r\n\t}\r\n}\r\n\r\n// Returns a normalized consumable type name from given string. A normalized consumable type name is a string that has\r\n// at most one colon, for example: `insert` or `addMarker:highlight`. If string to normalize has more \"parts\" (more colons),\r\n// the other parts are dropped, for example: `addattribute:bold:$text` -> `addattributes:bold`.\r\n//\r\n// @param {String} type Consumable type.\r\n// @returns {String} Normalized consumable type.\r\nfunction _normalizeConsumableType( type ) {\r\n\tconst parts = type.split( ':' );\r\n\r\n\treturn parts.length > 1 ? parts[ 0 ] + ':' + parts[ 1 ] : parts[ 0 ];\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/conversion/upcastdispatcher\r\n */\r\n\r\nimport ViewConsumable from './viewconsumable';\r\nimport ModelRange from '../model/range';\r\nimport ModelPosition from '../model/position';\r\nimport { SchemaContext } from '../model/schema';\r\n\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\r\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\r\n\r\n/**\r\n * `UpcastDispatcher` is a central point of {@link module:engine/view/view view} conversion, which is a process of\r\n * converting given {@link module:engine/view/documentfragment~DocumentFragment view document fragment} or\r\n * {@link module:engine/view/element~Element} into another structure.\r\n * In default application, {@link module:engine/view/view view} is converted to {@link module:engine/model/model}.\r\n *\r\n * During conversion process, for all {@link module:engine/view/node~Node view nodes} from the converted view document fragment,\r\n * `UpcastDispatcher` fires corresponding events. Special callbacks called \"converters\" should listen to\r\n * `UpcastDispatcher` for those events.\r\n *\r\n * Each callback, as the second argument, is passed a special object `data` that has `viewItem`, `modelCursor` and\r\n * `modelRange` properties. `viewItem` property contains {@link module:engine/view/node~Node view node} or\r\n * {@link module:engine/view/documentfragment~DocumentFragment view document fragment}\r\n * that is converted at the moment and might be handled by the callback. `modelRange` property should be used to save the result\r\n * of conversion and is always a {@link module:engine/model/range~Range} when conversion result is correct.\r\n * `modelCursor` property is a {@link module:engine/model/position~Position position} on which conversion result will be inserted\r\n * and is a context according to {@link module:engine/model/schema~Schema schema} will be checked before the conversion.\r\n * See also {@link ~UpcastDispatcher#convert}. It is also shared by reference by all callbacks listening to given event.\r\n *\r\n * The third parameter passed to a callback is an instance of {@link ~UpcastDispatcher}\r\n * which provides additional tools for converters.\r\n *\r\n * Examples of providing callbacks for `UpcastDispatcher`:\r\n *\r\n *\t\t// Converter for links (<a>).\r\n *\t\teditor.data.upcastDispatcher.on( 'element:a', ( evt, data, conversionApi ) => {\r\n *\t\t\tif ( conversionApi.consumable.consume( data.viewItem, { name: true, attributes: [ 'href' ] } ) ) {\r\n *\t\t\t\t// <a> element is inline and is represented by an attribute in the model.\r\n *\t\t\t\t// This is why we need to convert only children.\r\n *\t\t\t\tconst { modelRange } = conversionApi.convertChildren( data.viewItem, data.modelCursor );\r\n *\r\n *\t\t\t\tfor ( let item of modelRange.getItems() ) {\r\n *\t\t\t\t\tif ( conversionApi.schema.checkAttribute( item, 'linkHref' ) ) {\r\n *\t\t\t\t\t\tconversionApi.writer.setAttribute( 'linkHref', data.viewItem.getAttribute( 'href' ), item );\r\n *\t\t\t\t\t}\r\n *\t\t\t\t}\r\n *\t\t\t}\r\n *\t\t} );\r\n *\r\n *\t\t// Convert <p>'s font-size style.\r\n *\t\t// Note: You should use a low-priority observer in order to ensure that\r\n *\t\t// it's executed after the element-to-element converter.\r\n *\t\teditor.data.upcastDispatcher.on( 'element:p', ( evt, data, conversionApi ) => {\r\n *\t\t\tconst { consumable, schema, writer } = conversionApi;\r\n *\r\n *\t\t\tif ( !consumable.consume( data.viewItem, { style: 'font-size' } ) ) {\r\n *\t\t\t\treturn;\r\n *\t\t\t}\r\n *\r\n *\t\t\tconst fontSize = data.viewItem.getStyle( 'font-size' );\r\n *\r\n *\t\t\t// Don't go for the model element after data.modelCursor because it might happen\r\n *\t\t\t// that a single view element was converted to multiple model elements. Get all of them.\r\n *\t\t\tfor ( const item of data.modelRange.getItems( { shallow: true } ) ) {\r\n *\t\t\t\tif ( schema.checkAttribute( item, 'fontSize' ) ) {\r\n *\t\t\t\t\twriter.setAttribute( 'fontSize', fontSize, item );\r\n *\t\t\t\t}\r\n *\t\t\t}\r\n *\t\t}, { priority: 'low' } );\r\n *\r\n *\t\t// Convert all elements which have no custom converter into paragraph (autoparagraphing).\r\n *  \teditor.data.upcastDispatcher.on( 'element', ( evt, data, conversionApi ) => {\r\n *  \t \t// When element is already consumed by higher priority converters then do nothing.\r\n *  \t \tif ( conversionApi.consumable.test( data.viewItem, { name: data.viewItem.name } ) ) {\r\n *  \t \t\t\tconst paragraph = conversionApi.writer.createElement( 'paragraph' );\r\n *\r\n *  \t \t\t\t// Find allowed parent for paragraph that we are going to insert. If current parent does not allow\r\n *  \t \t\t\t// to insert paragraph but one of the ancestors does then split nodes to allowed parent.\r\n *  \t \t\t\tconst splitResult = conversionApi.splitToAllowedParent( paragraph, data.modelCursor );\r\n *\r\n *  \t \t\t\t// When there is no split result it means that we can't insert paragraph in this position.\r\n *  \t \t\t\tif ( splitResult ) {\r\n *  \t \t\t\t\t// Insert paragraph in allowed position.\r\n *  \t \t\t\t\tconversionApi.writer.insert( paragraph, splitResult.position );\r\n *\r\n *  \t \t\t\t\t// Convert children to paragraph.\r\n *  \t \t\t\t\tconst { modelRange } = conversionApi.convertChildren(\r\n *  \t \t\t\t\t\tdata.viewItem,\r\n *  \t \t\t\t\t\tconversionApi.writer.createPositionAt( paragraph, 0 )\r\n *  \t \t\t\t\t);\r\n *\r\n * \t\t\t\t\t\t// Set as conversion result, attribute converters may use this property.\r\n *  \t \t\t\t\tdata.modelRange = conversionApi.writer.createRange(\r\n *  \t \t\t\t\t\tconversionApi.writer.createPositionBefore( paragraph ),\r\n *  \t \t\t\t\t\tmodelRange.end\r\n *  \t \t\t\t\t);\r\n *\r\n *  \t \t\t\t\t// Continue conversion inside paragraph.\r\n *  \t \t\t\t\tdata.modelCursor = data.modelRange.end;\r\n *  \t \t\t\t}\r\n *  \t \t\t}\r\n *  \t \t}\r\n *  \t }, { priority: 'low' } );\r\n *\r\n * Before each conversion process, `UpcastDispatcher` fires {@link ~UpcastDispatcher#event:viewCleanup}\r\n * event which can be used to prepare tree view for conversion.\r\n *\r\n * @mixes module:utils/emittermixin~EmitterMixin\r\n * @fires viewCleanup\r\n * @fires element\r\n * @fires text\r\n * @fires documentFragment\r\n */\r\nexport default class UpcastDispatcher {\r\n\t/**\r\n\t * Creates a `UpcastDispatcher` that operates using passed API.\r\n\t *\r\n\t * @see module:engine/conversion/upcastdispatcher~UpcastConversionApi\r\n\t * @param {Object} [conversionApi] Additional properties for interface that will be passed to events fired\r\n\t * by `UpcastDispatcher`.\r\n\t */\r\n\tconstructor( conversionApi = {} ) {\r\n\t\t/**\r\n\t\t * List of the elements that were created during splitting.\r\n\t\t *\r\n\t\t * After conversion process the list is cleared.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {Map.<module:engine/model/element~Element,Array.<module:engine/model/element~Element>>}\r\n\t\t */\r\n\t\tthis._splitParts = new Map();\r\n\r\n\t\t/**\r\n\t\t * Position in the temporary structure where the converted content is inserted. The structure reflect the context of\r\n\t\t * the target position where the content will be inserted. This property is build based on the context parameter of the\r\n\t\t * convert method.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {module:engine/model/position~Position|null}\r\n\t\t */\r\n\t\tthis._modelCursor = null;\r\n\r\n\t\t/**\r\n\t\t * Interface passed by dispatcher to the events callbacks.\r\n\t\t *\r\n\t\t * @member {module:engine/conversion/upcastdispatcher~UpcastConversionApi}\r\n\t\t */\r\n\t\tthis.conversionApi = Object.assign( {}, conversionApi );\r\n\r\n\t\t// `convertItem`, `convertChildren` and `splitToAllowedParent` are bound to this `UpcastDispatcher`\r\n\t\t// instance and set on `conversionApi`. This way only a part of `UpcastDispatcher` API is exposed.\r\n\t\tthis.conversionApi.convertItem = this._convertItem.bind( this );\r\n\t\tthis.conversionApi.convertChildren = this._convertChildren.bind( this );\r\n\t\tthis.conversionApi.splitToAllowedParent = this._splitToAllowedParent.bind( this );\r\n\t\tthis.conversionApi.getSplitParts = this._getSplitParts.bind( this );\r\n\t}\r\n\r\n\t/**\r\n\t * Starts the conversion process. The entry point for the conversion.\r\n\t *\r\n\t * @fires element\r\n\t * @fires text\r\n\t * @fires documentFragment\r\n\t * @param {module:engine/view/documentfragment~DocumentFragment|module:engine/view/element~Element} viewItem\r\n\t * Part of the view to be converted.\r\n\t * @param {module:engine/model/writer~Writer} writer Instance of model writer.\r\n\t * @param {module:engine/model/schema~SchemaContextDefinition} [context=['$root']] Elements will be converted according to this context.\r\n\t * @returns {module:engine/model/documentfragment~DocumentFragment} Model data that is a result of the conversion process\r\n\t * wrapped in `DocumentFragment`. Converted marker elements will be set as that document fragment's\r\n\t * {@link module:engine/model/documentfragment~DocumentFragment#markers static markers map}.\r\n\t */\r\n\tconvert( viewItem, writer, context = [ '$root' ] ) {\r\n\t\tthis.fire( 'viewCleanup', viewItem );\r\n\r\n\t\t// Create context tree and set position in the top element.\r\n\t\t// Items will be converted according to this position.\r\n\t\tthis._modelCursor = createContextTree( context, writer );\r\n\r\n\t\t// Store writer in conversion as a conversion API\r\n\t\t// to be sure that conversion process will use the same batch.\r\n\t\tthis.conversionApi.writer = writer;\r\n\r\n\t\t// Create consumable values list for conversion process.\r\n\t\tthis.conversionApi.consumable = ViewConsumable.createFrom( viewItem );\r\n\r\n\t\t// Custom data stored by converter for conversion process.\r\n\t\tthis.conversionApi.store = {};\r\n\r\n\t\t// Do the conversion.\r\n\t\tconst { modelRange } = this._convertItem( viewItem, this._modelCursor );\r\n\r\n\t\t// Conversion result is always a document fragment so let's create it.\r\n\t\tconst documentFragment = writer.createDocumentFragment();\r\n\r\n\t\t// When there is a conversion result.\r\n\t\tif ( modelRange ) {\r\n\t\t\t// Remove all empty elements that were create while splitting.\r\n\t\t\tthis._removeEmptyElements();\r\n\r\n\t\t\t// Move all items that were converted in context tree to the document fragment.\r\n\t\t\tfor ( const item of Array.from( this._modelCursor.parent.getChildren() ) ) {\r\n\t\t\t\twriter.append( item, documentFragment );\r\n\t\t\t}\r\n\r\n\t\t\t// Extract temporary markers elements from model and set as static markers collection.\r\n\t\t\tdocumentFragment.markers = extractMarkersFromModelFragment( documentFragment, writer );\r\n\t\t}\r\n\r\n\t\t// Clear context position.\r\n\t\tthis._modelCursor = null;\r\n\r\n\t\t// Clear split elements lists.\r\n\t\tthis._splitParts.clear();\r\n\r\n\t\t// Clear conversion API.\r\n\t\tthis.conversionApi.writer = null;\r\n\t\tthis.conversionApi.store = null;\r\n\r\n\t\t// Return fragment as conversion result.\r\n\t\treturn documentFragment;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @see module:engine/conversion/upcastdispatcher~UpcastConversionApi#convertItem\r\n\t */\r\n\t_convertItem( viewItem, modelCursor ) {\r\n\t\tconst data = Object.assign( { viewItem, modelCursor, modelRange: null } );\r\n\r\n\t\tif ( viewItem.is( 'element' ) ) {\r\n\t\t\tthis.fire( 'element:' + viewItem.name, data, this.conversionApi );\r\n\t\t} else if ( viewItem.is( 'text' ) ) {\r\n\t\t\tthis.fire( 'text', data, this.conversionApi );\r\n\t\t} else {\r\n\t\t\tthis.fire( 'documentFragment', data, this.conversionApi );\r\n\t\t}\r\n\r\n\t\t// Handle incorrect conversion result.\r\n\t\tif ( data.modelRange && !( data.modelRange instanceof ModelRange ) ) {\r\n\t\t\t/**\r\n\t\t\t * Incorrect conversion result was dropped.\r\n\t\t\t *\r\n\t\t\t * {@link module:engine/model/range~Range Model range} should be a conversion result.\r\n\t\t\t *\r\n\t\t\t * @error view-conversion-dispatcher-incorrect-result\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'view-conversion-dispatcher-incorrect-result: Incorrect conversion result was dropped.', this );\r\n\t\t}\r\n\r\n\t\treturn { modelRange: data.modelRange, modelCursor: data.modelCursor };\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @see module:engine/conversion/upcastdispatcher~UpcastConversionApi#convertChildren\r\n\t */\r\n\t_convertChildren( viewItem, modelCursor ) {\r\n\t\tconst modelRange = new ModelRange( modelCursor );\r\n\t\tlet nextModelCursor = modelCursor;\r\n\r\n\t\tfor ( const viewChild of Array.from( viewItem.getChildren() ) ) {\r\n\t\t\tconst result = this._convertItem( viewChild, nextModelCursor );\r\n\r\n\t\t\tif ( result.modelRange instanceof ModelRange ) {\r\n\t\t\t\tmodelRange.end = result.modelRange.end;\r\n\t\t\t\tnextModelCursor = result.modelCursor;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn { modelRange, modelCursor: nextModelCursor };\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @see module:engine/conversion/upcastdispatcher~UpcastConversionApi#splitToAllowedParent\r\n\t */\r\n\t_splitToAllowedParent( node, modelCursor ) {\r\n\t\t// Try to find allowed parent.\r\n\t\tconst allowedParent = this.conversionApi.schema.findAllowedParent( modelCursor, node );\r\n\r\n\t\t// When there is no parent that allows to insert node then return `null`.\r\n\t\tif ( !allowedParent ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\t// When current position parent allows to insert node then return this position.\r\n\t\tif ( allowedParent === modelCursor.parent ) {\r\n\t\t\treturn { position: modelCursor };\r\n\t\t}\r\n\r\n\t\t// When allowed parent is in context tree.\r\n\t\tif ( this._modelCursor.parent.getAncestors().includes( allowedParent ) ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\t// Split element to allowed parent.\r\n\t\tconst splitResult = this.conversionApi.writer.split( modelCursor, allowedParent );\r\n\r\n\t\t// Using the range returned by `model.Writer#split`, we will pair original elements with their split parts.\r\n\t\t//\r\n\t\t// The range returned from the writer spans \"over the split\" or, precisely saying, from the end of the original element (the one\r\n\t\t// that got split) to the beginning of the other part of that element:\r\n\t\t//\r\n\t\t// <limit><a><b><c>X[]Y</c></b><a></limit> ->\r\n\t\t// <limit><a><b><c>X[</c></b></a><a><b><c>]Y</c></b></a>\r\n\t\t//\r\n\t\t// After the split there cannot be any full node between the positions in `splitRange`. The positions are touching.\r\n\t\t// Also, because of how splitting works, it is easy to notice, that \"closing tags\" are in the reverse order than \"opening tags\".\r\n\t\t// Also, since we split all those elements, each of them has to have the other part.\r\n\t\t//\r\n\t\t// With those observations in mind, we will pair the original elements with their split parts by saving \"closing tags\" and matching\r\n\t\t// them with \"opening tags\" in the reverse order. For that we can use a stack.\r\n\t\tconst stack = [];\r\n\r\n\t\tfor ( const treeWalkerValue of splitResult.range.getWalker() ) {\r\n\t\t\tif ( treeWalkerValue.type == 'elementEnd' ) {\r\n\t\t\t\tstack.push( treeWalkerValue.item );\r\n\t\t\t} else {\r\n\t\t\t\t// There should not be any text nodes after the element is split, so the only other value is `elementStart`.\r\n\t\t\t\tconst originalPart = stack.pop();\r\n\t\t\t\tconst splitPart = treeWalkerValue.item;\r\n\r\n\t\t\t\tthis._registerSplitPair( originalPart, splitPart );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tposition: splitResult.position,\r\n\t\t\tcursorParent: splitResult.range.end.parent\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Registers that `splitPart` element is a split part of the `originalPart` element.\r\n\t *\r\n\t * Data set by this method is used by {@link #_getSplitParts} and {@link #_removeEmptyElements}.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/model/element~Element} originalPart\r\n\t * @param {module:engine/model/element~Element} splitPart\r\n\t */\r\n\t_registerSplitPair( originalPart, splitPart ) {\r\n\t\tif ( !this._splitParts.has( originalPart ) ) {\r\n\t\t\tthis._splitParts.set( originalPart, [ originalPart ] );\r\n\t\t}\r\n\r\n\t\tconst list = this._splitParts.get( originalPart );\r\n\r\n\t\tthis._splitParts.set( splitPart, list );\r\n\t\tlist.push( splitPart );\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @see module:engine/conversion/upcastdispatcher~UpcastConversionApi#getSplitParts\r\n\t */\r\n\t_getSplitParts( element ) {\r\n\t\tlet parts;\r\n\r\n\t\tif ( !this._splitParts.has( element ) ) {\r\n\t\t\tparts = [ element ];\r\n\t\t} else {\r\n\t\t\tparts = this._splitParts.get( element );\r\n\t\t}\r\n\r\n\t\treturn parts;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if there are any empty elements created while splitting and removes them.\r\n\t *\r\n\t * This method works recursively to re-check empty elements again after at least one element was removed in the initial call,\r\n\t * as some elements might have become empty after other empty elements were removed from them.\r\n\t *\r\n\t * @private\r\n\t */\r\n\t_removeEmptyElements() {\r\n\t\tlet anyRemoved = false;\r\n\r\n\t\tfor ( const element of this._splitParts.keys() ) {\r\n\t\t\tif ( element.isEmpty ) {\r\n\t\t\t\tthis.conversionApi.writer.remove( element );\r\n\t\t\t\tthis._splitParts.delete( element );\r\n\r\n\t\t\t\tanyRemoved = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( anyRemoved ) {\r\n\t\t\tthis._removeEmptyElements();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Fired before the first conversion event, at the beginning of upcast (view to model conversion) process.\r\n\t *\r\n\t * @event viewCleanup\r\n\t * @param {module:engine/view/documentfragment~DocumentFragment|module:engine/view/element~Element}\r\n\t * viewItem Part of the view to be converted.\r\n\t */\r\n\r\n\t/**\r\n\t * Fired when {@link module:engine/view/element~Element} is converted.\r\n\t *\r\n\t * `element` is a namespace event for a class of events. Names of actually called events follow this pattern:\r\n\t * `element:<elementName>` where `elementName` is the name of converted element. This way listeners may listen to\r\n\t * all elements conversion or to conversion of specific elements.\r\n\t *\r\n\t * @event element\r\n\t * @param {Object} data Conversion data. Keep in mind that this object is shared by reference between all\r\n\t * callbacks that will be called. This means that callbacks can override values if needed, and those values will\r\n\t * be available in other callbacks.\r\n\t * @param {module:engine/view/item~Item} data.viewItem Converted item.\r\n\t * @param {module:engine/model/position~Position} data.modelCursor Position where a converter should start changes.\r\n\t * Change this value for the next converter to tell where the conversion should continue.\r\n\t * @param {module:engine/model/range~Range} data.modelRange The current state of conversion result. Every change to\r\n\t * converted element should be reflected by setting or modifying this property.\r\n\t * @param {module:engine/conversion/upcastdispatcher~UpcastConversionApi} conversionApi Conversion utilities to be used by callback.\r\n\t */\r\n\r\n\t/**\r\n\t * Fired when {@link module:engine/view/text~Text} is converted.\r\n\t *\r\n\t * @event text\r\n\t * @see #event:element\r\n\t */\r\n\r\n\t/**\r\n\t * Fired when {@link module:engine/view/documentfragment~DocumentFragment} is converted.\r\n\t *\r\n\t * @event documentFragment\r\n\t * @see #event:element\r\n\t */\r\n}\r\n\r\nmix( UpcastDispatcher, EmitterMixin );\r\n\r\n// Traverses given model item and searches elements which marks marker range. Found element is removed from\r\n// DocumentFragment but path of this element is stored in a Map which is then returned.\r\n//\r\n// @param {module:engine/view/documentfragment~DocumentFragment|module:engine/view/node~Node} modelItem Fragment of model.\r\n// @returns {Map<String, module:engine/model/range~Range>} List of static markers.\r\nfunction extractMarkersFromModelFragment( modelItem, writer ) {\r\n\tconst markerElements = new Set();\r\n\tconst markers = new Map();\r\n\r\n\t// Create ModelTreeWalker.\r\n\tconst range = ModelRange._createIn( modelItem ).getItems();\r\n\r\n\t// Walk through DocumentFragment and collect marker elements.\r\n\tfor ( const item of range ) {\r\n\t\t// Check if current element is a marker.\r\n\t\tif ( item.name == '$marker' ) {\r\n\t\t\tmarkerElements.add( item );\r\n\t\t}\r\n\t}\r\n\r\n\t// Walk through collected marker elements store its path and remove its from the DocumentFragment.\r\n\tfor ( const markerElement of markerElements ) {\r\n\t\tconst markerName = markerElement.getAttribute( 'data-name' );\r\n\t\tconst currentPosition = writer.createPositionBefore( markerElement );\r\n\r\n\t\t// When marker of given name is not stored it means that we have found the beginning of the range.\r\n\t\tif ( !markers.has( markerName ) ) {\r\n\t\t\tmarkers.set( markerName, new ModelRange( currentPosition.clone() ) );\r\n\t\t// Otherwise is means that we have found end of the marker range.\r\n\t\t} else {\r\n\t\t\tmarkers.get( markerName ).end = currentPosition.clone();\r\n\t\t}\r\n\r\n\t\t// Remove marker element from DocumentFragment.\r\n\t\twriter.remove( markerElement );\r\n\t}\r\n\r\n\treturn markers;\r\n}\r\n\r\n// Creates model fragment according to given context and returns position in the bottom (the deepest) element.\r\nfunction createContextTree( contextDefinition, writer ) {\r\n\tlet position;\r\n\r\n\tfor ( const item of new SchemaContext( contextDefinition ) ) {\r\n\t\tconst attributes = {};\r\n\r\n\t\tfor ( const key of item.getAttributeKeys() ) {\r\n\t\t\tattributes[ key ] = item.getAttribute( key );\r\n\t\t}\r\n\r\n\t\tconst current = writer.createElement( item.name, attributes );\r\n\r\n\t\tif ( position ) {\r\n\t\t\twriter.append( current, position );\r\n\t\t}\r\n\r\n\t\tposition = ModelPosition._createAt( current, 0 );\r\n\t}\r\n\r\n\treturn position;\r\n}\r\n\r\n/**\r\n * Conversion interface that is registered for given {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher}\r\n * and is passed as one of parameters when {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher dispatcher}\r\n * fires it's events.\r\n *\r\n * @interface module:engine/conversion/upcastdispatcher~UpcastConversionApi\r\n */\r\n\r\n/**\r\n * Starts conversion of given item by firing an appropriate event.\r\n *\r\n * Every fired event is passed (as first parameter) an object with `modelRange` property. Every event may set and/or\r\n * modify that property. When all callbacks are done, the final value of `modelRange` property is returned by this method.\r\n * The `modelRange` must be {@link module:engine/model/range~Range model range} or `null` (as set by default).\r\n *\r\n * @method #convertItem\r\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element\r\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:text\r\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:documentFragment\r\n * @param {module:engine/view/item~Item} viewItem Item to convert.\r\n * @param {module:engine/model/position~Position} modelCursor Position of conversion.\r\n * @returns {Object} result Conversion result.\r\n * @returns {module:engine/model/range~Range|null} result.modelRange Model range containing result of item conversion,\r\n * created and modified by callbacks attached to fired event, or `null` if the conversion result was incorrect.\r\n * @returns {module:engine/model/position~Position} result.modelCursor Position where conversion should be continued.\r\n */\r\n\r\n/**\r\n * Starts conversion of all children of given item by firing appropriate events for all those children.\r\n *\r\n * @method #convertChildren\r\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element\r\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:text\r\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:documentFragment\r\n * @param {module:engine/view/item~Item} viewItem Element which children should be converted.\r\n * @param {module:engine/model/position~Position} modelCursor Position of conversion.\r\n * @returns {Object} result Conversion result.\r\n * @returns {module:engine/model/range~Range} result.modelRange Model range containing results of conversion of all children of given item.\r\n * When no children was converted then range is collapsed.\r\n * @returns {module:engine/model/position~Position} result.modelCursor Position where conversion should be continued.\r\n */\r\n\r\n/**\r\n * Checks {@link module:engine/model/schema~Schema schema} to find allowed parent for element that we are going to insert\r\n * starting from given position. If current parent does not allow to insert element but one of the ancestors does then\r\n * split nodes to allowed parent.\r\n *\r\n * If schema allows to insert node in given position, nothing is split and object with that position is returned.\r\n *\r\n * If it was not possible to find allowed parent, `null` is returned, nothing is split.\r\n *\r\n * Otherwise, ancestors are split and object with position and the copy of the split element is returned.\r\n *\r\n * For instance, if `<image>` is not allowed in `<paragraph>` but is allowed in `$root`:\r\n *\r\n *\t\t<paragraph>foo[]bar</paragraph>\r\n *\r\n *  \t-> split for `<image>` ->\r\n *\r\n *  \t<paragraph>foo</paragraph>[]<paragraph>bar</paragraph>\r\n *\r\n * In the sample above position between `<paragraph>` elements will be returned as `position` and the second `paragraph`\r\n * as `cursorParent`.\r\n *\r\n * @method #splitToAllowedParent\r\n * @param {module:engine/model/position~Position} position Position on which element is going to be inserted.\r\n * @param {module:engine/model/node~Node} node Node to insert.\r\n * @returns {Object|null} Split result. If it was not possible to find allowed position `null` is returned.\r\n * @returns {module:engine/model/position~Position} position between split elements.\r\n * @returns {module:engine/model/element~Element} [cursorParent] Element inside which cursor should be placed to\r\n * continue conversion. When element is not defined it means that there was no split.\r\n */\r\n\r\n/**\r\n * Returns all the split parts of given `element` that were created during upcasting through using {@link #splitToAllowedParent}.\r\n * It enables you to easily track those elements and continue processing them after they are split during their children conversion.\r\n *\r\n *\t\t<paragraph>Foo<image />bar<image />baz</paragraph> ->\r\n *\t\t<paragraph>Foo</paragraph><image /><paragraph>bar</paragraph><image /><paragraph>baz</paragraph>\r\n *\r\n * For a reference to any of above paragraphs, the function will return all three paragraphs (the original element included),\r\n * sorted in the order of their creation (the original element is the first one).\r\n *\r\n * If given `element` was not split, an array with single element is returned.\r\n *\r\n * Example of a usage in a converter code:\r\n *\r\n *\t\tconst myElement = conversionApi.writer.createElement( 'myElement' );\r\n *\r\n *\t\t// Children conversion may split `myElement`.\r\n *\t\tconversionApi.convertChildren( myElement, modelCursor );\r\n *\r\n *\t\tconst splitParts = conversionApi.getSplitParts( myElement );\r\n *\t\tconst lastSplitPart = splitParts[ splitParts.length - 1 ];\r\n *\r\n *\t\t// Setting `data.modelRange` basing on split parts:\r\n *\t\tdata.modelRange = conversionApi.writer.createRange(\r\n *\t\t\tconversionApi.writer.createPositionBefore( myElement ),\r\n *\t\t\tconversionApi.writer.createPositionAfter( lastSplitPart )\r\n *\t\t);\r\n *\r\n *\t\t// Setting `data.modelCursor` to continue after the last split element:\r\n *\t\tdata.modelCursor = conversionApi.writer.createPositionAfter( lastSplitPart );\r\n *\r\n * **Tip:** if you are unable to get a reference to the original element (for example because the code is split into multiple converters\r\n * or even classes) but it was already converted, you might want to check first element in `data.modelRange`. This is a common situation\r\n * if an attribute converter is separated from an element converter.\r\n *\r\n * @method #getSplitParts\r\n * @param {module:engine/model/element~Element} element\r\n * @returns {Array.<module:engine/model/element~Element>}\r\n */\r\n\r\n/**\r\n * Stores information about what parts of processed view item are still waiting to be handled. After a piece of view item\r\n * was converted, appropriate consumable value should be {@link module:engine/conversion/viewconsumable~ViewConsumable#consume consumed}.\r\n *\r\n * @member {module:engine/conversion/viewconsumable~ViewConsumable} #consumable\r\n */\r\n\r\n/**\r\n * Custom data stored by converters for conversion process. Custom properties of this object can be defined and use to\r\n * pass parameters between converters.\r\n *\r\n * The difference between this property and `data` parameter of\r\n * {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element} is that `data` parameters allows you\r\n * to pass parameters within a single event and `store` within the whole conversion.\r\n *\r\n * @member {Object} #store\r\n */\r\n\r\n/**\r\n * The model's schema instance.\r\n *\r\n * @member {module:engine/model/schema~Schema} #schema\r\n */\r\n\r\n/**\r\n * The {@link module:engine/model/writer~Writer} instance used to manipulate data during conversion.\r\n *\r\n * @member {module:engine/model/writer~Writer} #writer\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\nimport Matcher from '../view/matcher';\r\nimport ModelRange from '../model/range';\r\nimport ConversionHelpers from './conversionhelpers';\r\n\r\nimport { cloneDeep } from 'lodash-es';\r\nimport ModelSelection from '../model/selection';\r\n\r\n/**\r\n * Contains {@link module:engine/view/view view} to {@link module:engine/model/model model} converters for\r\n * {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher}.\r\n *\r\n * @module engine/conversion/upcasthelpers\r\n */\r\n\r\n/**\r\n * Upcast conversion helper functions.\r\n *\r\n * @extends module:engine/conversion/conversionhelpers~ConversionHelpers\r\n */\r\nexport default class UpcastHelpers extends ConversionHelpers {\r\n\t/**\r\n\t * View element to model element conversion helper.\r\n\t *\r\n\t * This conversion results in creating a model element. For example,\r\n\t * view `<p>Foo</p>` becomes `<paragraph>Foo</paragraph>` in the model.\r\n\t *\r\n\t * Keep in mind that the element will be inserted only if it is allowed\r\n\t * by {@link module:engine/model/schema~Schema schema} configuration.\r\n\t *\r\n\t *\t\teditor.conversion.for( 'upcast' ).elementToElement( {\r\n\t *\t\t\tview: 'p',\r\n\t *\t\t\tmodel: 'paragraph'\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\teditor.conversion.for( 'upcast' ).elementToElement( {\r\n\t *\t\t\tview: 'p',\r\n\t *\t\t\tmodel: 'paragraph',\r\n\t *\t\t\tconverterPriority: 'high'\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\teditor.conversion.for( 'upcast' ).elementToElement( {\r\n\t *\t\t\tview: {\r\n\t *\t\t\t\tname: 'p',\r\n\t *\t\t\t\tclasses: 'fancy'\r\n\t *\t\t\t},\r\n\t *\t\t\tmodel: 'fancyParagraph'\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\teditor.conversion.for( 'upcast' ).elementToElement( {\r\n\t * \t\t\tview: {\r\n\t *\t\t\t\tname: 'p',\r\n\t *\t\t\t\tclasses: 'heading'\r\n\t * \t\t\t},\r\n\t * \t\t\tmodel: ( viewElement, modelWriter ) => {\r\n\t * \t\t\t\treturn modelWriter.createElement( 'heading', { level: viewElement.getAttribute( 'data-level' ) } );\r\n\t * \t\t\t}\r\n\t * \t\t} );\r\n\t *\r\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\r\n\t * to the conversion process.\r\n\t *\r\n\t * @method #elementToElement\r\n\t * @param {Object} config Conversion configuration.\r\n\t * @param {module:engine/view/matcher~MatcherPattern} [config.view] Pattern matching all view elements which should be converted. If not\r\n\t * set, the converter will fire for every view element.\r\n\t * @param {String|module:engine/model/element~Element|Function} config.model Name of the model element, a model element\r\n\t * instance or a function that takes a view element and returns a model element. The model element will be inserted in the model.\r\n\t * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\r\n\t * @returns {module:engine/conversion/upcasthelpers~UpcastHelpers}\r\n\t */\r\n\telementToElement( config ) {\r\n\t\treturn this.add( upcastElementToElement( config ) );\r\n\t}\r\n\r\n\t/**\r\n\t * View element to model attribute conversion helper.\r\n\t *\r\n\t * This conversion results in setting an attribute on a model node. For example, view `<strong>Foo</strong>` becomes\r\n\t * `Foo` {@link module:engine/model/text~Text model text node} with `bold` attribute set to `true`.\r\n\t *\r\n\t * This helper is meant to set a model attribute on all the elements that are inside the converted element:\r\n\t *\r\n\t *\t\t<strong>Foo</strong>   -->   <strong><p>Foo</p></strong>   -->   <paragraph><$text bold=\"true\">Foo</$text></paragraph>\r\n\t *\r\n\t * Above is a sample of HTML code, that goes through autoparagraphing (first step) and then is converted (second step).\r\n\t * Even though `<strong>` is over `<p>` element, `bold=\"true\"` was added to the text. See\r\n\t * {@link module:engine/conversion/upcasthelpers~UpcastHelpers#attributeToAttribute} for comparison.\r\n\t *\r\n\t * Keep in mind that the attribute will be set only if it is allowed by {@link module:engine/model/schema~Schema schema} configuration.\r\n\t *\r\n\t *\t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\r\n\t *\t\t\tview: 'strong',\r\n\t *\t\t\tmodel: 'bold'\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\r\n\t *\t\t\tview: 'strong',\r\n\t *\t\t\tmodel: 'bold',\r\n\t *\t\t\tconverterPriority: 'high'\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\r\n\t *\t\t\tview: {\r\n\t *\t\t\t\tname: 'span',\r\n\t *\t\t\t\tclasses: 'bold'\r\n\t *\t\t\t},\r\n\t *\t\t\tmodel: 'bold'\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\r\n\t *\t\t\tview: {\r\n\t *\t\t\t\tname: 'span',\r\n\t *\t\t\t\tclasses: [ 'styled', 'styled-dark' ]\r\n\t *\t\t\t},\r\n\t *\t\t\tmodel: {\r\n\t *\t\t\t\tkey: 'styled',\r\n\t *\t\t\t\tvalue: 'dark'\r\n\t *\t\t\t}\r\n\t *\t\t} );\r\n\t *\r\n\t * \t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\r\n\t *\t\t\tview: {\r\n\t *\t\t\t\tname: 'span',\r\n\t *\t\t\t\tstyles: {\r\n\t *\t\t\t\t\t'font-size': /[\\s\\S]+/\r\n\t *\t\t\t\t}\r\n\t *\t\t\t},\r\n\t *\t\t\tmodel: {\r\n\t *\t\t\t\tkey: 'fontSize',\r\n\t *\t\t\t\tvalue: viewElement => {\r\n\t *\t\t\t\t\tconst fontSize = viewElement.getStyle( 'font-size' );\r\n\t *\t\t\t\t\tconst value = fontSize.substr( 0, fontSize.length - 2 );\r\n\t *\r\n\t *\t\t\t\t\tif ( value <= 10 ) {\r\n\t *\t\t\t\t\t\treturn 'small';\r\n\t *\t\t\t\t\t} else if ( value > 12 ) {\r\n\t *\t\t\t\t\t\treturn 'big';\r\n\t *\t\t\t\t\t}\r\n\t *\r\n\t *\t\t\t\t\treturn null;\r\n\t *\t\t\t\t}\r\n\t *\t\t\t}\r\n\t *\t\t} );\r\n\t *\r\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\r\n\t * to the conversion process.\r\n\t *\r\n\t * @method #elementToAttribute\r\n\t * @param {Object} config Conversion configuration.\r\n\t * @param {module:engine/view/matcher~MatcherPattern} config.view Pattern matching all view elements which should be converted.\r\n\t * @param {String|Object} config.model Model attribute key or an object with `key` and `value` properties, describing\r\n\t * the model attribute. `value` property may be set as a function that takes a view element and returns the value.\r\n\t * If `String` is given, the model attribute value will be set to `true`.\r\n\t * @param {module:utils/priorities~PriorityString} [config.converterPriority='low'] Converter priority.\r\n\t * @returns {module:engine/conversion/upcasthelpers~UpcastHelpers}\r\n\t */\r\n\telementToAttribute( config ) {\r\n\t\treturn this.add( upcastElementToAttribute( config ) );\r\n\t}\r\n\r\n\t/**\r\n\t * View attribute to model attribute conversion helper.\r\n\t *\r\n\t * This conversion results in setting an attribute on a model node. For example, view `<img src=\"foo.jpg\"></img>` becomes\r\n\t * `<image source=\"foo.jpg\"></image>` in the model.\r\n\t *\r\n\t * This helper is meant to convert view attributes from view elements which got converted to the model, so the view attribute\r\n\t * is set only on the corresponding model node:\r\n\t *\r\n\t *\t\t<div class=\"dark\"><div>foo</div></div>    -->    <div dark=\"true\"><div>foo</div></div>\r\n\t *\r\n\t * Above, `class=\"dark\"` attribute is added only to the `<div>` elements that has it. This is in contrary to\r\n\t * {@link module:engine/conversion/upcasthelpers~UpcastHelpers#elementToAttribute} which sets attributes for\r\n\t * all the children in the model:\r\n\t *\r\n\t *\t\t<strong>Foo</strong>   -->   <strong><p>Foo</p></strong>   -->   <paragraph><$text bold=\"true\">Foo</$text></paragraph>\r\n\t *\r\n\t * Above is a sample of HTML code, that goes through autoparagraphing (first step) and then is converted (second step).\r\n\t * Even though `<strong>` is over `<p>` element, `bold=\"true\"` was added to the text.\r\n\t *\r\n\t * Keep in mind that the attribute will be set only if it is allowed by {@link module:engine/model/schema~Schema schema} configuration.\r\n\t *\r\n\t *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\r\n\t *\t\t\tview: 'src',\r\n\t *\t\t\tmodel: 'source'\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\r\n\t *\t\t\tview: { key: 'src' },\r\n\t *\t\t\tmodel: 'source'\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\r\n\t *\t\t\tview: { key: 'src' },\r\n\t *\t\t\tmodel: 'source',\r\n\t *\t\t\tconverterPriority: 'normal'\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\r\n\t *\t\t\tview: {\r\n\t *\t\t\t\tkey: 'data-style',\r\n\t *\t\t\t\tvalue: /[\\s\\S]+/\r\n\t *\t\t\t},\r\n\t *\t\t\tmodel: 'styled'\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\r\n\t *\t\t\tview: {\r\n\t *\t\t\t\tname: 'img',\r\n\t *\t\t\t\tkey: 'class',\r\n\t *\t\t\t\tvalue: 'styled-dark'\r\n\t *\t\t\t},\r\n\t *\t\t\tmodel: {\r\n\t *\t\t\t\tkey: 'styled',\r\n\t *\t\t\t\tvalue: 'dark'\r\n\t *\t\t\t}\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\r\n\t *\t\t\tview: {\r\n\t *\t\t\t\tkey: 'class',\r\n\t *\t\t\t\tvalue: /styled-[\\S]+/\r\n\t *\t\t\t},\r\n\t *\t\t\tmodel: {\r\n\t *\t\t\t\tkey: 'styled'\r\n\t *\t\t\t\tvalue: viewElement => {\r\n\t *\t\t\t\t\tconst regexp = /styled-([\\S]+)/;\r\n\t *\t\t\t\t\tconst match = viewElement.getAttribute( 'class' ).match( regexp );\r\n\t *\r\n\t *\t\t\t\t\treturn match[ 1 ];\r\n\t *\t\t\t\t}\r\n\t *\t\t\t}\r\n\t *\t\t} );\r\n\t *\r\n\t * Converting styles works a bit differently as it requires `view.styles` to be an object and by default\r\n\t * a model attribute will be set to `true` by such a converter. You can set the model attribute to any value by providing the `value`\r\n\t * callback that returns the desired value.\r\n\t *\r\n\t *\t\t// Default conversion of font-weight style will result in setting bold attribute to true.\r\n\t *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\r\n\t *\t\t\tview: {\r\n\t *\t\t\t\tstyles: {\r\n\t *\t\t\t\t\t'font-weight': 'bold'\r\n\t *\t\t\t\t}\r\n\t *\t\t\t},\r\n\t *\t\t\tmodel: 'bold'\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\t// This converter will pass any style value to the `lineHeight` model attribute.\r\n\t *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\r\n\t *\t\t\tview: {\r\n\t *\t\t\t\tstyles: {\r\n\t *\t\t\t\t\t'line-height': /[\\s\\S]+/\r\n\t *\t\t\t\t}\r\n\t *\t\t\t},\r\n\t *\t\t\tmodel: {\r\n\t *\t\t\t\tkey: 'lineHeight',\r\n\t *\t\t\t\tvalue: viewElement => viewElement.getStyle( 'line-height' )\r\n\t *\t\t\t}\r\n\t *\t\t} );\r\n\t *\r\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\r\n\t * to the conversion process.\r\n\t *\r\n\t * @method #attributeToAttribute\r\n\t * @param {Object} config Conversion configuration.\r\n\t * @param {String|Object} config.view Specifies which view attribute will be converted. If a `String` is passed,\r\n\t * attributes with given key will be converted. If an `Object` is passed, it must have a required `key` property,\r\n\t * specifying view attribute key, and may have an optional `value` property, specifying view attribute value and optional `name`\r\n\t * property specifying a view element name from/on which the attribute should be converted. `value` can be given as a `String`,\r\n\t * a `RegExp` or a function callback, that takes view attribute value as the only parameter and returns `Boolean`.\r\n\t * @param {String|Object} config.model Model attribute key or an object with `key` and `value` properties, describing\r\n\t * the model attribute. `value` property may be set as a function that takes a view element and returns the value.\r\n\t * If `String` is given, the model attribute value will be same as view attribute value.\r\n\t * @param {module:utils/priorities~PriorityString} [config.converterPriority='low'] Converter priority.\r\n\t * @returns {module:engine/conversion/upcasthelpers~UpcastHelpers}\r\n\t */\r\n\tattributeToAttribute( config ) {\r\n\t\treturn this.add( upcastAttributeToAttribute( config ) );\r\n\t}\r\n\r\n\t/**\r\n\t * View element to model marker conversion helper.\r\n\t *\r\n\t * This conversion results in creating a model marker. For example, if the marker was stored in a view as an element:\r\n\t * `<p>Fo<span data-marker=\"comment\" data-comment-id=\"7\"></span>o</p><p>B<span data-marker=\"comment\" data-comment-id=\"7\"></span>ar</p>`,\r\n\t * after the conversion is done, the marker will be available in\r\n\t * {@link module:engine/model/model~Model#markers model document markers}.\r\n\t *\r\n\t *\t\teditor.conversion.for( 'upcast' ).elementToMarker( {\r\n\t *\t\t\tview: 'marker-search',\r\n\t *\t\t\tmodel: 'search'\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\teditor.conversion.for( 'upcast' ).elementToMarker( {\r\n\t *\t\t\tview: 'marker-search',\r\n\t *\t\t\tmodel: 'search',\r\n\t *\t\t\tconverterPriority: 'high'\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\teditor.conversion.for( 'upcast' ).elementToMarker( {\r\n\t *\t\t\tview: 'marker-search',\r\n\t *\t\t\tmodel: viewElement => 'comment:' + viewElement.getAttribute( 'data-comment-id' )\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\teditor.conversion.for( 'upcast' ).elementToMarker( {\r\n\t *\t\t\tview: {\r\n\t *\t\t\t\tname: 'span',\r\n\t *\t\t\t\tattributes: {\r\n\t *\t\t\t\t\t'data-marker': 'search'\r\n\t *\t\t\t\t}\r\n\t *\t\t\t},\r\n\t *\t\t\tmodel: 'search'\r\n\t *\t\t} );\r\n\t *\r\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\r\n\t * to the conversion process.\r\n\t *\r\n\t * @method #elementToMarker\r\n\t * @param {Object} config Conversion configuration.\r\n\t * @param {module:engine/view/matcher~MatcherPattern} config.view Pattern matching all view elements which should be converted.\r\n\t * @param {String|Function} config.model Name of the model marker, or a function that takes a view element and returns\r\n\t * a model marker name.\r\n\t * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\r\n\t * @returns {module:engine/conversion/upcasthelpers~UpcastHelpers}\r\n\t */\r\n\telementToMarker( config ) {\r\n\t\treturn this.add( upcastElementToMarker( config ) );\r\n\t}\r\n}\r\n\r\n/**\r\n * Function factory, creates a converter that converts {@link module:engine/view/documentfragment~DocumentFragment view document fragment}\r\n * or all children of {@link module:engine/view/element~Element} into\r\n * {@link module:engine/model/documentfragment~DocumentFragment model document fragment}.\r\n * This is the \"entry-point\" converter for upcast (view to model conversion). This converter starts the conversion of all children\r\n * of passed view document fragment. Those children {@link module:engine/view/node~Node view nodes} are then handled by other converters.\r\n *\r\n * This also a \"default\", last resort converter for all view elements that has not been converted by other converters.\r\n * When a view element is being converted to the model but it does not have converter specified, that view element\r\n * will be converted to {@link module:engine/model/documentfragment~DocumentFragment model document fragment} and returned.\r\n *\r\n * @returns {Function} Universal converter for view {@link module:engine/view/documentfragment~DocumentFragment fragments} and\r\n * {@link module:engine/view/element~Element elements} that returns\r\n * {@link module:engine/model/documentfragment~DocumentFragment model fragment} with children of converted view item.\r\n */\r\nexport function convertToModelFragment() {\r\n\treturn ( evt, data, conversionApi ) => {\r\n\t\t// Second argument in `consumable.consume` is discarded for ViewDocumentFragment but is needed for ViewElement.\r\n\t\tif ( !data.modelRange && conversionApi.consumable.consume( data.viewItem, { name: true } ) ) {\r\n\t\t\tconst { modelRange, modelCursor } = conversionApi.convertChildren( data.viewItem, data.modelCursor );\r\n\r\n\t\t\tdata.modelRange = modelRange;\r\n\t\t\tdata.modelCursor = modelCursor;\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * Function factory, creates a converter that converts {@link module:engine/view/text~Text} to {@link module:engine/model/text~Text}.\r\n *\r\n * @returns {Function} {@link module:engine/view/text~Text View text} converter.\r\n */\r\nexport function convertText() {\r\n\treturn ( evt, data, conversionApi ) => {\r\n\t\tif ( conversionApi.schema.checkChild( data.modelCursor, '$text' ) ) {\r\n\t\t\tif ( conversionApi.consumable.consume( data.viewItem ) ) {\r\n\t\t\t\tconst text = conversionApi.writer.createText( data.viewItem.data );\r\n\r\n\t\t\t\tconversionApi.writer.insert( text, data.modelCursor );\r\n\r\n\t\t\t\tdata.modelRange = ModelRange._createFromPositionAndShift( data.modelCursor, text.offsetSize );\r\n\t\t\t\tdata.modelCursor = data.modelRange.end;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * Function factory, creates a callback function which converts a {@link module:engine/view/selection~Selection\r\n * view selection} taken from the {@link module:engine/view/document~Document#event:selectionChange} event\r\n * and sets in on the {@link module:engine/model/document~Document#selection model}.\r\n *\r\n * **Note**: because there is no view selection change dispatcher nor any other advanced view selection to model\r\n * conversion mechanism, the callback should be set directly on view document.\r\n *\r\n *\t\tview.document.on( 'selectionChange', convertSelectionChange( modelDocument, mapper ) );\r\n *\r\n * @param {module:engine/model/model~Model} model Data model.\r\n * @param {module:engine/conversion/mapper~Mapper} mapper Conversion mapper.\r\n * @returns {Function} {@link module:engine/view/document~Document#event:selectionChange} callback function.\r\n */\r\nexport function convertSelectionChange( model, mapper ) {\r\n\treturn ( evt, data ) => {\r\n\t\tconst viewSelection = data.newSelection;\r\n\t\tconst modelSelection = new ModelSelection();\r\n\r\n\t\tconst ranges = [];\r\n\r\n\t\tfor ( const viewRange of viewSelection.getRanges() ) {\r\n\t\t\tranges.push( mapper.toModelRange( viewRange ) );\r\n\t\t}\r\n\r\n\t\tmodelSelection.setTo( ranges, { backward: viewSelection.isBackward } );\r\n\r\n\t\tif ( !modelSelection.isEqual( model.document.selection ) ) {\r\n\t\t\tmodel.change( writer => {\r\n\t\t\t\twriter.setSelection( modelSelection );\r\n\t\t\t} );\r\n\t\t}\r\n\t};\r\n}\r\n\r\n// View element to model element conversion helper.\r\n//\r\n// See {@link ~UpcastHelpers#elementToElement `.elementToElement()` upcast helper} for examples.\r\n//\r\n// @param {Object} config Conversion configuration.\r\n// @param {module:engine/view/matcher~MatcherPattern} [config.view] Pattern matching all view elements which should be converted. If not\r\n// set, the converter will fire for every view element.\r\n// @param {String|module:engine/model/element~Element|Function} config.model Name of the model element, a model element\r\n// instance or a function that takes a view element and returns a model element. The model element will be inserted in the model.\r\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\r\n// @returns {Function} Conversion helper.\r\nfunction upcastElementToElement( config ) {\r\n\tconfig = cloneDeep( config );\r\n\r\n\tconst converter = prepareToElementConverter( config );\r\n\r\n\tconst elementName = getViewElementNameFromConfig( config.view );\r\n\tconst eventName = elementName ? 'element:' + elementName : 'element';\r\n\r\n\treturn dispatcher => {\r\n\t\tdispatcher.on( eventName, converter, { priority: config.converterPriority || 'normal' } );\r\n\t};\r\n}\r\n\r\n// View element to model attribute conversion helper.\r\n//\r\n// See {@link ~UpcastHelpers#elementToAttribute `.elementToAttribute()` upcast helper} for examples.\r\n//\r\n// @param {Object} config Conversion configuration.\r\n// @param {module:engine/view/matcher~MatcherPattern} config.view Pattern matching all view elements which should be converted.\r\n// @param {String|Object} config.model Model attribute key or an object with `key` and `value` properties, describing\r\n// the model attribute. `value` property may be set as a function that takes a view element and returns the value.\r\n// If `String` is given, the model attribute value will be set to `true`.\r\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='low'] Converter priority.\r\n// @returns {Function} Conversion helper.\r\nfunction upcastElementToAttribute( config ) {\r\n\tconfig = cloneDeep( config );\r\n\r\n\tnormalizeModelAttributeConfig( config );\r\n\r\n\tconst converter = prepareToAttributeConverter( config, false );\r\n\r\n\tconst elementName = getViewElementNameFromConfig( config.view );\r\n\tconst eventName = elementName ? 'element:' + elementName : 'element';\r\n\r\n\treturn dispatcher => {\r\n\t\tdispatcher.on( eventName, converter, { priority: config.converterPriority || 'low' } );\r\n\t};\r\n}\r\n\r\n// View attribute to model attribute conversion helper.\r\n//\r\n// See {@link ~UpcastHelpers#attributeToAttribute `.attributeToAttribute()` upcast helper} for examples.\r\n//\r\n// @param {Object} config Conversion configuration.\r\n// @param {String|Object} config.view Specifies which view attribute will be converted. If a `String` is passed,\r\n// attributes with given key will be converted. If an `Object` is passed, it must have a required `key` property,\r\n// specifying view attribute key, and may have an optional `value` property, specifying view attribute value and optional `name`\r\n// property specifying a view element name from/on which the attribute should be converted. `value` can be given as a `String`,\r\n// a `RegExp` or a function callback, that takes view attribute value as the only parameter and returns `Boolean`.\r\n// @param {String|Object} config.model Model attribute key or an object with `key` and `value` properties, describing\r\n// the model attribute. `value` property may be set as a function that takes a view element and returns the value.\r\n// If `String` is given, the model attribute value will be same as view attribute value.\r\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='low'] Converter priority.\r\n// @returns {Function} Conversion helper.\r\nfunction upcastAttributeToAttribute( config ) {\r\n\tconfig = cloneDeep( config );\r\n\r\n\tlet viewKey = null;\r\n\r\n\tif ( typeof config.view == 'string' || config.view.key ) {\r\n\t\tviewKey = normalizeViewAttributeKeyValueConfig( config );\r\n\t}\r\n\r\n\tnormalizeModelAttributeConfig( config, viewKey );\r\n\r\n\tconst converter = prepareToAttributeConverter( config, true );\r\n\r\n\treturn dispatcher => {\r\n\t\tdispatcher.on( 'element', converter, { priority: config.converterPriority || 'low' } );\r\n\t};\r\n}\r\n\r\n// View element to model marker conversion helper.\r\n//\r\n// See {@link ~UpcastHelpers#elementToMarker `.elementToMarker()` upcast helper} for examples.\r\n//\r\n// @param {Object} config Conversion configuration.\r\n// @param {module:engine/view/matcher~MatcherPattern} config.view Pattern matching all view elements which should be converted.\r\n// @param {String|Function} config.model Name of the model marker, or a function that takes a view element and returns\r\n// a model marker name.\r\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\r\n// @returns {Function} Conversion helper.\r\nfunction upcastElementToMarker( config ) {\r\n\tconfig = cloneDeep( config );\r\n\r\n\tnormalizeToMarkerConfig( config );\r\n\r\n\treturn upcastElementToElement( config );\r\n}\r\n\r\n// Helper function for from-view-element conversion. Checks if `config.view` directly specifies converted view element's name\r\n// and if so, returns it.\r\n//\r\n// @param {Object} config Conversion view config.\r\n// @returns {String|null} View element name or `null` if name is not directly set.\r\nfunction getViewElementNameFromConfig( viewConfig ) {\r\n\tif ( typeof viewConfig == 'string' ) {\r\n\t\treturn viewConfig;\r\n\t}\r\n\r\n\tif ( typeof viewConfig == 'object' && typeof viewConfig.name == 'string' ) {\r\n\t\treturn viewConfig.name;\r\n\t}\r\n\r\n\treturn null;\r\n}\r\n\r\n// Helper for to-model-element conversion. Takes a config object and returns a proper converter function.\r\n//\r\n// @param {Object} config Conversion configuration.\r\n// @returns {Function} View to model converter.\r\nfunction prepareToElementConverter( config ) {\r\n\tconst matcher = config.view ? new Matcher( config.view ) : null;\r\n\r\n\treturn ( evt, data, conversionApi ) => {\r\n\t\tlet match = {};\r\n\r\n\t\t// If `config.view` has not been passed do not try matching. In this case, the converter should fire for all elements.\r\n\t\tif ( matcher ) {\r\n\t\t\t// This will be usually just one pattern but we support matchers with many patterns too.\r\n\t\t\tconst matcherResult = matcher.match( data.viewItem );\r\n\r\n\t\t\t// If there is no match, this callback should not do anything.\r\n\t\t\tif ( !matcherResult ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tmatch = matcherResult.match;\r\n\t\t}\r\n\r\n\t\t// Force consuming element's name.\r\n\t\tmatch.name = true;\r\n\r\n\t\t// Create model element basing on config.\r\n\t\tconst modelElement = getModelElement( config.model, data.viewItem, conversionApi.writer );\r\n\r\n\t\t// Do not convert if element building function returned falsy value.\r\n\t\tif ( !modelElement ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// When element was already consumed then skip it.\r\n\t\tif ( !conversionApi.consumable.test( data.viewItem, match ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Find allowed parent for element that we are going to insert.\r\n\t\t// If current parent does not allow to insert element but one of the ancestors does\r\n\t\t// then split nodes to allowed parent.\r\n\t\tconst splitResult = conversionApi.splitToAllowedParent( modelElement, data.modelCursor );\r\n\r\n\t\t// When there is no split result it means that we can't insert element to model tree, so let's skip it.\r\n\t\tif ( !splitResult ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Insert element on allowed position.\r\n\t\tconversionApi.writer.insert( modelElement, splitResult.position );\r\n\r\n\t\t// Convert children and insert to element.\r\n\t\tconversionApi.convertChildren( data.viewItem, conversionApi.writer.createPositionAt( modelElement, 0 ) );\r\n\r\n\t\t// Consume appropriate value from consumable values list.\r\n\t\tconversionApi.consumable.consume( data.viewItem, match );\r\n\r\n\t\tconst parts = conversionApi.getSplitParts( modelElement );\r\n\r\n\t\t// Set conversion result range.\r\n\t\tdata.modelRange = new ModelRange(\r\n\t\t\tconversionApi.writer.createPositionBefore( modelElement ),\r\n\t\t\tconversionApi.writer.createPositionAfter( parts[ parts.length - 1 ] )\r\n\t\t);\r\n\r\n\t\t// Now we need to check where the `modelCursor` should be.\r\n\t\tif ( splitResult.cursorParent ) {\r\n\t\t\t// If we split parent to insert our element then we want to continue conversion in the new part of the split parent.\r\n\t\t\t//\r\n\t\t\t// before: <allowed><notAllowed>foo[]</notAllowed></allowed>\r\n\t\t\t// after:  <allowed><notAllowed>foo</notAllowed><converted></converted><notAllowed>[]</notAllowed></allowed>\r\n\r\n\t\t\tdata.modelCursor = conversionApi.writer.createPositionAt( splitResult.cursorParent, 0 );\r\n\t\t} else {\r\n\t\t\t// Otherwise just continue after inserted element.\r\n\r\n\t\t\tdata.modelCursor = data.modelRange.end;\r\n\t\t}\r\n\t};\r\n}\r\n\r\n// Helper function for upcasting-to-element converter. Takes the model configuration, the converted view element\r\n// and a writer instance and returns a model element instance to be inserted in the model.\r\n//\r\n// @param {String|Function|module:engine/model/element~Element} model Model conversion configuration.\r\n// @param {module:engine/view/node~Node} input The converted view node.\r\n// @param {module:engine/model/writer~Writer} writer A writer instance to use to create the model element.\r\nfunction getModelElement( model, input, writer ) {\r\n\tif ( model instanceof Function ) {\r\n\t\treturn model( input, writer );\r\n\t} else {\r\n\t\treturn writer.createElement( model );\r\n\t}\r\n}\r\n\r\n// Helper function view-attribute-to-model-attribute helper. Normalizes `config.view` which was set as `String` or\r\n// as an `Object` with `key`, `value` and `name` properties. Normalized `config.view` has is compatible with\r\n// {@link module:engine/view/matcher~MatcherPattern}.\r\n//\r\n// @param {Object} config Conversion config.\r\n// @returns {String} Key of the converted view attribute.\r\nfunction normalizeViewAttributeKeyValueConfig( config ) {\r\n\tif ( typeof config.view == 'string' ) {\r\n\t\tconfig.view = { key: config.view };\r\n\t}\r\n\r\n\tconst key = config.view.key;\r\n\tlet normalized;\r\n\r\n\tif ( key == 'class' || key == 'style' ) {\r\n\t\tconst keyName = key == 'class' ? 'classes' : 'styles';\r\n\r\n\t\tnormalized = {\r\n\t\t\t[ keyName ]: config.view.value\r\n\t\t};\r\n\t} else {\r\n\t\tconst value = typeof config.view.value == 'undefined' ? /[\\s\\S]*/ : config.view.value;\r\n\r\n\t\tnormalized = {\r\n\t\t\tattributes: {\r\n\t\t\t\t[ key ]: value\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tif ( config.view.name ) {\r\n\t\tnormalized.name = config.view.name;\r\n\t}\r\n\r\n\tconfig.view = normalized;\r\n\r\n\treturn key;\r\n}\r\n\r\n// Helper function that normalizes `config.model` in from-model-attribute conversion. `config.model` can be set\r\n// as a `String`, an `Object` with only `key` property or an `Object` with `key` and `value` properties. Normalized\r\n// `config.model` is an `Object` with `key` and `value` properties.\r\n//\r\n// @param {Object} config Conversion config.\r\n// @param {String} viewAttributeKeyToCopy Key of the converted view attribute. If it is set, model attribute value\r\n// will be equal to view attribute value.\r\nfunction normalizeModelAttributeConfig( config, viewAttributeKeyToCopy = null ) {\r\n\tconst defaultModelValue = viewAttributeKeyToCopy === null ? true : viewElement => viewElement.getAttribute( viewAttributeKeyToCopy );\r\n\r\n\tconst key = typeof config.model != 'object' ? config.model : config.model.key;\r\n\tconst value = typeof config.model != 'object' || typeof config.model.value == 'undefined' ? defaultModelValue : config.model.value;\r\n\r\n\tconfig.model = { key, value };\r\n}\r\n\r\n// Helper for to-model-attribute conversion. Takes the model attribute name and conversion configuration and returns\r\n// a proper converter function.\r\n//\r\n// @param {String} modelAttributeKey The key of the model attribute to set on a model node.\r\n// @param {Object|Array.<Object>} config Conversion configuration. It is possible to provide multiple configurations in an array.\r\n// @param {Boolean} shallow If set to `true` the attribute will be set only on top-level nodes. Otherwise, it will be set\r\n// on all elements in the range.\r\nfunction prepareToAttributeConverter( config, shallow ) {\r\n\tconst matcher = new Matcher( config.view );\r\n\r\n\treturn ( evt, data, conversionApi ) => {\r\n\t\tconst match = matcher.match( data.viewItem );\r\n\r\n\t\t// If there is no match, this callback should not do anything.\r\n\t\tif ( !match ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst modelKey = config.model.key;\r\n\t\tconst modelValue = typeof config.model.value == 'function' ? config.model.value( data.viewItem ) : config.model.value;\r\n\r\n\t\t// Do not convert if attribute building function returned falsy value.\r\n\t\tif ( modelValue === null ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( onlyViewNameIsDefined( config.view, data.viewItem ) ) {\r\n\t\t\tmatch.match.name = true;\r\n\t\t} else {\r\n\t\t\t// Do not test or consume `name` consumable.\r\n\t\t\tdelete match.match.name;\r\n\t\t}\r\n\r\n\t\t// Try to consume appropriate values from consumable values list.\r\n\t\tif ( !conversionApi.consumable.test( data.viewItem, match.match ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Since we are converting to attribute we need an range on which we will set the attribute.\r\n\t\t// If the range is not created yet, we will create it.\r\n\t\tif ( !data.modelRange ) {\r\n\t\t\t// Convert children and set conversion result as a current data.\r\n\t\t\tdata = Object.assign( data, conversionApi.convertChildren( data.viewItem, data.modelCursor ) );\r\n\t\t}\r\n\r\n\t\t// Set attribute on current `output`. `Schema` is checked inside this helper function.\r\n\t\tconst attributeWasSet = setAttributeOn( data.modelRange, { key: modelKey, value: modelValue }, shallow, conversionApi );\r\n\r\n\t\tif ( attributeWasSet ) {\r\n\t\t\tconversionApi.consumable.consume( data.viewItem, match.match );\r\n\t\t}\r\n\t};\r\n}\r\n\r\n// Helper function that checks if element name should be consumed in attribute converters.\r\n//\r\n// @param {Object} config Conversion view config.\r\n// @returns {Boolean}\r\nfunction onlyViewNameIsDefined( viewConfig, viewItem ) {\r\n\t// https://github.com/ckeditor/ckeditor5-engine/issues/1786\r\n\tconst configToTest = typeof viewConfig == 'function' ? viewConfig( viewItem ) : viewConfig;\r\n\r\n\tif ( typeof configToTest == 'object' && !getViewElementNameFromConfig( configToTest ) ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn !configToTest.classes && !configToTest.attributes && !configToTest.styles;\r\n}\r\n\r\n// Helper function for to-model-attribute converter. Sets model attribute on given range. Checks {@link module:engine/model/schema~Schema}\r\n// to ensure proper model structure.\r\n//\r\n// @param {module:engine/model/range~Range} modelRange Model range on which attribute should be set.\r\n// @param {Object} modelAttribute Model attribute to set.\r\n// @param {module:engine/conversion/upcastdispatcher~UpcastConversionApi} conversionApi Conversion API.\r\n// @param {Boolean} shallow If set to `true` the attribute will be set only on top-level nodes. Otherwise, it will be set\r\n// on all elements in the range.\r\n// @returns {Boolean} `true` if attribute was set on at least one node from given `modelRange`.\r\nfunction setAttributeOn( modelRange, modelAttribute, shallow, conversionApi ) {\r\n\tlet result = false;\r\n\r\n\t// Set attribute on each item in range according to Schema.\r\n\tfor ( const node of Array.from( modelRange.getItems( { shallow } ) ) ) {\r\n\t\tif ( conversionApi.schema.checkAttribute( node, modelAttribute.key ) ) {\r\n\t\t\tconversionApi.writer.setAttribute( modelAttribute.key, modelAttribute.value, node );\r\n\r\n\t\t\tresult = true;\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\n// Helper function for upcasting-to-marker conversion. Takes the config in a format requested by `upcastElementToMarker()`\r\n// function and converts it to a format that is supported by `_upcastElementToElement()` function.\r\n//\r\n// @param {Object} config Conversion configuration.\r\nfunction normalizeToMarkerConfig( config ) {\r\n\tconst oldModel = config.model;\r\n\r\n\tconfig.model = ( viewElement, modelWriter ) => {\r\n\t\tconst markerName = typeof oldModel == 'string' ? oldModel : oldModel( viewElement );\r\n\r\n\t\treturn modelWriter.createElement( '$marker', { 'data-name': markerName } );\r\n\t};\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/conversion/viewconsumable\r\n */\r\n\r\nimport { isArray } from 'lodash-es';\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\n\r\n/**\r\n * Class used for handling consumption of view {@link module:engine/view/element~Element elements},\r\n * {@link module:engine/view/text~Text text nodes} and {@link module:engine/view/documentfragment~DocumentFragment document fragments}.\r\n * Element's name and its parts (attributes, classes and styles) can be consumed separately. Consuming an element's name\r\n * does not consume its attributes, classes and styles.\r\n * To add items for consumption use {@link module:engine/conversion/viewconsumable~ViewConsumable#add add method}.\r\n * To test items use {@link module:engine/conversion/viewconsumable~ViewConsumable#test test method}.\r\n * To consume items use {@link module:engine/conversion/viewconsumable~ViewConsumable#consume consume method}.\r\n * To revert already consumed items use {@link module:engine/conversion/viewconsumable~ViewConsumable#revert revert method}.\r\n *\r\n *\t\tviewConsumable.add( element, { name: true } ); // Adds element's name as ready to be consumed.\r\n *\t\tviewConsumable.add( textNode ); // Adds text node for consumption.\r\n *\t\tviewConsumable.add( docFragment ); // Adds document fragment for consumption.\r\n *\t\tviewConsumable.test( element, { name: true }  ); // Tests if element's name can be consumed.\r\n *\t\tviewConsumable.test( textNode ); // Tests if text node can be consumed.\r\n *\t\tviewConsumable.test( docFragment ); // Tests if document fragment can be consumed.\r\n *\t\tviewConsumable.consume( element, { name: true }  ); // Consume element's name.\r\n *\t\tviewConsumable.consume( textNode ); // Consume text node.\r\n *\t\tviewConsumable.consume( docFragment ); // Consume document fragment.\r\n *\t\tviewConsumable.revert( element, { name: true }  ); // Revert already consumed element's name.\r\n *\t\tviewConsumable.revert( textNode ); // Revert already consumed text node.\r\n *\t\tviewConsumable.revert( docFragment ); // Revert already consumed document fragment.\r\n */\r\nexport default class ViewConsumable {\r\n\t/**\r\n\t * Creates new ViewConsumable.\r\n\t */\r\n\tconstructor() {\r\n\t\t/**\r\n\t\t * Map of consumable elements. If {@link module:engine/view/element~Element element} is used as a key,\r\n\t\t * {@link module:engine/conversion/viewconsumable~ViewElementConsumables ViewElementConsumables} instance is stored as value.\r\n\t\t * For {@link module:engine/view/text~Text text nodes} and\r\n\t\t * {@link module:engine/view/documentfragment~DocumentFragment document fragments} boolean value is stored as value.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @member {Map.<module:engine/conversion/viewconsumable~ViewElementConsumables|Boolean>}\r\n\t\t*/\r\n\t\tthis._consumables = new Map();\r\n\t}\r\n\r\n\t/**\r\n\t * Adds {@link module:engine/view/element~Element view element}, {@link module:engine/view/text~Text text node} or\r\n\t * {@link module:engine/view/documentfragment~DocumentFragment document fragment} as ready to be consumed.\r\n\t *\r\n\t *\t\tviewConsumable.add( p, { name: true } ); // Adds element's name to consume.\r\n\t *\t\tviewConsumable.add( p, { attributes: 'name' } ); // Adds element's attribute.\r\n\t *\t\tviewConsumable.add( p, { classes: 'foobar' } ); // Adds element's class.\r\n\t *\t\tviewConsumable.add( p, { styles: 'color' } ); // Adds element's style\r\n\t *\t\tviewConsumable.add( p, { attributes: 'name', styles: 'color' } ); // Adds attribute and style.\r\n\t *\t\tviewConsumable.add( p, { classes: [ 'baz', 'bar' ] } ); // Multiple consumables can be provided.\r\n\t *\t\tviewConsumable.add( textNode ); // Adds text node to consume.\r\n\t *\t\tviewConsumable.add( docFragment ); // Adds document fragment to consume.\r\n\t *\r\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `viewconsumable-invalid-attribute` when `class` or `style`\r\n\t * attribute is provided - it should be handled separately by providing actual style/class.\r\n\t *\r\n\t *\t\tviewConsumable.add( p, { attributes: 'style' } ); // This call will throw an exception.\r\n\t *\t\tviewConsumable.add( p, { styles: 'color' } ); // This is properly handled style.\r\n\t *\r\n\t * @param {module:engine/view/element~Element|module:engine/view/text~Text|module:engine/view/documentfragment~DocumentFragment} element\r\n\t * @param {Object} [consumables] Used only if first parameter is {@link module:engine/view/element~Element view element} instance.\r\n\t * @param {Boolean} consumables.name If set to true element's name will be included.\r\n\t * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names.\r\n\t * @param {String|Array.<String>} consumables.classes Class name or array of class names.\r\n\t * @param {String|Array.<String>} consumables.styles Style name or array of style names.\r\n\t */\r\n\tadd( element, consumables ) {\r\n\t\tlet elementConsumables;\r\n\r\n\t\t// For text nodes and document fragments just mark them as consumable.\r\n\t\tif ( element.is( 'text' ) || element.is( 'documentFragment' ) ) {\r\n\t\t\tthis._consumables.set( element, true );\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// For elements create new ViewElementConsumables or update already existing one.\r\n\t\tif ( !this._consumables.has( element ) ) {\r\n\t\t\telementConsumables = new ViewElementConsumables( element );\r\n\t\t\tthis._consumables.set( element, elementConsumables );\r\n\t\t} else {\r\n\t\t\telementConsumables = this._consumables.get( element );\r\n\t\t}\r\n\r\n\t\telementConsumables.add( consumables );\r\n\t}\r\n\r\n\t/**\r\n\t * Tests if {@link module:engine/view/element~Element view element}, {@link module:engine/view/text~Text text node} or\r\n\t * {@link module:engine/view/documentfragment~DocumentFragment document fragment} can be consumed.\r\n\t * It returns `true` when all items included in method's call can be consumed. Returns `false` when\r\n\t * first already consumed item is found and `null` when first non-consumable item is found.\r\n\t *\r\n\t *\t\tviewConsumable.test( p, { name: true } ); // Tests element's name.\r\n\t *\t\tviewConsumable.test( p, { attributes: 'name' } ); // Tests attribute.\r\n\t *\t\tviewConsumable.test( p, { classes: 'foobar' } ); // Tests class.\r\n\t *\t\tviewConsumable.test( p, { styles: 'color' } ); // Tests style.\r\n\t *\t\tviewConsumable.test( p, { attributes: 'name', styles: 'color' } ); // Tests attribute and style.\r\n\t *\t\tviewConsumable.test( p, { classes: [ 'baz', 'bar' ] } ); // Multiple consumables can be tested.\r\n\t *\t\tviewConsumable.test( textNode ); // Tests text node.\r\n\t *\t\tviewConsumable.test( docFragment ); // Tests document fragment.\r\n\t *\r\n\t * Testing classes and styles as attribute will test if all added classes/styles can be consumed.\r\n\t *\r\n\t *\t\tviewConsumable.test( p, { attributes: 'class' } ); // Tests if all added classes can be consumed.\r\n\t *\t\tviewConsumable.test( p, { attributes: 'style' } ); // Tests if all added styles can be consumed.\r\n\t *\r\n\t * @param {module:engine/view/element~Element|module:engine/view/text~Text|module:engine/view/documentfragment~DocumentFragment} element\r\n\t * @param {Object} [consumables] Used only if first parameter is {@link module:engine/view/element~Element view element} instance.\r\n\t * @param {Boolean} consumables.name If set to true element's name will be included.\r\n\t * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names.\r\n\t * @param {String|Array.<String>} consumables.classes Class name or array of class names.\r\n\t * @param {String|Array.<String>} consumables.styles Style name or array of style names.\r\n\t * @returns {Boolean|null} Returns `true` when all items included in method's call can be consumed. Returns `false`\r\n\t * when first already consumed item is found and `null` when first non-consumable item is found.\r\n\t */\r\n\ttest( element, consumables ) {\r\n\t\tconst elementConsumables = this._consumables.get( element );\r\n\r\n\t\tif ( elementConsumables === undefined ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\t// For text nodes and document fragments return stored boolean value.\r\n\t\tif ( element.is( 'text' ) || element.is( 'documentFragment' ) ) {\r\n\t\t\treturn elementConsumables;\r\n\t\t}\r\n\r\n\t\t// For elements test consumables object.\r\n\t\treturn elementConsumables.test( consumables );\r\n\t}\r\n\r\n\t/**\r\n\t * Consumes {@link module:engine/view/element~Element view element}, {@link module:engine/view/text~Text text node} or\r\n\t * {@link module:engine/view/documentfragment~DocumentFragment document fragment}.\r\n\t * It returns `true` when all items included in method's call can be consumed, otherwise returns `false`.\r\n\t *\r\n\t *\t\tviewConsumable.consume( p, { name: true } ); // Consumes element's name.\r\n\t *\t\tviewConsumable.consume( p, { attributes: 'name' } ); // Consumes element's attribute.\r\n\t *\t\tviewConsumable.consume( p, { classes: 'foobar' } ); // Consumes element's class.\r\n\t *\t\tviewConsumable.consume( p, { styles: 'color' } ); // Consumes element's style.\r\n\t *\t\tviewConsumable.consume( p, { attributes: 'name', styles: 'color' } ); // Consumes attribute and style.\r\n\t *\t\tviewConsumable.consume( p, { classes: [ 'baz', 'bar' ] } ); // Multiple consumables can be consumed.\r\n\t *\t\tviewConsumable.consume( textNode ); // Consumes text node.\r\n\t *\t\tviewConsumable.consume( docFragment ); // Consumes document fragment.\r\n\t *\r\n\t * Consuming classes and styles as attribute will test if all added classes/styles can be consumed.\r\n\t *\r\n\t *\t\tviewConsumable.consume( p, { attributes: 'class' } ); // Consume only if all added classes can be consumed.\r\n\t *\t\tviewConsumable.consume( p, { attributes: 'style' } ); // Consume only if all added styles can be consumed.\r\n\t *\r\n\t * @param {module:engine/view/element~Element|module:engine/view/text~Text|module:engine/view/documentfragment~DocumentFragment} element\r\n\t * @param {Object} [consumables] Used only if first parameter is {@link module:engine/view/element~Element view element} instance.\r\n\t * @param {Boolean} consumables.name If set to true element's name will be included.\r\n\t * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names.\r\n\t * @param {String|Array.<String>} consumables.classes Class name or array of class names.\r\n\t * @param {String|Array.<String>} consumables.styles Style name or array of style names.\r\n\t * @returns {Boolean} Returns `true` when all items included in method's call can be consumed,\r\n\t * otherwise returns `false`.\r\n\t */\r\n\tconsume( element, consumables ) {\r\n\t\tif ( this.test( element, consumables ) ) {\r\n\t\t\tif ( element.is( 'text' ) || element.is( 'documentFragment' ) ) {\r\n\t\t\t\t// For text nodes and document fragments set value to false.\r\n\t\t\t\tthis._consumables.set( element, false );\r\n\t\t\t} else {\r\n\t\t\t\t// For elements - consume consumables object.\r\n\t\t\t\tthis._consumables.get( element ).consume( consumables );\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Reverts {@link module:engine/view/element~Element view element}, {@link module:engine/view/text~Text text node} or\r\n\t * {@link module:engine/view/documentfragment~DocumentFragment document fragment} so they can be consumed once again.\r\n\t * Method does not revert items that were never previously added for consumption, even if they are included in\r\n\t * method's call.\r\n\t *\r\n\t *\t\tviewConsumable.revert( p, { name: true } ); // Reverts element's name.\r\n\t *\t\tviewConsumable.revert( p, { attributes: 'name' } ); // Reverts element's attribute.\r\n\t *\t\tviewConsumable.revert( p, { classes: 'foobar' } ); // Reverts element's class.\r\n\t *\t\tviewConsumable.revert( p, { styles: 'color' } ); // Reverts element's style.\r\n\t *\t\tviewConsumable.revert( p, { attributes: 'name', styles: 'color' } ); // Reverts attribute and style.\r\n\t *\t\tviewConsumable.revert( p, { classes: [ 'baz', 'bar' ] } ); // Multiple names can be reverted.\r\n\t *\t\tviewConsumable.revert( textNode ); // Reverts text node.\r\n\t *\t\tviewConsumable.revert( docFragment ); // Reverts document fragment.\r\n\t *\r\n\t * Reverting classes and styles as attribute will revert all classes/styles that were previously added for\r\n\t * consumption.\r\n\t *\r\n\t *\t\tviewConsumable.revert( p, { attributes: 'class' } ); // Reverts all classes added for consumption.\r\n\t *\t\tviewConsumable.revert( p, { attributes: 'style' } ); // Reverts all styles added for consumption.\r\n\t *\r\n\t * @param {module:engine/view/element~Element|module:engine/view/text~Text|module:engine/view/documentfragment~DocumentFragment} element\r\n\t * @param {Object} [consumables] Used only if first parameter is {@link module:engine/view/element~Element view element} instance.\r\n\t * @param {Boolean} consumables.name If set to true element's name will be included.\r\n\t * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names.\r\n\t * @param {String|Array.<String>} consumables.classes Class name or array of class names.\r\n\t * @param {String|Array.<String>} consumables.styles Style name or array of style names.\r\n\t */\r\n\trevert( element, consumables ) {\r\n\t\tconst elementConsumables = this._consumables.get( element );\r\n\r\n\t\tif ( elementConsumables !== undefined ) {\r\n\t\t\tif ( element.is( 'text' ) || element.is( 'documentFragment' ) ) {\r\n\t\t\t\t// For text nodes and document fragments - set consumable to true.\r\n\t\t\t\tthis._consumables.set( element, true );\r\n\t\t\t} else {\r\n\t\t\t\t// For elements - revert items from consumables object.\r\n\t\t\t\telementConsumables.revert( consumables );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates consumable object from {@link module:engine/view/element~Element view element}. Consumable object will include\r\n\t * element's name and all its attributes, classes and styles.\r\n\t *\r\n\t * @static\r\n\t * @param {module:engine/view/element~Element} element\r\n\t * @returns {Object} consumables\r\n\t */\r\n\tstatic consumablesFromElement( element ) {\r\n\t\tconst consumables = {\r\n\t\t\telement,\r\n\t\t\tname: true,\r\n\t\t\tattributes: [],\r\n\t\t\tclasses: [],\r\n\t\t\tstyles: []\r\n\t\t};\r\n\r\n\t\tconst attributes = element.getAttributeKeys();\r\n\r\n\t\tfor ( const attribute of attributes ) {\r\n\t\t\t// Skip classes and styles - will be added separately.\r\n\t\t\tif ( attribute == 'style' || attribute == 'class' ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tconsumables.attributes.push( attribute );\r\n\t\t}\r\n\r\n\t\tconst classes = element.getClassNames();\r\n\r\n\t\tfor ( const className of classes ) {\r\n\t\t\tconsumables.classes.push( className );\r\n\t\t}\r\n\r\n\t\tconst styles = element.getStyleNames();\r\n\r\n\t\tfor ( const style of styles ) {\r\n\t\t\tconsumables.styles.push( style );\r\n\t\t}\r\n\r\n\t\treturn consumables;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates {@link module:engine/conversion/viewconsumable~ViewConsumable ViewConsumable} instance from\r\n\t * {@link module:engine/view/node~Node node} or {@link module:engine/view/documentfragment~DocumentFragment document fragment}.\r\n\t * Instance will contain all elements, child nodes, attributes, styles and classes added for consumption.\r\n\t *\r\n\t * @static\r\n\t * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} from View node or document fragment\r\n\t * from which `ViewConsumable` will be created.\r\n\t * @param {module:engine/conversion/viewconsumable~ViewConsumable} [instance] If provided, given `ViewConsumable` instance will be used\r\n\t * to add all consumables. It will be returned instead of a new instance.\r\n\t */\r\n\tstatic createFrom( from, instance ) {\r\n\t\tif ( !instance ) {\r\n\t\t\tinstance = new ViewConsumable( from );\r\n\t\t}\r\n\r\n\t\tif ( from.is( 'text' ) ) {\r\n\t\t\tinstance.add( from );\r\n\r\n\t\t\treturn instance;\r\n\t\t}\r\n\r\n\t\t// Add `from` itself, if it is an element.\r\n\t\tif ( from.is( 'element' ) ) {\r\n\t\t\tinstance.add( from, ViewConsumable.consumablesFromElement( from ) );\r\n\t\t}\r\n\r\n\t\tif ( from.is( 'documentFragment' ) ) {\r\n\t\t\tinstance.add( from );\r\n\t\t}\r\n\r\n\t\tfor ( const child of from.getChildren() ) {\r\n\t\t\tinstance = ViewConsumable.createFrom( child, instance );\r\n\t\t}\r\n\r\n\t\treturn instance;\r\n\t}\r\n}\r\n\r\n/**\r\n * This is a private helper-class for {@link module:engine/conversion/viewconsumable~ViewConsumable}.\r\n * It represents and manipulates consumable parts of a single {@link module:engine/view/element~Element}.\r\n *\r\n * @private\r\n */\r\nclass ViewElementConsumables {\r\n\t/**\r\n\t * Creates ViewElementConsumables instance.\r\n\t *\r\n\t * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} from View node or document fragment\r\n\t * from which `ViewElementConsumables` is being created.\r\n\t */\r\n\tconstructor( from ) {\r\n\t\t/**\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\r\n\t\t */\r\n\t\tthis.element = from;\r\n\r\n\t\t/**\r\n\t\t * Flag indicating if name of the element can be consumed.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Boolean}\r\n\t\t */\r\n\t\tthis._canConsumeName = null;\r\n\r\n\t\t/**\r\n\t\t * Contains maps of element's consumables: attributes, classes and styles.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Object}\r\n\t\t */\r\n\t\tthis._consumables = {\r\n\t\t\tattributes: new Map(),\r\n\t\t\tstyles: new Map(),\r\n\t\t\tclasses: new Map()\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Adds consumable parts of the {@link module:engine/view/element~Element view element}.\r\n\t * Element's name itself can be marked to be consumed (when element's name is consumed its attributes, classes and\r\n\t * styles still could be consumed):\r\n\t *\r\n\t *\t\tconsumables.add( { name: true } );\r\n\t *\r\n\t * Attributes classes and styles:\r\n\t *\r\n\t *\t\tconsumables.add( { attributes: 'title', classes: 'foo', styles: 'color' } );\r\n\t *\t\tconsumables.add( { attributes: [ 'title', 'name' ], classes: [ 'foo', 'bar' ] );\r\n\t *\r\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `viewconsumable-invalid-attribute` when `class` or `style`\r\n\t * attribute is provided - it should be handled separately by providing `style` and `class` in consumables object.\r\n\t *\r\n\t * @param {Object} consumables Object describing which parts of the element can be consumed.\r\n\t * @param {Boolean} consumables.name If set to `true` element's name will be added as consumable.\r\n\t * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names to add as consumable.\r\n\t * @param {String|Array.<String>} consumables.classes Class name or array of class names to add as consumable.\r\n\t * @param {String|Array.<String>} consumables.styles Style name or array of style names to add as consumable.\r\n\t */\r\n\tadd( consumables ) {\r\n\t\tif ( consumables.name ) {\r\n\t\t\tthis._canConsumeName = true;\r\n\t\t}\r\n\r\n\t\tfor ( const type in this._consumables ) {\r\n\t\t\tif ( type in consumables ) {\r\n\t\t\t\tthis._add( type, consumables[ type ] );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Tests if parts of the {@link module:engine/view/node~Node view node} can be consumed.\r\n\t *\r\n\t * Element's name can be tested:\r\n\t *\r\n\t *\t\tconsumables.test( { name: true } );\r\n\t *\r\n\t * Attributes classes and styles:\r\n\t *\r\n\t *\t\tconsumables.test( { attributes: 'title', classes: 'foo', styles: 'color' } );\r\n\t *\t\tconsumables.test( { attributes: [ 'title', 'name' ], classes: [ 'foo', 'bar' ] );\r\n\t *\r\n\t * @param {Object} consumables Object describing which parts of the element should be tested.\r\n\t * @param {Boolean} consumables.name If set to `true` element's name will be tested.\r\n\t * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names to test.\r\n\t * @param {String|Array.<String>} consumables.classes Class name or array of class names to test.\r\n\t * @param {String|Array.<String>} consumables.styles Style name or array of style names to test.\r\n\t * @returns {Boolean|null} `true` when all tested items can be consumed, `null` when even one of the items\r\n\t * was never marked for consumption and `false` when even one of the items was already consumed.\r\n\t */\r\n\ttest( consumables ) {\r\n\t\t// Check if name can be consumed.\r\n\t\tif ( consumables.name && !this._canConsumeName ) {\r\n\t\t\treturn this._canConsumeName;\r\n\t\t}\r\n\r\n\t\tfor ( const type in this._consumables ) {\r\n\t\t\tif ( type in consumables ) {\r\n\t\t\t\tconst value = this._test( type, consumables[ type ] );\r\n\r\n\t\t\t\tif ( value !== true ) {\r\n\t\t\t\t\treturn value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Return true only if all can be consumed.\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Consumes parts of {@link module:engine/view/element~Element view element}. This function does not check if consumable item\r\n\t * is already consumed - it consumes all consumable items provided.\r\n\t * Element's name can be consumed:\r\n\t *\r\n\t *\t\tconsumables.consume( { name: true } );\r\n\t *\r\n\t * Attributes classes and styles:\r\n\t *\r\n\t *\t\tconsumables.consume( { attributes: 'title', classes: 'foo', styles: 'color' } );\r\n\t *\t\tconsumables.consume( { attributes: [ 'title', 'name' ], classes: [ 'foo', 'bar' ] );\r\n\t *\r\n\t * @param {Object} consumables Object describing which parts of the element should be consumed.\r\n\t * @param {Boolean} consumables.name If set to `true` element's name will be consumed.\r\n\t * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names to consume.\r\n\t * @param {String|Array.<String>} consumables.classes Class name or array of class names to consume.\r\n\t * @param {String|Array.<String>} consumables.styles Style name or array of style names to consume.\r\n\t */\r\n\tconsume( consumables ) {\r\n\t\tif ( consumables.name ) {\r\n\t\t\tthis._canConsumeName = false;\r\n\t\t}\r\n\r\n\t\tfor ( const type in this._consumables ) {\r\n\t\t\tif ( type in consumables ) {\r\n\t\t\t\tthis._consume( type, consumables[ type ] );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Revert already consumed parts of {@link module:engine/view/element~Element view Element}, so they can be consumed once again.\r\n\t * Element's name can be reverted:\r\n\t *\r\n\t *\t\tconsumables.revert( { name: true } );\r\n\t *\r\n\t * Attributes classes and styles:\r\n\t *\r\n\t *\t\tconsumables.revert( { attributes: 'title', classes: 'foo', styles: 'color' } );\r\n\t *\t\tconsumables.revert( { attributes: [ 'title', 'name' ], classes: [ 'foo', 'bar' ] );\r\n\t *\r\n\t * @param {Object} consumables Object describing which parts of the element should be reverted.\r\n\t * @param {Boolean} consumables.name If set to `true` element's name will be reverted.\r\n\t * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names to revert.\r\n\t * @param {String|Array.<String>} consumables.classes Class name or array of class names to revert.\r\n\t * @param {String|Array.<String>} consumables.styles Style name or array of style names to revert.\r\n\t */\r\n\trevert( consumables ) {\r\n\t\tif ( consumables.name ) {\r\n\t\t\tthis._canConsumeName = true;\r\n\t\t}\r\n\r\n\t\tfor ( const type in this._consumables ) {\r\n\t\t\tif ( type in consumables ) {\r\n\t\t\t\tthis._revert( type, consumables[ type ] );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Helper method that adds consumables of a given type: attribute, class or style.\r\n\t *\r\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `viewconsumable-invalid-attribute` when `class` or `style`\r\n\t * type is provided - it should be handled separately by providing actual style/class type.\r\n\t *\r\n\t * @private\r\n\t * @param {String} type Type of the consumable item: `attributes`, `classes` or `styles`.\r\n\t * @param {String|Array.<String>} item Consumable item or array of items.\r\n\t */\r\n\t_add( type, item ) {\r\n\t\tconst items = isArray( item ) ? item : [ item ];\r\n\t\tconst consumables = this._consumables[ type ];\r\n\r\n\t\tfor ( const name of items ) {\r\n\t\t\tif ( type === 'attributes' && ( name === 'class' || name === 'style' ) ) {\r\n\t\t\t\t/**\r\n\t\t\t\t * Class and style attributes should be handled separately in\r\n\t\t\t\t * {@link module:engine/conversion/viewconsumable~ViewConsumable#add `ViewConsumable#add()`}.\r\n\t\t\t\t *\r\n\t\t\t\t * What you have done is trying to use:\r\n\t\t\t\t *\r\n\t\t\t\t *\t\tconsumables.add( { attributes: [ 'class', 'style' ] } );\r\n\t\t\t\t *\r\n\t\t\t\t * While each class and style should be registered separately:\r\n\t\t\t\t *\r\n\t\t\t\t *\t\tconsumables.add( { classes: 'some-class', styles: 'font-weight' } );\r\n\t\t\t\t *\r\n\t\t\t\t * @error viewconsumable-invalid-attribute\r\n\t\t\t\t */\r\n\t\t\t\tthrow new CKEditorError( 'viewconsumable-invalid-attribute: Classes and styles should be handled separately.', this );\r\n\t\t\t}\r\n\r\n\t\t\tconsumables.set( name, true );\r\n\r\n\t\t\tif ( type === 'styles' ) {\r\n\t\t\t\tfor ( const alsoName of this.element.document.stylesProcessor.getRelatedStyles( name ) ) {\r\n\t\t\t\t\tconsumables.set( alsoName, true );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Helper method that tests consumables of a given type: attribute, class or style.\r\n\t *\r\n\t * @private\r\n\t * @param {String} type Type of the consumable item: `attributes`, `classes` or `styles`.\r\n\t * @param {String|Array.<String>} item Consumable item or array of items.\r\n\t * @returns {Boolean|null} Returns `true` if all items can be consumed, `null` when one of the items cannot be\r\n\t * consumed and `false` when one of the items is already consumed.\r\n\t */\r\n\t_test( type, item ) {\r\n\t\tconst items = isArray( item ) ? item : [ item ];\r\n\t\tconst consumables = this._consumables[ type ];\r\n\r\n\t\tfor ( const name of items ) {\r\n\t\t\tif ( type === 'attributes' && ( name === 'class' || name === 'style' ) ) {\r\n\t\t\t\tconst consumableName = name == 'class' ? 'classes' : 'styles';\r\n\r\n\t\t\t\t// Check all classes/styles if class/style attribute is tested.\r\n\t\t\t\tconst value = this._test( consumableName, [ ...this._consumables[ consumableName ].keys() ] );\r\n\r\n\t\t\t\tif ( value !== true ) {\r\n\t\t\t\t\treturn value;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconst value = consumables.get( name );\r\n\t\t\t\t// Return null if attribute is not found.\r\n\t\t\t\tif ( value === undefined ) {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( !value ) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Helper method that consumes items of a given type: attribute, class or style.\r\n\t *\r\n\t * @private\r\n\t * @param {String} type Type of the consumable item: `attributes`, `classes` or `styles`.\r\n\t * @param {String|Array.<String>} item Consumable item or array of items.\r\n\t */\r\n\t_consume( type, item ) {\r\n\t\tconst items = isArray( item ) ? item : [ item ];\r\n\t\tconst consumables = this._consumables[ type ];\r\n\r\n\t\tfor ( const name of items ) {\r\n\t\t\tif ( type === 'attributes' && ( name === 'class' || name === 'style' ) ) {\r\n\t\t\t\tconst consumableName = name == 'class' ? 'classes' : 'styles';\r\n\r\n\t\t\t\t// If class or style is provided for consumption - consume them all.\r\n\t\t\t\tthis._consume( consumableName, [ ...this._consumables[ consumableName ].keys() ] );\r\n\t\t\t} else {\r\n\t\t\t\tconsumables.set( name, false );\r\n\r\n\t\t\t\tif ( type == 'styles' ) {\r\n\t\t\t\t\tfor ( const toConsume of this.element.document.stylesProcessor.getRelatedStyles( name ) ) {\r\n\t\t\t\t\t\tconsumables.set( toConsume, false );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Helper method that reverts items of a given type: attribute, class or style.\r\n\t *\r\n\t * @private\r\n\t * @param {String} type Type of the consumable item: `attributes`, `classes` or , `styles`.\r\n\t * @param {String|Array.<String>} item Consumable item or array of items.\r\n\t */\r\n\t_revert( type, item ) {\r\n\t\tconst items = isArray( item ) ? item : [ item ];\r\n\t\tconst consumables = this._consumables[ type ];\r\n\r\n\t\tfor ( const name of items ) {\r\n\t\t\tif ( type === 'attributes' && ( name === 'class' || name === 'style' ) ) {\r\n\t\t\t\tconst consumableName = name == 'class' ? 'classes' : 'styles';\r\n\r\n\t\t\t\t// If class or style is provided for reverting - revert them all.\r\n\t\t\t\tthis._revert( consumableName, [ ...this._consumables[ consumableName ].keys() ] );\r\n\t\t\t} else {\r\n\t\t\t\tconst value = consumables.get( name );\r\n\r\n\t\t\t\tif ( value === false ) {\r\n\t\t\t\t\tconsumables.set( name, true );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/dataprocessor/basichtmlwriter\r\n */\r\n\r\n/* globals document */\r\n\r\n/**\r\n * Basic HTML writer. It uses the native `innerHTML` property for basic conversion\r\n * from a document fragment to an HTML string.\r\n *\r\n * @implements module:engine/dataprocessor/htmlwriter~HtmlWriter\r\n */\r\nexport default class BasicHtmlWriter {\r\n\t/**\r\n\t * Returns an HTML string created from the document fragment.\r\n\t *\r\n\t * @param {DocumentFragment} fragment\r\n\t * @returns {String}\r\n\t */\r\n\tgetHtml( fragment ) {\r\n\t\tconst doc = document.implementation.createHTMLDocument( '' );\r\n\t\tconst container = doc.createElement( 'div' );\r\n\t\tcontainer.appendChild( fragment );\r\n\r\n\t\treturn container.innerHTML;\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/dataprocessor/htmldataprocessor\r\n */\r\n\r\n/* globals document, DOMParser */\r\n\r\nimport BasicHtmlWriter from './basichtmlwriter';\r\nimport DomConverter from '../view/domconverter';\r\n\r\n/**\r\n * The HTML data processor class.\r\n * This data processor implementation uses HTML as input and output data.\r\n *\r\n * @implements module:engine/dataprocessor/dataprocessor~DataProcessor\r\n */\r\nexport default class HtmlDataProcessor {\r\n\t/**\r\n\t * Creates a new instance of the HTML data processor class.\r\n\t *\r\n\t * @param {module:engine/view/document~Document} document The view document instance.\r\n\t */\r\n\tconstructor( document ) {\r\n\t\t/**\r\n\t\t * A DOM parser instance used to parse an HTML string to an HTML document.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {DOMParser}\r\n\t\t */\r\n\t\tthis._domParser = new DOMParser();\r\n\r\n\t\t/**\r\n\t\t * A DOM converter used to convert DOM elements to view elements.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {module:engine/view/domconverter~DomConverter}\r\n\t\t */\r\n\t\tthis._domConverter = new DomConverter( document, { blockFillerMode: 'nbsp' } );\r\n\r\n\t\t/**\r\n\t\t * A basic HTML writer instance used to convert DOM elements to an HTML string.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {module:engine/dataprocessor/basichtmlwriter~BasicHtmlWriter}\r\n\t\t */\r\n\t\tthis._htmlWriter = new BasicHtmlWriter();\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a provided {@link module:engine/view/documentfragment~DocumentFragment document fragment}\r\n\t * to data format &mdash; in this case to an HTML string.\r\n\t *\r\n\t * @param {module:engine/view/documentfragment~DocumentFragment} viewFragment\r\n\t * @returns {String} HTML string.\r\n\t */\r\n\ttoData( viewFragment ) {\r\n\t\t// Convert view DocumentFragment to DOM DocumentFragment.\r\n\t\tconst domFragment = this._domConverter.viewToDom( viewFragment, document );\r\n\r\n\t\t// Convert DOM DocumentFragment to HTML output.\r\n\t\treturn this._htmlWriter.getHtml( domFragment );\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the provided HTML string to a view tree.\r\n\t *\r\n\t * @param {String} data An HTML string.\r\n\t * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null} A converted view element.\r\n\t */\r\n\ttoView( data ) {\r\n\t\t// Convert input HTML data to DOM DocumentFragment.\r\n\t\tconst domFragment = this._toDom( data );\r\n\r\n\t\t// Convert DOM DocumentFragment to view DocumentFragment.\r\n\t\treturn this._domConverter.domToView( domFragment );\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an HTML string to its DOM representation. Returns a document fragment containing nodes parsed from\r\n\t * the provided data.\r\n\t *\r\n\t * @private\r\n\t * @param {String} data\r\n\t * @returns {DocumentFragment}\r\n\t */\r\n\t_toDom( data ) {\r\n\t\tconst document = this._domParser.parseFromString( data, 'text/html' );\r\n\t\tconst fragment = document.createDocumentFragment();\r\n\t\tconst nodes = document.body.childNodes;\r\n\r\n\t\twhile ( nodes.length > 0 ) {\r\n\t\t\tfragment.appendChild( nodes[ 0 ] );\r\n\t\t}\r\n\r\n\t\treturn fragment;\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/batch\r\n */\r\n\r\n/**\r\n * A batch instance groups model changes ({@link module:engine/model/operation/operation~Operation operations}). All operations\r\n * grouped in a single batch can be reverted together, so you can also think about a batch as of a single undo step. If you want\r\n * to extend a given undo step, you can add more changes to the batch using {@link module:engine/model/model~Model#enqueueChange}:\r\n *\r\n *\t\tmodel.enqueueChange( batch, writer => {\r\n *\t\t\twriter.insertText( 'foo', paragraph, 'end' );\r\n *\t\t} );\r\n *\r\n * @see module:engine/model/model~Model#enqueueChange\r\n * @see module:engine/model/model~Model#change\r\n */\r\nexport default class Batch {\r\n\t/**\r\n\t * Creates a batch instance.\r\n\t *\r\n\t * @see module:engine/model/model~Model#enqueueChange\r\n\t * @see module:engine/model/model~Model#change\r\n\t * @param {'transparent'|'default'} [type='default'] The type of the batch.\r\n\t */\r\n\tconstructor( type = 'default' ) {\r\n\t\t/**\r\n\t\t * An array of operations that compose this batch.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @type {Array.<module:engine/model/operation/operation~Operation>}\r\n\t\t */\r\n\t\tthis.operations = [];\r\n\r\n\t\t/**\r\n\t\t * The type of the batch.\r\n\t\t *\r\n\t\t * It can be one of the following values:\r\n\t\t * * `'default'` &ndash; All \"normal\" batches. This is the most commonly used type.\r\n\t\t * * `'transparent'` &ndash; A batch that should be ignored by other features, i.e. an initial batch or collaborative editing\r\n\t\t * changes.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @type {'transparent'|'default'}\r\n\t\t */\r\n\t\tthis.type = type;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the base version of this batch, which is equal to the base version of the first operation in the batch.\r\n\t * If there are no operations in the batch or neither operation has the base version set, it returns `null`.\r\n\t *\r\n\t * @readonly\r\n\t * @type {Number|null}\r\n\t */\r\n\tget baseVersion() {\r\n\t\tfor ( const op of this.operations ) {\r\n\t\t\tif ( op.baseVersion !== null ) {\r\n\t\t\t\treturn op.baseVersion;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an operation to the batch instance.\r\n\t *\r\n\t * @param {module:engine/model/operation/operation~Operation} operation An operation to add.\r\n\t * @returns {module:engine/model/operation/operation~Operation} The added operation.\r\n\t */\r\n\taddOperation( operation ) {\r\n\t\toperation.batch = this;\r\n\t\tthis.operations.push( operation );\r\n\r\n\t\treturn operation;\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/differ\r\n */\r\n\r\nimport Position from './position';\r\nimport Range from './range';\r\n\r\n/**\r\n * Calculates the difference between two model states.\r\n *\r\n * Receives operations that are to be applied on the model document. Marks parts of the model document tree which\r\n * are changed and saves the state of these elements before the change. Then, it compares saved elements with the\r\n * changed elements, after all changes are applied on the model document. Calculates the diff between saved\r\n * elements and new ones and returns a change set.\r\n */\r\nexport default class Differ {\r\n\t/**\r\n\t * Creates a `Differ` instance.\r\n\t *\r\n\t * @param {module:engine/model/markercollection~MarkerCollection} markerCollection Model's marker collection.\r\n\t */\r\n\tconstructor( markerCollection ) {\r\n\t\t/**\r\n\t\t * Reference to the model's marker collection.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {module:engine/model/markercollection~MarkerCollection}\r\n\t\t */\r\n\t\tthis._markerCollection = markerCollection;\r\n\r\n\t\t/**\r\n\t\t * A map that stores changes that happened in a given element.\r\n\t\t *\r\n\t\t * The keys of the map are references to the model elements.\r\n\t\t * The values of the map are arrays with changes that were done on this element.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {Map}\r\n\t\t */\r\n\t\tthis._changesInElement = new Map();\r\n\r\n\t\t/**\r\n\t\t * A map that stores \"element's children snapshots\". A snapshot is representing children of a given element before\r\n\t\t * the first change was applied on that element. Snapshot items are objects with two properties: `name`,\r\n\t\t * containing the element name (or `'$text'` for a text node) and `attributes` which is a map of the node's attributes.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {Map}\r\n\t\t */\r\n\t\tthis._elementSnapshots = new Map();\r\n\r\n\t\t/**\r\n\t\t * A map that stores all changed markers.\r\n\t\t *\r\n\t\t * The keys of the map are marker names.\r\n\t\t * The values of the map are objects with the `oldRange` and `newRange` properties. They store the marker range\r\n\t\t * state before and after the change.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {Map}\r\n\t\t */\r\n\t\tthis._changedMarkers = new Map();\r\n\r\n\t\t/**\r\n\t\t * Stores the number of changes that were processed. Used to order the changes chronologically. It is important\r\n\t\t * when changes are sorted.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {Number}\r\n\t\t */\r\n\t\tthis._changeCount = 0;\r\n\r\n\t\t/**\r\n\t\t * For efficiency purposes, `Differ` stores the change set returned by the differ after {@link #getChanges} call.\r\n\t\t * Cache is reset each time a new operation is buffered. If the cache has not been reset, {@link #getChanges} will\r\n\t\t * return the cached value instead of calculating it again.\r\n\t\t *\r\n\t\t * This property stores those changes that did not take place in graveyard root.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {Array.<Object>|null}\r\n\t\t */\r\n\t\tthis._cachedChanges = null;\r\n\r\n\t\t/**\r\n\t\t * For efficiency purposes, `Differ` stores the change set returned by the differ after the {@link #getChanges} call.\r\n\t\t * The cache is reset each time a new operation is buffered. If the cache has not been reset, {@link #getChanges} will\r\n\t\t * return the cached value instead of calculating it again.\r\n\t\t *\r\n\t\t * This property stores all changes evaluated by `Differ`, including those that took place in the graveyard.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {Array.<Object>|null}\r\n\t\t */\r\n\t\tthis._cachedChangesWithGraveyard = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Informs whether there are any changes buffered in `Differ`.\r\n\t *\r\n\t * @readonly\r\n\t * @type {Boolean}\r\n\t */\r\n\tget isEmpty() {\r\n\t\treturn this._changesInElement.size == 0 && this._changedMarkers.size == 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Marks given `item` in differ to be \"refreshed\". It means that the item will be marked as removed and inserted in the differ changes\r\n\t * set, so it will be effectively re-converted when differ changes will be handled by a dispatcher.\r\n\t *\r\n\t * @param {module:engine/model/item~Item} item Item to refresh.\r\n\t */\r\n\trefreshItem( item ) {\r\n\t\tif ( this._isInInsertedElement( item.parent ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._markRemove( item.parent, item.startOffset, item.offsetSize );\r\n\t\tthis._markInsert( item.parent, item.startOffset, item.offsetSize );\r\n\r\n\t\tconst range = Range._createOn( item );\r\n\r\n\t\tfor ( const marker of this._markerCollection.getMarkersIntersectingRange( range ) ) {\r\n\t\t\tconst markerRange = marker.getRange();\r\n\r\n\t\t\tthis.bufferMarkerChange( marker.name, markerRange, markerRange, marker.affectsData );\r\n\t\t}\r\n\r\n\t\t// Clear cache after each buffered operation as it is no longer valid.\r\n\t\tthis._cachedChanges = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Buffers the given operation. An operation has to be buffered before it is executed.\r\n\t *\r\n\t * Operation type is checked and it is checked which nodes it will affect. These nodes are then stored in `Differ`\r\n\t * in the state before the operation is executed.\r\n\t *\r\n\t * @param {module:engine/model/operation/operation~Operation} operation An operation to buffer.\r\n\t */\r\n\tbufferOperation( operation ) {\r\n\t\t// Below we take an operation, check its type, then use its parameters in marking (private) methods.\r\n\t\t// The general rule is to not mark elements inside inserted element. All inserted elements are re-rendered.\r\n\t\t// Marking changes in them would cause a \"double\" changing then.\r\n\t\t//\r\n\t\tswitch ( operation.type ) {\r\n\t\t\tcase 'insert': {\r\n\t\t\t\tif ( this._isInInsertedElement( operation.position.parent ) ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._markInsert( operation.position.parent, operation.position.offset, operation.nodes.maxOffset );\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'addAttribute':\r\n\t\t\tcase 'removeAttribute':\r\n\t\t\tcase 'changeAttribute': {\r\n\t\t\t\tfor ( const item of operation.range.getItems( { shallow: true } ) ) {\r\n\t\t\t\t\tif ( this._isInInsertedElement( item.parent ) ) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._markAttribute( item );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'remove':\r\n\t\t\tcase 'move':\r\n\t\t\tcase 'reinsert': {\r\n\t\t\t\t// When range is moved to the same position then not mark it as a change.\r\n\t\t\t\t// See: https://github.com/ckeditor/ckeditor5-engine/issues/1664.\r\n\t\t\t\tif (\r\n\t\t\t\t\toperation.sourcePosition.isEqual( operation.targetPosition ) ||\r\n\t\t\t\t\toperation.sourcePosition.getShiftedBy( operation.howMany ).isEqual( operation.targetPosition )\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst sourceParentInserted = this._isInInsertedElement( operation.sourcePosition.parent );\r\n\t\t\t\tconst targetParentInserted = this._isInInsertedElement( operation.targetPosition.parent );\r\n\r\n\t\t\t\tif ( !sourceParentInserted ) {\r\n\t\t\t\t\tthis._markRemove( operation.sourcePosition.parent, operation.sourcePosition.offset, operation.howMany );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( !targetParentInserted ) {\r\n\t\t\t\t\tthis._markInsert( operation.targetPosition.parent, operation.getMovedRangeStart().offset, operation.howMany );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'rename': {\r\n\t\t\t\tif ( this._isInInsertedElement( operation.position.parent ) ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._markRemove( operation.position.parent, operation.position.offset, 1 );\r\n\t\t\t\tthis._markInsert( operation.position.parent, operation.position.offset, 1 );\r\n\r\n\t\t\t\tconst range = Range._createFromPositionAndShift( operation.position, 1 );\r\n\r\n\t\t\t\tfor ( const marker of this._markerCollection.getMarkersIntersectingRange( range ) ) {\r\n\t\t\t\t\tconst markerRange = marker.getRange();\r\n\r\n\t\t\t\t\tthis.bufferMarkerChange( marker.name, markerRange, markerRange, marker.affectsData );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'split': {\r\n\t\t\t\tconst splitElement = operation.splitPosition.parent;\r\n\r\n\t\t\t\t// Mark that children of the split element were removed.\r\n\t\t\t\tif ( !this._isInInsertedElement( splitElement ) ) {\r\n\t\t\t\t\tthis._markRemove( splitElement, operation.splitPosition.offset, operation.howMany );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Mark that the new element (split copy) was inserted.\r\n\t\t\t\tif ( !this._isInInsertedElement( operation.insertionPosition.parent ) ) {\r\n\t\t\t\t\tthis._markInsert( operation.insertionPosition.parent, operation.insertionPosition.offset, 1 );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If the split took the element from the graveyard, mark that the element from the graveyard was removed.\r\n\t\t\t\tif ( operation.graveyardPosition ) {\r\n\t\t\t\t\tthis._markRemove( operation.graveyardPosition.parent, operation.graveyardPosition.offset, 1 );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'merge': {\r\n\t\t\t\t// Mark that the merged element was removed.\r\n\t\t\t\tconst mergedElement = operation.sourcePosition.parent;\r\n\r\n\t\t\t\tif ( !this._isInInsertedElement( mergedElement.parent ) ) {\r\n\t\t\t\t\tthis._markRemove( mergedElement.parent, mergedElement.startOffset, 1 );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Mark that the merged element was inserted into graveyard.\r\n\t\t\t\tconst graveyardParent = operation.graveyardPosition.parent;\r\n\r\n\t\t\t\tthis._markInsert( graveyardParent, operation.graveyardPosition.offset, 1 );\r\n\r\n\t\t\t\t// Mark that children of merged element were inserted at new parent.\r\n\t\t\t\tconst mergedIntoElement = operation.targetPosition.parent;\r\n\r\n\t\t\t\tif ( !this._isInInsertedElement( mergedIntoElement ) ) {\r\n\t\t\t\t\tthis._markInsert( mergedIntoElement, operation.targetPosition.offset, mergedElement.maxOffset );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Clear cache after each buffered operation as it is no longer valid.\r\n\t\tthis._cachedChanges = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Buffers a marker change.\r\n\t *\r\n\t * @param {String} markerName The name of the marker that changed.\r\n\t * @param {module:engine/model/range~Range|null} oldRange Marker range before the change or `null` if the marker has just\r\n\t * been created.\r\n\t * @param {module:engine/model/range~Range|null} newRange Marker range after the change or `null` if the marker was removed.\r\n\t * @param {Boolean} affectsData Flag indicating whether marker affects the editor data.\r\n\t */\r\n\tbufferMarkerChange( markerName, oldRange, newRange, affectsData ) {\r\n\t\tconst buffered = this._changedMarkers.get( markerName );\r\n\r\n\t\tif ( !buffered ) {\r\n\t\t\tthis._changedMarkers.set( markerName, {\r\n\t\t\t\toldRange,\r\n\t\t\t\tnewRange,\r\n\t\t\t\taffectsData\r\n\t\t\t} );\r\n\t\t} else {\r\n\t\t\tbuffered.newRange = newRange;\r\n\t\t\tbuffered.affectsData = affectsData;\r\n\r\n\t\t\tif ( buffered.oldRange == null && buffered.newRange == null ) {\r\n\t\t\t\t// The marker is going to be removed (`newRange == null`) but it did not exist before the first buffered change\r\n\t\t\t\t// (`buffered.oldRange == null`). In this case, do not keep the marker in buffer at all.\r\n\t\t\t\tthis._changedMarkers.delete( markerName );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all markers that should be removed as a result of buffered changes.\r\n\t *\r\n\t * @returns {Array.<Object>} Markers to remove. Each array item is an object containing the `name` and `range` properties.\r\n\t */\r\n\tgetMarkersToRemove() {\r\n\t\tconst result = [];\r\n\r\n\t\tfor ( const [ name, change ] of this._changedMarkers ) {\r\n\t\t\tif ( change.oldRange != null ) {\r\n\t\t\t\tresult.push( { name, range: change.oldRange } );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all markers which should be added as a result of buffered changes.\r\n\t *\r\n\t * @returns {Array.<Object>} Markers to add. Each array item is an object containing the `name` and `range` properties.\r\n\t */\r\n\tgetMarkersToAdd() {\r\n\t\tconst result = [];\r\n\r\n\t\tfor ( const [ name, change ] of this._changedMarkers ) {\r\n\t\t\tif ( change.newRange != null ) {\r\n\t\t\t\tresult.push( { name, range: change.newRange } );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all markers which changed.\r\n\t *\r\n\t * @returns {Array.<Object>}\r\n\t */\r\n\tgetChangedMarkers() {\r\n\t\treturn Array.from( this._changedMarkers ).map( item => (\r\n\t\t\t{\r\n\t\t\t\tname: item[ 0 ],\r\n\t\t\t\tdata: {\r\n\t\t\t\t\toldRange: item[ 1 ].oldRange,\r\n\t\t\t\t\tnewRange: item[ 1 ].newRange\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t) );\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether some of the buffered changes affect the editor data.\r\n\t *\r\n\t * Types of changes which affect the editor data:\r\n\t *\r\n\t * * model structure changes,\r\n\t * * attribute changes,\r\n\t * * changes of markers which were defined as `affectingData`.\r\n\t *\r\n\t * @returns {Boolean}\r\n\t */\r\n\thasDataChanges() {\r\n\t\tfor ( const [ , change ] of this._changedMarkers ) {\r\n\t\t\tif ( change.affectsData ) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If markers do not affect the data, check whether there are some changes in elements.\r\n\t\treturn this._changesInElement.size > 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the diff between the old model tree state (the state before the first buffered operations since the last {@link #reset}\r\n\t * call) and the new model tree state (actual one). It should be called after all buffered operations are executed.\r\n\t *\r\n\t * The diff set is returned as an array of diff items, each describing a change done on the model. The items are sorted by\r\n\t * the position on which the change happened. If a position {@link module:engine/model/position~Position#isBefore is before}\r\n\t * another one, it will be on an earlier index in the diff set.\r\n\t *\r\n\t * Because calculating the diff is a costly operation, the result is cached. If no new operation was buffered since the\r\n\t * previous {@link #getChanges} call, the next call will return the cached value.\r\n\t *\r\n\t * @param {Object} options Additional options.\r\n\t * @param {Boolean} [options.includeChangesInGraveyard=false] If set to `true`, also changes that happened\r\n\t * in the graveyard root will be returned. By default, changes in the graveyard root are not returned.\r\n\t * @returns {Array.<Object>} Diff between the old and the new model tree state.\r\n\t */\r\n\tgetChanges( options = { includeChangesInGraveyard: false } ) {\r\n\t\t// If there are cached changes, just return them instead of calculating changes again.\r\n\t\tif ( this._cachedChanges ) {\r\n\t\t\tif ( options.includeChangesInGraveyard ) {\r\n\t\t\t\treturn this._cachedChangesWithGraveyard.slice();\r\n\t\t\t} else {\r\n\t\t\t\treturn this._cachedChanges.slice();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Will contain returned results.\r\n\t\tconst diffSet = [];\r\n\r\n\t\t// Check all changed elements.\r\n\t\tfor ( const element of this._changesInElement.keys() ) {\r\n\t\t\t// Get changes for this element and sort them.\r\n\t\t\tconst changes = this._changesInElement.get( element ).sort( ( a, b ) => {\r\n\t\t\t\tif ( a.offset === b.offset ) {\r\n\t\t\t\t\tif ( a.type != b.type ) {\r\n\t\t\t\t\t\t// If there are multiple changes at the same position, \"remove\" change should be first.\r\n\t\t\t\t\t\t// If the order is different, for example, we would first add some nodes and then removed them\r\n\t\t\t\t\t\t// (instead of the nodes that we should remove).\r\n\t\t\t\t\t\treturn a.type == 'remove' ? -1 : 1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn a.offset < b.offset ? -1 : 1;\r\n\t\t\t} );\r\n\r\n\t\t\t// Get children of this element before any change was applied on it.\r\n\t\t\tconst snapshotChildren = this._elementSnapshots.get( element );\r\n\t\t\t// Get snapshot of current element's children.\r\n\t\t\tconst elementChildren = _getChildrenSnapshot( element.getChildren() );\r\n\r\n\t\t\t// Generate actions basing on changes done on element.\r\n\t\t\tconst actions = _generateActionsFromChanges( snapshotChildren.length, changes );\r\n\r\n\t\t\tlet i = 0; // Iterator in `elementChildren` array -- iterates through current children of element.\r\n\t\t\tlet j = 0; // Iterator in `snapshotChildren` array -- iterates through old children of element.\r\n\r\n\t\t\t// Process every action.\r\n\t\t\tfor ( const action of actions ) {\r\n\t\t\t\tif ( action === 'i' ) {\r\n\t\t\t\t\t// Generate diff item for this element and insert it into the diff set.\r\n\t\t\t\t\tdiffSet.push( this._getInsertDiff( element, i, elementChildren[ i ].name ) );\r\n\r\n\t\t\t\t\ti++;\r\n\t\t\t\t} else if ( action === 'r' ) {\r\n\t\t\t\t\t// Generate diff item for this element and insert it into the diff set.\r\n\t\t\t\t\tdiffSet.push( this._getRemoveDiff( element, i, snapshotChildren[ j ].name ) );\r\n\r\n\t\t\t\t\tj++;\r\n\t\t\t\t} else if ( action === 'a' ) {\r\n\t\t\t\t\t// Take attributes from saved and current children.\r\n\t\t\t\t\tconst elementAttributes = elementChildren[ i ].attributes;\r\n\t\t\t\t\tconst snapshotAttributes = snapshotChildren[ j ].attributes;\r\n\t\t\t\t\tlet range;\r\n\r\n\t\t\t\t\tif ( elementChildren[ i ].name == '$text' ) {\r\n\t\t\t\t\t\trange = new Range( Position._createAt( element, i ), Position._createAt( element, i + 1 ) );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst index = element.offsetToIndex( i );\r\n\t\t\t\t\t\trange = new Range( Position._createAt( element, i ), Position._createAt( element.getChild( index ), 0 ) );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Generate diff items for this change (there might be multiple attributes changed and\r\n\t\t\t\t\t// there is a single diff for each of them) and insert them into the diff set.\r\n\t\t\t\t\tdiffSet.push( ...this._getAttributesDiff( range, snapshotAttributes, elementAttributes ) );\r\n\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tj++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// `action` is 'equal'. Child not changed.\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tj++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Then, sort the changes by the position (change at position before other changes is first).\r\n\t\tdiffSet.sort( ( a, b ) => {\r\n\t\t\t// If the change is in different root, we don't care much, but we'd like to have all changes in given\r\n\t\t\t// root \"together\" in the array. So let's just sort them by the root name. It does not matter which root\r\n\t\t\t// will be processed first.\r\n\t\t\tif ( a.position.root != b.position.root ) {\r\n\t\t\t\treturn a.position.root.rootName < b.position.root.rootName ? -1 : 1;\r\n\t\t\t}\r\n\r\n\t\t\t// If change happens at the same position...\r\n\t\t\tif ( a.position.isEqual( b.position ) ) {\r\n\t\t\t\t// Keep chronological order of operations.\r\n\t\t\t\treturn a.changeCount - b.changeCount;\r\n\t\t\t}\r\n\r\n\t\t\t// If positions differ, position \"on the left\" should be earlier in the result.\r\n\t\t\treturn a.position.isBefore( b.position ) ? -1 : 1;\r\n\t\t} );\r\n\r\n\t\t// Glue together multiple changes (mostly on text nodes).\r\n\t\tfor ( let i = 1; i < diffSet.length; i++ ) {\r\n\t\t\tconst prevDiff = diffSet[ i - 1 ];\r\n\t\t\tconst thisDiff = diffSet[ i ];\r\n\r\n\t\t\t// Glue remove changes if they happen on text on same position.\r\n\t\t\tconst isConsecutiveTextRemove =\r\n\t\t\t\tprevDiff.type == 'remove' && thisDiff.type == 'remove' &&\r\n\t\t\t\tprevDiff.name == '$text' && thisDiff.name == '$text' &&\r\n\t\t\t\tprevDiff.position.isEqual( thisDiff.position );\r\n\r\n\t\t\t// Glue insert changes if they happen on text on consecutive fragments.\r\n\t\t\tconst isConsecutiveTextAdd =\r\n\t\t\t\tprevDiff.type == 'insert' && thisDiff.type == 'insert' &&\r\n\t\t\t\tprevDiff.name == '$text' && thisDiff.name == '$text' &&\r\n\t\t\t\tprevDiff.position.parent == thisDiff.position.parent &&\r\n\t\t\t\tprevDiff.position.offset + prevDiff.length == thisDiff.position.offset;\r\n\r\n\t\t\t// Glue attribute changes if they happen on consecutive fragments and have same key, old value and new value.\r\n\t\t\tconst isConsecutiveAttributeChange =\r\n\t\t\t\tprevDiff.type == 'attribute' && thisDiff.type == 'attribute' &&\r\n\t\t\t\tprevDiff.position.parent == thisDiff.position.parent &&\r\n\t\t\t\tprevDiff.range.isFlat && thisDiff.range.isFlat &&\r\n\t\t\t\tprevDiff.position.offset + prevDiff.length == thisDiff.position.offset &&\r\n\t\t\t\tprevDiff.attributeKey == thisDiff.attributeKey &&\r\n\t\t\t\tprevDiff.attributeOldValue == thisDiff.attributeOldValue &&\r\n\t\t\t\tprevDiff.attributeNewValue == thisDiff.attributeNewValue;\r\n\r\n\t\t\tif ( isConsecutiveTextRemove || isConsecutiveTextAdd || isConsecutiveAttributeChange ) {\r\n\t\t\t\tdiffSet[ i - 1 ].length++;\r\n\r\n\t\t\t\tif ( isConsecutiveAttributeChange ) {\r\n\t\t\t\t\tdiffSet[ i - 1 ].range.end = diffSet[ i - 1 ].range.end.getShiftedBy( 1 );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdiffSet.splice( i, 1 );\r\n\t\t\t\ti--;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Remove `changeCount` property from diff items. It is used only for sorting and is internal thing.\r\n\t\tfor ( const item of diffSet ) {\r\n\t\t\tdelete item.changeCount;\r\n\r\n\t\t\tif ( item.type == 'attribute' ) {\r\n\t\t\t\tdelete item.position;\r\n\t\t\t\tdelete item.length;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._changeCount = 0;\r\n\r\n\t\t// Cache changes.\r\n\t\tthis._cachedChangesWithGraveyard = diffSet.slice();\r\n\t\tthis._cachedChanges = diffSet.slice().filter( _changesInGraveyardFilter );\r\n\r\n\t\tif ( options.includeChangesInGraveyard ) {\r\n\t\t\treturn this._cachedChangesWithGraveyard;\r\n\t\t} else {\r\n\t\t\treturn this._cachedChanges;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Resets `Differ`. Removes all buffered changes.\r\n\t */\r\n\treset() {\r\n\t\tthis._changesInElement.clear();\r\n\t\tthis._elementSnapshots.clear();\r\n\t\tthis._changedMarkers.clear();\r\n\t\tthis._cachedChanges = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Saves and handles an insert change.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/model/element~Element} parent\r\n\t * @param {Number} offset\r\n\t * @param {Number} howMany\r\n\t */\r\n\t_markInsert( parent, offset, howMany ) {\r\n\t\tconst changeItem = { type: 'insert', offset, howMany, count: this._changeCount++ };\r\n\r\n\t\tthis._markChange( parent, changeItem );\r\n\t}\r\n\r\n\t/**\r\n\t * Saves and handles a remove change.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/model/element~Element} parent\r\n\t * @param {Number} offset\r\n\t * @param {Number} howMany\r\n\t */\r\n\t_markRemove( parent, offset, howMany ) {\r\n\t\tconst changeItem = { type: 'remove', offset, howMany, count: this._changeCount++ };\r\n\r\n\t\tthis._markChange( parent, changeItem );\r\n\r\n\t\tthis._removeAllNestedChanges( parent, offset, howMany );\r\n\t}\r\n\r\n\t/**\r\n\t * Saves and handles an attribute change.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/model/item~Item} item\r\n\t */\r\n\t_markAttribute( item ) {\r\n\t\tconst changeItem = { type: 'attribute', offset: item.startOffset, howMany: item.offsetSize, count: this._changeCount++ };\r\n\r\n\t\tthis._markChange( item.parent, changeItem );\r\n\t}\r\n\r\n\t/**\r\n\t * Saves and handles a model change.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/model/element~Element} parent\r\n\t * @param {Object} changeItem\r\n\t */\r\n\t_markChange( parent, changeItem ) {\r\n\t\t// First, make a snapshot of this parent's children (it will be made only if it was not made before).\r\n\t\tthis._makeSnapshot( parent );\r\n\r\n\t\t// Then, get all changes that already were done on the element (empty array if this is the first change).\r\n\t\tconst changes = this._getChangesForElement( parent );\r\n\r\n\t\t// Then, look through all the changes, and transform them or the new change.\r\n\t\tthis._handleChange( changeItem, changes );\r\n\r\n\t\t// Add the new change.\r\n\t\tchanges.push( changeItem );\r\n\r\n\t\t// Remove incorrect changes. During transformation some change might be, for example, included in another.\r\n\t\t// In that case, the change will have `howMany` property set to `0` or less. We need to remove those changes.\r\n\t\tfor ( let i = 0; i < changes.length; i++ ) {\r\n\t\t\tif ( changes[ i ].howMany < 1 ) {\r\n\t\t\t\tchanges.splice( i, 1 );\r\n\r\n\t\t\t\ti--;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Gets an array of changes that have already been saved for a given element.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/model/element~Element} element\r\n\t * @returns {Array.<Object>}\r\n\t */\r\n\t_getChangesForElement( element ) {\r\n\t\tlet changes;\r\n\r\n\t\tif ( this._changesInElement.has( element ) ) {\r\n\t\t\tchanges = this._changesInElement.get( element );\r\n\t\t} else {\r\n\t\t\tchanges = [];\r\n\r\n\t\t\tthis._changesInElement.set( element, changes );\r\n\t\t}\r\n\r\n\t\treturn changes;\r\n\t}\r\n\r\n\t/**\r\n\t * Saves a children snapshot for a given element.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/model/element~Element} element\r\n\t */\r\n\t_makeSnapshot( element ) {\r\n\t\tif ( !this._elementSnapshots.has( element ) ) {\r\n\t\t\tthis._elementSnapshots.set( element, _getChildrenSnapshot( element.getChildren() ) );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * For a given newly saved change, compares it with a change already done on the element and modifies the incoming\r\n\t * change and/or the old change.\r\n\t *\r\n\t * @private\r\n\t * @param {Object} inc Incoming (new) change.\r\n\t * @param {Array.<Object>} changes An array containing all the changes done on that element.\r\n\t */\r\n\t_handleChange( inc, changes ) {\r\n\t\t// We need a helper variable that will store how many nodes are to be still handled for this change item.\r\n\t\t// `nodesToHandle` (how many nodes still need to be handled) and `howMany` (how many nodes were affected)\r\n\t\t// needs to be differentiated.\r\n\t\t//\r\n\t\t// This comes up when there are multiple changes that are affected by `inc` change item.\r\n\t\t//\r\n\t\t// For example: assume two insert changes: `{ offset: 2, howMany: 1 }` and `{ offset: 5, howMany: 1 }`.\r\n\t\t// Assume that `inc` change is remove `{ offset: 2, howMany: 2, nodesToHandle: 2 }`.\r\n\t\t//\r\n\t\t// Then, we:\r\n\t\t// - \"forget\" about first insert change (it is \"eaten\" by remove),\r\n\t\t// - because of that, at the end we will want to remove only one node (`nodesToHandle = 1`),\r\n\t\t// - but still we have to change offset of the second insert change from `5` to `3`!\r\n\t\t//\r\n\t\t// So, `howMany` does not change throughout items transformation and keeps information about how many nodes were affected,\r\n\t\t// while `nodesToHandle` means how many nodes need to be handled after the change item is transformed by other changes.\r\n\t\tinc.nodesToHandle = inc.howMany;\r\n\r\n\t\tfor ( const old of changes ) {\r\n\t\t\tconst incEnd = inc.offset + inc.howMany;\r\n\t\t\tconst oldEnd = old.offset + old.howMany;\r\n\r\n\t\t\tif ( inc.type == 'insert' ) {\r\n\t\t\t\tif ( old.type == 'insert' ) {\r\n\t\t\t\t\tif ( inc.offset <= old.offset ) {\r\n\t\t\t\t\t\told.offset += inc.howMany;\r\n\t\t\t\t\t} else if ( inc.offset < oldEnd ) {\r\n\t\t\t\t\t\told.howMany += inc.nodesToHandle;\r\n\t\t\t\t\t\tinc.nodesToHandle = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( old.type == 'remove' ) {\r\n\t\t\t\t\tif ( inc.offset < old.offset ) {\r\n\t\t\t\t\t\told.offset += inc.howMany;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( old.type == 'attribute' ) {\r\n\t\t\t\t\tif ( inc.offset <= old.offset ) {\r\n\t\t\t\t\t\told.offset += inc.howMany;\r\n\t\t\t\t\t} else if ( inc.offset < oldEnd ) {\r\n\t\t\t\t\t\t// This case is more complicated, because attribute change has to be split into two.\r\n\t\t\t\t\t\t// Example (assume that uppercase and lowercase letters mean different attributes):\r\n\t\t\t\t\t\t//\r\n\t\t\t\t\t\t// initial state:\t\tabcxyz\r\n\t\t\t\t\t\t// attribute change:\taBCXYz\r\n\t\t\t\t\t\t// incoming insert:\t\taBCfooXYz\r\n\t\t\t\t\t\t//\r\n\t\t\t\t\t\t// Change ranges cannot intersect because each item has to be described exactly (it was either\r\n\t\t\t\t\t\t// not changed, inserted, removed, or its attribute was changed). That's why old attribute\r\n\t\t\t\t\t\t// change has to be split and both parts has to be handled separately from now on.\r\n\t\t\t\t\t\tconst howMany = old.howMany;\r\n\r\n\t\t\t\t\t\told.howMany = inc.offset - old.offset;\r\n\r\n\t\t\t\t\t\t// Add the second part of attribute change to the beginning of processed array so it won't\r\n\t\t\t\t\t\t// be processed again in this loop.\r\n\t\t\t\t\t\tchanges.unshift( {\r\n\t\t\t\t\t\t\ttype: 'attribute',\r\n\t\t\t\t\t\t\toffset: incEnd,\r\n\t\t\t\t\t\t\thowMany: howMany - old.howMany,\r\n\t\t\t\t\t\t\tcount: this._changeCount++\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( inc.type == 'remove' ) {\r\n\t\t\t\tif ( old.type == 'insert' ) {\r\n\t\t\t\t\tif ( incEnd <= old.offset ) {\r\n\t\t\t\t\t\told.offset -= inc.howMany;\r\n\t\t\t\t\t} else if ( incEnd <= oldEnd ) {\r\n\t\t\t\t\t\tif ( inc.offset < old.offset ) {\r\n\t\t\t\t\t\t\tconst intersectionLength = incEnd - old.offset;\r\n\r\n\t\t\t\t\t\t\told.offset = inc.offset;\r\n\r\n\t\t\t\t\t\t\told.howMany -= intersectionLength;\r\n\t\t\t\t\t\t\tinc.nodesToHandle -= intersectionLength;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\told.howMany -= inc.nodesToHandle;\r\n\t\t\t\t\t\t\tinc.nodesToHandle = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif ( inc.offset <= old.offset ) {\r\n\t\t\t\t\t\t\tinc.nodesToHandle -= old.howMany;\r\n\t\t\t\t\t\t\told.howMany = 0;\r\n\t\t\t\t\t\t} else if ( inc.offset < oldEnd ) {\r\n\t\t\t\t\t\t\tconst intersectionLength = oldEnd - inc.offset;\r\n\r\n\t\t\t\t\t\t\told.howMany -= intersectionLength;\r\n\t\t\t\t\t\t\tinc.nodesToHandle -= intersectionLength;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( old.type == 'remove' ) {\r\n\t\t\t\t\tif ( incEnd <= old.offset ) {\r\n\t\t\t\t\t\told.offset -= inc.howMany;\r\n\t\t\t\t\t} else if ( inc.offset < old.offset ) {\r\n\t\t\t\t\t\tinc.nodesToHandle += old.howMany;\r\n\t\t\t\t\t\told.howMany = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( old.type == 'attribute' ) {\r\n\t\t\t\t\tif ( incEnd <= old.offset ) {\r\n\t\t\t\t\t\told.offset -= inc.howMany;\r\n\t\t\t\t\t} else if ( inc.offset < old.offset ) {\r\n\t\t\t\t\t\tconst intersectionLength = incEnd - old.offset;\r\n\r\n\t\t\t\t\t\told.offset = inc.offset;\r\n\t\t\t\t\t\told.howMany -= intersectionLength;\r\n\t\t\t\t\t} else if ( inc.offset < oldEnd ) {\r\n\t\t\t\t\t\tif ( incEnd <= oldEnd ) {\r\n\t\t\t\t\t\t\t// On first sight in this case we don't need to split attribute operation into two.\r\n\t\t\t\t\t\t\t// However the changes set is later converted to actions (see `_generateActionsFromChanges`).\r\n\t\t\t\t\t\t\t// For that reason, no two changes may intersect.\r\n\t\t\t\t\t\t\t// So we cannot have an attribute change that \"contains\" remove change.\r\n\t\t\t\t\t\t\t// Attribute change needs to be split.\r\n\t\t\t\t\t\t\tconst howMany = old.howMany;\r\n\r\n\t\t\t\t\t\t\told.howMany = inc.offset - old.offset;\r\n\r\n\t\t\t\t\t\t\tconst howManyAfter = howMany - old.howMany - inc.nodesToHandle;\r\n\r\n\t\t\t\t\t\t\t// Add the second part of attribute change to the beginning of processed array so it won't\r\n\t\t\t\t\t\t\t// be processed again in this loop.\r\n\t\t\t\t\t\t\tchanges.unshift( {\r\n\t\t\t\t\t\t\t\ttype: 'attribute',\r\n\t\t\t\t\t\t\t\toffset: inc.offset,\r\n\t\t\t\t\t\t\t\thowMany: howManyAfter,\r\n\t\t\t\t\t\t\t\tcount: this._changeCount++\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\told.howMany -= oldEnd - inc.offset;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( inc.type == 'attribute' ) {\r\n\t\t\t\t// In case of attribute change, `howMany` should be kept same as `nodesToHandle`. It's not an error.\r\n\t\t\t\tif ( old.type == 'insert' ) {\r\n\t\t\t\t\tif ( inc.offset < old.offset && incEnd > old.offset ) {\r\n\t\t\t\t\t\tif ( incEnd > oldEnd ) {\r\n\t\t\t\t\t\t\t// This case is similar to a case described when incoming change was insert and old change was attribute.\r\n\t\t\t\t\t\t\t// See comment above.\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\t// This time incoming change is attribute. We need to split incoming change in this case too.\r\n\t\t\t\t\t\t\t// However this time, the second part of the attribute change needs to be processed further\r\n\t\t\t\t\t\t\t// because there might be other changes that it collides with.\r\n\t\t\t\t\t\t\tconst attributePart = {\r\n\t\t\t\t\t\t\t\ttype: 'attribute',\r\n\t\t\t\t\t\t\t\toffset: oldEnd,\r\n\t\t\t\t\t\t\t\thowMany: incEnd - oldEnd,\r\n\t\t\t\t\t\t\t\tcount: this._changeCount++\r\n\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\tthis._handleChange( attributePart, changes );\r\n\r\n\t\t\t\t\t\t\tchanges.push( attributePart );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tinc.nodesToHandle = old.offset - inc.offset;\r\n\t\t\t\t\t\tinc.howMany = inc.nodesToHandle;\r\n\t\t\t\t\t} else if ( inc.offset >= old.offset && inc.offset < oldEnd ) {\r\n\t\t\t\t\t\tif ( incEnd > oldEnd ) {\r\n\t\t\t\t\t\t\tinc.nodesToHandle = incEnd - oldEnd;\r\n\t\t\t\t\t\t\tinc.offset = oldEnd;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tinc.nodesToHandle = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( old.type == 'remove' ) {\r\n\t\t\t\t\t// This is a case when attribute change \"contains\" remove change.\r\n\t\t\t\t\t// The attribute change needs to be split into two because changes cannot intersect.\r\n\t\t\t\t\tif ( inc.offset < old.offset && incEnd > old.offset ) {\r\n\t\t\t\t\t\tconst attributePart = {\r\n\t\t\t\t\t\t\ttype: 'attribute',\r\n\t\t\t\t\t\t\toffset: old.offset,\r\n\t\t\t\t\t\t\thowMany: incEnd - old.offset,\r\n\t\t\t\t\t\t\tcount: this._changeCount++\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\tthis._handleChange( attributePart, changes );\r\n\r\n\t\t\t\t\t\tchanges.push( attributePart );\r\n\r\n\t\t\t\t\t\tinc.nodesToHandle = old.offset - inc.offset;\r\n\t\t\t\t\t\tinc.howMany = inc.nodesToHandle;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( old.type == 'attribute' ) {\r\n\t\t\t\t\t// There are only two conflicting scenarios possible here:\r\n\t\t\t\t\tif ( inc.offset >= old.offset && incEnd <= oldEnd ) {\r\n\t\t\t\t\t\t// `old` change includes `inc` change, or they are the same.\r\n\t\t\t\t\t\tinc.nodesToHandle = 0;\r\n\t\t\t\t\t\tinc.howMany = 0;\r\n\t\t\t\t\t\tinc.offset = 0;\r\n\t\t\t\t\t} else if ( inc.offset <= old.offset && incEnd >= oldEnd ) {\r\n\t\t\t\t\t\t// `inc` change includes `old` change.\r\n\t\t\t\t\t\told.howMany = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tinc.howMany = inc.nodesToHandle;\r\n\t\tdelete inc.nodesToHandle;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an object with a single insert change description.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/model/element~Element} parent The element in which the change happened.\r\n\t * @param {Number} offset The offset at which change happened.\r\n\t * @param {String} name The name of the removed element or `'$text'` for a character.\r\n\t * @returns {Object} The diff item.\r\n\t */\r\n\t_getInsertDiff( parent, offset, name ) {\r\n\t\treturn {\r\n\t\t\ttype: 'insert',\r\n\t\t\tposition: Position._createAt( parent, offset ),\r\n\t\t\tname,\r\n\t\t\tlength: 1,\r\n\t\t\tchangeCount: this._changeCount++\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an object with a single remove change description.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/model/element~Element} parent The element in which change happened.\r\n\t * @param {Number} offset The offset at which change happened.\r\n\t * @param {String} name The name of the removed element or `'$text'` for a character.\r\n\t * @returns {Object} The diff item.\r\n\t */\r\n\t_getRemoveDiff( parent, offset, name ) {\r\n\t\treturn {\r\n\t\t\ttype: 'remove',\r\n\t\t\tposition: Position._createAt( parent, offset ),\r\n\t\t\tname,\r\n\t\t\tlength: 1,\r\n\t\t\tchangeCount: this._changeCount++\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of objects where each one is a single attribute change description.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/model/range~Range} range The range where the change happened.\r\n\t * @param {Map} oldAttributes A map, map iterator or compatible object that contains attributes before the change.\r\n\t * @param {Map} newAttributes A map, map iterator or compatible object that contains attributes after the change.\r\n\t * @returns {Array.<Object>} An array containing one or more diff items.\r\n\t */\r\n\t_getAttributesDiff( range, oldAttributes, newAttributes ) {\r\n\t\t// Results holder.\r\n\t\tconst diffs = [];\r\n\r\n\t\t// Clone new attributes as we will be performing changes on this object.\r\n\t\tnewAttributes = new Map( newAttributes );\r\n\r\n\t\t// Look through old attributes.\r\n\t\tfor ( const [ key, oldValue ] of oldAttributes ) {\r\n\t\t\t// Check what is the new value of the attribute (or if it was removed).\r\n\t\t\tconst newValue = newAttributes.has( key ) ? newAttributes.get( key ) : null;\r\n\r\n\t\t\t// If values are different (or attribute was removed)...\r\n\t\t\tif ( newValue !== oldValue ) {\r\n\t\t\t\t// Add diff item.\r\n\t\t\t\tdiffs.push( {\r\n\t\t\t\t\ttype: 'attribute',\r\n\t\t\t\t\tposition: range.start,\r\n\t\t\t\t\trange: range.clone(),\r\n\t\t\t\t\tlength: 1,\r\n\t\t\t\t\tattributeKey: key,\r\n\t\t\t\t\tattributeOldValue: oldValue,\r\n\t\t\t\t\tattributeNewValue: newValue,\r\n\t\t\t\t\tchangeCount: this._changeCount++\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\t// Prevent returning two diff items for the same change.\r\n\t\t\tnewAttributes.delete( key );\r\n\t\t}\r\n\r\n\t\t// Look through new attributes that weren't handled above.\r\n\t\tfor ( const [ key, newValue ] of newAttributes ) {\r\n\t\t\t// Each of them is a new attribute. Add diff item.\r\n\t\t\tdiffs.push( {\r\n\t\t\t\ttype: 'attribute',\r\n\t\t\t\tposition: range.start,\r\n\t\t\t\trange: range.clone(),\r\n\t\t\t\tlength: 1,\r\n\t\t\t\tattributeKey: key,\r\n\t\t\t\tattributeOldValue: null,\r\n\t\t\t\tattributeNewValue: newValue,\r\n\t\t\t\tchangeCount: this._changeCount++\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\treturn diffs;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether given element or any of its parents is an element that is buffered as an inserted element.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/model/element~Element} element Element to check.\r\n\t * @returns {Boolean}\r\n\t */\r\n\t_isInInsertedElement( element ) {\r\n\t\tconst parent = element.parent;\r\n\r\n\t\tif ( !parent ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst changes = this._changesInElement.get( parent );\r\n\t\tconst offset = element.startOffset;\r\n\r\n\t\tif ( changes ) {\r\n\t\t\tfor ( const change of changes ) {\r\n\t\t\t\tif ( change.type == 'insert' && offset >= change.offset && offset < change.offset + change.howMany ) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this._isInInsertedElement( parent );\r\n\t}\r\n\r\n\t/**\r\n\t * Removes deeply all buffered changes that are registered in elements from range specified by `parent`, `offset`\r\n\t * and `howMany`.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/model/element~Element} parent\r\n\t * @param {Number} offset\r\n\t * @param {Number} howMany\r\n\t */\r\n\t_removeAllNestedChanges( parent, offset, howMany ) {\r\n\t\tconst range = new Range( Position._createAt( parent, offset ), Position._createAt( parent, offset + howMany ) );\r\n\r\n\t\tfor ( const item of range.getItems( { shallow: true } ) ) {\r\n\t\t\tif ( item.is( 'element' ) ) {\r\n\t\t\t\tthis._elementSnapshots.delete( item );\r\n\t\t\t\tthis._changesInElement.delete( item );\r\n\r\n\t\t\t\tthis._removeAllNestedChanges( item, 0, item.maxOffset );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Returns an array that is a copy of passed child list with the exception that text nodes are split to one or more\r\n// objects, each representing one character and attributes set on that character.\r\nfunction _getChildrenSnapshot( children ) {\r\n\tconst snapshot = [];\r\n\r\n\tfor ( const child of children ) {\r\n\t\tif ( child.is( 'text' ) ) {\r\n\t\t\tfor ( let i = 0; i < child.data.length; i++ ) {\r\n\t\t\t\tsnapshot.push( {\r\n\t\t\t\t\tname: '$text',\r\n\t\t\t\t\tattributes: new Map( child.getAttributes() )\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsnapshot.push( {\r\n\t\t\t\tname: child.name,\r\n\t\t\t\tattributes: new Map( child.getAttributes() )\r\n\t\t\t} );\r\n\t\t}\r\n\t}\r\n\r\n\treturn snapshot;\r\n}\r\n\r\n// Generates array of actions for given changes set.\r\n// It simulates what `diff` function does.\r\n// Generated actions are:\r\n// - 'e' for 'equal' - when item at that position did not change,\r\n// - 'i' for 'insert' - when item at that position was inserted,\r\n// - 'r' for 'remove' - when item at that position was removed,\r\n// - 'a' for 'attribute' - when item at that position has it attributes changed.\r\n//\r\n// Example (assume that uppercase letters have bold attribute, compare with function code):\r\n//\r\n// children before:\tfooBAR\r\n// children after:\tfoxybAR\r\n//\r\n// changes: type: remove, offset: 1, howMany: 1\r\n//\t\t\ttype: insert, offset: 2, howMany: 2\r\n//\t\t\ttype: attribute, offset: 4, howMany: 1\r\n//\r\n// expected actions: equal (f), remove (o), equal (o), insert (x), insert (y), attribute (b), equal (A), equal (R)\r\n//\r\n// steps taken by th script:\r\n//\r\n// 1. change = \"type: remove, offset: 1, howMany: 1\"; offset = 0; oldChildrenHandled = 0\r\n//    1.1 between this change and the beginning is one not-changed node, fill with one equal action, one old child has been handled\r\n//    1.2 this change removes one node, add one remove action\r\n//    1.3 change last visited `offset` to 1\r\n//    1.4 since an old child has been removed, one more old child has been handled\r\n//    1.5 actions at this point are: equal, remove\r\n//\r\n// 2. change = \"type: insert, offset: 2, howMany: 2\"; offset = 1; oldChildrenHandled = 2\r\n//    2.1 between this change and previous change is one not-changed node, add equal action, another one old children has been handled\r\n//    2.2 this change inserts two nodes, add two insert actions\r\n//    2.3 change last visited offset to the end of the inserted range, that is 4\r\n//    2.4 actions at this point are: equal, remove, equal, insert, insert\r\n//\r\n// 3. change = \"type: attribute, offset: 4, howMany: 1\"; offset = 4, oldChildrenHandled = 3\r\n//    3.1 between this change and previous change are no not-changed nodes\r\n//    3.2 this change changes one node, add one attribute action\r\n//    3.3 change last visited `offset` to the end of change range, that is 5\r\n//    3.4 since an old child has been changed, one more old child has been handled\r\n//    3.5 actions at this point are: equal, remove, equal, insert, insert, attribute\r\n//\r\n// 4. after loop oldChildrenHandled = 4, oldChildrenLength = 6 (fooBAR is 6 characters)\r\n//    4.1 fill up with two equal actions\r\n//\r\n// The result actions are: equal, remove, equal, insert, insert, attribute, equal, equal.\r\nfunction _generateActionsFromChanges( oldChildrenLength, changes ) {\r\n\tconst actions = [];\r\n\r\n\tlet offset = 0;\r\n\tlet oldChildrenHandled = 0;\r\n\r\n\t// Go through all buffered changes.\r\n\tfor ( const change of changes ) {\r\n\t\t// First, fill \"holes\" between changes with \"equal\" actions.\r\n\t\tif ( change.offset > offset ) {\r\n\t\t\tfor ( let i = 0; i < change.offset - offset; i++ ) {\r\n\t\t\t\tactions.push( 'e' );\r\n\t\t\t}\r\n\r\n\t\t\toldChildrenHandled += change.offset - offset;\r\n\t\t}\r\n\r\n\t\t// Then, fill up actions accordingly to change type.\r\n\t\tif ( change.type == 'insert' ) {\r\n\t\t\tfor ( let i = 0; i < change.howMany; i++ ) {\r\n\t\t\t\tactions.push( 'i' );\r\n\t\t\t}\r\n\r\n\t\t\t// The last handled offset is after inserted range.\r\n\t\t\toffset = change.offset + change.howMany;\r\n\t\t} else if ( change.type == 'remove' ) {\r\n\t\t\tfor ( let i = 0; i < change.howMany; i++ ) {\r\n\t\t\t\tactions.push( 'r' );\r\n\t\t\t}\r\n\r\n\t\t\t// The last handled offset is at the position where the nodes were removed.\r\n\t\t\toffset = change.offset;\r\n\t\t\t// We removed `howMany` old nodes, update `oldChildrenHandled`.\r\n\t\t\toldChildrenHandled += change.howMany;\r\n\t\t} else {\r\n\t\t\tactions.push( ...'a'.repeat( change.howMany ).split( '' ) );\r\n\r\n\t\t\t// The last handled offset is at the position after the changed range.\r\n\t\t\toffset = change.offset + change.howMany;\r\n\t\t\t// We changed `howMany` old nodes, update `oldChildrenHandled`.\r\n\t\t\toldChildrenHandled += change.howMany;\r\n\t\t}\r\n\t}\r\n\r\n\t// Fill \"equal\" actions at the end of actions set. Use `oldChildrenHandled` to see how many children\r\n\t// has not been changed / removed at the end of their parent.\r\n\tif ( oldChildrenHandled < oldChildrenLength ) {\r\n\t\tfor ( let i = 0; i < oldChildrenLength - oldChildrenHandled - offset; i++ ) {\r\n\t\t\tactions.push( 'e' );\r\n\t\t}\r\n\t}\r\n\r\n\treturn actions;\r\n}\r\n\r\n// Filter callback for Array.filter that filters out change entries that are in graveyard.\r\nfunction _changesInGraveyardFilter( entry ) {\r\n\tconst posInGy = entry.position && entry.position.root.rootName == '$graveyard';\r\n\tconst rangeInGy = entry.range && entry.range.root.rootName == '$graveyard';\r\n\r\n\treturn !posInGy && !rangeInGy;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/document\r\n */\r\n\r\nimport Differ from './differ';\r\nimport RootElement from './rootelement';\r\nimport History from './history';\r\nimport DocumentSelection from './documentselection';\r\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\r\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\r\nimport { isInsideSurrogatePair, isInsideCombinedSymbol } from '@ckeditor/ckeditor5-utils/src/unicode';\r\nimport { clone } from 'lodash-es';\r\n\r\n// @if CK_DEBUG_ENGINE // const { logDocument } = require( '../dev-utils/utils' );\r\n\r\nconst graveyardName = '$graveyard';\r\n\r\n/**\r\n * Data model's document. It contains the model's structure, its selection and the history of changes.\r\n *\r\n * Read more about working with the model in\r\n * {@glink framework/guides/architecture/editing-engine#model introduction to the the editing engine's architecture}.\r\n *\r\n * Usually, the document contains just one {@link module:engine/model/document~Document#roots root element}, so\r\n * you can retrieve it by just calling {@link module:engine/model/document~Document#getRoot} without specifying its name:\r\n *\r\n *\t\tmodel.document.getRoot(); // -> returns the main root\r\n *\r\n * However, the document may contain multiple roots – e.g. when the editor has multiple editable areas\r\n * (e.g. a title and a body of a message).\r\n *\r\n * @mixes module:utils/emittermixin~EmitterMixin\r\n */\r\nexport default class Document {\r\n\t/**\r\n\t * Creates an empty document instance with no {@link #roots} (other than\r\n\t * the {@link #graveyard graveyard root}).\r\n\t */\r\n\tconstructor( model ) {\r\n\t\t/**\r\n\t\t * The {@link module:engine/model/model~Model model} that the document is a part of.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @type {module:engine/model/model~Model}\r\n\t\t */\r\n\t\tthis.model = model;\r\n\r\n\t\t/**\r\n\t\t * The document version. It starts from `0` and every operation increases the version number. It is used to ensure that\r\n\t\t * operations are applied on a proper document version.\r\n\t\t *\r\n\t\t * If the {@link module:engine/model/operation/operation~Operation#baseVersion base version} does not match the document version,\r\n\t\t * a {@link module:utils/ckeditorerror~CKEditorError model-document-applyOperation-wrong-version} error is thrown.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t */\r\n\t\tthis.version = 0;\r\n\r\n\t\t/**\r\n\t\t * The document's history.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @type {module:engine/model/history~History}\r\n\t\t */\r\n\t\tthis.history = new History( this );\r\n\r\n\t\t/**\r\n\t\t * The selection in this document.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @type {module:engine/model/documentselection~DocumentSelection}\r\n\t\t */\r\n\t\tthis.selection = new DocumentSelection( this );\r\n\r\n\t\t/**\r\n\t\t * A list of roots that are owned and managed by this document. Use {@link #createRoot} and\r\n\t\t * {@link #getRoot} to manipulate it.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @type {module:utils/collection~Collection}\r\n\t\t */\r\n\t\tthis.roots = new Collection( { idProperty: 'rootName' } );\r\n\r\n\t\t/**\r\n\t\t * The model differ object. Its role is to buffer changes done on the model document and then calculate a diff of those changes.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @type {module:engine/model/differ~Differ}\r\n\t\t */\r\n\t\tthis.differ = new Differ( model.markers );\r\n\r\n\t\t/**\r\n\t\t * Post-fixer callbacks registered to the model document.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {Set.<Function>}\r\n\t\t */\r\n\t\tthis._postFixers = new Set();\r\n\r\n\t\t/**\r\n\t\t * A boolean indicates whether the selection has changed until\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {Boolean}\r\n\t\t */\r\n\t\tthis._hasSelectionChangedFromTheLastChangeBlock = false;\r\n\r\n\t\t// Graveyard tree root. Document always have a graveyard root, which stores removed nodes.\r\n\t\tthis.createRoot( '$root', graveyardName );\r\n\r\n\t\t// First, if the operation is a document operation check if it's base version is correct.\r\n\t\tthis.listenTo( model, 'applyOperation', ( evt, args ) => {\r\n\t\t\tconst operation = args[ 0 ];\r\n\r\n\t\t\tif ( operation.isDocumentOperation && operation.baseVersion !== this.version ) {\r\n\t\t\t\t/**\r\n\t\t\t\t * Only operations with matching versions can be applied.\r\n\t\t\t\t *\r\n\t\t\t\t * @error document-applyOperation-wrong-version\r\n\t\t\t\t * @param {module:engine/model/operation/operation~Operation} operation\r\n\t\t\t\t */\r\n\t\t\t\tthrow new CKEditorError(\r\n\t\t\t\t\t'model-document-applyOperation-wrong-version: Only operations with matching versions can be applied.',\r\n\t\t\t\t\tthis,\r\n\t\t\t\t\t{ operation }\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}, { priority: 'highest' } );\r\n\r\n\t\t// Then, still before an operation is applied on model, buffer the change in differ.\r\n\t\tthis.listenTo( model, 'applyOperation', ( evt, args ) => {\r\n\t\t\tconst operation = args[ 0 ];\r\n\r\n\t\t\tif ( operation.isDocumentOperation ) {\r\n\t\t\t\tthis.differ.bufferOperation( operation );\r\n\t\t\t}\r\n\t\t}, { priority: 'high' } );\r\n\r\n\t\t// After the operation is applied, bump document's version and add the operation to the history.\r\n\t\tthis.listenTo( model, 'applyOperation', ( evt, args ) => {\r\n\t\t\tconst operation = args[ 0 ];\r\n\r\n\t\t\tif ( operation.isDocumentOperation ) {\r\n\t\t\t\tthis.version++;\r\n\t\t\t\tthis.history.addOperation( operation );\r\n\t\t\t}\r\n\t\t}, { priority: 'low' } );\r\n\r\n\t\t// Listen to selection changes. If selection changed, mark it.\r\n\t\tthis.listenTo( this.selection, 'change', () => {\r\n\t\t\tthis._hasSelectionChangedFromTheLastChangeBlock = true;\r\n\t\t} );\r\n\r\n\t\t// Buffer marker changes.\r\n\t\t// This is not covered in buffering operations because markers may change outside of them (when they\r\n\t\t// are modified using `model.markers` collection, not through `MarkerOperation`).\r\n\t\tthis.listenTo( model.markers, 'update', ( evt, marker, oldRange, newRange ) => {\r\n\t\t\t// Whenever marker is updated, buffer that change.\r\n\t\t\tthis.differ.bufferMarkerChange( marker.name, oldRange, newRange, marker.affectsData );\r\n\r\n\t\t\tif ( oldRange === null ) {\r\n\t\t\t\t// If this is a new marker, add a listener that will buffer change whenever marker changes.\r\n\t\t\t\tmarker.on( 'change', ( evt, oldRange ) => {\r\n\t\t\t\t\tthis.differ.bufferMarkerChange( marker.name, oldRange, marker.getRange(), marker.affectsData );\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * The graveyard tree root. A document always has a graveyard root that stores removed nodes.\r\n\t *\r\n\t * @readonly\r\n\t * @member {module:engine/model/rootelement~RootElement}\r\n\t */\r\n\tget graveyard() {\r\n\t\treturn this.getRoot( graveyardName );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new root.\r\n\t *\r\n\t * @param {String} [elementName='$root'] The element name. Defaults to `'$root'` which also has some basic schema defined\r\n\t * (`$block`s are allowed inside the `$root`). Make sure to define a proper schema if you use a different name.\r\n\t * @param {String} [rootName='main'] A unique root name.\r\n\t * @returns {module:engine/model/rootelement~RootElement} The created root.\r\n\t */\r\n\tcreateRoot( elementName = '$root', rootName = 'main' ) {\r\n\t\tif ( this.roots.get( rootName ) ) {\r\n\t\t\t/**\r\n\t\t\t * A root with the specified name already exists.\r\n\t\t\t *\r\n\t\t\t * @error model-document-createRoot-name-exists\r\n\t\t\t * @param {module:engine/model/document~Document} doc\r\n\t\t\t * @param {String} name\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'model-document-createRoot-name-exists: Root with specified name already exists.',\r\n\t\t\t\tthis,\r\n\t\t\t\t{ name: rootName }\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tconst root = new RootElement( this, elementName, rootName );\r\n\t\tthis.roots.add( root );\r\n\r\n\t\treturn root;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all event listeners set by the document instance.\r\n\t */\r\n\tdestroy() {\r\n\t\tthis.selection.destroy();\r\n\t\tthis.stopListening();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a root by its name.\r\n\t *\r\n\t * @param {String} [name='main'] A unique root name.\r\n\t * @returns {module:engine/model/rootelement~RootElement|null} The root registered under a given name or `null` when\r\n\t * there is no root with the given name.\r\n\t */\r\n\tgetRoot( name = 'main' ) {\r\n\t\treturn this.roots.get( name );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array with names of all roots (without the {@link #graveyard}) added to the document.\r\n\t *\r\n\t * @returns {Array.<String>} Roots names.\r\n\t */\r\n\tgetRootNames() {\r\n\t\treturn Array.from( this.roots, root => root.rootName ).filter( name => name != graveyardName );\r\n\t}\r\n\r\n\t/**\r\n\t * Used to register a post-fixer callback. A post-fixer mechanism guarantees that the features\r\n\t * will operate on a correct model state.\r\n\t *\r\n\t * An execution of a feature may lead to an incorrect document tree state. The callbacks are used to fix the document tree after\r\n\t * it has changed. Post-fixers are fired just after all changes from the outermost change block were applied but\r\n\t * before the {@link module:engine/model/document~Document#event:change change event} is fired. If a post-fixer callback made\r\n\t * a change, it should return `true`. When this happens, all post-fixers are fired again to check if something else should\r\n\t * not be fixed in the new document tree state.\r\n\t *\r\n\t * As a parameter, a post-fixer callback receives a {@link module:engine/model/writer~Writer writer} instance connected with the\r\n\t * executed changes block. Thanks to that, all changes done by the callback will be added to the same\r\n\t * {@link module:engine/model/batch~Batch batch} (and undo step) as the original changes. This makes post-fixer changes transparent\r\n\t * for the user.\r\n\t *\r\n\t * An example of a post-fixer is a callback that checks if all the data were removed from the editor. If so, the\r\n\t * callback should add an empty paragraph so that the editor is never empty:\r\n\t *\r\n\t *\t\tdocument.registerPostFixer( writer => {\r\n\t *\t\t\tconst changes = document.differ.getChanges();\r\n\t *\r\n\t *\t\t\t// Check if the changes lead to an empty root in the editor.\r\n\t *\t\t\tfor ( const entry of changes ) {\r\n\t *\t\t\t\tif ( entry.type == 'remove' && entry.position.root.isEmpty ) {\r\n\t *\t\t\t\t\twriter.insertElement( 'paragraph', entry.position.root, 0 );\r\n\t *\r\n\t *\t\t\t\t\t// It is fine to return early, even if multiple roots would need to be fixed.\r\n\t *\t\t\t\t\t// All post-fixers will be fired again, so if there are more empty roots, those will be fixed, too.\r\n\t *\t\t\t\t\treturn true;\r\n\t *\t\t\t\t}\r\n\t *\t\t\t}\r\n\t *\t\t} );\r\n\t *\r\n\t * @param {Function} postFixer\r\n\t */\r\n\tregisterPostFixer( postFixer ) {\r\n\t\tthis._postFixers.add( postFixer );\r\n\t}\r\n\r\n\t/**\r\n\t * A custom `toJSON()` method to solve child-parent circular dependencies.\r\n\t *\r\n\t * @returns {Object} A clone of this object with the document property changed to a string.\r\n\t */\r\n\ttoJSON() {\r\n\t\tconst json = clone( this );\r\n\r\n\t\t// Due to circular references we need to remove parent reference.\r\n\t\tjson.selection = '[engine.model.DocumentSelection]';\r\n\t\tjson.model = '[engine.model.Model]';\r\n\r\n\t\treturn json;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if there were any changes done on document, and if so, call post-fixers,\r\n\t * fire `change` event for features and conversion and then reset the differ.\r\n\t * Fire `change:data` event when at least one operation or buffered marker changes the data.\r\n\t *\r\n\t * @protected\r\n\t * @fires change\r\n\t * @fires change:data\r\n\t * @param {module:engine/model/writer~Writer} writer The writer on which post-fixers will be called.\r\n\t */\r\n\t_handleChangeBlock( writer ) {\r\n\t\tif ( this._hasDocumentChangedFromTheLastChangeBlock() ) {\r\n\t\t\tthis._callPostFixers( writer );\r\n\r\n\t\t\t// Refresh selection attributes according to the final position in the model after the change.\r\n\t\t\tthis.selection.refresh();\r\n\r\n\t\t\tif ( this.differ.hasDataChanges() ) {\r\n\t\t\t\tthis.fire( 'change:data', writer.batch );\r\n\t\t\t} else {\r\n\t\t\t\tthis.fire( 'change', writer.batch );\r\n\t\t\t}\r\n\r\n\t\t\t// Theoretically, it is not necessary to refresh selection after change event because\r\n\t\t\t// post-fixers are the last who should change the model, but just in case...\r\n\t\t\tthis.selection.refresh();\r\n\r\n\t\t\tthis.differ.reset();\r\n\t\t}\r\n\r\n\t\tthis._hasSelectionChangedFromTheLastChangeBlock = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns whether there is a buffered change or if the selection has changed from the last\r\n\t * {@link module:engine/model/model~Model#enqueueChange `enqueueChange()` block}\r\n\t * or {@link module:engine/model/model~Model#change `change()` block}.\r\n\t *\r\n\t * @protected\r\n\t * @returns {Boolean} Returns `true` if document has changed from the last `change()` or `enqueueChange()` block.\r\n\t */\r\n\t_hasDocumentChangedFromTheLastChangeBlock() {\r\n\t\treturn !this.differ.isEmpty || this._hasSelectionChangedFromTheLastChangeBlock;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the default root for this document which is either the first root that was added to the document using\r\n\t * {@link #createRoot} or the {@link #graveyard graveyard root} if no other roots were created.\r\n\t *\r\n\t * @protected\r\n\t * @returns {module:engine/model/rootelement~RootElement} The default root for this document.\r\n\t */\r\n\t_getDefaultRoot() {\r\n\t\tfor ( const root of this.roots ) {\r\n\t\t\tif ( root !== this.graveyard ) {\r\n\t\t\t\treturn root;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this.graveyard;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the default range for this selection. The default range is a collapsed range that starts and ends\r\n\t * at the beginning of this selection's document {@link #_getDefaultRoot default root}.\r\n\t *\r\n\t * @protected\r\n\t * @returns {module:engine/model/range~Range}\r\n\t */\r\n\t_getDefaultRange() {\r\n\t\tconst defaultRoot = this._getDefaultRoot();\r\n\t\tconst model = this.model;\r\n\t\tconst schema = model.schema;\r\n\r\n\t\t// Find the first position where the selection can be put.\r\n\t\tconst position = model.createPositionFromPath( defaultRoot, [ 0 ] );\r\n\t\tconst nearestRange = schema.getNearestSelectionRange( position );\r\n\r\n\t\t// If valid selection range is not found - return range collapsed at the beginning of the root.\r\n\t\treturn nearestRange || model.createRange( position );\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether a given {@link module:engine/model/range~Range range} is a valid range for\r\n\t * the {@link #selection document's selection}.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/model/range~Range} range A range to check.\r\n\t * @returns {Boolean} `true` if `range` is valid, `false` otherwise.\r\n\t */\r\n\t_validateSelectionRange( range ) {\r\n\t\treturn validateTextNodePosition( range.start ) && validateTextNodePosition( range.end );\r\n\t}\r\n\r\n\t/**\r\n\t * Performs post-fixer loops. Executes post-fixer callbacks as long as none of them has done any changes to the model.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/model/writer~Writer} writer The writer on which post-fixer callbacks will be called.\r\n\t */\r\n\t_callPostFixers( writer ) {\r\n\t\tlet wasFixed = false;\r\n\r\n\t\tdo {\r\n\t\t\tfor ( const callback of this._postFixers ) {\r\n\t\t\t\t// Ensure selection attributes are up to date before each post-fixer.\r\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-engine/issues/1673.\r\n\t\t\t\t//\r\n\t\t\t\t// It might be good to refresh the selection after each operation but at the moment it leads\r\n\t\t\t\t// to losing attributes for composition or and spell checking\r\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-typing/issues/188\r\n\t\t\t\tthis.selection.refresh();\r\n\r\n\t\t\t\twasFixed = callback( writer );\r\n\r\n\t\t\t\tif ( wasFixed ) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} while ( wasFixed );\r\n\t}\r\n\r\n\t/**\r\n\t * Fired after each {@link module:engine/model/model~Model#enqueueChange `enqueueChange()` block} or the outermost\r\n\t * {@link module:engine/model/model~Model#change `change()` block} was executed and the document was changed\r\n\t * during that block's execution.\r\n\t *\r\n\t * The changes which this event will cover include:\r\n\t *\r\n\t * * document structure changes,\r\n\t * * selection changes,\r\n\t * * marker changes.\r\n\t *\r\n\t * If you want to be notified about all these changes, then simply listen to this event like this:\r\n\t *\r\n\t *\t\tmodel.document.on( 'change', () => {\r\n\t *\t\t\tconsole.log( 'The document has changed!' );\r\n\t *\t\t} );\r\n\t *\r\n\t * If, however, you only want to be notified about the data changes, then use the\r\n\t * {@link module:engine/model/document~Document#event:change:data change:data} event,\r\n\t * which is fired for document structure changes and marker changes (which affects the data).\r\n\t *\r\n\t *\t\tmodel.document.on( 'change:data', () => {\r\n\t *\t\t\tconsole.log( 'The data has changed!' );\r\n\t *\t\t} );\r\n\t *\r\n\t * @event change\r\n\t * @param {module:engine/model/batch~Batch} batch The batch that was used in the executed changes block.\r\n\t */\r\n\r\n\t/**\r\n\t * It is a narrower version of the {@link #event:change} event. It is fired for changes which\r\n\t * affect the editor data. This is:\r\n\t *\r\n\t * * document structure changes,\r\n\t * * marker changes (which affects the data).\r\n\t *\r\n\t * If you want to be notified about the data changes, then listen to this event:\r\n\t *\r\n\t *\t\tmodel.document.on( 'change:data', () => {\r\n\t *\t\t\tconsole.log( 'The data has changed!' );\r\n\t *\t\t} );\r\n\t *\r\n\t * If you would like to listen to all document changes, then check out the\r\n\t * {@link module:engine/model/document~Document#event:change change} event.\r\n\t *\r\n\t * @event change:data\r\n\t * @param {module:engine/model/batch~Batch} batch The batch that was used in the executed changes block.\r\n\t */\r\n\r\n\t// @if CK_DEBUG_ENGINE // log( version = null ) {\r\n\t// @if CK_DEBUG_ENGINE // \tversion = version === null ? this.version : version;\r\n\t// @if CK_DEBUG_ENGINE // \tlogDocument( this, version );\r\n\t// @if CK_DEBUG_ENGINE // }\r\n}\r\n\r\nmix( Document, EmitterMixin );\r\n\r\n// Checks whether given range boundary position is valid for document selection, meaning that is not between\r\n// unicode surrogate pairs or base character and combining marks.\r\nfunction validateTextNodePosition( rangeBoundary ) {\r\n\tconst textNode = rangeBoundary.textNode;\r\n\r\n\tif ( textNode ) {\r\n\t\tconst data = textNode.data;\r\n\t\tconst offset = rangeBoundary.offset - textNode.startOffset;\r\n\r\n\t\treturn !isInsideSurrogatePair( data, offset ) && !isInsideCombinedSymbol( data, offset );\r\n\t}\r\n\r\n\treturn true;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module module:engine/model/documentfragment\r\n */\r\n\r\nimport NodeList from './nodelist';\r\nimport Element from './element';\r\nimport Text from './text';\r\nimport TextProxy from './textproxy';\r\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\r\n\r\n// @if CK_DEBUG_ENGINE // const { stringifyMap } = require( '../dev-utils/utils' );\r\n\r\n/**\r\n * DocumentFragment represents a part of model which does not have a common root but it's top-level nodes\r\n * can be seen as siblings. In other words, it is a detached part of model tree, without a root.\r\n *\r\n * DocumentFragment has own {@link module:engine/model/markercollection~MarkerCollection}. Markers from this collection\r\n * will be set to the {@link module:engine/model/model~Model#markers model markers} by a\r\n * {@link module:engine/model/writer~Writer#insert} function.\r\n */\r\nexport default class DocumentFragment {\r\n\t/**\r\n\t * Creates an empty `DocumentFragment`.\r\n\t *\r\n\t * **Note:** Constructor of this class shouldn't be used directly in the code.\r\n\t * Use the {@link module:engine/model/writer~Writer#createDocumentFragment} method instead.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/model/node~Node|Iterable.<module:engine/model/node~Node>} [children]\r\n\t * Nodes to be contained inside the `DocumentFragment`.\r\n\t */\r\n\tconstructor( children ) {\r\n\t\t/**\r\n\t\t * DocumentFragment static markers map. This is a list of names and {@link module:engine/model/range~Range ranges}\r\n\t\t * which will be set as Markers to {@link module:engine/model/model~Model#markers model markers collection}\r\n\t\t * when DocumentFragment will be inserted to the document.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Map<String,module:engine/model/range~Range>} module:engine/model/documentfragment~DocumentFragment#markers\r\n\t\t */\r\n\t\tthis.markers = new Map();\r\n\r\n\t\t/**\r\n\t\t * List of nodes contained inside the document fragment.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {module:engine/model/nodelist~NodeList} module:engine/model/documentfragment~DocumentFragment#_children\r\n\t\t */\r\n\t\tthis._children = new NodeList();\r\n\r\n\t\tif ( children ) {\r\n\t\t\tthis._insertChild( 0, children );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an iterator that iterates over all nodes contained inside this document fragment.\r\n\t *\r\n\t * @returns {Iterable.<module:engine/model/node~Node>}\r\n\t */\r\n\t[ Symbol.iterator ]() {\r\n\t\treturn this.getChildren();\r\n\t}\r\n\r\n\t/**\r\n\t * Number of this document fragment's children.\r\n\t *\r\n\t * @readonly\r\n\t * @type {Number}\r\n\t */\r\n\tget childCount() {\r\n\t\treturn this._children.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Sum of {@link module:engine/model/node~Node#offsetSize offset sizes} of all of this document fragment's children.\r\n\t *\r\n\t * @readonly\r\n\t * @type {Number}\r\n\t */\r\n\tget maxOffset() {\r\n\t\treturn this._children.maxOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Is `true` if there are no nodes inside this document fragment, `false` otherwise.\r\n\t *\r\n\t * @readonly\r\n\t * @type {Boolean}\r\n\t */\r\n\tget isEmpty() {\r\n\t\treturn this.childCount === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Artificial root of `DocumentFragment`. Returns itself. Added for compatibility reasons.\r\n\t *\r\n\t * @readonly\r\n\t * @type {module:engine/model/documentfragment~DocumentFragment}\r\n\t */\r\n\tget root() {\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Artificial parent of `DocumentFragment`. Returns `null`. Added for compatibility reasons.\r\n\t *\r\n\t * @readonly\r\n\t * @type {null}\r\n\t */\r\n\tget parent() {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this object is of the given type.\r\n\t *\r\n\t *\t\tdocFrag.is( 'documentFragment' ); // -> true\r\n\t *\t\tdocFrag.is( 'model:documentFragment' ); // -> true\r\n\t *\r\n\t *\t\tdocFrag.is( 'view:documentFragment' ); // -> false\r\n\t *\t\tdocFrag.is( 'element' ); // -> false\r\n\t *\t\tdocFrag.is( 'node' ); // -> false\r\n\t *\r\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\r\n\t *\r\n\t * @param {String} type\r\n\t * @returns {Boolean}\r\n\t */\r\n\tis( type ) {\r\n\t\treturn type == 'documentFragment' || type == 'model:documentFragment';\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the child at the given index. Returns `null` if incorrect index was passed.\r\n\t *\r\n\t * @param {Number} index Index of child.\r\n\t * @returns {module:engine/model/node~Node|null} Child node.\r\n\t */\r\n\tgetChild( index ) {\r\n\t\treturn this._children.getNode( index );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an iterator that iterates over all of this document fragment's children.\r\n\t *\r\n\t * @returns {Iterable.<module:engine/model/node~Node>}\r\n\t */\r\n\tgetChildren() {\r\n\t\treturn this._children[ Symbol.iterator ]();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an index of the given child node. Returns `null` if given node is not a child of this document fragment.\r\n\t *\r\n\t * @param {module:engine/model/node~Node} node Child node to look for.\r\n\t * @returns {Number|null} Child node's index.\r\n\t */\r\n\tgetChildIndex( node ) {\r\n\t\treturn this._children.getNodeIndex( node );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the starting offset of given child. Starting offset is equal to the sum of\r\n\t * {@link module:engine/model/node~Node#offsetSize offset sizes} of all node's siblings that are before it. Returns `null` if\r\n\t * given node is not a child of this document fragment.\r\n\t *\r\n\t * @param {module:engine/model/node~Node} node Child node to look for.\r\n\t * @returns {Number|null} Child node's starting offset.\r\n\t */\r\n\tgetChildStartOffset( node ) {\r\n\t\treturn this._children.getNodeStartOffset( node );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns path to a `DocumentFragment`, which is an empty array. Added for compatibility reasons.\r\n\t *\r\n\t * @returns {Array}\r\n\t */\r\n\tgetPath() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a descendant node by its path relative to this element.\r\n\t *\r\n\t *\t\t// <this>a<b>c</b></this>\r\n\t *\t\tthis.getNodeByPath( [ 0 ] );     // -> \"a\"\r\n\t *\t\tthis.getNodeByPath( [ 1 ] );     // -> <b>\r\n\t *\t\tthis.getNodeByPath( [ 1, 0 ] );  // -> \"c\"\r\n\t *\r\n\t * @param {Array.<Number>} relativePath Path of the node to find, relative to this element.\r\n\t * @returns {module:engine/model/node~Node|module:engine/model/documentfragment~DocumentFragment}\r\n\t */\r\n\tgetNodeByPath( relativePath ) {\r\n\t\tlet node = this; // eslint-disable-line consistent-this\r\n\r\n\t\tfor ( const index of relativePath ) {\r\n\t\t\tnode = node.getChild( node.offsetToIndex( index ) );\r\n\t\t}\r\n\r\n\t\treturn node;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts offset \"position\" to index \"position\".\r\n\t *\r\n\t * Returns index of a node that occupies given offset. If given offset is too low, returns `0`. If given offset is\r\n\t * too high, returns index after last child}.\r\n\t *\r\n\t *\t\tconst textNode = new Text( 'foo' );\r\n\t *\t\tconst pElement = new Element( 'p' );\r\n\t *\t\tconst docFrag = new DocumentFragment( [ textNode, pElement ] );\r\n\t *\t\tdocFrag.offsetToIndex( -1 ); // Returns 0, because offset is too low.\r\n\t *\t\tdocFrag.offsetToIndex( 0 ); // Returns 0, because offset 0 is taken by `textNode` which is at index 0.\r\n\t *\t\tdocFrag.offsetToIndex( 1 ); // Returns 0, because `textNode` has `offsetSize` equal to 3, so it occupies offset 1 too.\r\n\t *\t\tdocFrag.offsetToIndex( 2 ); // Returns 0.\r\n\t *\t\tdocFrag.offsetToIndex( 3 ); // Returns 1.\r\n\t *\t\tdocFrag.offsetToIndex( 4 ); // Returns 2. There are no nodes at offset 4, so last available index is returned.\r\n\t *\r\n\t * @param {Number} offset Offset to look for.\r\n\t * @returns {Number} Index of a node that occupies given offset.\r\n\t */\r\n\toffsetToIndex( offset ) {\r\n\t\treturn this._children.offsetToIndex( offset );\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `DocumentFragment` instance to plain object and returns it.\r\n\t * Takes care of converting all of this document fragment's children.\r\n\t *\r\n\t * @returns {Object} `DocumentFragment` instance converted to plain object.\r\n\t */\r\n\ttoJSON() {\r\n\t\tconst json = [];\r\n\r\n\t\tfor ( const node of this._children ) {\r\n\t\t\tjson.push( node.toJSON() );\r\n\t\t}\r\n\r\n\t\treturn json;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a `DocumentFragment` instance from given plain object (i.e. parsed JSON string).\r\n\t * Converts `DocumentFragment` children to proper nodes.\r\n\t *\r\n\t * @param {Object} json Plain object to be converted to `DocumentFragment`.\r\n\t * @returns {module:engine/model/documentfragment~DocumentFragment} `DocumentFragment` instance created using given plain object.\r\n\t */\r\n\tstatic fromJSON( json ) {\r\n\t\tconst children = [];\r\n\r\n\t\tfor ( const child of json ) {\r\n\t\t\tif ( child.name ) {\r\n\t\t\t\t// If child has name property, it is an Element.\r\n\t\t\t\tchildren.push( Element.fromJSON( child ) );\r\n\t\t\t} else {\r\n\t\t\t\t// Otherwise, it is a Text node.\r\n\t\t\t\tchildren.push( Text.fromJSON( child ) );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn new DocumentFragment( children );\r\n\t}\r\n\r\n\t/**\r\n\t * {@link #_insertChild Inserts} one or more nodes at the end of this document fragment.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/model/item~Item|Iterable.<module:engine/model/item~Item>} items Items to be inserted.\r\n\t */\r\n\t_appendChild( items ) {\r\n\t\tthis._insertChild( this.childCount, items );\r\n\t}\r\n\r\n\t/**\r\n\t * Inserts one or more nodes at the given index and sets {@link module:engine/model/node~Node#parent parent} of these nodes\r\n\t * to this document fragment.\r\n\t *\r\n\t * @protected\r\n\t * @param {Number} index Index at which nodes should be inserted.\r\n\t * @param {module:engine/model/item~Item|Iterable.<module:engine/model/item~Item>} items Items to be inserted.\r\n\t */\r\n\t_insertChild( index, items ) {\r\n\t\tconst nodes = normalize( items );\r\n\r\n\t\tfor ( const node of nodes ) {\r\n\t\t\t// If node that is being added to this element is already inside another element, first remove it from the old parent.\r\n\t\t\tif ( node.parent !== null ) {\r\n\t\t\t\tnode._remove();\r\n\t\t\t}\r\n\r\n\t\t\tnode.parent = this;\r\n\t\t}\r\n\r\n\t\tthis._children._insertNodes( index, nodes );\r\n\t}\r\n\r\n\t/**\r\n\t * Removes one or more nodes starting at the given index\r\n\t * and sets {@link module:engine/model/node~Node#parent parent} of these nodes to `null`.\r\n\t *\r\n\t * @protected\r\n\t * @param {Number} index Index of the first node to remove.\r\n\t * @param {Number} [howMany=1] Number of nodes to remove.\r\n\t * @returns {Array.<module:engine/model/node~Node>} Array containing removed nodes.\r\n\t */\r\n\t_removeChildren( index, howMany = 1 ) {\r\n\t\tconst nodes = this._children._removeNodes( index, howMany );\r\n\r\n\t\tfor ( const node of nodes ) {\r\n\t\t\tnode.parent = null;\r\n\t\t}\r\n\r\n\t\treturn nodes;\r\n\t}\r\n\r\n\t// @if CK_DEBUG_ENGINE // toString() {\r\n\t// @if CK_DEBUG_ENGINE // \treturn 'documentFragment';\r\n\t// @if CK_DEBUG_ENGINE // }\r\n\r\n\t// @if CK_DEBUG_ENGINE // log() {\r\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ModelDocumentFragment: ' + this );\r\n\t// @if CK_DEBUG_ENGINE // }\r\n\r\n\t// @if CK_DEBUG_ENGINE // printTree() {\r\n\t// @if CK_DEBUG_ENGINE //\tlet string = 'ModelDocumentFragment: [';\r\n\r\n\t// @if CK_DEBUG_ENGINE //\tfor ( const child of this.getChildren() ) {\r\n\t// @if CK_DEBUG_ENGINE //\t\tstring += '\\n';\r\n\r\n\t// @if CK_DEBUG_ENGINE //\t\tif ( child.is( 'text' ) ) {\r\n\t// @if CK_DEBUG_ENGINE //\t\t\tconst textAttrs = stringifyMap( child._attrs );\r\n\r\n\t// @if CK_DEBUG_ENGINE //\t\t\tstring += '\\t'.repeat( 1 );\r\n\r\n\t// @if CK_DEBUG_ENGINE //\t\t\tif ( textAttrs !== '' ) {\r\n\t// @if CK_DEBUG_ENGINE //\t\t\t\tstring += `<$text${ textAttrs }>` + child.data + '</$text>';\r\n\t// @if CK_DEBUG_ENGINE //\t\t\t} else {\r\n\t// @if CK_DEBUG_ENGINE //\t\t\t\tstring += child.data;\r\n\t// @if CK_DEBUG_ENGINE //\t\t\t}\r\n\t// @if CK_DEBUG_ENGINE //\t\t} else {\r\n\t// @if CK_DEBUG_ENGINE //\t\t\tstring += child.printTree( 1 );\r\n\t// @if CK_DEBUG_ENGINE //\t\t}\r\n\t// @if CK_DEBUG_ENGINE //\t}\r\n\r\n\t// @if CK_DEBUG_ENGINE //\tstring += '\\n]';\r\n\r\n\t// @if CK_DEBUG_ENGINE //\treturn string;\r\n\t// @if CK_DEBUG_ENGINE // }\r\n\r\n\t// @if CK_DEBUG_ENGINE // logTree() {\r\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( this.printTree() );\r\n\t// @if CK_DEBUG_ENGINE // }\r\n}\r\n\r\n// Converts strings to Text and non-iterables to arrays.\r\n//\r\n// @param {String|module:engine/model/item~Item|Iterable.<module:engine/model/item~Item>}\r\n// @returns {Iterable.<module:engine/model/node~Node>}\r\nfunction normalize( nodes ) {\r\n\t// Separate condition because string is iterable.\r\n\tif ( typeof nodes == 'string' ) {\r\n\t\treturn [ new Text( nodes ) ];\r\n\t}\r\n\r\n\tif ( !isIterable( nodes ) ) {\r\n\t\tnodes = [ nodes ];\r\n\t}\r\n\r\n\t// Array.from to enable .map() on non-arrays.\r\n\treturn Array.from( nodes )\r\n\t\t.map( node => {\r\n\t\t\tif ( typeof node == 'string' ) {\r\n\t\t\t\treturn new Text( node );\r\n\t\t\t}\r\n\r\n\t\t\tif ( node instanceof TextProxy ) {\r\n\t\t\t\treturn new Text( node.data, node.getAttributes() );\r\n\t\t\t}\r\n\r\n\t\t\treturn node;\r\n\t\t} );\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/documentselection\r\n */\r\n\r\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\r\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\r\n\r\nimport Selection from './selection';\r\nimport LiveRange from './liverange';\r\nimport Text from './text';\r\nimport TextProxy from './textproxy';\r\nimport toMap from '@ckeditor/ckeditor5-utils/src/tomap';\r\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\nimport uid from '@ckeditor/ckeditor5-utils/src/uid';\r\n\r\nconst storePrefix = 'selection:';\r\n\r\n/**\r\n * `DocumentSelection` is a special selection which is used as the\r\n * {@link module:engine/model/document~Document#selection document's selection}.\r\n * There can be only one instance of `DocumentSelection` per document.\r\n *\r\n * Document selection can only be changed by using the {@link module:engine/model/writer~Writer} instance\r\n * inside the {@link module:engine/model/model~Model#change `change()`} block, as it provides a secure way to modify model.\r\n *\r\n * `DocumentSelection` is automatically updated upon changes in the {@link module:engine/model/document~Document document}\r\n * to always contain valid ranges. Its attributes are inherited from the text unless set explicitly.\r\n *\r\n * Differences between {@link module:engine/model/selection~Selection} and `DocumentSelection` are:\r\n * * there is always a range in `DocumentSelection` - even if no ranges were added there is a \"default range\"\r\n * present in the selection,\r\n * * ranges added to this selection updates automatically when the document changes,\r\n * * attributes of `DocumentSelection` are updated automatically according to selection ranges.\r\n *\r\n * Since `DocumentSelection` uses {@link module:engine/model/liverange~LiveRange live ranges}\r\n * and is updated when {@link module:engine/model/document~Document document}\r\n * changes, it cannot be set on {@link module:engine/model/node~Node nodes}\r\n * that are inside {@link module:engine/model/documentfragment~DocumentFragment document fragment}.\r\n * If you need to represent a selection in document fragment,\r\n * use {@link module:engine/model/selection~Selection Selection class} instead.\r\n *\r\n * @mixes module:utils/emittermixin~EmitterMixin\r\n */\r\nexport default class DocumentSelection {\r\n\t/**\r\n\t * Creates an empty live selection for given {@link module:engine/model/document~Document}.\r\n\t *\r\n\t * @param {module:engine/model/document~Document} doc Document which owns this selection.\r\n\t */\r\n\tconstructor( doc ) {\r\n\t\t/**\r\n\t\t * Selection used internally by that class (`DocumentSelection` is a proxy to that selection).\r\n\t\t *\r\n\t\t * @protected\r\n\t\t */\r\n\t\tthis._selection = new LiveSelection( doc );\r\n\r\n\t\tthis._selection.delegate( 'change:range' ).to( this );\r\n\t\tthis._selection.delegate( 'change:attribute' ).to( this );\r\n\t\tthis._selection.delegate( 'change:marker' ).to( this );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns whether the selection is collapsed. Selection is collapsed when there is exactly one range which is\r\n\t * collapsed.\r\n\t *\r\n\t * @readonly\r\n\t * @type {Boolean}\r\n\t */\r\n\tget isCollapsed() {\r\n\t\treturn this._selection.isCollapsed;\r\n\t}\r\n\r\n\t/**\r\n\t * Selection anchor. Anchor may be described as a position where the most recent part of the selection starts.\r\n\t * Together with {@link #focus} they define the direction of selection, which is important\r\n\t * when expanding/shrinking selection. Anchor is always {@link module:engine/model/range~Range#start start} or\r\n\t * {@link module:engine/model/range~Range#end end} position of the most recently added range.\r\n\t *\r\n\t * Is set to `null` if there are no ranges in selection.\r\n\t *\r\n\t * @see #focus\r\n\t * @readonly\r\n\t * @type {module:engine/model/position~Position|null}\r\n\t */\r\n\tget anchor() {\r\n\t\treturn this._selection.anchor;\r\n\t}\r\n\r\n\t/**\r\n\t * Selection focus. Focus is a position where the selection ends.\r\n\t *\r\n\t * Is set to `null` if there are no ranges in selection.\r\n\t *\r\n\t * @see #anchor\r\n\t * @readonly\r\n\t * @type {module:engine/model/position~Position|null}\r\n\t */\r\n\tget focus() {\r\n\t\treturn this._selection.focus;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns number of ranges in selection.\r\n\t *\r\n\t * @readonly\r\n\t * @type {Number}\r\n\t */\r\n\tget rangeCount() {\r\n\t\treturn this._selection.rangeCount;\r\n\t}\r\n\r\n\t/**\r\n\t * Describes whether `Documentselection` has own range(s) set, or if it is defaulted to\r\n\t * {@link module:engine/model/document~Document#_getDefaultRange document's default range}.\r\n\t *\r\n\t * @readonly\r\n\t * @type {Boolean}\r\n\t */\r\n\tget hasOwnRange() {\r\n\t\treturn this._selection.hasOwnRange;\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether the {@link #focus}\r\n\t * precedes {@link #anchor}.\r\n\t *\r\n\t * @readonly\r\n\t * @type {Boolean}\r\n\t */\r\n\tget isBackward() {\r\n\t\treturn this._selection.isBackward;\r\n\t}\r\n\r\n\t/**\r\n\t * Describes whether the gravity is overridden (using {@link module:engine/model/writer~Writer#overrideSelectionGravity}) or not.\r\n\t *\r\n\t * Note that the gravity remains overridden as long as will not be restored the same number of times as it was overridden.\r\n\t *\r\n\t * @readonly\r\n\t * @returns {Boolean}\r\n\t */\r\n\tget isGravityOverridden() {\r\n\t\treturn this._selection.isGravityOverridden;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of selection markers.\r\n\t * Marker is a selection marker when selection range is inside the marker range.\r\n\t *\r\n\t * @readonly\r\n\t * @type {module:utils/collection~Collection.<module:engine/model/markercollection~Marker>}\r\n\t */\r\n\tget markers() {\r\n\t\treturn this._selection.markers;\r\n\t}\r\n\r\n\t/**\r\n\t * Used for the compatibility with the {@link module:engine/model/selection~Selection#isEqual} method.\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tget _ranges() {\r\n\t\treturn this._selection._ranges;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an iterable that iterates over copies of selection ranges.\r\n\t *\r\n\t * @returns {Iterable.<module:engine/model/range~Range>}\r\n\t */\r\n\tgetRanges() {\r\n\t\treturn this._selection.getRanges();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the first position in the selection.\r\n\t * First position is the position that {@link module:engine/model/position~Position#isBefore is before}\r\n\t * any other position in the selection.\r\n\t *\r\n\t * Returns `null` if there are no ranges in selection.\r\n\t *\r\n\t * @returns {module:engine/model/position~Position|null}\r\n\t */\r\n\tgetFirstPosition() {\r\n\t\treturn this._selection.getFirstPosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the last position in the selection.\r\n\t * Last position is the position that {@link module:engine/model/position~Position#isAfter is after}\r\n\t * any other position in the selection.\r\n\t *\r\n\t * Returns `null` if there are no ranges in selection.\r\n\t *\r\n\t * @returns {module:engine/model/position~Position|null}\r\n\t */\r\n\tgetLastPosition() {\r\n\t\treturn this._selection.getLastPosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a copy of the first range in the selection.\r\n\t * First range is the one which {@link module:engine/model/range~Range#start start} position\r\n\t * {@link module:engine/model/position~Position#isBefore is before} start position of all other ranges\r\n\t * (not to confuse with the first range added to the selection).\r\n\t *\r\n\t * Returns `null` if there are no ranges in selection.\r\n\t *\r\n\t * @returns {module:engine/model/range~Range|null}\r\n\t */\r\n\tgetFirstRange() {\r\n\t\treturn this._selection.getFirstRange();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a copy of the last range in the selection.\r\n\t * Last range is the one which {@link module:engine/model/range~Range#end end} position\r\n\t * {@link module:engine/model/position~Position#isAfter is after} end position of all other ranges (not to confuse with the range most\r\n\t * recently added to the selection).\r\n\t *\r\n\t * Returns `null` if there are no ranges in selection.\r\n\t *\r\n\t * @returns {module:engine/model/range~Range|null}\r\n\t */\r\n\tgetLastRange() {\r\n\t\treturn this._selection.getLastRange();\r\n\t}\r\n\r\n\t/**\r\n\t * Gets elements of type {@link module:engine/model/schema~Schema#isBlock \"block\"} touched by the selection.\r\n\t *\r\n\t * This method's result can be used for example to apply block styling to all blocks covered by this selection.\r\n\t *\r\n\t * **Note:** `getSelectedBlocks()` returns blocks that are nested in other non-block elements\r\n\t * but will not return blocks nested in other blocks.\r\n\t *\r\n\t * In this case the function will return exactly all 3 paragraphs (note: `<blockQuote>` is not a block itself):\r\n\t *\r\n\t *\t\t<paragraph>[a</paragraph>\r\n\t *\t\t<blockQuote>\r\n\t *\t\t\t<paragraph>b</paragraph>\r\n\t *\t\t</blockQuote>\r\n\t *\t\t<paragraph>c]d</paragraph>\r\n\t *\r\n\t * In this case the paragraph will also be returned, despite the collapsed selection:\r\n\t *\r\n\t *\t\t<paragraph>[]a</paragraph>\r\n\t *\r\n\t * In such a scenario, however, only blocks A, B & E will be returned as blocks C & D are nested in block B:\r\n\t *\r\n\t *\t\t[<blockA></blockA>\r\n\t *\t\t<blockB>\r\n\t *\t\t\t<blockC></blockC>\r\n\t *\t\t\t<blockD></blockD>\r\n\t *\t\t</blockB>\r\n\t *\t\t<blockE></blockE>]\r\n\t *\r\n\t * If the selection is inside a block all the inner blocks (A & B) are returned:\r\n\t *\r\n\t * \t\t<block>\r\n\t *\t\t\t<blockA>[a</blockA>\r\n\t * \t\t\t<blockB>b]</blockB>\r\n\t * \t\t</block>\r\n\t *\r\n\t * **Special case**: If a selection ends at the beginning of a block, that block is not returned as from user perspective\r\n\t * this block wasn't selected. See [#984](https://github.com/ckeditor/ckeditor5-engine/issues/984) for more details.\r\n\t *\r\n\t *\t\t<paragraph>[a</paragraph>\r\n\t *\t\t<paragraph>b</paragraph>\r\n\t *\t\t<paragraph>]c</paragraph> // this block will not be returned\r\n\t *\r\n\t * @returns {Iterable.<module:engine/model/element~Element>}\r\n\t */\r\n\tgetSelectedBlocks() {\r\n\t\treturn this._selection.getSelectedBlocks();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the selected element. {@link module:engine/model/element~Element Element} is considered as selected if there is only\r\n\t * one range in the selection, and that range contains exactly one element.\r\n\t * Returns `null` if there is no selected element.\r\n\t *\r\n\t * @returns {module:engine/model/element~Element|null}\r\n\t */\r\n\tgetSelectedElement() {\r\n\t\treturn this._selection.getSelectedElement();\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether the selection contains the entire content of the given element. This means that selection must start\r\n\t * at a position {@link module:engine/model/position~Position#isTouching touching} the element's start and ends at position\r\n\t * touching the element's end.\r\n\t *\r\n\t * By default, this method will check whether the entire content of the selection's current root is selected.\r\n\t * Useful to check if e.g. the user has just pressed <kbd>Ctrl</kbd> + <kbd>A</kbd>.\r\n\t *\r\n\t * @param {module:engine/model/element~Element} [element=this.anchor.root]\r\n\t * @returns {Boolean}\r\n\t */\r\n\tcontainsEntireContent( element ) {\r\n\t\treturn this._selection.containsEntireContent( element );\r\n\t}\r\n\r\n\t/**\r\n\t * Unbinds all events previously bound by document selection.\r\n\t */\r\n\tdestroy() {\r\n\t\tthis._selection.destroy();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns iterable that iterates over this selection's attribute keys.\r\n\t *\r\n\t * @returns {Iterable.<String>}\r\n\t */\r\n\tgetAttributeKeys() {\r\n\t\treturn this._selection.getAttributeKeys();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns iterable that iterates over this selection's attributes.\r\n\t *\r\n\t * Attributes are returned as arrays containing two items. First one is attribute key and second is attribute value.\r\n\t * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\r\n\t *\r\n\t * @returns {Iterable.<*>}\r\n\t */\r\n\tgetAttributes() {\r\n\t\treturn this._selection.getAttributes();\r\n\t}\r\n\r\n\t/**\r\n\t * Gets an attribute value for given key or `undefined` if that attribute is not set on the selection.\r\n\t *\r\n\t * @param {String} key Key of attribute to look for.\r\n\t * @returns {*} Attribute value or `undefined`.\r\n\t */\r\n\tgetAttribute( key ) {\r\n\t\treturn this._selection.getAttribute( key );\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the selection has an attribute for given key.\r\n\t *\r\n\t * @param {String} key Key of attribute to check.\r\n\t * @returns {Boolean} `true` if attribute with given key is set on selection, `false` otherwise.\r\n\t */\r\n\thasAttribute( key ) {\r\n\t\treturn this._selection.hasAttribute( key );\r\n\t}\r\n\r\n\t/**\r\n\t * Refreshes selection attributes and markers according to the current position in the model.\r\n\t */\r\n\trefresh() {\r\n\t\tthis._selection._updateMarkers();\r\n\t\tthis._selection._updateAttributes( false );\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this object is of the given type.\r\n\t *\r\n\t *\t\tselection.is( 'selection' ); // -> true\r\n\t *\t\tselection.is( 'documentSelection' ); // -> true\r\n\t *\t\tselection.is( 'model:selection' ); // -> true\r\n\t *\t\tselection.is( 'model:documentSelection' ); // -> true\r\n\t *\r\n\t *\t\tselection.is( 'view:selection' ); // -> false\r\n\t *\t\tselection.is( 'element' ); // -> false\r\n\t *\t\tselection.is( 'node' ); // -> false\r\n\t *\r\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\r\n\t *\r\n\t * @param {String} type\r\n\t * @returns {Boolean}\r\n\t */\r\n\tis( type ) {\r\n\t\treturn type == 'selection' ||\r\n\t\t\ttype == 'model:selection' ||\r\n\t\t\ttype == 'documentSelection' ||\r\n\t\t\ttype == 'model:documentSelection';\r\n\t}\r\n\r\n\t/**\r\n\t * Moves {@link module:engine/model/documentselection~DocumentSelection#focus} to the specified location.\r\n\t * Should be used only within the {@link module:engine/model/writer~Writer#setSelectionFocus} method.\r\n\t *\r\n\t * The location can be specified in the same form as\r\n\t * {@link module:engine/model/writer~Writer#createPositionAt writer.createPositionAt()} parameters.\r\n\t *\r\n\t * @see module:engine/model/writer~Writer#setSelectionFocus\r\n\t * @protected\r\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\r\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\r\n\t * first parameter is a {@link module:engine/model/item~Item model item}.\r\n\t */\r\n\t_setFocus( itemOrPosition, offset ) {\r\n\t\tthis._selection.setFocus( itemOrPosition, offset );\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this selection's ranges and direction to the specified location based on the given\r\n\t * {@link module:engine/model/selection~Selectable selectable}.\r\n\t * Should be used only within the {@link module:engine/model/writer~Writer#setSelection} method.\r\n\t *\r\n\t * @see module:engine/model/writer~Writer#setSelection\r\n\t * @protected\r\n\t * @param {module:engine/model/selection~Selectable} selectable\r\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\r\n\t * @param {Object} [options]\r\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\r\n\t */\r\n\t_setTo( selectable, placeOrOffset, options ) {\r\n\t\tthis._selection.setTo( selectable, placeOrOffset, options );\r\n\t}\r\n\r\n\t/**\r\n\t * Sets attribute on the selection. If attribute with the same key already is set, it's value is overwritten.\r\n\t * Should be used only within the {@link module:engine/model/writer~Writer#setSelectionAttribute} method.\r\n\t *\r\n\t * @see module:engine/model/writer~Writer#setSelectionAttribute\r\n\t * @protected\r\n\t * @param {String} key Key of the attribute to set.\r\n\t * @param {*} value Attribute value.\r\n\t */\r\n\t_setAttribute( key, value ) {\r\n\t\tthis._selection.setAttribute( key, value );\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an attribute with given key from the selection.\r\n\t * If the given attribute was set on the selection, fires the {@link module:engine/model/selection~Selection#event:change:range}\r\n\t * event with removed attribute key.\r\n\t * Should be used only within the {@link module:engine/model/writer~Writer#removeSelectionAttribute} method.\r\n\t *\r\n\t * @see module:engine/model/writer~Writer#removeSelectionAttribute\r\n\t * @protected\r\n\t * @param {String} key Key of the attribute to remove.\r\n\t */\r\n\t_removeAttribute( key ) {\r\n\t\tthis._selection.removeAttribute( key );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an iterable that iterates through all selection attributes stored in current selection's parent.\r\n\t *\r\n\t * @protected\r\n\t * @returns {Iterable.<*>}\r\n\t */\r\n\t_getStoredAttributes() {\r\n\t\treturn this._selection._getStoredAttributes();\r\n\t}\r\n\r\n\t/**\r\n\t * Temporarily changes the gravity of the selection from the left to the right.\r\n\t *\r\n\t * The gravity defines from which direction the selection inherits its attributes. If it's the default left\r\n\t * gravity, the selection (after being moved by the the user) inherits attributes from its left hand side.\r\n\t * This method allows to temporarily override this behavior by forcing the gravity to the right.\r\n\t *\r\n\t * It returns an unique identifier which is required to restore the gravity. It guarantees the symmetry\r\n\t * of the process.\r\n\t *\r\n\t * @see module:engine/model/writer~Writer#overrideSelectionGravity\r\n\t * @protected\r\n\t * @returns {String} The unique id which allows restoring the gravity.\r\n\t */\r\n\t_overrideGravity() {\r\n\t\treturn this._selection.overrideGravity();\r\n\t}\r\n\r\n\t/**\r\n\t * Restores the {@link ~DocumentSelection#_overrideGravity overridden gravity}.\r\n\t *\r\n\t * Restoring the gravity is only possible using the unique identifier returned by\r\n\t * {@link ~DocumentSelection#_overrideGravity}. Note that the gravity remains overridden as long as won't be restored\r\n\t * the same number of times it was overridden.\r\n\t *\r\n\t * @see module:engine/model/writer~Writer#restoreSelectionGravity\r\n\t * @protected\r\n\t * @param {String} uid The unique id returned by {@link #_overrideGravity}.\r\n\t */\r\n\t_restoreGravity( uid ) {\r\n\t\tthis._selection.restoreGravity( uid );\r\n\t}\r\n\r\n\t/**\r\n\t * Generates and returns an attribute key for selection attributes store, basing on original attribute key.\r\n\t *\r\n\t * @protected\r\n\t * @param {String} key Attribute key to convert.\r\n\t * @returns {String} Converted attribute key, applicable for selection store.\r\n\t */\r\n\tstatic _getStoreAttributeKey( key ) {\r\n\t\treturn storePrefix + key;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether the given attribute key is an attribute stored on an element.\r\n\t *\r\n\t * @protected\r\n\t * @param {String} key\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic _isStoreAttributeKey( key ) {\r\n\t\treturn key.startsWith( storePrefix );\r\n\t}\r\n}\r\n\r\nmix( DocumentSelection, EmitterMixin );\r\n\r\n/**\r\n * Fired when selection range(s) changed.\r\n *\r\n * @event change:range\r\n * @param {Boolean} directChange In case of {@link module:engine/model/selection~Selection} class it is always set\r\n * to `true` which indicates that the selection change was caused by a direct use of selection's API.\r\n * The {@link module:engine/model/documentselection~DocumentSelection}, however, may change because its position\r\n * was directly changed through the {@link module:engine/model/writer~Writer writer} or because its position was\r\n * changed because the structure of the model has been changed (which means an indirect change).\r\n * The indirect change does not occur in case of normal (detached) selections because they are \"static\" (as \"not live\")\r\n * which mean that they are not updated once the document changes.\r\n */\r\n\r\n/**\r\n * Fired when selection attribute changed.\r\n *\r\n * @event change:attribute\r\n * @param {Boolean} directChange In case of {@link module:engine/model/selection~Selection} class it is always set\r\n * to `true` which indicates that the selection change was caused by a direct use of selection's API.\r\n * The {@link module:engine/model/documentselection~DocumentSelection}, however, may change because its attributes\r\n * were directly changed through the {@link module:engine/model/writer~Writer writer} or because its position was\r\n * changed in the model and its attributes were refreshed (which means an indirect change).\r\n * The indirect change does not occur in case of normal (detached) selections because they are \"static\" (as \"not live\")\r\n * which mean that they are not updated once the document changes.\r\n * @param {Array.<String>} attributeKeys Array containing keys of attributes that changed.\r\n */\r\n\r\n/**\r\n * Fired when selection marker(s) changed.\r\n *\r\n * @event change:marker\r\n * @param {Boolean} directChange This is always set to `false` in case of `change:marker` event as there is no possibility\r\n * to change markers directly through {@link module:engine/model/documentselection~DocumentSelection} API.\r\n * See also {@link module:engine/model/documentselection~DocumentSelection#event:change:range} and\r\n * {@link module:engine/model/documentselection~DocumentSelection#event:change:attribute}.\r\n * @param {Array.<module:engine/model/markercollection~Marker>} oldMarkers Markers in which the selection was before the change.\r\n */\r\n\r\n// `LiveSelection` is used internally by {@link module:engine/model/documentselection~DocumentSelection} and shouldn't be used directly.\r\n//\r\n// LiveSelection` is automatically updated upon changes in the {@link module:engine/model/document~Document document}\r\n// to always contain valid ranges. Its attributes are inherited from the text unless set explicitly.\r\n//\r\n// Differences between {@link module:engine/model/selection~Selection} and `LiveSelection` are:\r\n// * there is always a range in `LiveSelection` - even if no ranges were added there is a \"default range\"\r\n// present in the selection,\r\n// * ranges added to this selection updates automatically when the document changes,\r\n// * attributes of `LiveSelection` are updated automatically according to selection ranges.\r\n//\r\n// @extends module:engine/model/selection~Selection\r\n//\r\n\r\nclass LiveSelection extends Selection {\r\n\t// Creates an empty live selection for given {@link module:engine/model/document~Document}.\r\n\t// @param {module:engine/model/document~Document} doc Document which owns this selection.\r\n\tconstructor( doc ) {\r\n\t\tsuper();\r\n\r\n\t\t// List of selection markers.\r\n\t\t// Marker is a selection marker when selection range is inside the marker range.\r\n\t\t//\r\n\t\t// @type {module:utils/collection~Collection}\r\n\t\tthis.markers = new Collection( { idProperty: 'name' } );\r\n\r\n\t\t// Document which owns this selection.\r\n\t\t//\r\n\t\t// @protected\r\n\t\t// @member {module:engine/model/model~Model}\r\n\t\tthis._model = doc.model;\r\n\r\n\t\t// Document which owns this selection.\r\n\t\t//\r\n\t\t// @protected\r\n\t\t// @member {module:engine/model/document~Document}\r\n\t\tthis._document = doc;\r\n\r\n\t\t// Keeps mapping of attribute name to priority with which the attribute got modified (added/changed/removed)\r\n\t\t// last time. Possible values of priority are: `'low'` and `'normal'`.\r\n\t\t//\r\n\t\t// Priorities are used by internal `LiveSelection` mechanisms. All attributes set using `LiveSelection`\r\n\t\t// attributes API are set with `'normal'` priority.\r\n\t\t//\r\n\t\t// @private\r\n\t\t// @member {Map} module:engine/model/liveselection~LiveSelection#_attributePriority\r\n\t\tthis._attributePriority = new Map();\r\n\r\n\t\t// Contains data required to fix ranges which have been moved to the graveyard.\r\n\t\t// @private\r\n\t\t// @member {Array} module:engine/model/liveselection~LiveSelection#_fixGraveyardRangesData\r\n\t\tthis._fixGraveyardRangesData = [];\r\n\r\n\t\t// Flag that informs whether the selection ranges have changed. It is changed on true when `LiveRange#change:range` event is fired.\r\n\t\t// @private\r\n\t\t// @member {Array} module:engine/model/liveselection~LiveSelection#_hasChangedRange\r\n\t\tthis._hasChangedRange = false;\r\n\r\n\t\t// Each overriding gravity adds an UID to the set and each removal removes it.\r\n\t\t// Gravity is overridden when there's at least one UID in the set.\r\n\t\t// Gravity is restored when the set is empty.\r\n\t\t// This is to prevent conflicts when gravity is overridden by more than one feature at the same time.\r\n\t\t// @private\r\n\t\t// @type {Set}\r\n\t\tthis._overriddenGravityRegister = new Set();\r\n\r\n\t\t// Ensure selection is correct after each operation.\r\n\t\tthis.listenTo( this._model, 'applyOperation', ( evt, args ) => {\r\n\t\t\tconst operation = args[ 0 ];\r\n\r\n\t\t\tif ( !operation.isDocumentOperation || operation.type == 'marker' || operation.type == 'rename' || operation.type == 'noop' ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\twhile ( this._fixGraveyardRangesData.length ) {\r\n\t\t\t\tconst { liveRange, sourcePosition } = this._fixGraveyardRangesData.shift();\r\n\r\n\t\t\t\tthis._fixGraveyardSelection( liveRange, sourcePosition );\r\n\t\t\t}\r\n\r\n\t\t\tif ( this._hasChangedRange ) {\r\n\t\t\t\tthis._hasChangedRange = false;\r\n\t\t\t\tthis.fire( 'change:range', { directChange: false } );\r\n\t\t\t}\r\n\t\t}, { priority: 'lowest' } );\r\n\r\n\t\t// Ensure selection is correct and up to date after each range change.\r\n\t\tthis.on( 'change:range', () => {\r\n\t\t\tfor ( const range of this.getRanges() ) {\r\n\t\t\t\tif ( !this._document._validateSelectionRange( range ) ) {\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Range from {@link module:engine/model/documentselection~DocumentSelection document selection}\r\n\t\t\t\t\t * starts or ends at incorrect position.\r\n\t\t\t\t\t *\r\n\t\t\t\t\t * @error document-selection-wrong-position\r\n\t\t\t\t\t * @param {module:engine/model/range~Range} range\r\n\t\t\t\t\t */\r\n\t\t\t\t\tthrow new CKEditorError(\r\n\t\t\t\t\t\t'document-selection-wrong-position: Range from document selection starts or ends at incorrect position.',\r\n\t\t\t\t\t\tthis,\r\n\t\t\t\t\t\t{ range }\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Update markers data stored by the selection after each marker change.\r\n\t\tthis.listenTo( this._model.markers, 'update', () => this._updateMarkers() );\r\n\r\n\t\t// Ensure selection is up to date after each change block.\r\n\t\tthis.listenTo( this._document, 'change', ( evt, batch ) => {\r\n\t\t\tclearAttributesStoredInElement( this._model, batch );\r\n\t\t} );\r\n\t}\r\n\r\n\tget isCollapsed() {\r\n\t\tconst length = this._ranges.length;\r\n\r\n\t\treturn length === 0 ? this._document._getDefaultRange().isCollapsed : super.isCollapsed;\r\n\t}\r\n\r\n\tget anchor() {\r\n\t\treturn super.anchor || this._document._getDefaultRange().start;\r\n\t}\r\n\r\n\tget focus() {\r\n\t\treturn super.focus || this._document._getDefaultRange().end;\r\n\t}\r\n\r\n\tget rangeCount() {\r\n\t\treturn this._ranges.length ? this._ranges.length : 1;\r\n\t}\r\n\r\n\t// Describes whether `LiveSelection` has own range(s) set, or if it is defaulted to\r\n\t// {@link module:engine/model/document~Document#_getDefaultRange document's default range}.\r\n\t//\r\n\t// @readonly\r\n\t// @type {Boolean}\r\n\tget hasOwnRange() {\r\n\t\treturn this._ranges.length > 0;\r\n\t}\r\n\r\n\t// When set to `true` then selection attributes on node before the caret won't be taken\r\n\t// into consideration while updating selection attributes.\r\n\t//\r\n\t// @protected\r\n\t// @type {Boolean}\r\n\tget isGravityOverridden() {\r\n\t\treturn !!this._overriddenGravityRegister.size;\r\n\t}\r\n\r\n\t// Unbinds all events previously bound by live selection.\r\n\tdestroy() {\r\n\t\tfor ( let i = 0; i < this._ranges.length; i++ ) {\r\n\t\t\tthis._ranges[ i ].detach();\r\n\t\t}\r\n\r\n\t\tthis.stopListening();\r\n\t}\r\n\r\n\t* getRanges() {\r\n\t\tif ( this._ranges.length ) {\r\n\t\t\tyield* super.getRanges();\r\n\t\t} else {\r\n\t\t\tyield this._document._getDefaultRange();\r\n\t\t}\r\n\t}\r\n\r\n\tgetFirstRange() {\r\n\t\treturn super.getFirstRange() || this._document._getDefaultRange();\r\n\t}\r\n\r\n\tgetLastRange() {\r\n\t\treturn super.getLastRange() || this._document._getDefaultRange();\r\n\t}\r\n\r\n\tsetTo( selectable, optionsOrPlaceOrOffset, options ) {\r\n\t\tsuper.setTo( selectable, optionsOrPlaceOrOffset, options );\r\n\t\tthis._updateAttributes( true );\r\n\t\tthis._updateMarkers();\r\n\t}\r\n\r\n\tsetFocus( itemOrPosition, offset ) {\r\n\t\tsuper.setFocus( itemOrPosition, offset );\r\n\t\tthis._updateAttributes( true );\r\n\t\tthis._updateMarkers();\r\n\t}\r\n\r\n\tsetAttribute( key, value ) {\r\n\t\tif ( this._setAttribute( key, value ) ) {\r\n\t\t\t// Fire event with exact data.\r\n\t\t\tconst attributeKeys = [ key ];\r\n\t\t\tthis.fire( 'change:attribute', { attributeKeys, directChange: true } );\r\n\t\t}\r\n\t}\r\n\r\n\tremoveAttribute( key ) {\r\n\t\tif ( this._removeAttribute( key ) ) {\r\n\t\t\t// Fire event with exact data.\r\n\t\t\tconst attributeKeys = [ key ];\r\n\t\t\tthis.fire( 'change:attribute', { attributeKeys, directChange: true } );\r\n\t\t}\r\n\t}\r\n\r\n\toverrideGravity() {\r\n\t\tconst overrideUid = uid();\r\n\r\n\t\t// Remember that another overriding has been requested. It will need to be removed\r\n\t\t// before the gravity is to be restored.\r\n\t\tthis._overriddenGravityRegister.add( overrideUid );\r\n\r\n\t\tif ( this._overriddenGravityRegister.size === 1 ) {\r\n\t\t\tthis._updateAttributes( true );\r\n\t\t}\r\n\r\n\t\treturn overrideUid;\r\n\t}\r\n\r\n\trestoreGravity( uid ) {\r\n\t\tif ( !this._overriddenGravityRegister.has( uid ) ) {\r\n\t\t\t/**\r\n\t\t\t * Restoring gravity for an unknown UID is not possible. Make sure you are using a correct\r\n\t\t\t * UID obtained from the {@link module:engine/model/writer~Writer#overrideSelectionGravity} to restore.\r\n\t\t\t *\r\n\t\t\t * @error document-selection-gravity-wrong-restore\r\n\t\t\t * @param {String} uid The unique identifier returned by\r\n\t\t\t * {@link module:engine/model/documentselection~DocumentSelection#_overrideGravity}.\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'document-selection-gravity-wrong-restore: Attempting to restore the selection gravity for an unknown UID.',\r\n\t\t\t\tthis,\r\n\t\t\t\t{ uid }\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tthis._overriddenGravityRegister.delete( uid );\r\n\r\n\t\t// Restore gravity only when all overriding have been restored.\r\n\t\tif ( !this.isGravityOverridden ) {\r\n\t\t\tthis._updateAttributes( true );\r\n\t\t}\r\n\t}\r\n\r\n\t_popRange() {\r\n\t\tthis._ranges.pop().detach();\r\n\t}\r\n\r\n\t_pushRange( range ) {\r\n\t\tconst liveRange = this._prepareRange( range );\r\n\r\n\t\t// `undefined` is returned when given `range` is in graveyard root.\r\n\t\tif ( liveRange ) {\r\n\t\t\tthis._ranges.push( liveRange );\r\n\t\t}\r\n\t}\r\n\r\n\t// Prepares given range to be added to selection. Checks if it is correct,\r\n\t// converts it to {@link module:engine/model/liverange~LiveRange LiveRange}\r\n\t// and sets listeners listening to the range's change event.\r\n\t//\r\n\t// @private\r\n\t// @param {module:engine/model/range~Range} range\r\n\t_prepareRange( range ) {\r\n\t\tthis._checkRange( range );\r\n\r\n\t\tif ( range.root == this._document.graveyard ) {\r\n\t\t\t// @if CK_DEBUG // console.warn( 'Trying to add a Range that is in the graveyard root. Range rejected.' );\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst liveRange = LiveRange.fromRange( range );\r\n\r\n\t\tliveRange.on( 'change:range', ( evt, oldRange, data ) => {\r\n\t\t\tthis._hasChangedRange = true;\r\n\r\n\t\t\t// If `LiveRange` is in whole moved to the graveyard, save necessary data. It will be fixed on `Model#applyOperation` event.\r\n\t\t\tif ( liveRange.root == this._document.graveyard ) {\r\n\t\t\t\tthis._fixGraveyardRangesData.push( {\r\n\t\t\t\t\tliveRange,\r\n\t\t\t\t\tsourcePosition: data.deletionPosition\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\treturn liveRange;\r\n\t}\r\n\r\n\t_updateMarkers() {\r\n\t\tconst markers = [];\r\n\t\tlet changed = false;\r\n\r\n\t\tfor ( const marker of this._model.markers ) {\r\n\t\t\tconst markerRange = marker.getRange();\r\n\r\n\t\t\tfor ( const selectionRange of this.getRanges() ) {\r\n\t\t\t\tif ( markerRange.containsRange( selectionRange, !selectionRange.isCollapsed ) ) {\r\n\t\t\t\t\tmarkers.push( marker );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst oldMarkers = Array.from( this.markers );\r\n\r\n\t\tfor ( const marker of markers ) {\r\n\t\t\tif ( !this.markers.has( marker ) ) {\r\n\t\t\t\tthis.markers.add( marker );\r\n\r\n\t\t\t\tchanged = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor ( const marker of Array.from( this.markers ) ) {\r\n\t\t\tif ( !markers.includes( marker ) ) {\r\n\t\t\t\tthis.markers.remove( marker );\r\n\r\n\t\t\t\tchanged = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( changed ) {\r\n\t\t\tthis.fire( 'change:marker', { oldMarkers, directChange: false } );\r\n\t\t}\r\n\t}\r\n\r\n\t// Updates this selection attributes according to its ranges and the {@link module:engine/model/document~Document model document}.\r\n\t//\r\n\t// @protected\r\n\t// @param {Boolean} clearAll\r\n\t// @fires change:attribute\r\n\t_updateAttributes( clearAll ) {\r\n\t\tconst newAttributes = toMap( this._getSurroundingAttributes() );\r\n\t\tconst oldAttributes = toMap( this.getAttributes() );\r\n\r\n\t\tif ( clearAll ) {\r\n\t\t\t// If `clearAll` remove all attributes and reset priorities.\r\n\t\t\tthis._attributePriority = new Map();\r\n\t\t\tthis._attrs = new Map();\r\n\t\t} else {\r\n\t\t\t// If not, remove only attributes added with `low` priority.\r\n\t\t\tfor ( const [ key, priority ] of this._attributePriority ) {\r\n\t\t\t\tif ( priority == 'low' ) {\r\n\t\t\t\t\tthis._attrs.delete( key );\r\n\t\t\t\t\tthis._attributePriority.delete( key );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._setAttributesTo( newAttributes );\r\n\r\n\t\t// Let's evaluate which attributes really changed.\r\n\t\tconst changed = [];\r\n\r\n\t\t// First, loop through all attributes that are set on selection right now.\r\n\t\t// Check which of them are different than old attributes.\r\n\t\tfor ( const [ newKey, newValue ] of this.getAttributes() ) {\r\n\t\t\tif ( !oldAttributes.has( newKey ) || oldAttributes.get( newKey ) !== newValue ) {\r\n\t\t\t\tchanged.push( newKey );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Then, check which of old attributes got removed.\r\n\t\tfor ( const [ oldKey ] of oldAttributes ) {\r\n\t\t\tif ( !this.hasAttribute( oldKey ) ) {\r\n\t\t\t\tchanged.push( oldKey );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Fire event with exact data (fire only if anything changed).\r\n\t\tif ( changed.length > 0 ) {\r\n\t\t\tthis.fire( 'change:attribute', { attributeKeys: changed, directChange: false } );\r\n\t\t}\r\n\t}\r\n\r\n\t// Internal method for setting `LiveSelection` attribute. Supports attribute priorities (through `directChange`\r\n\t// parameter).\r\n\t//\r\n\t// @private\r\n\t// @param {String} key Attribute key.\r\n\t// @param {*} value Attribute value.\r\n\t// @param {Boolean} [directChange=true] `true` if the change is caused by `Selection` API, `false` if change\r\n\t// is caused by `Batch` API.\r\n\t// @returns {Boolean} Whether value has changed.\r\n\t_setAttribute( key, value, directChange = true ) {\r\n\t\tconst priority = directChange ? 'normal' : 'low';\r\n\r\n\t\tif ( priority == 'low' && this._attributePriority.get( key ) == 'normal' ) {\r\n\t\t\t// Priority too low.\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst oldValue = super.getAttribute( key );\r\n\r\n\t\t// Don't do anything if value has not changed.\r\n\t\tif ( oldValue === value ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tthis._attrs.set( key, value );\r\n\r\n\t\t// Update priorities map.\r\n\t\tthis._attributePriority.set( key, priority );\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Internal method for removing `LiveSelection` attribute. Supports attribute priorities (through `directChange`\r\n\t// parameter).\r\n\t//\r\n\t// NOTE: Even if attribute is not present in the selection but is provided to this method, it's priority will\r\n\t// be changed according to `directChange` parameter.\r\n\t//\r\n\t// @private\r\n\t// @param {String} key Attribute key.\r\n\t// @param {Boolean} [directChange=true] `true` if the change is caused by `Selection` API, `false` if change\r\n\t// is caused by `Batch` API.\r\n\t// @returns {Boolean} Whether attribute was removed. May not be true if such attributes didn't exist or the\r\n\t// existing attribute had higher priority.\r\n\t_removeAttribute( key, directChange = true ) {\r\n\t\tconst priority = directChange ? 'normal' : 'low';\r\n\r\n\t\tif ( priority == 'low' && this._attributePriority.get( key ) == 'normal' ) {\r\n\t\t\t// Priority too low.\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Update priorities map.\r\n\t\tthis._attributePriority.set( key, priority );\r\n\r\n\t\t// Don't do anything if value has not changed.\r\n\t\tif ( !super.hasAttribute( key ) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tthis._attrs.delete( key );\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Internal method for setting multiple `LiveSelection` attributes. Supports attribute priorities (through\r\n\t// `directChange` parameter).\r\n\t//\r\n\t// @private\r\n\t// @param {Map.<String,*>} attrs Iterable object containing attributes to be set.\r\n\t// @returns {Set.<String>} Changed attribute keys.\r\n\t_setAttributesTo( attrs ) {\r\n\t\tconst changed = new Set();\r\n\r\n\t\tfor ( const [ oldKey, oldValue ] of this.getAttributes() ) {\r\n\t\t\t// Do not remove attribute if attribute with same key and value is about to be set.\r\n\t\t\tif ( attrs.get( oldKey ) === oldValue ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// All rest attributes will be removed so changed attributes won't change .\r\n\t\t\tthis._removeAttribute( oldKey, false );\r\n\t\t}\r\n\r\n\t\tfor ( const [ key, value ] of attrs ) {\r\n\t\t\t// Attribute may not be set because of attributes or because same key/value is already added.\r\n\t\t\tconst gotAdded = this._setAttribute( key, value, false );\r\n\r\n\t\t\tif ( gotAdded ) {\r\n\t\t\t\tchanged.add( key );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn changed;\r\n\t}\r\n\r\n\t// Returns an iterable that iterates through all selection attributes stored in current selection's parent.\r\n\t//\r\n\t// @protected\r\n\t// @returns {Iterable.<*>}\r\n\t* _getStoredAttributes() {\r\n\t\tconst selectionParent = this.getFirstPosition().parent;\r\n\r\n\t\tif ( this.isCollapsed && selectionParent.isEmpty ) {\r\n\t\t\tfor ( const key of selectionParent.getAttributeKeys() ) {\r\n\t\t\t\tif ( key.startsWith( storePrefix ) ) {\r\n\t\t\t\t\tconst realKey = key.substr( storePrefix.length );\r\n\r\n\t\t\t\t\tyield [ realKey, selectionParent.getAttribute( key ) ];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Checks model text nodes that are closest to the selection's first position and returns attributes of first\r\n\t// found element. If there are no text nodes in selection's first position parent, it returns selection\r\n\t// attributes stored in that parent.\r\n\t//\r\n\t// @private\r\n\t// @returns {Iterable.<*>} Collection of attributes.\r\n\t_getSurroundingAttributes() {\r\n\t\tconst position = this.getFirstPosition();\r\n\t\tconst schema = this._model.schema;\r\n\r\n\t\tlet attrs = null;\r\n\r\n\t\tif ( !this.isCollapsed ) {\r\n\t\t\t// 1. If selection is a range...\r\n\t\t\tconst range = this.getFirstRange();\r\n\r\n\t\t\t// ...look for a first character node in that range and take attributes from it.\r\n\t\t\tfor ( const value of range ) {\r\n\t\t\t\t// If the item is an object, we don't want to get attributes from its children.\r\n\t\t\t\tif ( value.item.is( 'element' ) && schema.isObject( value.item ) ) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( value.type == 'text' ) {\r\n\t\t\t\t\tattrs = value.item.getAttributes();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// 2. If the selection is a caret or the range does not contain a character node...\r\n\r\n\t\t\tconst nodeBefore = position.textNode ? position.textNode : position.nodeBefore;\r\n\t\t\tconst nodeAfter = position.textNode ? position.textNode : position.nodeAfter;\r\n\r\n\t\t\t// When gravity is overridden then don't take node before into consideration.\r\n\t\t\tif ( !this.isGravityOverridden ) {\r\n\t\t\t\t// ...look at the node before caret and take attributes from it if it is a character node.\r\n\t\t\t\tattrs = getAttrsIfCharacter( nodeBefore );\r\n\t\t\t}\r\n\r\n\t\t\t// 3. If not, look at the node after caret...\r\n\t\t\tif ( !attrs ) {\r\n\t\t\t\tattrs = getAttrsIfCharacter( nodeAfter );\r\n\t\t\t}\r\n\r\n\t\t\t// 4. If not, try to find the first character on the left, that is in the same node.\r\n\t\t\t// When gravity is overridden then don't take node before into consideration.\r\n\t\t\tif ( !this.isGravityOverridden && !attrs ) {\r\n\t\t\t\tlet node = nodeBefore;\r\n\r\n\t\t\t\twhile ( node && !attrs ) {\r\n\t\t\t\t\tnode = node.previousSibling;\r\n\t\t\t\t\tattrs = getAttrsIfCharacter( node );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// 5. If not found, try to find the first character on the right, that is in the same node.\r\n\t\t\tif ( !attrs ) {\r\n\t\t\t\tlet node = nodeAfter;\r\n\r\n\t\t\t\twhile ( node && !attrs ) {\r\n\t\t\t\t\tnode = node.nextSibling;\r\n\t\t\t\t\tattrs = getAttrsIfCharacter( node );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// 6. If not found, selection should retrieve attributes from parent.\r\n\t\t\tif ( !attrs ) {\r\n\t\t\t\tattrs = this._getStoredAttributes();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn attrs;\r\n\t}\r\n\r\n\t// Fixes a selection range after it ends up in graveyard root.\r\n\t//\r\n\t// @private\r\n\t// @param {module:engine/model/liverange~LiveRange} liveRange The range from selection, that ended up in the graveyard root.\r\n\t// @param {module:engine/model/position~Position} removedRangeStart Start position of a range which was removed.\r\n\t_fixGraveyardSelection( liveRange, removedRangeStart ) {\r\n\t\t// The start of the removed range is the closest position to the `liveRange` - the original selection range.\r\n\t\t// This is a good candidate for a fixed selection range.\r\n\t\tconst positionCandidate = removedRangeStart.clone();\r\n\r\n\t\t// Find a range that is a correct selection range and is closest to the start of removed range.\r\n\t\tconst selectionRange = this._model.schema.getNearestSelectionRange( positionCandidate );\r\n\r\n\t\t// Remove the old selection range before preparing and adding new selection range. This order is important,\r\n\t\t// because new range, in some cases, may intersect with old range (it depends on `getNearestSelectionRange()` result).\r\n\t\tconst index = this._ranges.indexOf( liveRange );\r\n\t\tthis._ranges.splice( index, 1 );\r\n\t\tliveRange.detach();\r\n\r\n\t\t// If nearest valid selection range has been found - add it in the place of old range.\r\n\t\tif ( selectionRange ) {\r\n\t\t\t// Check the range, convert it to live range, bind events, etc.\r\n\t\t\tconst newRange = this._prepareRange( selectionRange );\r\n\r\n\t\t\t// Add new range in the place of old range.\r\n\t\t\tthis._ranges.splice( index, 0, newRange );\r\n\t\t}\r\n\t\t// If nearest valid selection range cannot be found - just removing the old range is fine.\r\n\t}\r\n}\r\n\r\n// Helper function for {@link module:engine/model/liveselection~LiveSelection#_updateAttributes}.\r\n//\r\n// It takes model item, checks whether it is a text node (or text proxy) and, if so, returns it's attributes. If not, returns `null`.\r\n//\r\n// @param {module:engine/model/item~Item|null}  node\r\n// @returns {Boolean}\r\nfunction getAttrsIfCharacter( node ) {\r\n\tif ( node instanceof TextProxy || node instanceof Text ) {\r\n\t\treturn node.getAttributes();\r\n\t}\r\n\r\n\treturn null;\r\n}\r\n\r\n// Removes selection attributes from element which is not empty anymore.\r\n//\r\n// @private\r\n// @param {module:engine/model/model~Model} model\r\n// @param {module:engine/model/batch~Batch} batch\r\nfunction clearAttributesStoredInElement( model, batch ) {\r\n\tconst differ = model.document.differ;\r\n\r\n\tfor ( const entry of differ.getChanges() ) {\r\n\t\tif ( entry.type != 'insert' ) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tconst changeParent = entry.position.parent;\r\n\t\tconst isNoLongerEmpty = entry.length === changeParent.maxOffset;\r\n\r\n\t\tif ( isNoLongerEmpty ) {\r\n\t\t\tmodel.enqueueChange( batch, writer => {\r\n\t\t\t\tconst storedAttributes = Array.from( changeParent.getAttributeKeys() )\r\n\t\t\t\t\t.filter( key => key.startsWith( storePrefix ) );\r\n\r\n\t\t\t\tfor ( const key of storedAttributes ) {\r\n\t\t\t\t\twriter.removeAttribute( key, changeParent );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t}\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/element\r\n */\r\n\r\nimport Node from './node';\r\nimport NodeList from './nodelist';\r\nimport Text from './text';\r\nimport TextProxy from './textproxy';\r\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\r\n\r\n// @if CK_DEBUG_ENGINE // const { stringifyMap, convertMapToStringifiedObject, convertMapToTags } = require( '../dev-utils/utils' );\r\n\r\n/**\r\n * Model element. Type of {@link module:engine/model/node~Node node} that has a {@link module:engine/model/element~Element#name name} and\r\n * {@link module:engine/model/element~Element#getChildren child nodes}.\r\n *\r\n * **Important**: see {@link module:engine/model/node~Node} to read about restrictions using `Element` and `Node` API.\r\n *\r\n * @extends module:engine/model/node~Node\r\n */\r\nexport default class Element extends Node {\r\n\t/**\r\n\t * Creates a model element.\r\n\t *\r\n\t * **Note:** Constructor of this class shouldn't be used directly in the code.\r\n\t * Use the {@link module:engine/model/writer~Writer#createElement} method instead.\r\n\t *\r\n\t * @protected\r\n\t * @param {String} name Element's name.\r\n\t * @param {Object} [attrs] Element's attributes. See {@link module:utils/tomap~toMap} for a list of accepted values.\r\n\t * @param {module:engine/model/node~Node|Iterable.<module:engine/model/node~Node>} [children]\r\n\t * One or more nodes to be inserted as children of created element.\r\n\t */\r\n\tconstructor( name, attrs, children ) {\r\n\t\tsuper( attrs );\r\n\r\n\t\t/**\r\n\t\t * Element name.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {String} module:engine/model/element~Element#name\r\n\t\t */\r\n\t\tthis.name = name;\r\n\r\n\t\t/**\r\n\t\t * List of children nodes.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {module:engine/model/nodelist~NodeList} module:engine/model/element~Element#_children\r\n\t\t */\r\n\t\tthis._children = new NodeList();\r\n\r\n\t\tif ( children ) {\r\n\t\t\tthis._insertChild( 0, children );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Number of this element's children.\r\n\t *\r\n\t * @readonly\r\n\t * @type {Number}\r\n\t */\r\n\tget childCount() {\r\n\t\treturn this._children.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Sum of {@link module:engine/model/node~Node#offsetSize offset sizes} of all of this element's children.\r\n\t *\r\n\t * @readonly\r\n\t * @type {Number}\r\n\t */\r\n\tget maxOffset() {\r\n\t\treturn this._children.maxOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Is `true` if there are no nodes inside this element, `false` otherwise.\r\n\t *\r\n\t * @readonly\r\n\t * @type {Boolean}\r\n\t */\r\n\tget isEmpty() {\r\n\t\treturn this.childCount === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this object is of the given.\r\n\t *\r\n\t *\t\telement.is( 'element' ); // -> true\r\n\t *\t\telement.is( 'node' ); // -> true\r\n\t *\t\telement.is( 'model:element' ); // -> true\r\n\t *\t\telement.is( 'model:node' ); // -> true\r\n\t *\r\n\t *\t\telement.is( 'view:element' ); // -> false\r\n\t *\t\telement.is( 'documentSelection' ); // -> false\r\n\t *\r\n\t * Assuming that the object being checked is an element, you can also check its\r\n\t * {@link module:engine/model/element~Element#name name}:\r\n\t *\r\n\t *\t\telement.is( 'image' ); // -> true if this is an <image> element\r\n\t *\t\telement.is( 'element', 'image' ); // -> same as above\r\n\t *\t\ttext.is( 'image' ); -> false\r\n\t *\r\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\r\n\t *\r\n\t * @param {String} type Type to check when `name` parameter is present.\r\n\t * Otherwise, it acts like the `name` parameter.\r\n\t * @param {String} [name] Element name.\r\n\t * @returns {Boolean}\r\n\t */\r\n\tis( type, name = null ) {\r\n\t\tconst cutType = type.replace( /^model:/, '' );\r\n\r\n\t\tif ( !name ) {\r\n\t\t\treturn cutType == 'element' || cutType == this.name || super.is( type );\r\n\t\t} else {\r\n\t\t\treturn cutType == 'element' && name == this.name;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the child at the given index.\r\n\t *\r\n\t * @param {Number} index Index of child.\r\n\t * @returns {module:engine/model/node~Node} Child node.\r\n\t */\r\n\tgetChild( index ) {\r\n\t\treturn this._children.getNode( index );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an iterator that iterates over all of this element's children.\r\n\t *\r\n\t * @returns {Iterable.<module:engine/model/node~Node>}\r\n\t */\r\n\tgetChildren() {\r\n\t\treturn this._children[ Symbol.iterator ]();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an index of the given child node. Returns `null` if given node is not a child of this element.\r\n\t *\r\n\t * @param {module:engine/model/node~Node} node Child node to look for.\r\n\t * @returns {Number} Child node's index in this element.\r\n\t */\r\n\tgetChildIndex( node ) {\r\n\t\treturn this._children.getNodeIndex( node );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the starting offset of given child. Starting offset is equal to the sum of\r\n\t * {@link module:engine/model/node~Node#offsetSize offset sizes} of all node's siblings that are before it. Returns `null` if\r\n\t * given node is not a child of this element.\r\n\t *\r\n\t * @param {module:engine/model/node~Node} node Child node to look for.\r\n\t * @returns {Number} Child node's starting offset.\r\n\t */\r\n\tgetChildStartOffset( node ) {\r\n\t\treturn this._children.getNodeStartOffset( node );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns index of a node that occupies given offset. If given offset is too low, returns `0`. If given offset is\r\n\t * too high, returns {@link module:engine/model/element~Element#getChildIndex index after last child}.\r\n\t *\r\n\t *\t\tconst textNode = new Text( 'foo' );\r\n\t *\t\tconst pElement = new Element( 'p' );\r\n\t *\t\tconst divElement = new Element( [ textNode, pElement ] );\r\n\t *\t\tdivElement.offsetToIndex( -1 ); // Returns 0, because offset is too low.\r\n\t *\t\tdivElement.offsetToIndex( 0 ); // Returns 0, because offset 0 is taken by `textNode` which is at index 0.\r\n\t *\t\tdivElement.offsetToIndex( 1 ); // Returns 0, because `textNode` has `offsetSize` equal to 3, so it occupies offset 1 too.\r\n\t *\t\tdivElement.offsetToIndex( 2 ); // Returns 0.\r\n\t *\t\tdivElement.offsetToIndex( 3 ); // Returns 1.\r\n\t *\t\tdivElement.offsetToIndex( 4 ); // Returns 2. There are no nodes at offset 4, so last available index is returned.\r\n\t *\r\n\t * @param {Number} offset Offset to look for.\r\n\t * @returns {Number}\r\n\t */\r\n\toffsetToIndex( offset ) {\r\n\t\treturn this._children.offsetToIndex( offset );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a descendant node by its path relative to this element.\r\n\t *\r\n\t *\t\t// <this>a<b>c</b></this>\r\n\t *\t\tthis.getNodeByPath( [ 0 ] );     // -> \"a\"\r\n\t *\t\tthis.getNodeByPath( [ 1 ] );     // -> <b>\r\n\t *\t\tthis.getNodeByPath( [ 1, 0 ] );  // -> \"c\"\r\n\t *\r\n\t * @param {Array.<Number>} relativePath Path of the node to find, relative to this element.\r\n\t * @returns {module:engine/model/node~Node}\r\n\t */\r\n\tgetNodeByPath( relativePath ) {\r\n\t\tlet node = this; // eslint-disable-line consistent-this\r\n\r\n\t\tfor ( const index of relativePath ) {\r\n\t\t\tnode = node.getChild( node.offsetToIndex( index ) );\r\n\t\t}\r\n\r\n\t\treturn node;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `Element` instance to plain object and returns it. Takes care of converting all of this element's children.\r\n\t *\r\n\t * @returns {Object} `Element` instance converted to plain object.\r\n\t */\r\n\ttoJSON() {\r\n\t\tconst json = super.toJSON();\r\n\r\n\t\tjson.name = this.name;\r\n\r\n\t\tif ( this._children.length > 0 ) {\r\n\t\t\tjson.children = [];\r\n\r\n\t\t\tfor ( const node of this._children ) {\r\n\t\t\t\tjson.children.push( node.toJSON() );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn json;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of this element and returns it. Created element has the same name and attributes as the original element.\r\n\t * If clone is deep, the original element's children are also cloned. If not, then empty element is removed.\r\n\t *\r\n\t * @protected\r\n\t * @param {Boolean} [deep=false] If set to `true` clones element and all its children recursively. When set to `false`,\r\n\t * element will be cloned without any child.\r\n\t */\r\n\t_clone( deep = false ) {\r\n\t\tconst children = deep ? Array.from( this._children ).map( node => node._clone( true ) ) : null;\r\n\r\n\t\treturn new Element( this.name, this.getAttributes(), children );\r\n\t}\r\n\r\n\t/**\r\n\t * {@link module:engine/model/element~Element#_insertChild Inserts} one or more nodes at the end of this element.\r\n\t *\r\n\t * @see module:engine/model/writer~Writer#append\r\n\t * @protected\r\n\t * @param {module:engine/model/item~Item|Iterable.<module:engine/model/item~Item>} nodes Nodes to be inserted.\r\n\t */\r\n\t_appendChild( nodes ) {\r\n\t\tthis._insertChild( this.childCount, nodes );\r\n\t}\r\n\r\n\t/**\r\n\t * Inserts one or more nodes at the given index and sets {@link module:engine/model/node~Node#parent parent} of these nodes\r\n\t * to this element.\r\n\t *\r\n\t * @see module:engine/model/writer~Writer#insert\r\n\t * @protected\r\n\t * @param {Number} index Index at which nodes should be inserted.\r\n\t * @param {module:engine/model/item~Item|Iterable.<module:engine/model/item~Item>} items Items to be inserted.\r\n\t */\r\n\t_insertChild( index, items ) {\r\n\t\tconst nodes = normalize( items );\r\n\r\n\t\tfor ( const node of nodes ) {\r\n\t\t\t// If node that is being added to this element is already inside another element, first remove it from the old parent.\r\n\t\t\tif ( node.parent !== null ) {\r\n\t\t\t\tnode._remove();\r\n\t\t\t}\r\n\r\n\t\t\tnode.parent = this;\r\n\t\t}\r\n\r\n\t\tthis._children._insertNodes( index, nodes );\r\n\t}\r\n\r\n\t/**\r\n\t * Removes one or more nodes starting at the given index and sets\r\n\t * {@link module:engine/model/node~Node#parent parent} of these nodes to `null`.\r\n\t *\r\n\t * @see module:engine/model/writer~Writer#remove\r\n\t * @protected\r\n\t * @param {Number} index Index of the first node to remove.\r\n\t * @param {Number} [howMany=1] Number of nodes to remove.\r\n\t * @returns {Array.<module:engine/model/node~Node>} Array containing removed nodes.\r\n\t */\r\n\t_removeChildren( index, howMany = 1 ) {\r\n\t\tconst nodes = this._children._removeNodes( index, howMany );\r\n\r\n\t\tfor ( const node of nodes ) {\r\n\t\t\tnode.parent = null;\r\n\t\t}\r\n\r\n\t\treturn nodes;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates an `Element` instance from given plain object (i.e. parsed JSON string).\r\n\t * Converts `Element` children to proper nodes.\r\n\t *\r\n\t * @param {Object} json Plain object to be converted to `Element`.\r\n\t * @returns {module:engine/model/element~Element} `Element` instance created using given plain object.\r\n\t */\r\n\tstatic fromJSON( json ) {\r\n\t\tlet children = null;\r\n\r\n\t\tif ( json.children ) {\r\n\t\t\tchildren = [];\r\n\r\n\t\t\tfor ( const child of json.children ) {\r\n\t\t\t\tif ( child.name ) {\r\n\t\t\t\t\t// If child has name property, it is an Element.\r\n\t\t\t\t\tchildren.push( Element.fromJSON( child ) );\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Otherwise, it is a Text node.\r\n\t\t\t\t\tchildren.push( Text.fromJSON( child ) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn new Element( json.name, json.attributes, children );\r\n\t}\r\n\r\n\t// @if CK_DEBUG_ENGINE // toString() {\r\n\t// @if CK_DEBUG_ENGINE // \treturn `<${ this.rootName || this.name }>`;\r\n\t// @if CK_DEBUG_ENGINE // }\r\n\r\n\t// @if CK_DEBUG_ENGINE // log() {\r\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ModelElement: ' + this );\r\n\t// @if CK_DEBUG_ENGINE // }\r\n\r\n\t// @if CK_DEBUG_ENGINE // logExtended() {\r\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( `ModelElement: ${ this }, ${ this.childCount } children,\r\n\t// @if CK_DEBUG_ENGINE //\t\tattrs: ${ convertMapToStringifiedObject( this.getAttributes() ) }` );\r\n\t// @if CK_DEBUG_ENGINE // }\r\n\r\n\t// @if CK_DEBUG_ENGINE // logAll() {\r\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( '--------------------' );\r\n\t// @if CK_DEBUG_ENGINE //\r\n\t// @if CK_DEBUG_ENGINE // \tthis.logExtended();\r\n\t// @if CK_DEBUG_ENGINE //\tconsole.log( 'List of children:' );\r\n\t// @if CK_DEBUG_ENGINE //\r\n\t// @if CK_DEBUG_ENGINE // \tfor ( const child of this.getChildren() ) {\r\n\t// @if CK_DEBUG_ENGINE // \t\tchild.log();\r\n\t// @if CK_DEBUG_ENGINE // \t}\r\n\t// @if CK_DEBUG_ENGINE // }\r\n\r\n\t// @if CK_DEBUG_ENGINE // printTree( level = 0) {\r\n\t// @if CK_DEBUG_ENGINE // \tlet string = '';\r\n\r\n\t// @if CK_DEBUG_ENGINE // \tstring += '\\t'.repeat( level );\r\n\t// @if CK_DEBUG_ENGINE // \tstring += `<${ this.rootName || this.name }${ convertMapToTags( this.getAttributes() ) }>`;\r\n\r\n\t// @if CK_DEBUG_ENGINE // \tfor ( const child of this.getChildren() ) {\r\n\t// @if CK_DEBUG_ENGINE // \t\tstring += '\\n';\r\n\r\n\t// @if CK_DEBUG_ENGINE // \t\tif ( child.is( 'text' ) ) {\r\n\t// @if CK_DEBUG_ENGINE // \t\t\tconst textAttrs = convertMapToTags( child._attrs );\r\n\r\n\t// @if CK_DEBUG_ENGINE // \t\t\tstring += '\\t'.repeat( level + 1 );\r\n\r\n\t// @if CK_DEBUG_ENGINE // \t\t\tif ( textAttrs !== '' ) {\r\n\t// @if CK_DEBUG_ENGINE // \t\t\t\tstring += `<$text${ textAttrs }>` + child.data + '</$text>';\r\n\t// @if CK_DEBUG_ENGINE // \t\t\t} else {\r\n\t// @if CK_DEBUG_ENGINE // \t\t\t\tstring += child.data;\r\n\t// @if CK_DEBUG_ENGINE // \t\t\t}\r\n\t// @if CK_DEBUG_ENGINE // \t\t} else {\r\n\t// @if CK_DEBUG_ENGINE // \t\t\tstring += child.printTree( level + 1 );\r\n\t// @if CK_DEBUG_ENGINE // \t\t}\r\n\t// @if CK_DEBUG_ENGINE // \t}\r\n\r\n\t// @if CK_DEBUG_ENGINE // \tif ( this.childCount ) {\r\n\t// @if CK_DEBUG_ENGINE // \t\tstring += '\\n' + '\\t'.repeat( level );\r\n\t// @if CK_DEBUG_ENGINE // \t}\r\n\r\n\t// @if CK_DEBUG_ENGINE // \tstring += `</${ this.rootName || this.name }>`;\r\n\r\n\t// @if CK_DEBUG_ENGINE // \treturn string;\r\n\t// @if CK_DEBUG_ENGINE // }\r\n\r\n\t// @if CK_DEBUG_ENGINE // logTree() {\r\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( this.printTree() );\r\n\t// @if CK_DEBUG_ENGINE // }\r\n}\r\n\r\n// Converts strings to Text and non-iterables to arrays.\r\n//\r\n// @param {String|module:engine/model/item~Item|Iterable.<String|module:engine/model/item~Item>}\r\n// @returns {Iterable.<module:engine/model/node~Node>}\r\nfunction normalize( nodes ) {\r\n\t// Separate condition because string is iterable.\r\n\tif ( typeof nodes == 'string' ) {\r\n\t\treturn [ new Text( nodes ) ];\r\n\t}\r\n\r\n\tif ( !isIterable( nodes ) ) {\r\n\t\tnodes = [ nodes ];\r\n\t}\r\n\r\n\t// Array.from to enable .map() on non-arrays.\r\n\treturn Array.from( nodes )\r\n\t\t.map( node => {\r\n\t\t\tif ( typeof node == 'string' ) {\r\n\t\t\t\treturn new Text( node );\r\n\t\t\t}\r\n\r\n\t\t\tif ( node instanceof TextProxy ) {\r\n\t\t\t\treturn new Text( node.data, node.getAttributes() );\r\n\t\t\t}\r\n\r\n\t\t\treturn node;\r\n\t\t} );\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/history\r\n */\r\n\r\n/**\r\n * `History` keeps the track of all the operations applied to the {@link module:engine/model/document~Document document}.\r\n */\r\nexport default class History {\r\n\t/**\r\n\t * Creates an empty History instance.\r\n\t */\r\n\tconstructor() {\r\n\t\t/**\r\n\t\t * Operations added to the history.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @member {Array.<module:engine/model/operation/operation~Operation>} module:engine/model/history~History#_operations\r\n\t\t */\r\n\t\tthis._operations = [];\r\n\r\n\t\t/**\r\n\t\t * Holds an information which {@link module:engine/model/operation/operation~Operation operation} undoes which\r\n\t\t * {@link module:engine/model/operation/operation~Operation operation}.\r\n\t\t *\r\n\t\t * Keys of the map are \"undoing operations\", that is operations that undone some other operations. For each key, the\r\n\t\t * value is an operation that has been undone by the \"undoing operation\".\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Map} module:engine/model/history~History#_undoPairs\r\n\t\t */\r\n\t\tthis._undoPairs = new Map();\r\n\r\n\t\t/**\r\n\t\t * Holds all undone operations.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Set.<module:engine/model/operation/operation~Operation>} module:engine/model/history~History#_undoneOperations\r\n\t\t */\r\n\t\tthis._undoneOperations = new Set();\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an operation to the history.\r\n\t *\r\n\t * @param {module:engine/model/operation/operation~Operation} operation Operation to add.\r\n\t */\r\n\taddOperation( operation ) {\r\n\t\tif ( this._operations.includes( operation ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._operations.push( operation );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns operations added to the history.\r\n\t *\r\n\t * @param {Number} [from=0] Base version from which operations should be returned (inclusive). Defaults to `0`, which means\r\n\t * that operations from the first one will be returned.\r\n\t * @param {Number} [to=Number.POSITIVE_INFINITY] Base version up to which operations should be returned (exclusive).\r\n\t * Defaults to `Number.POSITIVE_INFINITY` which means that operations up to the last one will be returned.\r\n\t * @returns {Iterable.<module:engine/model/operation/operation~Operation>} Operations added to the history.\r\n\t */\r\n\tgetOperations( from = 0, to = Number.POSITIVE_INFINITY ) {\r\n\t\tif ( from < 0 ) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\treturn this._operations.slice( from, to );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns operation from the history that bases on given `baseVersion`.\r\n\t *\r\n\t * @param {Number} baseVersion Base version of the operation to get.\r\n\t * @returns {module:engine/model/operation/operation~Operation|null} Operation with given base version or `null` if\r\n\t * there is no such operation in history.\r\n\t */\r\n\tgetOperation( baseVersion ) {\r\n\t\treturn this._operations[ baseVersion ];\r\n\t}\r\n\r\n\t/**\r\n\t * Marks in history that one operation is an operation that is undoing the other operation. By marking operation this way,\r\n\t * history is keeping more context information about operations, which helps in operational transformation.\r\n\t *\r\n\t * @param {module:engine/model/operation/operation~Operation} undoneOperation Operation which is undone by `undoingOperation`.\r\n\t * @param {module:engine/model/operation/operation~Operation} undoingOperation Operation which undoes `undoneOperation`.\r\n\t */\r\n\tsetOperationAsUndone( undoneOperation, undoingOperation ) {\r\n\t\tthis._undoPairs.set( undoingOperation, undoneOperation );\r\n\t\tthis._undoneOperations.add( undoneOperation );\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether given `operation` is undoing any other operation.\r\n\t *\r\n\t * @param {module:engine/model/operation/operation~Operation} operation Operation to check.\r\n\t * @returns {Boolean} `true` if given `operation` is undoing any other operation, `false` otherwise.\r\n\t */\r\n\tisUndoingOperation( operation ) {\r\n\t\treturn this._undoPairs.has( operation );\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether given `operation` has been undone by any other operation.\r\n\t *\r\n\t * @param {module:engine/model/operation/operation~Operation} operation Operation to check.\r\n\t * @returns {Boolean} `true` if given `operation` has been undone any other operation, `false` otherwise.\r\n\t */\r\n\tisUndoneOperation( operation ) {\r\n\t\treturn this._undoneOperations.has( operation );\r\n\t}\r\n\r\n\t/**\r\n\t * For given `undoingOperation`, returns the operation which has been undone by it.\r\n\t *\r\n\t * @param {module:engine/model/operation/operation~Operation} undoingOperation\r\n\t * @returns {module:engine/model/operation/operation~Operation|undefined} Operation that has been undone by given\r\n\t * `undoingOperation` or `undefined` if given `undoingOperation` is not undoing any other operation.\r\n\t */\r\n\tgetUndoneOperation( undoingOperation ) {\r\n\t\treturn this._undoPairs.get( undoingOperation );\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/liveposition\r\n */\r\n\r\nimport Position from './position';\r\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\r\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\n\r\n/**\r\n * `LivePosition` is a type of {@link module:engine/model/position~Position Position}\r\n * that updates itself as {@link module:engine/model/document~Document document}\r\n * is changed through operations. It may be used as a bookmark.\r\n *\r\n * **Note:** Contrary to {@link module:engine/model/position~Position}, `LivePosition` works only in roots that are\r\n * {@link module:engine/model/rootelement~RootElement}.\r\n * If {@link module:engine/model/documentfragment~DocumentFragment} is passed, error will be thrown.\r\n *\r\n * **Note:** Be very careful when dealing with `LivePosition`. Each `LivePosition` instance bind events that might\r\n * have to be unbound.\r\n * Use {@link module:engine/model/liveposition~LivePosition#detach} whenever you don't need `LivePosition` anymore.\r\n *\r\n * @extends module:engine/model/position~Position\r\n */\r\nexport default class LivePosition extends Position {\r\n\t/**\r\n\t * Creates a live position.\r\n\t *\r\n\t * @see module:engine/model/position~Position\r\n\t * @param {module:engine/model/rootelement~RootElement} root\r\n\t * @param {Array.<Number>} path\r\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness]\r\n\t */\r\n\tconstructor( root, path, stickiness = 'toNone' ) {\r\n\t\tsuper( root, path, stickiness );\r\n\r\n\t\tif ( !this.root.is( 'rootElement' ) ) {\r\n\t\t\t/**\r\n\t\t\t * LivePosition's root has to be an instance of RootElement.\r\n\t\t\t *\r\n\t\t\t * @error liveposition-root-not-rootelement\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'model-liveposition-root-not-rootelement: LivePosition\\'s root has to be an instance of RootElement.',\r\n\t\t\t\troot\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tbindWithDocument.call( this );\r\n\t}\r\n\r\n\t/**\r\n\t * Unbinds all events previously bound by `LivePosition`. Use it whenever you don't need `LivePosition` instance\r\n\t * anymore (i.e. when leaving scope in which it was declared or before re-assigning variable that was\r\n\t * referring to it).\r\n\t */\r\n\tdetach() {\r\n\t\tthis.stopListening();\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this object is of the given.\r\n\t *\r\n\t *\t\tlivePosition.is( 'position' ); // -> true\r\n\t *\t\tlivePosition.is( 'model:position' ); // -> true\r\n\t *\t\tlivePosition.is( 'liveposition' ); // -> true\r\n\t *\t\tlivePosition.is( 'model:livePosition' ); // -> true\r\n\t *\r\n\t *\t\tlivePosition.is( 'view:position' ); // -> false\r\n\t *\t\tlivePosition.is( 'documentSelection' ); // -> false\r\n\t *\r\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\r\n\t *\r\n\t * @param {String} type\r\n\t * @returns {Boolean}\r\n\t */\r\n\tis( type ) {\r\n\t\treturn type == 'livePosition' || type == 'model:livePosition' || super.is( type );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a {@link module:engine/model/position~Position position instance}, which is equal to this live position.\r\n\t *\r\n\t * @returns {module:engine/model/position~Position}\r\n\t */\r\n\ttoPosition() {\r\n\t\treturn new Position( this.root, this.path.slice(), this.stickiness );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a `LivePosition` instance that is equal to position.\r\n\t *\r\n\t * @param {module:engine/model/position~Position} position\r\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness]\r\n\t * @returns {module:engine/model/position~Position}\r\n\t */\r\n\tstatic fromPosition( position, stickiness ) {\r\n\t\treturn new this( position.root, position.path.slice(), stickiness ? stickiness : position.stickiness );\r\n\t}\r\n\r\n\t/**\r\n\t * @static\r\n\t * @protected\r\n\t * @method module:engine/model/liveposition~LivePosition._createAfter\r\n\t * @see module:engine/model/position~Position._createAfter\r\n\t * @param {module:engine/model/node~Node} node\r\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone']\r\n\t * @returns {module:engine/model/liveposition~LivePosition}\r\n\t */\r\n\r\n\t/**\r\n\t * @static\r\n\t * @protected\r\n\t * @method module:engine/model/liveposition~LivePosition._createBefore\r\n\t * @see module:engine/model/position~Position._createBefore\r\n\t * @param {module:engine/model/node~Node} node\r\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone']\r\n\t * @returns {module:engine/model/liveposition~LivePosition}\r\n\t */\r\n\r\n\t/**\r\n\t * @static\r\n\t * @protected\r\n\t * @method module:engine/model/liveposition~LivePosition._createAt\r\n\t * @see module:engine/model/position~Position._createAt\r\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\r\n\t * @param {Number|'end'|'before'|'after'} [offset]\r\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone']\r\n\t * @returns {module:engine/model/liveposition~LivePosition}\r\n\t */\r\n\r\n\t/**\r\n\t * Fired when `LivePosition` instance is changed due to changes on {@link module:engine/model/document~Document}.\r\n\t *\r\n\t * @event module:engine/model/liveposition~LivePosition#change\r\n\t * @param {module:engine/model/position~Position} oldPosition Position equal to this live position before it got changed.\r\n\t */\r\n}\r\n\r\n// Binds this `LivePosition` to the {@link module:engine/model/document~Document document} that owns\r\n// this position's {@link module:engine/model/position~Position#root root}.\r\n//\r\n// @private\r\nfunction bindWithDocument() {\r\n\tthis.listenTo(\r\n\t\tthis.root.document.model,\r\n\t\t'applyOperation',\r\n\t\t( event, args ) => {\r\n\t\t\tconst operation = args[ 0 ];\r\n\r\n\t\t\tif ( !operation.isDocumentOperation ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\ttransform.call( this, operation );\r\n\t\t},\r\n\t\t{ priority: 'low' }\r\n\t);\r\n}\r\n\r\n// Updates this position accordingly to the updates applied to the model. Bases on change events.\r\n//\r\n// @private\r\n// @param {module:engine/model/operation/operation~Operation} operation Executed operation.\r\nfunction transform( operation ) {\r\n\tconst result = this.getTransformedByOperation( operation );\r\n\r\n\tif ( !this.isEqual( result ) ) {\r\n\t\tconst oldPosition = this.toPosition();\r\n\r\n\t\tthis.path = result.path;\r\n\t\tthis.root = result.root;\r\n\r\n\t\tthis.fire( 'change', oldPosition );\r\n\t}\r\n}\r\n\r\nmix( LivePosition, EmitterMixin );\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/liverange\r\n */\r\n\r\nimport Range from './range';\r\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\r\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\r\n\r\n/**\r\n * `LiveRange` is a type of {@link module:engine/model/range~Range Range}\r\n * that updates itself as {@link module:engine/model/document~Document document}\r\n * is changed through operations. It may be used as a bookmark.\r\n *\r\n * **Note:** Be very careful when dealing with `LiveRange`. Each `LiveRange` instance bind events that might\r\n * have to be unbound. Use {@link module:engine/model/liverange~LiveRange#detach detach} whenever you don't need `LiveRange` anymore.\r\n */\r\nexport default class LiveRange extends Range {\r\n\t/**\r\n\t * Creates a live range.\r\n\t *\r\n\t * @see module:engine/model/range~Range\r\n\t */\r\n\tconstructor( start, end ) {\r\n\t\tsuper( start, end );\r\n\r\n\t\tbindWithDocument.call( this );\r\n\t}\r\n\r\n\t/**\r\n\t * Unbinds all events previously bound by `LiveRange`. Use it whenever you don't need `LiveRange` instance\r\n\t * anymore (i.e. when leaving scope in which it was declared or before re-assigning variable that was\r\n\t * referring to it).\r\n\t */\r\n\tdetach() {\r\n\t\tthis.stopListening();\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this object is of the given.\r\n\t *\r\n\t *\t\tliveRange.is( 'range' ); // -> true\r\n\t *\t\tliveRange.is( 'model:range' ); // -> true\r\n\t *\t\tliveRange.is( 'liveRange' ); // -> true\r\n\t *\t\tliveRange.is( 'model:liveRange' ); // -> true\r\n\t *\r\n\t *\t\tliveRange.is( 'view:range' ); // -> false\r\n\t *\t\tliveRange.is( 'documentSelection' ); // -> false\r\n\t *\r\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\r\n\t *\r\n\t * @param {String} type\r\n\t * @returns {Boolean}\r\n\t */\r\n\tis( type ) {\r\n\t\treturn type == 'liveRange' || type == 'model:liveRange' || super.is( type );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a {@link module:engine/model/range~Range range instance} that is equal to this live range.\r\n\t *\r\n\t * @returns {module:engine/model/range~Range}\r\n\t */\r\n\ttoRange() {\r\n\t\treturn new Range( this.start, this.end );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a `LiveRange` instance that is equal to the given range.\r\n\t *\r\n\t * @param {module:engine/model/range~Range} range\r\n\t * @returns {module:engine/model/liverange~LiveRange}\r\n\t */\r\n\tstatic fromRange( range ) {\r\n\t\treturn new LiveRange( range.start, range.end );\r\n\t}\r\n\r\n\t/**\r\n\t * @see module:engine/model/range~Range._createIn\r\n\t * @static\r\n\t * @protected\r\n\t * @method module:engine/model/liverange~LiveRange._createIn\r\n\t * @param {module:engine/model/element~Element} element\r\n\t * @returns {module:engine/model/liverange~LiveRange}\r\n\t */\r\n\r\n\t/**\r\n\t * @see module:engine/model/range~Range._createOn\r\n\t * @static\r\n\t * @protected\r\n\t * @method module:engine/model/liverange~LiveRange._createOn\r\n\t * @param {module:engine/model/element~Element} element\r\n\t * @returns {module:engine/model/liverange~LiveRange}\r\n\t */\r\n\r\n\t/**\r\n\t * @see module:engine/model/range~Range._createFromPositionAndShift\r\n\t * @static\r\n\t * @protected\r\n\t * @method module:engine/model/liverange~LiveRange._createFromPositionAndShift\r\n\t * @param {module:engine/model/position~Position} position\r\n\t * @param {Number} shift\r\n\t * @returns {module:engine/model/liverange~LiveRange}\r\n\t */\r\n\r\n\t/**\r\n\t * Fired when `LiveRange` instance boundaries have changed due to changes in the\r\n\t * {@link module:engine/model/document~Document document}.\r\n\t *\r\n\t * @event change:range\r\n\t * @param {module:engine/model/range~Range} oldRange Range with start and end position equal to start and end position of this live\r\n\t * range before it got changed.\r\n\t * @param {Object} data Object with additional information about the change.\r\n\t * @param {module:engine/model/position~Position|null} data.deletionPosition Source position for remove and merge changes.\r\n\t * Available if the range was moved to the graveyard root, `null` otherwise.\r\n\t */\r\n\r\n\t/**\r\n\t * Fired when `LiveRange` instance boundaries have not changed after a change in {@link module:engine/model/document~Document document}\r\n\t * but the change took place inside the range, effectively changing its content.\r\n\t *\r\n\t * @event change:content\r\n\t * @param {module:engine/model/range~Range} range Range with start and end position equal to start and end position of\r\n\t * change range.\r\n\t * @param {Object} data Object with additional information about the change.\r\n\t * @param {null} data.deletionPosition Due to the nature of this event, this property is always set to `null`. It is passed\r\n\t * for compatibility with the {@link module:engine/model/liverange~LiveRange#event:change:range} event.\r\n\t */\r\n}\r\n\r\n// Binds this `LiveRange` to the {@link module:engine/model/document~Document document}\r\n// that owns this range's {@link module:engine/model/range~Range#root root}.\r\n//\r\n// @private\r\nfunction bindWithDocument() {\r\n\tthis.listenTo(\r\n\t\tthis.root.document.model,\r\n\t\t'applyOperation',\r\n\t\t( event, args ) => {\r\n\t\t\tconst operation = args[ 0 ];\r\n\r\n\t\t\tif ( !operation.isDocumentOperation ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\ttransform.call( this, operation );\r\n\t\t},\r\n\t\t{ priority: 'low' }\r\n\t);\r\n}\r\n\r\n// Updates this range accordingly to the updates applied to the model. Bases on change events.\r\n//\r\n// @private\r\n// @param {module:engine/model/operation/operation~Operation} operation Executed operation.\r\nfunction transform( operation ) {\r\n\t// Transform the range by the operation. Join the result ranges if needed.\r\n\tconst ranges = this.getTransformedByOperation( operation );\r\n\tconst result = Range._createFromRanges( ranges );\r\n\r\n\tconst boundariesChanged = !result.isEqual( this );\r\n\tconst contentChanged = doesOperationChangeRangeContent( this, operation );\r\n\r\n\tlet deletionPosition = null;\r\n\r\n\tif ( boundariesChanged ) {\r\n\t\t// If range boundaries have changed, fire `change:range` event.\r\n\t\t//\r\n\t\tif ( result.root.rootName == '$graveyard' ) {\r\n\t\t\t// If the range was moved to the graveyard root, set `deletionPosition`.\r\n\t\t\tif ( operation.type == 'remove' ) {\r\n\t\t\t\tdeletionPosition = operation.sourcePosition;\r\n\t\t\t} else {\r\n\t\t\t\t// Merge operation.\r\n\t\t\t\tdeletionPosition = operation.deletionPosition;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst oldRange = this.toRange();\r\n\r\n\t\tthis.start = result.start;\r\n\t\tthis.end = result.end;\r\n\r\n\t\tthis.fire( 'change:range', oldRange, { deletionPosition } );\r\n\t} else if ( contentChanged ) {\r\n\t\t// If range boundaries have not changed, but there was change inside the range, fire `change:content` event.\r\n\t\tthis.fire( 'change:content', this.toRange(), { deletionPosition } );\r\n\t}\r\n}\r\n\r\n// Checks whether given operation changes something inside the range (even if it does not change boundaries).\r\n//\r\n// @private\r\n// @param {module:engine/model/range~Range} range Range to check.\r\n// @param {module:engine/model/operation/operation~Operation} operation Executed operation.\r\n// @returns {Boolean}\r\nfunction doesOperationChangeRangeContent( range, operation ) {\r\n\tswitch ( operation.type ) {\r\n\t\tcase 'insert':\r\n\t\t\treturn range.containsPosition( operation.position );\r\n\t\tcase 'move':\r\n\t\tcase 'remove':\r\n\t\tcase 'reinsert':\r\n\t\tcase 'merge':\r\n\t\t\treturn range.containsPosition( operation.sourcePosition ) ||\r\n\t\t\t\trange.start.isEqual( operation.sourcePosition ) ||\r\n\t\t\t\trange.containsPosition( operation.targetPosition );\r\n\t\tcase 'split':\r\n\t\t\treturn range.containsPosition( operation.splitPosition ) || range.containsPosition( operation.insertionPosition );\r\n\t}\r\n\r\n\treturn false;\r\n}\r\n\r\nmix( LiveRange, EmitterMixin );\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/markercollection\r\n */\r\n\r\nimport LiveRange from './liverange';\r\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\r\n\r\n/**\r\n * The collection of all {@link module:engine/model/markercollection~Marker markers} attached to the document.\r\n * It lets you {@link module:engine/model/markercollection~MarkerCollection#get get} markers or track them using\r\n * {@link module:engine/model/markercollection~MarkerCollection#event:update} event.\r\n *\r\n * To create, change or remove makers use {@link module:engine/model/writer~Writer model writers'} methods:\r\n * {@link module:engine/model/writer~Writer#addMarker} or {@link module:engine/model/writer~Writer#removeMarker}. Since\r\n * the writer is the only proper way to change the data model it is not possible to change markers directly using this\r\n * collection. All markers created by the writer will be automatically added to this collection.\r\n *\r\n * By default there is one marker collection available as {@link module:engine/model/model~Model#markers model property}.\r\n *\r\n * @see module:engine/model/markercollection~Marker\r\n */\r\nexport default class MarkerCollection {\r\n\t/**\r\n\t * Creates a markers collection.\r\n\t */\r\n\tconstructor() {\r\n\t\t/**\r\n\t\t * Stores {@link ~Marker markers} added to the collection.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Map} #_markers\r\n\t\t */\r\n\t\tthis._markers = new Map();\r\n\t}\r\n\r\n\t/**\r\n\t * Iterable interface.\r\n\t *\r\n\t * Iterates over all {@link ~Marker markers} added to the collection.\r\n\t *\r\n\t * @returns {Iterable}\r\n\t */\r\n\t[ Symbol.iterator ]() {\r\n\t\treturn this._markers.values();\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if marker with given `markerName` is in the collection.\r\n\t *\r\n\t * @param {String} markerName Marker name.\r\n\t * @returns {Boolean} `true` if marker with given `markerName` is in the collection, `false` otherwise.\r\n\t */\r\n\thas( markerName ) {\r\n\t\treturn this._markers.has( markerName );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns {@link ~Marker marker} with given `markerName`.\r\n\t *\r\n\t * @param {String} markerName Name of marker to get.\r\n\t * @returns {module:engine/model/markercollection~Marker|null} Marker with given name or `null` if such marker was\r\n\t * not added to the collection.\r\n\t */\r\n\tget( markerName ) {\r\n\t\treturn this._markers.get( markerName ) || null;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and adds a {@link ~Marker marker} to the `MarkerCollection` with given name on given\r\n\t * {@link module:engine/model/range~Range range}.\r\n\t *\r\n\t * If `MarkerCollection` already had a marker with given name (or {@link ~Marker marker} was passed), the marker in\r\n\t * collection is updated and {@link module:engine/model/markercollection~MarkerCollection#event:update} event is fired\r\n\t * but only if there was a change (marker range or {@link module:engine/model/markercollection~Marker#managedUsingOperations}\r\n\t * flag has changed.\r\n\t *\r\n\t * @protected\r\n\t * @fires module:engine/model/markercollection~MarkerCollection#event:update\r\n\t * @param {String|module:engine/model/markercollection~Marker} markerOrName Name of marker to set or marker instance to update.\r\n\t * @param {module:engine/model/range~Range} range Marker range.\r\n\t * @param {Boolean} [managedUsingOperations=false] Specifies whether the marker is managed using operations.\r\n\t * @param {Boolean} [affectsData=false] Specifies whether the marker affects the data produced by the data pipeline\r\n\t * (is persisted in the editor's data).\r\n\t * @returns {module:engine/model/markercollection~Marker} `Marker` instance which was added or updated.\r\n\t */\r\n\t_set( markerOrName, range, managedUsingOperations = false, affectsData = false ) {\r\n\t\tconst markerName = markerOrName instanceof Marker ? markerOrName.name : markerOrName;\r\n\t\tconst oldMarker = this._markers.get( markerName );\r\n\r\n\t\tif ( oldMarker ) {\r\n\t\t\tconst oldRange = oldMarker.getRange();\r\n\t\t\tlet hasChanged = false;\r\n\r\n\t\t\tif ( !oldRange.isEqual( range ) ) {\r\n\t\t\t\toldMarker._attachLiveRange( LiveRange.fromRange( range ) );\r\n\t\t\t\thasChanged = true;\r\n\t\t\t}\r\n\r\n\t\t\tif ( managedUsingOperations != oldMarker.managedUsingOperations ) {\r\n\t\t\t\toldMarker._managedUsingOperations = managedUsingOperations;\r\n\t\t\t\thasChanged = true;\r\n\t\t\t}\r\n\r\n\t\t\tif ( typeof affectsData === 'boolean' && affectsData != oldMarker.affectsData ) {\r\n\t\t\t\toldMarker._affectsData = affectsData;\r\n\t\t\t\thasChanged = true;\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasChanged ) {\r\n\t\t\t\tthis.fire( 'update:' + markerName, oldMarker, oldRange, range );\r\n\t\t\t}\r\n\r\n\t\t\treturn oldMarker;\r\n\t\t}\r\n\r\n\t\tconst liveRange = LiveRange.fromRange( range );\r\n\t\tconst marker = new Marker( markerName, liveRange, managedUsingOperations, affectsData );\r\n\r\n\t\tthis._markers.set( markerName, marker );\r\n\t\tthis.fire( 'update:' + markerName, marker, null, range );\r\n\r\n\t\treturn marker;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes given {@link ~Marker marker} or a marker with given name from the `MarkerCollection`.\r\n\t *\r\n\t * @protected\r\n\t * @fires module:engine/model/markercollection~MarkerCollection#event:update\r\n\t * @param {String} markerOrName Marker or name of a marker to remove.\r\n\t * @returns {Boolean} `true` if marker was found and removed, `false` otherwise.\r\n\t */\r\n\t_remove( markerOrName ) {\r\n\t\tconst markerName = markerOrName instanceof Marker ? markerOrName.name : markerOrName;\r\n\t\tconst oldMarker = this._markers.get( markerName );\r\n\r\n\t\tif ( oldMarker ) {\r\n\t\t\tthis._markers.delete( markerName );\r\n\t\t\tthis.fire( 'update:' + markerName, oldMarker, oldMarker.getRange(), null );\r\n\r\n\t\t\tthis._destroyMarker( oldMarker );\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Fires an {@link module:engine/model/markercollection~MarkerCollection#event:update} event for the given {@link ~Marker marker}\r\n\t * but does not change the marker. Useful to force {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher downcast\r\n\t * conversion} for the marker.\r\n\t *\r\n\t * @protected\r\n\t * @fires module:engine/model/markercollection~MarkerCollection#event:update\r\n\t * @param {String} markerOrName Marker or name of a marker to refresh.\r\n\t */\r\n\t_refresh( markerOrName ) {\r\n\t\tconst markerName = markerOrName instanceof Marker ? markerOrName.name : markerOrName;\r\n\t\tconst marker = this._markers.get( markerName );\r\n\r\n\t\tif ( !marker ) {\r\n\t\t\tthrow new CKEditorError( 'markercollection-refresh-marker-not-exists: Marker with provided name does not exists.', this );\r\n\t\t}\r\n\r\n\t\tconst range = marker.getRange();\r\n\r\n\t\tthis.fire( 'update:' + markerName, marker, range, range, marker.managedUsingOperations, marker.affectsData );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns iterator that iterates over all markers, which ranges contain given {@link module:engine/model/position~Position position}.\r\n\t *\r\n\t * @param {module:engine/model/position~Position} position\r\n\t * @returns {Iterable.<module:engine/model/markercollection~Marker>}\r\n\t */\r\n\t* getMarkersAtPosition( position ) {\r\n\t\tfor ( const marker of this ) {\r\n\t\t\tif ( marker.getRange().containsPosition( position ) ) {\r\n\t\t\t\tyield marker;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns iterator that iterates over all markers, which intersects with given {@link module:engine/model/range~Range range}.\r\n\t *\r\n\t * @param {module:engine/model/range~Range} range\r\n\t * @returns {Iterable.<module:engine/model/markercollection~Marker>}\r\n\t */\r\n\t* getMarkersIntersectingRange( range ) {\r\n\t\tfor ( const marker of this ) {\r\n\t\t\tif ( marker.getRange().getIntersection( range ) !== null ) {\r\n\t\t\t\tyield marker;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys marker collection and all markers inside it.\r\n\t */\r\n\tdestroy() {\r\n\t\tfor ( const marker of this._markers.values() ) {\r\n\t\t\tthis._destroyMarker( marker );\r\n\t\t}\r\n\r\n\t\tthis._markers = null;\r\n\r\n\t\tthis.stopListening();\r\n\t}\r\n\r\n\t/**\r\n\t * Iterates over all markers that starts with given `prefix`.\r\n\t *\r\n\t *\t\tconst markerFooA = markersCollection.set( 'foo:a', rangeFooA );\r\n\t *\t\tconst markerFooB = markersCollection.set( 'foo:b', rangeFooB );\r\n\t *\t\tconst markerBarA = markersCollection.set( 'bar:a', rangeBarA );\r\n\t *\t\tconst markerFooBarA = markersCollection.set( 'foobar:a', rangeFooBarA );\r\n\t *\t\tArray.from( markersCollection.getMarkersGroup( 'foo' ) ); // [ markerFooA, markerFooB ]\r\n\t *\t\tArray.from( markersCollection.getMarkersGroup( 'a' ) ); // []\r\n\t *\r\n\t * @param prefix\r\n\t * @returns {Iterable.<module:engine/model/markercollection~Marker>}\r\n\t */\r\n\t* getMarkersGroup( prefix ) {\r\n\t\tfor ( const marker of this._markers.values() ) {\r\n\t\t\tif ( marker.name.startsWith( prefix + ':' ) ) {\r\n\t\t\t\tyield marker;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys the marker.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/model/markercollection~Marker} marker Marker to destroy.\r\n\t */\r\n\t_destroyMarker( marker ) {\r\n\t\tmarker.stopListening();\r\n\t\tmarker._detachLiveRange();\r\n\t}\r\n\r\n\t/**\r\n\t * Fired whenever marker is added, updated or removed from `MarkerCollection`.\r\n\t *\r\n\t * @event update\r\n\t * @param {module:engine/model/markercollection~Marker} marker Updated Marker.\r\n\t * @param {module:engine/model/range~Range|null} oldRange Marker range before the update. When is not defined it\r\n\t * means that marker is just added.\r\n\t * @param {module:engine/model/range~Range|null} newRange Marker range after update. When is not defined it\r\n\t * means that marker is just removed.\r\n\t */\r\n}\r\n\r\nmix( MarkerCollection, EmitterMixin );\r\n\r\n/**\r\n * `Marker` is a continuous parts of model (like a range), is named and represent some kind of information about marked\r\n * part of model document. In contrary to {@link module:engine/model/node~Node nodes}, which are building blocks of\r\n * model document tree, markers are not stored directly in document tree but in\r\n * {@link module:engine/model/model~Model#markers model markers' collection}. Still, they are document data, by giving\r\n * additional meaning to the part of a model document between marker start and marker end.\r\n *\r\n * In this sense, markers are similar to adding and converting attributes on nodes. The difference is that attribute is\r\n * connected with a given node (e.g. a character is bold no matter if it gets moved or content around it changes).\r\n * Markers on the other hand are continuous ranges and are characterized by their start and end position. This means that\r\n * any character in the marker is marked by the marker. For example, if a character is moved outside of marker it stops being\r\n * \"special\" and the marker is shrunk. Similarly, when a character is moved into the marker from other place in document\r\n * model, it starts being \"special\" and the marker is enlarged.\r\n *\r\n * Another upside of markers is that finding marked part of document is fast and easy. Using attributes to mark some nodes\r\n * and then trying to find that part of document would require traversing whole document tree. Marker gives instant access\r\n * to the range which it is marking at the moment.\r\n *\r\n * Markers are built from a name and a range.\r\n *\r\n * Range of the marker is updated automatically when document changes, using\r\n * {@link module:engine/model/liverange~LiveRange live range} mechanism.\r\n *\r\n * Name is used to group and identify markers. Names have to be unique, but markers can be grouped by\r\n * using common prefixes, separated with `:`, for example: `user:john` or `search:3`. That's useful in term of creating\r\n * namespaces for custom elements (e.g. comments, highlights). You can use this prefixes in\r\n * {@link module:engine/model/markercollection~MarkerCollection#event:update} listeners to listen on changes in a group of markers.\r\n * For instance: `model.markers.on( 'update:user', callback );` will be called whenever any `user:*` markers changes.\r\n *\r\n * There are two types of markers.\r\n *\r\n * 1. Markers managed directly, without using operations. They are added directly by {@link module:engine/model/writer~Writer}\r\n * to the {@link module:engine/model/markercollection~MarkerCollection} without any additional mechanism. They can be used\r\n * as bookmarks or visual markers. They are great for showing results of the find, or select link when the focus is in the input.\r\n *\r\n * 1. Markers managed using operations. These markers are also stored in {@link module:engine/model/markercollection~MarkerCollection}\r\n * but changes in these markers is managed the same way all other changes in the model structure - using operations.\r\n * Therefore, they are handled in the undo stack and synchronized between clients if the collaboration plugin is enabled.\r\n * This type of markers is useful for solutions like spell checking or comments.\r\n *\r\n * Both type of them should be added / updated by {@link module:engine/model/writer~Writer#addMarker}\r\n * and removed by {@link module:engine/model/writer~Writer#removeMarker} methods.\r\n *\r\n *\t\tmodel.change( ( writer ) => {\r\n * \t\t\tconst marker = writer.addMarker( name, { range, usingOperation: true } );\r\n *\r\n * \t\t\t// ...\r\n *\r\n * \t\t\twriter.removeMarker( marker );\r\n *\t\t} );\r\n *\r\n * See {@link module:engine/model/writer~Writer} to find more examples.\r\n *\r\n * Since markers need to track change in the document, for efficiency reasons, it is best to create and keep as little\r\n * markers as possible and remove them as soon as they are not needed anymore.\r\n *\r\n * Markers can be downcasted and upcasted.\r\n *\r\n * Markers downcast happens on {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:addMarker} and\r\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:removeMarker} events.\r\n * Use {@link module:engine/conversion/downcasthelpers downcast converters} or attach a custom converter to mentioned events.\r\n * For {@link module:engine/controller/datacontroller~DataController data pipeline}, marker should be downcasted to an element.\r\n * Then, it can be upcasted back to a marker. Again, use {@link module:engine/conversion/upcasthelpers upcast converters} or\r\n * attach a custom converter to {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element}.\r\n *\r\n * `Marker` instances are created and destroyed only by {@link ~MarkerCollection MarkerCollection}.\r\n */\r\nclass Marker {\r\n\t/**\r\n\t * Creates a marker instance.\r\n\t *\r\n\t * @param {String} name Marker name.\r\n\t * @param {module:engine/model/liverange~LiveRange} liveRange Range marked by the marker.\r\n\t * @param {Boolean} managedUsingOperations Specifies whether the marker is managed using operations.\r\n\t * @param {Boolean} affectsData Specifies whether the marker affects the data produced by the data pipeline\r\n\t * (is persisted in the editor's data).\r\n\t */\r\n\tconstructor( name, liveRange, managedUsingOperations, affectsData ) {\r\n\t\t/**\r\n\t\t * Marker's name.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @type {String}\r\n\t\t */\r\n\t\tthis.name = name;\r\n\r\n\t\t/**\r\n\t\t * Range marked by the marker.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @member {module:engine/model/liverange~LiveRange}\r\n\t\t */\r\n\t\tthis._liveRange = this._attachLiveRange( liveRange );\r\n\r\n\t\t/**\r\n\t\t * Flag indicates if the marker is managed using operations or not.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Boolean}\r\n\t\t */\r\n\t\tthis._managedUsingOperations = managedUsingOperations;\r\n\r\n\t\t/**\r\n\t\t * Specifies whether the marker affects the data produced by the data pipeline\r\n\t\t * (is persisted in the editor's data).\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Boolean}\r\n\t\t */\r\n\t\tthis._affectsData = affectsData;\r\n\t}\r\n\r\n\t/**\r\n\t * A value indicating if the marker is managed using operations.\r\n\t * See {@link ~Marker marker class description} to learn more about marker types.\r\n\t * See {@link module:engine/model/writer~Writer#addMarker}.\r\n\t *\r\n\t * @returns {Boolean}\r\n\t */\r\n\tget managedUsingOperations() {\r\n\t\tif ( !this._liveRange ) {\r\n\t\t\tthrow new CKEditorError( 'marker-destroyed: Cannot use a destroyed marker instance.', this );\r\n\t\t}\r\n\r\n\t\treturn this._managedUsingOperations;\r\n\t}\r\n\r\n\t/**\r\n\t * A value indicating if the marker changes the data.\r\n\t *\r\n\t * @returns {Boolean}\r\n\t */\r\n\tget affectsData() {\r\n\t\tif ( !this._liveRange ) {\r\n\t\t\tthrow new CKEditorError( 'marker-destroyed: Cannot use a destroyed marker instance.', this );\r\n\t\t}\r\n\r\n\t\treturn this._affectsData;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current marker start position.\r\n\t *\r\n\t * @returns {module:engine/model/position~Position}\r\n\t */\r\n\tgetStart() {\r\n\t\tif ( !this._liveRange ) {\r\n\t\t\tthrow new CKEditorError( 'marker-destroyed: Cannot use a destroyed marker instance.', this );\r\n\t\t}\r\n\r\n\t\treturn this._liveRange.start.clone();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current marker end position.\r\n\t *\r\n\t * @returns {module:engine/model/position~Position}\r\n\t */\r\n\tgetEnd() {\r\n\t\tif ( !this._liveRange ) {\r\n\t\t\tthrow new CKEditorError( 'marker-destroyed: Cannot use a destroyed marker instance.', this );\r\n\t\t}\r\n\r\n\t\treturn this._liveRange.end.clone();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a range that represents the current state of the marker.\r\n\t *\r\n\t * Keep in mind that returned value is a {@link module:engine/model/range~Range Range}, not a\r\n\t * {@link module:engine/model/liverange~LiveRange LiveRange}. This means that it is up-to-date and relevant only\r\n\t * until next model document change. Do not store values returned by this method. Instead, store {@link ~Marker#name}\r\n\t * and get `Marker` instance from {@link module:engine/model/markercollection~MarkerCollection MarkerCollection} every\r\n\t * time there is a need to read marker properties. This will guarantee that the marker has not been removed and\r\n\t * that it's data is up-to-date.\r\n\t *\r\n\t * @returns {module:engine/model/range~Range}\r\n\t */\r\n\tgetRange() {\r\n\t\tif ( !this._liveRange ) {\r\n\t\t\tthrow new CKEditorError( 'marker-destroyed: Cannot use a destroyed marker instance.', this );\r\n\t\t}\r\n\r\n\t\treturn this._liveRange.toRange();\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this object is of the given.\r\n\t *\r\n\t *\t\tmarker.is( 'marker' ); // -> true\r\n\t *\t\tmarker.is( 'model:marker' ); // -> true\r\n\t *\r\n\t *\t\tmarker.is( 'view:element' ); // -> false\r\n\t *\t\tmarker.is( 'documentSelection' ); // -> false\r\n\t *\r\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\r\n\t *\r\n\t * @param {String} type\r\n\t * @returns {Boolean}\r\n\t */\r\n\tis( type ) {\r\n\t\treturn type == 'marker' || type == 'model:marker';\r\n\t}\r\n\r\n\t/**\r\n\t * Binds new live range to the marker and detach the old one if is attached.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/model/liverange~LiveRange} liveRange Live range to attach\r\n\t * @returns {module:engine/model/liverange~LiveRange} Attached live range.\r\n\t */\r\n\t_attachLiveRange( liveRange ) {\r\n\t\tif ( this._liveRange ) {\r\n\t\t\tthis._detachLiveRange();\r\n\t\t}\r\n\r\n\t\t// Delegating does not work with namespaces. Alternatively, we could delegate all events (using `*`).\r\n\t\tliveRange.delegate( 'change:range' ).to( this );\r\n\t\tliveRange.delegate( 'change:content' ).to( this );\r\n\r\n\t\tthis._liveRange = liveRange;\r\n\r\n\t\treturn liveRange;\r\n\t}\r\n\r\n\t/**\r\n\t * Unbinds and destroys currently attached live range.\r\n\t *\r\n\t * @protected\r\n\t */\r\n\t_detachLiveRange() {\r\n\t\tthis._liveRange.stopDelegating( 'change:range', this );\r\n\t\tthis._liveRange.stopDelegating( 'change:content', this );\r\n\t\tthis._liveRange.detach();\r\n\t\tthis._liveRange = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Fired whenever {@link ~Marker#_liveRange marker range} is changed due to changes on {@link module:engine/model/document~Document}.\r\n\t * This is a delegated {@link module:engine/model/liverange~LiveRange#event:change:range LiveRange change:range event}.\r\n\t *\r\n\t * When marker is removed from {@link module:engine/model/markercollection~MarkerCollection MarkerCollection},\r\n\t * all event listeners listening to it should be removed. It is best to do it on\r\n\t * {@link module:engine/model/markercollection~MarkerCollection#event:update MarkerCollection update event}.\r\n\t *\r\n\t * @see module:engine/model/liverange~LiveRange#event:change:range\r\n\t * @event change:range\r\n\t * @param {module:engine/model/range~Range} oldRange\r\n\t * @param {Object} data\r\n\t */\r\n\r\n\t/**\r\n\t * Fired whenever change on {@link module:engine/model/document~Document} is done inside {@link ~Marker#_liveRange marker range}.\r\n\t * This is a delegated {@link module:engine/model/liverange~LiveRange#event:change:content LiveRange change:content event}.\r\n\t *\r\n\t * When marker is removed from {@link module:engine/model/markercollection~MarkerCollection MarkerCollection},\r\n\t * all event listeners listening to it should be removed. It is best to do it on\r\n\t * {@link module:engine/model/markercollection~MarkerCollection#event:update MarkerCollection update event}.\r\n\t *\r\n\t * @see module:engine/model/liverange~LiveRange#event:change:content\r\n\t * @event change:content\r\n\t * @param {module:engine/model/range~Range} oldRange\r\n\t * @param {Object} data\r\n\t */\r\n}\r\n\r\nmix( Marker, EmitterMixin );\r\n\r\n/**\r\n * Cannot use a {@link module:engine/model/markercollection~MarkerCollection#destroy destroyed marker} instance.\r\n *\r\n * @error marker-destroyed\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/model\r\n */\r\n\r\nimport Batch from './batch';\r\nimport Writer from './writer';\r\nimport Schema from './schema';\r\nimport Document from './document';\r\nimport MarkerCollection from './markercollection';\r\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\r\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\r\nimport ModelElement from './element';\r\nimport ModelRange from './range';\r\nimport ModelPosition from './position';\r\nimport ModelSelection from './selection';\r\nimport OperationFactory from './operation/operationfactory';\r\n\r\nimport insertContent from './utils/insertcontent';\r\nimport deleteContent from './utils/deletecontent';\r\nimport modifySelection from './utils/modifyselection';\r\nimport getSelectedContent from './utils/getselectedcontent';\r\nimport { injectSelectionPostFixer } from './utils/selection-post-fixer';\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\n\r\n// @if CK_DEBUG_ENGINE // const { dumpTrees } = require( '../dev-utils/utils' );\r\n// @if CK_DEBUG_ENGINE // const { OperationReplayer } = require( '../dev-utils/operationreplayer' ).default;\r\n\r\n/**\r\n * Editor's data model. Read about the model in the\r\n * {@glink framework/guides/architecture/editing-engine engine architecture guide}.\r\n *\r\n * @mixes module:utils/observablemixin~ObservableMixin\r\n */\r\nexport default class Model {\r\n\tconstructor() {\r\n\t\t/**\r\n\t\t * Model's marker collection.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/model/markercollection~MarkerCollection}\r\n\t\t */\r\n\t\tthis.markers = new MarkerCollection();\r\n\r\n\t\t/**\r\n\t\t * Model's document.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/model/document~Document}\r\n\t\t */\r\n\t\tthis.document = new Document( this );\r\n\r\n\t\t/**\r\n\t\t * Model's schema.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/model/schema~Schema}\r\n\t\t */\r\n\t\tthis.schema = new Schema();\r\n\r\n\t\t/**\r\n\t\t * All callbacks added by {@link module:engine/model/model~Model#change} or\r\n\t\t * {@link module:engine/model/model~Model#enqueueChange} methods waiting to be executed.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {Array.<Function>}\r\n\t\t */\r\n\t\tthis._pendingChanges = [];\r\n\r\n\t\t/**\r\n\t\t * The last created and currently used writer instance.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {module:engine/model/writer~Writer}\r\n\t\t */\r\n\t\tthis._currentWriter = null;\r\n\r\n\t\t[ 'insertContent', 'deleteContent', 'modifySelection', 'getSelectedContent', 'applyOperation' ]\r\n\t\t\t.forEach( methodName => this.decorate( methodName ) );\r\n\r\n\t\t// Adding operation validation with `highest` priority, so it is called before any other feature would like\r\n\t\t// to do anything with the operation. If the operation has incorrect parameters it should throw on the earliest occasion.\r\n\t\tthis.on( 'applyOperation', ( evt, args ) => {\r\n\t\t\tconst operation = args[ 0 ];\r\n\r\n\t\t\toperation._validate();\r\n\t\t}, { priority: 'highest' } );\r\n\r\n\t\t// Register some default abstract entities.\r\n\t\tthis.schema.register( '$root', {\r\n\t\t\tisLimit: true\r\n\t\t} );\r\n\t\tthis.schema.register( '$block', {\r\n\t\t\tallowIn: '$root',\r\n\t\t\tisBlock: true\r\n\t\t} );\r\n\t\tthis.schema.register( '$text', {\r\n\t\t\tallowIn: '$block',\r\n\t\t\tisInline: true\r\n\t\t} );\r\n\t\tthis.schema.register( '$clipboardHolder', {\r\n\t\t\tallowContentOf: '$root',\r\n\t\t\tisLimit: true\r\n\t\t} );\r\n\t\tthis.schema.extend( '$text', { allowIn: '$clipboardHolder' } );\r\n\r\n\t\t// An element needed by the `upcastElementToMarker` converter.\r\n\t\t// This element temporarily represents a marker boundary during the conversion process and is removed\r\n\t\t// at the end of the conversion. `UpcastDispatcher` or at least `Conversion` class looks like a\r\n\t\t// better place for this registration but both know nothing about `Schema`.\r\n\t\tthis.schema.register( '$marker' );\r\n\t\tthis.schema.addChildCheck( ( context, childDefinition ) => {\r\n\t\t\tif ( childDefinition.name === '$marker' ) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tinjectSelectionPostFixer( this );\r\n\r\n\t\t// @if CK_DEBUG_ENGINE // this.on( 'applyOperation', () => {\r\n\t\t// @if CK_DEBUG_ENGINE // \tdumpTrees( this.document, this.document.version );\r\n\t\t// @if CK_DEBUG_ENGINE // }, { priority: 'lowest' } );\r\n\t}\r\n\r\n\t/**\r\n\t * The `change()` method is the primary way of changing the model. You should use it to modify all document nodes\r\n\t * (including detached nodes – i.e. nodes not added to the {@link module:engine/model/model~Model#document model document}),\r\n\t * the {@link module:engine/model/document~Document#selection document's selection}, and\r\n\t * {@link module:engine/model/model~Model#markers model markers}.\r\n\t *\r\n\t *\t\tmodel.change( writer => {\r\n\t *\t\t\twriter.insertText( 'foo', paragraph, 'end' );\r\n\t *\t\t} );\r\n\t *\r\n\t * All changes inside the change block use the same {@link module:engine/model/batch~Batch} so they are combined\r\n\t * into a single undo step.\r\n\t *\r\n\t *\t\tmodel.change( writer => {\r\n\t *\t\t\twriter.insertText( 'foo', paragraph, 'end' ); // foo.\r\n\t *\r\n\t *\t\t\tmodel.change( writer => {\r\n\t *\t\t\t\twriter.insertText( 'bar', paragraph, 'end' ); // foobar.\r\n\t *\t\t\t} );\r\n\t *\r\n\t * \t\t\twriter.insertText( 'bom', paragraph, 'end' ); // foobarbom.\r\n\t *\t\t} );\r\n\t *\r\n\t * The callback of the `change()` block is executed synchronously.\r\n\t *\r\n\t * You can also return a value from the change block.\r\n\t *\r\n\t *\t\tconst img = model.change( writer => {\r\n\t *\t\t\treturn writer.createElement( 'img' );\r\n\t *\t\t} );\r\n\t *\r\n\t * @see #enqueueChange\r\n\t * @param {Function} callback Callback function which may modify the model.\r\n\t * @returns {*} Value returned by the callback.\r\n\t */\r\n\tchange( callback ) {\r\n\t\ttry {\r\n\t\t\tif ( this._pendingChanges.length === 0 ) {\r\n\t\t\t\t// If this is the outermost block, create a new batch and start `_runPendingChanges` execution flow.\r\n\t\t\t\tthis._pendingChanges.push( { batch: new Batch(), callback } );\r\n\r\n\t\t\t\treturn this._runPendingChanges()[ 0 ];\r\n\t\t\t} else {\r\n\t\t\t\t// If this is not the outermost block, just execute the callback.\r\n\t\t\t\treturn callback( this._currentWriter );\r\n\t\t\t}\r\n\t\t} catch ( err ) {\r\n\t\t\t// @if CK_DEBUG // throw err;\r\n\t\t\t/* istanbul ignore next */\r\n\t\t\tCKEditorError.rethrowUnexpectedError( err, this );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The `enqueueChange()` method performs similar task as the {@link #change `change()` method}, with two major differences.\r\n\t *\r\n\t * First, the callback of `enqueueChange()` is executed when all other enqueued changes are done. It might be executed\r\n\t * immediately if it is not nested in any other change block, but if it is nested in another (enqueue)change block,\r\n\t * it will be delayed and executed after the outermost block.\r\n\t *\r\n\t *\t\tmodel.change( writer => {\r\n\t *\t\t\tconsole.log( 1 );\r\n\t *\r\n\t *\t\t\tmodel.enqueueChange( writer => {\r\n\t *\t\t\t\tconsole.log( 2 );\r\n\t *\t\t\t} );\r\n\t *\r\n\t * \t\t\tconsole.log( 3 );\r\n\t *\t\t} ); // Will log: 1, 3, 2.\r\n\t *\r\n\t * Second, it lets you define the {@link module:engine/model/batch~Batch} into which you want to add your changes.\r\n\t * By default, a new batch is created. In the sample above, `change` and `enqueueChange` blocks use a different\r\n\t * batch (and different {@link module:engine/model/writer~Writer} since each of them operates on the separate batch).\r\n\t *\r\n\t * When using the `enqueueChange()` block you can also add some changes to the batch you used before.\r\n\t *\r\n\t *\t\tmodel.enqueueChange( batch, writer => {\r\n\t *\t\t\twriter.insertText( 'foo', paragraph, 'end' );\r\n\t *\t\t} );\r\n\t *\r\n\t * The batch instance can be obtained from {@link module:engine/model/writer~Writer#batch the writer}.\r\n\t *\r\n\t * @param {module:engine/model/batch~Batch|'transparent'|'default'} batchOrType Batch or batch type should be used in the callback.\r\n\t * If not defined, a new batch will be created.\r\n\t * @param {Function} callback Callback function which may modify the model.\r\n\t */\r\n\tenqueueChange( batchOrType, callback ) {\r\n\t\ttry {\r\n\t\t\tif ( typeof batchOrType === 'string' ) {\r\n\t\t\t\tbatchOrType = new Batch( batchOrType );\r\n\t\t\t} else if ( typeof batchOrType == 'function' ) {\r\n\t\t\t\tcallback = batchOrType;\r\n\t\t\t\tbatchOrType = new Batch();\r\n\t\t\t}\r\n\r\n\t\t\tthis._pendingChanges.push( { batch: batchOrType, callback } );\r\n\r\n\t\t\tif ( this._pendingChanges.length == 1 ) {\r\n\t\t\t\tthis._runPendingChanges();\r\n\t\t\t}\r\n\t\t} catch ( err ) {\r\n\t\t\t// @if CK_DEBUG // throw err;\r\n\t\t\t/* istanbul ignore next */\r\n\t\t\tCKEditorError.rethrowUnexpectedError( err, this );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * {@link module:utils/observablemixin~ObservableMixin#decorate Decorated} function for applying\r\n\t * {@link module:engine/model/operation/operation~Operation operations} to the model.\r\n\t *\r\n\t * This is a low-level way of changing the model. It is exposed for very specific use cases (like the undo feature).\r\n\t * Normally, to modify the model, you will want to use {@link module:engine/model/writer~Writer `Writer`}.\r\n\t * See also {@glink framework/guides/architecture/editing-engine#changing-the-model Changing the model} section\r\n\t * of the {@glink framework/guides/architecture/editing-engine Editing architecture} guide.\r\n\t *\r\n\t * @param {module:engine/model/operation/operation~Operation} operation The operation to apply.\r\n\t */\r\n\tapplyOperation( operation ) {\r\n\t\t// @if CK_DEBUG_ENGINE // console.log( 'Applying ' + operation );\r\n\r\n\t\t// @if CK_DEBUG_ENGINE // if ( !this._operationLogs ) {\r\n\t\t// @if CK_DEBUG_ENGINE //\tthis._operationLogs = [];\r\n\t\t// @if CK_DEBUG_ENGINE // }\r\n\r\n\t\t// @if CK_DEBUG_ENGINE // this._operationLogs.push( JSON.stringify( operation ) );\r\n\r\n\t\t// @if CK_DEBUG_ENGINE //if ( !this._appliedOperations ) {\r\n\t\t// @if CK_DEBUG_ENGINE //\tthis._appliedOperations = [];\r\n\t\t// @if CK_DEBUG_ENGINE //}\r\n\r\n\t\t// @if CK_DEBUG_ENGINE //this._appliedOperations.push( operation );\r\n\r\n\t\toperation._execute();\r\n\t}\r\n\r\n\t// @if CK_DEBUG_ENGINE // getAppliedOperation() {\r\n\t// @if CK_DEBUG_ENGINE //\tif ( !this._appliedOperations ) {\r\n\t// @if CK_DEBUG_ENGINE //\t\treturn '';\r\n\t// @if CK_DEBUG_ENGINE //\t}\r\n\r\n\t// @if CK_DEBUG_ENGINE //\treturn this._appliedOperations.map( JSON.stringify ).join( '-------' );\r\n\t// @if CK_DEBUG_ENGINE // }\r\n\r\n\t// @if CK_DEBUG_ENGINE // createReplayer( stringifiedOperations ) {\r\n\t// @if CK_DEBUG_ENGINE //\treturn new OperationReplayer( this, '-------', stringifiedOperations );\r\n\t// @if CK_DEBUG_ENGINE // }\r\n\r\n\t/**\r\n\t * Inserts content at the position in the editor specified by the selection, as one would expect the paste\r\n\t * functionality to work.\r\n\t *\r\n\t * This is a high-level method. It takes the {@link #schema schema} into consideration when inserting\r\n\t * the content, clears the given selection's content before inserting nodes and moves the selection\r\n\t * to its target position at the end of the process.\r\n\t * It can split elements, merge them, wrap bare text nodes with paragraphs, etc. &mdash; just like the\r\n\t * pasting feature should do.\r\n\t *\r\n\t * For lower-level methods see {@link module:engine/model/writer~Writer `Writer`}.\r\n\t *\r\n\t * This method, unlike {@link module:engine/model/writer~Writer `Writer`}'s methods, does not have to be used\r\n\t * inside a {@link #change `change()` block}.\r\n\t *\r\n\t * # Conversion and schema\r\n\t *\r\n\t * Inserting elements and text nodes into the model is not enough to make CKEditor 5 render that content\r\n\t * to the user. CKEditor 5 implements a model-view-controller architecture and what `model.insertContent()` does\r\n\t * is only adding nodes to the model. Additionally, you need to define\r\n\t * {@glink framework/guides/architecture/editing-engine#conversion converters} between the model and view\r\n\t * and define those nodes in the {@glink framework/guides/architecture/editing-engine#schema schema}.\r\n\t *\r\n\t * So, while this method may seem similar to CKEditor 4 `editor.insertHtml()` (in fact, both methods\r\n\t * are used for paste-like content insertion), the CKEditor 5 method cannot be use to insert arbitrary HTML\r\n\t * unless converters are defined for all elements and attributes in that HTML.\r\n\t *\r\n\t * # Examples\r\n\t *\r\n\t * Using `insertContent()` with a manually created model structure:\r\n\t *\r\n\t *\t\t// Let's create a document fragment containing such content as:\r\n\t *\t\t//\r\n\t *\t\t// <paragraph>foo</paragraph>\r\n\t *\t\t// <blockQuote>\r\n\t *\t\t//    <paragraph>bar</paragraph>\r\n\t *\t\t// </blockQuote>\r\n\t *\t\tconst docFrag = editor.model.change( writer => {\r\n\t *\t\t\tconst p1 = writer.createElement( 'paragraph' );\r\n\t *\t\t\tconst p2 = writer.createElement( 'paragraph' );\r\n\t *\t\t\tconst blockQuote = writer.createElement( 'blockQuote' );\r\n\t *\t\t\tconst docFrag = writer.createDocumentFragment();\r\n\t *\r\n\t *\t\t\twriter.append( p1, docFrag );\r\n\t *\t\t\twriter.append( blockQuote, docFrag );\r\n\t *\t\t\twriter.append( p2, blockQuote );\r\n\t *\t\t\twriter.insertText( 'foo', p1 );\r\n\t *\t\t\twriter.insertText( 'bar', p2 );\r\n\t *\r\n\t *\t\t\treturn docFrag;\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\t// insertContent() does not have to be used in a change() block. It can, though,\r\n\t *\t\t// so this code could be moved to the callback defined above.\r\n\t *\t\teditor.model.insertContent( docFrag );\r\n\t *\r\n\t * Using `insertContent()` with an HTML string converted to a model document fragment (similar to the pasting mechanism):\r\n\t *\r\n\t *\t\t// You can create your own HtmlDataProcessor instance or use editor.data.processor\r\n\t *\t\t// if you have not overridden the default one (which is the HtmlDataProcessor instance).\r\n\t *\t\tconst htmlDP = new HtmlDataProcessor( viewDocument );\r\n\t *\r\n\t *\t\t// Convert an HTML string to a view document fragment:\r\n\t *\t\tconst viewFragment = htmlDP.toView( htmlString );\r\n\t *\r\n\t *\t\t// Convert the view document fragment to a model document fragment\r\n\t *\t\t// in the context of $root. This conversion takes the schema into\r\n\t *\t\t// account so if, for example, the view document fragment contained a bare text node,\r\n\t *\t\t// this text node cannot be a child of $root, so it will be automatically\r\n\t *\t\t// wrapped with a <paragraph>. You can define the context yourself (in the second parameter),\r\n\t *\t\t// and e.g. convert the content like it would happen in a <paragraph>.\r\n\t *\t\t// Note: The clipboard feature uses a custom context called $clipboardHolder\r\n\t *\t\t// which has a loosened schema.\r\n\t *\t\tconst modelFragment = editor.data.toModel( viewFragment );\r\n\t *\r\n\t *\t\teditor.model.insertContent( modelFragment );\r\n\t *\r\n\t * By default this method will use the document selection but it can also be used with a position, range or selection instance.\r\n\t *\r\n\t *\t\t// Insert text at the current document selection position.\r\n\t *\t\teditor.model.change( writer => {\r\n\t *\t\t\teditor.model.insertContent( writer.createText( 'x' ) );\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\t// Insert text at a given position - the document selection will not be modified.\r\n\t *\t\teditor.model.change( writer => {\r\n\t *\t\t\teditor.model.insertContent( writer.createText( 'x' ), doc.getRoot(), 2 );\r\n\t *\r\n\t *\t\t\t// Which is a shorthand for:\r\n\t *\t\t\teditor.model.insertContent( writer.createText( 'x' ), writer.createPositionAt( doc.getRoot(), 2 ) );\r\n\t *\t\t} );\r\n\t *\r\n\t * If an instance of {@link module:engine/model/selection~Selection} is passed as `selectable`\r\n\t * it will be moved to the target position (where the document selection should be moved after the insertion).\r\n\t *\r\n\t *\t\teditor.model.change( writer => {\r\n\t *\t\t\t// Insert text replacing the given selection instance.\r\n\t *\t\t\tconst selection = writer.createSelection( paragraph, 'in' );\r\n\t *\r\n\t *\t\t\teditor.model.insertContent( writer.createText( 'x' ), selection );\r\n\t *\r\n\t *\t\t\t// insertContent() modifies the passed selection instance so it can be used to set the document selection.\r\n\t *\t\t\t// Note: This is not necessary when you passed the document selection to insertContent().\r\n\t *\t\t\twriter.setSelection( selection );\r\n\t *\t\t} );\r\n\t *\r\n\t * @fires insertContent\r\n\t * @param {module:engine/model/documentfragment~DocumentFragment|module:engine/model/item~Item} content The content to insert.\r\n\t * @param {module:engine/model/selection~Selectable} [selectable=model.document.selection]\r\n\t * The selection into which the content should be inserted. If not provided the current model document selection will be used.\r\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] To be used when a model item was passed as `selectable`.\r\n\t * This param defines a position in relation to that item.\r\n\t * @returns {module:engine/model/range~Range} Range which contains all the performed changes. This is a range that, if removed,\r\n\t * would return the model to the state before the insertion. If no changes were preformed by `insertContent`, returns a range collapsed\r\n\t * at the insertion position.\r\n\t */\r\n\tinsertContent( content, selectable, placeOrOffset ) {\r\n\t\treturn insertContent( this, content, selectable, placeOrOffset );\r\n\t}\r\n\r\n\t/**\r\n\t * Deletes content of the selection and merge siblings. The resulting selection is always collapsed.\r\n\t *\r\n\t * **Note:** For the sake of predictability, the resulting selection should always be collapsed.\r\n\t * In cases where a feature wants to modify deleting behavior so selection isn't collapsed\r\n\t * (e.g. a table feature may want to keep row selection after pressing <kbd>Backspace</kbd>),\r\n\t * then that behavior should be implemented in the view's listener. At the same time, the table feature\r\n\t * will need to modify this method's behavior too, e.g. to \"delete contents and then collapse\r\n\t * the selection inside the last selected cell\" or \"delete the row and collapse selection somewhere near\".\r\n\t * That needs to be done in order to ensure that other features which use `deleteContent()` will work well with tables.\r\n\t *\r\n\t * @fires deleteContent\r\n\t * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\r\n\t * Selection of which the content should be deleted.\r\n\t * @param {Object} [options]\r\n\t * @param {Boolean} [options.leaveUnmerged=false] Whether to merge elements after removing the content of the selection.\r\n\t *\r\n\t * For example `<heading1>x[x</heading1><paragraph>y]y</paragraph>` will become:\r\n\t *\r\n\t * * `<heading1>x^y</heading1>` with the option disabled (`leaveUnmerged == false`)\r\n\t * * `<heading1>x^</heading1><paragraph>y</paragraph>` with enabled (`leaveUnmerged == true`).\r\n\t *\r\n\t * Note: {@link module:engine/model/schema~Schema#isObject object} and {@link module:engine/model/schema~Schema#isLimit limit}\r\n\t * elements will not be merged.\r\n\t *\r\n\t * @param {Boolean} [options.doNotResetEntireContent=false] Whether to skip replacing the entire content with a\r\n\t * paragraph when the entire content was selected.\r\n\t *\r\n\t * For example `<heading1>[x</heading1><paragraph>y]</paragraph>` will become:\r\n\t *\r\n\t * * `<paragraph>^</paragraph>` with the option disabled (`doNotResetEntireContent == false`)\r\n\t * * `<heading1>^</heading1>` with enabled (`doNotResetEntireContent == true`)\r\n\t *\r\n\t * @param {Boolean} [options.doNotAutoparagraph=false] Whether to create a paragraph if after content deletion selection is moved\r\n\t * to a place where text cannot be inserted.\r\n\t *\r\n\t * For example `<paragraph>x</paragraph>[<image src=\"foo.jpg\"></image>]` will become:\r\n\t *\r\n\t * * `<paragraph>x</paragraph><paragraph>[]</paragraph>` with the option disabled (`doNotAutoparagraph == false`)\r\n\t * * `<paragraph>x[]</paragraph>` with the option enabled (`doNotAutoparagraph == true`).\r\n\t *\r\n\t * **Note:** if there is no valid position for the selection, the paragraph will always be created:\r\n\t *\r\n\t * `[<image src=\"foo.jpg\"></image>]` -> `<paragraph>[]</paragraph>`.\r\n\t *\r\n\t * @param {'forward'|'backward'} [options.direction='backward'] The direction in which the content is being consumed.\r\n\t * Deleting backward corresponds to using the <kbd>Backspace</kbd> key, while deleting content forward corresponds to\r\n\t * the <kbd>Shift</kbd>+<kbd>Backspace</kbd> keystroke.\r\n\t */\r\n\tdeleteContent( selection, options ) {\r\n\t\tdeleteContent( this, selection, options );\r\n\t}\r\n\r\n\t/**\r\n\t * Modifies the selection. Currently, the supported modifications are:\r\n\t *\r\n\t * * Extending. The selection focus is moved in the specified `options.direction` with a step specified in `options.unit`.\r\n\t * Possible values for `unit` are:\r\n\t *  * `'character'` (default) - moves selection by one user-perceived character. In most cases this means moving by one\r\n\t *  character in `String` sense. However, unicode also defines \"combing marks\". These are special symbols, that combines\r\n\t *  with a symbol before it (\"base character\") to create one user-perceived character. For example, `q̣̇` is a normal\r\n\t *  letter `q` with two \"combining marks\": upper dot (`Ux0307`) and lower dot (`Ux0323`). For most actions, i.e. extending\r\n\t *  selection by one position, it is correct to include both \"base character\" and all of it's \"combining marks\". That is\r\n\t *  why `'character'` value is most natural and common method of modifying selection.\r\n\t *  * `'codePoint'` - moves selection by one unicode code point. In contrary to, `'character'` unit, this will insert\r\n\t *  selection between \"base character\" and \"combining mark\", because \"combining marks\" have their own unicode code points.\r\n\t *  However, for technical reasons, unicode code points with values above `UxFFFF` are represented in native `String` by\r\n\t *  two characters, called \"surrogate pairs\". Halves of \"surrogate pairs\" have a meaning only when placed next to each other.\r\n\t *  For example `𨭎` is represented in `String` by `\\uD862\\uDF4E`. Both `\\uD862` and `\\uDF4E` do not have any meaning\r\n\t *  outside the pair (are rendered as ? when alone). Position between them would be incorrect. In this case, selection\r\n\t *  extension will include whole \"surrogate pair\".\r\n\t *  * `'word'` - moves selection by a whole word.\r\n\t *\r\n\t * **Note:** if you extend a forward selection in a backward direction you will in fact shrink it.\r\n\t *\r\n\t * @fires modifySelection\r\n\t * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\r\n\t * The selection to modify.\r\n\t * @param {Object} [options]\r\n\t * @param {'forward'|'backward'} [options.direction='forward'] The direction in which the selection should be modified.\r\n\t * @param {'character'|'codePoint'|'word'} [options.unit='character'] The unit by which selection should be modified.\r\n\t */\r\n\tmodifySelection( selection, options ) {\r\n\t\tmodifySelection( this, selection, options );\r\n\t}\r\n\r\n\t/**\r\n\t * Gets a clone of the selected content.\r\n\t *\r\n\t * For example, for the following selection:\r\n\t *\r\n\t * ```html\r\n\t * <paragraph>x</paragraph>\r\n\t * <blockQuote>\r\n\t *\t<paragraph>y</paragraph>\r\n\t *\t<heading1>fir[st</heading1>\r\n\t * </blockQuote>\r\n\t * <paragraph>se]cond</paragraph>\r\n\t * <paragraph>z</paragraph>\r\n\t * ```\r\n\t *\r\n\t * It will return a document fragment with such a content:\r\n\t *\r\n\t * ```html\r\n\t * <blockQuote>\r\n\t *\t<heading1>st</heading1>\r\n\t * </blockQuote>\r\n\t * <paragraph>se</paragraph>\r\n\t * ```\r\n\t *\r\n\t * @fires getSelectedContent\r\n\t * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\r\n\t * The selection of which content will be returned.\r\n\t * @returns {module:engine/model/documentfragment~DocumentFragment}\r\n\t */\r\n\tgetSelectedContent( selection ) {\r\n\t\treturn getSelectedContent( this, selection );\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether the given {@link module:engine/model/range~Range range} or\r\n\t * {@link module:engine/model/element~Element element} has any meaningful content.\r\n\t *\r\n\t * Meaningful content is:\r\n\t *\r\n\t * * any text node (`options.ignoreWhitespaces` allows controlling whether this text node must also contain\r\n\t * any non-whitespace characters),\r\n\t * * or any {@link module:engine/model/schema~Schema#isObject object element},\r\n\t * * or any {@link module:engine/model/markercollection~Marker marker} which\r\n\t * {@link module:engine/model/markercollection~Marker#_affectsData affects data}.\r\n\t *\r\n\t * This means that a range containing an empty `<paragraph></paragraph>` is not considered to have a meaningful content.\r\n\t * However, a range containing an `<image></image>` (which would normally be marked in the schema as an object element)\r\n\t * is considered non-empty.\r\n\t *\r\n\t * @param {module:engine/model/range~Range|module:engine/model/element~Element} rangeOrElement Range or element to check.\r\n\t * @param {Object} [options]\r\n\t * @param {Boolean} [options.ignoreWhitespaces] Whether text node with whitespaces only should be considered empty.\r\n\t * @returns {Boolean}\r\n\t */\r\n\thasContent( rangeOrElement, options ) {\r\n\t\tconst range = rangeOrElement instanceof ModelElement ? ModelRange._createIn( rangeOrElement ) : rangeOrElement;\r\n\r\n\t\tif ( range.isCollapsed ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Check if there are any markers which affects data in this given range.\r\n\t\tfor ( const intersectingMarker of this.markers.getMarkersIntersectingRange( range ) ) {\r\n\t\t\tif ( intersectingMarker.affectsData ) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst { ignoreWhitespaces = false } = options || {};\r\n\r\n\t\tfor ( const item of range.getItems() ) {\r\n\t\t\tif ( item.is( 'textProxy' ) ) {\r\n\t\t\t\tif ( !ignoreWhitespaces ) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} else if ( item.data.search( /\\S/ ) !== -1 ) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t} else if ( this.schema.isObject( item ) ) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a position from the given root and path in that root.\r\n\t *\r\n\t * Note: This method is also available as\r\n\t * {@link module:engine/model/writer~Writer#createPositionFromPath `Writer#createPositionFromPath()`}.\r\n\t *\r\n\t * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} root Root of the position.\r\n\t * @param {Array.<Number>} path Position path. See {@link module:engine/model/position~Position#path}.\r\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness.\r\n\t * See {@link module:engine/model/position~PositionStickiness}.\r\n\t * @returns {module:engine/model/position~Position}\r\n\t */\r\n\tcreatePositionFromPath( root, path, stickiness ) {\r\n\t\treturn new ModelPosition( root, path, stickiness );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates position at the given location. The location can be specified as:\r\n\t *\r\n\t * * a {@link module:engine/model/position~Position position},\r\n\t * * a parent element and offset in that element,\r\n\t * * a parent element and `'end'` (the position will be set at the end of that element),\r\n\t * * a {@link module:engine/model/item~Item model item} and `'before'` or `'after'`\r\n\t * (the position will be set before or after the given model item).\r\n\t *\r\n\t * This method is a shortcut to other factory methods such as:\r\n\t *\r\n\t * * {@link module:engine/model/model~Model#createPositionBefore `createPositionBefore()`},\r\n\t * * {@link module:engine/model/model~Model#createPositionAfter `createPositionAfter()`}.\r\n\t *\r\n\t * Note: This method is also available as\r\n\t * {@link module:engine/model/writer~Writer#createPositionAt `Writer#createPositionAt()`},\r\n\t *\r\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\r\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\r\n\t * first parameter is a {@link module:engine/model/item~Item model item}.\r\n\t */\r\n\tcreatePositionAt( itemOrPosition, offset ) {\r\n\t\treturn ModelPosition._createAt( itemOrPosition, offset );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new position after the given {@link module:engine/model/item~Item model item}.\r\n\t *\r\n\t * Note: This method is also available as\r\n\t * {@link module:engine/model/writer~Writer#createPositionAfter `Writer#createPositionAfter()`}.\r\n\t *\r\n\t * @param {module:engine/model/item~Item} item Item after which the position should be placed.\r\n\t * @returns {module:engine/model/position~Position}\r\n\t */\r\n\tcreatePositionAfter( item ) {\r\n\t\treturn ModelPosition._createAfter( item );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new position before the given {@link module:engine/model/item~Item model item}.\r\n\t *\r\n\t * Note: This method is also available as\r\n\t * {@link module:engine/model/writer~Writer#createPositionBefore `Writer#createPositionBefore()`}.\r\n\t *\r\n\t * @param {module:engine/model/item~Item} item Item before which the position should be placed.\r\n\t * @returns {module:engine/model/position~Position}\r\n\t */\r\n\tcreatePositionBefore( item ) {\r\n\t\treturn ModelPosition._createBefore( item );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a range spanning from the `start` position to the `end` position.\r\n\t *\r\n\t * Note: This method is also available as\r\n\t * {@link module:engine/model/writer~Writer#createRange `Writer#createRange()`}:\r\n\t *\r\n\t *\t\tmodel.change( writer => {\r\n\t *\t\t\tconst range = writer.createRange( start, end );\r\n\t *\t\t} );\r\n\t *\r\n\t * @param {module:engine/model/position~Position} start Start position.\r\n\t * @param {module:engine/model/position~Position} [end] End position. If not set, the range will be collapsed\r\n\t * to the `start` position.\r\n\t * @returns {module:engine/model/range~Range}\r\n\t */\r\n\tcreateRange( start, end ) {\r\n\t\treturn new ModelRange( start, end );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a range inside the given element which starts before the first child of\r\n\t * that element and ends after the last child of that element.\r\n\t *\r\n\t * Note: This method is also available as\r\n\t * {@link module:engine/model/writer~Writer#createRangeIn `Writer#createRangeIn()`}:\r\n\t *\r\n\t *\t\tmodel.change( writer => {\r\n\t *\t\t\tconst range = writer.createRangeIn( paragraph );\r\n\t *\t\t} );\r\n\t *\r\n\t * @param {module:engine/model/element~Element} element Element which is a parent for the range.\r\n\t * @returns {module:engine/model/range~Range}\r\n\t */\r\n\tcreateRangeIn( element ) {\r\n\t\treturn ModelRange._createIn( element );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a range that starts before the given {@link module:engine/model/item~Item model item} and ends after it.\r\n\t *\r\n\t * Note: This method is also available on `writer` instance as\r\n\t * {@link module:engine/model/writer~Writer#createRangeOn `Writer.createRangeOn()`}:\r\n\t *\r\n\t *\t\tmodel.change( writer => {\r\n\t *\t\t\tconst range = writer.createRangeOn( paragraph );\r\n\t *\t\t} );\r\n\t *\r\n\t * @param {module:engine/model/item~Item} item\r\n\t * @returns {module:engine/model/range~Range}\r\n\t */\r\n\tcreateRangeOn( item ) {\r\n\t\treturn ModelRange._createOn( item );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new selection instance based on the given {@link module:engine/model/selection~Selectable selectable}\r\n\t * or creates an empty selection if no arguments were passed.\r\n\t *\r\n\t * Note: This method is also available as\r\n\t * {@link module:engine/model/writer~Writer#createSelection `Writer#createSelection()`}.\r\n\t *\r\n\t *\t\t// Creates empty selection without ranges.\r\n\t *\t\tconst selection = writer.createSelection();\r\n\t *\r\n\t *\t\t// Creates selection at the given range.\r\n\t *\t\tconst range = writer.createRange( start, end );\r\n\t *\t\tconst selection = writer.createSelection( range );\r\n\t *\r\n\t *\t\t// Creates selection at the given ranges\r\n\t *\t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\r\n\t *\t\tconst selection = writer.createSelection( ranges );\r\n\t *\r\n\t *\t\t// Creates selection from the other selection.\r\n\t *\t\t// Note: It doesn't copies selection attributes.\r\n\t *\t\tconst otherSelection = writer.createSelection();\r\n\t *\t\tconst selection = writer.createSelection( otherSelection );\r\n\t *\r\n\t *\t\t// Creates selection from the given document selection.\r\n\t *\t\t// Note: It doesn't copies selection attributes.\r\n\t *\t\tconst documentSelection = model.document.selection;\r\n\t *\t\tconst selection = writer.createSelection( documentSelection );\r\n\t *\r\n\t *\t\t// Creates selection at the given position.\r\n\t *\t\tconst position = writer.createPositionFromPath( root, path );\r\n\t *\t\tconst selection = writer.createSelection( position );\r\n\t *\r\n\t *\t\t// Creates selection at the given offset in the given element.\r\n\t *\t\tconst paragraph = writer.createElement( 'paragraph' );\r\n\t *\t\tconst selection = writer.createSelection( paragraph, offset );\r\n\t *\r\n\t *\t\t// Creates a range inside an {@link module:engine/model/element~Element element} which starts before the\r\n\t *\t\t// first child of that element and ends after the last child of that element.\r\n\t *\t\tconst selection = writer.createSelection( paragraph, 'in' );\r\n\t *\r\n\t *\t\t// Creates a range on an {@link module:engine/model/item~Item item} which starts before the item and ends\r\n\t *\t\t// just after the item.\r\n\t *\t\tconst selection = writer.createSelection( paragraph, 'on' );\r\n\t *\r\n\t *\t\t// Additional options (`'backward'`) can be specified as the last argument.\r\n\t *\r\n\t *\t\t// Creates backward selection.\r\n\t *\t\tconst selection = writer.createSelection( range, { backward: true } );\r\n\t *\r\n\t * @param {module:engine/model/selection~Selectable} selectable\r\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\r\n\t * @param {Object} [options]\r\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\r\n\t * @returns {module:engine/model/selection~Selection}\r\n\t */\r\n\tcreateSelection( selectable, placeOrOffset, options ) {\r\n\t\treturn new ModelSelection( selectable, placeOrOffset, options );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a {@link module:engine/model/batch~Batch} instance.\r\n\t *\r\n\t * **Note:** In most cases creating a batch instance is not necessary as they are created when using:\r\n\t *\r\n\t * * {@link #change `change()`},\r\n\t * * {@link #enqueueChange `enqueueChange()`}.\r\n\t *\r\n\t * @param {'transparent'|'default'} [type='default'] The type of the batch.\r\n\t * @returns {module:engine/model/batch~Batch}\r\n\t */\r\n\tcreateBatch( type ) {\r\n\t\treturn new Batch( type );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates an operation instance from a JSON object (parsed JSON string).\r\n\t *\r\n\t * This is an alias for {@link module:engine/model/operation/operationfactory~OperationFactory.fromJSON `OperationFactory.fromJSON()`}.\r\n\t *\r\n\t * @param {Object} json Deserialized JSON object.\r\n\t * @returns {module:engine/model/operation/operation~Operation}\r\n\t */\r\n\tcreateOperationFromJSON( json ) {\r\n\t\treturn OperationFactory.fromJSON( json, this.document );\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all events listeners set by model instance and destroys {@link module:engine/model/document~Document}.\r\n\t */\r\n\tdestroy() {\r\n\t\tthis.document.destroy();\r\n\t\tthis.stopListening();\r\n\t}\r\n\r\n\t/**\r\n\t * Common part of {@link module:engine/model/model~Model#change} and {@link module:engine/model/model~Model#enqueueChange}\r\n\t * which calls callbacks and returns array of values returned by these callbacks.\r\n\t *\r\n\t * @private\r\n\t * @returns {Array.<*>} Array of values returned by callbacks.\r\n\t */\r\n\t_runPendingChanges() {\r\n\t\tconst ret = [];\r\n\r\n\t\tthis.fire( '_beforeChanges' );\r\n\r\n\t\twhile ( this._pendingChanges.length ) {\r\n\t\t\t// Create a new writer using batch instance created for this chain of changes.\r\n\t\t\tconst currentBatch = this._pendingChanges[ 0 ].batch;\r\n\t\t\tthis._currentWriter = new Writer( this, currentBatch );\r\n\r\n\t\t\t// Execute changes callback and gather the returned value.\r\n\t\t\tconst callbackReturnValue = this._pendingChanges[ 0 ].callback( this._currentWriter );\r\n\t\t\tret.push( callbackReturnValue );\r\n\r\n\t\t\tthis.document._handleChangeBlock( this._currentWriter );\r\n\r\n\t\t\tthis._pendingChanges.shift();\r\n\t\t\tthis._currentWriter = null;\r\n\t\t}\r\n\r\n\t\tthis.fire( '_afterChanges' );\r\n\r\n\t\treturn ret;\r\n\t}\r\n\r\n\t/**\r\n\t * Fired when entering the outermost {@link module:engine/model/model~Model#enqueueChange} or\r\n\t * {@link module:engine/model/model~Model#change} block.\r\n\t *\r\n\t * @protected\r\n\t * @event _beforeChanges\r\n\t */\r\n\r\n\t/**\r\n\t * Fired when leaving the outermost {@link module:engine/model/model~Model#enqueueChange} or\r\n\t * {@link module:engine/model/model~Model#change} block.\r\n\t *\r\n\t * @protected\r\n\t * @event _afterChanges\r\n\t */\r\n\r\n\t/**\r\n\t * Fired every time any {@link module:engine/model/operation/operation~Operation operation} is applied on the model\r\n\t * using {@link #applyOperation}.\r\n\t *\r\n\t * Note that this event is suitable only for very specific use-cases. Use it if you need to listen to every single operation\r\n\t * applied on the document. However, in most cases {@link module:engine/model/document~Document#event:change} should\r\n\t * be used.\r\n\t *\r\n\t * A few callbacks are already added to this event by engine internal classes:\r\n\t *\r\n\t * * with `highest` priority operation is validated,\r\n\t * * with `normal` priority operation is executed,\r\n\t * * with `low` priority the {@link module:engine/model/document~Document} updates its version,\r\n\t * * with `low` priority {@link module:engine/model/liveposition~LivePosition} and {@link module:engine/model/liverange~LiveRange}\r\n\t * update themselves.\r\n\t *\r\n\t * @event applyOperation\r\n\t * @param {Array} args Arguments of the `applyOperation` which is an array with a single element - applied\r\n\t * {@link module:engine/model/operation/operation~Operation operation}.\r\n\t */\r\n\r\n\t/**\r\n\t * Event fired when {@link #insertContent} method is called.\r\n\t *\r\n\t * The {@link #insertContent default action of that method} is implemented as a\r\n\t * listener to this event so it can be fully customized by the features.\r\n\t *\r\n\t * **Note** The `selectable` parameter for the {@link #insertContent} is optional. When `undefined` value is passed the method uses\r\n\t * `model.document.selection`.\r\n\t *\r\n\t * @event insertContent\r\n\t * @param {Array} args The arguments passed to the original method.\r\n\t */\r\n\r\n\t/**\r\n\t * Event fired when {@link #deleteContent} method is called.\r\n\t *\r\n\t * The {@link #deleteContent default action of that method} is implemented as a\r\n\t * listener to this event so it can be fully customized by the features.\r\n\t *\r\n\t * @event deleteContent\r\n\t * @param {Array} args The arguments passed to the original method.\r\n\t */\r\n\r\n\t/**\r\n\t * Event fired when {@link #modifySelection} method is called.\r\n\t *\r\n\t * The {@link #modifySelection default action of that method} is implemented as a\r\n\t * listener to this event so it can be fully customized by the features.\r\n\t *\r\n\t * @event modifySelection\r\n\t * @param {Array} args The arguments passed to the original method.\r\n\t */\r\n\r\n\t/**\r\n\t * Event fired when {@link #getSelectedContent} method is called.\r\n\t *\r\n\t * The {@link #getSelectedContent default action of that method} is implemented as a\r\n\t * listener to this event so it can be fully customized by the features.\r\n\t *\r\n\t * @event getSelectedContent\r\n\t * @param {Array} args The arguments passed to the original method.\r\n\t */\r\n}\r\n\r\nmix( Model, ObservableMixin );\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/node\r\n */\r\n\r\nimport toMap from '@ckeditor/ckeditor5-utils/src/tomap';\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\r\n\r\n// To check if component is loaded more than once.\r\nimport '@ckeditor/ckeditor5-utils/src/version';\r\n\r\n/**\r\n * Model node. Most basic structure of model tree.\r\n *\r\n * This is an abstract class that is a base for other classes representing different nodes in model.\r\n *\r\n * **Note:** If a node is detached from the model tree, you can manipulate it using it's API.\r\n * However, it is **very important** that nodes already attached to model tree should be only changed through\r\n * {@link module:engine/model/writer~Writer Writer API}.\r\n *\r\n * Changes done by `Node` methods, like {@link module:engine/model/element~Element#_insertChild _insertChild} or\r\n * {@link module:engine/model/node~Node#_setAttribute _setAttribute}\r\n * do not generate {@link module:engine/model/operation/operation~Operation operations}\r\n * which are essential for correct editor work if you modify nodes in {@link module:engine/model/document~Document document} root.\r\n *\r\n * The flow of working on `Node` (and classes that inherits from it) is as such:\r\n * 1. You can create a `Node` instance, modify it using it's API.\r\n * 2. Add `Node` to the model using `Batch` API.\r\n * 3. Change `Node` that was already added to the model using `Batch` API.\r\n *\r\n * Similarly, you cannot use `Batch` API on a node that has not been added to the model tree, with the exception\r\n * of {@link module:engine/model/writer~Writer#insert inserting} that node to the model tree.\r\n *\r\n * Be aware that using {@link module:engine/model/writer~Writer#remove remove from Batch API} does not allow to use `Node` API because\r\n * the information about `Node` is still kept in model document.\r\n *\r\n * In case of {@link module:engine/model/element~Element element node}, adding and removing children also counts as changing a node and\r\n * follows same rules.\r\n */\r\nexport default class Node {\r\n\t/**\r\n\t * Creates a model node.\r\n\t *\r\n\t * This is an abstract class, so this constructor should not be used directly.\r\n\t *\r\n\t * @abstract\r\n\t * @param {Object} [attrs] Node's attributes. See {@link module:utils/tomap~toMap} for a list of accepted values.\r\n\t */\r\n\tconstructor( attrs ) {\r\n\t\t/**\r\n\t\t * Parent of this node. It could be {@link module:engine/model/element~Element}\r\n\t\t * or {@link module:engine/model/documentfragment~DocumentFragment}.\r\n\t\t * Equals to `null` if the node has no parent.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\r\n\t\t */\r\n\t\tthis.parent = null;\r\n\r\n\t\t/**\r\n\t\t * Attributes set on this node.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Map} module:engine/model/node~Node#_attrs\r\n\t\t */\r\n\t\tthis._attrs = toMap( attrs );\r\n\t}\r\n\r\n\t/**\r\n\t * Index of this node in it's parent or `null` if the node has no parent.\r\n\t *\r\n\t * Accessing this property throws an error if this node's parent element does not contain it.\r\n\t * This means that model tree got broken.\r\n\t *\r\n\t * @readonly\r\n\t * @type {Number|null}\r\n\t */\r\n\tget index() {\r\n\t\tlet pos;\r\n\r\n\t\tif ( !this.parent ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tif ( ( pos = this.parent.getChildIndex( this ) ) === null ) {\r\n\t\t\tthrow new CKEditorError( 'model-node-not-found-in-parent: The node\\'s parent does not contain this node.', this );\r\n\t\t}\r\n\r\n\t\treturn pos;\r\n\t}\r\n\r\n\t/**\r\n\t * Offset at which this node starts in it's parent. It is equal to the sum of {@link #offsetSize offsetSize}\r\n\t * of all it's previous siblings. Equals to `null` if node has no parent.\r\n\t *\r\n\t * Accessing this property throws an error if this node's parent element does not contain it.\r\n\t * This means that model tree got broken.\r\n\t *\r\n\t * @readonly\r\n\t * @type {Number|null}\r\n\t */\r\n\tget startOffset() {\r\n\t\tlet pos;\r\n\r\n\t\tif ( !this.parent ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tif ( ( pos = this.parent.getChildStartOffset( this ) ) === null ) {\r\n\t\t\tthrow new CKEditorError( 'model-node-not-found-in-parent: The node\\'s parent does not contain this node.', this );\r\n\t\t}\r\n\r\n\t\treturn pos;\r\n\t}\r\n\r\n\t/**\r\n\t * Offset size of this node. Represents how much \"offset space\" is occupied by the node in it's parent.\r\n\t * It is important for {@link module:engine/model/position~Position position}. When node has `offsetSize` greater than `1`, position\r\n\t * can be placed between that node start and end. `offsetSize` greater than `1` is for nodes that represents more\r\n\t * than one entity, i.e. {@link module:engine/model/text~Text text node}.\r\n\t *\r\n\t * @readonly\r\n\t * @type {Number}\r\n\t */\r\n\tget offsetSize() {\r\n\t\treturn 1;\r\n\t}\r\n\r\n\t/**\r\n\t * Offset at which this node ends in it's parent. It is equal to the sum of this node's\r\n\t * {@link module:engine/model/node~Node#startOffset start offset} and {@link #offsetSize offset size}.\r\n\t * Equals to `null` if the node has no parent.\r\n\t *\r\n\t * @readonly\r\n\t * @type {Number|null}\r\n\t */\r\n\tget endOffset() {\r\n\t\tif ( !this.parent ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn this.startOffset + this.offsetSize;\r\n\t}\r\n\r\n\t/**\r\n\t * Node's next sibling or `null` if the node is a last child of it's parent or if the node has no parent.\r\n\t *\r\n\t * @readonly\r\n\t * @type {module:engine/model/node~Node|null}\r\n\t */\r\n\tget nextSibling() {\r\n\t\tconst index = this.index;\r\n\r\n\t\treturn ( index !== null && this.parent.getChild( index + 1 ) ) || null;\r\n\t}\r\n\r\n\t/**\r\n\t * Node's previous sibling or `null` if the node is a first child of it's parent or if the node has no parent.\r\n\t *\r\n\t * @readonly\r\n\t * @type {module:engine/model/node~Node|null}\r\n\t */\r\n\tget previousSibling() {\r\n\t\tconst index = this.index;\r\n\r\n\t\treturn ( index !== null && this.parent.getChild( index - 1 ) ) || null;\r\n\t}\r\n\r\n\t/**\r\n\t * The top-most ancestor of the node. If node has no parent it is the root itself. If the node is a part\r\n\t * of {@link module:engine/model/documentfragment~DocumentFragment}, it's `root` is equal to that `DocumentFragment`.\r\n\t *\r\n\t * @readonly\r\n\t * @type {module:engine/model/node~Node|module:engine/model/documentfragment~DocumentFragment}\r\n\t */\r\n\tget root() {\r\n\t\tlet root = this; // eslint-disable-line consistent-this\r\n\r\n\t\twhile ( root.parent ) {\r\n\t\t\troot = root.parent;\r\n\t\t}\r\n\r\n\t\treturn root;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the node is in a tree rooted in the document (is a descendant of one of its roots).\r\n\t *\r\n\t * @returns {Boolean}\r\n\t */\r\n\tisAttached() {\r\n\t\treturn this.root.is( 'rootElement' );\r\n\t}\r\n\r\n\t/**\r\n\t * Gets path to the node. The path is an array containing starting offsets of consecutive ancestors of this node,\r\n\t * beginning from {@link module:engine/model/node~Node#root root}, down to this node's starting offset. The path can be used to\r\n\t * create {@link module:engine/model/position~Position Position} instance.\r\n\t *\r\n\t *\t\tconst abc = new Text( 'abc' );\r\n\t *\t\tconst foo = new Text( 'foo' );\r\n\t *\t\tconst h1 = new Element( 'h1', null, new Text( 'header' ) );\r\n\t *\t\tconst p = new Element( 'p', null, [ abc, foo ] );\r\n\t *\t\tconst div = new Element( 'div', null, [ h1, p ] );\r\n\t *\t\tfoo.getPath(); // Returns [ 1, 3 ]. `foo` is in `p` which is in `div`. `p` starts at offset 1, while `foo` at 3.\r\n\t *\t\th1.getPath(); // Returns [ 0 ].\r\n\t *\t\tdiv.getPath(); // Returns [].\r\n\t *\r\n\t * @returns {Array.<Number>} The path.\r\n\t */\r\n\tgetPath() {\r\n\t\tconst path = [];\r\n\t\tlet node = this; // eslint-disable-line consistent-this\r\n\r\n\t\twhile ( node.parent ) {\r\n\t\t\tpath.unshift( node.startOffset );\r\n\t\t\tnode = node.parent;\r\n\t\t}\r\n\r\n\t\treturn path;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns ancestors array of this node.\r\n\t *\r\n\t * @param {Object} options Options object.\r\n\t * @param {Boolean} [options.includeSelf=false] When set to `true` this node will be also included in parent's array.\r\n\t * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from node's parent to root element,\r\n\t * otherwise root element will be the first item in the array.\r\n\t * @returns {Array} Array with ancestors.\r\n\t */\r\n\tgetAncestors( options = { includeSelf: false, parentFirst: false } ) {\r\n\t\tconst ancestors = [];\r\n\t\tlet parent = options.includeSelf ? this : this.parent;\r\n\r\n\t\twhile ( parent ) {\r\n\t\t\tancestors[ options.parentFirst ? 'push' : 'unshift' ]( parent );\r\n\t\t\tparent = parent.parent;\r\n\t\t}\r\n\r\n\t\treturn ancestors;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a {@link module:engine/model/element~Element} or {@link module:engine/model/documentfragment~DocumentFragment}\r\n\t * which is a common ancestor of both nodes.\r\n\t *\r\n\t * @param {module:engine/model/node~Node} node The second node.\r\n\t * @param {Object} options Options object.\r\n\t * @param {Boolean} [options.includeSelf=false] When set to `true` both nodes will be considered \"ancestors\" too.\r\n\t * Which means that if e.g. node A is inside B, then their common ancestor will be B.\r\n\t * @returns {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\r\n\t */\r\n\tgetCommonAncestor( node, options = {} ) {\r\n\t\tconst ancestorsA = this.getAncestors( options );\r\n\t\tconst ancestorsB = node.getAncestors( options );\r\n\r\n\t\tlet i = 0;\r\n\r\n\t\twhile ( ancestorsA[ i ] == ancestorsB[ i ] && ancestorsA[ i ] ) {\r\n\t\t\ti++;\r\n\t\t}\r\n\r\n\t\treturn i === 0 ? null : ancestorsA[ i - 1 ];\r\n\t}\r\n\r\n\t/**\r\n\t * Returns whether this node is before given node. `false` is returned if nodes are in different trees (for example,\r\n\t * in different {@link module:engine/model/documentfragment~DocumentFragment}s).\r\n\t *\r\n\t * @param {module:engine/model/node~Node} node Node to compare with.\r\n\t * @returns {Boolean}\r\n\t */\r\n\tisBefore( node ) {\r\n\t\t// Given node is not before this node if they are same.\r\n\t\tif ( this == node ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Return `false` if it is impossible to compare nodes.\r\n\t\tif ( this.root !== node.root ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst thisPath = this.getPath();\r\n\t\tconst nodePath = node.getPath();\r\n\r\n\t\tconst result = compareArrays( thisPath, nodePath );\r\n\r\n\t\tswitch ( result ) {\r\n\t\t\tcase 'prefix':\r\n\t\t\t\treturn true;\r\n\r\n\t\t\tcase 'extension':\r\n\t\t\t\treturn false;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\treturn thisPath[ result ] < nodePath[ result ];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns whether this node is after given node. `false` is returned if nodes are in different trees (for example,\r\n\t * in different {@link module:engine/model/documentfragment~DocumentFragment}s).\r\n\t *\r\n\t * @param {module:engine/model/node~Node} node Node to compare with.\r\n\t * @returns {Boolean}\r\n\t */\r\n\tisAfter( node ) {\r\n\t\t// Given node is not before this node if they are same.\r\n\t\tif ( this == node ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Return `false` if it is impossible to compare nodes.\r\n\t\tif ( this.root !== node.root ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// In other cases, just check if the `node` is before, and return the opposite.\r\n\t\treturn !this.isBefore( node );\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the node has an attribute with given key.\r\n\t *\r\n\t * @param {String} key Key of attribute to check.\r\n\t * @returns {Boolean} `true` if attribute with given key is set on node, `false` otherwise.\r\n\t */\r\n\thasAttribute( key ) {\r\n\t\treturn this._attrs.has( key );\r\n\t}\r\n\r\n\t/**\r\n\t * Gets an attribute value for given key or `undefined` if that attribute is not set on node.\r\n\t *\r\n\t * @param {String} key Key of attribute to look for.\r\n\t * @returns {*} Attribute value or `undefined`.\r\n\t */\r\n\tgetAttribute( key ) {\r\n\t\treturn this._attrs.get( key );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns iterator that iterates over this node's attributes.\r\n\t *\r\n\t * Attributes are returned as arrays containing two items. First one is attribute key and second is attribute value.\r\n\t * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\r\n\t *\r\n\t * @returns {Iterable.<*>}\r\n\t */\r\n\tgetAttributes() {\r\n\t\treturn this._attrs.entries();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns iterator that iterates over this node's attribute keys.\r\n\t *\r\n\t * @returns {Iterable.<String>}\r\n\t */\r\n\tgetAttributeKeys() {\r\n\t\treturn this._attrs.keys();\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `Node` to plain object and returns it.\r\n\t *\r\n\t * @returns {Object} `Node` converted to plain object.\r\n\t */\r\n\ttoJSON() {\r\n\t\tconst json = {};\r\n\r\n\t\t// Serializes attributes to the object.\r\n\t\t// attributes = { a: 'foo', b: 1, c: true }.\r\n\t\tif ( this._attrs.size ) {\r\n\t\t\tjson.attributes = Array.from( this._attrs ).reduce( ( result, attr ) => {\r\n\t\t\t\tresult[ attr[ 0 ] ] = attr[ 1 ];\r\n\r\n\t\t\t\treturn result;\r\n\t\t\t}, {} );\r\n\t\t}\r\n\r\n\t\treturn json;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this object is of the given type.\r\n\t *\r\n\t * This method is useful when processing model objects that are of unknown type. For example, a function\r\n\t * may return a {@link module:engine/model/documentfragment~DocumentFragment} or a {@link module:engine/model/node~Node}\r\n\t * that can be either a text node or an element. This method can be used to check what kind of object is returned.\r\n\t *\r\n\t *\t\tsomeObject.is( 'element' ); // -> true if this is an element\r\n\t *\t\tsomeObject.is( 'node' ); // -> true if this is a node (a text node or an element)\r\n\t *\t\tsomeObject.is( 'documentFragment' ); // -> true if this is a document fragment\r\n\t *\r\n\t * Since this method is also available on a range of view objects, you can prefix the type of the object with\r\n\t * `model:` or `view:` to check, for example, if this is the model's or view's element:\r\n\t *\r\n\t *\t\tmodelElement.is( 'model:element' ); // -> true\r\n\t *\t\tmodelElement.is( 'view:element' ); // -> false\r\n\t *\r\n\t * By using this method it is also possible to check a name of an element:\r\n\t *\r\n\t *\t\timageElement.is( 'image' ); // -> true\r\n\t *\t\timageElement.is( 'element', 'image' ); // -> same as above\r\n\t *\t\timageElement.is( 'model:element', 'image' ); // -> same as above, but more precise\r\n\t *\r\n\t * The list of model objects which implement the `is()` method:\r\n\t *\r\n\t * * {@link module:engine/model/node~Node#is `Node#is()`}\r\n\t * * {@link module:engine/model/text~Text#is `Text#is()`}\r\n\t * * {@link module:engine/model/element~Element#is `Element#is()`}\r\n\t * * {@link module:engine/model/rootelement~RootElement#is `RootElement#is()`}\r\n\t * * {@link module:engine/model/position~Position#is `Position#is()`}\r\n\t * * {@link module:engine/model/liveposition~LivePosition#is `LivePosition#is()`}\r\n\t * * {@link module:engine/model/range~Range#is `Range#is()`}\r\n\t * * {@link module:engine/model/liverange~LiveRange#is `LiveRange#is()`}\r\n\t * * {@link module:engine/model/documentfragment~DocumentFragment#is `DocumentFragment#is()`}\r\n\t * * {@link module:engine/model/selection~Selection#is `Selection#is()`}\r\n\t * * {@link module:engine/model/documentselection~DocumentSelection#is `DocumentSelection#is()`}\r\n\t * * {@link module:engine/model/markercollection~Marker#is `Marker#is()`}\r\n\t * * {@link module:engine/model/textproxy~TextProxy#is `TextProxy#is()`}\r\n\t *\r\n\t * @method #is\r\n\t * @param {String} type\r\n\t * @returns {Boolean}\r\n\t */\r\n\tis( type ) {\r\n\t\treturn type == 'node' || type == 'model:node';\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of this node, that is a node with exactly same attributes, and returns it.\r\n\t *\r\n\t * @protected\r\n\t * @returns {module:engine/model/node~Node} Node with same attributes as this node.\r\n\t */\r\n\t_clone() {\r\n\t\treturn new Node( this._attrs );\r\n\t}\r\n\r\n\t/**\r\n\t * Removes this node from it's parent.\r\n\t *\r\n\t * @see module:engine/model/writer~Writer#remove\r\n\t * @protected\r\n\t */\r\n\t_remove() {\r\n\t\tthis.parent._removeChildren( this.index );\r\n\t}\r\n\r\n\t/**\r\n\t * Sets attribute on the node. If attribute with the same key already is set, it's value is overwritten.\r\n\t *\r\n\t * @see module:engine/model/writer~Writer#setAttribute\r\n\t * @protected\r\n\t * @param {String} key Key of attribute to set.\r\n\t * @param {*} value Attribute value.\r\n\t */\r\n\t_setAttribute( key, value ) {\r\n\t\tthis._attrs.set( key, value );\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all attributes from the node and sets given attributes.\r\n\t *\r\n\t * @see module:engine/model/writer~Writer#setAttributes\r\n\t * @protected\r\n\t * @param {Object} [attrs] Attributes to set. See {@link module:utils/tomap~toMap} for a list of accepted values.\r\n\t */\r\n\t_setAttributesTo( attrs ) {\r\n\t\tthis._attrs = toMap( attrs );\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an attribute with given key from the node.\r\n\t *\r\n\t * @see module:engine/model/writer~Writer#removeAttribute\r\n\t * @protected\r\n\t * @param {String} key Key of attribute to remove.\r\n\t * @returns {Boolean} `true` if the attribute was set on the element, `false` otherwise.\r\n\t */\r\n\t_removeAttribute( key ) {\r\n\t\treturn this._attrs.delete( key );\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all attributes from the node.\r\n\t *\r\n\t * @see module:engine/model/writer~Writer#clearAttributes\r\n\t * @protected\r\n\t */\r\n\t_clearAttributes() {\r\n\t\tthis._attrs.clear();\r\n\t}\r\n}\r\n\r\n/**\r\n * The node's parent does not contain this node.\r\n *\r\n * This error may be thrown from corrupted trees.\r\n *\r\n * @error model-node-not-found-in-parent\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/nodelist\r\n */\r\n\r\nimport Node from './node';\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\n\r\n/**\r\n * Provides an interface to operate on a list of {@link module:engine/model/node~Node nodes}. `NodeList` is used internally\r\n * in classes like {@link module:engine/model/element~Element Element}\r\n * or {@link module:engine/model/documentfragment~DocumentFragment DocumentFragment}.\r\n */\r\nexport default class NodeList {\r\n\t/**\r\n\t * Creates an empty node list.\r\n\t *\r\n\t * @protected\r\n\t * @param {Iterable.<module:engine/model/node~Node>} nodes Nodes contained in this node list.\r\n\t */\r\n\tconstructor( nodes ) {\r\n\t\t/**\r\n\t\t * Nodes contained in this node list.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Array.<module:engine/model/node~Node>}\r\n\t\t */\r\n\t\tthis._nodes = [];\r\n\r\n\t\tif ( nodes ) {\r\n\t\t\tthis._insertNodes( 0, nodes );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Iterable interface.\r\n\t *\r\n\t * Iterates over all nodes contained inside this node list.\r\n\t *\r\n\t * @returns {Iterable.<module:engine/model/node~Node>}\r\n\t */\r\n\t[ Symbol.iterator ]() {\r\n\t\treturn this._nodes[ Symbol.iterator ]();\r\n\t}\r\n\r\n\t/**\r\n\t * Number of nodes contained inside this node list.\r\n\t *\r\n\t * @readonly\r\n\t * @type {Number}\r\n\t */\r\n\tget length() {\r\n\t\treturn this._nodes.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Sum of {@link module:engine/model/node~Node#offsetSize offset sizes} of all nodes contained inside this node list.\r\n\t *\r\n\t * @readonly\r\n\t * @type {Number}\r\n\t */\r\n\tget maxOffset() {\r\n\t\treturn this._nodes.reduce( ( sum, node ) => sum + node.offsetSize, 0 );\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the node at the given index. Returns `null` if incorrect index was passed.\r\n\t *\r\n\t * @param {Number} index Index of node.\r\n\t * @returns {module:engine/model/node~Node|null} Node at given index.\r\n\t */\r\n\tgetNode( index ) {\r\n\t\treturn this._nodes[ index ] || null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an index of the given node. Returns `null` if given node is not inside this node list.\r\n\t *\r\n\t * @param {module:engine/model/node~Node} node Child node to look for.\r\n\t * @returns {Number|null} Child node's index.\r\n\t */\r\n\tgetNodeIndex( node ) {\r\n\t\tconst index = this._nodes.indexOf( node );\r\n\r\n\t\treturn index == -1 ? null : index;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the starting offset of given node. Starting offset is equal to the sum of\r\n\t * {@link module:engine/model/node~Node#offsetSize offset sizes} of all nodes that are before this node in this node list.\r\n\t *\r\n\t * @param {module:engine/model/node~Node} node Node to look for.\r\n\t * @returns {Number|null} Node's starting offset.\r\n\t */\r\n\tgetNodeStartOffset( node ) {\r\n\t\tconst index = this.getNodeIndex( node );\r\n\r\n\t\treturn index === null ? null : this._nodes.slice( 0, index ).reduce( ( sum, node ) => sum + node.offsetSize, 0 );\r\n\t}\r\n\r\n\t/**\r\n\t * Converts index to offset in node list.\r\n\t *\r\n\t * Returns starting offset of a node that is at given index. Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError}\r\n\t * `model-nodelist-index-out-of-bounds` if given index is less than `0` or more than {@link #length}.\r\n\t *\r\n\t * @param {Number} index Node's index.\r\n\t * @returns {Number} Node's starting offset.\r\n\t */\r\n\tindexToOffset( index ) {\r\n\t\tif ( index == this._nodes.length ) {\r\n\t\t\treturn this.maxOffset;\r\n\t\t}\r\n\r\n\t\tconst node = this._nodes[ index ];\r\n\r\n\t\tif ( !node ) {\r\n\t\t\t/**\r\n\t\t\t * Given index cannot be found in the node list.\r\n\t\t\t *\r\n\t\t\t * @error nodelist-index-out-of-bounds\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'model-nodelist-index-out-of-bounds: Given index cannot be found in the node list.', this );\r\n\t\t}\r\n\r\n\t\treturn this.getNodeStartOffset( node );\r\n\t}\r\n\r\n\t/**\r\n\t * Converts offset in node list to index.\r\n\t *\r\n\t * Returns index of a node that occupies given offset. Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError}\r\n\t * `model-nodelist-offset-out-of-bounds` if given offset is less than `0` or more than {@link #maxOffset}.\r\n\t *\r\n\t * @param {Number} offset Offset to look for.\r\n\t * @returns {Number} Index of a node that occupies given offset.\r\n\t */\r\n\toffsetToIndex( offset ) {\r\n\t\tlet totalOffset = 0;\r\n\r\n\t\tfor ( const node of this._nodes ) {\r\n\t\t\tif ( offset >= totalOffset && offset < totalOffset + node.offsetSize ) {\r\n\t\t\t\treturn this.getNodeIndex( node );\r\n\t\t\t}\r\n\r\n\t\t\ttotalOffset += node.offsetSize;\r\n\t\t}\r\n\r\n\t\tif ( totalOffset != offset ) {\r\n\t\t\t/**\r\n\t\t\t * Given offset cannot be found in the node list.\r\n\t\t\t *\r\n\t\t\t * @error model-nodelist-offset-out-of-bounds\r\n\t\t\t * @param {Number} offset\r\n\t\t\t * @param {module:engine/model/nodelist~NodeList} nodeList Stringified node list.\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'model-nodelist-offset-out-of-bounds: Given offset cannot be found in the node list.',\r\n\t\t\t\tthis,\r\n\t\t\t\t{\r\n\t\t\t\t\toffset,\r\n\t\t\t\t\tnodeList: this\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn this.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Inserts given nodes at given index.\r\n\t *\r\n\t * @protected\r\n\t * @param {Number} index Index at which nodes should be inserted.\r\n\t * @param {Iterable.<module:engine/model/node~Node>} nodes Nodes to be inserted.\r\n\t */\r\n\t_insertNodes( index, nodes ) {\r\n\t\t// Validation.\r\n\t\tfor ( const node of nodes ) {\r\n\t\t\tif ( !( node instanceof Node ) ) {\r\n\t\t\t\t/**\r\n\t\t\t\t * Trying to insert an object which is not a Node instance.\r\n\t\t\t\t *\r\n\t\t\t\t * @error nodelist-insertNodes-not-node\r\n\t\t\t\t */\r\n\t\t\t\tthrow new CKEditorError(\r\n\t\t\t\t\t'model-nodelist-insertNodes-not-node: Trying to insert an object which is not a Node instance.',\r\n\t\t\t\t\tthis\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._nodes.splice( index, 0, ...nodes );\r\n\t}\r\n\r\n\t/**\r\n\t * Removes one or more nodes starting at the given index.\r\n\t *\r\n\t * @protected\r\n\t * @param {Number} indexStart Index of the first node to remove.\r\n\t * @param {Number} [howMany=1] Number of nodes to remove.\r\n\t * @returns {Array.<module:engine/model/node~Node>} Array containing removed nodes.\r\n\t */\r\n\t_removeNodes( indexStart, howMany = 1 ) {\r\n\t\treturn this._nodes.splice( indexStart, howMany );\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `NodeList` instance to an array containing nodes that were inserted in the node list. Nodes\r\n\t * are also converted to their plain object representation.\r\n\t *\r\n\t * @returns {Array.<module:engine/model/node~Node>} `NodeList` instance converted to `Array`.\r\n\t */\r\n\ttoJSON() {\r\n\t\treturn this._nodes.map( node => node.toJSON() );\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/operation/attributeoperation\r\n */\r\n\r\nimport Operation from './operation';\r\nimport Range from '../range';\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\nimport { _setAttribute } from './utils';\r\nimport { isEqual } from 'lodash-es';\r\n\r\n/**\r\n * Operation to change nodes' attribute.\r\n *\r\n * Using this class you can add, remove or change value of the attribute.\r\n *\r\n * @extends module:engine/model/operation/operation~Operation\r\n */\r\nexport default class AttributeOperation extends Operation {\r\n\t/**\r\n\t * Creates an operation that changes, removes or adds attributes.\r\n\t *\r\n\t * If only `newValue` is set, attribute will be added on a node. Note that all nodes in operation's range must not\r\n\t * have an attribute with the same key as the added attribute.\r\n\t *\r\n\t * If only `oldValue` is set, then attribute with given key will be removed. Note that all nodes in operation's range\r\n\t * must have an attribute with that key added.\r\n\t *\r\n\t * If both `newValue` and `oldValue` are set, then the operation will change the attribute value. Note that all nodes in\r\n\t * operation's ranges must already have an attribute with given key and `oldValue` as value\r\n\t *\r\n\t * @param {module:engine/model/range~Range} range Range on which the operation should be applied. Must be a flat range.\r\n\t * @param {String} key Key of an attribute to change or remove.\r\n\t * @param {*} oldValue Old value of the attribute with given key or `null`, if attribute was not set before.\r\n\t * @param {*} newValue New value of the attribute with given key or `null`, if operation should remove attribute.\r\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\r\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\r\n\t */\r\n\tconstructor( range, key, oldValue, newValue, baseVersion ) {\r\n\t\tsuper( baseVersion );\r\n\r\n\t\t/**\r\n\t\t * Range on which operation should be applied.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/model/range~Range}\r\n\t\t */\r\n\t\tthis.range = range.clone();\r\n\r\n\t\t/**\r\n\t\t * Key of an attribute to change or remove.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {String}\r\n\t\t */\r\n\t\tthis.key = key;\r\n\r\n\t\t/**\r\n\t\t * Old value of the attribute with given key or `null`, if attribute was not set before.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {*}\r\n\t\t */\r\n\t\tthis.oldValue = oldValue === undefined ? null : oldValue;\r\n\r\n\t\t/**\r\n\t\t * New value of the attribute with given key or `null`, if operation should remove attribute.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {*}\r\n\t\t */\r\n\t\tthis.newValue = newValue === undefined ? null : newValue;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tget type() {\r\n\t\tif ( this.oldValue === null ) {\r\n\t\t\treturn 'addAttribute';\r\n\t\t} else if ( this.newValue === null ) {\r\n\t\t\treturn 'removeAttribute';\r\n\t\t} else {\r\n\t\t\treturn 'changeAttribute';\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns an operation that has the same parameters as this operation.\r\n\t *\r\n\t * @returns {module:engine/model/operation/attributeoperation~AttributeOperation} Clone of this operation.\r\n\t */\r\n\tclone() {\r\n\t\treturn new AttributeOperation( this.range, this.key, this.oldValue, this.newValue, this.baseVersion );\r\n\t}\r\n\r\n\t/**\r\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\r\n\t *\r\n\t * @returns {module:engine/model/operation/attributeoperation~AttributeOperation}\r\n\t */\r\n\tgetReversed() {\r\n\t\treturn new AttributeOperation( this.range, this.key, this.newValue, this.oldValue, this.baseVersion + 1 );\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\ttoJSON() {\r\n\t\tconst json = super.toJSON();\r\n\r\n\t\tjson.range = this.range.toJSON();\r\n\r\n\t\treturn json;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\t_validate() {\r\n\t\tif ( !this.range.isFlat ) {\r\n\t\t\t/**\r\n\t\t\t * The range to change is not flat.\r\n\t\t\t *\r\n\t\t\t * @error attribute-operation-range-not-flat\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'attribute-operation-range-not-flat: The range to change is not flat.', this );\r\n\t\t}\r\n\r\n\t\tfor ( const item of this.range.getItems( { shallow: true } ) ) {\r\n\t\t\tif ( this.oldValue !== null && !isEqual( item.getAttribute( this.key ), this.oldValue ) ) {\r\n\t\t\t\t/**\r\n\t\t\t\t * Changed node has different attribute value than operation's old attribute value.\r\n\t\t\t\t *\r\n\t\t\t\t * @error attribute-operation-wrong-old-value\r\n\t\t\t\t * @param {module:engine/model/item~Item} item\r\n\t\t\t\t * @param {String} key\r\n\t\t\t\t * @param {*} value\r\n\t\t\t\t */\r\n\t\t\t\tthrow new CKEditorError(\r\n\t\t\t\t\t'attribute-operation-wrong-old-value: Changed node has different attribute value than operation\\'s ' +\r\n\t\t\t\t\t'old attribute value.',\r\n\t\t\t\t\tthis,\r\n\t\t\t\t\t{ item, key: this.key, value: this.oldValue }\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.oldValue === null && this.newValue !== null && item.hasAttribute( this.key ) ) {\r\n\t\t\t\t/**\r\n\t\t\t\t * The attribute with given key already exists for the given node.\r\n\t\t\t\t *\r\n\t\t\t\t * @error attribute-operation-attribute-exists\r\n\t\t\t\t * @param {module:engine/model/node~Node} node\r\n\t\t\t\t * @param {String} key\r\n\t\t\t\t */\r\n\t\t\t\tthrow new CKEditorError(\r\n\t\t\t\t\t'attribute-operation-attribute-exists: The attribute with given key already exists.',\r\n\t\t\t\t\tthis,\r\n\t\t\t\t\t{ node: item, key: this.key }\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\t_execute() {\r\n\t\t// If value to set is same as old value, don't do anything.\r\n\t\tif ( !isEqual( this.oldValue, this.newValue ) ) {\r\n\t\t\t// Execution.\r\n\t\t\t_setAttribute( this.range, this.key, this.newValue );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get className() {\r\n\t\treturn 'AttributeOperation';\r\n\t}\r\n\r\n\t/**\r\n\t * Creates `AttributeOperation` object from deserilized object, i.e. from parsed JSON string.\r\n\t *\r\n\t * @param {Object} json Deserialized JSON object.\r\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\r\n\t * @returns {module:engine/model/operation/attributeoperation~AttributeOperation}\r\n\t */\r\n\tstatic fromJSON( json, document ) {\r\n\t\treturn new AttributeOperation( Range.fromJSON( json.range, document ), json.key, json.oldValue, json.newValue, json.baseVersion );\r\n\t}\r\n\r\n\t// @if CK_DEBUG_ENGINE // toString() {\r\n\t// @if CK_DEBUG_ENGINE // \treturn `AttributeOperation( ${ this.baseVersion } ): ` +\r\n\t// @if CK_DEBUG_ENGINE //\t\t`\"${ this.key }\": ${ JSON.stringify( this.oldValue ) }` +\r\n\t// @if CK_DEBUG_ENGINE //\t\t` -> ${ JSON.stringify( this.newValue ) }, ${ this.range }`;\r\n\t// @if CK_DEBUG_ENGINE // }\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/operation/detachoperation\r\n */\r\n\r\nimport Operation from './operation';\r\nimport Range from '../range';\r\nimport { _remove } from './utils';\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\n\r\n// @if CK_DEBUG_ENGINE // const ModelRange = require( '../range' ).default;\r\n\r\n/**\r\n * Operation to permanently remove node from detached root.\r\n * Note this operation is only a local operation and won't be send to the other clients.\r\n *\r\n * @extends module:engine/model/operation/operation~Operation\r\n */\r\nexport default class DetachOperation extends Operation {\r\n\t/**\r\n\t * Creates an insert operation.\r\n\t *\r\n\t * @param {module:engine/model/position~Position} sourcePosition\r\n\t * Position before the first {@link module:engine/model/item~Item model item} to move.\r\n\t * @param {Number} howMany Offset size of moved range. Moved range will start from `sourcePosition` and end at\r\n\t * `sourcePosition` with offset shifted by `howMany`.\r\n\t */\r\n\tconstructor( sourcePosition, howMany ) {\r\n\t\tsuper( null );\r\n\r\n\t\t/**\r\n\t\t * Position before the first {@link module:engine/model/item~Item model item} to detach.\r\n\t\t *\r\n\t\t * @member {module:engine/model/position~Position} #sourcePosition\r\n\t\t */\r\n\t\tthis.sourcePosition = sourcePosition.clone();\r\n\r\n\t\t/**\r\n\t\t * Offset size of moved range.\r\n\t\t *\r\n\t\t * @member {Number} #howMany\r\n\t\t */\r\n\t\tthis.howMany = howMany;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tget type() {\r\n\t\treturn 'detach';\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\ttoJSON() {\r\n\t\tconst json = super.toJSON();\r\n\r\n\t\tjson.sourcePosition = this.sourcePosition.toJSON();\r\n\r\n\t\treturn json;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\t_validate() {\r\n\t\tif ( this.sourcePosition.root.document ) {\r\n\t\t\t/**\r\n\t\t\t * Cannot detach document node.\r\n\t\t\t *\r\n\t\t\t * @error detach-operation-on-document-node\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'detach-operation-on-document-node: Cannot detach document node.', this );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\t_execute() {\r\n\t\t_remove( Range._createFromPositionAndShift( this.sourcePosition, this.howMany ) );\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get className() {\r\n\t\treturn 'DetachOperation';\r\n\t}\r\n\r\n\t// @if CK_DEBUG_ENGINE // toString() {\r\n\t// @if CK_DEBUG_ENGINE // const range = ModelRange._createFromPositionAndShift( this.sourcePosition, this.howMany );\r\n\t// @if CK_DEBUG_ENGINE //\tconst nodes = Array.from( range.getItems() );\r\n\t// @if CK_DEBUG_ENGINE //\tconst nodeString = nodes.length > 1 ? `[ ${ nodes.length } ]` : nodes[ 0 ];\r\n\r\n\t// @if CK_DEBUG_ENGINE //\treturn `DetachOperation( ${ this.baseVersion } ): ${ nodeString } -> ${ range }`;\r\n\t// @if CK_DEBUG_ENGINE // }\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/operation/insertoperation\r\n */\r\n\r\nimport Operation from './operation';\r\nimport Position from '../position';\r\nimport NodeList from '../nodelist';\r\nimport MoveOperation from './moveoperation';\r\nimport { _insert, _normalizeNodes } from './utils';\r\nimport Text from '../text';\r\nimport Element from '../element';\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\n\r\n/**\r\n * Operation to insert one or more nodes at given position in the model.\r\n *\r\n * @extends module:engine/model/operation/operation~Operation\r\n */\r\nexport default class InsertOperation extends Operation {\r\n\t/**\r\n\t * Creates an insert operation.\r\n\t *\r\n\t * @param {module:engine/model/position~Position} position Position of insertion.\r\n\t * @param {module:engine/model/node~NodeSet} nodes The list of nodes to be inserted.\r\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\r\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\r\n\t */\r\n\tconstructor( position, nodes, baseVersion ) {\r\n\t\tsuper( baseVersion );\r\n\r\n\t\t/**\r\n\t\t * Position of insertion.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/insertoperation~InsertOperation#position\r\n\t\t */\r\n\t\tthis.position = position.clone();\r\n\t\tthis.position.stickiness = 'toNone';\r\n\r\n\t\t/**\r\n\t\t * List of nodes to insert.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/model/nodelist~NodeList} module:engine/model/operation/insertoperation~InsertOperation#nodeList\r\n\t\t */\r\n\t\tthis.nodes = new NodeList( _normalizeNodes( nodes ) );\r\n\r\n\t\t/**\r\n\t\t * Flag deciding how the operation should be transformed. If set to `true`, nodes might get additional attributes\r\n\t\t * during operational transformation. This happens when the operation insertion position is inside of a range\r\n\t\t * where attributes have changed.\r\n\t\t *\r\n\t\t * @member {Boolean} module:engine/model/operation/insertoperation~InsertOperation#shouldReceiveAttributes\r\n\t\t */\r\n\t\tthis.shouldReceiveAttributes = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tget type() {\r\n\t\treturn 'insert';\r\n\t}\r\n\r\n\t/**\r\n\t * Total offset size of inserted nodes.\r\n\t *\r\n\t * @returns {Number}\r\n\t */\r\n\tget howMany() {\r\n\t\treturn this.nodes.maxOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns an operation that has the same parameters as this operation.\r\n\t *\r\n\t * @returns {module:engine/model/operation/insertoperation~InsertOperation} Clone of this operation.\r\n\t */\r\n\tclone() {\r\n\t\tconst nodes = new NodeList( [ ...this.nodes ].map( node => node._clone( true ) ) );\r\n\t\tconst insert = new InsertOperation( this.position, nodes, this.baseVersion );\r\n\r\n\t\tinsert.shouldReceiveAttributes = this.shouldReceiveAttributes;\r\n\r\n\t\treturn insert;\r\n\t}\r\n\r\n\t/**\r\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\r\n\t *\r\n\t * @returns {module:engine/model/operation/moveoperation~MoveOperation}\r\n\t */\r\n\tgetReversed() {\r\n\t\tconst graveyard = this.position.root.document.graveyard;\r\n\t\tconst gyPosition = new Position( graveyard, [ 0 ] );\r\n\r\n\t\treturn new MoveOperation( this.position, this.nodes.maxOffset, gyPosition, this.baseVersion + 1 );\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\t_validate() {\r\n\t\tconst targetElement = this.position.parent;\r\n\r\n\t\tif ( !targetElement || targetElement.maxOffset < this.position.offset ) {\r\n\t\t\t/**\r\n\t\t\t * Insertion position is invalid.\r\n\t\t\t *\r\n\t\t\t * @error insert-operation-position-invalid\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'insert-operation-position-invalid: Insertion position is invalid.',\r\n\t\t\t\tthis\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\t_execute() {\r\n\t\t// What happens here is that we want original nodes be passed to writer because we want original nodes\r\n\t\t// to be inserted to the model. But in InsertOperation, we want to keep those nodes as they were added\r\n\t\t// to the operation, not modified. For example, text nodes can get merged or cropped while Elements can\r\n\t\t// get children. It is important that InsertOperation has the copy of original nodes in intact state.\r\n\t\tconst originalNodes = this.nodes;\r\n\t\tthis.nodes = new NodeList( [ ...originalNodes ].map( node => node._clone( true ) ) );\r\n\r\n\t\t_insert( this.position, originalNodes );\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\ttoJSON() {\r\n\t\tconst json = super.toJSON();\r\n\r\n\t\tjson.position = this.position.toJSON();\r\n\t\tjson.nodes = this.nodes.toJSON();\r\n\r\n\t\treturn json;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get className() {\r\n\t\treturn 'InsertOperation';\r\n\t}\r\n\r\n\t/**\r\n\t * Creates `InsertOperation` object from deserilized object, i.e. from parsed JSON string.\r\n\t *\r\n\t * @param {Object} json Deserialized JSON object.\r\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\r\n\t * @returns {module:engine/model/operation/insertoperation~InsertOperation}\r\n\t */\r\n\tstatic fromJSON( json, document ) {\r\n\t\tconst children = [];\r\n\r\n\t\tfor ( const child of json.nodes ) {\r\n\t\t\tif ( child.name ) {\r\n\t\t\t\t// If child has name property, it is an Element.\r\n\t\t\t\tchildren.push( Element.fromJSON( child ) );\r\n\t\t\t} else {\r\n\t\t\t\t// Otherwise, it is a Text node.\r\n\t\t\t\tchildren.push( Text.fromJSON( child ) );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst insert = new InsertOperation( Position.fromJSON( json.position, document ), children, json.baseVersion );\r\n\t\tinsert.shouldReceiveAttributes = json.shouldReceiveAttributes;\r\n\r\n\t\treturn insert;\r\n\t}\r\n\r\n\t// @if CK_DEBUG_ENGINE // toString() {\r\n\t// @if CK_DEBUG_ENGINE // \tconst nodeString = this.nodes.length > 1 ? `[ ${ this.nodes.length } ]` : this.nodes.getNode( 0 );\r\n\r\n\t// @if CK_DEBUG_ENGINE //\treturn `InsertOperation( ${ this.baseVersion } ): ${ nodeString } -> ${ this.position }`;\r\n\t// @if CK_DEBUG_ENGINE // }\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/operation/markeroperation\r\n */\r\n\r\nimport Operation from './operation';\r\nimport Range from '../range';\r\n\r\n/**\r\n * @extends module:engine/model/operation/operation~Operation\r\n */\r\nexport default class MarkerOperation extends Operation {\r\n\t/**\r\n\t * @param {String} name Marker name.\r\n\t * @param {module:engine/model/range~Range} oldRange Marker range before the change.\r\n\t * @param {module:engine/model/range~Range} newRange Marker range after the change.\r\n\t * @param {module:engine/model/markercollection~MarkerCollection} markers Marker collection on which change should be executed.\r\n\t * @param {Boolean} affectsData Specifies whether the marker operation affects the data produced by the data pipeline\r\n\t * (is persisted in the editor's data).\r\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\r\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\r\n\t */\r\n\tconstructor( name, oldRange, newRange, markers, affectsData, baseVersion ) {\r\n\t\tsuper( baseVersion );\r\n\r\n\t\t/**\r\n\t\t * Marker name.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {String}\r\n\t\t */\r\n\t\tthis.name = name;\r\n\r\n\t\t/**\r\n\t\t * Marker range before the change.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/model/range~Range}\r\n\t\t */\r\n\t\tthis.oldRange = oldRange ? oldRange.clone() : null;\r\n\r\n\t\t/**\r\n\t\t * Marker range after the change.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/model/range~Range}\r\n\t\t */\r\n\t\tthis.newRange = newRange ? newRange.clone() : null;\r\n\r\n\t\t/**\r\n\t\t * Specifies whether the marker operation affects the data produced by the data pipeline\r\n\t\t * (is persisted in the editor's data).\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Boolean}\r\n\t\t */\r\n\t\tthis.affectsData = affectsData;\r\n\r\n\t\t/**\r\n\t\t * Marker collection on which change should be executed.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {module:engine/model/markercollection~MarkerCollection}\r\n\t\t */\r\n\t\tthis._markers = markers;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tget type() {\r\n\t\treturn 'marker';\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns an operation that has the same parameters as this operation.\r\n\t *\r\n\t * @returns {module:engine/model/operation/markeroperation~MarkerOperation} Clone of this operation.\r\n\t */\r\n\tclone() {\r\n\t\treturn new MarkerOperation( this.name, this.oldRange, this.newRange, this._markers, this.affectsData, this.baseVersion );\r\n\t}\r\n\r\n\t/**\r\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\r\n\t *\r\n\t * @returns {module:engine/model/operation/markeroperation~MarkerOperation}\r\n\t */\r\n\tgetReversed() {\r\n\t\treturn new MarkerOperation( this.name, this.newRange, this.oldRange, this._markers, this.affectsData, this.baseVersion + 1 );\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\t_execute() {\r\n\t\tconst type = this.newRange ? '_set' : '_remove';\r\n\r\n\t\tthis._markers[ type ]( this.name, this.newRange, true, this.affectsData );\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\ttoJSON() {\r\n\t\tconst json = super.toJSON();\r\n\r\n\t\tif ( this.oldRange ) {\r\n\t\t\tjson.oldRange = this.oldRange.toJSON();\r\n\t\t}\r\n\r\n\t\tif ( this.newRange ) {\r\n\t\t\tjson.newRange = this.newRange.toJSON();\r\n\t\t}\r\n\r\n\t\tdelete json._markers;\r\n\r\n\t\treturn json;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get className() {\r\n\t\treturn 'MarkerOperation';\r\n\t}\r\n\r\n\t/**\r\n\t * Creates `MarkerOperation` object from deserialized object, i.e. from parsed JSON string.\r\n\t *\r\n\t * @param {Object} json Deserialized JSON object.\r\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\r\n\t * @returns {module:engine/model/operation/markeroperation~MarkerOperation}\r\n\t */\r\n\tstatic fromJSON( json, document ) {\r\n\t\treturn new MarkerOperation(\r\n\t\t\tjson.name,\r\n\t\t\tjson.oldRange ? Range.fromJSON( json.oldRange, document ) : null,\r\n\t\t\tjson.newRange ? Range.fromJSON( json.newRange, document ) : null,\r\n\t\t\tdocument.model.markers,\r\n\t\t\tjson.affectsData,\r\n\t\t\tjson.baseVersion\r\n\t\t);\r\n\t}\r\n\r\n\t// @if CK_DEBUG_ENGINE // toString() {\r\n\t// @if CK_DEBUG_ENGINE // \treturn `MarkerOperation( ${ this.baseVersion } ): ` +\r\n\t// @if CK_DEBUG_ENGINE //\t\t`\"${ this.name }\": ${ this.oldRange } -> ${ this.newRange }`;\r\n\t// @if CK_DEBUG_ENGINE // }\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/operation/mergeoperation\r\n */\r\n\r\nimport Operation from './operation';\r\nimport SplitOperation from './splitoperation';\r\nimport Position from '../position';\r\nimport Range from '../range';\r\nimport { _move } from './utils';\r\n\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\n\r\n/**\r\n * Operation to merge two {@link module:engine/model/element~Element elements}.\r\n *\r\n * The merged element is the parent of {@link ~MergeOperation#sourcePosition} and it is merged into the parent of\r\n * {@link ~MergeOperation#targetPosition}. All nodes from the merged element are moved to {@link ~MergeOperation#targetPosition}.\r\n *\r\n * The merged element is moved to the graveyard at {@link ~MergeOperation#graveyardPosition}.\r\n *\r\n * @extends module:engine/model/operation/operation~Operation\r\n */\r\nexport default class MergeOperation extends Operation {\r\n\t/**\r\n\t * Creates a merge operation.\r\n\t *\r\n\t * @param {module:engine/model/position~Position} sourcePosition Position inside the merged element. All nodes from that\r\n\t * element after that position will be moved to {@link ~#targetPosition}.\r\n\t * @param {Number} howMany Summary offset size of nodes which will be moved from the merged element to the new parent.\r\n\t * @param {module:engine/model/position~Position} targetPosition Position which the nodes from the merged elements will be moved to.\r\n\t * @param {module:engine/model/position~Position} graveyardPosition Position in graveyard to which the merged element will be moved.\r\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\r\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\r\n\t */\r\n\tconstructor( sourcePosition, howMany, targetPosition, graveyardPosition, baseVersion ) {\r\n\t\tsuper( baseVersion );\r\n\r\n\t\t/**\r\n\t\t * Position inside the merged element. All nodes from that element after that position will be moved to {@link ~#targetPosition}.\r\n\t\t *\r\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/mergeoperation~MergeOperation#sourcePosition\r\n\t\t */\r\n\t\tthis.sourcePosition = sourcePosition.clone();\r\n\t\t// This is, and should always remain, the first position in its parent.\r\n\t\tthis.sourcePosition.stickiness = 'toPrevious';\r\n\r\n\t\t/**\r\n\t\t * Summary offset size of nodes which will be moved from the merged element to the new parent.\r\n\t\t *\r\n\t\t * @member {Number} module:engine/model/operation/mergeoperation~MergeOperation#howMany\r\n\t\t */\r\n\t\tthis.howMany = howMany;\r\n\r\n\t\t/**\r\n\t\t * Position which the nodes from the merged elements will be moved to.\r\n\t\t *\r\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/mergeoperation~MergeOperation#targetPosition\r\n\t\t */\r\n\t\tthis.targetPosition = targetPosition.clone();\r\n\t\t// Except of a rare scenario in `MergeOperation` x `MergeOperation` transformation,\r\n\t\t// this is, and should always remain, the last position in its parent.\r\n\t\tthis.targetPosition.stickiness = 'toNext';\r\n\r\n\t\t/**\r\n\t\t * Position in graveyard to which the merged element will be moved.\r\n\t\t *\r\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/mergeoperation~MergeOperation#graveyardPosition\r\n\t\t */\r\n\t\tthis.graveyardPosition = graveyardPosition.clone();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tget type() {\r\n\t\treturn 'merge';\r\n\t}\r\n\r\n\t/**\r\n\t * Position before the merged element (which will be deleted).\r\n\t *\r\n\t * @readonly\r\n\t * @type {module:engine/model/position~Position}\r\n\t */\r\n\tget deletionPosition() {\r\n\t\treturn new Position( this.sourcePosition.root, this.sourcePosition.path.slice( 0, -1 ) );\r\n\t}\r\n\r\n\t/**\r\n\t * Artificial range that contains all the nodes from the merged element that will be moved to {@link ~MergeOperation#sourcePosition}.\r\n\t * The range starts at {@link ~MergeOperation#sourcePosition} and ends in the same parent, at `POSITIVE_INFINITY` offset.\r\n\t *\r\n\t * @readonly\r\n\t * @type {module:engine/model/range~Range}\r\n\t */\r\n\tget movedRange() {\r\n\t\tconst end = this.sourcePosition.getShiftedBy( Number.POSITIVE_INFINITY );\r\n\r\n\t\treturn new Range( this.sourcePosition, end );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns an operation that has the same parameters as this operation.\r\n\t *\r\n\t * @returns {module:engine/model/operation/mergeoperation~MergeOperation} Clone of this operation.\r\n\t */\r\n\tclone() {\r\n\t\treturn new this.constructor( this.sourcePosition, this.howMany, this.targetPosition, this.graveyardPosition, this.baseVersion );\r\n\t}\r\n\r\n\t/**\r\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\r\n\t *\r\n\t * @returns {module:engine/model/operation/splitoperation~SplitOperation}\r\n\t */\r\n\tgetReversed() {\r\n\t\t// Positions in this method are transformed by this merge operation because the split operation bases on\r\n\t\t// the context after this merge operation happened (because split operation reverses it).\r\n\t\t// So we need to acknowledge that the merge operation happened and those positions changed a little.\r\n\t\tconst targetPosition = this.targetPosition._getTransformedByMergeOperation( this );\r\n\r\n\t\tconst path = this.sourcePosition.path.slice( 0, -1 );\r\n\t\tconst insertionPosition = new Position( this.sourcePosition.root, path )._getTransformedByMergeOperation( this );\r\n\r\n\t\tconst split = new SplitOperation( targetPosition, this.howMany, this.graveyardPosition, this.baseVersion + 1 );\r\n\t\tsplit.insertionPosition = insertionPosition;\r\n\r\n\t\treturn split;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\t_validate() {\r\n\t\tconst sourceElement = this.sourcePosition.parent;\r\n\t\tconst targetElement = this.targetPosition.parent;\r\n\r\n\t\t// Validate whether merge operation has correct parameters.\r\n\t\tif ( !sourceElement.parent ) {\r\n\t\t\t/**\r\n\t\t\t * Merge source position is invalid. The element to be merged must have a parent node.\r\n\t\t\t *\r\n\t\t\t * @error merge-operation-source-position-invalid\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'merge-operation-source-position-invalid: Merge source position is invalid.', this );\r\n\t\t} else if ( !targetElement.parent ) {\r\n\t\t\t/**\r\n\t\t\t * Merge target position is invalid. The element to be merged must have a parent node.\r\n\t\t\t *\r\n\t\t\t * @error merge-operation-target-position-invalid\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'merge-operation-target-position-invalid: Merge target position is invalid.', this );\r\n\t\t} else if ( this.howMany != sourceElement.maxOffset ) {\r\n\t\t\t/**\r\n\t\t\t * Merge operation specifies wrong number of nodes to move.\r\n\t\t\t *\r\n\t\t\t * @error merge-operation-how-many-invalid\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'merge-operation-how-many-invalid: Merge operation specifies wrong number of nodes to move.', this );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\t_execute() {\r\n\t\tconst mergedElement = this.sourcePosition.parent;\r\n\t\tconst sourceRange = Range._createIn( mergedElement );\r\n\r\n\t\t_move( sourceRange, this.targetPosition );\r\n\t\t_move( Range._createOn( mergedElement ), this.graveyardPosition );\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\ttoJSON() {\r\n\t\tconst json = super.toJSON();\r\n\r\n\t\tjson.sourcePosition = json.sourcePosition.toJSON();\r\n\t\tjson.targetPosition = json.targetPosition.toJSON();\r\n\t\tjson.graveyardPosition = json.graveyardPosition.toJSON();\r\n\r\n\t\treturn json;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get className() {\r\n\t\treturn 'MergeOperation';\r\n\t}\r\n\r\n\t/**\r\n\t * Creates `MergeOperation` object from deserilized object, i.e. from parsed JSON string.\r\n\t *\r\n\t * @param {Object} json Deserialized JSON object.\r\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\r\n\t * @returns {module:engine/model/operation/mergeoperation~MergeOperation}\r\n\t */\r\n\tstatic fromJSON( json, document ) {\r\n\t\tconst sourcePosition = Position.fromJSON( json.sourcePosition, document );\r\n\t\tconst targetPosition = Position.fromJSON( json.targetPosition, document );\r\n\t\tconst graveyardPosition = Position.fromJSON( json.graveyardPosition, document );\r\n\r\n\t\treturn new this( sourcePosition, json.howMany, targetPosition, graveyardPosition, json.baseVersion );\r\n\t}\r\n\r\n\t// @if CK_DEBUG_ENGINE // toString() {\r\n\t// @if CK_DEBUG_ENGINE // \treturn `MergeOperation( ${ this.baseVersion } ): ` +\r\n\t// @if CK_DEBUG_ENGINE //\t\t`${ this.sourcePosition } -> ${ this.targetPosition }` +\r\n\t// @if CK_DEBUG_ENGINE //\t\t` ( ${ this.howMany } ), ${ this.graveyardPosition }`;\r\n\t// @if CK_DEBUG_ENGINE // }\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/operation/moveoperation\r\n */\r\n\r\nimport Operation from './operation';\r\nimport Position from '../position';\r\nimport Range from '../range';\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\r\nimport { _move } from './utils';\r\n\r\n// @if CK_DEBUG_ENGINE // const ModelRange = require( '../range' ).default;\r\n\r\n/**\r\n * Operation to move a range of {@link module:engine/model/item~Item model items}\r\n * to given {@link module:engine/model/position~Position target position}.\r\n *\r\n * @extends module:engine/model/operation/operation~Operation\r\n */\r\nexport default class MoveOperation extends Operation {\r\n\t/**\r\n\t * Creates a move operation.\r\n\t *\r\n\t * @param {module:engine/model/position~Position} sourcePosition\r\n\t * Position before the first {@link module:engine/model/item~Item model item} to move.\r\n\t * @param {Number} howMany Offset size of moved range. Moved range will start from `sourcePosition` and end at\r\n\t * `sourcePosition` with offset shifted by `howMany`.\r\n\t * @param {module:engine/model/position~Position} targetPosition Position at which moved nodes will be inserted.\r\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\r\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\r\n\t */\r\n\tconstructor( sourcePosition, howMany, targetPosition, baseVersion ) {\r\n\t\tsuper( baseVersion );\r\n\r\n\t\t/**\r\n\t\t * Position before the first {@link module:engine/model/item~Item model item} to move.\r\n\t\t *\r\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/moveoperation~MoveOperation#sourcePosition\r\n\t\t */\r\n\t\tthis.sourcePosition = sourcePosition.clone();\r\n\t\t// `'toNext'` because `sourcePosition` is a bit like a start of the moved range.\r\n\t\tthis.sourcePosition.stickiness = 'toNext';\r\n\r\n\t\t/**\r\n\t\t * Offset size of moved range.\r\n\t\t *\r\n\t\t * @member {Number} module:engine/model/operation/moveoperation~MoveOperation#howMany\r\n\t\t */\r\n\t\tthis.howMany = howMany;\r\n\r\n\t\t/**\r\n\t\t * Position at which moved nodes will be inserted.\r\n\t\t *\r\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/moveoperation~MoveOperation#targetPosition\r\n\t\t */\r\n\t\tthis.targetPosition = targetPosition.clone();\r\n\t\tthis.targetPosition.stickiness = 'toNone';\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tget type() {\r\n\t\tif ( this.targetPosition.root.rootName == '$graveyard' ) {\r\n\t\t\treturn 'remove';\r\n\t\t} else if ( this.sourcePosition.root.rootName == '$graveyard' ) {\r\n\t\t\treturn 'reinsert';\r\n\t\t}\r\n\r\n\t\treturn 'move';\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns an operation that has the same parameters as this operation.\r\n\t *\r\n\t * @returns {module:engine/model/operation/moveoperation~MoveOperation} Clone of this operation.\r\n\t */\r\n\tclone() {\r\n\t\treturn new this.constructor( this.sourcePosition, this.howMany, this.targetPosition, this.baseVersion );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the start position of the moved range after it got moved. This may be different than\r\n\t * {@link module:engine/model/operation/moveoperation~MoveOperation#targetPosition} in some cases, i.e. when a range is moved\r\n\t * inside the same parent but {@link module:engine/model/operation/moveoperation~MoveOperation#targetPosition targetPosition}\r\n\t * is after {@link module:engine/model/operation/moveoperation~MoveOperation#sourcePosition sourcePosition}.\r\n\t *\r\n\t *\t\t vv              vv\r\n\t *\t\tabcdefg ===> adefbcg\r\n\t *\t\t     ^          ^\r\n\t *\t\t     targetPos\tmovedRangeStart\r\n\t *\t\t     offset 6\toffset 4\r\n\t *\r\n\t * @returns {module:engine/model/position~Position}\r\n\t */\r\n\tgetMovedRangeStart() {\r\n\t\treturn this.targetPosition._getTransformedByDeletion( this.sourcePosition, this.howMany );\r\n\t}\r\n\r\n\t/**\r\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\r\n\t *\r\n\t * @returns {module:engine/model/operation/moveoperation~MoveOperation}\r\n\t */\r\n\tgetReversed() {\r\n\t\tconst newTargetPosition = this.sourcePosition._getTransformedByInsertion( this.targetPosition, this.howMany );\r\n\r\n\t\treturn new this.constructor( this.getMovedRangeStart(), this.howMany, newTargetPosition, this.baseVersion + 1 );\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\t_validate() {\r\n\t\tconst sourceElement = this.sourcePosition.parent;\r\n\t\tconst targetElement = this.targetPosition.parent;\r\n\t\tconst sourceOffset = this.sourcePosition.offset;\r\n\t\tconst targetOffset = this.targetPosition.offset;\r\n\r\n\t\t// Validate whether move operation has correct parameters.\r\n\t\t// Validation is pretty complex but move operation is one of the core ways to manipulate the document state.\r\n\t\t// We expect that many errors might be connected with one of scenarios described below.\r\n\t\tif ( sourceOffset + this.howMany > sourceElement.maxOffset ) {\r\n\t\t\t/**\r\n\t\t\t * The nodes which should be moved do not exist.\r\n\t\t\t *\r\n\t\t\t * @error move-operation-nodes-do-not-exist\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'move-operation-nodes-do-not-exist: The nodes which should be moved do not exist.', this\r\n\t\t\t);\r\n\t\t} else if ( sourceElement === targetElement && sourceOffset < targetOffset && targetOffset < sourceOffset + this.howMany ) {\r\n\t\t\t/**\r\n\t\t\t * Trying to move a range of nodes into the middle of that range.\r\n\t\t\t *\r\n\t\t\t * @error move-operation-range-into-itself\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'move-operation-range-into-itself: Trying to move a range of nodes to the inside of that range.', this\r\n\t\t\t);\r\n\t\t} else if ( this.sourcePosition.root == this.targetPosition.root ) {\r\n\t\t\tif ( compareArrays( this.sourcePosition.getParentPath(), this.targetPosition.getParentPath() ) == 'prefix' ) {\r\n\t\t\t\tconst i = this.sourcePosition.path.length - 1;\r\n\r\n\t\t\t\tif ( this.targetPosition.path[ i ] >= sourceOffset && this.targetPosition.path[ i ] < sourceOffset + this.howMany ) {\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Trying to move a range of nodes into one of nodes from that range.\r\n\t\t\t\t\t *\r\n\t\t\t\t\t * @error move-operation-node-into-itself\r\n\t\t\t\t\t */\r\n\t\t\t\t\tthrow new CKEditorError(\r\n\t\t\t\t\t\t'move-operation-node-into-itself: Trying to move a range of nodes into one of nodes from that range.', this\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\t_execute() {\r\n\t\t_move( Range._createFromPositionAndShift( this.sourcePosition, this.howMany ), this.targetPosition );\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\ttoJSON() {\r\n\t\tconst json = super.toJSON();\r\n\r\n\t\tjson.sourcePosition = this.sourcePosition.toJSON();\r\n\t\tjson.targetPosition = this.targetPosition.toJSON();\r\n\r\n\t\treturn json;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get className() {\r\n\t\treturn 'MoveOperation';\r\n\t}\r\n\r\n\t/**\r\n\t * Creates `MoveOperation` object from deserilized object, i.e. from parsed JSON string.\r\n\t *\r\n\t * @param {Object} json Deserialized JSON object.\r\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\r\n\t * @returns {module:engine/model/operation/moveoperation~MoveOperation}\r\n\t */\r\n\tstatic fromJSON( json, document ) {\r\n\t\tconst sourcePosition = Position.fromJSON( json.sourcePosition, document );\r\n\t\tconst targetPosition = Position.fromJSON( json.targetPosition, document );\r\n\r\n\t\treturn new this( sourcePosition, json.howMany, targetPosition, json.baseVersion );\r\n\t}\r\n\r\n\t// @if CK_DEBUG_ENGINE // toString() {\r\n\t// @if CK_DEBUG_ENGINE // \tconst range = ModelRange._createFromPositionAndShift( this.sourcePosition, this.howMany );\r\n\r\n\t// @if CK_DEBUG_ENGINE //\treturn `MoveOperation( ${ this.baseVersion } ): ${ range } -> ${ this.targetPosition }`;\r\n\t// @if CK_DEBUG_ENGINE // }\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/operation/nooperation\r\n */\r\n\r\nimport Operation from './operation';\r\n\r\n/**\r\n * Operation which is doing nothing (\"empty operation\", \"do-nothing operation\", \"noop\"). This is an operation,\r\n * which when executed does not change the tree model. It still has some parameters defined for transformation purposes.\r\n *\r\n * In most cases this operation is a result of transforming operations. When transformation returns\r\n * {@link module:engine/model/operation/nooperation~NoOperation} it means that changes done by the transformed operation\r\n * have already been applied.\r\n *\r\n * @extends module:engine/model/operation/operation~Operation\r\n */\r\nexport default class NoOperation extends Operation {\r\n\tget type() {\r\n\t\treturn 'noop';\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns an operation that has the same parameters as this operation.\r\n\t *\r\n\t * @returns {module:engine/model/operation/nooperation~NoOperation} Clone of this operation.\r\n\t */\r\n\tclone() {\r\n\t\treturn new NoOperation( this.baseVersion );\r\n\t}\r\n\r\n\t/**\r\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\r\n\t *\r\n\t * @returns {module:engine/model/operation/nooperation~NoOperation}\r\n\t */\r\n\tgetReversed() {\r\n\t\treturn new NoOperation( this.baseVersion + 1 );\r\n\t}\r\n\r\n\t_execute() {\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get className() {\r\n\t\treturn 'NoOperation';\r\n\t}\r\n\r\n\t// @if CK_DEBUG_ENGINE // toString() {\r\n\t// @if CK_DEBUG_ENGINE // \treturn `NoOperation( ${ this.baseVersion } )`;\r\n\t// @if CK_DEBUG_ENGINE // }\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/operation/operation\r\n */\r\n\r\n/**\r\n * Abstract base operation class.\r\n *\r\n * @abstract\r\n */\r\nexport default class Operation {\r\n\t/**\r\n\t * Base operation constructor.\r\n\t *\r\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\r\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\r\n\t */\r\n\tconstructor( baseVersion ) {\r\n\t\t/**\r\n\t\t * {@link module:engine/model/document~Document#version} on which operation can be applied. If you try to\r\n\t\t * {@link module:engine/model/model~Model#applyOperation apply} operation with different base version than the\r\n\t\t * {@link module:engine/model/document~Document#version document version} the\r\n\t\t * {@link module:utils/ckeditorerror~CKEditorError model-document-applyOperation-wrong-version} error is thrown.\r\n\t\t *\r\n\t\t * @member {Number}\r\n\t\t */\r\n\t\tthis.baseVersion = baseVersion;\r\n\r\n\t\t/**\r\n\t\t * Defines whether operation is executed on attached or detached {@link module:engine/model/item~Item items}.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Boolean} #isDocumentOperation\r\n\t\t */\r\n\t\tthis.isDocumentOperation = this.baseVersion !== null;\r\n\r\n\t\t/**\r\n\t\t * {@link module:engine/model/batch~Batch Batch} to which the operation is added or `null` if the operation is not\r\n\t\t * added to any batch yet.\r\n\t\t *\r\n\t\t * @member {module:engine/model/batch~Batch|null} #batch\r\n\t\t */\r\n\t\tthis.batch = null;\r\n\r\n\t\t/**\r\n\t\t * Operation type.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {String} #type\r\n\t\t */\r\n\r\n\t\t/**\r\n\t\t * Creates and returns an operation that has the same parameters as this operation.\r\n\t\t *\r\n\t\t * @method #clone\r\n\t\t * @returns {module:engine/model/operation/operation~Operation} Clone of this operation.\r\n\t\t */\r\n\r\n\t\t/**\r\n\t\t * Creates and returns a reverse operation. Reverse operation when executed right after\r\n\t\t * the original operation will bring back tree model state to the point before the original\r\n\t\t * operation execution. In other words, it reverses changes done by the original operation.\r\n\t\t *\r\n\t\t * Keep in mind that tree model state may change since executing the original operation,\r\n\t\t * so reverse operation will be \"outdated\". In that case you will need to transform it by\r\n\t\t * all operations that were executed after the original operation.\r\n\t\t *\r\n\t\t * @method #getReversed\r\n\t\t * @returns {module:engine/model/operation/operation~Operation} Reversed operation.\r\n\t\t */\r\n\r\n\t\t/**\r\n\t\t * Executes the operation - modifications described by the operation properties will be applied to the model tree.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @method #_execute\r\n\t\t */\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether the operation's parameters are correct and the operation can be correctly executed. Throws\r\n\t * an error if operation is not valid.\r\n\t *\r\n\t * @protected\r\n\t * @method #_validate\r\n\t */\r\n\t_validate() {\r\n\t}\r\n\r\n\t/**\r\n\t * Custom toJSON method to solve child-parent circular dependencies.\r\n\t *\r\n\t * @method #toJSON\r\n\t * @returns {Object} Clone of this object with the operation property replaced with string.\r\n\t */\r\n\ttoJSON() {\r\n\t\t// This method creates only a shallow copy, all nested objects should be defined separately.\r\n\t\t// See https://github.com/ckeditor/ckeditor5-engine/issues/1477.\r\n\t\tconst json = Object.assign( {}, this );\r\n\r\n\t\tjson.__className = this.constructor.className;\r\n\r\n\t\t// Remove reference to the parent `Batch` to avoid circular dependencies.\r\n\t\tdelete json.batch;\r\n\r\n\t\t// Only document operations are shared with other clients so it is not necessary to keep this information.\r\n\t\tdelete json.isDocumentOperation;\r\n\r\n\t\treturn json;\r\n\t}\r\n\r\n\t/**\r\n\t * Name of the operation class used for serialization.\r\n\t *\r\n\t * @type {String}\r\n\t */\r\n\tstatic get className() {\r\n\t\treturn 'Operation';\r\n\t}\r\n\r\n\t/**\r\n\t * Creates Operation object from deserilized object, i.e. from parsed JSON string.\r\n\t *\r\n\t * @param {Object} json Deserialized JSON object.\r\n\t * @param {module:engine/model/document~Document} doc Document on which this operation will be applied.\r\n\t * @returns {module:engine/model/operation/operation~Operation}\r\n\t */\r\n\tstatic fromJSON( json ) {\r\n\t\treturn new this( json.baseVersion );\r\n\t}\r\n\r\n\t// @if CK_DEBUG_ENGINE // log() {\r\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( this.toString() );\r\n\t// @if CK_DEBUG_ENGINE // }\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/operation/operationfactory\r\n */\r\n\r\nimport AttributeOperation from '../operation/attributeoperation';\r\nimport InsertOperation from '../operation/insertoperation';\r\nimport MarkerOperation from '../operation/markeroperation';\r\nimport MoveOperation from '../operation/moveoperation';\r\nimport NoOperation from '../operation/nooperation';\r\nimport Operation from '../operation/operation';\r\nimport RenameOperation from '../operation/renameoperation';\r\nimport RootAttributeOperation from '../operation/rootattributeoperation';\r\nimport SplitOperation from '../operation/splitoperation';\r\nimport MergeOperation from '../operation/mergeoperation';\r\n\r\nconst operations = {};\r\noperations[ AttributeOperation.className ] = AttributeOperation;\r\noperations[ InsertOperation.className ] = InsertOperation;\r\noperations[ MarkerOperation.className ] = MarkerOperation;\r\noperations[ MoveOperation.className ] = MoveOperation;\r\noperations[ NoOperation.className ] = NoOperation;\r\noperations[ Operation.className ] = Operation;\r\noperations[ RenameOperation.className ] = RenameOperation;\r\noperations[ RootAttributeOperation.className ] = RootAttributeOperation;\r\noperations[ SplitOperation.className ] = SplitOperation;\r\noperations[ MergeOperation.className ] = MergeOperation;\r\n\r\n/**\r\n * A factory class for creating operations.\r\n *\r\n * @abstract\r\n */\r\nexport default class OperationFactory {\r\n\t/**\r\n\t * Creates an operation instance from a JSON object (parsed JSON string).\r\n\t *\r\n\t * @param {Object} json Deserialized JSON object.\r\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\r\n\t * @returns {module:engine/model/operation/operation~Operation}\r\n\t */\r\n\tstatic fromJSON( json, document ) {\r\n\t\treturn operations[ json.__className ].fromJSON( json, document );\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/operation/renameoperation\r\n */\r\n\r\nimport Operation from './operation';\r\nimport Element from '../element';\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\nimport Position from '../position';\r\n\r\n/**\r\n * Operation to change element's name.\r\n *\r\n * Using this class you can change element's name.\r\n *\r\n * @extends module:engine/model/operation/operation~Operation\r\n */\r\nexport default class RenameOperation extends Operation {\r\n\t/**\r\n\t * Creates an operation that changes element's name.\r\n\t *\r\n\t * @param {module:engine/model/position~Position} position Position before an element to change.\r\n\t * @param {String} oldName Current name of the element.\r\n\t * @param {String} newName New name for the element.\r\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\r\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\r\n\t */\r\n\tconstructor( position, oldName, newName, baseVersion ) {\r\n\t\tsuper( baseVersion );\r\n\r\n\t\t/**\r\n\t\t * Position before an element to change.\r\n\t\t *\r\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/renameoperation~RenameOperation#position\r\n\t\t */\r\n\t\tthis.position = position;\r\n\t\t// This position sticks to the next node because it is a position before the node that we want to change.\r\n\t\tthis.position.stickiness = 'toNext';\r\n\r\n\t\t/**\r\n\t\t * Current name of the element.\r\n\t\t *\r\n\t\t * @member {String} module:engine/model/operation/renameoperation~RenameOperation#oldName\r\n\t\t */\r\n\t\tthis.oldName = oldName;\r\n\r\n\t\t/**\r\n\t\t * New name for the element.\r\n\t\t *\r\n\t\t * @member {String} module:engine/model/operation/renameoperation~RenameOperation#newName\r\n\t\t */\r\n\t\tthis.newName = newName;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tget type() {\r\n\t\treturn 'rename';\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns an operation that has the same parameters as this operation.\r\n\t *\r\n\t * @returns {module:engine/model/operation/renameoperation~RenameOperation} Clone of this operation.\r\n\t */\r\n\tclone() {\r\n\t\treturn new RenameOperation( this.position.clone(), this.oldName, this.newName, this.baseVersion );\r\n\t}\r\n\r\n\t/**\r\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\r\n\t *\r\n\t * @returns {module:engine/model/operation/renameoperation~RenameOperation}\r\n\t */\r\n\tgetReversed() {\r\n\t\treturn new RenameOperation( this.position.clone(), this.newName, this.oldName, this.baseVersion + 1 );\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\t_validate() {\r\n\t\tconst element = this.position.nodeAfter;\r\n\r\n\t\tif ( !( element instanceof Element ) ) {\r\n\t\t\t/**\r\n\t\t\t * Given position is invalid or node after it is not instance of Element.\r\n\t\t\t *\r\n\t\t\t * @error rename-operation-wrong-position\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'rename-operation-wrong-position: Given position is invalid or node after it is not an instance of Element.',\r\n\t\t\t\tthis\r\n\t\t\t);\r\n\t\t} else if ( element.name !== this.oldName ) {\r\n\t\t\t/**\r\n\t\t\t * Element to change has different name than operation's old name.\r\n\t\t\t *\r\n\t\t\t * @error rename-operation-wrong-name\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'rename-operation-wrong-name: Element to change has different name than operation\\'s old name.',\r\n\t\t\t\tthis\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\t_execute() {\r\n\t\tconst element = this.position.nodeAfter;\r\n\r\n\t\telement.name = this.newName;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\ttoJSON() {\r\n\t\tconst json = super.toJSON();\r\n\r\n\t\tjson.position = this.position.toJSON();\r\n\r\n\t\treturn json;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get className() {\r\n\t\treturn 'RenameOperation';\r\n\t}\r\n\r\n\t/**\r\n\t * Creates `RenameOperation` object from deserialized object, i.e. from parsed JSON string.\r\n\t *\r\n\t * @param {Object} json Deserialized JSON object.\r\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\r\n\t * @returns {module:engine/model/operation/attributeoperation~AttributeOperation}\r\n\t */\r\n\tstatic fromJSON( json, document ) {\r\n\t\treturn new RenameOperation( Position.fromJSON( json.position, document ), json.oldName, json.newName, json.baseVersion );\r\n\t}\r\n\r\n\t// @if CK_DEBUG_ENGINE // toString() {\r\n\t// @if CK_DEBUG_ENGINE // \treturn `RenameOperation( ${ this.baseVersion } ): ` +\r\n\t// @if CK_DEBUG_ENGINE //\t\t`${ this.position }: \"${ this.oldName }\" -> \"${ this.newName }\"`;\r\n\t// @if CK_DEBUG_ENGINE // }\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/operation/rootattributeoperation\r\n */\r\n\r\nimport Operation from './operation';\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\n\r\n/**\r\n * Operation to change root element's attribute. Using this class you can add, remove or change value of the attribute.\r\n *\r\n * This operation is needed, because root elements can't be changed through\r\n * @link module:engine/model/operation/attributeoperation~AttributeOperation}.\r\n * It is because {@link module:engine/model/operation/attributeoperation~AttributeOperation}\r\n * requires a range to change and root element can't\r\n * be a part of range because every {@link module:engine/model/position~Position} has to be inside a root.\r\n * {@link module:engine/model/position~Position} can't be created before a root element.\r\n *\r\n * @extends module:engine/model/operation/operation~Operation\r\n */\r\nexport default class RootAttributeOperation extends Operation {\r\n\t/**\r\n\t * Creates an operation that changes, removes or adds attributes on root element.\r\n\t *\r\n\t * @see module:engine/model/operation/attributeoperation~AttributeOperation\r\n\t * @param {module:engine/model/rootelement~RootElement} root Root element to change.\r\n\t * @param {String} key Key of an attribute to change or remove.\r\n\t * @param {*} oldValue Old value of the attribute with given key or `null` if adding a new attribute.\r\n\t * @param {*} newValue New value to set for the attribute. If `null`, then the operation just removes the attribute.\r\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\r\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\r\n\t */\r\n\tconstructor( root, key, oldValue, newValue, baseVersion ) {\r\n\t\tsuper( baseVersion );\r\n\r\n\t\t/**\r\n\t\t * Root element to change.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/model/rootelement~RootElement}\r\n\t\t */\r\n\t\tthis.root = root;\r\n\r\n\t\t/**\r\n\t\t * Key of an attribute to change or remove.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {String}\r\n\t\t */\r\n\t\tthis.key = key;\r\n\r\n\t\t/**\r\n\t\t * Old value of the attribute with given key or `null` if adding a new attribute.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {*}\r\n\t\t */\r\n\t\tthis.oldValue = oldValue;\r\n\r\n\t\t/**\r\n\t\t * New value to set for the attribute. If `null`, then the operation just removes the attribute.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {*}\r\n\t\t */\r\n\t\tthis.newValue = newValue;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tget type() {\r\n\t\tif ( this.oldValue === null ) {\r\n\t\t\treturn 'addRootAttribute';\r\n\t\t} else if ( this.newValue === null ) {\r\n\t\t\treturn 'removeRootAttribute';\r\n\t\t} else {\r\n\t\t\treturn 'changeRootAttribute';\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns an operation that has the same parameters as this operation.\r\n\t *\r\n\t * @returns {module:engine/model/operation/rootattributeoperation~RootAttributeOperation} Clone of this operation.\r\n\t */\r\n\tclone() {\r\n\t\treturn new RootAttributeOperation( this.root, this.key, this.oldValue, this.newValue, this.baseVersion );\r\n\t}\r\n\r\n\t/**\r\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\r\n\t *\r\n\t * @returns {module:engine/model/operation/rootattributeoperation~RootAttributeOperation}\r\n\t */\r\n\tgetReversed() {\r\n\t\treturn new RootAttributeOperation( this.root, this.key, this.newValue, this.oldValue, this.baseVersion + 1 );\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\t_validate() {\r\n\t\tif ( this.root != this.root.root || this.root.is( 'documentFragment' ) ) {\r\n\t\t\t/**\r\n\t\t\t * The element to change is not a root element.\r\n\t\t\t *\r\n\t\t\t * @error rootattribute-operation-not-a-root\r\n\t\t\t * @param {module:engine/model/rootelement~RootElement} root\r\n\t\t\t * @param {String} key\r\n\t\t\t * @param {*} value\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'rootattribute-operation-not-a-root: The element to change is not a root element.',\r\n\t\t\t\tthis,\r\n\t\t\t\t{ root: this.root, key: this.key }\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif ( this.oldValue !== null && this.root.getAttribute( this.key ) !== this.oldValue ) {\r\n\t\t\t/**\r\n\t\t\t * The attribute which should be removed does not exists for the given node.\r\n\t\t\t *\r\n\t\t\t * @error rootattribute-operation-wrong-old-value\r\n\t\t\t * @param {module:engine/model/rootelement~RootElement} root\r\n\t\t\t * @param {String} key\r\n\t\t\t * @param {*} value\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'rootattribute-operation-wrong-old-value: Changed node has different attribute value than operation\\'s ' +\r\n\t\t\t\t'old attribute value.',\r\n\t\t\t\tthis,\r\n\t\t\t\t{ root: this.root, key: this.key }\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif ( this.oldValue === null && this.newValue !== null && this.root.hasAttribute( this.key ) ) {\r\n\t\t\t/**\r\n\t\t\t * The attribute with given key already exists for the given node.\r\n\t\t\t *\r\n\t\t\t * @error rootattribute-operation-attribute-exists\r\n\t\t\t * @param {module:engine/model/rootelement~RootElement} root\r\n\t\t\t * @param {String} key\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'rootattribute-operation-attribute-exists: The attribute with given key already exists.',\r\n\t\t\t\tthis,\r\n\t\t\t\t{ root: this.root, key: this.key }\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\t_execute() {\r\n\t\tif ( this.newValue !== null ) {\r\n\t\t\tthis.root._setAttribute( this.key, this.newValue );\r\n\t\t} else {\r\n\t\t\tthis.root._removeAttribute( this.key );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\ttoJSON() {\r\n\t\tconst json = super.toJSON();\r\n\r\n\t\tjson.root = this.root.toJSON();\r\n\r\n\t\treturn json;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get className() {\r\n\t\treturn 'RootAttributeOperation';\r\n\t}\r\n\r\n\t/**\r\n\t * Creates RootAttributeOperation object from deserilized object, i.e. from parsed JSON string.\r\n\t *\r\n\t * @param {Object} json Deserialized JSON object.\r\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\r\n\t * @returns {module:engine/model/operation/rootattributeoperation~RootAttributeOperation}\r\n\t */\r\n\tstatic fromJSON( json, document ) {\r\n\t\tif ( !document.getRoot( json.root ) ) {\r\n\t\t\t/**\r\n\t\t\t * Cannot create RootAttributeOperation for document. Root with specified name does not exist.\r\n\t\t\t *\r\n\t\t\t * @error rootattributeoperation-fromjson-no-root\r\n\t\t\t * @param {String} rootName\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'rootattribute-operation-fromjson-no-root: Cannot create RootAttributeOperation. Root with specified name does not exist.',\r\n\t\t\t\tthis,\r\n\t\t\t\t{ rootName: json.root }\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn new RootAttributeOperation( document.getRoot( json.root ), json.key, json.oldValue, json.newValue, json.baseVersion );\r\n\t}\r\n\r\n\t// @if CK_DEBUG_ENGINE // toString() {\r\n\t// @if CK_DEBUG_ENGINE // \treturn `RootAttributeOperation( ${ this.baseVersion } ): ` +\r\n\t// @if CK_DEBUG_ENGINE //\t\t`\"${ this.key }\": ${ JSON.stringify( this.oldValue ) }` +\r\n\t// @if CK_DEBUG_ENGINE //\t\t` -> ${ JSON.stringify( this.newValue ) }, ${ this.root.rootName }`;\r\n\t// @if CK_DEBUG_ENGINE // }\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/operation/splitoperation\r\n */\r\n\r\nimport Operation from './operation';\r\nimport MergeOperation from './mergeoperation';\r\nimport Position from '../position';\r\nimport Range from '../range';\r\nimport { _insert, _move } from './utils';\r\n\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\n\r\n/**\r\n * Operation to split {@link module:engine/model/element~Element an element} at given\r\n * {@link module:engine/model/operation/splitoperation~SplitOperation#splitPosition split position} into two elements,\r\n * both containing a part of the element's original content.\r\n *\r\n * @extends module:engine/model/operation/operation~Operation\r\n */\r\nexport default class SplitOperation extends Operation {\r\n\t/**\r\n\t * Creates a split operation.\r\n\t *\r\n\t * @param {module:engine/model/position~Position} splitPosition Position at which an element should be split.\r\n\t * @param {Number} howMany Total offset size of elements that are in the split element after `position`.\r\n\t * @param {module:engine/model/position~Position|null} graveyardPosition Position in the graveyard root before the element which\r\n\t * should be used as a parent of the nodes after `position`. If it is not set, a copy of the the `position` parent will be used.\r\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\r\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\r\n\t */\r\n\tconstructor( splitPosition, howMany, graveyardPosition, baseVersion ) {\r\n\t\tsuper( baseVersion );\r\n\r\n\t\t/**\r\n\t\t * Position at which an element should be split.\r\n\t\t *\r\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/splitoperation~SplitOperation#splitPosition\r\n\t\t */\r\n\t\tthis.splitPosition = splitPosition.clone();\r\n\t\t// Keep position sticking to the next node. This way any new content added at the place where the element is split\r\n\t\t// will be left in the original element.\r\n\t\tthis.splitPosition.stickiness = 'toNext';\r\n\r\n\t\t/**\r\n\t\t * Total offset size of elements that are in the split element after `position`.\r\n\t\t *\r\n\t\t * @member {Number} module:engine/model/operation/splitoperation~SplitOperation#howMany\r\n\t\t */\r\n\t\tthis.howMany = howMany;\r\n\r\n\t\t/**\r\n\t\t * Position at which the clone of split element (or element from graveyard) will be inserted.\r\n\t\t *\r\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/splitoperation~SplitOperation#insertionPosition\r\n\t\t */\r\n\t\tthis.insertionPosition = SplitOperation.getInsertionPosition( splitPosition );\r\n\t\tthis.insertionPosition.stickiness = 'toNone';\r\n\r\n\t\t/**\r\n\t\t * Position in the graveyard root before the element which should be used as a parent of the nodes after `position`.\r\n\t\t * If it is not set, a copy of the the `position` parent will be used.\r\n\t\t *\r\n\t\t * The default behavior is to clone the split element. Element from graveyard is used during undo.\r\n\t\t *\r\n\t\t * @member {module:engine/model/position~Position|null} #graveyardPosition\r\n\t\t */\r\n\t\tthis.graveyardPosition = graveyardPosition ? graveyardPosition.clone() : null;\r\n\r\n\t\tif ( this.graveyardPosition ) {\r\n\t\t\tthis.graveyardPosition.stickiness = 'toNext';\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tget type() {\r\n\t\treturn 'split';\r\n\t}\r\n\r\n\t/**\r\n\t * Position inside the new clone of a split element.\r\n\t *\r\n\t * This is a position where nodes that are after the split position will be moved to.\r\n\t *\r\n\t * @readonly\r\n\t * @type {module:engine/model/position~Position}\r\n\t */\r\n\tget moveTargetPosition() {\r\n\t\tconst path = this.insertionPosition.path.slice();\r\n\t\tpath.push( 0 );\r\n\r\n\t\treturn new Position( this.insertionPosition.root, path );\r\n\t}\r\n\r\n\t/**\r\n\t * Artificial range that contains all the nodes from the split element that will be moved to the new element.\r\n\t * The range starts at {@link ~#splitPosition} and ends in the same parent, at `POSITIVE_INFINITY` offset.\r\n\t *\r\n\t * @readonly\r\n\t * @type {module:engine/model/range~Range}\r\n\t */\r\n\tget movedRange() {\r\n\t\tconst end = this.splitPosition.getShiftedBy( Number.POSITIVE_INFINITY );\r\n\r\n\t\treturn new Range( this.splitPosition, end );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns an operation that has the same parameters as this operation.\r\n\t *\r\n\t * @returns {module:engine/model/operation/splitoperation~SplitOperation} Clone of this operation.\r\n\t */\r\n\tclone() {\r\n\t\tconst split = new this.constructor( this.splitPosition, this.howMany, this.graveyardPosition, this.baseVersion );\r\n\t\tsplit.insertionPosition = this.insertionPosition;\r\n\r\n\t\treturn split;\r\n\t}\r\n\r\n\t/**\r\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\r\n\t *\r\n\t * @returns {module:engine/model/operation/mergeoperation~MergeOperation}\r\n\t */\r\n\tgetReversed() {\r\n\t\tconst graveyard = this.splitPosition.root.document.graveyard;\r\n\t\tconst graveyardPosition = new Position( graveyard, [ 0 ] );\r\n\r\n\t\treturn new MergeOperation( this.moveTargetPosition, this.howMany, this.splitPosition, graveyardPosition, this.baseVersion + 1 );\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\t_validate() {\r\n\t\tconst element = this.splitPosition.parent;\r\n\t\tconst offset = this.splitPosition.offset;\r\n\r\n\t\t// Validate whether split operation has correct parameters.\r\n\t\tif ( !element || element.maxOffset < offset ) {\r\n\t\t\t/**\r\n\t\t\t * Split position is invalid.\r\n\t\t\t *\r\n\t\t\t * @error split-operation-position-invalid\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'split-operation-position-invalid: Split position is invalid.', this );\r\n\t\t} else if ( !element.parent ) {\r\n\t\t\t/**\r\n\t\t\t * Cannot split root element.\r\n\t\t\t *\r\n\t\t\t * @error split-operation-split-in-root\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'split-operation-split-in-root: Cannot split root element.', this );\r\n\t\t} else if ( this.howMany != element.maxOffset - this.splitPosition.offset ) {\r\n\t\t\t/**\r\n\t\t\t * Split operation specifies wrong number of nodes to move.\r\n\t\t\t *\r\n\t\t\t * @error split-operation-how-many-invalid\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'split-operation-how-many-invalid: Split operation specifies wrong number of nodes to move.', this );\r\n\t\t} else if ( this.graveyardPosition && !this.graveyardPosition.nodeAfter ) {\r\n\t\t\t/**\r\n\t\t\t * Graveyard position invalid.\r\n\t\t\t *\r\n\t\t\t * @error split-operation-graveyard-position-invalid\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'split-operation-graveyard-position-invalid: Graveyard position invalid.', this );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\t_execute() {\r\n\t\tconst splitElement = this.splitPosition.parent;\r\n\r\n\t\tif ( this.graveyardPosition ) {\r\n\t\t\t_move( Range._createFromPositionAndShift( this.graveyardPosition, 1 ), this.insertionPosition );\r\n\t\t} else {\r\n\t\t\tconst newElement = splitElement._clone();\r\n\r\n\t\t\t_insert( this.insertionPosition, newElement );\r\n\t\t}\r\n\r\n\t\tconst sourceRange = new Range(\r\n\t\t\tPosition._createAt( splitElement, this.splitPosition.offset ),\r\n\t\t\tPosition._createAt( splitElement, splitElement.maxOffset )\r\n\t\t);\r\n\r\n\t\t_move( sourceRange, this.moveTargetPosition );\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\ttoJSON() {\r\n\t\tconst json = super.toJSON();\r\n\r\n\t\tjson.splitPosition = this.splitPosition.toJSON();\r\n\t\tjson.insertionPosition = this.insertionPosition.toJSON();\r\n\r\n\t\tif ( this.graveyardPosition ) {\r\n\t\t\tjson.graveyardPosition = this.graveyardPosition.toJSON();\r\n\t\t}\r\n\r\n\t\treturn json;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get className() {\r\n\t\treturn 'SplitOperation';\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function that returns a default insertion position basing on given `splitPosition`. The default insertion\r\n\t * position is after the split element.\r\n\t *\r\n\t * @param {module:engine/model/position~Position} splitPosition\r\n\t * @returns {module:engine/model/position~Position}\r\n\t */\r\n\tstatic getInsertionPosition( splitPosition ) {\r\n\t\tconst path = splitPosition.path.slice( 0, -1 );\r\n\t\tpath[ path.length - 1 ]++;\r\n\r\n\t\treturn new Position( splitPosition.root, path );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates `SplitOperation` object from deserilized object, i.e. from parsed JSON string.\r\n\t *\r\n\t * @param {Object} json Deserialized JSON object.\r\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\r\n\t * @returns {module:engine/model/operation/splitoperation~SplitOperation}\r\n\t */\r\n\tstatic fromJSON( json, document ) {\r\n\t\tconst splitPosition = Position.fromJSON( json.splitPosition, document );\r\n\t\tconst insertionPosition = Position.fromJSON( json.insertionPosition, document );\r\n\t\tconst graveyardPosition = json.graveyardPosition ? Position.fromJSON( json.graveyardPosition, document ) : null;\r\n\r\n\t\tconst split = new this( splitPosition, json.howMany, graveyardPosition, json.baseVersion );\r\n\t\tsplit.insertionPosition = insertionPosition;\r\n\r\n\t\treturn split;\r\n\t}\r\n\r\n\t// @if CK_DEBUG_ENGINE // toString() {\r\n\t// @if CK_DEBUG_ENGINE // \treturn `SplitOperation( ${ this.baseVersion } ): ${ this.splitPosition } ` +\r\n\t// @if CK_DEBUG_ENGINE //\t\t`( ${ this.howMany } ) -> ${ this.insertionPosition }` +\r\n\t// @if CK_DEBUG_ENGINE //\t\t`${ this.graveyardPosition ? ' with ' + this.graveyardPosition : '' }`;\r\n\t// @if CK_DEBUG_ENGINE // }\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\nimport InsertOperation from './insertoperation';\r\nimport AttributeOperation from './attributeoperation';\r\nimport RenameOperation from './renameoperation';\r\nimport MarkerOperation from './markeroperation';\r\nimport MoveOperation from './moveoperation';\r\nimport RootAttributeOperation from './rootattributeoperation';\r\nimport MergeOperation from './mergeoperation';\r\nimport SplitOperation from './splitoperation';\r\nimport NoOperation from './nooperation';\r\nimport Range from '../range';\r\nimport Position from '../position';\r\n\r\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\r\n\r\nconst transformations = new Map();\r\n\r\n/**\r\n * @module engine/model/operation/transform\r\n */\r\n\r\n/**\r\n * Sets a transformation function to be be used to transform instances of class `OperationA` by instances of class `OperationB`.\r\n *\r\n * The `transformationFunction` is passed three parameters:\r\n *\r\n * * `a` - operation to be transformed, an instance of `OperationA`,\r\n * * `b` - operation to be transformed by, an instance of `OperationB`,\r\n * * {@link module:engine/model/operation/transform~TransformationContext `context`} - object with additional information about\r\n * transformation context.\r\n *\r\n * The `transformationFunction` should return transformation result, which is an array with one or multiple\r\n * {@link module:engine/model/operation/operation~Operation operation} instances.\r\n *\r\n * @protected\r\n * @param {Function} OperationA\r\n * @param {Function} OperationB\r\n * @param {Function} transformationFunction Function to use for transforming.\r\n */\r\nfunction setTransformation( OperationA, OperationB, transformationFunction ) {\r\n\tlet aGroup = transformations.get( OperationA );\r\n\r\n\tif ( !aGroup ) {\r\n\t\taGroup = new Map();\r\n\t\ttransformations.set( OperationA, aGroup );\r\n\t}\r\n\r\n\taGroup.set( OperationB, transformationFunction );\r\n}\r\n\r\n/**\r\n * Returns a previously set transformation function for transforming an instance of `OperationA` by an instance of `OperationB`.\r\n *\r\n * If no transformation was set for given pair of operations, {@link module:engine/model/operation/transform~noUpdateTransformation}\r\n * is returned. This means that if no transformation was set, the `OperationA` instance will not change when transformed\r\n * by the `OperationB` instance.\r\n *\r\n * @private\r\n * @param {Function} OperationA\r\n * @param {Function} OperationB\r\n * @returns {Function} Function set to transform an instance of `OperationA` by an instance of `OperationB`.\r\n */\r\nfunction getTransformation( OperationA, OperationB ) {\r\n\tconst aGroup = transformations.get( OperationA );\r\n\r\n\tif ( aGroup && aGroup.has( OperationB ) ) {\r\n\t\treturn aGroup.get( OperationB );\r\n\t}\r\n\r\n\treturn noUpdateTransformation;\r\n}\r\n\r\n/**\r\n * A transformation function that only clones operation to transform, without changing it.\r\n *\r\n * @private\r\n * @param {module:engine/model/operation/operation~Operation} a Operation to transform.\r\n * @returns {Array.<module:engine/model/operation/operation~Operation>}\r\n */\r\nfunction noUpdateTransformation( a ) {\r\n\treturn [ a ];\r\n}\r\n\r\n/**\r\n * Transforms operation `a` by operation `b`.\r\n *\r\n * @param {module:engine/model/operation/operation~Operation} a Operation to be transformed.\r\n * @param {module:engine/model/operation/operation~Operation} b Operation to transform by.\r\n * @param {module:engine/model/operation/transform~TransformationContext} context Transformation context for this transformation.\r\n * @returns {Array.<module:engine/model/operation/operation~Operation>} Transformation result.\r\n */\r\nexport function transform( a, b, context = {} ) {\r\n\tconst transformationFunction = getTransformation( a.constructor, b.constructor );\r\n\r\n\ttry {\r\n\t\ta = a.clone();\r\n\r\n\t\treturn transformationFunction( a, b, context );\r\n\t} catch ( e ) {\r\n\t\t// @if CK_DEBUG // console.warn( 'Error during operation transformation!', e.message );\r\n\t\t// @if CK_DEBUG // console.warn( 'Transformed operation', a );\r\n\t\t// @if CK_DEBUG // console.warn( 'Operation transformed by', b );\r\n\t\t// @if CK_DEBUG // console.warn( 'context.aIsStrong', context.aIsStrong );\r\n\t\t// @if CK_DEBUG // console.warn( 'context.aWasUndone', context.aWasUndone );\r\n\t\t// @if CK_DEBUG // console.warn( 'context.bWasUndone', context.bWasUndone );\r\n\t\t// @if CK_DEBUG // console.warn( 'context.abRelation', context.abRelation );\r\n\t\t// @if CK_DEBUG // console.warn( 'context.baRelation', context.baRelation );\r\n\r\n\t\tthrow e;\r\n\t}\r\n}\r\n\r\n/**\r\n * Performs a transformation of two sets of operations - `operationsA` and `operationsB`. The transformation is two-way -\r\n * both transformed `operationsA` and transformed `operationsB` are returned.\r\n *\r\n * Note, that the first operation in each set should base on the same document state (\r\n * {@link module:engine/model/document~Document#version document version}).\r\n *\r\n * It is assumed that `operationsA` are \"more important\" during conflict resolution between two operations.\r\n *\r\n * New copies of both passed arrays and operations inside them are returned. Passed arguments are not altered.\r\n *\r\n * Base versions of the transformed operations sets are updated accordingly. For example, assume that base versions are `4`\r\n * and there are `3` operations in `operationsA` and `5` operations in `operationsB`. Then:\r\n *\r\n * * transformed `operationsA` will start from base version `9` (`4` base version + `5` operations B),\r\n * * transformed `operationsB` will start from base version `7` (`4` base version + `3` operations A).\r\n *\r\n * If no operation was broken into two during transformation, then both sets will end up with an operation that bases on version `11`:\r\n *\r\n * * transformed `operationsA` start from `9` and there are `3` of them, so the last will have `baseVersion` equal to `11`,\r\n * * transformed `operationsB` start from `7` and there are `5` of them, so the last will have `baseVersion` equal to `11`.\r\n *\r\n * @param {Array.<module:engine/model/operation/operation~Operation>} operationsA\r\n * @param {Array.<module:engine/model/operation/operation~Operation>} operationsB\r\n * @param {Object} options Additional transformation options.\r\n * @param {module:engine/model/document~Document|null} options.document Document which the operations change.\r\n * @param {Boolean} [options.useRelations=false] Whether during transformation relations should be used (used during undo for\r\n * better conflict resolution).\r\n * @param {Boolean} [options.padWithNoOps=false] Whether additional {@link module:engine/model/operation/nooperation~NoOperation}s\r\n * should be added to the transformation results to force the same last base version for both transformed sets (in case\r\n * if some operations got broken into multiple operations during transformation).\r\n * @returns {Object} Transformation result.\r\n * @returns {Array.<module:engine/model/operation/operation~Operation>} return.operationsA Transformed `operationsA`.\r\n * @returns {Array.<module:engine/model/operation/operation~Operation>} return.operationsB Transformed `operationsB`.\r\n * @returns {Map} return.originalOperations A map that links transformed operations to original operations. The keys are the transformed\r\n * operations and the values are the original operations from the input (`operationsA` and `operationsB`).\r\n */\r\nexport function transformSets( operationsA, operationsB, options ) {\r\n\t// Create new arrays so the originally passed arguments are not changed.\r\n\t// No need to clone operations, they are cloned as they are transformed.\r\n\toperationsA = operationsA.slice();\r\n\toperationsB = operationsB.slice();\r\n\r\n\tconst contextFactory = new ContextFactory( options.document, options.useRelations, options.forceWeakRemove );\r\n\tcontextFactory.setOriginalOperations( operationsA );\r\n\tcontextFactory.setOriginalOperations( operationsB );\r\n\r\n\tconst originalOperations = contextFactory.originalOperations;\r\n\r\n\t// If one of sets is empty there is simply nothing to transform, so return sets as they are.\r\n\tif ( operationsA.length == 0 || operationsB.length == 0 ) {\r\n\t\treturn { operationsA, operationsB, originalOperations };\r\n\t}\r\n\t//\r\n\t// Following is a description of transformation process:\r\n\t//\r\n\t// There are `operationsA` and `operationsB` to be transformed, both by both.\r\n\t//\r\n\t// So, suppose we have sets of two operations each: `operationsA` = `[ a1, a2 ]`, `operationsB` = `[ b1, b2 ]`.\r\n\t//\r\n\t// Remember, that we can only transform operations that base on the same context. We assert that `a1` and `b1` base on\r\n\t// the same context and we transform them. Then, we get `a1'` and `b1'`. `a2` bases on a context with `a1` -- `a2`\r\n\t// is an operation that followed `a1`. Similarly, `b2` bases on a context with `b1`.\r\n\t//\r\n\t// However, since `a1'` is a result of transformation by `b1`, `a1'` now also has a context with `b1`. This means that\r\n\t// we can safely transform `a1'` by `b2`. As we finish transforming `a1`, we also transformed all `operationsB`.\r\n\t// All `operationsB` also have context including `a1`. Now, we can properly transform `a2` by those operations.\r\n\t//\r\n\t// The transformation process can be visualized on a transformation diagram (\"diamond diagram\"):\r\n\t//\r\n\t//          [the initial state]\r\n\t//         [common for a1 and b1]\r\n\t//\r\n\t//                   *\r\n\t//                  / \\\r\n\t//                 /   \\\r\n\t//               b1     a1\r\n\t//               /       \\\r\n\t//              /         \\\r\n\t//             *           *\r\n\t//            / \\         / \\\r\n\t//           /   \\       /   \\\r\n\t//         b2    a1'   b1'    a2\r\n\t//         /       \\   /       \\\r\n\t//        /         \\ /         \\\r\n\t//       *           *           *\r\n\t//        \\         / \\         /\r\n\t//         \\       /   \\       /\r\n\t//        a1''   b2'   a2'   b1''\r\n\t//           \\   /       \\   /\r\n\t//            \\ /         \\ /\r\n\t//             *           *\r\n\t//              \\         /\r\n\t//               \\       /\r\n\t//              a2''   b2''\r\n\t//                 \\   /\r\n\t//                  \\ /\r\n\t//                   *\r\n\t//\r\n\t//           [the final state]\r\n\t//\r\n\t// The final state can be reached from the initial state by applying `a1`, `a2`, `b1''` and `b2''`, as well as by\r\n\t// applying `b1`, `b2`, `a1''`, `a2''`. Note how the operations get to a proper common state before each pair is\r\n\t// transformed.\r\n\t//\r\n\t// Another thing to consider is that an operation during transformation can be broken into multiple operations.\r\n\t// Suppose that `a1` * `b1` = `[ a11', a12' ]` (instead of `a1'` that we considered previously).\r\n\t//\r\n\t// In that case, we leave `a12'` for later and we continue transforming `a11'` until it is transformed by all `operationsB`\r\n\t// (in our case it is just `b2`). At this point, `b1` is transformed by \"whole\" `a1`, while `b2` is only transformed\r\n\t// by `a11'`. Similarly, `a12'` is only transformed by `b1`. This leads to a conclusion that we need to start transforming `a12'`\r\n\t// from the moment just after it was broken. So, `a12'` is transformed by `b2`. Now, \"the whole\" `a1` is transformed\r\n\t// by `operationsB`, while all `operationsB` are transformed by \"the whole\" `a1`. This means that we can continue with\r\n\t// following `operationsA` (in our case it is just `a2`).\r\n\t//\r\n\t// Of course, also `operationsB` can be broken. However, since we focus on transforming operation `a` to the end,\r\n\t// the only thing to do is to store both pieces of operation `b`, so that the next transformed operation `a` will\r\n\t// be transformed by both of them.\r\n\t//\r\n\t//                       *\r\n\t//                      / \\\r\n\t//                     /   \\\r\n\t//                    /     \\\r\n\t//                  b1       a1\r\n\t//                  /         \\\r\n\t//                 /           \\\r\n\t//                /             \\\r\n\t//               *               *\r\n\t//              / \\             / \\\r\n\t//             /  a11'         /   \\\r\n\t//            /     \\         /     \\\r\n\t//          b2       *      b1'      a2\r\n\t//          /       / \\     /         \\\r\n\t//         /       /  a12' /           \\\r\n\t//        /       /     \\ /             \\\r\n\t//       *       b2'     *               *\r\n\t//        \\     /       / \\             /\r\n\t//       a11'' /     b21'' \\           /\r\n\t//          \\ /       /     \\         /\r\n\t//           *       *      a2'     b1''\r\n\t//            \\     / \\       \\     /\r\n\t//          a12'' b22''\\       \\   /\r\n\t//              \\ /     \\       \\ /\r\n\t//               *      a2''     *\r\n\t//                \\       \\     /\r\n\t//                 \\       \\  b21'''\r\n\t//                  \\       \\ /\r\n\t//                a2'''      *\r\n\t//                    \\     /\r\n\t//                     \\  b22'''\r\n\t//                      \\ /\r\n\t//                       *\r\n\t//\r\n\t// Note, how `a1` is broken and transformed into `a11'` and `a12'`, while `b2'` got broken and transformed into `b21''` and `b22''`.\r\n\t//\r\n\t// Having all that on mind, here is an outline for the transformation process algorithm:\r\n\t//\r\n\t// 1. We have `operationsA` and `operationsB` array, which we dynamically update as the transformation process goes.\r\n\t//\r\n\t// 2. We take next (or first) operation from `operationsA` and check from which operation `b` we need to start transforming it.\r\n\t// All original `operationsA` are set to be transformed starting from the first operation `b`.\r\n\t//\r\n\t// 3. We take operations from `operationsB`, one by one, starting from the correct one, and transform operation `a`\r\n\t// by operation `b` (and vice versa). We update `operationsA` and `operationsB` by replacing the original operations\r\n\t// with the transformation results.\r\n\t//\r\n\t// 4. If operation is broken into multiple operations, we save all the new operations in the place of the\r\n\t// original operation.\r\n\t//\r\n\t// 5. Additionally, if operation `a` was broken, for the \"new\" operation, we remember from which operation `b` it should\r\n\t// be transformed by.\r\n\t//\r\n\t// 6. We continue transforming \"current\" operation `a` until it is transformed by all `operationsB`. Then, go to 2.\r\n\t// unless the last operation `a` was transformed.\r\n\t//\r\n\t// The actual implementation of the above algorithm is slightly different, as only one loop (while) is used.\r\n\t// The difference is that we have \"current\" `a` operation to transform and we store the index of the next `b` operation\r\n\t// to transform by. Each loop operates on two indexes then: index pointing to currently processed `a` operation and\r\n\t// index pointing to next `b` operation. Each loop is just one `a * b` + `b * a` transformation. After each loop\r\n\t// operation `b` index is updated. If all `b` operations were visited for the current `a` operation, we change\r\n\t// current `a` operation index to the next one.\r\n\t//\r\n\r\n\t// For each operation `a`, keeps information what is the index in `operationsB` from which the transformation should start.\r\n\tconst nextTransformIndex = new WeakMap();\r\n\r\n\t// For all the original `operationsA`, set that they should be transformed starting from the first of `operationsB`.\r\n\tfor ( const op of operationsA ) {\r\n\t\tnextTransformIndex.set( op, 0 );\r\n\t}\r\n\r\n\t// Additional data that is used for some postprocessing after the main transformation process is done.\r\n\tconst data = {\r\n\t\tnextBaseVersionA: operationsA[ operationsA.length - 1 ].baseVersion + 1,\r\n\t\tnextBaseVersionB: operationsB[ operationsB.length - 1 ].baseVersion + 1,\r\n\t\toriginalOperationsACount: operationsA.length,\r\n\t\toriginalOperationsBCount: operationsB.length\r\n\t};\r\n\r\n\t// Index of currently transformed operation `a`.\r\n\tlet i = 0;\r\n\r\n\t// While not all `operationsA` are transformed...\r\n\twhile ( i < operationsA.length ) {\r\n\t\t// Get \"current\" operation `a`.\r\n\t\tconst opA = operationsA[ i ];\r\n\r\n\t\t// For the \"current\" operation `a`, get the index of the next operation `b` to transform by.\r\n\t\tconst indexB = nextTransformIndex.get( opA );\r\n\r\n\t\t// If operation `a` was already transformed by every operation `b`, change \"current\" operation `a` to the next one.\r\n\t\tif ( indexB == operationsB.length ) {\r\n\t\t\ti++;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tconst opB = operationsB[ indexB ];\r\n\r\n\t\t// Transform `a` by `b` and `b` by `a`.\r\n\t\tconst newOpsA = transform( opA, opB, contextFactory.getContext( opA, opB, true ) );\r\n\t\tconst newOpsB = transform( opB, opA, contextFactory.getContext( opB, opA, false ) );\r\n\t\t// As a result we get one or more `newOpsA` and one or more `newOpsB` operations.\r\n\r\n\t\t// Update contextual information about operations.\r\n\t\tcontextFactory.updateRelation( opA, opB );\r\n\r\n\t\tcontextFactory.setOriginalOperations( newOpsA, opA );\r\n\t\tcontextFactory.setOriginalOperations( newOpsB, opB );\r\n\r\n\t\t// For new `a` operations, update their index of the next operation `b` to transform them by.\r\n\t\t//\r\n\t\t// This is needed even if there was only one result (`a` was not broken) because that information is used\r\n\t\t// at the beginning of this loop every time.\r\n\t\tfor ( const newOpA of newOpsA ) {\r\n\t\t\t// Acknowledge, that operation `b` also might be broken into multiple operations.\r\n\t\t\t//\r\n\t\t\t// This is why we raise `indexB` not just by 1. If `newOpsB` are multiple operations, they will be\r\n\t\t\t// spliced in the place of `opB`. So we need to change `transformBy` accordingly, so that an operation won't\r\n\t\t\t// be transformed by the same operation (part of it) again.\r\n\t\t\tnextTransformIndex.set( newOpA, indexB + newOpsB.length );\r\n\t\t}\r\n\r\n\t\t// Update `operationsA` and `operationsB` with the transformed versions.\r\n\t\toperationsA.splice( i, 1, ...newOpsA );\r\n\t\toperationsB.splice( indexB, 1, ...newOpsB );\r\n\t}\r\n\r\n\tif ( options.padWithNoOps ) {\r\n\t\t// If no-operations padding is enabled, count how many extra `a` and `b` operations were generated.\r\n\t\tconst brokenOperationsACount = operationsA.length - data.originalOperationsACount;\r\n\t\tconst brokenOperationsBCount = operationsB.length - data.originalOperationsBCount;\r\n\r\n\t\t// Then, if that number is not the same, pad `operationsA` or `operationsB` with correct number of no-ops so\r\n\t\t// that the base versions are equalled.\r\n\t\t//\r\n\t\t// Note that only one array will be updated, as only one of those subtractions can be greater than zero.\r\n\t\tpadWithNoOps( operationsA, brokenOperationsBCount - brokenOperationsACount );\r\n\t\tpadWithNoOps( operationsB, brokenOperationsACount - brokenOperationsBCount );\r\n\t}\r\n\r\n\t// Finally, update base versions of transformed operations.\r\n\tupdateBaseVersions( operationsA, data.nextBaseVersionB );\r\n\tupdateBaseVersions( operationsB, data.nextBaseVersionA );\r\n\r\n\treturn { operationsA, operationsB, originalOperations };\r\n}\r\n\r\n// Gathers additional data about operations processed during transformation. Can be used to obtain contextual information\r\n// about two operations that are about to be transformed. This contextual information can be used for better conflict resolution.\r\nclass ContextFactory {\r\n\t// Creates `ContextFactory` instance.\r\n\t//\r\n\t// @param {module:engine/model/document~Document} document Document which the operations change.\r\n\t// @param {Boolean} useRelations Whether during transformation relations should be used (used during undo for\r\n\t// better conflict resolution).\r\n\t// @param {Boolean} [forceWeakRemove=false] If set to `false`, remove operation will be always stronger than move operation,\r\n\t// so the removed nodes won't end up back in the document root. When set to `true`, context data will be used.\r\n\tconstructor( document, useRelations, forceWeakRemove = false ) {\r\n\t\t// For each operation that is created during transformation process, we keep a reference to the original operation\r\n\t\t// which it comes from. The original operation works as a kind of \"identifier\". Every contextual information\r\n\t\t// gathered during transformation that we want to save for given operation, is actually saved for the original operation.\r\n\t\t// This way no matter if operation `a` is cloned, then transformed, even breaks, we still have access to the previously\r\n\t\t// gathered data through original operation reference.\r\n\t\tthis.originalOperations = new Map();\r\n\r\n\t\t// `model.History` instance which information about undone operations will be taken from.\r\n\t\tthis._history = document.history;\r\n\r\n\t\t// Whether additional context should be used.\r\n\t\tthis._useRelations = useRelations;\r\n\r\n\t\tthis._forceWeakRemove = !!forceWeakRemove;\r\n\r\n\t\t// Relations is a double-map structure (maps in map) where for two operations we store how those operations were related\r\n\t\t// to each other. Those relations are evaluated during transformation process. For every transformated pair of operations\r\n\t\t// we keep relations between them.\r\n\t\tthis._relations = new Map();\r\n\t}\r\n\r\n\t// Sets \"original operation\" for given operations.\r\n\t//\r\n\t// During transformation process, operations are cloned, then changed, then processed again, sometimes broken into two\r\n\t// or multiple operations. When gathering additional data it is important that all operations can be somehow linked\r\n\t// so a cloned and transformed \"version\" still kept track of the data assigned earlier to it.\r\n\t//\r\n\t// The original operation object will be used as such an universal linking id. Throughout the transformation process\r\n\t// all cloned operations will refer to \"the original operation\" when storing and reading additional data.\r\n\t//\r\n\t// If `takeFrom` is not set, each operation from `operations` array will be assigned itself as \"the original operation\".\r\n\t// This should be used as an initialization step.\r\n\t//\r\n\t// If `takeFrom` is set, each operation from `operations` will be assigned the same original operation as assigned\r\n\t// for `takeFrom` operation. This should be used to update original operations. It should be used in a way that\r\n\t// `operations` are the result of `takeFrom` transformation to ensure proper \"original operation propagation\".\r\n\t//\r\n\t// @param {Array.<module:engine/model/operation/operation~Operation>} operations\r\n\t// @param {module:engine/model/operation/operation~Operation|null} [takeFrom=null]\r\n\tsetOriginalOperations( operations, takeFrom = null ) {\r\n\t\tconst originalOperation = takeFrom ? this.originalOperations.get( takeFrom ) : null;\r\n\r\n\t\tfor ( const operation of operations ) {\r\n\t\t\tthis.originalOperations.set( operation, originalOperation || operation );\r\n\t\t}\r\n\t}\r\n\r\n\t// Saves a relation between operations `opA` and `opB`.\r\n\t//\r\n\t// Relations are then later used to help solve conflicts when operations are transformed.\r\n\t//\r\n\t// @param {module:engine/model/operation/operation~Operation} opA\r\n\t// @param {module:engine/model/operation/operation~Operation} opB\r\n\tupdateRelation( opA, opB ) {\r\n\t\t// The use of relations is described in a bigger detail in transformation functions.\r\n\t\t//\r\n\t\t// In brief, this function, for specified pairs of operation types, checks how positions defined in those operations relate.\r\n\t\t// Then those relations are saved. For example, for two move operations, it is saved if one of those operations target\r\n\t\t// position is before the other operation source position. This kind of information gives contextual information when\r\n\t\t// transformation is used during undo. Similar checks are done for other pairs of operations.\r\n\t\t//\r\n\t\tswitch ( opA.constructor ) {\r\n\t\t\tcase MoveOperation: {\r\n\t\t\t\tswitch ( opB.constructor ) {\r\n\t\t\t\t\tcase MergeOperation: {\r\n\t\t\t\t\t\tif ( opA.targetPosition.isEqual( opB.sourcePosition ) || opB.movedRange.containsPosition( opA.targetPosition ) ) {\r\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'insertAtSource' );\r\n\t\t\t\t\t\t} else if ( opA.targetPosition.isEqual( opB.deletionPosition ) ) {\r\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'insertBetween' );\r\n\t\t\t\t\t\t} else if ( opA.targetPosition.isAfter( opB.sourcePosition ) ) {\r\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'moveTargetAfter' );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcase MoveOperation: {\r\n\t\t\t\t\t\tif ( opA.targetPosition.isEqual( opB.sourcePosition ) || opA.targetPosition.isBefore( opB.sourcePosition ) ) {\r\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'insertBefore' );\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'insertAfter' );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tcase SplitOperation: {\r\n\t\t\t\tswitch ( opB.constructor ) {\r\n\t\t\t\t\tcase MergeOperation: {\r\n\t\t\t\t\t\tif ( opA.splitPosition.isBefore( opB.sourcePosition ) ) {\r\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'splitBefore' );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcase MoveOperation: {\r\n\t\t\t\t\t\tif ( opA.splitPosition.isEqual( opB.sourcePosition ) || opA.splitPosition.isBefore( opB.sourcePosition ) ) {\r\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'splitBefore' );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tcase MergeOperation: {\r\n\t\t\t\tswitch ( opB.constructor ) {\r\n\t\t\t\t\tcase MergeOperation: {\r\n\t\t\t\t\t\tif ( !opA.targetPosition.isEqual( opB.sourcePosition ) ) {\r\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'mergeTargetNotMoved' );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( opA.sourcePosition.isEqual( opB.targetPosition ) ) {\r\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'mergeSourceNotMoved' );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( opA.sourcePosition.isEqual( opB.sourcePosition ) ) {\r\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'mergeSameElement' );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcase SplitOperation: {\r\n\t\t\t\t\t\tif ( opA.sourcePosition.isEqual( opB.splitPosition ) ) {\r\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'splitAtSource' );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tcase MarkerOperation: {\r\n\t\t\t\tconst markerRange = opA.newRange;\r\n\r\n\t\t\t\tif ( !markerRange ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tswitch ( opB.constructor ) {\r\n\t\t\t\t\tcase MoveOperation: {\r\n\t\t\t\t\t\tconst movedRange = Range._createFromPositionAndShift( opB.sourcePosition, opB.howMany );\r\n\r\n\t\t\t\t\t\tconst affectedLeft = movedRange.containsPosition( markerRange.start ) ||\r\n\t\t\t\t\t\t\tmovedRange.start.isEqual( markerRange.start );\r\n\r\n\t\t\t\t\t\tconst affectedRight = movedRange.containsPosition( markerRange.end ) ||\r\n\t\t\t\t\t\t\tmovedRange.end.isEqual( markerRange.end );\r\n\r\n\t\t\t\t\t\tif ( ( affectedLeft || affectedRight ) && !movedRange.containsRange( markerRange ) ) {\r\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, {\r\n\t\t\t\t\t\t\t\tside: affectedLeft ? 'left' : 'right',\r\n\t\t\t\t\t\t\t\tpath: affectedLeft ? markerRange.start.path.slice() : markerRange.end.path.slice()\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcase MergeOperation: {\r\n\t\t\t\t\t\tconst wasInLeftElement = markerRange.start.isEqual( opB.targetPosition );\r\n\t\t\t\t\t\tconst wasStartBeforeMergedElement = markerRange.start.isEqual( opB.deletionPosition );\r\n\t\t\t\t\t\tconst wasEndBeforeMergedElement = markerRange.end.isEqual( opB.deletionPosition );\r\n\t\t\t\t\t\tconst wasInRightElement = markerRange.end.isEqual( opB.sourcePosition );\r\n\r\n\t\t\t\t\t\tif ( wasInLeftElement || wasStartBeforeMergedElement || wasEndBeforeMergedElement || wasInRightElement ) {\r\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, {\r\n\t\t\t\t\t\t\t\twasInLeftElement,\r\n\t\t\t\t\t\t\t\twasStartBeforeMergedElement,\r\n\t\t\t\t\t\t\t\twasEndBeforeMergedElement,\r\n\t\t\t\t\t\t\t\twasInRightElement\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Evaluates and returns contextual information about two given operations `opA` and `opB` which are about to be transformed.\r\n\t//\r\n\t// @param {module:engine/model/operation/operation~Operation} opA\r\n\t// @param {module:engine/model/operation/operation~Operation} opB\r\n\t// @returns {module:engine/model/operation/transform~TransformationContext}\r\n\tgetContext( opA, opB, aIsStrong ) {\r\n\t\treturn {\r\n\t\t\taIsStrong,\r\n\t\t\taWasUndone: this._wasUndone( opA ),\r\n\t\t\tbWasUndone: this._wasUndone( opB ),\r\n\t\t\tabRelation: this._useRelations ? this._getRelation( opA, opB ) : null,\r\n\t\t\tbaRelation: this._useRelations ? this._getRelation( opB, opA ) : null,\r\n\t\t\tforceWeakRemove: this._forceWeakRemove\r\n\t\t};\r\n\t}\r\n\r\n\t// Returns whether given operation `op` has already been undone.\r\n\t//\r\n\t// Information whether an operation was undone gives more context when making a decision when two operations are in conflict.\r\n\t//\r\n\t// @param {module:engine/model/operation/operation~Operation} op\r\n\t// @returns {Boolean}\r\n\t_wasUndone( op ) {\r\n\t\t// For `op`, get its original operation. After all, if `op` is a clone (or even transformed clone) of another\r\n\t\t// operation, literally `op` couldn't be undone. It was just generated. If anything, it was the operation it origins\r\n\t\t// from which was undone. So get that original operation.\r\n\t\tconst originalOp = this.originalOperations.get( op );\r\n\r\n\t\t// And check with the document if the original operation was undone.\r\n\t\treturn originalOp.wasUndone || this._history.isUndoneOperation( originalOp );\r\n\t}\r\n\r\n\t// Returns a relation between `opA` and an operation which is undone by `opB`. This can be `String` value if a relation\r\n\t// was set earlier or `null` if there was no relation between those operations.\r\n\t//\r\n\t// This is a little tricky to understand, so let's compare it to `ContextFactory#_wasUndone`.\r\n\t//\r\n\t// When `wasUndone( opB )` is used, we check if the `opB` has already been undone. It is obvious, that the\r\n\t// undoing operation must happen after the undone operation. So, essentially, we have `opB`, we take document history,\r\n\t// we look forward in the future and ask if in that future `opB` was undone.\r\n\t//\r\n\t// Relations is a backward process to `wasUndone()`.\r\n\t//\r\n\t// Long story short - using relations is asking what happened in the past. Looking back. This time we have an undoing\r\n\t// operation `opB` which has undone some other operation. When there is a transformation `opA` x `opB` and there is\r\n\t// a conflict to solve and `opB` is an undoing operation, we can look back in the history and see what was a relation\r\n\t// between `opA` and the operation which `opB` undone. Basing on that relation from the past, we can now make\r\n\t// a better decision when resolving a conflict between two operations, because we know more about the context of\r\n\t// those two operations.\r\n\t//\r\n\t// This is why this function does not return a relation directly between `opA` and `opB` because we need to look\r\n\t// back to search for a meaningful contextual information.\r\n\t//\r\n\t// @param {module:engine/model/operation/operation~Operation} opA\r\n\t// @param {module:engine/model/operation/operation~Operation} opB\r\n\t// @returns {String|null}\r\n\t_getRelation( opA, opB ) {\r\n\t\t// Get the original operation. Similarly as in `wasUndone()` it is used as an universal identifier for stored data.\r\n\t\tconst origB = this.originalOperations.get( opB );\r\n\t\tconst undoneB = this._history.getUndoneOperation( origB );\r\n\r\n\t\t// If `opB` is not undoing any operation, there is no relation.\r\n\t\tif ( !undoneB ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tconst origA = this.originalOperations.get( opA );\r\n\t\tconst relationsA = this._relations.get( origA );\r\n\r\n\t\t// Get all relations for `opA`, and check if there is a relation with `opB`-undone-counterpart. If so, return it.\r\n\t\tif ( relationsA ) {\r\n\t\t\treturn relationsA.get( undoneB ) || null;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// Helper function for `ContextFactory#updateRelations`.\r\n\t//\r\n\t// @private\r\n\t// @param {module:engine/model/operation/operation~Operation} opA\r\n\t// @param {module:engine/model/operation/operation~Operation} opB\r\n\t// @param {String} relation\r\n\t_setRelation( opA, opB, relation ) {\r\n\t\t// As always, setting is for original operations, not the clones/transformed operations.\r\n\t\tconst origA = this.originalOperations.get( opA );\r\n\t\tconst origB = this.originalOperations.get( opB );\r\n\r\n\t\tlet relationsA = this._relations.get( origA );\r\n\r\n\t\tif ( !relationsA ) {\r\n\t\t\trelationsA = new Map();\r\n\t\t\tthis._relations.set( origA, relationsA );\r\n\t\t}\r\n\r\n\t\trelationsA.set( origB, relation );\r\n\t}\r\n}\r\n\r\n/**\r\n * Holds additional contextual information about a transformed pair of operations (`a` and `b`). Those information\r\n * can be used for better conflict resolving.\r\n *\r\n * @typedef {Object} module:engine/model/operation/transform~TransformationContext\r\n *\r\n * @property {Boolean} aIsStrong Whether `a` is strong operation in this transformation, or weak.\r\n * @property {Boolean} aWasUndone Whether `a` operation was undone.\r\n * @property {Boolean} bWasUndone Whether `b` operation was undone.\r\n * @property {String|null} abRelation The relation between `a` operation and an operation undone by `b` operation.\r\n * @property {String|null} baRelation The relation between `b` operation and an operation undone by `a` operation.\r\n */\r\n\r\n/**\r\n * An utility function that updates {@link module:engine/model/operation/operation~Operation#baseVersion base versions}\r\n * of passed operations.\r\n *\r\n * The function simply sets `baseVersion` as a base version of the first passed operation and then increments it for\r\n * each following operation in `operations`.\r\n *\r\n * @private\r\n * @param {Array.<module:engine/model/operation/operation~Operation>} operations Operations to update.\r\n * @param {Number} baseVersion Base version to set for the first operation in `operations`.\r\n */\r\nfunction updateBaseVersions( operations, baseVersion ) {\r\n\tfor ( const operation of operations ) {\r\n\t\toperation.baseVersion = baseVersion++;\r\n\t}\r\n}\r\n\r\n/**\r\n * Adds `howMany` instances of {@link module:engine/model/operation/nooperation~NoOperation} to `operations` set.\r\n *\r\n * @private\r\n * @param {Array.<module:engine/model/operation/operation~Operation>} operations\r\n * @param {Number} howMany\r\n */\r\nfunction padWithNoOps( operations, howMany ) {\r\n\tfor ( let i = 0; i < howMany; i++ ) {\r\n\t\toperations.push( new NoOperation( 0 ) );\r\n\t}\r\n}\r\n\r\n// -----------------------\r\n\r\nsetTransformation( AttributeOperation, AttributeOperation, ( a, b, context ) => {\r\n\tif ( a.key === b.key ) {\r\n\t\t// If operations attributes are in conflict, check if their ranges intersect and manage them properly.\r\n\r\n\t\t// First, we want to apply change to the part of a range that has not been changed by the other operation.\r\n\t\tconst operations = a.range.getDifference( b.range ).map( range => {\r\n\t\t\treturn new AttributeOperation( range, a.key, a.oldValue, a.newValue, 0 );\r\n\t\t} );\r\n\r\n\t\t// Then we take care of the common part of ranges.\r\n\t\tconst common = a.range.getIntersection( b.range );\r\n\r\n\t\tif ( common ) {\r\n\t\t\t// If this operation is more important, we also want to apply change to the part of the\r\n\t\t\t// original range that has already been changed by the other operation. Since that range\r\n\t\t\t// got changed we also have to update `oldValue`.\r\n\t\t\tif ( context.aIsStrong ) {\r\n\t\t\t\toperations.push( new AttributeOperation( common, b.key, b.newValue, a.newValue, 0 ) );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( operations.length == 0 ) {\r\n\t\t\treturn [ new NoOperation( 0 ) ];\r\n\t\t}\r\n\r\n\t\treturn operations;\r\n\t} else {\r\n\t\t// If operations don't conflict, simply return an array containing just a clone of this operation.\r\n\t\treturn [ a ];\r\n\t}\r\n} );\r\n\r\nsetTransformation( AttributeOperation, InsertOperation, ( a, b ) => {\r\n\t// Case 1:\r\n\t//\r\n\t// The attribute operation range includes the position where nodes were inserted.\r\n\t// There are two possible scenarios: the inserted nodes were text and they should receive attributes or\r\n\t// the inserted nodes were elements and they should not receive attributes.\r\n\t//\r\n\tif ( a.range.start.hasSameParentAs( b.position ) && a.range.containsPosition( b.position ) ) {\r\n\t\t// If new nodes should not receive attributes, two separated ranges will be returned.\r\n\t\t// Otherwise, one expanded range will be returned.\r\n\t\tconst range = a.range._getTransformedByInsertion( b.position, b.howMany, !b.shouldReceiveAttributes );\r\n\t\tconst result = range.map( r => {\r\n\t\t\treturn new AttributeOperation( r, a.key, a.oldValue, a.newValue, a.baseVersion );\r\n\t\t} );\r\n\r\n\t\tif ( b.shouldReceiveAttributes ) {\r\n\t\t\t// `AttributeOperation#range` includes some newly inserted text.\r\n\t\t\t// The operation should also change the attribute of that text. An example:\r\n\t\t\t//\r\n\t\t\t// Bold should be applied on the following range:\r\n\t\t\t// <p>Fo[zb]ar</p>\r\n\t\t\t//\r\n\t\t\t// In meantime, new text is typed:\r\n\t\t\t// <p>Fozxxbar</p>\r\n\t\t\t//\r\n\t\t\t// Bold should be applied also on the new text:\r\n\t\t\t// <p>Fo[zxxb]ar</p>\r\n\t\t\t// <p>Fo<$text bold=\"true\">zxxb</$text>ar</p>\r\n\t\t\t//\r\n\t\t\t// There is a special case to consider here to consider.\r\n\t\t\t//\r\n\t\t\t// Consider setting an attribute with multiple possible values, for example `highlight`. The inserted text might\r\n\t\t\t// have already an attribute value applied and the `oldValue` property of the attribute operation might be wrong:\r\n\t\t\t//\r\n\t\t\t// Attribute `highlight=\"yellow\"` should be applied on the following range:\r\n\t\t\t// <p>Fo[zb]ar<p>\r\n\t\t\t//\r\n\t\t\t// In meantime, character `x` with `highlight=\"red\"` is typed:\r\n\t\t\t// <p>Fo[z<$text highlight=\"red\">x</$text>b]ar</p>\r\n\t\t\t//\r\n\t\t\t// In this case we cannot simply apply operation changing the attribute value from `null` to `\"yellow\"` for the whole range\r\n\t\t\t// because that would lead to an exception (`oldValue` is incorrect for `x`).\r\n\t\t\t//\r\n\t\t\t// We also cannot break the original range as this would mess up a scenario when there are multiple following\r\n\t\t\t// insert operations, because then only the first inserted character is included in those ranges:\r\n\t\t\t// <p>Fo[z][x][b]ar</p>   -->   <p>Fo[z][x]x[b]ar</p>   -->   <p>Fo[z][x]xx[b]ar</p>\r\n\t\t\t//\r\n\t\t\t// So, the attribute range needs be expanded, no matter what attributes are set on the inserted nodes:\r\n\t\t\t//\r\n\t\t\t// <p>Fo[z<$text highlight=\"red\">x</$text>b]ar</p>      <--- Change from `null` to `yellow`, throwing an exception.\r\n\t\t\t//\r\n\t\t\t// But before that operation would be applied, we will add an additional attribute operation that will change\r\n\t\t\t// attributes on the inserted nodes in a way which would make the original operation correct:\r\n\t\t\t//\r\n\t\t\t// <p>Fo[z{<$text highlight=\"red\">}x</$text>b]ar</p>    <--- Change range `{}` from `red` to `null`.\r\n\t\t\t// <p>Fo[zxb]ar</p>                                     <--- Now change from `null` to `yellow` is completely fine.\r\n\t\t\t//\r\n\r\n\t\t\t// Generate complementary attribute operation. Be sure to add it before the original operation.\r\n\t\t\tconst op = _getComplementaryAttributeOperations( b, a.key, a.oldValue );\r\n\r\n\t\t\tif ( op ) {\r\n\t\t\t\tresult.unshift( op );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If nodes should not receive new attribute, we are done here.\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// If insert operation is not expanding the attribute operation range, simply transform the range.\r\n\ta.range = a.range._getTransformedByInsertion( b.position, b.howMany, false )[ 0 ];\r\n\r\n\treturn [ a ];\r\n} );\r\n\r\n/**\r\n * Helper function for `AttributeOperation` x `InsertOperation` (and reverse) transformation.\r\n *\r\n * For given `insertOperation` it checks the inserted node if it has an attribute `key` set to a value different\r\n * than `newValue`. If so, it generates an `AttributeOperation` which changes the value of `key` attribute to `newValue`.\r\n *\r\n * @private\r\n * @param {module:engine/model/operation/insertoperation~InsertOperation} insertOperation\r\n * @param {String} key\r\n * @param {*} newValue\r\n * @returns {module:engine/model/operation/attributeoperation~AttributeOperation|null}\r\n */\r\nfunction _getComplementaryAttributeOperations( insertOperation, key, newValue ) {\r\n\tconst nodes = insertOperation.nodes;\r\n\r\n\t// At the beginning we store the attribute value from the first node.\r\n\tconst insertValue = nodes.getNode( 0 ).getAttribute( key );\r\n\r\n\tif ( insertValue == newValue ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconst range = new Range( insertOperation.position, insertOperation.position.getShiftedBy( insertOperation.howMany ) );\r\n\r\n\treturn new AttributeOperation( range, key, insertValue, newValue, 0 );\r\n}\r\n\r\nsetTransformation( AttributeOperation, MergeOperation, ( a, b ) => {\r\n\tconst ranges = [];\r\n\r\n\t// Case 1:\r\n\t//\r\n\t// Attribute change on the merged element. In this case, the merged element was moved to the graveyard.\r\n\t// An additional attribute operation that will change the (re)moved element needs to be generated.\r\n\t//\r\n\tif ( a.range.start.hasSameParentAs( b.deletionPosition ) ) {\r\n\t\tif ( a.range.containsPosition( b.deletionPosition ) || a.range.start.isEqual( b.deletionPosition ) ) {\r\n\t\t\tranges.push( Range._createFromPositionAndShift( b.graveyardPosition, 1 ) );\r\n\t\t}\r\n\t}\r\n\r\n\tconst range = a.range._getTransformedByMergeOperation( b );\r\n\r\n\t// Do not add empty (collapsed) ranges to the result. `range` may be collapsed if it contained only the merged element.\r\n\tif ( !range.isCollapsed ) {\r\n\t\tranges.push( range );\r\n\t}\r\n\r\n\t// Create `AttributeOperation`s out of the ranges.\r\n\treturn ranges.map( range => {\r\n\t\treturn new AttributeOperation( range, a.key, a.oldValue, a.newValue, a.baseVersion );\r\n\t} );\r\n} );\r\n\r\nsetTransformation( AttributeOperation, MoveOperation, ( a, b ) => {\r\n\tconst ranges = _breakRangeByMoveOperation( a.range, b );\r\n\r\n\t// Create `AttributeOperation`s out of the ranges.\r\n\treturn ranges.map( range => new AttributeOperation( range, a.key, a.oldValue, a.newValue, a.baseVersion ) );\r\n} );\r\n\r\n// Helper function for `AttributeOperation` x `MoveOperation` transformation.\r\n//\r\n// Takes the passed `range` and transforms it by move operation `moveOp` in a specific way. Only top-level nodes of `range`\r\n// are considered to be in the range. If move operation moves nodes deep from inside of the range, those nodes won't\r\n// be included in the result. In other words, top-level nodes of the ranges from the result are exactly the same as\r\n// top-level nodes of the original `range`.\r\n//\r\n// This is important for `AttributeOperation` because, for its range, it changes only the top-level nodes. So we need to\r\n// track only how those nodes have been affected by `MoveOperation`.\r\n//\r\n// @private\r\n// @param {module:engine/model/range~Range} range\r\n// @param {module:engine/model/operation/moveoperation~MoveOperation} moveOp\r\n// @returns {Array.<module:engine/model/range~Range>}\r\nfunction _breakRangeByMoveOperation( range, moveOp ) {\r\n\tconst moveRange = Range._createFromPositionAndShift( moveOp.sourcePosition, moveOp.howMany );\r\n\r\n\t// We are transforming `range` (original range) by `moveRange` (range moved by move operation). As usual when it comes to\r\n\t// transforming a ranges, we may have a common part of the ranges and we may have a difference part (zero to two ranges).\r\n\tlet common = null;\r\n\tlet difference = [];\r\n\r\n\t// Let's compare the ranges.\r\n\tif ( moveRange.containsRange( range, true ) ) {\r\n\t\t// If the whole original range is moved, treat it whole as a common part. There's also no difference part.\r\n\t\tcommon = range;\r\n\t} else if ( range.start.hasSameParentAs( moveRange.start ) ) {\r\n\t\t// If the ranges are \"on the same level\" (in the same parent) then move operation may move exactly those nodes\r\n\t\t// that are changed by the attribute operation. In this case we get common part and difference part in the usual way.\r\n\t\tdifference = range.getDifference( moveRange );\r\n\t\tcommon = range.getIntersection( moveRange );\r\n\t} else {\r\n\t\t// In any other situation we assume that original range is different than move range, that is that move operation\r\n\t\t// moves other nodes that attribute operation change. Even if the moved range is deep inside in the original range.\r\n\t\t//\r\n\t\t// Note that this is different than in `.getIntersection` (we would get a common part in that case) and different\r\n\t\t// than `.getDifference` (we would get two ranges).\r\n\t\tdifference = [ range ];\r\n\t}\r\n\r\n\tconst result = [];\r\n\r\n\t// The default behaviour of `_getTransformedByMove` might get wrong results for difference part, though, so\r\n\t// we do it by hand.\r\n\tfor ( let diff of difference ) {\r\n\t\t// First, transform the range by removing moved nodes. Since this is a difference, this is safe, `null` won't be returned\r\n\t\t// as the range is different than the moved range.\r\n\t\tdiff = diff._getTransformedByDeletion( moveOp.sourcePosition, moveOp.howMany );\r\n\r\n\t\t// Transform also `targetPosition`.\r\n\t\tconst targetPosition = moveOp.getMovedRangeStart();\r\n\r\n\t\t// Spread the range only if moved nodes are inserted only between the top-level nodes of the `diff` range.\r\n\t\tconst spread = diff.start.hasSameParentAs( targetPosition );\r\n\r\n\t\t// Transform by insertion of moved nodes.\r\n\t\tdiff = diff._getTransformedByInsertion( targetPosition, moveOp.howMany, spread );\r\n\r\n\t\tresult.push( ...diff );\r\n\t}\r\n\r\n\t// Common part can be simply transformed by the move operation. This is because move operation will not target to\r\n\t// that common part (the operation would have to target inside its own moved range).\r\n\tif ( common ) {\r\n\t\tresult.push(\r\n\t\t\tcommon._getTransformedByMove( moveOp.sourcePosition, moveOp.targetPosition, moveOp.howMany, false )[ 0 ]\r\n\t\t);\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\nsetTransformation( AttributeOperation, SplitOperation, ( a, b ) => {\r\n\t// Case 1:\r\n\t//\r\n\t// Split node is the last node in `AttributeOperation#range`.\r\n\t// `AttributeOperation#range` needs to be expanded to include the new (split) node.\r\n\t//\r\n\t// Attribute `type` to be changed to `numbered` but the `listItem` is split.\r\n\t// <listItem type=\"bulleted\">foobar</listItem>\r\n\t//\r\n\t// After split:\r\n\t// <listItem type=\"bulleted\">foo</listItem><listItem type=\"bulleted\">bar</listItem>\r\n\t//\r\n\t// After attribute change:\r\n\t// <listItem type=\"numbered\">foo</listItem><listItem type=\"numbered\">foo</listItem>\r\n\t//\r\n\tif ( a.range.end.isEqual( b.insertionPosition ) ) {\r\n\t\tif ( !b.graveyardPosition ) {\r\n\t\t\ta.range.end.offset++;\r\n\t\t}\r\n\r\n\t\treturn [ a ];\r\n\t}\r\n\r\n\t// Case 2:\r\n\t//\r\n\t// Split position is inside `AttributeOperation#range`, at the same level, so the nodes to change are\r\n\t// not going to make a flat range.\r\n\t//\r\n\t// Content with range-to-change and split position:\r\n\t// <p>Fo[zb^a]r</p>\r\n\t//\r\n\t// After split:\r\n\t// <p>Fozb</p><p>ar</p>\r\n\t//\r\n\t// Make two separate ranges containing all nodes to change:\r\n\t// <p>Fo[zb]</p><p>[a]r</p>\r\n\t//\r\n\tif ( a.range.start.hasSameParentAs( b.splitPosition ) && a.range.containsPosition( b.splitPosition ) ) {\r\n\t\tconst secondPart = a.clone();\r\n\r\n\t\tsecondPart.range = new Range(\r\n\t\t\tb.moveTargetPosition.clone(),\r\n\t\t\ta.range.end._getCombined( b.splitPosition, b.moveTargetPosition )\r\n\t\t);\r\n\r\n\t\ta.range.end = b.splitPosition.clone();\r\n\t\ta.range.end.stickiness = 'toPrevious';\r\n\r\n\t\treturn [ a, secondPart ];\r\n\t}\r\n\r\n\t// The default case.\r\n\t//\r\n\ta.range = a.range._getTransformedBySplitOperation( b );\r\n\r\n\treturn [ a ];\r\n} );\r\n\r\nsetTransformation( InsertOperation, AttributeOperation, ( a, b ) => {\r\n\tconst result = [ a ];\r\n\r\n\t// Case 1:\r\n\t//\r\n\t// The attribute operation range includes the position where nodes were inserted.\r\n\t// There are two possible scenarios: the inserted nodes were text and they should receive attributes or\r\n\t// the inserted nodes were elements and they should not receive attributes.\r\n\t//\r\n\t// This is a mirror scenario to the one described in `AttributeOperation` x `InsertOperation` transformation,\r\n\t// although this case is a little less complicated. In this case we simply need to change attributes of the\r\n\t// inserted nodes and that's it.\r\n\t//\r\n\tif ( a.shouldReceiveAttributes && a.position.hasSameParentAs( b.range.start ) && b.range.containsPosition( a.position ) ) {\r\n\t\tconst op = _getComplementaryAttributeOperations( a, b.key, b.newValue );\r\n\r\n\t\tif ( op ) {\r\n\t\t\tresult.push( op );\r\n\t\t}\r\n\t}\r\n\r\n\t// The default case is: do nothing.\r\n\t// `AttributeOperation` does not change the model tree structure so `InsertOperation` does not need to be changed.\r\n\t//\r\n\treturn result;\r\n} );\r\n\r\nsetTransformation( InsertOperation, InsertOperation, ( a, b, context ) => {\r\n\t// Case 1:\r\n\t//\r\n\t// Two insert operations insert nodes at the same position. Since they are the same, it needs to be decided\r\n\t// what will be the order of inserted nodes. However, there is no additional information to help in that\r\n\t// decision. Also, when `b` will be transformed by `a`, the same order must be maintained.\r\n\t//\r\n\t// To achieve that, we will check if the operation is strong.\r\n\t// If it is, it won't get transformed. If it is not, it will be moved.\r\n\t//\r\n\tif ( a.position.isEqual( b.position ) && context.aIsStrong ) {\r\n\t\treturn [ a ];\r\n\t}\r\n\r\n\t// The default case.\r\n\t//\r\n\ta.position = a.position._getTransformedByInsertOperation( b );\r\n\r\n\treturn [ a ];\r\n} );\r\n\r\nsetTransformation( InsertOperation, MoveOperation, ( a, b ) => {\r\n\t// The default case.\r\n\t//\r\n\ta.position = a.position._getTransformedByMoveOperation( b );\r\n\r\n\treturn [ a ];\r\n} );\r\n\r\nsetTransformation( InsertOperation, SplitOperation, ( a, b ) => {\r\n\t// The default case.\r\n\t//\r\n\ta.position = a.position._getTransformedBySplitOperation( b );\r\n\r\n\treturn [ a ];\r\n} );\r\n\r\nsetTransformation( InsertOperation, MergeOperation, ( a, b ) => {\r\n\ta.position = a.position._getTransformedByMergeOperation( b );\r\n\r\n\treturn [ a ];\r\n} );\r\n\r\n// -----------------------\r\n\r\nsetTransformation( MarkerOperation, InsertOperation, ( a, b ) => {\r\n\tif ( a.oldRange ) {\r\n\t\ta.oldRange = a.oldRange._getTransformedByInsertOperation( b )[ 0 ];\r\n\t}\r\n\r\n\tif ( a.newRange ) {\r\n\t\ta.newRange = a.newRange._getTransformedByInsertOperation( b )[ 0 ];\r\n\t}\r\n\r\n\treturn [ a ];\r\n} );\r\n\r\nsetTransformation( MarkerOperation, MarkerOperation, ( a, b, context ) => {\r\n\tif ( a.name == b.name ) {\r\n\t\tif ( context.aIsStrong ) {\r\n\t\t\ta.oldRange = b.newRange ? b.newRange.clone() : null;\r\n\t\t} else {\r\n\t\t\treturn [ new NoOperation( 0 ) ];\r\n\t\t}\r\n\t}\r\n\r\n\treturn [ a ];\r\n} );\r\n\r\nsetTransformation( MarkerOperation, MergeOperation, ( a, b ) => {\r\n\tif ( a.oldRange ) {\r\n\t\ta.oldRange = a.oldRange._getTransformedByMergeOperation( b );\r\n\t}\r\n\r\n\tif ( a.newRange ) {\r\n\t\ta.newRange = a.newRange._getTransformedByMergeOperation( b );\r\n\t}\r\n\r\n\treturn [ a ];\r\n} );\r\n\r\nsetTransformation( MarkerOperation, MoveOperation, ( a, b, context ) => {\r\n\tif ( a.oldRange ) {\r\n\t\ta.oldRange = Range._createFromRanges( a.oldRange._getTransformedByMoveOperation( b ) );\r\n\t}\r\n\r\n\tif ( a.newRange ) {\r\n\t\tif ( context.abRelation ) {\r\n\t\t\tconst aNewRange = Range._createFromRanges( a.newRange._getTransformedByMoveOperation( b ) );\r\n\r\n\t\t\tif ( context.abRelation.side == 'left' && b.targetPosition.isEqual( a.newRange.start ) ) {\r\n\t\t\t\ta.newRange.start.path = context.abRelation.path;\r\n\t\t\t\ta.newRange.end = aNewRange.end;\r\n\r\n\t\t\t\treturn [ a ];\r\n\t\t\t} else if ( context.abRelation.side == 'right' && b.targetPosition.isEqual( a.newRange.end ) ) {\r\n\t\t\t\ta.newRange.start = aNewRange.start;\r\n\t\t\t\ta.newRange.end.path = context.abRelation.path;\r\n\r\n\t\t\t\treturn [ a ];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ta.newRange = Range._createFromRanges( a.newRange._getTransformedByMoveOperation( b ) );\r\n\t}\r\n\r\n\treturn [ a ];\r\n} );\r\n\r\nsetTransformation( MarkerOperation, SplitOperation, ( a, b, context ) => {\r\n\tif ( a.oldRange ) {\r\n\t\ta.oldRange = a.oldRange._getTransformedBySplitOperation( b );\r\n\t}\r\n\r\n\tif ( a.newRange ) {\r\n\t\tif ( context.abRelation ) {\r\n\t\t\tconst aNewRange = a.newRange._getTransformedBySplitOperation( b );\r\n\r\n\t\t\tif ( a.newRange.start.isEqual( b.splitPosition ) && context.abRelation.wasStartBeforeMergedElement ) {\r\n\t\t\t\ta.newRange.start = Position._createAt( b.insertionPosition );\r\n\t\t\t} else if ( a.newRange.start.isEqual( b.splitPosition ) && !context.abRelation.wasInLeftElement ) {\r\n\t\t\t\ta.newRange.start = Position._createAt( b.moveTargetPosition );\r\n\t\t\t}\r\n\r\n\t\t\tif ( a.newRange.end.isEqual( b.splitPosition ) && context.abRelation.wasInRightElement ) {\r\n\t\t\t\ta.newRange.end = Position._createAt( b.moveTargetPosition );\r\n\t\t\t} else if ( a.newRange.end.isEqual( b.splitPosition ) && context.abRelation.wasEndBeforeMergedElement ) {\r\n\t\t\t\ta.newRange.end = Position._createAt( b.insertionPosition );\r\n\t\t\t} else {\r\n\t\t\t\ta.newRange.end = aNewRange.end;\r\n\t\t\t}\r\n\r\n\t\t\treturn [ a ];\r\n\t\t}\r\n\r\n\t\ta.newRange = a.newRange._getTransformedBySplitOperation( b );\r\n\t}\r\n\r\n\treturn [ a ];\r\n} );\r\n\r\n// -----------------------\r\n\r\nsetTransformation( MergeOperation, InsertOperation, ( a, b ) => {\r\n\tif ( a.sourcePosition.hasSameParentAs( b.position ) ) {\r\n\t\ta.howMany += b.howMany;\r\n\t}\r\n\r\n\ta.sourcePosition = a.sourcePosition._getTransformedByInsertOperation( b );\r\n\ta.targetPosition = a.targetPosition._getTransformedByInsertOperation( b );\r\n\r\n\treturn [ a ];\r\n} );\r\n\r\nsetTransformation( MergeOperation, MergeOperation, ( a, b, context ) => {\r\n\t// Case 1:\r\n\t//\r\n\t// Same merge operations.\r\n\t//\r\n\t// Both operations have same source and target positions. So the element already got merged and there is\r\n\t// theoretically nothing to do.\r\n\t//\r\n\tif ( a.sourcePosition.isEqual( b.sourcePosition ) && a.targetPosition.isEqual( b.targetPosition ) ) {\r\n\t\t// There are two ways that we can provide a do-nothing operation.\r\n\t\t//\r\n\t\t// First is simply a NoOperation instance. We will use it if `b` operation was not undone.\r\n\t\t//\r\n\t\t// Second is a merge operation that has the source operation in the merged element - in the graveyard -\r\n\t\t// same target position and `howMany` equal to `0`. So it is basically merging an empty element from graveyard\r\n\t\t// which is almost the same as NoOperation.\r\n\t\t//\r\n\t\t// This way the merge operation can be later transformed by split operation\r\n\t\t// to provide correct undo. This will be used if `b` operation was undone (only then it is correct).\r\n\t\t//\r\n\t\tif ( !context.bWasUndone ) {\r\n\t\t\treturn [ new NoOperation( 0 ) ];\r\n\t\t} else {\r\n\t\t\tconst path = b.graveyardPosition.path.slice();\r\n\t\t\tpath.push( 0 );\r\n\r\n\t\t\ta.sourcePosition = new Position( b.graveyardPosition.root, path );\r\n\t\t\ta.howMany = 0;\r\n\r\n\t\t\treturn [ a ];\r\n\t\t}\r\n\t}\r\n\r\n\t// Case 2:\r\n\t//\r\n\t// Same merge source position but different target position.\r\n\t//\r\n\t// This can happen during collaboration. For example, if one client merged a paragraph to the previous paragraph\r\n\t// and the other person removed that paragraph and merged the same paragraph to something before:\r\n\t//\r\n\t// Client A:\r\n\t// <p>Foo</p><p>Bar</p><p>[]Xyz</p>\r\n\t// <p>Foo</p><p>BarXyz</p>\r\n\t//\r\n\t// Client B:\r\n\t// <p>Foo</p>[<p>Bar</p>]<p>Xyz</p>\r\n\t// <p>Foo</p><p>[]Xyz</p>\r\n\t// <p>FooXyz</p>\r\n\t//\r\n\t// In this case we need to decide where finally \"Xyz\" will land:\r\n\t//\r\n\t// <p>FooXyz</p>               graveyard: <p>Bar</p>\r\n\t// <p>Foo</p>                  graveyard: <p>BarXyz</p>\r\n\t//\r\n\t// Let's move it in a way so that a merge operation that does not target to graveyard is more important so that\r\n\t// nodes does not end up in the graveyard. It makes sense. Both for Client A and for Client B \"Xyz\" finally did not\r\n\t// end up in the graveyard (see above).\r\n\t//\r\n\t// If neither or both operations point to graveyard, then let `aIsStrong` decide.\r\n\t//\r\n\tif (\r\n\t\ta.sourcePosition.isEqual( b.sourcePosition ) && !a.targetPosition.isEqual( b.targetPosition ) &&\r\n\t\t!context.bWasUndone && context.abRelation != 'splitAtSource'\r\n\t) {\r\n\t\tconst aToGraveyard = a.targetPosition.root.rootName == '$graveyard';\r\n\t\tconst bToGraveyard = b.targetPosition.root.rootName == '$graveyard';\r\n\r\n\t\t// If `aIsWeak` it means that `a` points to graveyard while `b` doesn't. Don't move nodes then.\r\n\t\tconst aIsWeak = aToGraveyard && !bToGraveyard;\r\n\r\n\t\t// If `bIsWeak` it means that `b` points to graveyard while `a` doesn't. Force moving nodes then.\r\n\t\tconst bIsWeak = bToGraveyard && !aToGraveyard;\r\n\r\n\t\t// Force move if `b` is weak or neither operation is weak but `a` is stronger through `context.aIsStrong`.\r\n\t\tconst forceMove = bIsWeak || ( !aIsWeak && context.aIsStrong );\r\n\r\n\t\tif ( forceMove ) {\r\n\t\t\tconst sourcePosition = b.targetPosition._getTransformedByMergeOperation( b );\r\n\t\t\tconst targetPosition = a.targetPosition._getTransformedByMergeOperation( b );\r\n\r\n\t\t\treturn [ new MoveOperation( sourcePosition, a.howMany, targetPosition, 0 ) ];\r\n\t\t} else {\r\n\t\t\treturn [ new NoOperation( 0 ) ];\r\n\t\t}\r\n\t}\r\n\r\n\t// The default case.\r\n\t//\r\n\tif ( a.sourcePosition.hasSameParentAs( b.targetPosition ) ) {\r\n\t\ta.howMany += b.howMany;\r\n\t}\r\n\r\n\ta.sourcePosition = a.sourcePosition._getTransformedByMergeOperation( b );\r\n\ta.targetPosition = a.targetPosition._getTransformedByMergeOperation( b );\r\n\r\n\t// Handle positions in graveyard.\r\n\t// If graveyard positions are same and `a` operation is strong - do not transform.\r\n\tif ( !a.graveyardPosition.isEqual( b.graveyardPosition ) || !context.aIsStrong ) {\r\n\t\ta.graveyardPosition = a.graveyardPosition._getTransformedByMergeOperation( b );\r\n\t}\r\n\r\n\treturn [ a ];\r\n} );\r\n\r\nsetTransformation( MergeOperation, MoveOperation, ( a, b, context ) => {\r\n\t// Case 1:\r\n\t//\r\n\t// The element to merge got removed.\r\n\t//\r\n\t// Merge operation does support merging elements which are not siblings. So it would not be a problem\r\n\t// from technical point of view. However, if the element was removed, the intention of the user deleting it\r\n\t// was to have it all deleted, together with its children. From user experience point of view, moving back the\r\n\t// removed nodes might be unexpected. This means that in this scenario we will block the merging.\r\n\t//\r\n\t// The exception of this rule would be if the remove operation was later undone.\r\n\t//\r\n\tconst removedRange = Range._createFromPositionAndShift( b.sourcePosition, b.howMany );\r\n\r\n\tif ( b.type == 'remove' && !context.bWasUndone && !context.forceWeakRemove ) {\r\n\t\tif ( a.deletionPosition.hasSameParentAs( b.sourcePosition ) && removedRange.containsPosition( a.sourcePosition ) ) {\r\n\t\t\treturn [ new NoOperation( 0 ) ];\r\n\t\t}\r\n\t}\r\n\r\n\t// The default case.\r\n\t//\r\n\tif ( a.sourcePosition.hasSameParentAs( b.targetPosition ) ) {\r\n\t\ta.howMany += b.howMany;\r\n\t}\r\n\r\n\tif ( a.sourcePosition.hasSameParentAs( b.sourcePosition ) ) {\r\n\t\ta.howMany -= b.howMany;\r\n\t}\r\n\r\n\ta.sourcePosition = a.sourcePosition._getTransformedByMoveOperation( b );\r\n\ta.targetPosition = a.targetPosition._getTransformedByMoveOperation( b );\r\n\r\n\t// `MergeOperation` graveyard position is like `MoveOperation` target position. It is a position where element(s) will\r\n\t// be moved. Like in other similar cases, we need to consider the scenario when those positions are same.\r\n\t// Here, we will treat `MergeOperation` like it is always strong (see `InsertOperation` x `InsertOperation` for comparison).\r\n\t// This means that we won't transform graveyard position if it is equal to move operation target position.\r\n\tif ( !a.graveyardPosition.isEqual( b.targetPosition ) ) {\r\n\t\ta.graveyardPosition = a.graveyardPosition._getTransformedByMoveOperation( b );\r\n\t}\r\n\r\n\treturn [ a ];\r\n} );\r\n\r\nsetTransformation( MergeOperation, SplitOperation, ( a, b, context ) => {\r\n\tif ( b.graveyardPosition ) {\r\n\t\t// If `b` operation defines graveyard position, a node from graveyard will be moved. This means that we need to\r\n\t\t// transform `a.graveyardPosition` accordingly.\r\n\t\ta.graveyardPosition = a.graveyardPosition._getTransformedByDeletion( b.graveyardPosition, 1 );\r\n\r\n\t\t// This is a scenario foreseen in `MergeOperation` x `MergeOperation`, with two identical merge operations.\r\n\t\t//\r\n\t\t// So, there was `MergeOperation` x `MergeOperation` transformation earlier. Now, `a` is a merge operation which\r\n\t\t// source position is in graveyard. Interestingly, split operation wants to use the node to be merged by `a`. This\r\n\t\t// means that `b` is undoing that merge operation from earlier, which caused `a` to be in graveyard.\r\n\t\t//\r\n\t\t// If that's the case, at this point, we will only \"fix\" `a.howMany`. It was earlier set to `0` in\r\n\t\t// `MergeOperation` x `MergeOperation` transformation. Later transformations in this function will change other\r\n\t\t// properties.\r\n\t\t//\r\n\t\tif ( a.deletionPosition.isEqual( b.graveyardPosition ) ) {\r\n\t\t\ta.howMany = b.howMany;\r\n\t\t}\r\n\t}\r\n\r\n\t// Case 1:\r\n\t//\r\n\t// Merge operation moves nodes to the place where split happens.\r\n\t// This is a classic situation when there are two paragraphs, and there is a split (enter) after the first\r\n\t// paragraph and there is a merge (delete) at the beginning of the second paragraph:\r\n\t//\r\n\t// <p>Foo{}</p><p>[]Bar</p>.\r\n\t//\r\n\t// Split is after `Foo`, while merge is from `Bar` to the end of `Foo`.\r\n\t//\r\n\t// State after split:\r\n\t// <p>Foo</p><p></p><p>Bar</p>\r\n\t//\r\n\t// Now, `Bar` should be merged to the new paragraph:\r\n\t// <p>Foo</p><p>Bar</p>\r\n\t//\r\n\t// Instead of merging it to the original paragraph:\r\n\t// <p>FooBar</p><p></p>\r\n\t//\r\n\t// This means that `targetPosition` needs to be transformed. This is the default case though.\r\n\t// For example, if the split would be after `F`, `targetPosition` should also be transformed.\r\n\t//\r\n\t// There are three exceptions, though, when we want to keep `targetPosition` as it was.\r\n\t//\r\n\t// First exception is when the merge target position is inside an element (not at the end, as usual). This\r\n\t// happens when the merge operation earlier was transformed by \"the same\" merge operation. If merge operation\r\n\t// targets inside the element we want to keep the original target position (and not transform it) because\r\n\t// we have additional context telling us that we want to merge to the original element. We can check if the\r\n\t// merge operation points inside element by checking what is `SplitOperation#howMany`. Since merge target position\r\n\t// is same as split position, if `howMany` is non-zero, it means that the merge target position is inside an element.\r\n\t//\r\n\t// Second exception is when the element to merge is in the graveyard and split operation uses it. In that case\r\n\t// if target position would be transformed, the merge operation would target at the source position:\r\n\t//\r\n\t// root: <p>Foo</p>\t\t\t\tgraveyard: <p></p>\r\n\t//\r\n\t// SplitOperation: root [ 0, 3 ] using graveyard [ 0 ] (howMany = 0)\r\n\t// MergeOperation: graveyard [ 0, 0 ] -> root [ 0, 3 ] (howMany = 0)\r\n\t//\r\n\t// Since split operation moves the graveyard node back to the root, the merge operation source position changes.\r\n\t// We would like to merge from the empty <p> to the \"Foo\" <p>:\r\n\t//\r\n\t// root: <p>Foo</p><p></p>\t\t\tgraveyard:\r\n\t//\r\n\t// MergeOperation#sourcePosition = root [ 1, 0 ]\r\n\t//\r\n\t// If `targetPosition` is transformed, it would become root [ 1, 0 ] as well. It has to be kept as it was.\r\n\t//\r\n\t// Third exception is connected with relations. If this happens during undo and we have explicit information\r\n\t// that target position has not been affected by the operation which is undone by this split then this split should\r\n\t// not move the target position either.\r\n\t//\r\n\tif ( a.targetPosition.isEqual( b.splitPosition ) ) {\r\n\t\tconst mergeInside = b.howMany != 0;\r\n\t\tconst mergeSplittingElement = b.graveyardPosition && a.deletionPosition.isEqual( b.graveyardPosition );\r\n\r\n\t\tif ( mergeInside || mergeSplittingElement || context.abRelation == 'mergeTargetNotMoved' ) {\r\n\t\t\ta.sourcePosition = a.sourcePosition._getTransformedBySplitOperation( b );\r\n\r\n\t\t\treturn [ a ];\r\n\t\t}\r\n\t}\r\n\r\n\t// Case 2:\r\n\t//\r\n\t// Merge source is at the same position as split position. This sometimes happen, mostly during undo.\r\n\t// The decision here is mostly to choose whether merge source position should stay where it is (so it will be at the end of the\r\n\t// split element) or should be move to the beginning of the new element.\r\n\t//\r\n\tif ( a.sourcePosition.isEqual( b.splitPosition ) ) {\r\n\t\t// Use context to check if `SplitOperation` is not undoing a merge operation, that didn't change the `a` operation.\r\n\t\t// This scenario happens the undone merge operation moved nodes at the source position of `a` operation.\r\n\t\t// In that case `a` operation source position should stay where it is.\r\n\t\tif ( context.abRelation == 'mergeSourceNotMoved' ) {\r\n\t\t\ta.howMany = 0;\r\n\t\t\ta.targetPosition = a.targetPosition._getTransformedBySplitOperation( b );\r\n\r\n\t\t\treturn [ a ];\r\n\t\t}\r\n\r\n\t\t// This merge operation might have been earlier transformed by a merge operation which both merged the same element.\r\n\t\t// See that case in `MergeOperation` x `MergeOperation` transformation. In that scenario, if the merge operation has been undone,\r\n\t\t// the special case is not applied.\r\n\t\t//\r\n\t\t// Now, the merge operation is transformed by the split which has undone that previous merge operation.\r\n\t\t// So now we are fixing situation which was skipped in `MergeOperation` x `MergeOperation` case.\r\n\t\t//\r\n\t\tif ( context.abRelation == 'mergeSameElement' || a.sourcePosition.offset > 0 ) {\r\n\t\t\ta.sourcePosition = b.moveTargetPosition.clone();\r\n\t\t\ta.targetPosition = a.targetPosition._getTransformedBySplitOperation( b );\r\n\r\n\t\t\treturn [ a ];\r\n\t\t}\r\n\t}\r\n\r\n\t// The default case.\r\n\t//\r\n\tif ( a.sourcePosition.hasSameParentAs( b.splitPosition ) ) {\r\n\t\ta.howMany = b.splitPosition.offset;\r\n\t}\r\n\r\n\ta.sourcePosition = a.sourcePosition._getTransformedBySplitOperation( b );\r\n\ta.targetPosition = a.targetPosition._getTransformedBySplitOperation( b );\r\n\r\n\treturn [ a ];\r\n} );\r\n\r\n// -----------------------\r\n\r\nsetTransformation( MoveOperation, InsertOperation, ( a, b ) => {\r\n\tconst moveRange = Range._createFromPositionAndShift( a.sourcePosition, a.howMany );\r\n\tconst transformed = moveRange._getTransformedByInsertOperation( b, false )[ 0 ];\r\n\r\n\ta.sourcePosition = transformed.start;\r\n\ta.howMany = transformed.end.offset - transformed.start.offset;\r\n\r\n\t// See `InsertOperation` x `MoveOperation` transformation for details on this case.\r\n\t//\r\n\t// In summary, both operations point to the same place, so the order of nodes needs to be decided.\r\n\t// `MoveOperation` is considered weaker, so it is always transformed, unless there was a certain relation\r\n\t// between operations.\r\n\t//\r\n\tif ( !a.targetPosition.isEqual( b.position ) ) {\r\n\t\ta.targetPosition = a.targetPosition._getTransformedByInsertOperation( b );\r\n\t}\r\n\r\n\treturn [ a ];\r\n} );\r\n\r\nsetTransformation( MoveOperation, MoveOperation, ( a, b, context ) => {\r\n\t//\r\n\t// Setting and evaluating some variables that will be used in special cases and default algorithm.\r\n\t//\r\n\t// Create ranges from `MoveOperations` properties.\r\n\tconst rangeA = Range._createFromPositionAndShift( a.sourcePosition, a.howMany );\r\n\tconst rangeB = Range._createFromPositionAndShift( b.sourcePosition, b.howMany );\r\n\r\n\t// Assign `context.aIsStrong` to a different variable, because the value may change during execution of\r\n\t// this algorithm and we do not want to override original `context.aIsStrong` that will be used in later transformations.\r\n\tlet aIsStrong = context.aIsStrong;\r\n\r\n\t// This will be used to decide the order of nodes if both operations target at the same position.\r\n\t// By default, use strong/weak operation mechanism.\r\n\tlet insertBefore = !context.aIsStrong;\r\n\r\n\t// If the relation is set, then use it to decide nodes order.\r\n\tif ( context.abRelation == 'insertBefore' || context.baRelation == 'insertAfter' ) {\r\n\t\tinsertBefore = true;\r\n\t} else if ( context.abRelation == 'insertAfter' || context.baRelation == 'insertBefore' ) {\r\n\t\tinsertBefore = false;\r\n\t}\r\n\r\n\t// `a.targetPosition` could be affected by the `b` operation. We will transform it.\r\n\tlet newTargetPosition;\r\n\r\n\tif ( a.targetPosition.isEqual( b.targetPosition ) && insertBefore ) {\r\n\t\tnewTargetPosition = a.targetPosition._getTransformedByDeletion(\r\n\t\t\tb.sourcePosition,\r\n\t\t\tb.howMany\r\n\t\t);\r\n\t} else {\r\n\t\tnewTargetPosition = a.targetPosition._getTransformedByMove(\r\n\t\t\tb.sourcePosition,\r\n\t\t\tb.targetPosition,\r\n\t\t\tb.howMany\r\n\t\t);\r\n\t}\r\n\r\n\t//\r\n\t// Special case #1 + mirror.\r\n\t//\r\n\t// Special case when both move operations' target positions are inside nodes that are\r\n\t// being moved by the other move operation. So in other words, we move ranges into inside of each other.\r\n\t// This case can't be solved reasonably (on the other hand, it should not happen often).\r\n\tif ( _moveTargetIntoMovedRange( a, b ) && _moveTargetIntoMovedRange( b, a ) ) {\r\n\t\t// Instead of transforming operation, we return a reverse of the operation that we transform by.\r\n\t\t// So when the results of this \"transformation\" will be applied, `b` MoveOperation will get reversed.\r\n\t\treturn [ b.getReversed() ];\r\n\t}\r\n\t//\r\n\t// End of special case #1.\r\n\t//\r\n\r\n\t//\r\n\t// Special case #2.\r\n\t//\r\n\t// Check if `b` operation targets inside `rangeA`.\r\n\tconst bTargetsToA = rangeA.containsPosition( b.targetPosition );\r\n\r\n\t// If `b` targets to `rangeA` and `rangeA` contains `rangeB`, `b` operation has no influence on `a` operation.\r\n\t// You might say that operation `b` is captured inside operation `a`.\r\n\tif ( bTargetsToA && rangeA.containsRange( rangeB, true ) ) {\r\n\t\t// There is a mini-special case here, where `rangeB` is on other level than `rangeA`. That's why\r\n\t\t// we need to transform `a` operation anyway.\r\n\t\trangeA.start = rangeA.start._getTransformedByMove( b.sourcePosition, b.targetPosition, b.howMany );\r\n\t\trangeA.end = rangeA.end._getTransformedByMove( b.sourcePosition, b.targetPosition, b.howMany );\r\n\r\n\t\treturn _makeMoveOperationsFromRanges( [ rangeA ], newTargetPosition );\r\n\t}\r\n\r\n\t//\r\n\t// Special case #2 mirror.\r\n\t//\r\n\tconst aTargetsToB = rangeB.containsPosition( a.targetPosition );\r\n\r\n\tif ( aTargetsToB && rangeB.containsRange( rangeA, true ) ) {\r\n\t\t// `a` operation is \"moved together\" with `b` operation.\r\n\t\t// Here, just move `rangeA` \"inside\" `rangeB`.\r\n\t\trangeA.start = rangeA.start._getCombined( b.sourcePosition, b.getMovedRangeStart() );\r\n\t\trangeA.end = rangeA.end._getCombined( b.sourcePosition, b.getMovedRangeStart() );\r\n\r\n\t\treturn _makeMoveOperationsFromRanges( [ rangeA ], newTargetPosition );\r\n\t}\r\n\t//\r\n\t// End of special case #2.\r\n\t//\r\n\r\n\t//\r\n\t// Special case #3 + mirror.\r\n\t//\r\n\t// `rangeA` has a node which is an ancestor of `rangeB`. In other words, `rangeB` is inside `rangeA`\r\n\t// but not on the same tree level. In such case ranges have common part but we have to treat it\r\n\t// differently, because in such case those ranges are not really conflicting and should be treated like\r\n\t// two separate ranges. Also we have to discard two difference parts.\r\n\tconst aCompB = compareArrays( a.sourcePosition.getParentPath(), b.sourcePosition.getParentPath() );\r\n\r\n\tif ( aCompB == 'prefix' || aCompB == 'extension' ) {\r\n\t\t// Transform `rangeA` by `b` operation and make operation out of it, and that's all.\r\n\t\t// Note that this is a simplified version of default case, but here we treat the common part (whole `rangeA`)\r\n\t\t// like a one difference part.\r\n\t\trangeA.start = rangeA.start._getTransformedByMove( b.sourcePosition, b.targetPosition, b.howMany );\r\n\t\trangeA.end = rangeA.end._getTransformedByMove( b.sourcePosition, b.targetPosition, b.howMany );\r\n\r\n\t\treturn _makeMoveOperationsFromRanges( [ rangeA ], newTargetPosition );\r\n\t}\r\n\t//\r\n\t// End of special case #3.\r\n\t//\r\n\r\n\t//\r\n\t// Default case - ranges are on the same level or are not connected with each other.\r\n\t//\r\n\t// Modifier for default case.\r\n\t// Modifies `aIsStrong` flag in certain conditions.\r\n\t//\r\n\t// If only one of operations is a remove operation, we force remove operation to be the \"stronger\" one\r\n\t// to provide more expected results.\r\n\tif ( a.type == 'remove' && b.type != 'remove' && !context.aWasUndone && !context.forceWeakRemove ) {\r\n\t\taIsStrong = true;\r\n\t} else if ( a.type != 'remove' && b.type == 'remove' && !context.bWasUndone && !context.forceWeakRemove ) {\r\n\t\taIsStrong = false;\r\n\t}\r\n\r\n\t// Handle operation's source ranges - check how `rangeA` is affected by `b` operation.\r\n\t// This will aggregate transformed ranges.\r\n\tconst ranges = [];\r\n\r\n\t// Get the \"difference part\" of `a` operation source range.\r\n\t// This is an array with one or two ranges. Two ranges if `rangeB` is inside `rangeA`.\r\n\tconst difference = rangeA.getDifference( rangeB );\r\n\r\n\tfor ( const range of difference ) {\r\n\t\t// Transform those ranges by `b` operation. For example if `b` moved range from before those ranges, fix those ranges.\r\n\t\trange.start = range.start._getTransformedByDeletion( b.sourcePosition, b.howMany );\r\n\t\trange.end = range.end._getTransformedByDeletion( b.sourcePosition, b.howMany );\r\n\r\n\t\t// If `b` operation targets into `rangeA` on the same level, spread `rangeA` into two ranges.\r\n\t\tconst shouldSpread = compareArrays( range.start.getParentPath(), b.getMovedRangeStart().getParentPath() ) == 'same';\r\n\t\tconst newRanges = range._getTransformedByInsertion( b.getMovedRangeStart(), b.howMany, shouldSpread );\r\n\r\n\t\tranges.push( ...newRanges );\r\n\t}\r\n\r\n\t// Then, we have to manage the \"common part\" of both move ranges.\r\n\tconst common = rangeA.getIntersection( rangeB );\r\n\r\n\tif ( common !== null && aIsStrong ) {\r\n\t\t// Calculate the new position of that part of original range.\r\n\t\tcommon.start = common.start._getCombined( b.sourcePosition, b.getMovedRangeStart() );\r\n\t\tcommon.end = common.end._getCombined( b.sourcePosition, b.getMovedRangeStart() );\r\n\r\n\t\t// Take care of proper range order.\r\n\t\t//\r\n\t\t// Put `common` at appropriate place. Keep in mind that we are interested in original order.\r\n\t\t// Basically there are only three cases: there is zero, one or two difference ranges.\r\n\t\t//\r\n\t\t// If there is zero difference ranges, just push `common` in the array.\r\n\t\tif ( ranges.length === 0 ) {\r\n\t\t\tranges.push( common );\r\n\t\t}\r\n\t\t// If there is one difference range, we need to check whether common part was before it or after it.\r\n\t\telse if ( ranges.length == 1 ) {\r\n\t\t\tif ( rangeB.start.isBefore( rangeA.start ) || rangeB.start.isEqual( rangeA.start ) ) {\r\n\t\t\t\tranges.unshift( common );\r\n\t\t\t} else {\r\n\t\t\t\tranges.push( common );\r\n\t\t\t}\r\n\t\t}\r\n\t\t// If there are more ranges (which means two), put common part between them. This is the only scenario\r\n\t\t// where there could be two difference ranges so we don't have to make any comparisons.\r\n\t\telse {\r\n\t\t\tranges.splice( 1, 0, common );\r\n\t\t}\r\n\t}\r\n\r\n\tif ( ranges.length === 0 ) {\r\n\t\t// If there are no \"source ranges\", nothing should be changed.\r\n\t\t// Note that this can happen only if `aIsStrong == false` and `rangeA.isEqual( rangeB )`.\r\n\t\treturn [ new NoOperation( a.baseVersion ) ];\r\n\t}\r\n\r\n\treturn _makeMoveOperationsFromRanges( ranges, newTargetPosition );\r\n} );\r\n\r\nsetTransformation( MoveOperation, SplitOperation, ( a, b, context ) => {\r\n\tlet newTargetPosition = a.targetPosition.clone();\r\n\r\n\t// Do not transform if target position is same as split insertion position and this split comes from undo.\r\n\t// This should be done on relations but it is too much work for now as it would require relations working in collaboration.\r\n\t// We need to make a decision how we will resolve such conflict and this is less harmful way.\r\n\tif ( !a.targetPosition.isEqual( b.insertionPosition ) || !b.graveyardPosition || context.abRelation == 'moveTargetAfter' ) {\r\n\t\tnewTargetPosition = a.targetPosition._getTransformedBySplitOperation( b );\r\n\t}\r\n\r\n\t// Case 1:\r\n\t//\r\n\t// Last element in the moved range got split.\r\n\t//\r\n\t// In this case the default range transformation will not work correctly as the element created by\r\n\t// split operation would be outside the range. The range to move needs to be fixed manually.\r\n\t//\r\n\tconst moveRange = Range._createFromPositionAndShift( a.sourcePosition, a.howMany );\r\n\r\n\tif ( moveRange.end.isEqual( b.insertionPosition ) ) {\r\n\t\t// Do it only if this is a \"natural\" split, not a one that comes from undo.\r\n\t\t// If this is undo split, only `targetPosition` needs to be changed (if the move is a remove).\r\n\t\tif ( !b.graveyardPosition ) {\r\n\t\t\ta.howMany++;\r\n\t\t}\r\n\r\n\t\ta.targetPosition = newTargetPosition;\r\n\r\n\t\treturn [ a ];\r\n\t}\r\n\r\n\t// Case 2:\r\n\t//\r\n\t// Split happened between the moved nodes. In this case two ranges to move need to be generated.\r\n\t//\r\n\t// Characters `ozba` are moved to the end of paragraph `Xyz` but split happened.\r\n\t// <p>F[oz|ba]r</p><p>Xyz</p>\r\n\t//\r\n\t// After split:\r\n\t// <p>F[oz</p><p>ba]r</p><p>Xyz</p>\r\n\t//\r\n\t// Correct ranges:\r\n\t// <p>F[oz]</p><p>[ba]r</p><p>Xyz</p>\r\n\t//\r\n\t// After move:\r\n\t// <p>F</p><p>r</p><p>Xyzozba</p>\r\n\t//\r\n\tif ( moveRange.start.hasSameParentAs( b.splitPosition ) && moveRange.containsPosition( b.splitPosition ) ) {\r\n\t\tlet rightRange = new Range( b.splitPosition, moveRange.end );\r\n\t\trightRange = rightRange._getTransformedBySplitOperation( b );\r\n\r\n\t\tconst ranges = [\r\n\t\t\tnew Range( moveRange.start, b.splitPosition ),\r\n\t\t\trightRange\r\n\t\t];\r\n\r\n\t\treturn _makeMoveOperationsFromRanges( ranges, newTargetPosition );\r\n\t}\r\n\r\n\t// Case 3:\r\n\t//\r\n\t// Move operation targets at the split position. We need to decide if the nodes should be inserted\r\n\t// at the end of the split element or at the beginning of the new element.\r\n\t//\r\n\tif ( a.targetPosition.isEqual( b.splitPosition ) && context.abRelation == 'insertAtSource' ) {\r\n\t\tnewTargetPosition = b.moveTargetPosition;\r\n\t}\r\n\r\n\t// Case 4:\r\n\t//\r\n\t// Move operation targets just after the split element. We need to decide if the nodes should be inserted\r\n\t// between two parts of split element, or after the new element.\r\n\t//\r\n\t// Split at `|`, while move operation moves `<p>Xyz</p>` and targets at `^`:\r\n\t// <p>Foo|bar</p>^<p>baz</p>\r\n\t// <p>Foo</p>^<p>bar</p><p>baz</p> or <p>Foo</p><p>bar</p>^<p>baz</p>?\r\n\t//\r\n\t// If there is no contextual information between operations (for example, they come from collaborative\r\n\t// editing), we don't want to put some unrelated content (move) between parts of related content (split parts).\r\n\t// However, if the split is from undo, in the past, the moved content might be targeting between the\r\n\t// split parts, meaning that was exactly user's intention:\r\n\t//\r\n\t// <p>Foo</p>^<p>bar</p>\t\t<--- original situation, in \"past\".\r\n\t// <p>Foobar</p>^\t\t\t\t<--- after merge target position is transformed.\r\n\t// <p>Foo|bar</p>^\t\t\t\t<--- then the merge is undone, and split happens, which leads us to current situation.\r\n\t//\r\n\t// In this case it is pretty clear that the intention was to put new paragraph between those nodes,\r\n\t// so we need to transform accordingly. We can detect this scenario thanks to relations.\r\n\t//\r\n\tif ( a.targetPosition.isEqual( b.insertionPosition ) && context.abRelation == 'insertBetween' ) {\r\n\t\tnewTargetPosition = a.targetPosition;\r\n\t}\r\n\r\n\t// The default case.\r\n\t//\r\n\tconst transformed = moveRange._getTransformedBySplitOperation( b );\r\n\tconst ranges = [ transformed ];\r\n\r\n\t// Case 5:\r\n\t//\r\n\t// Moved range contains graveyard element used by split operation. Add extra move operation to the result.\r\n\t//\r\n\tif ( b.graveyardPosition ) {\r\n\t\tconst movesGraveyardElement = moveRange.start.isEqual( b.graveyardPosition ) || moveRange.containsPosition( b.graveyardPosition );\r\n\r\n\t\tif ( a.howMany > 1 && movesGraveyardElement && !context.aWasUndone ) {\r\n\t\t\tranges.push( Range._createFromPositionAndShift( b.insertionPosition, 1 ) );\r\n\t\t}\r\n\t}\r\n\r\n\treturn _makeMoveOperationsFromRanges( ranges, newTargetPosition );\r\n} );\r\n\r\nsetTransformation( MoveOperation, MergeOperation, ( a, b, context ) => {\r\n\tconst movedRange = Range._createFromPositionAndShift( a.sourcePosition, a.howMany );\r\n\r\n\tif ( b.deletionPosition.hasSameParentAs( a.sourcePosition ) && movedRange.containsPosition( b.sourcePosition ) ) {\r\n\t\tif ( a.type == 'remove' && !context.forceWeakRemove ) {\r\n\t\t\t// Case 1:\r\n\t\t\t//\r\n\t\t\t// The element to remove got merged.\r\n\t\t\t//\r\n\t\t\t// Merge operation does support merging elements which are not siblings. So it would not be a problem\r\n\t\t\t// from technical point of view. However, if the element was removed, the intention of the user\r\n\t\t\t// deleting it was to have it all deleted. From user experience point of view, moving back the\r\n\t\t\t// removed nodes might be unexpected. This means that in this scenario we will reverse merging and remove the element.\r\n\t\t\t//\r\n\t\t\tif ( !context.aWasUndone ) {\r\n\t\t\t\tconst results = [];\r\n\r\n\t\t\t\tlet gyMoveSource = b.graveyardPosition.clone();\r\n\t\t\t\tlet splitNodesMoveSource = b.targetPosition._getTransformedByMergeOperation( b );\r\n\r\n\t\t\t\tif ( a.howMany > 1 ) {\r\n\t\t\t\t\tresults.push( new MoveOperation( a.sourcePosition, a.howMany - 1, a.targetPosition, 0 ) );\r\n\r\n\t\t\t\t\tgyMoveSource = gyMoveSource._getTransformedByMove( a.sourcePosition, a.targetPosition, a.howMany - 1 );\r\n\t\t\t\t\tsplitNodesMoveSource = splitNodesMoveSource._getTransformedByMove( a.sourcePosition, a.targetPosition, a.howMany - 1 );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst gyMoveTarget = b.deletionPosition._getCombined( a.sourcePosition, a.targetPosition );\r\n\t\t\t\tconst gyMove = new MoveOperation( gyMoveSource, 1, gyMoveTarget, 0 );\r\n\r\n\t\t\t\tconst splitNodesMoveTargetPath = gyMove.getMovedRangeStart().path.slice();\r\n\t\t\t\tsplitNodesMoveTargetPath.push( 0 );\r\n\r\n\t\t\t\tconst splitNodesMoveTarget = new Position( gyMove.targetPosition.root, splitNodesMoveTargetPath );\r\n\t\t\t\tsplitNodesMoveSource = splitNodesMoveSource._getTransformedByMove( gyMoveSource, gyMoveTarget, 1 );\r\n\t\t\t\tconst splitNodesMove = new MoveOperation( splitNodesMoveSource, b.howMany, splitNodesMoveTarget, 0 );\r\n\r\n\t\t\t\tresults.push( gyMove );\r\n\t\t\t\tresults.push( splitNodesMove );\r\n\r\n\t\t\t\treturn results;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Case 2:\r\n\t\t\t//\r\n\t\t\t// The element to move got merged and it was the only element to move.\r\n\t\t\t// In this case just don't do anything, leave the node in the graveyard. Without special case\r\n\t\t\t// it would be a move operation that moves 0 nodes, so maybe it is better just to return no-op.\r\n\t\t\t//\r\n\t\t\tif ( a.howMany == 1 ) {\r\n\t\t\t\tif ( !context.bWasUndone ) {\r\n\t\t\t\t\treturn [ new NoOperation( 0 ) ];\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.sourcePosition = b.graveyardPosition.clone();\r\n\t\t\t\t\ta.targetPosition = a.targetPosition._getTransformedByMergeOperation( b );\r\n\r\n\t\t\t\t\treturn [ a ];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// The default case.\r\n\t//\r\n\tconst moveRange = Range._createFromPositionAndShift( a.sourcePosition, a.howMany );\r\n\tconst transformed = moveRange._getTransformedByMergeOperation( b );\r\n\r\n\ta.sourcePosition = transformed.start;\r\n\ta.howMany = transformed.end.offset - transformed.start.offset;\r\n\ta.targetPosition = a.targetPosition._getTransformedByMergeOperation( b );\r\n\r\n\treturn [ a ];\r\n} );\r\n\r\n// -----------------------\r\n\r\nsetTransformation( RenameOperation, InsertOperation, ( a, b ) => {\r\n\ta.position = a.position._getTransformedByInsertOperation( b );\r\n\r\n\treturn [ a ];\r\n} );\r\n\r\nsetTransformation( RenameOperation, MergeOperation, ( a, b ) => {\r\n\t// Case 1:\r\n\t//\r\n\t// Element to rename got merged, so it was moved to `b.graveyardPosition`.\r\n\t//\r\n\tif ( a.position.isEqual( b.deletionPosition ) ) {\r\n\t\ta.position = b.graveyardPosition.clone();\r\n\t\ta.position.stickiness = 'toNext';\r\n\r\n\t\treturn [ a ];\r\n\t}\r\n\r\n\ta.position = a.position._getTransformedByMergeOperation( b );\r\n\r\n\treturn [ a ];\r\n} );\r\n\r\nsetTransformation( RenameOperation, MoveOperation, ( a, b ) => {\r\n\ta.position = a.position._getTransformedByMoveOperation( b );\r\n\r\n\treturn [ a ];\r\n} );\r\n\r\nsetTransformation( RenameOperation, RenameOperation, ( a, b, context ) => {\r\n\tif ( a.position.isEqual( b.position ) ) {\r\n\t\tif ( context.aIsStrong ) {\r\n\t\t\ta.oldName = b.newName;\r\n\t\t} else {\r\n\t\t\treturn [ new NoOperation( 0 ) ];\r\n\t\t}\r\n\t}\r\n\r\n\treturn [ a ];\r\n} );\r\n\r\nsetTransformation( RenameOperation, SplitOperation, ( a, b ) => {\r\n\t// Case 1:\r\n\t//\r\n\t// The element to rename has been split. In this case, the new element should be also renamed.\r\n\t//\r\n\t// User decides to change the paragraph to a list item:\r\n\t// <paragraph>Foobar</paragraph>\r\n\t//\r\n\t// However, in meantime, split happens:\r\n\t// <paragraph>Foo</paragraph><paragraph>bar</paragraph>\r\n\t//\r\n\t// As a result, rename both elements:\r\n\t// <listItem>Foo</listItem><listItem>bar</listItem>\r\n\t//\r\n\tconst renamePath = a.position.path;\r\n\tconst splitPath = b.splitPosition.getParentPath();\r\n\r\n\tif ( compareArrays( renamePath, splitPath ) == 'same' && !b.graveyardPosition ) {\r\n\t\tconst extraRename = new RenameOperation( a.position.getShiftedBy( 1 ), a.oldName, a.newName, 0 );\r\n\r\n\t\treturn [ a, extraRename ];\r\n\t}\r\n\r\n\t// The default case.\r\n\t//\r\n\ta.position = a.position._getTransformedBySplitOperation( b );\r\n\r\n\treturn [ a ];\r\n} );\r\n\r\n// -----------------------\r\n\r\nsetTransformation( RootAttributeOperation, RootAttributeOperation, ( a, b, context ) => {\r\n\tif ( a.root === b.root && a.key === b.key ) {\r\n\t\tif ( !context.aIsStrong || a.newValue === b.newValue ) {\r\n\t\t\treturn [ new NoOperation( 0 ) ];\r\n\t\t} else {\r\n\t\t\ta.oldValue = b.newValue;\r\n\t\t}\r\n\t}\r\n\r\n\treturn [ a ];\r\n} );\r\n\r\n// -----------------------\r\n\r\nsetTransformation( SplitOperation, InsertOperation, ( a, b ) => {\r\n\t// The default case.\r\n\t//\r\n\tif ( a.splitPosition.hasSameParentAs( b.position ) && a.splitPosition.offset < b.position.offset ) {\r\n\t\ta.howMany += b.howMany;\r\n\t}\r\n\r\n\ta.splitPosition = a.splitPosition._getTransformedByInsertOperation( b );\r\n\ta.insertionPosition = SplitOperation.getInsertionPosition( a.splitPosition );\r\n\r\n\treturn [ a ];\r\n} );\r\n\r\nsetTransformation( SplitOperation, MergeOperation, ( a, b, context ) => {\r\n\t// Case 1:\r\n\t//\r\n\t// Split element got merged. If two different elements were merged, clients will have different content.\r\n\t//\r\n\t// Example. Merge at `{}`, split at `[]`:\r\n\t// <heading>Foo</heading>{}<paragraph>B[]ar</paragraph>\r\n\t//\r\n\t// On merge side it will look like this:\r\n\t// <heading>FooB[]ar</heading>\r\n\t// <heading>FooB</heading><heading>ar</heading>\r\n\t//\r\n\t// On split side it will look like this:\r\n\t// <heading>Foo</heading>{}<paragraph>B</paragraph><paragraph>ar</paragraph>\r\n\t// <heading>FooB</heading><paragraph>ar</paragraph>\r\n\t//\r\n\t// Clearly, the second element is different for both clients.\r\n\t//\r\n\t// We could use the removed merge element from graveyard as a split element but then clients would have a different\r\n\t// model state (in graveyard), because the split side client would still have an element in graveyard (removed by merge).\r\n\t//\r\n\t// To overcome this, in `SplitOperation` x `MergeOperation` transformation we will add additional `SplitOperation`\r\n\t// in the graveyard, which will actually clone the merged-and-deleted element. Then, that cloned element will be\r\n\t// used for splitting. Example below.\r\n\t//\r\n\t// Original state:\r\n\t// <heading>Foo</heading>{}<paragraph>B[]ar</paragraph>\r\n\t//\r\n\t// Merge side client:\r\n\t//\r\n\t// After merge:\r\n\t// <heading>FooB[]ar</heading>                                 graveyard: <paragraph></paragraph>\r\n\t//\r\n\t// Extra split:\r\n\t// <heading>FooB[]ar</heading>                                 graveyard: <paragraph></paragraph><paragraph></paragraph>\r\n\t//\r\n\t// Use the \"cloned\" element from graveyard:\r\n\t// <heading>FooB</heading><paragraph>ar</paragraph>            graveyard: <paragraph></paragraph>\r\n\t//\r\n\t// Split side client:\r\n\t//\r\n\t// After split:\r\n\t// <heading>Foo</heading>{}<paragraph>B</paragraph><paragraph>ar</paragraph>\r\n\t//\r\n\t// After merge:\r\n\t// <heading>FooB</heading><paragraph>ar</paragraph>            graveyard: <paragraph></paragraph>\r\n\t//\r\n\t// This special case scenario only applies if the original split operation clones the split element.\r\n\t// If the original split operation has `graveyardPosition` set, it all doesn't have sense because split operation\r\n\t// knows exactly which element it should use. So there would be no original problem with different contents.\r\n\t//\r\n\t// Additionally, the special case applies only if the merge wasn't already undone.\r\n\t//\r\n\tif ( !a.graveyardPosition && !context.bWasUndone && a.splitPosition.hasSameParentAs( b.sourcePosition ) ) {\r\n\t\tconst splitPath = b.graveyardPosition.path.slice();\r\n\t\tsplitPath.push( 0 );\r\n\r\n\t\tconst splitPosition = new Position( b.graveyardPosition.root, splitPath );\r\n\t\tconst insertionPosition = SplitOperation.getInsertionPosition( new Position( b.graveyardPosition.root, splitPath ) );\r\n\r\n\t\tconst additionalSplit = new SplitOperation( splitPosition, 0, null, 0 );\r\n\t\tadditionalSplit.insertionPosition = insertionPosition;\r\n\r\n\t\ta.splitPosition = a.splitPosition._getTransformedByMergeOperation( b );\r\n\t\ta.insertionPosition = SplitOperation.getInsertionPosition( a.splitPosition );\r\n\t\ta.graveyardPosition = additionalSplit.insertionPosition.clone();\r\n\t\ta.graveyardPosition.stickiness = 'toNext';\r\n\r\n\t\treturn [ additionalSplit, a ];\r\n\t}\r\n\r\n\t// The default case.\r\n\t//\r\n\tif ( a.splitPosition.hasSameParentAs( b.deletionPosition ) && !a.splitPosition.isAfter( b.deletionPosition ) ) {\r\n\t\ta.howMany--;\r\n\t}\r\n\r\n\tif ( a.splitPosition.hasSameParentAs( b.targetPosition ) ) {\r\n\t\ta.howMany += b.howMany;\r\n\t}\r\n\r\n\ta.splitPosition = a.splitPosition._getTransformedByMergeOperation( b );\r\n\ta.insertionPosition = SplitOperation.getInsertionPosition( a.splitPosition );\r\n\r\n\tif ( a.graveyardPosition ) {\r\n\t\ta.graveyardPosition = a.graveyardPosition._getTransformedByMergeOperation( b );\r\n\t}\r\n\r\n\treturn [ a ];\r\n} );\r\n\r\nsetTransformation( SplitOperation, MoveOperation, ( a, b, context ) => {\r\n\tconst rangeToMove = Range._createFromPositionAndShift( b.sourcePosition, b.howMany );\r\n\r\n\tif ( a.graveyardPosition ) {\r\n\t\t// Case 1:\r\n\t\t//\r\n\t\t// Split operation graveyard node was moved. In this case move operation is stronger. Since graveyard element\r\n\t\t// is already moved to the correct position, we need to only move the nodes after the split position.\r\n\t\t// This will be done by `MoveOperation` instead of `SplitOperation`.\r\n\t\t//\r\n\t\tconst gyElementMoved = rangeToMove.start.isEqual( a.graveyardPosition ) || rangeToMove.containsPosition( a.graveyardPosition );\r\n\r\n\t\tif ( !context.bWasUndone && gyElementMoved ) {\r\n\t\t\tconst sourcePosition = a.splitPosition._getTransformedByMoveOperation( b );\r\n\r\n\t\t\tconst newParentPosition = a.graveyardPosition._getTransformedByMoveOperation( b );\r\n\t\t\tconst newTargetPath = newParentPosition.path.slice();\r\n\t\t\tnewTargetPath.push( 0 );\r\n\r\n\t\t\tconst newTargetPosition = new Position( newParentPosition.root, newTargetPath );\r\n\t\t\tconst moveOp = new MoveOperation( sourcePosition, a.howMany, newTargetPosition, 0 );\r\n\r\n\t\t\treturn [ moveOp ];\r\n\t\t}\r\n\r\n\t\ta.graveyardPosition = a.graveyardPosition._getTransformedByMoveOperation( b );\r\n\t}\r\n\r\n\t// Case 2:\r\n\t//\r\n\t// If the split position is inside the moved range, we need to shift the split position to a proper place.\r\n\t// The position cannot be moved together with moved range because that would result in splitting of an incorrect element.\r\n\t//\r\n\t// Characters `bc` should be moved to the second paragraph while split position is between them:\r\n\t// <paragraph>A[b|c]d</paragraph><paragraph>Xyz</paragraph>\r\n\t//\r\n\t// After move, new split position is incorrect:\r\n\t// <paragraph>Ad</paragraph><paragraph>Xb|cyz</paragraph>\r\n\t//\r\n\t// Correct split position:\r\n\t// <paragraph>A|d</paragraph><paragraph>Xbcyz</paragraph>\r\n\t//\r\n\t// After split:\r\n\t// <paragraph>A</paragraph><paragraph>d</paragraph><paragraph>Xbcyz</paragraph>\r\n\t//\r\n\tif ( a.splitPosition.hasSameParentAs( b.sourcePosition ) && rangeToMove.containsPosition( a.splitPosition ) ) {\r\n\t\tconst howManyRemoved = b.howMany - ( a.splitPosition.offset - b.sourcePosition.offset );\r\n\t\ta.howMany -= howManyRemoved;\r\n\r\n\t\tif ( a.splitPosition.hasSameParentAs( b.targetPosition ) && a.splitPosition.offset < b.targetPosition.offset ) {\r\n\t\t\ta.howMany += b.howMany;\r\n\t\t}\r\n\r\n\t\ta.splitPosition = b.sourcePosition.clone();\r\n\t\ta.insertionPosition = SplitOperation.getInsertionPosition( a.splitPosition );\r\n\r\n\t\treturn [ a ];\r\n\t}\r\n\r\n\t// Case 3:\r\n\t//\r\n\t// Split is at a position where nodes were moved.\r\n\t//\r\n\t// This is a scenario described in `MoveOperation` x `SplitOperation` transformation but from the\r\n\t// \"split operation point of view\".\r\n\t//\r\n\tconst splitAtTarget = a.splitPosition.isEqual( b.targetPosition );\r\n\r\n\tif ( splitAtTarget && ( context.baRelation == 'insertAtSource' || context.abRelation == 'splitBefore' ) ) {\r\n\t\ta.howMany += b.howMany;\r\n\t\ta.splitPosition = a.splitPosition._getTransformedByDeletion( b.sourcePosition, b.howMany );\r\n\t\ta.insertionPosition = SplitOperation.getInsertionPosition( a.splitPosition );\r\n\r\n\t\treturn [ a ];\r\n\t}\r\n\r\n\t// The default case.\r\n\t// Don't change `howMany` if move operation does not really move anything.\r\n\t//\r\n\tif ( !b.sourcePosition.isEqual( b.targetPosition ) ) {\r\n\t\tif ( a.splitPosition.hasSameParentAs( b.sourcePosition ) && a.splitPosition.offset <= b.sourcePosition.offset ) {\r\n\t\t\ta.howMany -= b.howMany;\r\n\t\t}\r\n\r\n\t\tif ( a.splitPosition.hasSameParentAs( b.targetPosition ) && a.splitPosition.offset < b.targetPosition.offset ) {\r\n\t\t\ta.howMany += b.howMany;\r\n\t\t}\r\n\t}\r\n\r\n\t// Change position stickiness to force a correct transformation.\r\n\ta.splitPosition.stickiness = 'toNone';\r\n\ta.splitPosition = a.splitPosition._getTransformedByMoveOperation( b );\r\n\ta.splitPosition.stickiness = 'toNext';\r\n\r\n\tif ( a.graveyardPosition ) {\r\n\t\ta.insertionPosition = a.insertionPosition._getTransformedByMoveOperation( b );\r\n\t} else {\r\n\t\ta.insertionPosition = SplitOperation.getInsertionPosition( a.splitPosition );\r\n\t}\r\n\r\n\treturn [ a ];\r\n} );\r\n\r\nsetTransformation( SplitOperation, SplitOperation, ( a, b, context ) => {\r\n\t// Case 1:\r\n\t//\r\n\t// Split at the same position.\r\n\t//\r\n\t// If there already was a split at the same position as in `a` operation, it means that the intention\r\n\t// conveyed by `a` operation has already been fulfilled and `a` should not do anything (to avoid double split).\r\n\t//\r\n\t// However, there is a difference if these are new splits or splits created by undo. These have different\r\n\t// intentions. Also splits moving back different elements from graveyard have different intentions. They\r\n\t// are just different operations.\r\n\t//\r\n\t// So we cancel split operation only if it was really identical.\r\n\t//\r\n\t// Also, there is additional case, where split operations aren't identical and should not be cancelled, however the\r\n\t// default transformation is incorrect too.\r\n\t//\r\n\tif ( a.splitPosition.isEqual( b.splitPosition ) ) {\r\n\t\tif ( !a.graveyardPosition && !b.graveyardPosition ) {\r\n\t\t\treturn [ new NoOperation( 0 ) ];\r\n\t\t}\r\n\r\n\t\tif ( a.graveyardPosition && b.graveyardPosition && a.graveyardPosition.isEqual( b.graveyardPosition ) ) {\r\n\t\t\treturn [ new NoOperation( 0 ) ];\r\n\t\t}\r\n\r\n\t\t// Use context to know that the `a.splitPosition` should stay where it is.\r\n\t\t// This happens during undo when first a merge operation moved nodes to `a.splitPosition` and now `b` operation undoes that merge.\r\n\t\tif ( context.abRelation == 'splitBefore' ) {\r\n\t\t\t// Since split is at the same position, there are no nodes left to split.\r\n\t\t\ta.howMany = 0;\r\n\r\n\t\t\t// Note: there was `if ( a.graveyardPosition )` here but it was uncovered in tests and I couldn't find any scenarios for now.\r\n\t\t\t// That would have to be a `SplitOperation` that didn't come from undo but is transformed by operations that were undone.\r\n\t\t\t// It could happen if `context` is enabled in collaboration.\r\n\t\t\ta.graveyardPosition = a.graveyardPosition._getTransformedBySplitOperation( b );\r\n\r\n\t\t\treturn [ a ];\r\n\t\t}\r\n\t}\r\n\r\n\t// Case 2:\r\n\t//\r\n\t// Same node is using to split different elements. This happens in undo when previously same element was merged to\r\n\t// two different elements. This is described in `MergeOperation` x `MergeOperation` transformation.\r\n\t//\r\n\t// In this case we will follow the same logic. We will assume that `insertionPosition` is same for both\r\n\t// split operations. This might not always be true but in the real cases that were experienced it was. After all,\r\n\t// if these splits are reverses of merge operations that were merging the same element, then the `insertionPosition`\r\n\t// should be same for both of those splits.\r\n\t//\r\n\t// Again, we will decide which operation is stronger by checking if split happens in graveyard or in non-graveyard root.\r\n\t//\r\n\tif ( a.graveyardPosition && b.graveyardPosition && a.graveyardPosition.isEqual( b.graveyardPosition ) ) {\r\n\t\tconst aInGraveyard = a.splitPosition.root.rootName == '$graveyard';\r\n\t\tconst bInGraveyard = b.splitPosition.root.rootName == '$graveyard';\r\n\r\n\t\t// If `aIsWeak` it means that `a` points to graveyard while `b` doesn't. Don't move nodes then.\r\n\t\tconst aIsWeak = aInGraveyard && !bInGraveyard;\r\n\r\n\t\t// If `bIsWeak` it means that `b` points to graveyard while `a` doesn't. Force moving nodes then.\r\n\t\tconst bIsWeak = bInGraveyard && !aInGraveyard;\r\n\r\n\t\t// Force move if `b` is weak or neither operation is weak but `a` is stronger through `context.aIsStrong`.\r\n\t\tconst forceMove = bIsWeak || ( !aIsWeak && context.aIsStrong );\r\n\r\n\t\tif ( forceMove ) {\r\n\t\t\tconst result = [];\r\n\r\n\t\t\t// First we need to move any nodes split by `b` back to where they were.\r\n\t\t\t// Do it only if `b` actually moved something.\r\n\t\t\tif ( b.howMany ) {\r\n\t\t\t\tresult.push( new MoveOperation( b.moveTargetPosition, b.howMany, b.splitPosition, 0 ) );\r\n\t\t\t}\r\n\r\n\t\t\t// Then we need to move nodes from `a` split position to their new element.\r\n\t\t\t// Do it only if `a` actually should move something.\r\n\t\t\tif ( a.howMany ) {\r\n\t\t\t\tresult.push( new MoveOperation( a.splitPosition, a.howMany, a.moveTargetPosition, 0 ) );\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t} else {\r\n\t\t\treturn [ new NoOperation( 0 ) ];\r\n\t\t}\r\n\t}\r\n\r\n\tif ( a.graveyardPosition ) {\r\n\t\ta.graveyardPosition = a.graveyardPosition._getTransformedBySplitOperation( b );\r\n\t}\r\n\r\n\t// Case 3:\r\n\t//\r\n\t// Position where operation `b` inserted a new node after split is the same as the operation `a` split position.\r\n\t// As in similar cases, there is ambiguity if the split should be before the new node (created by `b`) or after.\r\n\t//\r\n\tif ( a.splitPosition.isEqual( b.insertionPosition ) && context.abRelation == 'splitBefore' ) {\r\n\t\ta.howMany++;\r\n\r\n\t\treturn [ a ];\r\n\t}\r\n\r\n\t// Case 4:\r\n\t//\r\n\t// This is a mirror to the case 2. above.\r\n\t//\r\n\tif ( b.splitPosition.isEqual( a.insertionPosition ) && context.baRelation == 'splitBefore' ) {\r\n\t\tconst newPositionPath = b.insertionPosition.path.slice();\r\n\t\tnewPositionPath.push( 0 );\r\n\r\n\t\tconst newPosition = new Position( b.insertionPosition.root, newPositionPath );\r\n\t\tconst moveOp = new MoveOperation( a.insertionPosition, 1, newPosition, 0 );\r\n\r\n\t\treturn [ a, moveOp ];\r\n\t}\r\n\r\n\t// The default case.\r\n\t//\r\n\tif ( a.splitPosition.hasSameParentAs( b.splitPosition ) && a.splitPosition.offset < b.splitPosition.offset ) {\r\n\t\ta.howMany -= b.howMany;\r\n\t}\r\n\r\n\ta.splitPosition = a.splitPosition._getTransformedBySplitOperation( b );\r\n\ta.insertionPosition = SplitOperation.getInsertionPosition( a.splitPosition );\r\n\r\n\treturn [ a ];\r\n} );\r\n\r\n// Checks whether `MoveOperation` `targetPosition` is inside a node from the moved range of the other `MoveOperation`.\r\n//\r\n// @private\r\n// @param {module:engine/model/operation/moveoperation~MoveOperation} a\r\n// @param {module:engine/model/operation/moveoperation~MoveOperation} b\r\n// @returns {Boolean}\r\nfunction _moveTargetIntoMovedRange( a, b ) {\r\n\treturn a.targetPosition._getTransformedByDeletion( b.sourcePosition, b.howMany ) === null;\r\n}\r\n\r\n// Helper function for `MoveOperation` x `MoveOperation` transformation. Converts given ranges and target position to\r\n// move operations and returns them.\r\n//\r\n// Ranges and target position will be transformed on-the-fly when generating operations.\r\n//\r\n// Given `ranges` should be in the order of how they were in the original transformed operation.\r\n//\r\n// Given `targetPosition` is the target position of the first range from `ranges`.\r\n//\r\n// @private\r\n// @param {Array.<module:engine/model/range~Range>} ranges\r\n// @param {module:engine/model/position~Position} targetPosition\r\n// @returns {Array.<module:engine/model/operation/moveoperation~MoveOperation>}\r\nfunction _makeMoveOperationsFromRanges( ranges, targetPosition ) {\r\n\t// At this moment we have some ranges and a target position, to which those ranges should be moved.\r\n\t// Order in `ranges` array is the go-to order of after transformation.\r\n\t//\r\n\t// We are almost done. We have `ranges` and `targetPosition` to make operations from.\r\n\t// Unfortunately, those operations may affect each other. Precisely, first operation after move\r\n\t// may affect source range and target position of second and third operation. Same with second\r\n\t// operation affecting third.\r\n\t//\r\n\t// We need to fix those source ranges and target positions once again, before converting `ranges` to operations.\r\n\tconst operations = [];\r\n\r\n\t// Keep in mind that nothing will be transformed if there is just one range in `ranges`.\r\n\tfor ( let i = 0; i < ranges.length; i++ ) {\r\n\t\t// Create new operation out of a range and target position.\r\n\t\tconst range = ranges[ i ];\r\n\t\tconst op = new MoveOperation(\r\n\t\t\trange.start,\r\n\t\t\trange.end.offset - range.start.offset,\r\n\t\t\ttargetPosition,\r\n\t\t\t0\r\n\t\t);\r\n\r\n\t\toperations.push( op );\r\n\r\n\t\t// Transform other ranges by the generated operation.\r\n\t\tfor ( let j = i + 1; j < ranges.length; j++ ) {\r\n\t\t\t// All ranges in `ranges` array should be:\r\n\t\t\t//\r\n\t\t\t// * non-intersecting (these are part of original operation source range), and\r\n\t\t\t// * `targetPosition` does not target into them (opposite would mean that transformed operation targets \"inside itself\").\r\n\t\t\t//\r\n\t\t\t// This means that the transformation will be \"clean\" and always return one result.\r\n\t\t\tranges[ j ] = ranges[ j ]._getTransformedByMove( op.sourcePosition, op.targetPosition, op.howMany )[ 0 ];\r\n\t\t}\r\n\r\n\t\ttargetPosition = targetPosition._getTransformedByMove( op.sourcePosition, op.targetPosition, op.howMany );\r\n\t}\r\n\r\n\treturn operations;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/operation/utils\r\n */\r\n\r\nimport Node from '../node';\r\nimport Text from '../text';\r\nimport TextProxy from '../textproxy';\r\nimport Range from '../range';\r\nimport DocumentFragment from '../documentfragment';\r\nimport NodeList from '../nodelist';\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\n\r\n/**\r\n * Contains functions used for composing model tree by {@link module:engine/model/operation/operation~Operation operations}.\r\n * Those functions are built on top of {@link module:engine/model/node~Node node}, and it's child classes', APIs.\r\n *\r\n * @protected\r\n * @namespace utils\r\n */\r\n\r\n/**\r\n * Inserts given nodes at given position.\r\n *\r\n * @protected\r\n * @function module:engine/model/operation/utils~utils.insert\r\n * @param {module:engine/model/position~Position} position Position at which nodes should be inserted.\r\n * @param {module:engine/model/node~NodeSet} nodes Nodes to insert.\r\n * @returns {module:engine/model/range~Range} Range spanning over inserted elements.\r\n */\r\nexport function _insert( position, nodes ) {\r\n\tnodes = _normalizeNodes( nodes );\r\n\r\n\t// We have to count offset before inserting nodes because they can get merged and we would get wrong offsets.\r\n\tconst offset = nodes.reduce( ( sum, node ) => sum + node.offsetSize, 0 );\r\n\tconst parent = position.parent;\r\n\r\n\t// Insertion might be in a text node, we should split it if that's the case.\r\n\t_splitNodeAtPosition( position );\r\n\tconst index = position.index;\r\n\r\n\t// Insert nodes at given index. After splitting we have a proper index and insertion is between nodes,\r\n\t// using basic `Element` API.\r\n\tparent._insertChild( index, nodes );\r\n\r\n\t// Merge text nodes, if possible. Merging is needed only at points where inserted nodes \"touch\" \"old\" nodes.\r\n\t_mergeNodesAtIndex( parent, index + nodes.length );\r\n\t_mergeNodesAtIndex( parent, index );\r\n\r\n\treturn new Range( position, position.getShiftedBy( offset ) );\r\n}\r\n\r\n/**\r\n * Removed nodes in given range. Only {@link module:engine/model/range~Range#isFlat flat} ranges are accepted.\r\n *\r\n * @protected\r\n * @function module:engine/model/operation/utils~utils._remove\r\n * @param {module:engine/model/range~Range} range Range containing nodes to remove.\r\n * @returns {Array.<module:engine/model/node~Node>}\r\n */\r\nexport function _remove( range ) {\r\n\tif ( !range.isFlat ) {\r\n\t\t/**\r\n\t\t * Trying to remove a range which starts and ends in different element.\r\n\t\t *\r\n\t\t * @error operation-utils-remove-range-not-flat\r\n\t\t */\r\n\t\tthrow new CKEditorError(\r\n\t\t\t'operation-utils-remove-range-not-flat: ' +\r\n\t\t\t'Trying to remove a range which starts and ends in different element.',\r\n\t\t\tthis\r\n\t\t);\r\n\t}\r\n\r\n\tconst parent = range.start.parent;\r\n\r\n\t// Range may be inside text nodes, we have to split them if that's the case.\r\n\t_splitNodeAtPosition( range.start );\r\n\t_splitNodeAtPosition( range.end );\r\n\r\n\t// Remove the text nodes using basic `Element` API.\r\n\tconst removed = parent._removeChildren( range.start.index, range.end.index - range.start.index );\r\n\r\n\t// Merge text nodes, if possible. After some nodes were removed, node before and after removed range will be\r\n\t// touching at the position equal to the removed range beginning. We check merging possibility there.\r\n\t_mergeNodesAtIndex( parent, range.start.index );\r\n\r\n\treturn removed;\r\n}\r\n\r\n/**\r\n * Moves nodes in given range to given target position. Only {@link module:engine/model/range~Range#isFlat flat} ranges are accepted.\r\n *\r\n * @protected\r\n * @function module:engine/model/operation/utils~utils.move\r\n * @param {module:engine/model/range~Range} sourceRange Range containing nodes to move.\r\n * @param {module:engine/model/position~Position} targetPosition Position to which nodes should be moved.\r\n * @returns {module:engine/model/range~Range} Range containing moved nodes.\r\n */\r\nexport function _move( sourceRange, targetPosition ) {\r\n\tif ( !sourceRange.isFlat ) {\r\n\t\t/**\r\n\t\t * Trying to move a range which starts and ends in different element.\r\n\t\t *\r\n\t\t * @error operation-utils-move-range-not-flat\r\n\t\t */\r\n\t\tthrow new CKEditorError(\r\n\t\t\t'operation-utils-move-range-not-flat: ' +\r\n\t\t\t'Trying to move a range which starts and ends in different element.',\r\n\t\t\tthis\r\n\t\t);\r\n\t}\r\n\r\n\tconst nodes = _remove( sourceRange );\r\n\r\n\t// We have to fix `targetPosition` because model changed after nodes from `sourceRange` got removed and\r\n\t// that change might have an impact on `targetPosition`.\r\n\ttargetPosition = targetPosition._getTransformedByDeletion( sourceRange.start, sourceRange.end.offset - sourceRange.start.offset );\r\n\r\n\treturn _insert( targetPosition, nodes );\r\n}\r\n\r\n/**\r\n * Sets given attribute on nodes in given range. The attributes are only set on top-level nodes of the range, not on its children.\r\n *\r\n * @protected\r\n * @function module:engine/model/operation/utils~utils._setAttribute\r\n * @param {module:engine/model/range~Range} range Range containing nodes that should have the attribute set. Must be a flat range.\r\n * @param {String} key Key of attribute to set.\r\n * @param {*} value Attribute value.\r\n */\r\nexport function _setAttribute( range, key, value ) {\r\n\t// Range might start or end in text nodes, so we have to split them.\r\n\t_splitNodeAtPosition( range.start );\r\n\t_splitNodeAtPosition( range.end );\r\n\r\n\t// Iterate over all items in the range.\r\n\tfor ( const item of range.getItems( { shallow: true } ) ) {\r\n\t\t// Iterator will return `TextProxy` instances but we know that those text proxies will\r\n\t\t// always represent full text nodes (this is guaranteed thanks to splitting we did before).\r\n\t\t// So, we can operate on those text proxies' text nodes.\r\n\t\tconst node = item.is( 'textProxy' ) ? item.textNode : item;\r\n\r\n\t\tif ( value !== null ) {\r\n\t\t\tnode._setAttribute( key, value );\r\n\t\t} else {\r\n\t\t\tnode._removeAttribute( key );\r\n\t\t}\r\n\r\n\t\t// After attributes changing it may happen that some text nodes can be merged. Try to merge with previous node.\r\n\t\t_mergeNodesAtIndex( node.parent, node.index );\r\n\t}\r\n\r\n\t// Try to merge last changed node with it's previous sibling (not covered by the loop above).\r\n\t_mergeNodesAtIndex( range.end.parent, range.end.index );\r\n}\r\n\r\n/**\r\n * Normalizes given object or an array of objects to an array of {@link module:engine/model/node~Node nodes}. See\r\n * {@link module:engine/model/node~NodeSet NodeSet} for details on how normalization is performed.\r\n *\r\n * @protected\r\n * @function module:engine/model/operation/utils~utils.normalizeNodes\r\n * @param {module:engine/model/node~NodeSet} nodes Objects to normalize.\r\n * @returns {Array.<module:engine/model/node~Node>} Normalized nodes.\r\n */\r\nexport function _normalizeNodes( nodes ) {\r\n\tconst normalized = [];\r\n\r\n\tif ( !( nodes instanceof Array ) ) {\r\n\t\tnodes = [ nodes ];\r\n\t}\r\n\r\n\t// Convert instances of classes other than Node.\r\n\tfor ( let i = 0; i < nodes.length; i++ ) {\r\n\t\tif ( typeof nodes[ i ] == 'string' ) {\r\n\t\t\tnormalized.push( new Text( nodes[ i ] ) );\r\n\t\t} else if ( nodes[ i ] instanceof TextProxy ) {\r\n\t\t\tnormalized.push( new Text( nodes[ i ].data, nodes[ i ].getAttributes() ) );\r\n\t\t} else if ( nodes[ i ] instanceof DocumentFragment || nodes[ i ] instanceof NodeList ) {\r\n\t\t\tfor ( const child of nodes[ i ] ) {\r\n\t\t\t\tnormalized.push( child );\r\n\t\t\t}\r\n\t\t} else if ( nodes[ i ] instanceof Node ) {\r\n\t\t\tnormalized.push( nodes[ i ] );\r\n\t\t}\r\n\t\t// Skip unrecognized type.\r\n\t}\r\n\r\n\t// Merge text nodes.\r\n\tfor ( let i = 1; i < normalized.length; i++ ) {\r\n\t\tconst node = normalized[ i ];\r\n\t\tconst prev = normalized[ i - 1 ];\r\n\r\n\t\tif ( node instanceof Text && prev instanceof Text && _haveSameAttributes( node, prev ) ) {\r\n\t\t\t// Doing this instead changing `prev.data` because `data` is readonly.\r\n\t\t\tnormalized.splice( i - 1, 2, new Text( prev.data + node.data, prev.getAttributes() ) );\r\n\t\t\ti--;\r\n\t\t}\r\n\t}\r\n\r\n\treturn normalized;\r\n}\r\n\r\n// Checks if nodes before and after given index in given element are {@link module:engine/model/text~Text text nodes} and\r\n// merges them into one node if they have same attributes.\r\n//\r\n// Merging is done by removing two text nodes and inserting a new text node containing data from both merged text nodes.\r\n//\r\n// @private\r\n// @param {module:engine/model/element~Element} element Parent element of nodes to merge.\r\n// @param {Number} index Index between nodes to merge.\r\nfunction _mergeNodesAtIndex( element, index ) {\r\n\tconst nodeBefore = element.getChild( index - 1 );\r\n\tconst nodeAfter = element.getChild( index );\r\n\r\n\t// Check if both of those nodes are text objects with same attributes.\r\n\tif ( nodeBefore && nodeAfter && nodeBefore.is( 'text' ) && nodeAfter.is( 'text' ) && _haveSameAttributes( nodeBefore, nodeAfter ) ) {\r\n\t\t// Append text of text node after index to the before one.\r\n\t\tconst mergedNode = new Text( nodeBefore.data + nodeAfter.data, nodeBefore.getAttributes() );\r\n\r\n\t\t// Remove separate text nodes.\r\n\t\telement._removeChildren( index - 1, 2 );\r\n\r\n\t\t// Insert merged text node.\r\n\t\telement._insertChild( index - 1, mergedNode );\r\n\t}\r\n}\r\n\r\n// Checks if given position is in a text node, and if so, splits the text node in two text nodes, each of them\r\n// containing a part of original text node.\r\n//\r\n// @private\r\n// @param {module:engine/model/position~Position} position Position at which node should be split.\r\nfunction _splitNodeAtPosition( position ) {\r\n\tconst textNode = position.textNode;\r\n\tconst element = position.parent;\r\n\r\n\tif ( textNode ) {\r\n\t\tconst offsetDiff = position.offset - textNode.startOffset;\r\n\t\tconst index = textNode.index;\r\n\r\n\t\telement._removeChildren( index, 1 );\r\n\r\n\t\tconst firstPart = new Text( textNode.data.substr( 0, offsetDiff ), textNode.getAttributes() );\r\n\t\tconst secondPart = new Text( textNode.data.substr( offsetDiff ), textNode.getAttributes() );\r\n\r\n\t\telement._insertChild( index, [ firstPart, secondPart ] );\r\n\t}\r\n}\r\n\r\n// Checks whether two given nodes have same attributes.\r\n//\r\n// @private\r\n// @param {module:engine/model/node~Node} nodeA Node to check.\r\n// @param {module:engine/model/node~Node} nodeB Node to check.\r\n// @returns {Boolean} `true` if nodes have same attributes, `false` otherwise.\r\nfunction _haveSameAttributes( nodeA, nodeB ) {\r\n\tconst iteratorA = nodeA.getAttributes();\r\n\tconst iteratorB = nodeB.getAttributes();\r\n\r\n\tfor ( const attr of iteratorA ) {\r\n\t\tif ( attr[ 1 ] !== nodeB.getAttribute( attr[ 0 ] ) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\titeratorB.next();\r\n\t}\r\n\r\n\treturn iteratorB.next().done;\r\n}\r\n\r\n/**\r\n * Value that can be normalized to an array of {@link module:engine/model/node~Node nodes}.\r\n *\r\n * Non-arrays are normalized as follows:\r\n * * {@link module:engine/model/node~Node Node} is left as is,\r\n * * {@link module:engine/model/textproxy~TextProxy TextProxy} and `String` are normalized to {@link module:engine/model/text~Text Text},\r\n * * {@link module:engine/model/nodelist~NodeList NodeList} is normalized to an array containing all nodes that are in that node list,\r\n * * {@link module:engine/model/documentfragment~DocumentFragment DocumentFragment} is normalized to an array containing all of it's\r\n * * children.\r\n *\r\n * Arrays are processed item by item like non-array values and flattened to one array. Normalization always results in\r\n * a flat array of {@link module:engine/model/node~Node nodes}. Consecutive text nodes (or items normalized to text nodes) will be\r\n * merged if they have same attributes.\r\n *\r\n * @typedef {module:engine/model/node~Node|module:engine/model/textproxy~TextProxy|String|\r\n * module:engine/model/nodelist~NodeList|module:engine/model/documentfragment~DocumentFragment|Iterable}\r\n * module:engine/model/node~NodeSet\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/position\r\n */\r\n\r\nimport TreeWalker from './treewalker';\r\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\nimport Text from './text';\r\nimport { last } from 'lodash-es';\r\n\r\n// To check if component is loaded more than once.\r\nimport '@ckeditor/ckeditor5-utils/src/version';\r\n\r\n/**\r\n * Represents a position in the model tree.\r\n *\r\n * A position is represented by its {@link module:engine/model/position~Position#root} and\r\n * a {@link module:engine/model/position~Position#path} in that root.\r\n *\r\n * You can create position instances via its constructor or the `createPosition*()` factory methods of\r\n * {@link module:engine/model/model~Model} and {@link module:engine/model/writer~Writer}.\r\n *\r\n * **Note:** Position is based on offsets, not indexes. This means that a position between two text nodes\r\n * `foo` and `bar` has offset `3`, not `1`. See {@link module:engine/model/position~Position#path} for more information.\r\n *\r\n * Since a position in the model is represented by a {@link module:engine/model/position~Position#root position root} and\r\n * {@link module:engine/model/position~Position#path position path} it is possible to create positions placed in non-existing places.\r\n * This requirement is important for operational transformation algorithms.\r\n *\r\n * Also, {@link module:engine/model/operation/operation~Operation operations}\r\n * kept in the {@link module:engine/model/document~Document#history document history}\r\n * are storing positions (and ranges) which were correct when those operations were applied, but may not be correct\r\n * after the document has changed.\r\n *\r\n * When changes are applied to the model, it may also happen that {@link module:engine/model/position~Position#parent position parent}\r\n * will change even if position path has not changed. Keep in mind, that if a position leads to non-existing element,\r\n * {@link module:engine/model/position~Position#parent} and some other properties and methods will throw errors.\r\n *\r\n * In most cases, position with wrong path is caused by an error in code, but it is sometimes needed, as described above.\r\n */\r\nexport default class Position {\r\n\t/**\r\n\t * Creates a position.\r\n\t *\r\n\t * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} root Root of the position.\r\n\t * @param {Array.<Number>} path Position path. See {@link module:engine/model/position~Position#path}.\r\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness.\r\n\t * See {@link module:engine/model/position~PositionStickiness}.\r\n\t */\r\n\tconstructor( root, path, stickiness = 'toNone' ) {\r\n\t\tif ( !root.is( 'element' ) && !root.is( 'documentFragment' ) ) {\r\n\t\t\t/**\r\n\t\t\t * Position root is invalid.\r\n\t\t\t *\r\n\t\t\t * Positions can only be anchored in elements or document fragments.\r\n\t\t\t *\r\n\t\t\t * @error model-position-root-invalid\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'model-position-root-invalid: Position root invalid.',\r\n\t\t\t\troot\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif ( !( path instanceof Array ) || path.length === 0 ) {\r\n\t\t\t/**\r\n\t\t\t * Position path must be an array with at least one item.\r\n\t\t\t *\r\n\t\t\t * @error model-position-path-incorrect-format\r\n\t\t\t * @param path\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'model-position-path-incorrect-format: Position path must be an array with at least one item.',\r\n\t\t\t\troot,\r\n\t\t\t\t{ path }\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\t// Normalize the root and path (if element was passed).\r\n\t\tpath = root.getPath().concat( path );\r\n\t\troot = root.root;\r\n\r\n\t\t/**\r\n\t\t * Root of the position path.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment}\r\n\t\t * module:engine/model/position~Position#root\r\n\t\t */\r\n\t\tthis.root = root;\r\n\r\n\t\t/**\r\n\t\t * Position of the node in the tree. **Path contains offsets, not indexes.**\r\n\t\t *\r\n\t\t * Position can be placed before, after or in a {@link module:engine/model/node~Node node} if that node has\r\n\t\t * {@link module:engine/model/node~Node#offsetSize} greater than `1`. Items in position path are\r\n\t\t * {@link module:engine/model/node~Node#startOffset starting offsets} of position ancestors, starting from direct root children,\r\n\t\t * down to the position offset in it's parent.\r\n\t\t *\r\n\t\t *\t\t ROOT\r\n\t\t *\t\t  |- P            before: [ 0 ]         after: [ 1 ]\r\n\t\t *\t\t  |- UL           before: [ 1 ]         after: [ 2 ]\r\n\t\t *\t\t     |- LI        before: [ 1, 0 ]      after: [ 1, 1 ]\r\n\t\t *\t\t     |  |- foo    before: [ 1, 0, 0 ]   after: [ 1, 0, 3 ]\r\n\t\t *\t\t     |- LI        before: [ 1, 1 ]      after: [ 1, 2 ]\r\n\t\t *\t\t        |- bar    before: [ 1, 1, 0 ]   after: [ 1, 1, 3 ]\r\n\t\t *\r\n\t\t * `foo` and `bar` are representing {@link module:engine/model/text~Text text nodes}. Since text nodes has offset size\r\n\t\t * greater than `1` you can place position offset between their start and end:\r\n\t\t *\r\n\t\t *\t\t ROOT\r\n\t\t *\t\t  |- P\r\n\t\t *\t\t  |- UL\r\n\t\t *\t\t     |- LI\r\n\t\t *\t\t     |  |- f^o|o  ^ has path: [ 1, 0, 1 ]   | has path: [ 1, 0, 2 ]\r\n\t\t *\t\t     |- LI\r\n\t\t *\t\t        |- b^a|r  ^ has path: [ 1, 1, 1 ]   | has path: [ 1, 1, 2 ]\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Array.<Number>} module:engine/model/position~Position#path\r\n\t\t */\r\n\t\tthis.path = path;\r\n\r\n\t\t/**\r\n\t\t * Position stickiness. See {@link module:engine/model/position~PositionStickiness}.\r\n\t\t *\r\n\t\t * @member {module:engine/model/position~PositionStickiness} module:engine/model/position~Position#stickiness\r\n\t\t */\r\n\t\tthis.stickiness = stickiness;\r\n\t}\r\n\r\n\t/**\r\n\t * Offset at which this position is located in its {@link module:engine/model/position~Position#parent parent}. It is equal\r\n\t * to the last item in position {@link module:engine/model/position~Position#path path}.\r\n\t *\r\n\t * @type {Number}\r\n\t */\r\n\tget offset() {\r\n\t\treturn last( this.path );\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Number} newOffset\r\n\t */\r\n\tset offset( newOffset ) {\r\n\t\tthis.path[ this.path.length - 1 ] = newOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element of this position.\r\n\t *\r\n\t * Keep in mind that `parent` value is calculated when the property is accessed.\r\n\t * If {@link module:engine/model/position~Position#path position path}\r\n\t * leads to a non-existing element, `parent` property will throw error.\r\n\t *\r\n\t * Also it is a good idea to cache `parent` property if it is used frequently in an algorithm (i.e. in a long loop).\r\n\t *\r\n\t * @readonly\r\n\t * @type {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment}\r\n\t */\r\n\tget parent() {\r\n\t\tlet parent = this.root;\r\n\r\n\t\tfor ( let i = 0; i < this.path.length - 1; i++ ) {\r\n\t\t\tparent = parent.getChild( parent.offsetToIndex( this.path[ i ] ) );\r\n\r\n\t\t\tif ( !parent ) {\r\n\t\t\t\tthrow new CKEditorError( 'model-position-path-incorrect: The position\\'s path is incorrect.', this, { position: this } );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( parent.is( 'text' ) ) {\r\n\t\t\t/**\r\n\t\t\t * The position's path is incorrect. This means that a position does not point to\r\n\t\t\t * a correct place in the tree and hence, some of its methods and getters cannot work correctly.\r\n\t\t\t *\r\n\t\t\t * **Note**: Unlike DOM and view positions, in the model, the\r\n\t\t\t * {@link module:engine/model/position~Position#parent position's parent} is always an element or a document fragment.\r\n\t\t\t * The last offset in the {@link module:engine/model/position~Position#path position's path} is the point in this element where\r\n\t\t\t * this position points.\r\n\t\t\t *\r\n\t\t\t * Read more about model positions and offsets in\r\n\t\t\t * the {@glink framework/guides/architecture/editing-engine#indexes-and-offsets Editing engine architecture guide}.\r\n\t\t\t *\r\n\t\t\t * @error position-incorrect-path\r\n\t\t\t * @param {module:engine/model/position~Position} position The incorrect position.\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'model-position-path-incorrect: The position\\'s path is incorrect.', this, { position: this } );\r\n\t\t}\r\n\r\n\t\treturn parent;\r\n\t}\r\n\r\n\t/**\r\n\t * Position {@link module:engine/model/position~Position#offset offset} converted to an index in position's parent node. It is\r\n\t * equal to the {@link module:engine/model/node~Node#index index} of a node after this position. If position is placed\r\n\t * in text node, position index is equal to the index of that text node.\r\n\t *\r\n\t * @readonly\r\n\t * @type {Number}\r\n\t */\r\n\tget index() {\r\n\t\treturn this.parent.offsetToIndex( this.offset );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns {@link module:engine/model/text~Text text node} instance in which this position is placed or `null` if this\r\n\t * position is not in a text node.\r\n\t *\r\n\t * @readonly\r\n\t * @type {module:engine/model/text~Text|null}\r\n\t */\r\n\tget textNode() {\r\n\t\tconst node = this.parent.getChild( this.index );\r\n\r\n\t\treturn ( node instanceof Text && node.startOffset < this.offset ) ? node : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Node directly after this position or `null` if this position is in text node.\r\n\t *\r\n\t * @readonly\r\n\t * @type {module:engine/model/node~Node|null}\r\n\t */\r\n\tget nodeAfter() {\r\n\t\treturn this.textNode === null ? this.parent.getChild( this.index ) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Node directly before this position or `null` if this position is in text node.\r\n\t *\r\n\t * @readonly\r\n\t * @type {Node}\r\n\t */\r\n\tget nodeBefore() {\r\n\t\treturn this.textNode === null ? this.parent.getChild( this.index - 1 ) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Is `true` if position is at the beginning of its {@link module:engine/model/position~Position#parent parent}, `false` otherwise.\r\n\t *\r\n\t * @readonly\r\n\t * @type {Boolean}\r\n\t */\r\n\tget isAtStart() {\r\n\t\treturn this.offset === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Is `true` if position is at the end of its {@link module:engine/model/position~Position#parent parent}, `false` otherwise.\r\n\t *\r\n\t * @readonly\r\n\t * @type {Boolean}\r\n\t */\r\n\tget isAtEnd() {\r\n\t\treturn this.offset == this.parent.maxOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this position is before or after given position.\r\n\t *\r\n\t * This method is safe to use it on non-existing positions (for example during operational transformation).\r\n\t *\r\n\t * @param {module:engine/model/position~Position} otherPosition Position to compare with.\r\n\t * @returns {module:engine/model/position~PositionRelation}\r\n\t */\r\n\tcompareWith( otherPosition ) {\r\n\t\tif ( this.root != otherPosition.root ) {\r\n\t\t\treturn 'different';\r\n\t\t}\r\n\r\n\t\tconst result = compareArrays( this.path, otherPosition.path );\r\n\r\n\t\tswitch ( result ) {\r\n\t\t\tcase 'same':\r\n\t\t\t\treturn 'same';\r\n\r\n\t\t\tcase 'prefix':\r\n\t\t\t\treturn 'before';\r\n\r\n\t\t\tcase 'extension':\r\n\t\t\t\treturn 'after';\r\n\r\n\t\t\tdefault:\r\n\t\t\t\treturn this.path[ result ] < otherPosition.path[ result ] ? 'before' : 'after';\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the farthest position which matches the callback using\r\n\t * {@link module:engine/model/treewalker~TreeWalker TreeWalker}.\r\n\t *\r\n\t * For example:\r\n\t *\r\n\t * \t\tgetLastMatchingPosition( value => value.type == 'text' );\r\n\t * \t\t// <paragraph>[]foo</paragraph> -> <paragraph>foo[]</paragraph>\r\n\t *\r\n\t * \t\tgetLastMatchingPosition( value => value.type == 'text', { direction: 'backward' } );\r\n\t * \t\t// <paragraph>foo[]</paragraph> -> <paragraph>[]foo</paragraph>\r\n\t *\r\n\t * \t\tgetLastMatchingPosition( value => false );\r\n\t * \t\t// Do not move the position.\r\n\t *\r\n\t * @param {Function} skip Callback function. Gets {@link module:engine/model/treewalker~TreeWalkerValue} and should\r\n\t * return `true` if the value should be skipped or `false` if not.\r\n\t * @param {Object} options Object with configuration options. See {@link module:engine/model/treewalker~TreeWalker}.\r\n\t *\r\n\t * @returns {module:engine/model/position~Position} The position after the last item which matches the `skip` callback test.\r\n\t */\r\n\tgetLastMatchingPosition( skip, options = {} ) {\r\n\t\toptions.startPosition = this;\r\n\r\n\t\tconst treeWalker = new TreeWalker( options );\r\n\t\ttreeWalker.skip( skip );\r\n\r\n\t\treturn treeWalker.position;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a path to this position's parent. Parent path is equal to position {@link module:engine/model/position~Position#path path}\r\n\t * but without the last item.\r\n\t *\r\n\t * This method is safe to use it on non-existing positions (for example during operational transformation).\r\n\t *\r\n\t * @returns {Array.<Number>} Path to the parent.\r\n\t */\r\n\tgetParentPath() {\r\n\t\treturn this.path.slice( 0, -1 );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns ancestors array of this position, that is this position's parent and its ancestors.\r\n\t *\r\n\t * @returns {Array.<module:engine/model/item~Item>} Array with ancestors.\r\n\t */\r\n\tgetAncestors() {\r\n\t\tif ( this.parent.is( 'documentFragment' ) ) {\r\n\t\t\treturn [ this.parent ];\r\n\t\t} else {\r\n\t\t\treturn this.parent.getAncestors( { includeSelf: true } );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the slice of two position {@link #path paths} which is identical. The {@link #root roots}\r\n\t * of these two paths must be identical.\r\n\t *\r\n\t * This method is safe to use it on non-existing positions (for example during operational transformation).\r\n\t *\r\n\t * @param {module:engine/model/position~Position} position The second position.\r\n\t * @returns {Array.<Number>} The common path.\r\n\t */\r\n\tgetCommonPath( position ) {\r\n\t\tif ( this.root != position.root ) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\t// We find on which tree-level start and end have the lowest common ancestor\r\n\t\tconst cmp = compareArrays( this.path, position.path );\r\n\t\t// If comparison returned string it means that arrays are same.\r\n\t\tconst diffAt = ( typeof cmp == 'string' ) ? Math.min( this.path.length, position.path.length ) : cmp;\r\n\r\n\t\treturn this.path.slice( 0, diffAt );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an {@link module:engine/model/element~Element} or {@link module:engine/model/documentfragment~DocumentFragment}\r\n\t * which is a common ancestor of both positions. The {@link #root roots} of these two positions must be identical.\r\n\t *\r\n\t * @param {module:engine/model/position~Position} position The second position.\r\n\t * @returns {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\r\n\t */\r\n\tgetCommonAncestor( position ) {\r\n\t\tconst ancestorsA = this.getAncestors();\r\n\t\tconst ancestorsB = position.getAncestors();\r\n\r\n\t\tlet i = 0;\r\n\r\n\t\twhile ( ancestorsA[ i ] == ancestorsB[ i ] && ancestorsA[ i ] ) {\r\n\t\t\ti++;\r\n\t\t}\r\n\r\n\t\treturn i === 0 ? null : ancestorsA[ i - 1 ];\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new instance of `Position`, that has same {@link #parent parent} but it's offset\r\n\t * is shifted by `shift` value (can be a negative value).\r\n\t *\r\n\t * This method is safe to use it on non-existing positions (for example during operational transformation).\r\n\t *\r\n\t * @param {Number} shift Offset shift. Can be a negative value.\r\n\t * @returns {module:engine/model/position~Position} Shifted position.\r\n\t */\r\n\tgetShiftedBy( shift ) {\r\n\t\tconst shifted = this.clone();\r\n\r\n\t\tconst offset = shifted.offset + shift;\r\n\t\tshifted.offset = offset < 0 ? 0 : offset;\r\n\r\n\t\treturn shifted;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this position is after given position.\r\n\t *\r\n\t * This method is safe to use it on non-existing positions (for example during operational transformation).\r\n\t *\r\n\t * @see module:engine/model/position~Position#isBefore\r\n\t * @param {module:engine/model/position~Position} otherPosition Position to compare with.\r\n\t * @returns {Boolean} True if this position is after given position.\r\n\t */\r\n\tisAfter( otherPosition ) {\r\n\t\treturn this.compareWith( otherPosition ) == 'after';\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this position is before given position.\r\n\t *\r\n\t * **Note:** watch out when using negation of the value returned by this method, because the negation will also\r\n\t * be `true` if positions are in different roots and you might not expect this. You should probably use\r\n\t * `a.isAfter( b ) || a.isEqual( b )` or `!a.isBefore( p ) && a.root == b.root` in most scenarios. If your\r\n\t * condition uses multiple `isAfter` and `isBefore` checks, build them so they do not use negated values, i.e.:\r\n\t *\r\n\t *\t\tif ( a.isBefore( b ) && c.isAfter( d ) ) {\r\n\t *\t\t\t// do A.\r\n\t *\t\t} else {\r\n\t *\t\t\t// do B.\r\n\t *\t\t}\r\n\t *\r\n\t * or, if you have only one if-branch:\r\n\t *\r\n\t *\t\tif ( !( a.isBefore( b ) && c.isAfter( d ) ) {\r\n\t *\t\t\t// do B.\r\n\t *\t\t}\r\n\t *\r\n\t * rather than:\r\n\t *\r\n\t *\t\tif ( !a.isBefore( b ) || && !c.isAfter( d ) ) {\r\n\t *\t\t\t// do B.\r\n\t *\t\t} else {\r\n\t *\t\t\t// do A.\r\n\t *\t\t}\r\n\t *\r\n\t * This method is safe to use it on non-existing positions (for example during operational transformation).\r\n\t *\r\n\t * @param {module:engine/model/position~Position} otherPosition Position to compare with.\r\n\t * @returns {Boolean} True if this position is before given position.\r\n\t */\r\n\tisBefore( otherPosition ) {\r\n\t\treturn this.compareWith( otherPosition ) == 'before';\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this position is equal to given position.\r\n\t *\r\n\t * This method is safe to use it on non-existing positions (for example during operational transformation).\r\n\t *\r\n\t * @param {module:engine/model/position~Position} otherPosition Position to compare with.\r\n\t * @returns {Boolean} True if positions are same.\r\n\t */\r\n\tisEqual( otherPosition ) {\r\n\t\treturn this.compareWith( otherPosition ) == 'same';\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this position is touching given position. Positions touch when there are no text nodes\r\n\t * or empty nodes in a range between them. Technically, those positions are not equal but in many cases\r\n\t * they are very similar or even indistinguishable.\r\n\t *\r\n\t * @param {module:engine/model/position~Position} otherPosition Position to compare with.\r\n\t * @returns {Boolean} True if positions touch.\r\n\t */\r\n\tisTouching( otherPosition ) {\r\n\t\tlet left = null;\r\n\t\tlet right = null;\r\n\t\tconst compare = this.compareWith( otherPosition );\r\n\r\n\t\tswitch ( compare ) {\r\n\t\t\tcase 'same':\r\n\t\t\t\treturn true;\r\n\r\n\t\t\tcase 'before':\r\n\t\t\t\tleft = Position._createAt( this );\r\n\t\t\t\tright = Position._createAt( otherPosition );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'after':\r\n\t\t\t\tleft = Position._createAt( otherPosition );\r\n\t\t\t\tright = Position._createAt( this );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Cached for optimization purposes.\r\n\t\tlet leftParent = left.parent;\r\n\r\n\t\twhile ( left.path.length + right.path.length ) {\r\n\t\t\tif ( left.isEqual( right ) ) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tif ( left.path.length > right.path.length ) {\r\n\t\t\t\tif ( left.offset !== leftParent.maxOffset ) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tleft.path = left.path.slice( 0, -1 );\r\n\t\t\t\tleftParent = leftParent.parent;\r\n\t\t\t\tleft.offset++;\r\n\t\t\t} else {\r\n\t\t\t\tif ( right.offset !== 0 ) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tright.path = right.path.slice( 0, -1 );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this object is of the given.\r\n\t *\r\n\t *\t\tposition.is( 'position' ); // -> true\r\n\t *\t\tposition.is( 'model:position' ); // -> true\r\n\t *\r\n\t *\t\tposition.is( 'view:position' ); // -> false\r\n\t *\t\tposition.is( 'documentSelection' ); // -> false\r\n\t *\r\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\r\n\t *\r\n\t * @param {String} type\r\n\t * @returns {Boolean}\r\n\t */\r\n\tis( type ) {\r\n\t\treturn type == 'position' || type == 'model:position';\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if two positions are in the same parent.\r\n\t *\r\n\t * This method is safe to use it on non-existing positions (for example during operational transformation).\r\n\t *\r\n\t * @param {module:engine/model/position~Position} position Position to compare with.\r\n\t * @returns {Boolean} `true` if positions have the same parent, `false` otherwise.\r\n\t */\r\n\thasSameParentAs( position ) {\r\n\t\tif ( this.root !== position.root ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst thisParentPath = this.getParentPath();\r\n\t\tconst posParentPath = position.getParentPath();\r\n\r\n\t\treturn compareArrays( thisParentPath, posParentPath ) == 'same';\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a copy of this position that is transformed by given `operation`.\r\n\t *\r\n\t * The new position's parameters are updated accordingly to the effect of the `operation`.\r\n\t *\r\n\t * For example, if `n` nodes are inserted before the position, the returned position {@link ~Position#offset} will be\r\n\t * increased by `n`. If the position was in a merged element, it will be accordingly moved to the new element, etc.\r\n\t *\r\n\t * This method is safe to use it on non-existing positions (for example during operational transformation).\r\n\t *\r\n\t * @param {module:engine/model/operation/operation~Operation} operation Operation to transform by.\r\n\t * @returns {module:engine/model/position~Position} Transformed position.\r\n\t */\r\n\tgetTransformedByOperation( operation ) {\r\n\t\tlet result;\r\n\r\n\t\tswitch ( operation.type ) {\r\n\t\t\tcase 'insert':\r\n\t\t\t\tresult = this._getTransformedByInsertOperation( operation );\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'move':\r\n\t\t\tcase 'remove':\r\n\t\t\tcase 'reinsert':\r\n\t\t\t\tresult = this._getTransformedByMoveOperation( operation );\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'split':\r\n\t\t\t\tresult = this._getTransformedBySplitOperation( operation );\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'merge':\r\n\t\t\t\tresult = this._getTransformedByMergeOperation( operation );\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tresult = Position._createAt( this );\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a copy of this position transformed by an insert operation.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/model/operation/insertoperation~InsertOperation} operation\r\n\t * @returns {module:engine/model/position~Position}\r\n\t */\r\n\t_getTransformedByInsertOperation( operation ) {\r\n\t\treturn this._getTransformedByInsertion( operation.position, operation.howMany );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a copy of this position transformed by a move operation.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/model/operation/moveoperation~MoveOperation} operation\r\n\t * @returns {module:engine/model/position~Position}\r\n\t */\r\n\t_getTransformedByMoveOperation( operation ) {\r\n\t\treturn this._getTransformedByMove( operation.sourcePosition, operation.targetPosition, operation.howMany );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a copy of this position transformed by a split operation.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/model/operation/splitoperation~SplitOperation} operation\r\n\t * @returns {module:engine/model/position~Position}\r\n\t */\r\n\t_getTransformedBySplitOperation( operation ) {\r\n\t\tconst movedRange = operation.movedRange;\r\n\r\n\t\tconst isContained = movedRange.containsPosition( this ) ||\r\n\t\t\t( movedRange.start.isEqual( this ) && this.stickiness == 'toNext' );\r\n\r\n\t\tif ( isContained ) {\r\n\t\t\treturn this._getCombined( operation.splitPosition, operation.moveTargetPosition );\r\n\t\t} else {\r\n\t\t\tif ( operation.graveyardPosition ) {\r\n\t\t\t\treturn this._getTransformedByMove( operation.graveyardPosition, operation.insertionPosition, 1 );\r\n\t\t\t} else {\r\n\t\t\t\treturn this._getTransformedByInsertion( operation.insertionPosition, 1 );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a copy of this position transformed by merge operation.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/model/operation/mergeoperation~MergeOperation} operation\r\n\t * @returns {module:engine/model/position~Position}\r\n\t */\r\n\t_getTransformedByMergeOperation( operation ) {\r\n\t\tconst movedRange = operation.movedRange;\r\n\t\tconst isContained = movedRange.containsPosition( this ) || movedRange.start.isEqual( this );\r\n\r\n\t\tlet pos;\r\n\r\n\t\tif ( isContained ) {\r\n\t\t\tpos = this._getCombined( operation.sourcePosition, operation.targetPosition );\r\n\r\n\t\t\tif ( operation.sourcePosition.isBefore( operation.targetPosition ) ) {\r\n\t\t\t\t// Above happens during OT when the merged element is moved before the merged-to element.\r\n\t\t\t\tpos = pos._getTransformedByDeletion( operation.deletionPosition, 1 );\r\n\t\t\t}\r\n\t\t} else if ( this.isEqual( operation.deletionPosition ) ) {\r\n\t\t\tpos = Position._createAt( operation.deletionPosition );\r\n\t\t} else {\r\n\t\t\tpos = this._getTransformedByMove( operation.deletionPosition, operation.graveyardPosition, 1 );\r\n\t\t}\r\n\r\n\t\treturn pos;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a copy of this position that is updated by removing `howMany` nodes starting from `deletePosition`.\r\n\t * It may happen that this position is in a removed node. If that is the case, `null` is returned instead.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/model/position~Position} deletePosition Position before the first removed node.\r\n\t * @param {Number} howMany How many nodes are removed.\r\n\t * @returns {module:engine/model/position~Position|null} Transformed position or `null`.\r\n\t */\r\n\t_getTransformedByDeletion( deletePosition, howMany ) {\r\n\t\tconst transformed = Position._createAt( this );\r\n\r\n\t\t// This position can't be affected if deletion was in a different root.\r\n\t\tif ( this.root != deletePosition.root ) {\r\n\t\t\treturn transformed;\r\n\t\t}\r\n\r\n\t\tif ( compareArrays( deletePosition.getParentPath(), this.getParentPath() ) == 'same' ) {\r\n\t\t\t// If nodes are removed from the node that is pointed by this position...\r\n\t\t\tif ( deletePosition.offset < this.offset ) {\r\n\t\t\t\t// And are removed from before an offset of that position...\r\n\t\t\t\tif ( deletePosition.offset + howMany > this.offset ) {\r\n\t\t\t\t\t// Position is in removed range, it's no longer in the tree.\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Decrement the offset accordingly.\r\n\t\t\t\t\ttransformed.offset -= howMany;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if ( compareArrays( deletePosition.getParentPath(), this.getParentPath() ) == 'prefix' ) {\r\n\t\t\t// If nodes are removed from a node that is on a path to this position...\r\n\t\t\tconst i = deletePosition.path.length - 1;\r\n\r\n\t\t\tif ( deletePosition.offset <= this.path[ i ] ) {\r\n\t\t\t\t// And are removed from before next node of that path...\r\n\t\t\t\tif ( deletePosition.offset + howMany > this.path[ i ] ) {\r\n\t\t\t\t\t// If the next node of that path is removed return null\r\n\t\t\t\t\t// because the node containing this position got removed.\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Otherwise, decrement index on that path.\r\n\t\t\t\t\ttransformed.path[ i ] -= howMany;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn transformed;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a copy of this position that is updated by inserting `howMany` nodes at `insertPosition`.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/model/position~Position} insertPosition Position where nodes are inserted.\r\n\t * @param {Number} howMany How many nodes are inserted.\r\n\t * @returns {module:engine/model/position~Position} Transformed position.\r\n\t */\r\n\t_getTransformedByInsertion( insertPosition, howMany ) {\r\n\t\tconst transformed = Position._createAt( this );\r\n\r\n\t\t// This position can't be affected if insertion was in a different root.\r\n\t\tif ( this.root != insertPosition.root ) {\r\n\t\t\treturn transformed;\r\n\t\t}\r\n\r\n\t\tif ( compareArrays( insertPosition.getParentPath(), this.getParentPath() ) == 'same' ) {\r\n\t\t\t// If nodes are inserted in the node that is pointed by this position...\r\n\t\t\tif ( insertPosition.offset < this.offset || ( insertPosition.offset == this.offset && this.stickiness != 'toPrevious' ) ) {\r\n\t\t\t\t// And are inserted before an offset of that position...\r\n\t\t\t\t// \"Push\" this positions offset.\r\n\t\t\t\ttransformed.offset += howMany;\r\n\t\t\t}\r\n\t\t} else if ( compareArrays( insertPosition.getParentPath(), this.getParentPath() ) == 'prefix' ) {\r\n\t\t\t// If nodes are inserted in a node that is on a path to this position...\r\n\t\t\tconst i = insertPosition.path.length - 1;\r\n\r\n\t\t\tif ( insertPosition.offset <= this.path[ i ] ) {\r\n\t\t\t\t// And are inserted before next node of that path...\r\n\t\t\t\t// \"Push\" the index on that path.\r\n\t\t\t\ttransformed.path[ i ] += howMany;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn transformed;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a copy of this position that is updated by moving `howMany` nodes from `sourcePosition` to `targetPosition`.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/model/position~Position} sourcePosition Position before the first element to move.\r\n\t * @param {module:engine/model/position~Position} targetPosition Position where moved elements will be inserted.\r\n\t * @param {Number} howMany How many consecutive nodes to move, starting from `sourcePosition`.\r\n\t * @returns {module:engine/model/position~Position} Transformed position.\r\n\t */\r\n\t_getTransformedByMove( sourcePosition, targetPosition, howMany ) {\r\n\t\t// Update target position, as it could be affected by nodes removal.\r\n\t\ttargetPosition = targetPosition._getTransformedByDeletion( sourcePosition, howMany );\r\n\r\n\t\tif ( sourcePosition.isEqual( targetPosition ) ) {\r\n\t\t\t// If `targetPosition` is equal to `sourcePosition` this isn't really any move. Just return position as it is.\r\n\t\t\treturn Position._createAt( this );\r\n\t\t}\r\n\r\n\t\t// Moving a range removes nodes from their original position. We acknowledge this by proper transformation.\r\n\t\tconst transformed = this._getTransformedByDeletion( sourcePosition, howMany );\r\n\r\n\t\tconst isMoved = transformed === null ||\r\n\t\t\t( sourcePosition.isEqual( this ) && this.stickiness == 'toNext' ) ||\r\n\t\t\t( sourcePosition.getShiftedBy( howMany ).isEqual( this ) && this.stickiness == 'toPrevious' );\r\n\r\n\t\tif ( isMoved ) {\r\n\t\t\t// This position is inside moved range (or sticks to it).\r\n\t\t\t// In this case, we calculate a combination of this position, move source position and target position.\r\n\t\t\treturn this._getCombined( sourcePosition, targetPosition );\r\n\t\t} else {\r\n\t\t\t// This position is not inside a removed range.\r\n\t\t\t//\r\n\t\t\t// In next step, we simply reflect inserting `howMany` nodes, which might further affect the position.\r\n\t\t\treturn transformed._getTransformedByInsertion( targetPosition, howMany );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new position that is a combination of this position and given positions.\r\n\t *\r\n\t * The combined position is a copy of this position transformed by moving a range starting at `source` position\r\n\t * to the `target` position. It is expected that this position is inside the moved range.\r\n\t *\r\n\t * Example:\r\n\t *\r\n\t *\t\tlet original = model.createPositionFromPath( root, [ 2, 3, 1 ] );\r\n\t *\t\tlet source = model.createPositionFromPath( root, [ 2, 2 ] );\r\n\t *\t\tlet target = model.createPositionFromPath( otherRoot, [ 1, 1, 3 ] );\r\n\t *\t\toriginal._getCombined( source, target ); // path is [ 1, 1, 4, 1 ], root is `otherRoot`\r\n\t *\r\n\t * Explanation:\r\n\t *\r\n\t * We have a position `[ 2, 3, 1 ]` and move some nodes from `[ 2, 2 ]` to `[ 1, 1, 3 ]`. The original position\r\n\t * was inside moved nodes and now should point to the new place. The moved nodes will be after\r\n\t * positions `[ 1, 1, 3 ]`, `[ 1, 1, 4 ]`, `[ 1, 1, 5 ]`. Since our position was in the second moved node,\r\n\t * the transformed position will be in a sub-tree of a node at `[ 1, 1, 4 ]`. Looking at original path, we\r\n\t * took care of `[ 2, 3 ]` part of it. Now we have to add the rest of the original path to the transformed path.\r\n\t * Finally, the transformed position will point to `[ 1, 1, 4, 1 ]`.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/model/position~Position} source Beginning of the moved range.\r\n\t * @param {module:engine/model/position~Position} target Position where the range is moved.\r\n\t * @returns {module:engine/model/position~Position} Combined position.\r\n\t */\r\n\t_getCombined( source, target ) {\r\n\t\tconst i = source.path.length - 1;\r\n\r\n\t\t// The first part of a path to combined position is a path to the place where nodes were moved.\r\n\t\tconst combined = Position._createAt( target );\r\n\t\tcombined.stickiness = this.stickiness;\r\n\r\n\t\t// Then we have to update the rest of the path.\r\n\r\n\t\t// Fix the offset because this position might be after `from` position and we have to reflect that.\r\n\t\tcombined.offset = combined.offset + this.path[ i ] - source.offset;\r\n\r\n\t\t// Then, add the rest of the path.\r\n\t\t// If this position is at the same level as `from` position nothing will get added.\r\n\t\tcombined.path = combined.path.concat( this.path.slice( i + 1 ) );\r\n\r\n\t\treturn combined;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\ttoJSON() {\r\n\t\treturn {\r\n\t\t\troot: this.root.toJSON(),\r\n\t\t\tpath: Array.from( this.path ),\r\n\t\t\tstickiness: this.stickiness\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new position that is equal to current position.\r\n\t *\r\n\t * @returns {module:engine/model/position~Position}\r\n\t */\r\n\tclone() {\r\n\t\treturn new this.constructor( this.root, this.path, this.stickiness );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates position at the given location. The location can be specified as:\r\n\t *\r\n\t * * a {@link module:engine/model/position~Position position},\r\n\t * * parent element and offset (offset defaults to `0`),\r\n\t * * parent element and `'end'` (sets position at the end of that element),\r\n\t * * {@link module:engine/model/item~Item model item} and `'before'` or `'after'` (sets position before or after given model item).\r\n\t *\r\n\t * This method is a shortcut to other factory methods such as:\r\n\t *\r\n\t * * {@link module:engine/model/position~Position._createBefore},\r\n\t * * {@link module:engine/model/position~Position._createAfter}.\r\n\t *\r\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\r\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when the\r\n\t * first parameter is a {@link module:engine/model/item~Item model item}.\r\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness. Used only when the\r\n\t * first parameter is a {@link module:engine/model/item~Item model item}.\r\n\t * @protected\r\n\t */\r\n\tstatic _createAt( itemOrPosition, offset, stickiness = 'toNone' ) {\r\n\t\tif ( itemOrPosition instanceof Position ) {\r\n\t\t\treturn new Position( itemOrPosition.root, itemOrPosition.path, itemOrPosition.stickiness );\r\n\t\t} else {\r\n\t\t\tconst node = itemOrPosition;\r\n\r\n\t\t\tif ( offset == 'end' ) {\r\n\t\t\t\toffset = node.maxOffset;\r\n\t\t\t} else if ( offset == 'before' ) {\r\n\t\t\t\treturn this._createBefore( node, stickiness );\r\n\t\t\t} else if ( offset == 'after' ) {\r\n\t\t\t\treturn this._createAfter( node, stickiness );\r\n\t\t\t} else if ( offset !== 0 && !offset ) {\r\n\t\t\t\t/**\r\n\t\t\t\t * {@link module:engine/model/model~Model#createPositionAt `Model#createPositionAt()`}\r\n\t\t\t\t * requires the offset to be specified when the first parameter is a model item.\r\n\t\t\t\t *\r\n\t\t\t\t * @error model-createPositionAt-offset-required\r\n\t\t\t\t */\r\n\t\t\t\tthrow new CKEditorError(\r\n\t\t\t\t\t'model-createPositionAt-offset-required: ' +\r\n\t\t\t\t\t'Model#createPositionAt() requires the offset when the first parameter is a model item.',\r\n\t\t\t\t\t[ this, itemOrPosition ]\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tif ( !node.is( 'element' ) && !node.is( 'documentFragment' ) ) {\r\n\t\t\t\t/**\r\n\t\t\t\t * Position parent have to be a model element or model document fragment.\r\n\t\t\t\t *\r\n\t\t\t\t * @error model-position-parent-incorrect\r\n\t\t\t\t */\r\n\t\t\t\tthrow new CKEditorError(\r\n\t\t\t\t\t'model-position-parent-incorrect: Position parent have to be a element or document fragment.',\r\n\t\t\t\t\t[ this, itemOrPosition ]\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tconst path = node.getPath();\r\n\r\n\t\t\tpath.push( offset );\r\n\r\n\t\t\treturn new this( node.root, path, stickiness );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new position, after given {@link module:engine/model/item~Item model item}.\r\n\t *\r\n\t * @param {module:engine/model/item~Item} item Item after which the position should be placed.\r\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness.\r\n\t * @returns {module:engine/model/position~Position}\r\n\t * @protected\r\n\t */\r\n\tstatic _createAfter( item, stickiness ) {\r\n\t\tif ( !item.parent ) {\r\n\t\t\t/**\r\n\t\t\t * You can not make a position after a root element.\r\n\t\t\t *\r\n\t\t\t * @error model-position-after-root\r\n\t\t\t * @param {module:engine/model/item~Item} root\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'model-position-after-root: You cannot make a position after root.',\r\n\t\t\t\t[ this, item ],\r\n\t\t\t\t{ root: item }\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn this._createAt( item.parent, item.endOffset, stickiness );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new position, before the given {@link module:engine/model/item~Item model item}.\r\n\t *\r\n\t * @param {module:engine/model/item~Item} item Item before which the position should be placed.\r\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness.\r\n\t * @returns {module:engine/model/position~Position}\r\n\t * @protected\r\n\t */\r\n\tstatic _createBefore( item, stickiness ) {\r\n\t\tif ( !item.parent ) {\r\n\t\t\t/**\r\n\t\t\t * You can not make a position before a root element.\r\n\t\t\t *\r\n\t\t\t * @error model-position-before-root\r\n\t\t\t * @param {module:engine/model/item~Item} root\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'model-position-before-root: You cannot make a position before root.',\r\n\t\t\t\titem,\r\n\t\t\t\t{ root: item }\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn this._createAt( item.parent, item.startOffset, stickiness );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a `Position` instance from given plain object (i.e. parsed JSON string).\r\n\t *\r\n\t * @param {Object} json Plain object to be converted to `Position`.\r\n\t * @param {module:engine/model/document~Document} doc Document object that will be position owner.\r\n\t * @returns {module:engine/model/position~Position} `Position` instance created using given plain object.\r\n\t */\r\n\tstatic fromJSON( json, doc ) {\r\n\t\tif ( json.root === '$graveyard' ) {\r\n\t\t\tconst pos = new Position( doc.graveyard, json.path );\r\n\t\t\tpos.stickiness = json.stickiness;\r\n\r\n\t\t\treturn pos;\r\n\t\t}\r\n\r\n\t\tif ( !doc.getRoot( json.root ) ) {\r\n\t\t\t/**\r\n\t\t\t * Cannot create position for document. Root with specified name does not exist.\r\n\t\t\t *\r\n\t\t\t * @error model-position-fromjson-no-root\r\n\t\t\t * @param {String} rootName\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'model-position-fromjson-no-root: Cannot create position for document. Root with specified name does not exist.',\r\n\t\t\t\tdoc,\r\n\t\t\t\t{ rootName: json.root }\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn new Position( doc.getRoot( json.root ), json.path, json.stickiness );\r\n\t}\r\n\r\n\t// @if CK_DEBUG_ENGINE // toString() {\r\n\t// @if CK_DEBUG_ENGINE // \treturn `${ this.root } [ ${ this.path.join( ', ' ) } ]`;\r\n\t// @if CK_DEBUG_ENGINE // }\r\n\r\n\t// @if CK_DEBUG_ENGINE // log() {\r\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ModelPosition: ' + this );\r\n\t// @if CK_DEBUG_ENGINE // }\r\n}\r\n\r\n/**\r\n * A flag indicating whether this position is `'before'` or `'after'` or `'same'` as given position.\r\n * If positions are in different roots `'different'` flag is returned.\r\n *\r\n * @typedef {String} module:engine/model/position~PositionRelation\r\n */\r\n\r\n/**\r\n * Represents how position is \"sticking\" with neighbour nodes. Used to define how position should be transformed (moved)\r\n * in edge cases. Possible values: `'toNone'`, `'toNext'`, `'toPrevious'`.\r\n *\r\n * Examples:\r\n *\r\n *\t\tInsert. Position is at | and nodes are inserted at the same position, marked as ^:\r\n *\r\n *\t\t- sticks to none:           <p>f^|oo</p>  ->  <p>fbar|oo</p>\r\n *\t\t- sticks to next node:      <p>f^|oo</p>  ->  <p>fbar|oo</p>\r\n *\t\t- sticks to previous node:  <p>f|^oo</p>  ->  <p>f|baroo</p>\r\n *\r\n *\r\n *\t\tMove. Position is at | and range [oo] is moved to position ^:\r\n *\r\n *\t\t- sticks to none:           <p>f|[oo]</p><p>b^ar</p>  ->  <p>f|</p><p>booar</p>\r\n *\t\t- sticks to none:           <p>f[oo]|</p><p>b^ar</p>  ->  <p>f|</p><p>booar</p>\r\n *\r\n *\t\t- sticks to next node:      <p>f|[oo]</p><p>b^ar</p>  ->  <p>f</p><p>b|ooar</p>\r\n *\t\t- sticks to next node:      <p>f[oo]|</p><p>b^ar</p>  ->  <p>f|</p><p>booar</p>\r\n *\r\n *\t\t- sticks to previous node:  <p>f|[oo]</p><p>b^ar</p>  ->  <p>f|</p><p>booar</p>\r\n *\t\t- sticks to previous node:  <p>f[oo]|</p><p>b^ar</p>  ->  <p>f</p><p>boo|ar</p>\r\n *\r\n * @typedef {String} module:engine/model/position~PositionStickiness\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/range\r\n */\r\n\r\nimport Position from './position';\r\nimport TreeWalker from './treewalker';\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\r\n\r\n/**\r\n * Represents a range in the model tree.\r\n *\r\n * A range is defined by its {@link module:engine/model/range~Range#start} and {@link module:engine/model/range~Range#end}\r\n * positions.\r\n *\r\n * You can create range instances via its constructor or the `createRange*()` factory methods of\r\n * {@link module:engine/model/model~Model} and {@link module:engine/model/writer~Writer}.\r\n */\r\nexport default class Range {\r\n\t/**\r\n\t * Creates a range spanning from `start` position to `end` position.\r\n\t *\r\n\t * @param {module:engine/model/position~Position} start Start position.\r\n\t * @param {module:engine/model/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\r\n\t */\r\n\tconstructor( start, end = null ) {\r\n\t\t/**\r\n\t\t * Start position.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/model/position~Position}\r\n\t\t */\r\n\t\tthis.start = Position._createAt( start );\r\n\r\n\t\t/**\r\n\t\t * End position.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/model/position~Position}\r\n\t\t */\r\n\t\tthis.end = end ? Position._createAt( end ) : Position._createAt( start );\r\n\r\n\t\t// If the range is collapsed, treat in a similar way as a position and set its boundaries stickiness to 'toNone'.\r\n\t\t// In other case, make the boundaries stick to the \"inside\" of the range.\r\n\t\tthis.start.stickiness = this.isCollapsed ? 'toNone' : 'toNext';\r\n\t\tthis.end.stickiness = this.isCollapsed ? 'toNone' : 'toPrevious';\r\n\t}\r\n\r\n\t/**\r\n\t * Iterable interface.\r\n\t *\r\n\t * Iterates over all {@link module:engine/model/item~Item items} that are in this range and returns\r\n\t * them together with additional information like length or {@link module:engine/model/position~Position positions},\r\n\t * grouped as {@link module:engine/model/treewalker~TreeWalkerValue}.\r\n\t * It iterates over all {@link module:engine/model/textproxy~TextProxy text contents} that are inside the range\r\n\t * and all the {@link module:engine/model/element~Element}s that are entered into when iterating over this range.\r\n\t *\r\n\t * This iterator uses {@link module:engine/model/treewalker~TreeWalker} with `boundaries` set to this range\r\n\t * and `ignoreElementEnd` option set to `true`.\r\n\t *\r\n\t * @returns {Iterable.<module:engine/model/treewalker~TreeWalkerValue>}\r\n\t */\r\n\t* [ Symbol.iterator ]() {\r\n\t\tyield* new TreeWalker( { boundaries: this, ignoreElementEnd: true } );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns whether the range is collapsed, that is if {@link #start} and\r\n\t * {@link #end} positions are equal.\r\n\t *\r\n\t * @type {Boolean}\r\n\t */\r\n\tget isCollapsed() {\r\n\t\treturn this.start.isEqual( this.end );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns whether this range is flat, that is if {@link #start} position and\r\n\t * {@link #end} position are in the same {@link module:engine/model/position~Position#parent}.\r\n\t *\r\n\t * @type {Boolean}\r\n\t */\r\n\tget isFlat() {\r\n\t\tconst startParentPath = this.start.getParentPath();\r\n\t\tconst endParentPath = this.end.getParentPath();\r\n\r\n\t\treturn compareArrays( startParentPath, endParentPath ) == 'same';\r\n\t}\r\n\r\n\t/**\r\n\t * Range root element.\r\n\t *\r\n\t * @type {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment}\r\n\t */\r\n\tget root() {\r\n\t\treturn this.start.root;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this range contains given {@link module:engine/model/position~Position position}.\r\n\t *\r\n\t * @param {module:engine/model/position~Position} position Position to check.\r\n\t * @returns {Boolean} `true` if given {@link module:engine/model/position~Position position} is contained\r\n\t * in this range,`false` otherwise.\r\n\t */\r\n\tcontainsPosition( position ) {\r\n\t\treturn position.isAfter( this.start ) && position.isBefore( this.end );\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this range contains given {@link ~Range range}.\r\n\t *\r\n\t * @param {module:engine/model/range~Range} otherRange Range to check.\r\n\t * @param {Boolean} [loose=false] Whether the check is loose or strict. If the check is strict (`false`), compared range cannot\r\n\t * start or end at the same position as this range boundaries. If the check is loose (`true`), compared range can start, end or\r\n\t * even be equal to this range. Note that collapsed ranges are always compared in strict mode.\r\n\t * @returns {Boolean} `true` if given {@link ~Range range} boundaries are contained by this range, `false` otherwise.\r\n\t */\r\n\tcontainsRange( otherRange, loose = false ) {\r\n\t\tif ( otherRange.isCollapsed ) {\r\n\t\t\tloose = false;\r\n\t\t}\r\n\r\n\t\tconst containsStart = this.containsPosition( otherRange.start ) || ( loose && this.start.isEqual( otherRange.start ) );\r\n\t\tconst containsEnd = this.containsPosition( otherRange.end ) || ( loose && this.end.isEqual( otherRange.end ) );\r\n\r\n\t\treturn containsStart && containsEnd;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether given {@link module:engine/model/item~Item} is inside this range.\r\n\t *\r\n\t * @param {module:engine/model/item~Item} item Model item to check.\r\n\t */\r\n\tcontainsItem( item ) {\r\n\t\tconst pos = Position._createBefore( item );\r\n\r\n\t\treturn this.containsPosition( pos ) || this.start.isEqual( pos );\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this object is of the given.\r\n\t *\r\n\t *\t\trange.is( 'range' ); // -> true\r\n\t *\t\trange.is( 'model:range' ); // -> true\r\n\t *\r\n\t *\t\trange.is( 'view:range' ); // -> false\r\n\t *\t\trange.is( 'documentSelection' ); // -> false\r\n\t *\r\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\r\n\t *\r\n\t * @param {String} type\r\n\t * @returns {Boolean}\r\n\t */\r\n\tis( type ) {\r\n\t\treturn type == 'range' || type == 'model:range';\r\n\t}\r\n\r\n\t/**\r\n\t * Two ranges are equal if their {@link #start} and {@link #end} positions are equal.\r\n\t *\r\n\t * @param {module:engine/model/range~Range} otherRange Range to compare with.\r\n\t * @returns {Boolean} `true` if ranges are equal, `false` otherwise.\r\n\t */\r\n\tisEqual( otherRange ) {\r\n\t\treturn this.start.isEqual( otherRange.start ) && this.end.isEqual( otherRange.end );\r\n\t}\r\n\r\n\t/**\r\n\t * Checks and returns whether this range intersects with given range.\r\n\t *\r\n\t * @param {module:engine/model/range~Range} otherRange Range to compare with.\r\n\t * @returns {Boolean} `true` if ranges intersect, `false` otherwise.\r\n\t */\r\n\tisIntersecting( otherRange ) {\r\n\t\treturn this.start.isBefore( otherRange.end ) && this.end.isAfter( otherRange.start );\r\n\t}\r\n\r\n\t/**\r\n\t * Computes which part(s) of this {@link ~Range range} is not a part of given {@link ~Range range}.\r\n\t * Returned array contains zero, one or two {@link ~Range ranges}.\r\n\t *\r\n\t * Examples:\r\n\t *\r\n\t *\t\tlet range = model.createRange(\r\n\t *\t\t\tmodel.createPositionFromPath( root, [ 2, 7 ] ),\r\n\t *\t\t\tmodel.createPositionFromPath( root, [ 4, 0, 1 ] )\r\n\t *\t\t);\r\n\t *\t\tlet otherRange = model.createRange( model.createPositionFromPath( root, [ 1 ] ), model.createPositionFromPath( root, [ 5 ] ) );\r\n\t *\t\tlet transformed = range.getDifference( otherRange );\r\n\t *\t\t// transformed array has no ranges because `otherRange` contains `range`\r\n\t *\r\n\t *\t\totherRange = model.createRange( model.createPositionFromPath( root, [ 1 ] ), model.createPositionFromPath( root, [ 3 ] ) );\r\n\t *\t\ttransformed = range.getDifference( otherRange );\r\n\t *\t\t// transformed array has one range: from [ 3 ] to [ 4, 0, 1 ]\r\n\t *\r\n\t *\t\totherRange = model.createRange( model.createPositionFromPath( root, [ 3 ] ), model.createPositionFromPath( root, [ 4 ] ) );\r\n\t *\t\ttransformed = range.getDifference( otherRange );\r\n\t *\t\t// transformed array has two ranges: from [ 2, 7 ] to [ 3 ] and from [ 4 ] to [ 4, 0, 1 ]\r\n\t *\r\n\t * @param {module:engine/model/range~Range} otherRange Range to differentiate against.\r\n\t * @returns {Array.<module:engine/model/range~Range>} The difference between ranges.\r\n\t */\r\n\tgetDifference( otherRange ) {\r\n\t\tconst ranges = [];\r\n\r\n\t\tif ( this.isIntersecting( otherRange ) ) {\r\n\t\t\t// Ranges intersect.\r\n\r\n\t\t\tif ( this.containsPosition( otherRange.start ) ) {\r\n\t\t\t\t// Given range start is inside this range. This means that we have to\r\n\t\t\t\t// add shrunken range - from the start to the middle of this range.\r\n\t\t\t\tranges.push( new Range( this.start, otherRange.start ) );\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.containsPosition( otherRange.end ) ) {\r\n\t\t\t\t// Given range end is inside this range. This means that we have to\r\n\t\t\t\t// add shrunken range - from the middle of this range to the end.\r\n\t\t\t\tranges.push( new Range( otherRange.end, this.end ) );\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Ranges do not intersect, return the original range.\r\n\t\t\tranges.push( new Range( this.start, this.end ) );\r\n\t\t}\r\n\r\n\t\treturn ranges;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an intersection of this {@link ~Range range} and given {@link ~Range range}.\r\n\t * Intersection is a common part of both of those ranges. If ranges has no common part, returns `null`.\r\n\t *\r\n\t * Examples:\r\n\t *\r\n\t *\t\tlet range = model.createRange(\r\n\t *\t\t\tmodel.createPositionFromPath( root, [ 2, 7 ] ),\r\n\t *\t\t\tmodel.createPositionFromPath( root, [ 4, 0, 1 ] )\r\n\t *\t\t);\r\n\t *\t\tlet otherRange = model.createRange( model.createPositionFromPath( root, [ 1 ] ), model.createPositionFromPath( root, [ 2 ] ) );\r\n\t *\t\tlet transformed = range.getIntersection( otherRange ); // null - ranges have no common part\r\n\t *\r\n\t *\t\totherRange = model.createRange( model.createPositionFromPath( root, [ 3 ] ), model.createPositionFromPath( root, [ 5 ] ) );\r\n\t *\t\ttransformed = range.getIntersection( otherRange ); // range from [ 3 ] to [ 4, 0, 1 ]\r\n\t *\r\n\t * @param {module:engine/model/range~Range} otherRange Range to check for intersection.\r\n\t * @returns {module:engine/model/range~Range|null} A common part of given ranges or `null` if ranges have no common part.\r\n\t */\r\n\tgetIntersection( otherRange ) {\r\n\t\tif ( this.isIntersecting( otherRange ) ) {\r\n\t\t\t// Ranges intersect, so a common range will be returned.\r\n\t\t\t// At most, it will be same as this range.\r\n\t\t\tlet commonRangeStart = this.start;\r\n\t\t\tlet commonRangeEnd = this.end;\r\n\r\n\t\t\tif ( this.containsPosition( otherRange.start ) ) {\r\n\t\t\t\t// Given range start is inside this range. This means thaNt we have to\r\n\t\t\t\t// shrink common range to the given range start.\r\n\t\t\t\tcommonRangeStart = otherRange.start;\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.containsPosition( otherRange.end ) ) {\r\n\t\t\t\t// Given range end is inside this range. This means that we have to\r\n\t\t\t\t// shrink common range to the given range end.\r\n\t\t\t\tcommonRangeEnd = otherRange.end;\r\n\t\t\t}\r\n\r\n\t\t\treturn new Range( commonRangeStart, commonRangeEnd );\r\n\t\t}\r\n\r\n\t\t// Ranges do not intersect, so they do not have common part.\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Computes and returns the smallest set of {@link #isFlat flat} ranges, that covers this range in whole.\r\n\t *\r\n\t * See an example of a model structure (`[` and `]` are range boundaries):\r\n\t *\r\n\t *\t\troot                                                            root\r\n\t *\t\t |- element DIV                         DIV             P2              P3             DIV\r\n\t *\t\t |   |- element H                   H        P1        f o o           b a r       H         P4\r\n\t *\t\t |   |   |- \"fir[st\"             fir[st     lorem                               se]cond     ipsum\r\n\t *\t\t |   |- element P1\r\n\t *\t\t |   |   |- \"lorem\"                                              ||\r\n\t *\t\t |- element P2                                                   ||\r\n\t *\t\t |   |- \"foo\"                                                    VV\r\n\t *\t\t |- element P3\r\n\t *\t\t |   |- \"bar\"                                                   root\r\n\t *\t\t |- element DIV                         DIV             [P2             P3]             DIV\r\n\t *\t\t |   |- element H                   H       [P1]       f o o           b a r        H         P4\r\n\t *\t\t |   |   |- \"se]cond\"            fir[st]    lorem                               [se]cond     ipsum\r\n\t *\t\t |   |- element P4\r\n\t *\t\t |   |   |- \"ipsum\"\r\n\t *\r\n\t * As it can be seen, letters contained in the range are: `stloremfoobarse`, spread across different parents.\r\n\t * We are looking for minimal set of flat ranges that contains the same nodes.\r\n\t *\r\n\t * Minimal flat ranges for above range `( [ 0, 0, 3 ], [ 3, 0, 2 ] )` will be:\r\n\t *\r\n\t *\t\t( [ 0, 0, 3 ], [ 0, 0, 5 ] ) = \"st\"\r\n\t *\t\t( [ 0, 1 ], [ 0, 2 ] ) = element P1 (\"lorem\")\r\n\t *\t\t( [ 1 ], [ 3 ] ) = element P2, element P3 (\"foobar\")\r\n\t *\t\t( [ 3, 0, 0 ], [ 3, 0, 2 ] ) = \"se\"\r\n\t *\r\n\t * **Note:** if an {@link module:engine/model/element~Element element} is not wholly contained in this range, it won't be returned\r\n\t * in any of the returned flat ranges. See in the example how `H` elements at the beginning and at the end of the range\r\n\t * were omitted. Only their parts that were wholly in the range were returned.\r\n\t *\r\n\t * **Note:** this method is not returning flat ranges that contain no nodes.\r\n\t *\r\n\t * @returns {Array.<module:engine/model/range~Range>} Array of flat ranges covering this range.\r\n\t */\r\n\tgetMinimalFlatRanges() {\r\n\t\tconst ranges = [];\r\n\t\tconst diffAt = this.start.getCommonPath( this.end ).length;\r\n\r\n\t\tconst pos = Position._createAt( this.start );\r\n\t\tlet posParent = pos.parent;\r\n\r\n\t\t// Go up.\r\n\t\twhile ( pos.path.length > diffAt + 1 ) {\r\n\t\t\tconst howMany = posParent.maxOffset - pos.offset;\r\n\r\n\t\t\tif ( howMany !== 0 ) {\r\n\t\t\t\tranges.push( new Range( pos, pos.getShiftedBy( howMany ) ) );\r\n\t\t\t}\r\n\r\n\t\t\tpos.path = pos.path.slice( 0, -1 );\r\n\t\t\tpos.offset++;\r\n\t\t\tposParent = posParent.parent;\r\n\t\t}\r\n\r\n\t\t// Go down.\r\n\t\twhile ( pos.path.length <= this.end.path.length ) {\r\n\t\t\tconst offset = this.end.path[ pos.path.length - 1 ];\r\n\t\t\tconst howMany = offset - pos.offset;\r\n\r\n\t\t\tif ( howMany !== 0 ) {\r\n\t\t\t\tranges.push( new Range( pos, pos.getShiftedBy( howMany ) ) );\r\n\t\t\t}\r\n\r\n\t\t\tpos.offset = offset;\r\n\t\t\tpos.path.push( 0 );\r\n\t\t}\r\n\r\n\t\treturn ranges;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a {@link module:engine/model/treewalker~TreeWalker TreeWalker} instance with this range as a boundary.\r\n\t *\r\n\t * For example, to iterate over all items in the entire document root:\r\n\t *\r\n\t *\t\t// Create a range spanning over the entire root content:\r\n\t *\t\tconst range = editor.model.createRangeIn( editor.model.document.getRoot() );\r\n\t *\r\n\t *\t\t// Iterate over all items in this range:\r\n\t *\t\tfor ( const value of range.getWalker() ) {\r\n\t *\t\t\tconsole.log( value.item );\r\n\t *\t\t}\r\n\t *\r\n\t * @param {Object} options Object with configuration options. See {@link module:engine/model/treewalker~TreeWalker}.\r\n\t * @param {module:engine/model/position~Position} [options.startPosition]\r\n\t * @param {Boolean} [options.singleCharacters=false]\r\n\t * @param {Boolean} [options.shallow=false]\r\n\t * @param {Boolean} [options.ignoreElementEnd=false]\r\n\t */\r\n\tgetWalker( options = {} ) {\r\n\t\toptions.boundaries = this;\r\n\r\n\t\treturn new TreeWalker( options );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an iterator that iterates over all {@link module:engine/model/item~Item items} that are in this range and returns\r\n\t * them.\r\n\t *\r\n\t * This method uses {@link module:engine/model/treewalker~TreeWalker} with `boundaries` set to this range and `ignoreElementEnd` option\r\n\t * set to `true`. However it returns only {@link module:engine/model/item~Item model items},\r\n\t * not {@link module:engine/model/treewalker~TreeWalkerValue}.\r\n\t *\r\n\t * You may specify additional options for the tree walker. See {@link module:engine/model/treewalker~TreeWalker} for\r\n\t * a full list of available options.\r\n\t *\r\n\t * @param {Object} options Object with configuration options. See {@link module:engine/model/treewalker~TreeWalker}.\r\n\t * @returns {Iterable.<module:engine/model/item~Item>}\r\n\t */\r\n\t* getItems( options = {} ) {\r\n\t\toptions.boundaries = this;\r\n\t\toptions.ignoreElementEnd = true;\r\n\r\n\t\tconst treeWalker = new TreeWalker( options );\r\n\r\n\t\tfor ( const value of treeWalker ) {\r\n\t\t\tyield value.item;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an iterator that iterates over all {@link module:engine/model/position~Position positions} that are boundaries or\r\n\t * contained in this range.\r\n\t *\r\n\t * This method uses {@link module:engine/model/treewalker~TreeWalker} with `boundaries` set to this range. However it returns only\r\n\t * {@link module:engine/model/position~Position positions}, not {@link module:engine/model/treewalker~TreeWalkerValue}.\r\n\t *\r\n\t * You may specify additional options for the tree walker. See {@link module:engine/model/treewalker~TreeWalker} for\r\n\t * a full list of available options.\r\n\t *\r\n\t * @param {Object} options Object with configuration options. See {@link module:engine/model/treewalker~TreeWalker}.\r\n\t * @returns {Iterable.<module:engine/model/position~Position>}\r\n\t */\r\n\t* getPositions( options = {} ) {\r\n\t\toptions.boundaries = this;\r\n\r\n\t\tconst treeWalker = new TreeWalker( options );\r\n\r\n\t\tyield treeWalker.position;\r\n\r\n\t\tfor ( const value of treeWalker ) {\r\n\t\t\tyield value.nextPosition;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a range that is a result of transforming this range by given `operation`.\r\n\t *\r\n\t * **Note:** transformation may break one range into multiple ranges (for example, when a part of the range is\r\n\t * moved to a different part of document tree). For this reason, an array is returned by this method and it\r\n\t * may contain one or more `Range` instances.\r\n\t *\r\n\t * @param {module:engine/model/operation/operation~Operation} operation Operation to transform range by.\r\n\t * @returns {Array.<module:engine/model/range~Range>} Range which is the result of transformation.\r\n\t */\r\n\tgetTransformedByOperation( operation ) {\r\n\t\tswitch ( operation.type ) {\r\n\t\t\tcase 'insert':\r\n\t\t\t\treturn this._getTransformedByInsertOperation( operation );\r\n\t\t\tcase 'move':\r\n\t\t\tcase 'remove':\r\n\t\t\tcase 'reinsert':\r\n\t\t\t\treturn this._getTransformedByMoveOperation( operation );\r\n\t\t\tcase 'split':\r\n\t\t\t\treturn [ this._getTransformedBySplitOperation( operation ) ];\r\n\t\t\tcase 'merge':\r\n\t\t\t\treturn [ this._getTransformedByMergeOperation( operation ) ];\r\n\t\t}\r\n\r\n\t\treturn [ new Range( this.start, this.end ) ];\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a range that is a result of transforming this range by multiple `operations`.\r\n\t *\r\n\t * @see ~Range#getTransformedByOperation\r\n\t * @param {Iterable.<module:engine/model/operation/operation~Operation>} operations Operations to transform the range by.\r\n\t * @returns {Array.<module:engine/model/range~Range>} Range which is the result of transformation.\r\n\t */\r\n\tgetTransformedByOperations( operations ) {\r\n\t\tconst ranges = [ new Range( this.start, this.end ) ];\r\n\r\n\t\tfor ( const operation of operations ) {\r\n\t\t\tfor ( let i = 0; i < ranges.length; i++ ) {\r\n\t\t\t\tconst result = ranges[ i ].getTransformedByOperation( operation );\r\n\r\n\t\t\t\tranges.splice( i, 1, ...result );\r\n\t\t\t\ti += result.length - 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// It may happen that a range is split into two, and then the part of second \"piece\" is moved into first\r\n\t\t// \"piece\". In this case we will have incorrect third range, which should not be included in the result --\r\n\t\t// because it is already included in the first \"piece\". In this loop we are looking for all such ranges that\r\n\t\t// are inside other ranges and we simply remove them.\r\n\t\tfor ( let i = 0; i < ranges.length; i++ ) {\r\n\t\t\tconst range = ranges[ i ];\r\n\r\n\t\t\tfor ( let j = i + 1; j < ranges.length; j++ ) {\r\n\t\t\t\tconst next = ranges[ j ];\r\n\r\n\t\t\t\tif ( range.containsRange( next ) || next.containsRange( range ) || range.isEqual( next ) ) {\r\n\t\t\t\t\tranges.splice( j, 1 );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn ranges;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an {@link module:engine/model/element~Element} or {@link module:engine/model/documentfragment~DocumentFragment}\r\n\t * which is a common ancestor of the range's both ends (in which the entire range is contained).\r\n\t *\r\n\t * @returns {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\r\n\t */\r\n\tgetCommonAncestor() {\r\n\t\treturn this.start.getCommonAncestor( this.end );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an {@link module:engine/model/element~Element Element} contained by the range.\r\n\t * The element will be returned when it is the **only** node within the range and **fully–contained**\r\n\t * at the same time.\r\n\t *\r\n\t * @returns {module:engine/model/element~Element|null}\r\n\t */\r\n\tgetContainedElement() {\r\n\t\tif ( this.isCollapsed ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tconst nodeAfterStart = this.start.nodeAfter;\r\n\t\tconst nodeBeforeEnd = this.end.nodeBefore;\r\n\r\n\t\tif ( nodeAfterStart && nodeAfterStart.is( 'element' ) && nodeAfterStart === nodeBeforeEnd ) {\r\n\t\t\treturn nodeAfterStart;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `Range` to plain object and returns it.\r\n\t *\r\n\t * @returns {Object} `Node` converted to plain object.\r\n\t */\r\n\ttoJSON() {\r\n\t\treturn {\r\n\t\t\tstart: this.start.toJSON(),\r\n\t\t\tend: this.end.toJSON()\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new range that is equal to current range.\r\n\t *\r\n\t * @returns {module:engine/model/range~Range}\r\n\t */\r\n\tclone() {\r\n\t\treturn new this.constructor( this.start, this.end );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a result of transforming a copy of this range by insert operation.\r\n\t *\r\n\t * One or more ranges may be returned as a result of this transformation.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/model/operation/insertoperation~InsertOperation} operation\r\n\t * @returns {Array.<module:engine/model/range~Range>}\r\n\t */\r\n\t_getTransformedByInsertOperation( operation, spread = false ) {\r\n\t\treturn this._getTransformedByInsertion( operation.position, operation.howMany, spread );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a result of transforming a copy of this range by move operation.\r\n\t *\r\n\t * One or more ranges may be returned as a result of this transformation.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/model/operation/moveoperation~MoveOperation} operation\r\n\t * @returns {Array.<module:engine/model/range~Range>}\r\n\t */\r\n\t_getTransformedByMoveOperation( operation, spread = false ) {\r\n\t\tconst sourcePosition = operation.sourcePosition;\r\n\t\tconst howMany = operation.howMany;\r\n\t\tconst targetPosition = operation.targetPosition;\r\n\r\n\t\treturn this._getTransformedByMove( sourcePosition, targetPosition, howMany, spread );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a result of transforming a copy of this range by split operation.\r\n\t *\r\n\t * Always one range is returned. The transformation is done in a way to not break the range.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/model/operation/splitoperation~SplitOperation} operation\r\n\t * @returns {module:engine/model/range~Range}\r\n\t */\r\n\t_getTransformedBySplitOperation( operation ) {\r\n\t\tconst start = this.start._getTransformedBySplitOperation( operation );\r\n\t\tlet end = this.end._getTransformedBySplitOperation( operation );\r\n\r\n\t\tif ( this.end.isEqual( operation.insertionPosition ) ) {\r\n\t\t\tend = this.end.getShiftedBy( 1 );\r\n\t\t}\r\n\r\n\t\t// Below may happen when range contains graveyard element used by split operation.\r\n\t\tif ( start.root != end.root ) {\r\n\t\t\t// End position was next to the moved graveyard element and was moved with it.\r\n\t\t\t// Fix it by using old `end` which has proper `root`.\r\n\t\t\tend = this.end.getShiftedBy( -1 );\r\n\t\t}\r\n\r\n\t\treturn new Range( start, end );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a result of transforming a copy of this range by merge operation.\r\n\t *\r\n\t * Always one range is returned. The transformation is done in a way to not break the range.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/model/operation/mergeoperation~MergeOperation} operation\r\n\t * @returns {module:engine/model/range~Range}\r\n\t */\r\n\t_getTransformedByMergeOperation( operation ) {\r\n\t\t// Special case when the marker is set on \"the closing tag\" of an element. Marker can be set like that during\r\n\t\t// transformations, especially when a content of a few block elements were removed. For example:\r\n\t\t//\r\n\t\t// {} is the transformed range, [] is the removed range.\r\n\t\t// <p>F[o{o</p><p>B}ar</p><p>Xy]z</p>\r\n\t\t//\r\n\t\t// <p>Fo{o</p><p>B}ar</p><p>z</p>\r\n\t\t// <p>F{</p><p>B}ar</p><p>z</p>\r\n\t\t// <p>F{</p>}<p>z</p>\r\n\t\t// <p>F{}z</p>\r\n\t\t//\r\n\t\tif ( this.start.isEqual( operation.targetPosition ) && this.end.isEqual( operation.deletionPosition ) ) {\r\n\t\t\treturn new Range( this.start );\r\n\t\t}\r\n\r\n\t\tlet start = this.start._getTransformedByMergeOperation( operation );\r\n\t\tlet end = this.end._getTransformedByMergeOperation( operation );\r\n\r\n\t\tif ( start.root != end.root ) {\r\n\t\t\t// This happens when the end position was next to the merged (deleted) element.\r\n\t\t\t// Then, the end position was moved to the graveyard root. In this case we need to fix\r\n\t\t\t// the range cause its boundaries would be in different roots.\r\n\t\t\tend = this.end.getShiftedBy( -1 );\r\n\t\t}\r\n\r\n\t\tif ( start.isAfter( end ) ) {\r\n\t\t\t// This happens in three following cases:\r\n\t\t\t//\r\n\t\t\t// Case 1: Merge operation source position is before the target position (due to some transformations, OT, etc.)\r\n\t\t\t//         This means that start can be moved before the end of the range.\r\n\t\t\t//\r\n\t\t\t// Before: <p>a{a</p><p>b}b</p><p>cc</p>\r\n\t\t\t// Merge:  <p>b}b</p><p>cca{a</p>\r\n\t\t\t// Fix:    <p>{b}b</p><p>ccaa</p>\r\n\t\t\t//\r\n\t\t\t// Case 2: Range start is before merged node but not directly.\r\n\t\t\t//         Result should include all nodes that were in the original range.\r\n\t\t\t//\r\n\t\t\t// Before: <p>aa</p>{<p>cc</p><p>b}b</p>\r\n\t\t\t// Merge:  <p>aab}b</p>{<p>cc</p>\r\n\t\t\t// Fix:    <p>aa{bb</p><p>cc</p>}\r\n\t\t\t//\r\n\t\t\t//         The range is expanded by an additional `b` letter but it is better than dropping the whole `cc` paragraph.\r\n\t\t\t//\r\n\t\t\t// Case 3: Range start is directly before merged node.\r\n\t\t\t//         Resulting range should include only nodes from the merged element:\r\n\t\t\t//\r\n\t\t\t// Before: <p>aa</p>{<p>b}b</p><p>cc</p>\r\n\t\t\t// Merge:  <p>aab}b</p>{<p>cc</p>\r\n\t\t\t// Fix:    <p>aa{b}b</p><p>cc</p>\r\n\t\t\t//\r\n\r\n\t\t\tif ( operation.sourcePosition.isBefore( operation.targetPosition ) ) {\r\n\t\t\t\t// Case 1.\r\n\t\t\t\tstart = Position._createAt( end );\r\n\t\t\t\tstart.offset = 0;\r\n\t\t\t} else {\r\n\t\t\t\tif ( !operation.deletionPosition.isEqual( start ) ) {\r\n\t\t\t\t\t// Case 2.\r\n\t\t\t\t\tend = operation.deletionPosition;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// In both case 2 and 3 start is at the end of the merge-to element.\r\n\t\t\t\tstart = operation.targetPosition;\r\n\t\t\t}\r\n\r\n\t\t\treturn new Range( start, end );\r\n\t\t}\r\n\r\n\t\treturn new Range( start, end );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array containing one or two {@link ~Range ranges} that are a result of transforming this\r\n\t * {@link ~Range range} by inserting `howMany` nodes at `insertPosition`. Two {@link ~Range ranges} are\r\n\t * returned if the insertion was inside this {@link ~Range range} and `spread` is set to `true`.\r\n\t *\r\n\t * Examples:\r\n\t *\r\n\t *\t\tlet range = model.createRange(\r\n\t *\t\t\tmodel.createPositionFromPath( root, [ 2, 7 ] ),\r\n\t *\t\t\tmodel.createPositionFromPath( root, [ 4, 0, 1 ] )\r\n\t *\t\t);\r\n\t *\t\tlet transformed = range._getTransformedByInsertion( model.createPositionFromPath( root, [ 1 ] ), 2 );\r\n\t *\t\t// transformed array has one range from [ 4, 7 ] to [ 6, 0, 1 ]\r\n\t *\r\n\t *\t\ttransformed = range._getTransformedByInsertion( model.createPositionFromPath( root, [ 4, 0, 0 ] ), 4 );\r\n\t *\t\t// transformed array has one range from [ 2, 7 ] to [ 4, 0, 5 ]\r\n\t *\r\n\t *\t\ttransformed = range._getTransformedByInsertion( model.createPositionFromPath( root, [ 3, 2 ] ), 4 );\r\n\t *\t\t// transformed array has one range, which is equal to original range\r\n\t *\r\n\t *\t\ttransformed = range._getTransformedByInsertion( model.createPositionFromPath( root, [ 3, 2 ] ), 4, true );\r\n\t *\t\t// transformed array has two ranges: from [ 2, 7 ] to [ 3, 2 ] and from [ 3, 6 ] to [ 4, 0, 1 ]\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/model/position~Position} insertPosition Position where nodes are inserted.\r\n\t * @param {Number} howMany How many nodes are inserted.\r\n\t * @param {Boolean} [spread] Flag indicating whether this {~Range range} should be spread if insertion\r\n\t * was inside the range. Defaults to `false`.\r\n\t * @returns {Array.<module:engine/model/range~Range>} Result of the transformation.\r\n\t */\r\n\t_getTransformedByInsertion( insertPosition, howMany, spread = false ) {\r\n\t\tif ( spread && this.containsPosition( insertPosition ) ) {\r\n\t\t\t// Range has to be spread. The first part is from original start to the spread point.\r\n\t\t\t// The other part is from spread point to the original end, but transformed by\r\n\t\t\t// insertion to reflect insertion changes.\r\n\r\n\t\t\treturn [\r\n\t\t\t\tnew Range( this.start, insertPosition ),\r\n\t\t\t\tnew Range(\r\n\t\t\t\t\tinsertPosition.getShiftedBy( howMany ),\r\n\t\t\t\t\tthis.end._getTransformedByInsertion( insertPosition, howMany )\r\n\t\t\t\t)\r\n\t\t\t];\r\n\t\t} else {\r\n\t\t\tconst range = new Range( this.start, this.end );\r\n\r\n\t\t\trange.start = range.start._getTransformedByInsertion( insertPosition, howMany );\r\n\t\t\trange.end = range.end._getTransformedByInsertion( insertPosition, howMany );\r\n\r\n\t\t\treturn [ range ];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array containing {@link ~Range ranges} that are a result of transforming this\r\n\t * {@link ~Range range} by moving `howMany` nodes from `sourcePosition` to `targetPosition`.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/model/position~Position} sourcePosition Position from which nodes are moved.\r\n\t * @param {module:engine/model/position~Position} targetPosition Position to where nodes are moved.\r\n\t * @param {Number} howMany How many nodes are moved.\r\n\t * @param {Boolean} [spread=false] Whether the range should be spread if the move points inside the range.\r\n\t * @returns {Array.<module:engine/model/range~Range>} Result of the transformation.\r\n\t */\r\n\t_getTransformedByMove( sourcePosition, targetPosition, howMany, spread = false ) {\r\n\t\t// Special case for transforming a collapsed range. Just transform it like a position.\r\n\t\tif ( this.isCollapsed ) {\r\n\t\t\tconst newPos = this.start._getTransformedByMove( sourcePosition, targetPosition, howMany );\r\n\r\n\t\t\treturn [ new Range( newPos ) ];\r\n\t\t}\r\n\r\n\t\t// Special case for transformation when a part of the range is moved towards the range.\r\n\t\t//\r\n\t\t// Examples:\r\n\t\t//\r\n\t\t// <div><p>ab</p><p>c[d</p></div><p>e]f</p> --> <div><p>ab</p></div><p>c[d</p><p>e]f</p>\r\n\t\t// <p>e[f</p><div><p>a]b</p><p>cd</p></div> --> <p>e[f</p><p>a]b</p><div><p>cd</p></div>\r\n\t\t//\r\n\t\t// Without this special condition, the default algorithm leaves an \"artifact\" range from one of `differenceSet` parts:\r\n\t\t//\r\n\t\t// <div><p>ab</p><p>c[d</p></div><p>e]f</p> --> <div><p>ab</p>{</div>}<p>c[d</p><p>e]f</p>\r\n\t\t//\r\n\t\t// This special case is applied only if the range is to be kept together (not spread).\r\n\t\tconst moveRange = Range._createFromPositionAndShift( sourcePosition, howMany );\r\n\t\tconst insertPosition = targetPosition._getTransformedByDeletion( sourcePosition, howMany );\r\n\r\n\t\tif ( this.containsPosition( targetPosition ) && !spread ) {\r\n\t\t\tif ( moveRange.containsPosition( this.start ) || moveRange.containsPosition( this.end ) ) {\r\n\t\t\t\tconst start = this.start._getTransformedByMove( sourcePosition, targetPosition, howMany );\r\n\t\t\t\tconst end = this.end._getTransformedByMove( sourcePosition, targetPosition, howMany );\r\n\r\n\t\t\t\treturn [ new Range( start, end ) ];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Default algorithm.\r\n\t\tlet result;\r\n\r\n\t\tconst differenceSet = this.getDifference( moveRange );\r\n\t\tlet difference = null;\r\n\r\n\t\tconst common = this.getIntersection( moveRange );\r\n\r\n\t\tif ( differenceSet.length == 1 ) {\r\n\t\t\t// `moveRange` and this range may intersect but may be separate.\r\n\t\t\tdifference = new Range(\r\n\t\t\t\tdifferenceSet[ 0 ].start._getTransformedByDeletion( sourcePosition, howMany ),\r\n\t\t\t\tdifferenceSet[ 0 ].end._getTransformedByDeletion( sourcePosition, howMany )\r\n\t\t\t);\r\n\t\t} else if ( differenceSet.length == 2 ) {\r\n\t\t\t// `moveRange` is inside this range.\r\n\t\t\tdifference = new Range(\r\n\t\t\t\tthis.start,\r\n\t\t\t\tthis.end._getTransformedByDeletion( sourcePosition, howMany )\r\n\t\t\t);\r\n\t\t} // else, `moveRange` contains this range.\r\n\r\n\t\tif ( difference ) {\r\n\t\t\tresult = difference._getTransformedByInsertion( insertPosition, howMany, common !== null || spread );\r\n\t\t} else {\r\n\t\t\tresult = [];\r\n\t\t}\r\n\r\n\t\tif ( common ) {\r\n\t\t\tconst transformedCommon = new Range(\r\n\t\t\t\tcommon.start._getCombined( moveRange.start, insertPosition ),\r\n\t\t\t\tcommon.end._getCombined( moveRange.start, insertPosition )\r\n\t\t\t);\r\n\r\n\t\t\tif ( result.length == 2 ) {\r\n\t\t\t\tresult.splice( 1, 0, transformedCommon );\r\n\t\t\t} else {\r\n\t\t\t\tresult.push( transformedCommon );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a copy of this range that is transformed by deletion of `howMany` nodes from `deletePosition`.\r\n\t *\r\n\t * If the deleted range is intersecting with the transformed range, the transformed range will be shrank.\r\n\t *\r\n\t * If the deleted range contains transformed range, `null` will be returned.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/model/position~Position} deletionPosition Position from which nodes are removed.\r\n\t * @param {Number} howMany How many nodes are removed.\r\n\t * @returns {module:engine/model/range~Range|null} Result of the transformation.\r\n\t */\r\n\t_getTransformedByDeletion( deletePosition, howMany ) {\r\n\t\tlet newStart = this.start._getTransformedByDeletion( deletePosition, howMany );\r\n\t\tlet newEnd = this.end._getTransformedByDeletion( deletePosition, howMany );\r\n\r\n\t\tif ( newStart == null && newEnd == null ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tif ( newStart == null ) {\r\n\t\t\tnewStart = deletePosition;\r\n\t\t}\r\n\r\n\t\tif ( newEnd == null ) {\r\n\t\t\tnewEnd = deletePosition;\r\n\t\t}\r\n\r\n\t\treturn new Range( newStart, newEnd );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new range, spreading from specified {@link module:engine/model/position~Position position} to a position moved by\r\n\t * given `shift`. If `shift` is a negative value, shifted position is treated as the beginning of the range.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/model/position~Position} position Beginning of the range.\r\n\t * @param {Number} shift How long the range should be.\r\n\t * @returns {module:engine/model/range~Range}\r\n\t */\r\n\tstatic _createFromPositionAndShift( position, shift ) {\r\n\t\tconst start = position;\r\n\t\tconst end = position.getShiftedBy( shift );\r\n\r\n\t\treturn shift > 0 ? new this( start, end ) : new this( end, start );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a range inside an {@link module:engine/model/element~Element element} which starts before the first child of\r\n\t * that element and ends after the last child of that element.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/model/element~Element} element Element which is a parent for the range.\r\n\t * @returns {module:engine/model/range~Range}\r\n\t */\r\n\tstatic _createIn( element ) {\r\n\t\treturn new this( Position._createAt( element, 0 ), Position._createAt( element, element.maxOffset ) );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a range that starts before given {@link module:engine/model/item~Item model item} and ends after it.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/model/item~Item} item\r\n\t * @returns {module:engine/model/range~Range}\r\n\t */\r\n\tstatic _createOn( item ) {\r\n\t\treturn this._createFromPositionAndShift( Position._createBefore( item ), item.offsetSize );\r\n\t}\r\n\r\n\t/**\r\n\t * Combines all ranges from the passed array into a one range. At least one range has to be passed.\r\n\t * Passed ranges must not have common parts.\r\n\t *\r\n\t * The first range from the array is a reference range. If other ranges start or end on the exactly same position where\r\n\t * the reference range, they get combined into one range.\r\n\t *\r\n\t *\t\t[  ][]  [    ][ ][             ][ ][]  [  ]  // Passed ranges, shown sorted\r\n\t *\t\t[    ]                                       // The result of the function if the first range was a reference range.\r\n\t *\t            [                           ]        // The result of the function if the third-to-seventh range was a reference range.\r\n\t *\t                                           [  ]  // The result of the function if the last range was a reference range.\r\n\t *\r\n\t * @param {Array.<module:engine/model/range~Range>} ranges Ranges to combine.\r\n\t * @returns {module:engine/model/range~Range} Combined range.\r\n\t */\r\n\tstatic _createFromRanges( ranges ) {\r\n\t\tif ( ranges.length === 0 ) {\r\n\t\t\t/**\r\n\t\t\t * At least one range has to be passed to\r\n\t\t\t * {@link module:engine/model/range~Range._createFromRanges `Range._createFromRanges()`}.\r\n\t\t\t *\r\n\t\t\t * @error range-create-from-ranges-empty-array\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'range-create-from-ranges-empty-array: At least one range has to be passed.',\r\n\t\t\t\tnull\r\n\t\t\t);\r\n\t\t} else if ( ranges.length == 1 ) {\r\n\t\t\treturn ranges[ 0 ].clone();\r\n\t\t}\r\n\r\n\t\t// 1. Set the first range in `ranges` array as a reference range.\r\n\t\t// If we are going to return just a one range, one of the ranges need to be the reference one.\r\n\t\t// Other ranges will be stuck to that range, if possible.\r\n\t\tconst ref = ranges[ 0 ];\r\n\r\n\t\t// 2. Sort all the ranges so it's easier to process them.\r\n\t\tranges.sort( ( a, b ) => {\r\n\t\t\treturn a.start.isAfter( b.start ) ? 1 : -1;\r\n\t\t} );\r\n\r\n\t\t// 3. Check at which index the reference range is now.\r\n\t\tconst refIndex = ranges.indexOf( ref );\r\n\r\n\t\t// 4. At this moment we don't need the original range.\r\n\t\t// We are going to modify the result and we need to return a new instance of Range.\r\n\t\t// We have to create a copy of the reference range.\r\n\t\tconst result = new this( ref.start, ref.end );\r\n\r\n\t\t// 5. Ranges should be checked and glued starting from the range that is closest to the reference range.\r\n\t\t// Since ranges are sorted, start with the range with index that is closest to reference range index.\r\n\t\tif ( refIndex > 0 ) {\r\n\t\t\tfor ( let i = refIndex - 1; true; i++ ) {\r\n\t\t\t\tif ( ranges[ i ].end.isEqual( result.start ) ) {\r\n\t\t\t\t\tresult.start = Position._createAt( ranges[ i ].start );\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// If ranges are not starting/ending at the same position there is no point in looking further.\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 6. Ranges should be checked and glued starting from the range that is closest to the reference range.\r\n\t\t// Since ranges are sorted, start with the range with index that is closest to reference range index.\r\n\t\tfor ( let i = refIndex + 1; i < ranges.length; i++ ) {\r\n\t\t\tif ( ranges[ i ].start.isEqual( result.end ) ) {\r\n\t\t\t\tresult.end = Position._createAt( ranges[ i ].end );\r\n\t\t\t} else {\r\n\t\t\t\t// If ranges are not starting/ending at the same position there is no point in looking further.\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a `Range` instance from given plain object (i.e. parsed JSON string).\r\n\t *\r\n\t * @param {Object} json Plain object to be converted to `Range`.\r\n\t * @param {module:engine/model/document~Document} doc Document object that will be range owner.\r\n\t * @returns {module:engine/model/element~Element} `Range` instance created using given plain object.\r\n\t */\r\n\tstatic fromJSON( json, doc ) {\r\n\t\treturn new this( Position.fromJSON( json.start, doc ), Position.fromJSON( json.end, doc ) );\r\n\t}\r\n\r\n\t// @if CK_DEBUG_ENGINE // toString() {\r\n\t// @if CK_DEBUG_ENGINE // \treturn `${ this.root } [ ${ this.start.path.join( ', ' ) } ] - [ ${ this.end.path.join( ', ' ) } ]`;\r\n\t// @if CK_DEBUG_ENGINE // }\r\n\r\n\t// @if CK_DEBUG_ENGINE // log() {\r\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ModelPosition: ' + this );\r\n\t// @if CK_DEBUG_ENGINE // }\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/rootelement\r\n */\r\n\r\nimport Element from './element';\r\n\r\n/**\r\n * Type of {@link module:engine/model/element~Element} that is a root of a model tree.\r\n * @extends module:engine/model/element~Element\r\n */\r\nexport default class RootElement extends Element {\r\n\t/**\r\n\t * Creates root element.\r\n\t *\r\n\t * @param {module:engine/model/document~Document} document Document that is an owner of this root.\r\n\t * @param {String} name Node name.\r\n\t * @param {String} [rootName='main'] Unique root name used to identify this root\r\n\t * element by {@link module:engine/model/document~Document}.\r\n\t */\r\n\tconstructor( document, name, rootName = 'main' ) {\r\n\t\tsuper( name );\r\n\r\n\t\t/**\r\n\t\t * Document that is an owner of this root.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {module:engine/model/document~Document}\r\n\t\t */\r\n\t\tthis._document = document;\r\n\r\n\t\t/**\r\n\t\t * Unique root name used to identify this root element by {@link module:engine/model/document~Document}.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {String}\r\n\t\t */\r\n\t\tthis.rootName = rootName;\r\n\t}\r\n\r\n\t/**\r\n\t * {@link module:engine/model/document~Document Document} that owns this root element.\r\n\t *\r\n\t * @readonly\r\n\t * @type {module:engine/model/document~Document|null}\r\n\t */\r\n\tget document() {\r\n\t\treturn this._document;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this object is of the given.\r\n\t *\r\n\t *\t\trootElement.is( 'rootElement' ); // -> true\r\n\t *\t\trootElement.is( 'element' ); // -> true\r\n\t *\t\trootElement.is( 'node' ); // -> true\r\n\t *\t\trootElement.is( 'model:rootElement' ); // -> true\r\n\t *\t\trootElement.is( 'model:element' ); // -> true\r\n\t *\t\trootElement.is( 'model:node' ); // -> true\r\n\t *\r\n\t *\t\trootElement.is( 'view:element' ); // -> false\r\n\t *\t\trootElement.is( 'documentFragment' ); // -> false\r\n\t *\r\n\t * Assuming that the object being checked is an element, you can also check its\r\n\t * {@link module:engine/model/element~Element#name name}:\r\n\t *\r\n\t *\t\trootElement.is( '$root' ); // -> true if this is a $root element\r\n\t *\t\trootElement.is( 'rootElement', '$root' ); // -> same as above\r\n\t *\t\ttext.is( '$root' ); -> false\r\n\t *\r\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\r\n\t *\r\n\t * @param {String} type Type to check when `name` parameter is present.\r\n\t * Otherwise, it acts like the `name` parameter.\r\n\t * @param {String} [name] Element name.\r\n\t * @returns {Boolean}\r\n\t */\r\n\tis( type, name ) {\r\n\t\tconst cutType = type.replace( 'model:', '' );\r\n\t\tif ( !name ) {\r\n\t\t\treturn cutType == 'rootElement' || super.is( type );\r\n\t\t} else {\r\n\t\t\treturn ( cutType == 'rootElement' && name == this.name ) || super.is( type, name );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `RootElement` instance to `String` containing it's name.\r\n\t *\r\n\t * @returns {String} `RootElement` instance converted to `String`.\r\n\t */\r\n\ttoJSON() {\r\n\t\treturn this.rootName;\r\n\t}\r\n\r\n\t// @if CK_DEBUG_ENGINE // toString() {\r\n\t// @if CK_DEBUG_ENGINE // \treturn this.rootName;\r\n\t// @if CK_DEBUG_ENGINE // }\r\n\r\n\t// @if CK_DEBUG_ENGINE // log() {\r\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ModelRootElement: ' + this );\r\n\t// @if CK_DEBUG_ENGINE // }\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/schema\r\n */\r\n\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\r\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\r\n\r\nimport Range from './range';\r\nimport Position from './position';\r\nimport Element from './element';\r\nimport Text from './text';\r\nimport TreeWalker from './treewalker';\r\n\r\n/**\r\n * The model's schema. It defines allowed and disallowed structures of nodes as well as nodes' attributes.\r\n * The schema is usually defined by features and based on them the editing framework and features\r\n * make decisions how to change and process the model.\r\n *\r\n * The instance of schema is available in {@link module:engine/model/model~Model#schema `editor.model.schema`}.\r\n *\r\n * Read more about the schema in:\r\n *\r\n * * {@glink framework/guides/architecture/editing-engine#schema \"Schema\"} section of the\r\n * {@glink framework/guides/architecture/editing-engine Introduction to the \"Editing engine architecture\"}.\r\n * * {@glink framework/guides/deep-dive/schema \"Schema\" deep dive} guide.\r\n *\r\n * @mixes module:utils/observablemixin~ObservableMixin\r\n */\r\nexport default class Schema {\r\n\t/**\r\n\t * Creates schema instance.\r\n\t */\r\n\tconstructor() {\r\n\t\tthis._sourceDefinitions = {};\r\n\r\n\t\t/**\r\n\t\t * A dictionary containing attribute properties.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Object.<String,String>}\r\n\t\t */\r\n\t\tthis._attributeProperties = {};\r\n\r\n\t\tthis.decorate( 'checkChild' );\r\n\t\tthis.decorate( 'checkAttribute' );\r\n\r\n\t\tthis.on( 'checkAttribute', ( evt, args ) => {\r\n\t\t\targs[ 0 ] = new SchemaContext( args[ 0 ] );\r\n\t\t}, { priority: 'highest' } );\r\n\r\n\t\tthis.on( 'checkChild', ( evt, args ) => {\r\n\t\t\targs[ 0 ] = new SchemaContext( args[ 0 ] );\r\n\t\t\targs[ 1 ] = this.getDefinition( args[ 1 ] );\r\n\t\t}, { priority: 'highest' } );\r\n\t}\r\n\r\n\t/**\r\n\t * Registers schema item. Can only be called once for every item name.\r\n\t *\r\n\t *\t\tschema.register( 'paragraph', {\r\n\t *\t\t\tinheritAllFrom: '$block'\r\n\t *\t\t} );\r\n\t *\r\n\t * @param {String} itemName\r\n\t * @param {module:engine/model/schema~SchemaItemDefinition} definition\r\n\t */\r\n\tregister( itemName, definition ) {\r\n\t\tif ( this._sourceDefinitions[ itemName ] ) {\r\n\t\t\t/**\r\n\t\t\t * A single item cannot be registered twice in the schema.\r\n\t\t\t *\r\n\t\t\t * This situation may happen when:\r\n\t\t\t *\r\n\t\t\t * * Two or more plugins called {@link #register `register()`} with the same name. This will usually mean that\r\n\t\t\t * there is a collision between plugins which try to use the same element in the model. Unfortunately,\r\n\t\t\t * the only way to solve this is by modifying one of these plugins to use a unique model element name.\r\n\t\t\t * * A single plugin was loaded twice. This happens when it is installed by npm/yarn in two versions\r\n\t\t\t * and usually means one or more of the following issues:\r\n\t\t\t *     * a version mismatch (two of your dependencies require two different versions of this plugin),\r\n\t\t\t *     * incorrect imports (this plugin is somehow imported twice in a way which confuses webpack),\r\n\t\t\t *     * mess in `node_modules/` (`rm -rf node_modules/` may help).\r\n\t\t\t *\r\n\t\t\t * **Note:** Check the logged `itemName` to better understand which plugin was duplicated/conflicting.\r\n\t\t\t *\r\n\t\t\t * @param itemName The name of the model element that is being registered twice.\r\n\t\t\t * @error schema-cannot-register-item-twice\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'schema-cannot-register-item-twice: A single item cannot be registered twice in the schema.',\r\n\t\t\t\tthis,\r\n\t\t\t\t{\r\n\t\t\t\t\titemName\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tthis._sourceDefinitions[ itemName ] = [\r\n\t\t\tObject.assign( {}, definition )\r\n\t\t];\r\n\r\n\t\tthis._clearCache();\r\n\t}\r\n\r\n\t/**\r\n\t * Extends a {@link #register registered} item's definition.\r\n\t *\r\n\t * Extending properties such as `allowIn` will add more items to the existing properties,\r\n\t * while redefining properties such as `isBlock` will override the previously defined ones.\r\n\t *\r\n\t *\t\tschema.register( 'foo', {\r\n\t *\t\t\tallowIn: '$root',\r\n\t *\t\t\tisBlock: true;\r\n\t *\t\t} );\r\n\t *\t\tschema.extend( 'foo', {\r\n\t *\t\t\tallowIn: 'blockQuote',\r\n\t *\t\t\tisBlock: false\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\tschema.getDefinition( 'foo' );\r\n\t *\t\t//\t{\r\n\t *\t\t//\t\tallowIn: [ '$root', 'blockQuote' ],\r\n\t *\t\t// \t\tisBlock: false\r\n\t *\t\t//\t}\r\n\t *\r\n\t * @param {String} itemName\r\n\t * @param {module:engine/model/schema~SchemaItemDefinition} definition\r\n\t */\r\n\textend( itemName, definition ) {\r\n\t\tif ( !this._sourceDefinitions[ itemName ] ) {\r\n\t\t\t/**\r\n\t\t\t * Cannot extend an item which was not registered yet.\r\n\t\t\t *\r\n\t\t\t * This error happens when a plugin tries to extend the schema definition of an item which was not\r\n\t\t\t * {@link #register registered} yet.\r\n\t\t\t *\r\n\t\t\t * @param itemName The name of the model element which is being extended.\r\n\t\t\t * @error schema-cannot-extend-missing-item\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'schema-cannot-extend-missing-item: Cannot extend an item which was not registered yet.', this, {\r\n\t\t\t\titemName\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tthis._sourceDefinitions[ itemName ].push( Object.assign( {}, definition ) );\r\n\r\n\t\tthis._clearCache();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all registered items.\r\n\t *\r\n\t * @returns {Object.<String,module:engine/model/schema~SchemaCompiledItemDefinition>}\r\n\t */\r\n\tgetDefinitions() {\r\n\t\tif ( !this._compiledDefinitions ) {\r\n\t\t\tthis._compile();\r\n\t\t}\r\n\r\n\t\treturn this._compiledDefinitions;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a definition of the given item or `undefined` if item is not registered.\r\n\t *\r\n\t * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\r\n\t * @returns {module:engine/model/schema~SchemaCompiledItemDefinition}\r\n\t */\r\n\tgetDefinition( item ) {\r\n\t\tlet itemName;\r\n\r\n\t\tif ( typeof item == 'string' ) {\r\n\t\t\titemName = item;\r\n\t\t} else if ( item.is && ( item.is( 'text' ) || item.is( 'textProxy' ) ) ) {\r\n\t\t\titemName = '$text';\r\n\t\t}\r\n\t\t// Element or module:engine/model/schema~SchemaContextItem.\r\n\t\telse {\r\n\t\t\titemName = item.name;\r\n\t\t}\r\n\r\n\t\treturn this.getDefinitions()[ itemName ];\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the given item is registered in the schema.\r\n\t *\r\n\t *\t\tschema.isRegistered( 'paragraph' ); // -> true\r\n\t *\t\tschema.isRegistered( editor.model.document.getRoot() ); // -> true\r\n\t *\t\tschema.isRegistered( 'foo' ); // -> false\r\n\t *\r\n\t * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\r\n\t */\r\n\tisRegistered( item ) {\r\n\t\treturn !!this.getDefinition( item );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the given item is defined to be\r\n\t * a block by {@link module:engine/model/schema~SchemaItemDefinition}'s `isBlock` property.\r\n\t *\r\n\t *\t\tschema.isBlock( 'paragraph' ); // -> true\r\n\t *\t\tschema.isBlock( '$root' ); // -> false\r\n\t *\r\n\t *\t\tconst paragraphElement = writer.createElement( 'paragraph' );\r\n\t *\t\tschema.isBlock( paragraphElement ); // -> true\r\n\t *\r\n\t * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\r\n\t */\r\n\tisBlock( item ) {\r\n\t\tconst def = this.getDefinition( item );\r\n\r\n\t\treturn !!( def && def.isBlock );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the given item is defined to be\r\n\t * a limit element by {@link module:engine/model/schema~SchemaItemDefinition}'s `isLimit` or `isObject` property\r\n\t * (all objects are also limits).\r\n\t *\r\n\t *\t\tschema.isLimit( 'paragraph' ); // -> false\r\n\t *\t\tschema.isLimit( '$root' ); // -> true\r\n\t *\t\tschema.isLimit( editor.model.document.getRoot() ); // -> true\r\n\t *\t\tschema.isLimit( 'image' ); // -> true\r\n\t *\r\n\t * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\r\n\t */\r\n\tisLimit( item ) {\r\n\t\tconst def = this.getDefinition( item );\r\n\r\n\t\tif ( !def ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn !!( def.isLimit || def.isObject );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the given item is defined to be\r\n\t * an object element by {@link module:engine/model/schema~SchemaItemDefinition}'s `isObject` property.\r\n\t *\r\n\t *\t\tschema.isObject( 'paragraph' ); // -> false\r\n\t *\t\tschema.isObject( 'image' ); // -> true\r\n\t *\r\n\t *\t\tconst imageElement = writer.createElement( 'image' );\r\n\t *\t\tschema.isObject( imageElement ); // -> true\r\n\t *\r\n\t * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\r\n\t */\r\n\tisObject( item ) {\r\n\t\tconst def = this.getDefinition( item );\r\n\r\n\t\treturn !!( def && def.isObject );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the given item is defined to be\r\n\t * an inline element by {@link module:engine/model/schema~SchemaItemDefinition}'s `isInline` property.\r\n\t *\r\n\t *\t\tschema.isInline( 'paragraph' ); // -> false\r\n\t *\t\tschema.isInline( 'softBreak' ); // -> true\r\n\t *\r\n\t *\t\tconst text = writer.createText('foo' );\r\n\t *\t\tschema.isInline( text ); // -> true\r\n\t *\r\n\t * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\r\n\t */\r\n\tisInline( item ) {\r\n\t\tconst def = this.getDefinition( item );\r\n\r\n\t\treturn !!( def && def.isInline );\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether the given node (`child`) can be a child of the given context.\r\n\t *\r\n\t *\t\tschema.checkChild( model.document.getRoot(), paragraph ); // -> false\r\n\t *\r\n\t *\t\tschema.register( 'paragraph', {\r\n\t *\t\t\tallowIn: '$root'\r\n\t *\t\t} );\r\n\t *\t\tschema.checkChild( model.document.getRoot(), paragraph ); // -> true\r\n\t *\r\n\t * Note: When verifying whether the given node can be a child of the given context, the\r\n\t * schema also verifies the entire context &mdash; from its root to its last element. Therefore, it is possible\r\n\t * for `checkChild()` to return `false` even though the context's last element can contain the checked child.\r\n\t * It happens if one of the context's elements does not allow its child.\r\n\t *\r\n\t * @fires checkChild\r\n\t * @param {module:engine/model/schema~SchemaContextDefinition} context The context in which the child will be checked.\r\n\t * @param {module:engine/model/node~Node|String} def The child to check.\r\n\t */\r\n\tcheckChild( context, def ) {\r\n\t\t// Note: context and child are already normalized here to a SchemaContext and SchemaCompiledItemDefinition.\r\n\t\tif ( !def ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn this._checkContextMatch( def, context );\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether the given attribute can be applied in the given context (on the last\r\n\t * item of the context).\r\n\t *\r\n\t *\t\tschema.checkAttribute( textNode, 'bold' ); // -> false\r\n\t *\r\n\t *\t\tschema.extend( '$text', {\r\n\t *\t\t\tallowAttributes: 'bold'\r\n\t *\t\t} );\r\n\t *\t\tschema.checkAttribute( textNode, 'bold' ); // -> true\r\n\t *\r\n\t * @fires checkAttribute\r\n\t * @param {module:engine/model/schema~SchemaContextDefinition} context The context in which the attribute will be checked.\r\n\t * @param {String} attributeName\r\n\t */\r\n\tcheckAttribute( context, attributeName ) {\r\n\t\tconst def = this.getDefinition( context.last );\r\n\r\n\t\tif ( !def ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn def.allowAttributes.includes( attributeName );\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether the given element (`elementToMerge`) can be merged with the specified base element (`positionOrBaseElement`).\r\n\t *\r\n\t * In other words &mdash; whether `elementToMerge`'s children {@link #checkChild are allowed} in the `positionOrBaseElement`.\r\n\t *\r\n\t * This check ensures that elements merged with {@link module:engine/model/writer~Writer#merge `Writer#merge()`}\r\n\t * will be valid.\r\n\t *\r\n\t * Instead of elements, you can pass the instance of the {@link module:engine/model/position~Position} class as the\r\n\t * `positionOrBaseElement`. It means that the elements before and after the position will be checked whether they can be merged.\r\n\t *\r\n\t * @param {module:engine/model/position~Position|module:engine/model/element~Element} positionOrBaseElement The position or base\r\n\t * element to which the `elementToMerge` will be merged.\r\n\t * @param {module:engine/model/element~Element} elementToMerge The element to merge. Required if `positionOrBaseElement` is an element.\r\n\t * @returns {Boolean}\r\n\t */\r\n\tcheckMerge( positionOrBaseElement, elementToMerge = null ) {\r\n\t\tif ( positionOrBaseElement instanceof Position ) {\r\n\t\t\tconst nodeBefore = positionOrBaseElement.nodeBefore;\r\n\t\t\tconst nodeAfter = positionOrBaseElement.nodeAfter;\r\n\r\n\t\t\tif ( !( nodeBefore instanceof Element ) ) {\r\n\t\t\t\t/**\r\n\t\t\t\t * The node before the merge position must be an element.\r\n\t\t\t\t *\r\n\t\t\t\t * @error schema-check-merge-no-element-before\r\n\t\t\t\t */\r\n\t\t\t\tthrow new CKEditorError(\r\n\t\t\t\t\t'schema-check-merge-no-element-before: The node before the merge position must be an element.',\r\n\t\t\t\t\tthis\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tif ( !( nodeAfter instanceof Element ) ) {\r\n\t\t\t\t/**\r\n\t\t\t\t * The node after the merge position must be an element.\r\n\t\t\t\t *\r\n\t\t\t\t * @error schema-check-merge-no-element-after\r\n\t\t\t\t */\r\n\t\t\t\tthrow new CKEditorError(\r\n\t\t\t\t\t'schema-check-merge-no-element-after: The node after the merge position must be an element.',\r\n\t\t\t\t\tthis\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\treturn this.checkMerge( nodeBefore, nodeAfter );\r\n\t\t}\r\n\r\n\t\tfor ( const child of elementToMerge.getChildren() ) {\r\n\t\t\tif ( !this.checkChild( positionOrBaseElement, child ) ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Allows registering a callback to the {@link #checkChild} method calls.\r\n\t *\r\n\t * Callbacks allow you to implement rules which are not otherwise possible to achieve\r\n\t * by using the declarative API of {@link module:engine/model/schema~SchemaItemDefinition}.\r\n\t * For example, by using this method you can disallow elements in specific contexts.\r\n\t *\r\n\t * This method is a shorthand for using the {@link #event:checkChild} event. For even better control,\r\n\t * you can use that event instead.\r\n\t *\r\n\t * Example:\r\n\t *\r\n\t *\t\t// Disallow heading1 directly inside a blockQuote.\r\n\t *\t\tschema.addChildCheck( ( context, childDefinition ) => {\r\n\t *\t\t\tif ( context.endsWith( 'blockQuote' ) && childDefinition.name == 'heading1' ) {\r\n\t *\t\t\t\treturn false;\r\n\t *\t\t\t}\r\n\t *\t\t} );\r\n\t *\r\n\t * Which translates to:\r\n\t *\r\n\t *\t\tschema.on( 'checkChild', ( evt, args ) => {\r\n\t *\t\t\tconst context = args[ 0 ];\r\n\t *\t\t\tconst childDefinition = args[ 1 ];\r\n\t *\r\n\t *\t\t\tif ( context.endsWith( 'blockQuote' ) && childDefinition && childDefinition.name == 'heading1' ) {\r\n\t *\t\t\t\t// Prevent next listeners from being called.\r\n\t *\t\t\t\tevt.stop();\r\n\t *\t\t\t\t// Set the checkChild()'s return value.\r\n\t *\t\t\t\tevt.return = false;\r\n\t *\t\t\t}\r\n\t *\t\t}, { priority: 'high' } );\r\n\t *\r\n\t * @param {Function} callback The callback to be called. It is called with two parameters:\r\n\t * {@link module:engine/model/schema~SchemaContext} (context) instance and\r\n\t * {@link module:engine/model/schema~SchemaCompiledItemDefinition} (child-to-check definition).\r\n\t * The callback may return `true/false` to override `checkChild()`'s return value. If it does not return\r\n\t * a boolean value, the default algorithm (or other callbacks) will define `checkChild()`'s return value.\r\n\t */\r\n\taddChildCheck( callback ) {\r\n\t\tthis.on( 'checkChild', ( evt, [ ctx, childDef ] ) => {\r\n\t\t\t// checkChild() was called with a non-registered child.\r\n\t\t\t// In 99% cases such check should return false, so not to overcomplicate all callbacks\r\n\t\t\t// don't even execute them.\r\n\t\t\tif ( !childDef ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst retValue = callback( ctx, childDef );\r\n\r\n\t\t\tif ( typeof retValue == 'boolean' ) {\r\n\t\t\t\tevt.stop();\r\n\t\t\t\tevt.return = retValue;\r\n\t\t\t}\r\n\t\t}, { priority: 'high' } );\r\n\t}\r\n\r\n\t/**\r\n\t * Allows registering a callback to the {@link #checkAttribute} method calls.\r\n\t *\r\n\t * Callbacks allow you to implement rules which are not otherwise possible to achieve\r\n\t * by using the declarative API of {@link module:engine/model/schema~SchemaItemDefinition}.\r\n\t * For example, by using this method you can disallow attribute if node to which it is applied\r\n\t * is contained within some other element (e.g. you want to disallow `bold` on `$text` within `heading1`).\r\n\t *\r\n\t * This method is a shorthand for using the {@link #event:checkAttribute} event. For even better control,\r\n\t * you can use that event instead.\r\n\t *\r\n\t * Example:\r\n\t *\r\n\t *\t\t// Disallow bold on $text inside heading1.\r\n\t *\t\tschema.addAttributeCheck( ( context, attributeName ) => {\r\n\t *\t\t\tif ( context.endsWith( 'heading1 $text' ) && attributeName == 'bold' ) {\r\n\t *\t\t\t\treturn false;\r\n\t *\t\t\t}\r\n\t *\t\t} );\r\n\t *\r\n\t * Which translates to:\r\n\t *\r\n\t *\t\tschema.on( 'checkAttribute', ( evt, args ) => {\r\n\t *\t\t\tconst context = args[ 0 ];\r\n\t *\t\t\tconst attributeName = args[ 1 ];\r\n\t *\r\n\t *\t\t\tif ( context.endsWith( 'heading1 $text' ) && attributeName == 'bold' ) {\r\n\t *\t\t\t\t// Prevent next listeners from being called.\r\n\t *\t\t\t\tevt.stop();\r\n\t *\t\t\t\t// Set the checkAttribute()'s return value.\r\n\t *\t\t\t\tevt.return = false;\r\n\t *\t\t\t}\r\n\t *\t\t}, { priority: 'high' } );\r\n\t *\r\n\t * @param {Function} callback The callback to be called. It is called with two parameters:\r\n\t * {@link module:engine/model/schema~SchemaContext} (context) instance and attribute name.\r\n\t * The callback may return `true/false` to override `checkAttribute()`'s return value. If it does not return\r\n\t * a boolean value, the default algorithm (or other callbacks) will define `checkAttribute()`'s return value.\r\n\t */\r\n\taddAttributeCheck( callback ) {\r\n\t\tthis.on( 'checkAttribute', ( evt, [ ctx, attributeName ] ) => {\r\n\t\t\tconst retValue = callback( ctx, attributeName );\r\n\r\n\t\t\tif ( typeof retValue == 'boolean' ) {\r\n\t\t\t\tevt.stop();\r\n\t\t\t\tevt.return = retValue;\r\n\t\t\t}\r\n\t\t}, { priority: 'high' } );\r\n\t}\r\n\r\n\t/**\r\n\t * This method allows assigning additional metadata to the model attributes. For example,\r\n\t * {@link module:engine/model/schema~AttributeProperties `AttributeProperties#isFormatting` property} is\r\n\t * used to mark formatting attributes (like `bold` or `italic`).\r\n\t *\r\n\t *\t\t// Mark bold as a formatting attribute.\r\n\t *\t\tschema.setAttributeProperties( 'bold', {\r\n\t *\t\t\tisFormatting: true\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\t// Override code not to be considered a formatting markup.\r\n\t *\t\tschema.setAttributeProperties( 'code', {\r\n\t *\t\t\tisFormatting: false\r\n\t *\t\t} );\r\n\t *\r\n\t * Properties are not limited to members defined in the\r\n\t * {@link module:engine/model/schema~AttributeProperties `AttributeProperties` type} and you can also use custom properties:\r\n\t *\r\n\t *\t\tschema.setAttributeProperties( 'blockQuote', {\r\n\t *\t\t\tcustomProperty: 'value'\r\n\t *\t\t} );\r\n\t *\r\n\t * Subsequent calls with the same attribute will extend its custom properties:\r\n\t *\r\n\t *\t\tschema.setAttributeProperties( 'blockQuote', {\r\n\t *\t\t\tone: 1\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\tschema.setAttributeProperties( 'blockQuote', {\r\n\t *\t\t\ttwo: 2\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\tconsole.log( schema.getAttributeProperties( 'blockQuote' ) );\r\n\t *\t\t// Logs: { one: 1, two: 2 }\r\n\t *\r\n\t * @param {String} attributeName A name of the attribute to receive the properties.\r\n\t * @param {module:engine/model/schema~AttributeProperties} properties A dictionary of properties.\r\n\t */\r\n\tsetAttributeProperties( attributeName, properties ) {\r\n\t\tthis._attributeProperties[ attributeName ] = Object.assign( this.getAttributeProperties( attributeName ), properties );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns properties associated with a given model attribute. See {@link #setAttributeProperties `setAttributeProperties()`}.\r\n\t *\r\n\t * @param {String} attributeName A name of the attribute.\r\n\t * @returns {module:engine/model/schema~AttributeProperties}\r\n\t */\r\n\tgetAttributeProperties( attributeName ) {\r\n\t\treturn this._attributeProperties[ attributeName ] || {};\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the lowest {@link module:engine/model/schema~Schema#isLimit limit element} containing the entire\r\n\t * selection/range/position or the root otherwise.\r\n\t *\r\n\t * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection|\r\n\t * module:engine/model/range~Range|module:engine/model/position~Position} selectionOrRangeOrPosition\r\n\t * The selection/range/position to check.\r\n\t * @returns {module:engine/model/element~Element} The lowest limit element containing\r\n\t * the entire `selectionOrRangeOrPosition`.\r\n\t */\r\n\tgetLimitElement( selectionOrRangeOrPosition ) {\r\n\t\tlet element;\r\n\r\n\t\tif ( selectionOrRangeOrPosition instanceof Position ) {\r\n\t\t\telement = selectionOrRangeOrPosition.parent;\r\n\t\t} else {\r\n\t\t\tconst ranges = selectionOrRangeOrPosition instanceof Range ?\r\n\t\t\t\t[ selectionOrRangeOrPosition ] :\r\n\t\t\t\tArray.from( selectionOrRangeOrPosition.getRanges() );\r\n\r\n\t\t\t// Find the common ancestor for all selection's ranges.\r\n\t\t\telement = ranges\r\n\t\t\t\t.reduce( ( element, range ) => {\r\n\t\t\t\t\tconst rangeCommonAncestor = range.getCommonAncestor();\r\n\r\n\t\t\t\t\tif ( !element ) {\r\n\t\t\t\t\t\treturn rangeCommonAncestor;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn element.getCommonAncestor( rangeCommonAncestor, { includeSelf: true } );\r\n\t\t\t\t}, null );\r\n\t\t}\r\n\r\n\t\twhile ( !this.isLimit( element ) ) {\r\n\t\t\tif ( element.parent ) {\r\n\t\t\t\telement = element.parent;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether the attribute is allowed in selection:\r\n\t *\r\n\t * * if the selection is not collapsed, then checks if the attribute is allowed on any of nodes in that range,\r\n\t * * if the selection is collapsed, then checks if on the selection position there's a text with the\r\n\t * specified attribute allowed.\r\n\t *\r\n\t * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\r\n\t * Selection which will be checked.\r\n\t * @param {String} attribute The name of the attribute to check.\r\n\t * @returns {Boolean}\r\n\t */\r\n\tcheckAttributeInSelection( selection, attribute ) {\r\n\t\tif ( selection.isCollapsed ) {\r\n\t\t\tconst firstPosition = selection.getFirstPosition();\r\n\t\t\tconst context = [\r\n\t\t\t\t...firstPosition.getAncestors(),\r\n\t\t\t\tnew Text( '', selection.getAttributes() )\r\n\t\t\t];\r\n\r\n\t\t\t// Check whether schema allows for a text with the attribute in the selection.\r\n\t\t\treturn this.checkAttribute( context, attribute );\r\n\t\t} else {\r\n\t\t\tconst ranges = selection.getRanges();\r\n\r\n\t\t\t// For all ranges, check nodes in them until you find a node that is allowed to have the attribute.\r\n\t\t\tfor ( const range of ranges ) {\r\n\t\t\t\tfor ( const value of range ) {\r\n\t\t\t\t\tif ( this.checkAttribute( value.item, attribute ) ) {\r\n\t\t\t\t\t\t// If we found a node that is allowed to have the attribute, return true.\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If we haven't found such node, return false.\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Transforms the given set of ranges into a set of ranges where the given attribute is allowed (and can be applied).\r\n\t *\r\n\t * @param {Array.<module:engine/model/range~Range>} ranges Ranges to be validated.\r\n\t * @param {String} attribute The name of the attribute to check.\r\n\t * @returns {Iterable.<module:engine/model/range~Range>} Ranges in which the attribute is allowed.\r\n\t */\r\n\t* getValidRanges( ranges, attribute ) {\r\n\t\tranges = convertToMinimalFlatRanges( ranges );\r\n\r\n\t\tfor ( const range of ranges ) {\r\n\t\t\tyield* this._getValidRangesForRange( range, attribute );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Basing on given `position`, finds and returns a {@link module:engine/model/range~Range range} which is\r\n\t * nearest to that `position` and is a correct range for selection.\r\n\t *\r\n\t * The correct selection range might be collapsed when it is located in a position where the text node can be placed.\r\n\t * Non-collapsed range is returned when selection can be placed around element marked as an \"object\" in\r\n\t * the {@link module:engine/model/schema~Schema schema}.\r\n\t *\r\n\t * Direction of searching for the nearest correct selection range can be specified as:\r\n\t *\r\n\t * * `both` - searching will be performed in both ways,\r\n\t * * `forward` - searching will be performed only forward,\r\n\t * * `backward` - searching will be performed only backward.\r\n\t *\r\n\t * When valid selection range cannot be found, `null` is returned.\r\n\t *\r\n\t * @param {module:engine/model/position~Position} position Reference position where new selection range should be looked for.\r\n\t * @param {'both'|'forward'|'backward'} [direction='both'] Search direction.\r\n\t * @returns {module:engine/model/range~Range|null} Nearest selection range or `null` if one cannot be found.\r\n\t */\r\n\tgetNearestSelectionRange( position, direction = 'both' ) {\r\n\t\t// Return collapsed range if provided position is valid.\r\n\t\tif ( this.checkChild( position, '$text' ) ) {\r\n\t\t\treturn new Range( position );\r\n\t\t}\r\n\r\n\t\tlet backwardWalker, forwardWalker;\r\n\r\n\t\t// Never leave a limit element.\r\n\t\tconst limitElement = position.getAncestors().reverse().find( item => this.isLimit( item ) ) || position.root;\r\n\r\n\t\tif ( direction == 'both' || direction == 'backward' ) {\r\n\t\t\tbackwardWalker = new TreeWalker( {\r\n\t\t\t\tboundaries: Range._createIn( limitElement ),\r\n\t\t\t\tstartPosition: position,\r\n\t\t\t\tdirection: 'backward'\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tif ( direction == 'both' || direction == 'forward' ) {\r\n\t\t\tforwardWalker = new TreeWalker( {\r\n\t\t\t\tboundaries: Range._createIn( limitElement ),\r\n\t\t\t\tstartPosition: position\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tfor ( const data of combineWalkers( backwardWalker, forwardWalker ) ) {\r\n\t\t\tconst type = ( data.walker == backwardWalker ? 'elementEnd' : 'elementStart' );\r\n\t\t\tconst value = data.value;\r\n\r\n\t\t\tif ( value.type == type && this.isObject( value.item ) ) {\r\n\t\t\t\treturn Range._createOn( value.item );\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.checkChild( value.nextPosition, '$text' ) ) {\r\n\t\t\t\treturn new Range( value.nextPosition );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Tries to find position ancestors that allows to insert given node.\r\n\t * It starts searching from the given position and goes node by node to the top of the model tree\r\n\t * as long as {@link module:engine/model/schema~Schema#isLimit limit element},\r\n\t * {@link module:engine/model/schema~Schema#isObject object element} or top-most ancestor won't be reached.\r\n\t *\r\n\t * @params {module:engine/model/position~Position} position Position from searching will start.\r\n\t * @params {module:engine/model/node~Node|String} node Node for which allowed parent should be found or its name.\r\n\t * @returns {module:engine/model/element~Element|null} element Allowed parent or null if nothing was found.\r\n\t */\r\n\tfindAllowedParent( position, node ) {\r\n\t\tlet parent = position.parent;\r\n\r\n\t\twhile ( parent ) {\r\n\t\t\tif ( this.checkChild( parent, node ) ) {\r\n\t\t\t\treturn parent;\r\n\t\t\t}\r\n\r\n\t\t\t// Do not split limit elements.\r\n\t\t\tif ( this.isLimit( parent ) ) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tparent = parent.parent;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes attributes disallowed by the schema.\r\n\t *\r\n\t * @param {Iterable.<module:engine/model/node~Node>} nodes Nodes that will be filtered.\r\n\t * @param {module:engine/model/writer~Writer} writer\r\n\t */\r\n\tremoveDisallowedAttributes( nodes, writer ) {\r\n\t\tfor ( const node of nodes ) {\r\n\t\t\t// When node is a `Text` it has no children, so just filter it out.\r\n\t\t\tif ( node.is( 'text' ) ) {\r\n\t\t\t\tremoveDisallowedAttributeFromNode( this, node, writer );\r\n\t\t\t}\r\n\t\t\t// In a case of `Element` iterates through positions between nodes inside this element\r\n\t\t\t// and filter out node before the current position, or position parent when position\r\n\t\t\t// is at start of an element. Using positions prevent from omitting merged nodes\r\n\t\t\t// see https://github.com/ckeditor/ckeditor5-engine/issues/1789.\r\n\t\t\telse {\r\n\t\t\t\tconst rangeInNode = Range._createIn( node );\r\n\t\t\t\tconst positionsInRange = rangeInNode.getPositions();\r\n\r\n\t\t\t\tfor ( const position of positionsInRange ) {\r\n\t\t\t\t\tconst item = position.nodeBefore || position.parent;\r\n\r\n\t\t\t\t\tremoveDisallowedAttributeFromNode( this, item, writer );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates an instance of the schema context.\r\n\t *\r\n\t * @param {module:engine/model/schema~SchemaContextDefinition} context\r\n\t * @returns {module:engine/model/schema~SchemaContext}\r\n\t */\r\n\tcreateContext( context ) {\r\n\t\treturn new SchemaContext( context );\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t_clearCache() {\r\n\t\tthis._compiledDefinitions = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t_compile() {\r\n\t\tconst compiledDefinitions = {};\r\n\t\tconst sourceRules = this._sourceDefinitions;\r\n\t\tconst itemNames = Object.keys( sourceRules );\r\n\r\n\t\tfor ( const itemName of itemNames ) {\r\n\t\t\tcompiledDefinitions[ itemName ] = compileBaseItemRule( sourceRules[ itemName ], itemName );\r\n\t\t}\r\n\r\n\t\tfor ( const itemName of itemNames ) {\r\n\t\t\tcompileAllowContentOf( compiledDefinitions, itemName );\r\n\t\t}\r\n\r\n\t\tfor ( const itemName of itemNames ) {\r\n\t\t\tcompileAllowWhere( compiledDefinitions, itemName );\r\n\t\t}\r\n\r\n\t\tfor ( const itemName of itemNames ) {\r\n\t\t\tcompileAllowAttributesOf( compiledDefinitions, itemName );\r\n\t\t\tcompileInheritPropertiesFrom( compiledDefinitions, itemName );\r\n\t\t}\r\n\r\n\t\tfor ( const itemName of itemNames ) {\r\n\t\t\tcleanUpAllowIn( compiledDefinitions, itemName );\r\n\t\t\tcleanUpAllowAttributes( compiledDefinitions, itemName );\r\n\t\t}\r\n\r\n\t\tthis._compiledDefinitions = compiledDefinitions;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @param {module:engine/model/schema~SchemaCompiledItemDefinition} def\r\n\t * @param {module:engine/model/schema~SchemaContext} context\r\n\t * @param {Number} contextItemIndex\r\n\t */\r\n\t_checkContextMatch( def, context, contextItemIndex = context.length - 1 ) {\r\n\t\tconst contextItem = context.getItem( contextItemIndex );\r\n\r\n\t\tif ( def.allowIn.includes( contextItem.name ) ) {\r\n\t\t\tif ( contextItemIndex == 0 ) {\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\tconst parentRule = this.getDefinition( contextItem );\r\n\r\n\t\t\t\treturn this._checkContextMatch( parentRule, context, contextItemIndex - 1 );\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Takes a flat range and an attribute name. Traverses the range recursively and deeply to find and return all ranges\r\n\t * inside the given range on which the attribute can be applied.\r\n\t *\r\n\t * This is a helper function for {@link ~Schema#getValidRanges}.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/model/range~Range} range Range to process.\r\n\t * @param {String} attribute The name of the attribute to check.\r\n\t * @returns {Iterable.<module:engine/model/range~Range>} Ranges in which the attribute is allowed.\r\n\t */\r\n\t* _getValidRangesForRange( range, attribute ) {\r\n\t\tlet start = range.start;\r\n\t\tlet end = range.start;\r\n\r\n\t\tfor ( const item of range.getItems( { shallow: true } ) ) {\r\n\t\t\tif ( item.is( 'element' ) ) {\r\n\t\t\t\tyield* this._getValidRangesForRange( Range._createIn( item ), attribute );\r\n\t\t\t}\r\n\r\n\t\t\tif ( !this.checkAttribute( item, attribute ) ) {\r\n\t\t\t\tif ( !start.isEqual( end ) ) {\r\n\t\t\t\t\tyield new Range( start, end );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstart = Position._createAfter( item );\r\n\t\t\t}\r\n\r\n\t\t\tend = Position._createAfter( item );\r\n\t\t}\r\n\r\n\t\tif ( !start.isEqual( end ) ) {\r\n\t\t\tyield new Range( start, end );\r\n\t\t}\r\n\t}\r\n}\r\n\r\nmix( Schema, ObservableMixin );\r\n\r\n/**\r\n * Event fired when the {@link #checkChild} method is called. It allows plugging in\r\n * additional behavior – e.g. implementing rules which cannot be defined using the declarative\r\n * {@link module:engine/model/schema~SchemaItemDefinition} interface.\r\n *\r\n * **Note:** The {@link #addChildCheck} method is a more handy way to register callbacks. Internally,\r\n * it registers a listener to this event but comes with a simpler API and it is the recommended choice\r\n * in most of the cases.\r\n *\r\n * The {@link #checkChild} method fires an event because it is\r\n * {@link module:utils/observablemixin~ObservableMixin#decorate decorated} with it. Thanks to that you can\r\n * use this event in a various way, but the most important use case is overriding standard behaviour of the\r\n * `checkChild()` method. Let's see a typical listener template:\r\n *\r\n *\t\tschema.on( 'checkChild', ( evt, args ) => {\r\n *\t\t\tconst context = args[ 0 ];\r\n *\t\t\tconst childDefinition = args[ 1 ];\r\n *\t\t}, { priority: 'high' } );\r\n *\r\n * The listener is added with a `high` priority to be executed before the default method is really called. The `args` callback\r\n * parameter contains arguments passed to `checkChild( context, child )`. However, the `context` parameter is already\r\n * normalized to a {@link module:engine/model/schema~SchemaContext} instance and `child` to a\r\n * {@link module:engine/model/schema~SchemaCompiledItemDefinition} instance, so you don't have to worry about\r\n * the various ways how `context` and `child` may be passed to `checkChild()`.\r\n *\r\n * **Note:** `childDefinition` may be `undefined` if `checkChild()` was called with a non-registered element.\r\n *\r\n * So, in order to implement a rule \"disallow `heading1` in `blockQuote`\" you can add such a listener:\r\n *\r\n *\t\tschema.on( 'checkChild', ( evt, args ) => {\r\n *\t\t\tconst context = args[ 0 ];\r\n *\t\t\tconst childDefinition = args[ 1 ];\r\n *\r\n *\t\t\tif ( context.endsWith( 'blockQuote' ) && childDefinition && childDefinition.name == 'heading1' ) {\r\n *\t\t\t\t// Prevent next listeners from being called.\r\n *\t\t\t\tevt.stop();\r\n *\t\t\t\t// Set the checkChild()'s return value.\r\n *\t\t\t\tevt.return = false;\r\n *\t\t\t}\r\n *\t\t}, { priority: 'high' } );\r\n *\r\n * Allowing elements in specific contexts will be a far less common use case, because it's normally handled by\r\n * `allowIn` rule from {@link module:engine/model/schema~SchemaItemDefinition} but if you have a complex scenario\r\n * where `listItem` should be allowed only in element `foo` which must be in element `bar`, then this would be the way:\r\n *\r\n *\t\tschema.on( 'checkChild', ( evt, args ) => {\r\n *\t\t\tconst context = args[ 0 ];\r\n *\t\t\tconst childDefinition = args[ 1 ];\r\n *\r\n *\t\t\tif ( context.endsWith( 'bar foo' ) && childDefinition.name == 'listItem' ) {\r\n *\t\t\t\t// Prevent next listeners from being called.\r\n *\t\t\t\tevt.stop();\r\n *\t\t\t\t// Set the checkChild()'s return value.\r\n *\t\t\t\tevt.return = true;\r\n *\t\t\t}\r\n *\t\t}, { priority: 'high' } );\r\n *\r\n * @event checkChild\r\n * @param {Array} args The `checkChild()`'s arguments.\r\n */\r\n\r\n/**\r\n * Event fired when the {@link #checkAttribute} method is called. It allows plugging in\r\n * additional behavior – e.g. implementing rules which cannot be defined using the declarative\r\n * {@link module:engine/model/schema~SchemaItemDefinition} interface.\r\n *\r\n * **Note:** The {@link #addAttributeCheck} method is a more handy way to register callbacks. Internally,\r\n * it registers a listener to this event but comes with a simpler API and it is the recommended choice\r\n * in most of the cases.\r\n *\r\n * The {@link #checkAttribute} method fires an event because it's\r\n * {@link module:utils/observablemixin~ObservableMixin#decorate decorated} with it. Thanks to that you can\r\n * use this event in a various way, but the most important use case is overriding standard behaviour of the\r\n * `checkAttribute()` method. Let's see a typical listener template:\r\n *\r\n *\t\tschema.on( 'checkAttribute', ( evt, args ) => {\r\n *\t\t\tconst context = args[ 0 ];\r\n *\t\t\tconst attributeName = args[ 1 ];\r\n *\t\t}, { priority: 'high' } );\r\n *\r\n * The listener is added with a `high` priority to be executed before the default method is really called. The `args` callback\r\n * parameter contains arguments passed to `checkAttribute( context, attributeName )`. However, the `context` parameter is already\r\n * normalized to a {@link module:engine/model/schema~SchemaContext} instance, so you don't have to worry about\r\n * the various ways how `context` may be passed to `checkAttribute()`.\r\n *\r\n * So, in order to implement a rule \"disallow `bold` in a text which is in a `heading1` you can add such a listener:\r\n *\r\n *\t\tschema.on( 'checkAttribute', ( evt, args ) => {\r\n *\t\t\tconst context = args[ 0 ];\r\n *\t\t\tconst atributeName = args[ 1 ];\r\n *\r\n *\t\t\tif ( context.endsWith( 'heading1 $text' ) && attributeName == 'bold' ) {\r\n *\t\t\t\t// Prevent next listeners from being called.\r\n *\t\t\t\tevt.stop();\r\n *\t\t\t\t// Set the checkAttribute()'s return value.\r\n *\t\t\t\tevt.return = false;\r\n *\t\t\t}\r\n *\t\t}, { priority: 'high' } );\r\n *\r\n * Allowing attributes in specific contexts will be a far less common use case, because it's normally handled by\r\n * `allowAttributes` rule from {@link module:engine/model/schema~SchemaItemDefinition} but if you have a complex scenario\r\n * where `bold` should be allowed only in element `foo` which must be in element `bar`, then this would be the way:\r\n *\r\n *\t\tschema.on( 'checkAttribute', ( evt, args ) => {\r\n *\t\t\tconst context = args[ 0 ];\r\n *\t\t\tconst atributeName = args[ 1 ];\r\n *\r\n *\t\t\tif ( context.endsWith( 'bar foo $text' ) && attributeName == 'bold' ) {\r\n *\t\t\t\t// Prevent next listeners from being called.\r\n *\t\t\t\tevt.stop();\r\n *\t\t\t\t// Set the checkAttribute()'s return value.\r\n *\t\t\t\tevt.return = true;\r\n *\t\t\t}\r\n *\t\t}, { priority: 'high' } );\r\n *\r\n * @event checkAttribute\r\n * @param {Array} args The `checkAttribute()`'s arguments.\r\n */\r\n\r\n/**\r\n * A definition of a {@link module:engine/model/schema~Schema schema} item.\r\n *\r\n * You can define the following rules:\r\n *\r\n * * `allowIn` &ndash; A string or an array of strings. Defines in which other items this item will be allowed.\r\n * * `allowAttributes` &ndash; A string or an array of strings. Defines allowed attributes of the given item.\r\n * * `allowContentOf` &ndash; A string or an array of strings. Inherits \"allowed children\" from other items.\r\n * * `allowWhere` &ndash; A string or an array of strings. Inherits \"allowed in\" from other items.\r\n * * `allowAttributesOf` &ndash; A string or an array of strings. Inherits attributes from other items.\r\n * * `inheritTypesFrom` &ndash; A string or an array of strings. Inherits `is*` properties of other items.\r\n * * `inheritAllFrom` &ndash; A string. A shorthand for `allowContentOf`, `allowWhere`, `allowAttributesOf`, `inheritTypesFrom`.\r\n * * Additionally, you can define the following `is*` properties: `isBlock`, `isLimit`, `isObject`, `isInline`. Read about them below.\r\n *\r\n * # The is* properties\r\n *\r\n * There are 3 commonly used `is*` properties. Their role is to assign additional semantics to schema items.\r\n * You can define more properties but you will also need to implement support for them in the existing editor features.\r\n *\r\n * * `isBlock` &ndash; Whether this item is paragraph-like. Generally speaking, content is usually made out of blocks\r\n * like paragraphs, list items, images, headings, etc. All these elements are marked as blocks. A block\r\n * should not allow another block inside. Note: There is also the `$block` generic item which has `isBlock` set to `true`.\r\n * Most block type items will inherit from `$block` (through `inheritAllFrom`).\r\n * * `isLimit` &ndash; It can be understood as whether this element should not be split by <kbd>Enter</kbd>.\r\n * Examples of limit elements: `$root`, table cell, image caption, etc. In other words, all actions that happen inside\r\n * a limit element are limited to its content. **Note:** All objects (`isObject`) are treated as limit elements, too.\r\n * * `isObject` &ndash; Whether an item is \"self-contained\" and should be treated as a whole. Examples of object elements:\r\n * `image`, `table`, `video`, etc. **Note:** An object is also a limit, so\r\n * {@link module:engine/model/schema~Schema#isLimit `isLimit()`} returns `true` for object elements automatically.\r\n * * `isInline` &ndash; Whether an item is \"text-like\" and should be treated as an inline node. Examples of inline elements:\r\n * `$text`, `softBreak` (`<br>`), etc.\r\n *\r\n * # Generic items\r\n *\r\n * There are three basic generic items: `$root`, `$block` and `$text`.\r\n * They are defined as follows:\r\n *\r\n *\t\tthis.schema.register( '$root', {\r\n *\t\t\tisLimit: true\r\n *\t\t} );\r\n *\t\tthis.schema.register( '$block', {\r\n *\t\t\tallowIn: '$root',\r\n *\t\t\tisBlock: true\r\n *\t\t} );\r\n *\t\tthis.schema.register( '$text', {\r\n *\t\t\tallowIn: '$block',\r\n *\t\t\tisInline: true\r\n *\t\t} );\r\n *\r\n * They reflect typical editor content that is contained within one root, consists of several blocks\r\n * (paragraphs, lists items, headings, images) which, in turn, may contain text inside.\r\n *\r\n * By inheriting from the generic items you can define new items which will get extended by other editor features.\r\n * Read more about generic types in the {@glink framework/guides/deep-dive/schema Defining schema} guide.\r\n *\r\n * # Example definitions\r\n *\r\n * Allow `paragraph` in roots and block quotes:\r\n *\r\n *\t\tschema.register( 'paragraph', {\r\n *\t\t\tallowIn: [ '$root', 'blockQuote' ],\r\n *\t\t\tisBlock: true\r\n *\t\t} );\r\n *\r\n * Allow `paragraph` everywhere where `$block` is allowed (i.e. in `$root`):\r\n *\r\n *\t\tschema.register( 'paragraph', {\r\n *\t\t\tallowWhere: '$block',\r\n *\t\t\tisBlock: true\r\n *\t\t} );\r\n *\r\n * Make `image` a block object, which is allowed everywhere where `$block` is.\r\n * Also, allow `src` and `alt` attributes in it:\r\n *\r\n *\t\tschema.register( 'image', {\r\n *\t\t\tallowWhere: '$block',\r\n *\t\t\tallowAttributes: [ 'src', 'alt' ],\r\n *\t\t\tisBlock: true,\r\n *\t\t\tisObject: true\r\n *\t\t} );\r\n *\r\n * Make `caption` allowed in `image` and make it allow all the content of `$block`s (usually, `$text`).\r\n * Also, mark it as a limit element so it cannot be split:\r\n *\r\n *\t\tschema.register( 'caption', {\r\n *\t\t\tallowIn: 'image',\r\n *\t\t\tallowContentOf: '$block',\r\n *\t\t\tisLimit: true\r\n *\t\t} );\r\n *\r\n * Make `listItem` inherit all from `$block` but also allow additional attributes:\r\n *\r\n *\t\tschema.register( 'listItem', {\r\n *\t\t\tinheritAllFrom: '$block',\r\n *\t\t\tallowAttributes: [ 'listType', 'listIndent' ]\r\n *\t\t} );\r\n *\r\n * Which translates to:\r\n *\r\n *\t\tschema.register( 'listItem', {\r\n *\t\t\tallowWhere: '$block',\r\n *\t\t\tallowContentOf: '$block',\r\n *\t\t\tallowAttributesOf: '$block',\r\n *\t\t\tinheritTypesFrom: '$block',\r\n *\t\t\tallowAttributes: [ 'listType', 'listIndent' ]\r\n *\t\t} );\r\n *\r\n * # Tips\r\n *\r\n * * Check schema definitions of existing features to see how they are defined.\r\n * * If you want to publish your feature so other developers can use it, try to use\r\n * generic items as much as possible.\r\n * * Keep your model clean. Limit it to the actual data and store information in a normalized way.\r\n * * Remember about definining the `is*` properties. They do not affect the allowed structures, but they can\r\n * affect how the editor features treat your elements.\r\n *\r\n * @typedef {Object} module:engine/model/schema~SchemaItemDefinition\r\n */\r\n\r\n/**\r\n * A simplified version of {@link module:engine/model/schema~SchemaItemDefinition} after\r\n * compilation by the {@link module:engine/model/schema~Schema schema}.\r\n * Rules fed to the schema by {@link module:engine/model/schema~Schema#register}\r\n * and {@link module:engine/model/schema~Schema#extend} methods are defined in the\r\n * {@link module:engine/model/schema~SchemaItemDefinition} format.\r\n * Later on, they are compiled to `SchemaCompiledItemDefition` so when you use e.g.\r\n * the {@link module:engine/model/schema~Schema#getDefinition} method you get the compiled version.\r\n *\r\n * The compiled version contains only the following properties:\r\n *\r\n * * The `name` property,\r\n * * The `is*` properties,\r\n * * The `allowIn` array,\r\n * * The `allowAttributes` array.\r\n *\r\n * @typedef {Object} module:engine/model/schema~SchemaCompiledItemDefinition\r\n */\r\n\r\n/**\r\n * A schema context &mdash; a list of ancestors of a given position in the document.\r\n *\r\n * Considering such position:\r\n *\r\n *\t\t<$root>\r\n *\t\t\t<blockQuote>\r\n *\t\t\t\t<paragraph>\r\n *\t\t\t\t\t^\r\n *\t\t\t\t</paragraph>\r\n *\t\t\t</blockQuote>\r\n *\t\t</$root>\r\n *\r\n * The context of this position is its {@link module:engine/model/position~Position#getAncestors lists of ancestors}:\r\n *\r\n *\t\t[ rootElement, blockQuoteElement, paragraphElement ]\r\n *\r\n * Contexts are used in the {@link module:engine/model/schema~Schema#event:checkChild `Schema#checkChild`} and\r\n * {@link module:engine/model/schema~Schema#event:checkAttribute `Schema#checkAttribute`} events as a definition\r\n * of a place in the document where the check occurs. The context instances are created based on the first arguments\r\n * of the {@link module:engine/model/schema~Schema#checkChild `Schema#checkChild()`} and\r\n * {@link module:engine/model/schema~Schema#checkAttribute `Schema#checkAttribute()`} methods so when\r\n * using these methods you need to use {@link module:engine/model/schema~SchemaContextDefinition}s.\r\n */\r\nexport class SchemaContext {\r\n\t/**\r\n\t * Creates an instance of the context.\r\n\t *\r\n\t * @param {module:engine/model/schema~SchemaContextDefinition} context\r\n\t */\r\n\tconstructor( context ) {\r\n\t\tif ( context instanceof SchemaContext ) {\r\n\t\t\treturn context;\r\n\t\t}\r\n\r\n\t\tif ( typeof context == 'string' ) {\r\n\t\t\tcontext = [ context ];\r\n\t\t} else if ( !Array.isArray( context ) ) {\r\n\t\t\t// `context` is item or position.\r\n\t\t\t// Position#getAncestors() doesn't accept any parameters but it works just fine here.\r\n\t\t\tcontext = context.getAncestors( { includeSelf: true } );\r\n\t\t}\r\n\r\n\t\tif ( context[ 0 ] && typeof context[ 0 ] != 'string' && context[ 0 ].is( 'documentFragment' ) ) {\r\n\t\t\tcontext.shift();\r\n\t\t}\r\n\r\n\t\tthis._items = context.map( mapContextItem );\r\n\t}\r\n\r\n\t/**\r\n\t * The number of items.\r\n\t *\r\n\t * @type {Number}\r\n\t */\r\n\tget length() {\r\n\t\treturn this._items.length;\r\n\t}\r\n\r\n\t/**\r\n\t * The last item (the lowest node).\r\n\t *\r\n\t * @type {module:engine/model/schema~SchemaContextItem}\r\n\t */\r\n\tget last() {\r\n\t\treturn this._items[ this._items.length - 1 ];\r\n\t}\r\n\r\n\t/**\r\n\t * Iterable interface.\r\n\t *\r\n\t * Iterates over all context items.\r\n\t *\r\n\t * @returns {Iterable.<module:engine/model/schema~SchemaContextItem>}\r\n\t */\r\n\t[ Symbol.iterator ]() {\r\n\t\treturn this._items[ Symbol.iterator ]();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new schema context instance with an additional item.\r\n\t *\r\n\t * Item can be added as:\r\n\t *\r\n\t * \t\tconst context = new SchemaContext( [ '$root' ] );\r\n\t *\r\n\t * \t\t// An element.\r\n\t * \t\tconst fooElement = writer.createElement( 'fooElement' );\r\n\t * \t\tconst newContext = context.push( fooElement ); // [ '$root', 'fooElement' ]\r\n\t *\r\n\t * \t\t// A text node.\r\n\t * \t\tconst text = writer.createText( 'foobar' );\r\n\t * \t\tconst newContext = context.push( text ); // [ '$root', '$text' ]\r\n\t *\r\n\t * \t\t// A string (element name).\r\n\t * \t\tconst newContext = context.push( 'barElement' ); // [ '$root', 'barElement' ]\r\n\t *\r\n\t * **Note** {@link module:engine/model/node~Node} that is already in the model tree will be added as the only item\r\n\t * (without ancestors).\r\n\t *\r\n\t * @param {String|module:engine/model/node~Node|Array<String|module:engine/model/node~Node>} item An item that will be added\r\n\t * to the current context.\r\n\t * @returns {module:engine/model/schema~SchemaContext} A new schema context instance with an additional item.\r\n\t */\r\n\tpush( item ) {\r\n\t\tconst ctx = new SchemaContext( [ item ] );\r\n\r\n\t\tctx._items = [ ...this._items, ...ctx._items ];\r\n\r\n\t\treturn ctx;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets an item on the given index.\r\n\t *\r\n\t * @returns {module:engine/model/schema~SchemaContextItem}\r\n\t */\r\n\tgetItem( index ) {\r\n\t\treturn this._items[ index ];\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the names of items.\r\n\t *\r\n\t * @returns {Iterable.<String>}\r\n\t */\r\n\t* getNames() {\r\n\t\tyield* this._items.map( item => item.name );\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether the context ends with the given nodes.\r\n\t *\r\n\t *\t\tconst ctx = new SchemaContext( [ rootElement, paragraphElement, textNode ] );\r\n\t *\r\n\t *\t\tctx.endsWith( '$text' ); // -> true\r\n\t *\t\tctx.endsWith( 'paragraph $text' ); // -> true\r\n\t *\t\tctx.endsWith( '$root' ); // -> false\r\n\t *\t\tctx.endsWith( 'paragraph' ); // -> false\r\n\t *\r\n\t * @param {String} query\r\n\t * @returns {Boolean}\r\n\t */\r\n\tendsWith( query ) {\r\n\t\treturn Array.from( this.getNames() ).join( ' ' ).endsWith( query );\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether the context starts with the given nodes.\r\n\t *\r\n\t *\t\tconst ctx = new SchemaContext( [ rootElement, paragraphElement, textNode ] );\r\n\t *\r\n\t *\t\tctx.endsWith( '$root' ); // -> true\r\n\t *\t\tctx.endsWith( '$root paragraph' ); // -> true\r\n\t *\t\tctx.endsWith( '$text' ); // -> false\r\n\t *\t\tctx.endsWith( 'paragraph' ); // -> false\r\n\t *\r\n\t * @param {String} query\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstartsWith( query ) {\r\n\t\treturn Array.from( this.getNames() ).join( ' ' ).startsWith( query );\r\n\t}\r\n}\r\n\r\n/**\r\n * The definition of a {@link module:engine/model/schema~SchemaContext schema context}.\r\n *\r\n * Contexts can be created in multiple ways:\r\n *\r\n * * By defining a **node** – in this cases this node and all its ancestors will be used.\r\n * * By defining a **position** in the document – in this case all its ancestors will be used.\r\n * * By defining an **array of nodes** – in this case this array defines the entire context.\r\n * * By defining a **name of node** - in this case node will be \"mocked\". It is not recommended because context\r\n * will be unrealistic (e.g. attributes of these nodes are not specified). However, at times this may be the only\r\n * way to define the context (e.g. when checking some hypothetical situation).\r\n * * By defining an **array of node names** (potentially, mixed with real nodes) – The same as **name of node**\r\n * but it is possible to create a path.\r\n * * By defining a {@link module:engine/model/schema~SchemaContext} instance - in this case the same instance as provided\r\n * will be return.\r\n *\r\n * Examples of context definitions passed to the {@link module:engine/model/schema~Schema#checkChild `Schema#checkChild()`}\r\n * method:\r\n *\r\n *\t\t// Assuming that we have a $root > blockQuote > paragraph structure, the following code\r\n *\t\t// will check node 'foo' in the following context:\r\n *\t\t// [ rootElement, blockQuoteElement, paragraphElement ]\r\n *\t\tconst contextDefinition = paragraphElement;\r\n * \t\tconst childToCheck = 'foo';\r\n *\t\tschema.checkChild( contextDefinition, childToCheck );\r\n *\r\n *\t\t// Also check in [ rootElement, blockQuoteElement, paragraphElement ].\r\n *\t\tschema.checkChild( model.createPositionAt( paragraphElement, 0 ), 'foo' );\r\n *\r\n *\t\t// Check in [ rootElement, paragraphElement ].\r\n *\t\tschema.checkChild( [ rootElement, paragraphElement ], 'foo' );\r\n *\r\n *\t\t// Check only fakeParagraphElement.\r\n *\t\tschema.checkChild( 'paragraph', 'foo' );\r\n *\r\n *\t\t// Check in [ fakeRootElement, fakeBarElement, paragraphElement ].\r\n *\t\tschema.checkChild( [ '$root', 'bar', paragraphElement ], 'foo' );\r\n *\r\n * All these `checkChild()` calls will fire {@link module:engine/model/schema~Schema#event:checkChild `Schema#checkChild`}\r\n * events in which `args[ 0 ]` is an instance of the context. Therefore, you can write a listener like this:\r\n *\r\n *\t\tschema.on( 'checkChild', ( evt, args ) => {\r\n *\t\t\tconst ctx = args[ 0 ];\r\n *\r\n *\t\t\tconsole.log( Array.from( ctx.getNames() ) );\r\n *\t\t} );\r\n *\r\n * Which will log the following:\r\n *\r\n *\t\t[ '$root', 'blockQuote', 'paragraph' ]\r\n *\t\t[ '$root', 'paragraph' ]\r\n *\t\t[ '$root', 'bar', 'paragraph' ]\r\n *\r\n * Note: When using the {@link module:engine/model/schema~Schema#checkAttribute `Schema#checkAttribute()`} method\r\n * you may want to check whether a text node may have an attribute. A {@link module:engine/model/text~Text} is a\r\n * correct way to define a context so you can do this:\r\n *\r\n *\t\tschema.checkAttribute( textNode, 'bold' );\r\n *\r\n * But sometimes you want to check whether a text at a given position might've had some attribute,\r\n * in which case you can create a context by mising an array of elements with a `'$text'` string:\r\n *\r\n *\t\t// Check in [ rootElement, paragraphElement, textNode ].\r\n *\t\tschema.checkChild( [ ...positionInParagraph.getAncestors(), '$text' ], 'bold' );\r\n *\r\n * @typedef {module:engine/model/node~Node|module:engine/model/position~Position|module:engine/model/schema~SchemaContext|\r\n * String|Array.<String|module:engine/model/node~Node>} module:engine/model/schema~SchemaContextDefinition\r\n */\r\n\r\n/**\r\n * An item of the {@link module:engine/model/schema~SchemaContext schema context}.\r\n *\r\n * It contains 3 properties:\r\n *\r\n * * `name` – the name of this item,\r\n * * `* getAttributeKeys()` – a generator of keys of item attributes,\r\n * * `getAttribute( keyName )` – a method to get attribute values.\r\n *\r\n * The context item interface is a highly simplified version of {@link module:engine/model/node~Node} and its role\r\n * is to expose only the information which schema checks are able to provide (which is the name of the node and\r\n * node's attributes).\r\n *\r\n *\t\tschema.on( 'checkChild', ( evt, args ) => {\r\n *\t\t\tconst ctx = args[ 0 ];\r\n *\t\t\tconst firstItem = ctx.getItem( 0 );\r\n *\r\n *\t\t\tconsole.log( firstItem.name ); // -> '$root'\r\n *\t\t\tconsole.log( firstItem.getAttribute( 'foo' ) ); // -> 'bar'\r\n *\t\t\tconsole.log( Array.from( firstItem.getAttributeKeys() ) ); // -> [ 'foo', 'faa' ]\r\n *\t\t} );\r\n *\r\n * @typedef {Object} module:engine/model/schema~SchemaContextItem\r\n */\r\n\r\n/**\r\n * A structure containing additional metadata describing the attribute.\r\n *\r\n * See {@link module:engine/model/schema~Schema#setAttributeProperties `Schema#setAttributeProperties()`} for usage examples.\r\n *\r\n * @typedef {Object} module:engine/model/schema~AttributeProperties\r\n * @property {Boolean} [isFormatting] Indicates that the attribute should be considered as a visual formatting, like `bold`, `italic` or\r\n * `fontSize` rather than semantic attribute (such as `src`, `listType`, etc.). For example, it is used by the \"Remove format\" feature.\r\n * @property {Boolean} [copyOnEnter] Indicates that given text attribute should be copied to the next block when enter is pressed.\r\n */\r\n\r\nfunction compileBaseItemRule( sourceItemRules, itemName ) {\r\n\tconst itemRule = {\r\n\t\tname: itemName,\r\n\r\n\t\tallowIn: [],\r\n\t\tallowContentOf: [],\r\n\t\tallowWhere: [],\r\n\r\n\t\tallowAttributes: [],\r\n\t\tallowAttributesOf: [],\r\n\r\n\t\tinheritTypesFrom: []\r\n\t};\r\n\r\n\tcopyTypes( sourceItemRules, itemRule );\r\n\r\n\tcopyProperty( sourceItemRules, itemRule, 'allowIn' );\r\n\tcopyProperty( sourceItemRules, itemRule, 'allowContentOf' );\r\n\tcopyProperty( sourceItemRules, itemRule, 'allowWhere' );\r\n\r\n\tcopyProperty( sourceItemRules, itemRule, 'allowAttributes' );\r\n\tcopyProperty( sourceItemRules, itemRule, 'allowAttributesOf' );\r\n\r\n\tcopyProperty( sourceItemRules, itemRule, 'inheritTypesFrom' );\r\n\r\n\tmakeInheritAllWork( sourceItemRules, itemRule );\r\n\r\n\treturn itemRule;\r\n}\r\n\r\nfunction compileAllowContentOf( compiledDefinitions, itemName ) {\r\n\tfor ( const allowContentOfItemName of compiledDefinitions[ itemName ].allowContentOf ) {\r\n\t\t// The allowContentOf property may point to an unregistered element.\r\n\t\tif ( compiledDefinitions[ allowContentOfItemName ] ) {\r\n\t\t\tconst allowedChildren = getAllowedChildren( compiledDefinitions, allowContentOfItemName );\r\n\r\n\t\t\tallowedChildren.forEach( allowedItem => {\r\n\t\t\t\tallowedItem.allowIn.push( itemName );\r\n\t\t\t} );\r\n\t\t}\r\n\t}\r\n\r\n\tdelete compiledDefinitions[ itemName ].allowContentOf;\r\n}\r\n\r\nfunction compileAllowWhere( compiledDefinitions, itemName ) {\r\n\tfor ( const allowWhereItemName of compiledDefinitions[ itemName ].allowWhere ) {\r\n\t\tconst inheritFrom = compiledDefinitions[ allowWhereItemName ];\r\n\r\n\t\t// The allowWhere property may point to an unregistered element.\r\n\t\tif ( inheritFrom ) {\r\n\t\t\tconst allowedIn = inheritFrom.allowIn;\r\n\r\n\t\t\tcompiledDefinitions[ itemName ].allowIn.push( ...allowedIn );\r\n\t\t}\r\n\t}\r\n\r\n\tdelete compiledDefinitions[ itemName ].allowWhere;\r\n}\r\n\r\nfunction compileAllowAttributesOf( compiledDefinitions, itemName ) {\r\n\tfor ( const allowAttributeOfItem of compiledDefinitions[ itemName ].allowAttributesOf ) {\r\n\t\tconst inheritFrom = compiledDefinitions[ allowAttributeOfItem ];\r\n\r\n\t\tif ( inheritFrom ) {\r\n\t\t\tconst inheritAttributes = inheritFrom.allowAttributes;\r\n\r\n\t\t\tcompiledDefinitions[ itemName ].allowAttributes.push( ...inheritAttributes );\r\n\t\t}\r\n\t}\r\n\r\n\tdelete compiledDefinitions[ itemName ].allowAttributesOf;\r\n}\r\n\r\nfunction compileInheritPropertiesFrom( compiledDefinitions, itemName ) {\r\n\tconst item = compiledDefinitions[ itemName ];\r\n\r\n\tfor ( const inheritPropertiesOfItem of item.inheritTypesFrom ) {\r\n\t\tconst inheritFrom = compiledDefinitions[ inheritPropertiesOfItem ];\r\n\r\n\t\tif ( inheritFrom ) {\r\n\t\t\tconst typeNames = Object.keys( inheritFrom ).filter( name => name.startsWith( 'is' ) );\r\n\r\n\t\t\tfor ( const name of typeNames ) {\r\n\t\t\t\tif ( !( name in item ) ) {\r\n\t\t\t\t\titem[ name ] = inheritFrom[ name ];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tdelete item.inheritTypesFrom;\r\n}\r\n\r\n// Remove items which weren't registered (because it may break some checks or we'd need to complicate them).\r\n// Make sure allowIn doesn't contain repeated values.\r\nfunction cleanUpAllowIn( compiledDefinitions, itemName ) {\r\n\tconst itemRule = compiledDefinitions[ itemName ];\r\n\tconst existingItems = itemRule.allowIn.filter( itemToCheck => compiledDefinitions[ itemToCheck ] );\r\n\r\n\titemRule.allowIn = Array.from( new Set( existingItems ) );\r\n}\r\n\r\nfunction cleanUpAllowAttributes( compiledDefinitions, itemName ) {\r\n\tconst itemRule = compiledDefinitions[ itemName ];\r\n\r\n\titemRule.allowAttributes = Array.from( new Set( itemRule.allowAttributes ) );\r\n}\r\n\r\nfunction copyTypes( sourceItemRules, itemRule ) {\r\n\tfor ( const sourceItemRule of sourceItemRules ) {\r\n\t\tconst typeNames = Object.keys( sourceItemRule ).filter( name => name.startsWith( 'is' ) );\r\n\r\n\t\tfor ( const name of typeNames ) {\r\n\t\t\titemRule[ name ] = sourceItemRule[ name ];\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction copyProperty( sourceItemRules, itemRule, propertyName ) {\r\n\tfor ( const sourceItemRule of sourceItemRules ) {\r\n\t\tif ( typeof sourceItemRule[ propertyName ] == 'string' ) {\r\n\t\t\titemRule[ propertyName ].push( sourceItemRule[ propertyName ] );\r\n\t\t} else if ( Array.isArray( sourceItemRule[ propertyName ] ) ) {\r\n\t\t\titemRule[ propertyName ].push( ...sourceItemRule[ propertyName ] );\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction makeInheritAllWork( sourceItemRules, itemRule ) {\r\n\tfor ( const sourceItemRule of sourceItemRules ) {\r\n\t\tconst inheritFrom = sourceItemRule.inheritAllFrom;\r\n\r\n\t\tif ( inheritFrom ) {\r\n\t\t\titemRule.allowContentOf.push( inheritFrom );\r\n\t\t\titemRule.allowWhere.push( inheritFrom );\r\n\t\t\titemRule.allowAttributesOf.push( inheritFrom );\r\n\t\t\titemRule.inheritTypesFrom.push( inheritFrom );\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getAllowedChildren( compiledDefinitions, itemName ) {\r\n\tconst itemRule = compiledDefinitions[ itemName ];\r\n\r\n\treturn getValues( compiledDefinitions ).filter( def => def.allowIn.includes( itemRule.name ) );\r\n}\r\n\r\nfunction getValues( obj ) {\r\n\treturn Object.keys( obj ).map( key => obj[ key ] );\r\n}\r\n\r\nfunction mapContextItem( ctxItem ) {\r\n\tif ( typeof ctxItem == 'string' ) {\r\n\t\treturn {\r\n\t\t\tname: ctxItem,\r\n\r\n\t\t\t* getAttributeKeys() {},\r\n\r\n\t\t\tgetAttribute() {}\r\n\t\t};\r\n\t} else {\r\n\t\treturn {\r\n\t\t\t// '$text' means text nodes and text proxies.\r\n\t\t\tname: ctxItem.is( 'element' ) ? ctxItem.name : '$text',\r\n\r\n\t\t\t* getAttributeKeys() {\r\n\t\t\t\tyield* ctxItem.getAttributeKeys();\r\n\t\t\t},\r\n\r\n\t\t\tgetAttribute( key ) {\r\n\t\t\t\treturn ctxItem.getAttribute( key );\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n}\r\n\r\n// Generator function returning values from provided walkers, switching between them at each iteration. If only one walker\r\n// is provided it will return data only from that walker.\r\n//\r\n// @param {module:engine/module/treewalker~TreeWalker} [backward] Walker iterating in backward direction.\r\n// @param {module:engine/module/treewalker~TreeWalker} [forward] Walker iterating in forward direction.\r\n// @returns {Iterable.<Object>} Object returned at each iteration contains `value` and `walker` (informing which walker returned\r\n// given value) fields.\r\nfunction* combineWalkers( backward, forward ) {\r\n\tlet done = false;\r\n\r\n\twhile ( !done ) {\r\n\t\tdone = true;\r\n\r\n\t\tif ( backward ) {\r\n\t\t\tconst step = backward.next();\r\n\r\n\t\t\tif ( !step.done ) {\r\n\t\t\t\tdone = false;\r\n\t\t\t\tyield {\r\n\t\t\t\t\twalker: backward,\r\n\t\t\t\t\tvalue: step.value\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( forward ) {\r\n\t\t\tconst step = forward.next();\r\n\r\n\t\t\tif ( !step.done ) {\r\n\t\t\t\tdone = false;\r\n\t\t\t\tyield {\r\n\t\t\t\t\twalker: forward,\r\n\t\t\t\t\tvalue: step.value\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Takes an array of non-intersecting ranges. For each of them gets minimal flat ranges covering that range and returns\r\n// all those minimal flat ranges.\r\n//\r\n// @param {Array.<module:engine/model/range~Range>} ranges Ranges to process.\r\n// @returns {Iterable.<module:engine/model/range~Range>} Minimal flat ranges of given `ranges`.\r\nfunction* convertToMinimalFlatRanges( ranges ) {\r\n\tfor ( const range of ranges ) {\r\n\t\tyield* range.getMinimalFlatRanges();\r\n\t}\r\n}\r\n\r\nfunction removeDisallowedAttributeFromNode( schema, node, writer ) {\r\n\tfor ( const attribute of node.getAttributeKeys() ) {\r\n\t\tif ( !schema.checkAttribute( node, attribute ) ) {\r\n\t\t\twriter.removeAttribute( attribute, node );\r\n\t\t}\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/selection\r\n */\r\n\r\nimport Position from './position';\r\nimport Node from './node';\r\nimport Range from './range';\r\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\r\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\r\n\r\n/**\r\n * Selection is a set of {@link module:engine/model/range~Range ranges}. It has a direction specified by its\r\n * {@link module:engine/model/selection~Selection#anchor anchor} and {@link module:engine/model/selection~Selection#focus focus}\r\n * (it can be {@link module:engine/model/selection~Selection#isBackward forward or backward}).\r\n * Additionally, selection may have its own attributes (think – whether text typed in in this selection\r\n * should have those attributes – e.g. whether you type a bolded text).\r\n *\r\n * @mixes module:utils/emittermixin~EmitterMixin\r\n */\r\nexport default class Selection {\r\n\t/**\r\n\t * Creates a new selection instance based on the given {@link module:engine/model/selection~Selectable selectable}\r\n\t * or creates an empty selection if no arguments were passed.\r\n\t *\r\n\t *\t\t// Creates empty selection without ranges.\r\n\t *\t\tconst selection = writer.createSelection();\r\n\t *\r\n\t *\t\t// Creates selection at the given range.\r\n\t *\t\tconst range = writer.createRange( start, end );\r\n\t *\t\tconst selection = writer.createSelection( range );\r\n\t *\r\n\t *\t\t// Creates selection at the given ranges\r\n\t *\t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\r\n\t *\t\tconst selection = writer.createSelection( ranges );\r\n\t *\r\n\t *\t\t// Creates selection from the other selection.\r\n\t *\t\t// Note: It doesn't copies selection attributes.\r\n\t *\t\tconst otherSelection = writer.createSelection();\r\n\t *\t\tconst selection = writer.createSelection( otherSelection );\r\n\t *\r\n\t *\t\t// Creates selection from the given document selection.\r\n\t *\t\t// Note: It doesn't copies selection attributes.\r\n\t *\t\tconst documentSelection = model.document.selection;\r\n\t *\t\tconst selection = writer.createSelection( documentSelection );\r\n\t *\r\n\t *\t\t// Creates selection at the given position.\r\n\t *\t\tconst position = writer.createPositionFromPath( root, path );\r\n\t *\t\tconst selection = writer.createSelection( position );\r\n\t *\r\n\t *\t\t// Creates selection at the given offset in the given element.\r\n\t *\t\tconst paragraph = writer.createElement( 'paragraph' );\r\n\t *\t\tconst selection = writer.createSelection( paragraph, offset );\r\n\t *\r\n\t *\t\t// Creates a range inside an {@link module:engine/model/element~Element element} which starts before the\r\n\t *\t\t// first child of that element and ends after the last child of that element.\r\n\t *\t\tconst selection = writer.createSelection( paragraph, 'in' );\r\n\t *\r\n\t *\t\t// Creates a range on an {@link module:engine/model/item~Item item} which starts before the item and ends\r\n\t *\t\t// just after the item.\r\n\t *\t\tconst selection = writer.createSelection( paragraph, 'on' );\r\n\t *\r\n\t * Selection's constructor allow passing additional options (`'backward'`) as the last argument.\r\n\t *\r\n\t *\t\t// Creates backward selection.\r\n\t *\t\tconst selection = writer.createSelection( range, { backward: true } );\r\n\t *\r\n\t * @param {module:engine/model/selection~Selectable} selectable\r\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\r\n\t * @param {Object} [options]\r\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\r\n\t */\r\n\tconstructor( selectable, placeOrOffset, options ) {\r\n\t\t/**\r\n\t\t * Specifies whether the last added range was added as a backward or forward range.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {Boolean}\r\n\t\t */\r\n\t\tthis._lastRangeBackward = false;\r\n\r\n\t\t/**\r\n\t\t * Stores selection ranges.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @type {Array.<module:engine/model/range~Range>}\r\n\t\t */\r\n\t\tthis._ranges = [];\r\n\r\n\t\t/**\r\n\t\t * List of attributes set on current selection.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @type {Map.<String,*>}\r\n\t\t */\r\n\t\tthis._attrs = new Map();\r\n\r\n\t\tif ( selectable ) {\r\n\t\t\tthis.setTo( selectable, placeOrOffset, options );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Selection anchor. Anchor is the position from which the selection was started. If a user is making a selection\r\n\t * by dragging the mouse, the anchor is where the user pressed the mouse button (the beggining of the selection).\r\n\t *\r\n\t * Anchor and {@link #focus} define the direction of the selection, which is important\r\n\t * when expanding/shrinking selection. The focus moves, while the anchor should remain in the same place.\r\n\t *\r\n\t * Anchor is always set to the {@link module:engine/model/range~Range#start start} or\r\n\t * {@link module:engine/model/range~Range#end end} position of the last of selection's ranges. Whether it is\r\n\t * the `start` or `end` depends on the specified `options.backward`. See the {@link #setTo `setTo()`} method.\r\n\t *\r\n\t * May be set to `null` if there are no ranges in the selection.\r\n\t *\r\n\t * @see #focus\r\n\t * @readonly\r\n\t * @type {module:engine/model/position~Position|null}\r\n\t */\r\n\tget anchor() {\r\n\t\tif ( this._ranges.length > 0 ) {\r\n\t\t\tconst range = this._ranges[ this._ranges.length - 1 ];\r\n\r\n\t\t\treturn this._lastRangeBackward ? range.end : range.start;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Selection focus. Focus is the position where the selection ends. If a user is making a selection\r\n\t * by dragging the mouse, the focus is where the mouse cursor is.\r\n\t *\r\n\t * May be set to `null` if there are no ranges in the selection.\r\n\t *\r\n\t * @see #anchor\r\n\t * @readonly\r\n\t * @type {module:engine/model/position~Position|null}\r\n\t */\r\n\tget focus() {\r\n\t\tif ( this._ranges.length > 0 ) {\r\n\t\t\tconst range = this._ranges[ this._ranges.length - 1 ];\r\n\r\n\t\t\treturn this._lastRangeBackward ? range.start : range.end;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Whether the selection is collapsed. Selection is collapsed when there is exactly one range in it\r\n\t * and it is collapsed.\r\n\t *\r\n\t * @readonly\r\n\t * @type {Boolean}\r\n\t */\r\n\tget isCollapsed() {\r\n\t\tconst length = this._ranges.length;\r\n\r\n\t\tif ( length === 1 ) {\r\n\t\t\treturn this._ranges[ 0 ].isCollapsed;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of ranges in the selection.\r\n\t *\r\n\t * @readonly\r\n\t * @type {Number}\r\n\t */\r\n\tget rangeCount() {\r\n\t\treturn this._ranges.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether the selection's {@link #focus} precedes the selection's {@link #anchor}.\r\n\t *\r\n\t * @readonly\r\n\t * @type {Boolean}\r\n\t */\r\n\tget isBackward() {\r\n\t\treturn !this.isCollapsed && this._lastRangeBackward;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this selection is equal to the given selection. Selections are equal if they have the same directions,\r\n\t * the same number of ranges and all ranges from one selection equal to ranges from the another selection.\r\n\t *\r\n\t * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} otherSelection\r\n\t * Selection to compare with.\r\n\t * @returns {Boolean} `true` if selections are equal, `false` otherwise.\r\n\t */\r\n\tisEqual( otherSelection ) {\r\n\t\tif ( this.rangeCount != otherSelection.rangeCount ) {\r\n\t\t\treturn false;\r\n\t\t} else if ( this.rangeCount === 0 ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tif ( !this.anchor.isEqual( otherSelection.anchor ) || !this.focus.isEqual( otherSelection.focus ) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tfor ( const thisRange of this._ranges ) {\r\n\t\t\tlet found = false;\r\n\r\n\t\t\tfor ( const otherRange of otherSelection._ranges ) {\r\n\t\t\t\tif ( thisRange.isEqual( otherRange ) ) {\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( !found ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an iterable object that iterates over copies of selection ranges.\r\n\t *\r\n\t * @returns {Iterable.<module:engine/model/range~Range>}\r\n\t */\r\n\t* getRanges() {\r\n\t\tfor ( const range of this._ranges ) {\r\n\t\t\tyield new Range( range.start, range.end );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a copy of the first range in the selection.\r\n\t * First range is the one which {@link module:engine/model/range~Range#start start} position\r\n\t * {@link module:engine/model/position~Position#isBefore is before} start position of all other ranges\r\n\t * (not to confuse with the first range added to the selection).\r\n\t *\r\n\t * Returns `null` if there are no ranges in selection.\r\n\t *\r\n\t * @returns {module:engine/model/range~Range|null}\r\n\t */\r\n\tgetFirstRange() {\r\n\t\tlet first = null;\r\n\r\n\t\tfor ( const range of this._ranges ) {\r\n\t\t\tif ( !first || range.start.isBefore( first.start ) ) {\r\n\t\t\t\tfirst = range;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn first ? new Range( first.start, first.end ) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a copy of the last range in the selection.\r\n\t * Last range is the one which {@link module:engine/model/range~Range#end end} position\r\n\t * {@link module:engine/model/position~Position#isAfter is after} end position of all other ranges (not to confuse with the range most\r\n\t * recently added to the selection).\r\n\t *\r\n\t * Returns `null` if there are no ranges in selection.\r\n\t *\r\n\t * @returns {module:engine/model/range~Range|null}\r\n\t */\r\n\tgetLastRange() {\r\n\t\tlet last = null;\r\n\r\n\t\tfor ( const range of this._ranges ) {\r\n\t\t\tif ( !last || range.end.isAfter( last.end ) ) {\r\n\t\t\t\tlast = range;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn last ? new Range( last.start, last.end ) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the first position in the selection.\r\n\t * First position is the position that {@link module:engine/model/position~Position#isBefore is before}\r\n\t * any other position in the selection.\r\n\t *\r\n\t * Returns `null` if there are no ranges in selection.\r\n\t *\r\n\t * @returns {module:engine/model/position~Position|null}\r\n\t */\r\n\tgetFirstPosition() {\r\n\t\tconst first = this.getFirstRange();\r\n\r\n\t\treturn first ? first.start.clone() : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the last position in the selection.\r\n\t * Last position is the position that {@link module:engine/model/position~Position#isAfter is after}\r\n\t * any other position in the selection.\r\n\t *\r\n\t * Returns `null` if there are no ranges in selection.\r\n\t *\r\n\t * @returns {module:engine/model/position~Position|null}\r\n\t */\r\n\tgetLastPosition() {\r\n\t\tconst lastRange = this.getLastRange();\r\n\r\n\t\treturn lastRange ? lastRange.end.clone() : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this selection's ranges and direction to the specified location based on the given\r\n\t * {@link module:engine/model/selection~Selectable selectable}.\r\n\t *\r\n\t *\t\t// Removes all selection's ranges.\r\n\t *\t\tselection.setTo( null );\r\n\t *\r\n\t *\t\t// Sets selection to the given range.\r\n\t *\t\tconst range = writer.createRange( start, end );\r\n\t *\t\tselection.setTo( range );\r\n\t *\r\n\t *\t\t// Sets selection to given ranges.\r\n\t *\t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\r\n\t *\t\tselection.setTo( ranges );\r\n\t *\r\n\t *\t\t// Sets selection to other selection.\r\n\t *\t\t// Note: It doesn't copies selection attributes.\r\n\t *\t\tconst otherSelection = writer.createSelection();\r\n\t *\t\tselection.setTo( otherSelection );\r\n\t *\r\n\t *\t\t// Sets selection to the given document selection.\r\n\t *\t\t// Note: It doesn't copies selection attributes.\r\n\t *\t\tconst documentSelection = new DocumentSelection( doc );\r\n\t *\t\tselection.setTo( documentSelection );\r\n\t *\r\n\t *\t\t// Sets collapsed selection at the given position.\r\n\t *\t\tconst position = writer.createPositionFromPath( root, path );\r\n\t *\t\tselection.setTo( position );\r\n\t *\r\n\t *\t\t// Sets collapsed selection at the position of the given node and an offset.\r\n\t *\t\tselection.setTo( paragraph, offset );\r\n\t *\r\n\t * Creates a range inside an {@link module:engine/model/element~Element element} which starts before the first child of\r\n \t * that element and ends after the last child of that element.\r\n\t *\r\n\t *\t\tselection.setTo( paragraph, 'in' );\r\n\t *\r\n\t * Creates a range on an {@link module:engine/model/item~Item item} which starts before the item and ends just after the item.\r\n\t *\r\n\t *\t\tselection.setTo( paragraph, 'on' );\r\n\t *\r\n\t * `Selection#setTo()`' method allow passing additional options (`backward`) as the last argument.\r\n\t *\r\n\t *\t\t// Sets backward selection.\r\n\t *\t\tconst selection = writer.createSelection( range, { backward: true } );\r\n\t *\r\n\t * @param {module:engine/model/selection~Selectable} selectable\r\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\r\n\t * @param {Object} [options]\r\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\r\n\t */\r\n\tsetTo( selectable, placeOrOffset, options ) {\r\n\t\tif ( selectable === null ) {\r\n\t\t\tthis._setRanges( [] );\r\n\t\t} else if ( selectable instanceof Selection ) {\r\n\t\t\tthis._setRanges( selectable.getRanges(), selectable.isBackward );\r\n\t\t} else if ( selectable && typeof selectable.getRanges == 'function' ) {\r\n\t\t\t// We assume that the selectable is a DocumentSelection.\r\n\t\t\t// It can't be imported here, because it would lead to circular imports.\r\n\t\t\tthis._setRanges( selectable.getRanges(), selectable.isBackward );\r\n\t\t} else if ( selectable instanceof Range ) {\r\n\t\t\tthis._setRanges( [ selectable ], !!placeOrOffset && !!placeOrOffset.backward );\r\n\t\t} else if ( selectable instanceof Position ) {\r\n\t\t\tthis._setRanges( [ new Range( selectable ) ] );\r\n\t\t} else if ( selectable instanceof Node ) {\r\n\t\t\tconst backward = !!options && !!options.backward;\r\n\t\t\tlet range;\r\n\r\n\t\t\tif ( placeOrOffset == 'in' ) {\r\n\t\t\t\trange = Range._createIn( selectable );\r\n\t\t\t} else if ( placeOrOffset == 'on' ) {\r\n\t\t\t\trange = Range._createOn( selectable );\r\n\t\t\t} else if ( placeOrOffset !== undefined ) {\r\n\t\t\t\trange = new Range( Position._createAt( selectable, placeOrOffset ) );\r\n\t\t\t} else {\r\n\t\t\t\t/**\r\n\t\t\t\t * selection.setTo requires the second parameter when the first parameter is a node.\r\n\t\t\t\t *\r\n\t\t\t\t * @error model-selection-setTo-required-second-parameter\r\n\t\t\t\t */\r\n\t\t\t\tthrow new CKEditorError(\r\n\t\t\t\t\t'model-selection-setTo-required-second-parameter: ' +\r\n\t\t\t\t\t'selection.setTo requires the second parameter when the first parameter is a node.',\r\n\t\t\t\t\t[ this, selectable ]\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tthis._setRanges( [ range ], backward );\r\n\t\t} else if ( isIterable( selectable ) ) {\r\n\t\t\t// We assume that the selectable is an iterable of ranges.\r\n\t\t\tthis._setRanges( selectable, placeOrOffset && !!placeOrOffset.backward );\r\n\t\t} else {\r\n\t\t\t/**\r\n\t\t\t * Cannot set the selection to the given place.\r\n\t\t\t *\r\n\t\t\t * Invalid parameters were specified when setting the selection. Common issues:\r\n\t\t\t *\r\n\t\t\t * * A {@link module:engine/model/textproxy~TextProxy} instance was passed instead of\r\n\t\t\t * a real {@link module:engine/model/text~Text}.\r\n\t\t\t * * View nodes were passed instead of model nodes.\r\n\t\t\t * * `null`/`undefined` was passed.\r\n\t\t\t *\r\n\t\t\t * @error model-selection-setTo-not-selectable\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'model-selection-setTo-not-selectable: Cannot set the selection to the given place.',\r\n\t\t\t\t[ this, selectable ]\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces all ranges that were added to the selection with given array of ranges. Last range of the array\r\n\t * is treated like the last added range and is used to set {@link module:engine/model/selection~Selection#anchor} and\r\n\t * {@link module:engine/model/selection~Selection#focus}. Accepts a flag describing in which direction the selection is made.\r\n\t *\r\n\t * @protected\r\n\t * @fires change:range\r\n\t * @param {Iterable.<module:engine/model/range~Range>} newRanges Ranges to set.\r\n\t * @param {Boolean} [isLastBackward=false] Flag describing if last added range was selected forward - from start to end (`false`)\r\n\t * or backward - from end to start (`true`).\r\n\t */\r\n\t_setRanges( newRanges, isLastBackward = false ) {\r\n\t\tnewRanges = Array.from( newRanges );\r\n\r\n\t\t// Check whether there is any range in new ranges set that is different than all already added ranges.\r\n\t\tconst anyNewRange = newRanges.some( newRange => {\r\n\t\t\tif ( !( newRange instanceof Range ) ) {\r\n\t\t\t\t/**\r\n\t\t\t\t * Selection range set to an object that is not an instance of {@link module:engine/model/range~Range}.\r\n\t\t\t\t *\r\n\t\t\t\t * Only {@link module:engine/model/range~Range} instances can be used to set a selection.\r\n\t\t\t\t * Common mistakes leading to this error are:\r\n\t\t\t\t *\r\n\t\t\t\t * * using DOM `Range` object,\r\n\t\t\t\t * * incorrect CKEditor 5 installation with multiple `ckeditor5-engine` packages having different versions.\r\n\t\t\t\t *\r\n\t\t\t\t * @error model-selection-set-ranges-not-range\r\n\t\t\t\t */\r\n\t\t\t\tthrow new CKEditorError(\r\n\t\t\t\t\t'model-selection-set-ranges-not-range: ' +\r\n\t\t\t\t\t'Selection range set to an object that is not an instance of model.Range.',\r\n\t\t\t\t\t[ this, newRanges ]\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\treturn this._ranges.every( oldRange => {\r\n\t\t\t\treturn !oldRange.isEqual( newRange );\r\n\t\t\t} );\r\n\t\t} );\r\n\r\n\t\t// Don't do anything if nothing changed.\r\n\t\tif ( newRanges.length === this._ranges.length && !anyNewRange ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._removeAllRanges();\r\n\r\n\t\tfor ( const range of newRanges ) {\r\n\t\t\tthis._pushRange( range );\r\n\t\t}\r\n\r\n\t\tthis._lastRangeBackward = !!isLastBackward;\r\n\r\n\t\tthis.fire( 'change:range', { directChange: true } );\r\n\t}\r\n\r\n\t/**\r\n\t * Moves {@link module:engine/model/selection~Selection#focus} to the specified location.\r\n\t *\r\n\t * The location can be specified in the same form as\r\n\t * {@link module:engine/model/writer~Writer#createPositionAt writer.createPositionAt()} parameters.\r\n\t *\r\n\t * @fires change:range\r\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\r\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\r\n\t * first parameter is a {@link module:engine/model/item~Item model item}.\r\n\t */\r\n\tsetFocus( itemOrPosition, offset ) {\r\n\t\tif ( this.anchor === null ) {\r\n\t\t\t/**\r\n\t\t\t * Cannot set selection focus if there are no ranges in selection.\r\n\t\t\t *\r\n\t\t\t * @error model-selection-setFocus-no-ranges\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'model-selection-setFocus-no-ranges: Cannot set selection focus if there are no ranges in selection.',\r\n\t\t\t\t[ this, itemOrPosition ]\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tconst newFocus = Position._createAt( itemOrPosition, offset );\r\n\r\n\t\tif ( newFocus.compareWith( this.focus ) == 'same' ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst anchor = this.anchor;\r\n\r\n\t\tif ( this._ranges.length ) {\r\n\t\t\tthis._popRange();\r\n\t\t}\r\n\r\n\t\tif ( newFocus.compareWith( anchor ) == 'before' ) {\r\n\t\t\tthis._pushRange( new Range( newFocus, anchor ) );\r\n\t\t\tthis._lastRangeBackward = true;\r\n\t\t} else {\r\n\t\t\tthis._pushRange( new Range( anchor, newFocus ) );\r\n\t\t\tthis._lastRangeBackward = false;\r\n\t\t}\r\n\r\n\t\tthis.fire( 'change:range', { directChange: true } );\r\n\t}\r\n\r\n\t/**\r\n\t * Gets an attribute value for given key or `undefined` if that attribute is not set on the selection.\r\n\t *\r\n\t * @param {String} key Key of attribute to look for.\r\n\t * @returns {*} Attribute value or `undefined`.\r\n\t */\r\n\tgetAttribute( key ) {\r\n\t\treturn this._attrs.get( key );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns iterable that iterates over this selection's attributes.\r\n\t *\r\n\t * Attributes are returned as arrays containing two items. First one is attribute key and second is attribute value.\r\n\t * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\r\n\t *\r\n\t * @returns {Iterable.<*>}\r\n\t */\r\n\tgetAttributes() {\r\n\t\treturn this._attrs.entries();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns iterable that iterates over this selection's attribute keys.\r\n\t *\r\n\t * @returns {Iterable.<String>}\r\n\t */\r\n\tgetAttributeKeys() {\r\n\t\treturn this._attrs.keys();\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the selection has an attribute for given key.\r\n\t *\r\n\t * @param {String} key Key of attribute to check.\r\n\t * @returns {Boolean} `true` if attribute with given key is set on selection, `false` otherwise.\r\n\t */\r\n\thasAttribute( key ) {\r\n\t\treturn this._attrs.has( key );\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an attribute with given key from the selection.\r\n\t *\r\n\t * If given attribute was set on the selection, fires the {@link #event:change:range} event with\r\n\t * removed attribute key.\r\n\t *\r\n\t * @fires change:attribute\r\n\t * @param {String} key Key of attribute to remove.\r\n\t */\r\n\tremoveAttribute( key ) {\r\n\t\tif ( this.hasAttribute( key ) ) {\r\n\t\t\tthis._attrs.delete( key );\r\n\r\n\t\t\tthis.fire( 'change:attribute', { attributeKeys: [ key ], directChange: true } );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets attribute on the selection. If attribute with the same key already is set, it's value is overwritten.\r\n\t *\r\n\t * If the attribute value has changed, fires the {@link #event:change:range} event with\r\n\t * the attribute key.\r\n\t *\r\n\t * @fires change:attribute\r\n\t * @param {String} key Key of attribute to set.\r\n\t * @param {*} value Attribute value.\r\n\t */\r\n\tsetAttribute( key, value ) {\r\n\t\tif ( this.getAttribute( key ) !== value ) {\r\n\t\t\tthis._attrs.set( key, value );\r\n\r\n\t\t\tthis.fire( 'change:attribute', { attributeKeys: [ key ], directChange: true } );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the selected element. {@link module:engine/model/element~Element Element} is considered as selected if there is only\r\n\t * one range in the selection, and that range contains exactly one element.\r\n\t * Returns `null` if there is no selected element.\r\n\t *\r\n\t * @returns {module:engine/model/element~Element|null}\r\n\t */\r\n\tgetSelectedElement() {\r\n\t\tif ( this.rangeCount !== 1 ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn this.getFirstRange().getContainedElement();\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this object is of the given.\r\n\t *\r\n\t *\t\tselection.is( 'selection' ); // -> true\r\n\t *\t\tselection.is( 'model:selection' ); // -> true\r\n\t *\r\n\t *\t\tselection.is( 'view:selection' ); // -> false\r\n\t *\t\tselection.is( 'range' ); // -> false\r\n\t *\r\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\r\n\t *\r\n\t * @param {String} type\r\n\t * @returns {Boolean}\r\n\t */\r\n\tis( type ) {\r\n\t\treturn type == 'selection' || type == 'model:selection';\r\n\t}\r\n\r\n\t/**\r\n\t * Gets elements of type {@link module:engine/model/schema~Schema#isBlock \"block\"} touched by the selection.\r\n\t *\r\n\t * This method's result can be used for example to apply block styling to all blocks covered by this selection.\r\n\t *\r\n\t * **Note:** `getSelectedBlocks()` returns blocks that are nested in other non-block elements\r\n\t * but will not return blocks nested in other blocks.\r\n\t *\r\n\t * In this case the function will return exactly all 3 paragraphs (note: `<blockQuote>` is not a block itself):\r\n\t *\r\n\t *\t\t<paragraph>[a</paragraph>\r\n\t *\t\t<blockQuote>\r\n\t *\t\t\t<paragraph>b</paragraph>\r\n\t *\t\t</blockQuote>\r\n\t *\t\t<paragraph>c]d</paragraph>\r\n\t *\r\n\t * In this case the paragraph will also be returned, despite the collapsed selection:\r\n\t *\r\n\t *\t\t<paragraph>[]a</paragraph>\r\n\t *\r\n\t * In such a scenario, however, only blocks A, B & E will be returned as blocks C & D are nested in block B:\r\n\t *\r\n\t *\t\t[<blockA></blockA>\r\n\t *\t\t<blockB>\r\n\t *\t\t\t<blockC></blockC>\r\n\t *\t\t\t<blockD></blockD>\r\n\t *\t\t</blockB>\r\n\t *\t\t<blockE></blockE>]\r\n\t *\r\n\t * If the selection is inside a block all the inner blocks (A & B) are returned:\r\n\t *\r\n\t * \t\t<block>\r\n\t *\t\t\t<blockA>[a</blockA>\r\n\t * \t\t\t<blockB>b]</blockB>\r\n\t * \t\t</block>\r\n\t *\r\n\t * **Special case**: If a selection ends at the beginning of a block, that block is not returned as from user perspective\r\n\t * this block wasn't selected. See [#984](https://github.com/ckeditor/ckeditor5-engine/issues/984) for more details.\r\n\t *\r\n\t *\t\t<paragraph>[a</paragraph>\r\n\t *\t\t<paragraph>b</paragraph>\r\n\t *\t\t<paragraph>]c</paragraph> // this block will not be returned\r\n\t *\r\n\t * @returns {Iterable.<module:engine/model/element~Element>}\r\n\t */\r\n\t* getSelectedBlocks() {\r\n\t\tconst visited = new WeakSet();\r\n\r\n\t\tfor ( const range of this.getRanges() ) {\r\n\t\t\t// Get start block of range in case of a collapsed range.\r\n\t\t\tconst startBlock = getParentBlock( range.start, visited );\r\n\r\n\t\t\tif ( startBlock && isTopBlockInRange( startBlock, range ) ) {\r\n\t\t\t\tyield startBlock;\r\n\t\t\t}\r\n\r\n\t\t\tfor ( const value of range.getWalker() ) {\r\n\t\t\t\tconst block = value.item;\r\n\r\n\t\t\t\tif ( value.type == 'elementEnd' && isUnvisitedTopBlock( block, visited, range ) ) {\r\n\t\t\t\t\tyield block;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst endBlock = getParentBlock( range.end, visited );\r\n\r\n\t\t\t// #984. Don't return the end block if the range ends right at its beginning.\r\n\t\t\tif ( endBlock && !range.end.isTouching( Position._createAt( endBlock, 0 ) ) && isTopBlockInRange( endBlock, range ) ) {\r\n\t\t\t\tyield endBlock;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether the selection contains the entire content of the given element. This means that selection must start\r\n\t * at a position {@link module:engine/model/position~Position#isTouching touching} the element's start and ends at position\r\n\t * touching the element's end.\r\n\t *\r\n\t * By default, this method will check whether the entire content of the selection's current root is selected.\r\n\t * Useful to check if e.g. the user has just pressed <kbd>Ctrl</kbd> + <kbd>A</kbd>.\r\n\t *\r\n\t * @param {module:engine/model/element~Element} [element=this.anchor.root]\r\n\t * @returns {Boolean}\r\n\t */\r\n\tcontainsEntireContent( element = this.anchor.root ) {\r\n\t\tconst limitStartPosition = Position._createAt( element, 0 );\r\n\t\tconst limitEndPosition = Position._createAt( element, 'end' );\r\n\r\n\t\treturn limitStartPosition.isTouching( this.getFirstPosition() ) &&\r\n\t\t\tlimitEndPosition.isTouching( this.getLastPosition() );\r\n\t}\r\n\r\n\t/**\r\n\t * Adds given range to internal {@link #_ranges ranges array}. Throws an error\r\n\t * if given range is intersecting with any range that is already stored in this selection.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/model/range~Range} range Range to add.\r\n\t */\r\n\t_pushRange( range ) {\r\n\t\tthis._checkRange( range );\r\n\t\tthis._ranges.push( new Range( range.start, range.end ) );\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if given range intersects with ranges that are already in the selection. Throws an error if it does.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/model/range~Range} range Range to check.\r\n\t */\r\n\t_checkRange( range ) {\r\n\t\tfor ( let i = 0; i < this._ranges.length; i++ ) {\r\n\t\t\tif ( range.isIntersecting( this._ranges[ i ] ) ) {\r\n\t\t\t\t/**\r\n\t\t\t\t * Trying to add a range that intersects with another range in the selection.\r\n\t\t\t\t *\r\n\t\t\t\t * @error model-selection-range-intersects\r\n\t\t\t\t * @param {module:engine/model/range~Range} addedRange Range that was added to the selection.\r\n\t\t\t\t * @param {module:engine/model/range~Range} intersectingRange Range in the selection that intersects with `addedRange`.\r\n\t\t\t\t */\r\n\t\t\t\tthrow new CKEditorError(\r\n\t\t\t\t\t'model-selection-range-intersects: Trying to add a range that intersects with another range in the selection.',\r\n\t\t\t\t\t[ this, range ],\r\n\t\t\t\t\t{ addedRange: range, intersectingRange: this._ranges[ i ] }\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Deletes ranges from internal range array. Uses {@link #_popRange _popRange} to\r\n\t * ensure proper ranges removal.\r\n\t *\r\n\t * @protected\r\n\t */\r\n\t_removeAllRanges() {\r\n\t\twhile ( this._ranges.length > 0 ) {\r\n\t\t\tthis._popRange();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes most recently added range from the selection.\r\n\t *\r\n\t * @protected\r\n\t */\r\n\t_popRange() {\r\n\t\tthis._ranges.pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Fired when selection range(s) changed.\r\n\t *\r\n\t * @event change:range\r\n\t * @param {Boolean} directChange In case of {@link module:engine/model/selection~Selection} class it is always set\r\n\t * to `true` which indicates that the selection change was caused by a direct use of selection's API.\r\n\t * The {@link module:engine/model/documentselection~DocumentSelection}, however, may change because its position\r\n\t * was directly changed through the {@link module:engine/model/writer~Writer writer} or because its position was\r\n\t * changed because the structure of the model has been changed (which means an indirect change).\r\n\t * The indirect change does not occur in case of normal (detached) selections because they are \"static\" (as \"not live\")\r\n\t * which mean that they are not updated once the document changes.\r\n\t */\r\n\r\n\t/**\r\n\t * Fired when selection attribute changed.\r\n\t *\r\n\t * @event change:attribute\r\n\t * @param {Boolean} directChange In case of {@link module:engine/model/selection~Selection} class it is always set\r\n\t * to `true` which indicates that the selection change was caused by a direct use of selection's API.\r\n\t * The {@link module:engine/model/documentselection~DocumentSelection}, however, may change because its attributes\r\n\t * were directly changed through the {@link module:engine/model/writer~Writer writer} or because its position was\r\n\t * changed in the model and its attributes were refreshed (which means an indirect change).\r\n\t * The indirect change does not occur in case of normal (detached) selections because they are \"static\" (as \"not live\")\r\n\t * which mean that they are not updated once the document changes.\r\n\t * @param {Array.<String>} attributeKeys Array containing keys of attributes that changed.\r\n\t */\r\n}\r\n\r\nmix( Selection, EmitterMixin );\r\n\r\n// Checks whether the given element extends $block in the schema and has a parent (is not a root).\r\n// Marks it as already visited.\r\nfunction isUnvisitedBlock( element, visited ) {\r\n\tif ( visited.has( element ) ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tvisited.add( element );\r\n\r\n\treturn element.root.document.model.schema.isBlock( element ) && element.parent;\r\n}\r\n\r\n// Checks if the given element is a $block was not previously visited and is a top block in a range.\r\nfunction isUnvisitedTopBlock( element, visited, range ) {\r\n\treturn isUnvisitedBlock( element, visited ) && isTopBlockInRange( element, range );\r\n}\r\n\r\n// Finds the lowest element in position's ancestors which is a block.\r\n// It will search until first ancestor that is a limit element.\r\n// Marks all ancestors as already visited to not include any of them later on.\r\nfunction getParentBlock( position, visited ) {\r\n\tconst element = position.parent;\r\n\tconst schema = element.root.document.model.schema;\r\n\r\n\tconst ancestors = position.parent.getAncestors( { parentFirst: true, includeSelf: true } );\r\n\r\n\tlet hasParentLimit = false;\r\n\r\n\tconst block = ancestors.find( element => {\r\n\t\t// Stop searching after first parent node that is limit element.\r\n\t\tif ( hasParentLimit ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\thasParentLimit = schema.isLimit( element );\r\n\r\n\t\treturn !hasParentLimit && isUnvisitedBlock( element, visited );\r\n\t} );\r\n\r\n\t// Mark all ancestors of this position's parent, because find() might've stopped early and\r\n\t// the found block may be a child of another block.\r\n\tancestors.forEach( element => visited.add( element ) );\r\n\r\n\treturn block;\r\n}\r\n\r\n// Checks if the blocks is not nested in other block inside a range.\r\n//\r\n// @param {module:engine/model/elmenent~Element} block Block to check.\r\n// @param {module:engine/model/range~Range} range Range to check.\r\nfunction isTopBlockInRange( block, range ) {\r\n\tconst parentBlock = findAncestorBlock( block );\r\n\r\n\tif ( !parentBlock ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Add loose flag to check as parentRange can be equal to range.\r\n\tconst isParentInRange = range.containsRange( Range._createOn( parentBlock ), true );\r\n\r\n\treturn !isParentInRange;\r\n}\r\n\r\n// Returns first ancestor block of a node.\r\n//\r\n// @param {module:engine/model/node~Node} node\r\n// @returns {module:engine/model/node~Node|undefined}\r\nfunction findAncestorBlock( node ) {\r\n\tconst schema = node.root.document.model.schema;\r\n\r\n\tlet parent = node.parent;\r\n\r\n\twhile ( parent ) {\r\n\t\tif ( schema.isBlock( parent ) ) {\r\n\t\t\treturn parent;\r\n\t\t}\r\n\r\n\t\tparent = parent.parent;\r\n\t}\r\n}\r\n\r\n/**\r\n * An entity that is used to set selection.\r\n *\r\n * See also {@link module:engine/model/selection~Selection#setTo}\r\n *\r\n * @typedef {\r\n *     module:engine/model/selection~Selection|\r\n *     module:engine/model/documentselection~DocumentSelection|\r\n *     module:engine/model/position~Position|\r\n *     module:engine/model/range~Range|\r\n *     module:engine/model/node~Node|\r\n *     Iterable.<module:engine/model/range~Range>|\r\n *     null\r\n * } module:engine/model/selection~Selectable\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/text\r\n */\r\n\r\nimport Node from './node';\r\n\r\n// @if CK_DEBUG_ENGINE // const { convertMapToStringifiedObject } = require( '../dev-utils/utils' );\r\n\r\n/**\r\n * Model text node. Type of {@link module:engine/model/node~Node node} that contains {@link module:engine/model/text~Text#data text data}.\r\n *\r\n * **Important:** see {@link module:engine/model/node~Node} to read about restrictions using `Text` and `Node` API.\r\n *\r\n * **Note:** keep in mind that `Text` instances might indirectly got removed from model tree when model is changed.\r\n * This happens when {@link module:engine/model/writer~Writer model writer} is used to change model and the text node is merged with\r\n * another text node. Then, both text nodes are removed and a new text node is inserted into the model. Because of\r\n * this behavior, keeping references to `Text` is not recommended. Instead, consider creating\r\n * {@link module:engine/model/liveposition~LivePosition live position} placed before the text node.\r\n *\r\n * @extends module:engine/model/node~Node\r\n */\r\nexport default class Text extends Node {\r\n\t/**\r\n\t * Creates a text node.\r\n\t *\r\n\t * **Note:** Constructor of this class shouldn't be used directly in the code.\r\n\t * Use the {@link module:engine/model/writer~Writer#createText} method instead.\r\n\t *\r\n\t * @protected\r\n\t * @param {String} data Node's text.\r\n\t * @param {Object} [attrs] Node's attributes. See {@link module:utils/tomap~toMap} for a list of accepted values.\r\n\t */\r\n\tconstructor( data, attrs ) {\r\n\t\tsuper( attrs );\r\n\r\n\t\t/**\r\n\t\t * Text data contained in this text node.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @type {String}\r\n\t\t */\r\n\t\tthis._data = data || '';\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tget offsetSize() {\r\n\t\treturn this.data.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a text data contained in the node.\r\n\t *\r\n\t * @readonly\r\n\t * @type {String}\r\n\t */\r\n\tget data() {\r\n\t\treturn this._data;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this object is of the given.\r\n\t *\r\n\t *\t\ttext.is( 'text' ); // -> true\r\n\t *\t\ttext.is( 'node' ); // -> true\r\n\t *\t\ttext.is( 'model:text' ); // -> true\r\n\t *\t\ttext.is( 'model:node' ); // -> true\r\n\t *\r\n\t *\t\ttext.is( 'view:text' ); // -> false\r\n\t *\t\ttext.is( 'documentSelection' ); // -> false\r\n\t *\r\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\r\n\t *\r\n\t * @param {String} type Type to check when `name` parameter is present.\r\n\t * Otherwise, it acts like the `name` parameter.\r\n\t * @returns {Boolean}\r\n\t */\r\n\tis( type ) {\r\n\t\treturn type == 'text' || type == 'model:text' || super.is( type );\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `Text` instance to plain object and returns it.\r\n\t *\r\n\t * @returns {Object} `Text` instance converted to plain object.\r\n\t */\r\n\ttoJSON() {\r\n\t\tconst json = super.toJSON();\r\n\r\n\t\tjson.data = this.data;\r\n\r\n\t\treturn json;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of this text node and returns it. Created text node has same text data and attributes as original text node.\r\n\t *\r\n\t * @protected\r\n\t * @returns {module:engine/model/text~Text} `Text` instance created using given plain object.\r\n\t */\r\n\t_clone() {\r\n\t\treturn new Text( this.data, this.getAttributes() );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a `Text` instance from given plain object (i.e. parsed JSON string).\r\n\t *\r\n\t * @param {Object} json Plain object to be converted to `Text`.\r\n\t * @returns {module:engine/model/text~Text} `Text` instance created using given plain object.\r\n\t */\r\n\tstatic fromJSON( json ) {\r\n\t\treturn new Text( json.data, json.attributes );\r\n\t}\r\n\r\n\t// @if CK_DEBUG_ENGINE // toString() {\r\n\t// @if CK_DEBUG_ENGINE // \treturn `#${ this.data }`;\r\n\t// @if CK_DEBUG_ENGINE // }\r\n\r\n\t// @if CK_DEBUG_ENGINE // logExtended() {\r\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( `ModelText: ${ this }, attrs: ${ convertMapToStringifiedObject( this.getAttributes() ) }` );\r\n\t// @if CK_DEBUG_ENGINE // }\r\n\r\n\t// @if CK_DEBUG_ENGINE // log() {\r\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ModelText: ' + this );\r\n\t// @if CK_DEBUG_ENGINE // }\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/textproxy\r\n */\r\n\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\n\r\n// @if CK_DEBUG_ENGINE // const { convertMapToStringifiedObject } = require( '../dev-utils/utils' );\r\n\r\n/**\r\n * `TextProxy` represents a part of {@link module:engine/model/text~Text text node}.\r\n *\r\n * Since {@link module:engine/model/position~Position positions} can be placed between characters of a text node,\r\n * {@link module:engine/model/range~Range ranges} may contain only parts of text nodes. When {@link module:engine/model/range~Range#getItems\r\n * getting items}\r\n * contained in such range, we need to represent a part of that text node, since returning the whole text node would be incorrect.\r\n * `TextProxy` solves this issue.\r\n *\r\n * `TextProxy` has an API similar to {@link module:engine/model/text~Text Text} and allows to do most of the common tasks performed\r\n * on model nodes.\r\n *\r\n * **Note:** Some `TextProxy` instances may represent whole text node, not just a part of it.\r\n * See {@link module:engine/model/textproxy~TextProxy#isPartial}.\r\n *\r\n * **Note:** `TextProxy` is not an instance of {@link module:engine/model/node~Node node}. Keep this in mind when using it as a\r\n * parameter of methods.\r\n *\r\n * **Note:** `TextProxy` is a readonly interface. If you want to perform changes on model data represented by a `TextProxy`\r\n * use {@link module:engine/model/writer~Writer model writer API}.\r\n *\r\n * **Note:** `TextProxy` instances are created on the fly, basing on the current state of model. Because of this, it is\r\n * highly unrecommended to store references to `TextProxy` instances. `TextProxy` instances are not refreshed when\r\n * model changes, so they might get invalidated. Instead, consider creating {@link module:engine/model/liveposition~LivePosition live\r\n * position}.\r\n *\r\n * `TextProxy` instances are created by {@link module:engine/model/treewalker~TreeWalker model tree walker}. You should not need to create\r\n * an instance of this class by your own.\r\n */\r\nexport default class TextProxy {\r\n\t/**\r\n\t * Creates a text proxy.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/model/text~Text} textNode Text node which part is represented by this text proxy.\r\n\t * @param {Number} offsetInText Offset in {@link module:engine/model/textproxy~TextProxy#textNode text node} from which the text proxy\r\n\t * starts.\r\n\t * @param {Number} length Text proxy length, that is how many text node's characters, starting from `offsetInText` it represents.\r\n\t * @constructor\r\n\t */\r\n\tconstructor( textNode, offsetInText, length ) {\r\n\t\t/**\r\n\t\t * Text node which part is represented by this text proxy.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/model/text~Text}\r\n\t\t */\r\n\t\tthis.textNode = textNode;\r\n\r\n\t\tif ( offsetInText < 0 || offsetInText > textNode.offsetSize ) {\r\n\t\t\t/**\r\n\t\t\t * Given `offsetInText` value is incorrect.\r\n\t\t\t *\r\n\t\t\t * @error model-textproxy-wrong-offsetintext\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'model-textproxy-wrong-offsetintext: Given offsetInText value is incorrect.', this );\r\n\t\t}\r\n\r\n\t\tif ( length < 0 || offsetInText + length > textNode.offsetSize ) {\r\n\t\t\t/**\r\n\t\t\t * Given `length` value is incorrect.\r\n\t\t\t *\r\n\t\t\t * @error model-textproxy-wrong-length\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'model-textproxy-wrong-length: Given length value is incorrect.', this );\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Text data represented by this text proxy.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {String}\r\n\t\t */\r\n\t\tthis.data = textNode.data.substring( offsetInText, offsetInText + length );\r\n\r\n\t\t/**\r\n\t\t * Offset in {@link module:engine/model/textproxy~TextProxy#textNode text node} from which the text proxy starts.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Number}\r\n\t\t */\r\n\t\tthis.offsetInText = offsetInText;\r\n\t}\r\n\r\n\t/**\r\n\t * Offset at which this text proxy starts in it's parent.\r\n\t *\r\n\t * @see module:engine/model/node~Node#startOffset\r\n\t * @readonly\r\n\t * @type {Number}\r\n\t */\r\n\tget startOffset() {\r\n\t\treturn this.textNode.startOffset !== null ? this.textNode.startOffset + this.offsetInText : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Offset size of this text proxy. Equal to the number of characters represented by the text proxy.\r\n\t *\r\n\t * @see module:engine/model/node~Node#offsetSize\r\n\t * @readonly\r\n\t * @type {Number}\r\n\t */\r\n\tget offsetSize() {\r\n\t\treturn this.data.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Offset at which this text proxy ends in it's parent.\r\n\t *\r\n\t * @see module:engine/model/node~Node#endOffset\r\n\t * @readonly\r\n\t * @type {Number}\r\n\t */\r\n\tget endOffset() {\r\n\t\treturn this.startOffset !== null ? this.startOffset + this.offsetSize : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Flag indicating whether `TextProxy` instance covers only part of the original {@link module:engine/model/text~Text text node}\r\n\t * (`true`) or the whole text node (`false`).\r\n\t *\r\n\t * This is `false` when text proxy starts at the very beginning of {@link module:engine/model/textproxy~TextProxy#textNode textNode}\r\n\t * ({@link module:engine/model/textproxy~TextProxy#offsetInText offsetInText} equals `0`) and text proxy sizes is equal to\r\n\t * text node size.\r\n\t *\r\n\t * @readonly\r\n\t * @type {Boolean}\r\n\t */\r\n\tget isPartial() {\r\n\t\treturn this.offsetSize !== this.textNode.offsetSize;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent of this text proxy, which is same as parent of text node represented by this text proxy.\r\n\t *\r\n\t * @readonly\r\n\t * @type {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\r\n\t */\r\n\tget parent() {\r\n\t\treturn this.textNode.parent;\r\n\t}\r\n\r\n\t/**\r\n\t * Root of this text proxy, which is same as root of text node represented by this text proxy.\r\n\t *\r\n\t * @readonly\r\n\t * @type {module:engine/model/node~Node|module:engine/model/documentfragment~DocumentFragment}\r\n\t */\r\n\tget root() {\r\n\t\treturn this.textNode.root;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this object is of the given.\r\n\t *\r\n\t *\t\ttextProxy.is( 'textProxy' ); // -> true\r\n\t *\t\ttextProxy.is( 'model:textProxy' ); // -> true\r\n\t *\r\n\t *\t\ttextProxy.is( 'view:textProxy' ); // -> false\r\n\t *\t\ttextProxy.is( 'range' ); // -> false\r\n\t *\r\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\r\n\t *\r\n\t * @param {String} type\r\n\t * @returns {Boolean}\r\n\t */\r\n\tis( type ) {\r\n\t\treturn type == 'textProxy' || type == 'model:textProxy';\r\n\t}\r\n\r\n\t/**\r\n\t * Gets path to this text proxy.\r\n\t *\r\n\t * @see module:engine/model/node~Node#getPath\r\n\t * @returns {Array.<Number>}\r\n\t */\r\n\tgetPath() {\r\n\t\tconst path = this.textNode.getPath();\r\n\r\n\t\tif ( path.length > 0 ) {\r\n\t\t\tpath[ path.length - 1 ] += this.offsetInText;\r\n\t\t}\r\n\r\n\t\treturn path;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns ancestors array of this text proxy.\r\n\t *\r\n\t * @param {Object} options Options object.\r\n\t * @param {Boolean} [options.includeSelf=false] When set to `true` this text proxy will be also included in parent's array.\r\n\t * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from text proxy parent to root element,\r\n\t * otherwise root element will be the first item in the array.\r\n\t * @returns {Array} Array with ancestors.\r\n\t */\r\n\tgetAncestors( options = { includeSelf: false, parentFirst: false } ) {\r\n\t\tconst ancestors = [];\r\n\t\tlet parent = options.includeSelf ? this : this.parent;\r\n\r\n\t\twhile ( parent ) {\r\n\t\t\tancestors[ options.parentFirst ? 'push' : 'unshift' ]( parent );\r\n\t\t\tparent = parent.parent;\r\n\t\t}\r\n\r\n\t\treturn ancestors;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this text proxy has an attribute for given key.\r\n\t *\r\n\t * @param {String} key Key of attribute to check.\r\n\t * @returns {Boolean} `true` if attribute with given key is set on text proxy, `false` otherwise.\r\n\t */\r\n\thasAttribute( key ) {\r\n\t\treturn this.textNode.hasAttribute( key );\r\n\t}\r\n\r\n\t/**\r\n\t * Gets an attribute value for given key or `undefined` if that attribute is not set on text proxy.\r\n\t *\r\n\t * @param {String} key Key of attribute to look for.\r\n\t * @returns {*} Attribute value or `undefined`.\r\n\t */\r\n\tgetAttribute( key ) {\r\n\t\treturn this.textNode.getAttribute( key );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns iterator that iterates over this node's attributes. Attributes are returned as arrays containing two\r\n\t * items. First one is attribute key and second is attribute value.\r\n\t *\r\n\t * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\r\n\t *\r\n\t * @returns {Iterable.<*>}\r\n\t */\r\n\tgetAttributes() {\r\n\t\treturn this.textNode.getAttributes();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns iterator that iterates over this node's attribute keys.\r\n\t *\r\n\t * @returns {Iterable.<String>}\r\n\t */\r\n\tgetAttributeKeys() {\r\n\t\treturn this.textNode.getAttributeKeys();\r\n\t}\r\n\r\n\t// @if CK_DEBUG_ENGINE // toString() {\r\n\t// @if CK_DEBUG_ENGINE // \treturn `#${ this.data }`;\r\n\t// @if CK_DEBUG_ENGINE // }\r\n\r\n\t// @if CK_DEBUG_ENGINE // log() {\r\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ModelTextProxy: ' + this );\r\n\t// @if CK_DEBUG_ENGINE // }\r\n\r\n\t// @if CK_DEBUG_ENGINE // logExtended() {\r\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( `ModelTextProxy: ${ this }, ` +\r\n\t// @if CK_DEBUG_ENGINE // \t\t`attrs: ${ convertMapToStringifiedObject( this.getAttributes() ) }` );\r\n\t// @if CK_DEBUG_ENGINE // }\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/treewalker\r\n */\r\n\r\nimport Text from './text';\r\nimport TextProxy from './textproxy';\r\nimport Element from './element';\r\nimport Position from './position';\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\n\r\n/**\r\n * Position iterator class. It allows to iterate forward and backward over the document.\r\n */\r\nexport default class TreeWalker {\r\n\t/**\r\n\t * Creates a range iterator. All parameters are optional, but you have to specify either `boundaries` or `startPosition`.\r\n\t *\r\n\t * @constructor\r\n\t * @param {Object} [options={}] Object with configuration.\r\n\t * @param {'forward'|'backward'} [options.direction='forward'] Walking direction.\r\n\t * @param {module:engine/model/range~Range} [options.boundaries=null] Range to define boundaries of the iterator.\r\n\t * @param {module:engine/model/position~Position} [options.startPosition] Starting position.\r\n\t * @param {Boolean} [options.singleCharacters=false] Flag indicating whether all consecutive characters with the same attributes\r\n\t * should be returned one by one as multiple {@link module:engine/model/textproxy~TextProxy} (`true`) objects or as one\r\n\t * {@link module:engine/model/textproxy~TextProxy} (`false`).\r\n\t * @param {Boolean} [options.shallow=false] Flag indicating whether iterator should enter elements or not. If the\r\n\t * iterator is shallow child nodes of any iterated node will not be returned along with `elementEnd` tag.\r\n\t * @param {Boolean} [options.ignoreElementEnd=false] Flag indicating whether iterator should ignore `elementEnd`\r\n\t * tags. If the option is true walker will not return a parent node of start position. If this option is `true`\r\n\t * each {@link module:engine/model/element~Element} will be returned once, while if the option is `false` they might be returned\r\n\t * twice: for `'elementStart'` and `'elementEnd'`.\r\n\t */\r\n\tconstructor( options = {} ) {\r\n\t\tif ( !options.boundaries && !options.startPosition ) {\r\n\t\t\t/**\r\n\t\t\t * Neither boundaries nor starting position of a `TreeWalker` have been defined.\r\n\t\t\t *\r\n\t\t\t * @error model-tree-walker-no-start-position\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'model-tree-walker-no-start-position: Neither boundaries nor starting position have been defined.',\r\n\t\t\t\tnull\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tconst direction = options.direction || 'forward';\r\n\r\n\t\tif ( direction != 'forward' && direction != 'backward' ) {\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'model-tree-walker-unknown-direction: Only `backward` and `forward` direction allowed.',\r\n\t\t\t\toptions,\r\n\t\t\t\t{ direction }\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Walking direction. Defaults `'forward'`.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {'backward'|'forward'} module:engine/model/treewalker~TreeWalker#direction\r\n\t\t */\r\n\t\tthis.direction = direction;\r\n\r\n\t\t/**\r\n\t\t * Iterator boundaries.\r\n\t\t *\r\n\t\t * When the iterator is walking `'forward'` on the end of boundary or is walking `'backward'`\r\n\t\t * on the start of boundary, then `{ done: true }` is returned.\r\n\t\t *\r\n\t\t * If boundaries are not defined they are set before first and after last child of the root node.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/model/range~Range} module:engine/model/treewalker~TreeWalker#boundaries\r\n\t\t */\r\n\t\tthis.boundaries = options.boundaries || null;\r\n\r\n\t\t/**\r\n\t\t * Iterator position. This is always static position, even if the initial position was a\r\n\t\t * {@link module:engine/model/liveposition~LivePosition live position}. If start position is not defined then position depends\r\n\t\t * on {@link #direction}. If direction is `'forward'` position starts form the beginning, when direction\r\n\t\t * is `'backward'` position starts from the end.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/model/position~Position} module:engine/model/treewalker~TreeWalker#position\r\n\t\t */\r\n\t\tif ( options.startPosition ) {\r\n\t\t\tthis.position = options.startPosition.clone();\r\n\t\t} else {\r\n\t\t\tthis.position = Position._createAt( this.boundaries[ this.direction == 'backward' ? 'end' : 'start' ] );\r\n\t\t}\r\n\r\n\t\t// Reset position stickiness in case it was set to other value, as the stickiness is kept after cloning.\r\n\t\tthis.position.stickiness = 'toNone';\r\n\r\n\t\t/**\r\n\t\t * Flag indicating whether all consecutive characters with the same attributes should be\r\n\t\t * returned as one {@link module:engine/model/textproxy~TextProxy} (`true`) or one by one (`false`).\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Boolean} module:engine/model/treewalker~TreeWalker#singleCharacters\r\n\t\t */\r\n\t\tthis.singleCharacters = !!options.singleCharacters;\r\n\r\n\t\t/**\r\n\t\t * Flag indicating whether iterator should enter elements or not. If the iterator is shallow child nodes of any\r\n\t\t * iterated node will not be returned along with `elementEnd` tag.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Boolean} module:engine/model/treewalker~TreeWalker#shallow\r\n\t\t */\r\n\t\tthis.shallow = !!options.shallow;\r\n\r\n\t\t/**\r\n\t\t * Flag indicating whether iterator should ignore `elementEnd` tags. If the option is true walker will not\r\n\t\t * return a parent node of the start position. If this option is `true` each {@link module:engine/model/element~Element} will\r\n\t\t * be returned once, while if the option is `false` they might be returned twice:\r\n\t\t * for `'elementStart'` and `'elementEnd'`.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Boolean} module:engine/model/treewalker~TreeWalker#ignoreElementEnd\r\n\t\t */\r\n\t\tthis.ignoreElementEnd = !!options.ignoreElementEnd;\r\n\r\n\t\t/**\r\n\t\t * Start boundary cached for optimization purposes.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {module:engine/model/element~Element} module:engine/model/treewalker~TreeWalker#_boundaryStartParent\r\n\t\t */\r\n\t\tthis._boundaryStartParent = this.boundaries ? this.boundaries.start.parent : null;\r\n\r\n\t\t/**\r\n\t\t * End boundary cached for optimization purposes.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {module:engine/model/element~Element} module:engine/model/treewalker~TreeWalker#_boundaryEndParent\r\n\t\t */\r\n\t\tthis._boundaryEndParent = this.boundaries ? this.boundaries.end.parent : null;\r\n\r\n\t\t/**\r\n\t\t * Parent of the most recently visited node. Cached for optimization purposes.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment}\r\n\t\t * module:engine/model/treewalker~TreeWalker#_visitedParent\r\n\t\t */\r\n\t\tthis._visitedParent = this.position.parent;\r\n\t}\r\n\r\n\t/**\r\n\t * Iterable interface.\r\n\t *\r\n\t * @returns {Iterable.<module:engine/model/treewalker~TreeWalkerValue>}\r\n\t */\r\n\t[ Symbol.iterator ]() {\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves {@link #position} in the {@link #direction} skipping values as long as the callback function returns `true`.\r\n\t *\r\n\t * For example:\r\n\t *\r\n\t * \t\twalker.skip( value => value.type == 'text' ); // <paragraph>[]foo</paragraph> -> <paragraph>foo[]</paragraph>\r\n\t * \t\twalker.skip( () => true ); // Move the position to the end: <paragraph>[]foo</paragraph> -> <paragraph>foo</paragraph>[]\r\n\t * \t\twalker.skip( () => false ); // Do not move the position.\r\n\t *\r\n\t * @param {Function} skip Callback function. Gets {@link module:engine/model/treewalker~TreeWalkerValue} and should\r\n\t * return `true` if the value should be skipped or `false` if not.\r\n\t */\r\n\tskip( skip ) {\r\n\t\tlet done, value, prevPosition, prevVisitedParent;\r\n\r\n\t\tdo {\r\n\t\t\tprevPosition = this.position;\r\n\t\t\tprevVisitedParent = this._visitedParent;\r\n\r\n\t\t\t( { done, value } = this.next() );\r\n\t\t} while ( !done && skip( value ) );\r\n\r\n\t\tif ( !done ) {\r\n\t\t\tthis.position = prevPosition;\r\n\t\t\tthis._visitedParent = prevVisitedParent;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the next tree walker's value.\r\n\t *\r\n\t * @returns {module:engine/model/treewalker~TreeWalkerValue} Next tree walker's value.\r\n\t */\r\n\tnext() {\r\n\t\tif ( this.direction == 'forward' ) {\r\n\t\t\treturn this._next();\r\n\t\t} else {\r\n\t\t\treturn this._previous();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Makes a step forward in model. Moves the {@link #position} to the next position and returns the encountered value.\r\n\t *\r\n\t * @private\r\n\t * @returns {Object}\r\n\t * @returns {Boolean} return.done True if iterator is done.\r\n\t * @returns {module:engine/model/treewalker~TreeWalkerValue} return.value Information about taken step.\r\n\t */\r\n\t_next() {\r\n\t\tconst previousPosition = this.position;\r\n\t\tconst position = this.position.clone();\r\n\t\tconst parent = this._visitedParent;\r\n\r\n\t\t// We are at the end of the root.\r\n\t\tif ( parent.parent === null && position.offset === parent.maxOffset ) {\r\n\t\t\treturn { done: true };\r\n\t\t}\r\n\r\n\t\t// We reached the walker boundary.\r\n\t\tif ( parent === this._boundaryEndParent && position.offset == this.boundaries.end.offset ) {\r\n\t\t\treturn { done: true };\r\n\t\t}\r\n\r\n\t\tconst node = position.textNode ? position.textNode : position.nodeAfter;\r\n\r\n\t\tif ( node instanceof Element ) {\r\n\t\t\tif ( !this.shallow ) {\r\n\t\t\t\t// Manual operations on path internals for optimization purposes. Here and in the rest of the method.\r\n\t\t\t\tposition.path.push( 0 );\r\n\t\t\t\tthis._visitedParent = node;\r\n\t\t\t} else {\r\n\t\t\t\tposition.offset++;\r\n\t\t\t}\r\n\r\n\t\t\tthis.position = position;\r\n\r\n\t\t\treturn formatReturnValue( 'elementStart', node, previousPosition, position, 1 );\r\n\t\t} else if ( node instanceof Text ) {\r\n\t\t\tlet charactersCount;\r\n\r\n\t\t\tif ( this.singleCharacters ) {\r\n\t\t\t\tcharactersCount = 1;\r\n\t\t\t} else {\r\n\t\t\t\tlet offset = node.endOffset;\r\n\r\n\t\t\t\tif ( this._boundaryEndParent == parent && this.boundaries.end.offset < offset ) {\r\n\t\t\t\t\toffset = this.boundaries.end.offset;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcharactersCount = offset - position.offset;\r\n\t\t\t}\r\n\r\n\t\t\tconst offsetInTextNode = position.offset - node.startOffset;\r\n\t\t\tconst item = new TextProxy( node, offsetInTextNode, charactersCount );\r\n\r\n\t\t\tposition.offset += charactersCount;\r\n\t\t\tthis.position = position;\r\n\r\n\t\t\treturn formatReturnValue( 'text', item, previousPosition, position, charactersCount );\r\n\t\t} else {\r\n\t\t\t// `node` is not set, we reached the end of current `parent`.\r\n\t\t\tposition.path.pop();\r\n\t\t\tposition.offset++;\r\n\t\t\tthis.position = position;\r\n\t\t\tthis._visitedParent = parent.parent;\r\n\r\n\t\t\tif ( this.ignoreElementEnd ) {\r\n\t\t\t\treturn this._next();\r\n\t\t\t} else {\r\n\t\t\t\treturn formatReturnValue( 'elementEnd', parent, previousPosition, position );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Makes a step backward in model. Moves the {@link #position} to the previous position and returns the encountered value.\r\n\t *\r\n\t * @private\r\n\t * @returns {Object}\r\n\t * @returns {Boolean} return.done True if iterator is done.\r\n\t * @returns {module:engine/model/treewalker~TreeWalkerValue} return.value Information about taken step.\r\n\t */\r\n\t_previous() {\r\n\t\tconst previousPosition = this.position;\r\n\t\tconst position = this.position.clone();\r\n\t\tconst parent = this._visitedParent;\r\n\r\n\t\t// We are at the beginning of the root.\r\n\t\tif ( parent.parent === null && position.offset === 0 ) {\r\n\t\t\treturn { done: true };\r\n\t\t}\r\n\r\n\t\t// We reached the walker boundary.\r\n\t\tif ( parent == this._boundaryStartParent && position.offset == this.boundaries.start.offset ) {\r\n\t\t\treturn { done: true };\r\n\t\t}\r\n\r\n\t\t// Get node just before current position\r\n\t\tconst node = position.textNode ? position.textNode : position.nodeBefore;\r\n\r\n\t\tif ( node instanceof Element ) {\r\n\t\t\tposition.offset--;\r\n\r\n\t\t\tif ( !this.shallow ) {\r\n\t\t\t\tposition.path.push( node.maxOffset );\r\n\t\t\t\tthis.position = position;\r\n\t\t\t\tthis._visitedParent = node;\r\n\r\n\t\t\t\tif ( this.ignoreElementEnd ) {\r\n\t\t\t\t\treturn this._previous();\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn formatReturnValue( 'elementEnd', node, previousPosition, position );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.position = position;\r\n\r\n\t\t\t\treturn formatReturnValue( 'elementStart', node, previousPosition, position, 1 );\r\n\t\t\t}\r\n\t\t} else if ( node instanceof Text ) {\r\n\t\t\tlet charactersCount;\r\n\r\n\t\t\tif ( this.singleCharacters ) {\r\n\t\t\t\tcharactersCount = 1;\r\n\t\t\t} else {\r\n\t\t\t\tlet offset = node.startOffset;\r\n\r\n\t\t\t\tif ( this._boundaryStartParent == parent && this.boundaries.start.offset > offset ) {\r\n\t\t\t\t\toffset = this.boundaries.start.offset;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcharactersCount = position.offset - offset;\r\n\t\t\t}\r\n\r\n\t\t\tconst offsetInTextNode = position.offset - node.startOffset;\r\n\t\t\tconst item = new TextProxy( node, offsetInTextNode - charactersCount, charactersCount );\r\n\r\n\t\t\tposition.offset -= charactersCount;\r\n\t\t\tthis.position = position;\r\n\r\n\t\t\treturn formatReturnValue( 'text', item, previousPosition, position, charactersCount );\r\n\t\t} else {\r\n\t\t\t// `node` is not set, we reached the beginning of current `parent`.\r\n\t\t\tposition.path.pop();\r\n\t\t\tthis.position = position;\r\n\t\t\tthis._visitedParent = parent.parent;\r\n\r\n\t\t\treturn formatReturnValue( 'elementStart', parent, previousPosition, position, 1 );\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction formatReturnValue( type, item, previousPosition, nextPosition, length ) {\r\n\treturn {\r\n\t\tdone: false,\r\n\t\tvalue: {\r\n\t\t\ttype,\r\n\t\t\titem,\r\n\t\t\tpreviousPosition,\r\n\t\t\tnextPosition,\r\n\t\t\tlength\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * Type of the step made by {@link module:engine/model/treewalker~TreeWalker}.\r\n * Possible values: `'elementStart'` if walker is at the beginning of a node, `'elementEnd'` if walker is at the end of node,\r\n * `'character'` if walker traversed over a character, or `'text'` if walker traversed over multiple characters (available in\r\n * character merging mode, see {@link module:engine/model/treewalker~TreeWalker#constructor}).\r\n *\r\n * @typedef {'elementStart'|'elementEnd'|'character'|'text'} module:engine/model/treewalker~TreeWalkerValueType\r\n */\r\n\r\n/**\r\n * Object returned by {@link module:engine/model/treewalker~TreeWalker} when traversing tree model.\r\n *\r\n * @typedef {Object} module:engine/model/treewalker~TreeWalkerValue\r\n * @property {module:engine/model/treewalker~TreeWalkerValueType} type\r\n * @property {module:engine/model/item~Item} item Item between old and new positions of {@link module:engine/model/treewalker~TreeWalker}.\r\n * @property {module:engine/model/position~Position} previousPosition Previous position of the iterator.\r\n * * Forward iteration: For `'elementEnd'` it is the last position inside the element. For all other types it is the\r\n * position before the item.\r\n * * Backward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\r\n * the position after item.\r\n * @property {module:engine/model/position~Position} nextPosition Next position of the iterator.\r\n * * Forward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\r\n * the position after the item.\r\n * * Backward iteration: For `'elementEnd'` it is last position inside element. For all other types it is the position\r\n * before the item.\r\n * @property {Number} [length] Length of the item. For `'elementStart'` and `'character'` it is 1. For `'text'` it is\r\n * the length of the text. For `'elementEnd'` it is `undefined`.\r\n */\r\n\r\n/**\r\n * Tree walking directions.\r\n *\r\n * @typedef {'forward'|'backward'} module:engine/view/treewalker~TreeWalkerDirection\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/utils/deletecontent\r\n */\r\n\r\nimport LivePosition from '../liveposition';\r\nimport Range from '../range';\r\nimport DocumentSelection from '../documentselection';\r\n\r\n/**\r\n * Deletes content of the selection and merge siblings. The resulting selection is always collapsed.\r\n *\r\n * **Note:** Use {@link module:engine/model/model~Model#deleteContent} instead of this function.\r\n * This function is only exposed to be reusable in algorithms\r\n * which change the {@link module:engine/model/model~Model#deleteContent}\r\n * method's behavior.\r\n *\r\n * @param {module:engine/model/model~Model} model The model in context of which the insertion\r\n * should be performed.\r\n * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\r\n * Selection of which the content should be deleted.\r\n * @param {Object} [options]\r\n * @param {Boolean} [options.leaveUnmerged=false] Whether to merge elements after removing the content of the selection.\r\n *\r\n * For example `<heading>x[x</heading><paragraph>y]y</paragraph>` will become:\r\n *\r\n * * `<heading>x^y</heading>` with the option disabled (`leaveUnmerged == false`)\r\n * * `<heading>x^</heading><paragraph>y</paragraph>` with enabled (`leaveUnmerged == true`).\r\n *\r\n * Note: {@link module:engine/model/schema~Schema#isObject object} and {@link module:engine/model/schema~Schema#isLimit limit}\r\n * elements will not be merged.\r\n *\r\n * @param {Boolean} [options.doNotResetEntireContent=false] Whether to skip replacing the entire content with a\r\n * paragraph when the entire content was selected.\r\n *\r\n * For example `<heading>[x</heading><paragraph>y]</paragraph>` will become:\r\n *\r\n * * `<paragraph>^</paragraph>` with the option disabled (`doNotResetEntireContent == false`)\r\n * * `<heading>^</heading>` with enabled (`doNotResetEntireContent == true`).\r\n *\r\n * @param {Boolean} [options.doNotAutoparagraph=false] Whether to create a paragraph if after content deletion selection is moved\r\n * to a place where text cannot be inserted.\r\n *\r\n * For example `<paragraph>x</paragraph>[<image src=\"foo.jpg\"></image>]` will become:\r\n *\r\n * * `<paragraph>x</paragraph><paragraph>[]</paragraph>` with the option disabled (`doNotAutoparagraph == false`)\r\n * * `<paragraph>x</paragraph>[]` with the option enabled (`doNotAutoparagraph == true`).\r\n *\r\n * If you use this option you need to make sure to handle invalid selections yourself or leave\r\n * them to the selection post-fixer (may not always work).\r\n *\r\n * **Note:** if there is no valid position for the selection, the paragraph will always be created:\r\n *\r\n * `[<image src=\"foo.jpg\"></image>]` -> `<paragraph>[]</paragraph>`.\r\n */\r\nexport default function deleteContent( model, selection, options = {} ) {\r\n\tif ( selection.isCollapsed ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst selRange = selection.getFirstRange();\r\n\r\n\t// If the selection is already removed, don't do anything.\r\n\tif ( selRange.root.rootName == '$graveyard' ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst schema = model.schema;\r\n\r\n\tmodel.change( writer => {\r\n\t\t// 1. Replace the entire content with paragraph.\r\n\t\t// See: https://github.com/ckeditor/ckeditor5-engine/issues/1012#issuecomment-315017594.\r\n\t\tif ( !options.doNotResetEntireContent && shouldEntireContentBeReplacedWithParagraph( schema, selection ) ) {\r\n\t\t\treplaceEntireContentWithParagraph( writer, selection, schema );\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst startPos = selRange.start;\r\n\t\tconst endPos = LivePosition.fromPosition( selRange.end, 'toNext' );\r\n\r\n\t\t// 2. Remove the content if there is any.\r\n\t\tif ( !selRange.start.isTouching( selRange.end ) ) {\r\n\t\t\twriter.remove( selRange );\r\n\t\t}\r\n\r\n\t\t// 3. Merge elements in the right branch to the elements in the left branch.\r\n\t\t// The only reasonable (in terms of data and selection correctness) case in which we need to do that is:\r\n\t\t//\r\n\t\t// <heading type=1>Fo[</heading><paragraph>]ar</paragraph> => <heading type=1>Fo^ar</heading>\r\n\t\t//\r\n\t\t// However, the algorithm supports also merging deeper structures (up to the depth of the shallower branch),\r\n\t\t// as it's hard to imagine what should actually be the default behavior. Usually, specific features will\r\n\t\t// want to override that behavior anyway.\r\n\t\tif ( !options.leaveUnmerged ) {\r\n\t\t\tmergeBranches( writer, startPos, endPos );\r\n\r\n\t\t\t// TMP this will be replaced with a postfixer.\r\n\t\t\t// We need to check and strip disallowed attributes in all nested nodes because after merge\r\n\t\t\t// some attributes could end up in a path where are disallowed.\r\n\t\t\t//\r\n\t\t\t// e.g. bold is disallowed for <H1>\r\n\t\t\t// <h1>Fo{o</h1><p>b}a<b>r</b><p> -> <h1>Fo{}a<b>r</b><h1> -> <h1>Fo{}ar<h1>.\r\n\t\t\tschema.removeDisallowedAttributes( startPos.parent.getChildren(), writer );\r\n\t\t}\r\n\r\n\t\tcollapseSelectionAt( writer, selection, startPos );\r\n\r\n\t\t// 4. Add a paragraph to set selection in it.\r\n\t\t// Check if a text is allowed in the new container. If not, try to create a new paragraph (if it's allowed here).\r\n\t\t// If autoparagraphing is off, we assume that you know what you do so we leave the selection wherever it was.\r\n\t\tif ( !options.doNotAutoparagraph && shouldAutoparagraph( schema, startPos ) ) {\r\n\t\t\tinsertParagraph( writer, startPos, selection );\r\n\t\t}\r\n\r\n\t\tendPos.detach();\r\n\t} );\r\n}\r\n\r\n// This function is a result of reaching the Ballmer's peak for just the right amount of time.\r\n// Even I had troubles documenting it after a while and after reading it again I couldn't believe that it really works.\r\nfunction mergeBranches( writer, startPos, endPos ) {\r\n\tconst startParent = startPos.parent;\r\n\tconst endParent = endPos.parent;\r\n\r\n\t// If both positions ended up in the same parent, then there's nothing more to merge:\r\n\t// <$root><p>x[]</p><p>{}y</p></$root> => <$root><p>xy</p>[]{}</$root>\r\n\tif ( startParent == endParent ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// If one of the positions is a limit element, then there's nothing to merge because we don't want to cross the limit boundaries.\r\n\tif ( writer.model.schema.isLimit( startParent ) || writer.model.schema.isLimit( endParent ) ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Check if operations we'll need to do won't need to cross object or limit boundaries.\r\n\t// E.g., we can't merge endParent into startParent in this case:\r\n\t// <limit><startParent>x[]</startParent></limit><endParent>{}</endParent>\r\n\tif ( !checkCanBeMerged( startPos, endPos, writer.model.schema ) ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Remember next positions to merge. For example:\r\n\t// <a><b>x[]</b></a><c><d>{}y</d></c>\r\n\t// will become:\r\n\t// <a><b>xy</b>[]</a><c>{}</c>\r\n\tstartPos = writer.createPositionAfter( startParent );\r\n\tendPos = writer.createPositionBefore( endParent );\r\n\r\n\tif ( !endPos.isEqual( startPos ) ) {\r\n\t\t// In this case, before we merge, we need to move `endParent` to the `startPos`:\r\n\t\t// <a><b>x[]</b></a><c><d>{}y</d></c>\r\n\t\t// becomes:\r\n\t\t// <a><b>x</b>[]<d>y</d></a><c>{}</c>\r\n\t\twriter.insert( endParent, startPos );\r\n\t}\r\n\r\n\t// Merge two siblings:\r\n\t// <a>x</a>[]<b>y</b> -> <a>xy</a> (the usual case)\r\n\t// <a><b>x</b>[]<d>y</d></a><c></c> -> <a><b>xy</b>[]</a><c></c> (this is the \"move parent\" case shown above)\r\n\twriter.merge( startPos );\r\n\r\n\t// Remove empty end ancestors:\r\n\t// <a>fo[o</a><b><a><c>bar]</c></a></b>\r\n\t// becomes:\r\n\t// <a>fo[]</a><b><a>{}</a></b>\r\n\t// So we can remove <a> and <b>.\r\n\twhile ( endPos.parent.isEmpty ) {\r\n\t\tconst parentToRemove = endPos.parent;\r\n\r\n\t\tendPos = writer.createPositionBefore( parentToRemove );\r\n\r\n\t\twriter.remove( parentToRemove );\r\n\t}\r\n\r\n\t// Continue merging next level.\r\n\tmergeBranches( writer, startPos, endPos );\r\n}\r\n\r\nfunction shouldAutoparagraph( schema, position ) {\r\n\tconst isTextAllowed = schema.checkChild( position, '$text' );\r\n\tconst isParagraphAllowed = schema.checkChild( position, 'paragraph' );\r\n\r\n\treturn !isTextAllowed && isParagraphAllowed;\r\n}\r\n\r\n// Check if parents of two positions can be merged by checking if there are no limit/object\r\n// boundaries between those two positions.\r\n//\r\n// E.g. in <bQ><p>x[]</p></bQ><widget><caption>{}</caption></widget>\r\n// we'll check <p>, <bQ>, <widget> and <caption>.\r\n// Usually, widget and caption are marked as objects/limits in the schema, so in this case merging will be blocked.\r\nfunction checkCanBeMerged( leftPos, rightPos, schema ) {\r\n\tconst rangeToCheck = new Range( leftPos, rightPos );\r\n\r\n\tfor ( const value of rangeToCheck.getWalker() ) {\r\n\t\tif ( schema.isLimit( value.item ) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\treturn true;\r\n}\r\n\r\nfunction insertParagraph( writer, position, selection ) {\r\n\tconst paragraph = writer.createElement( 'paragraph' );\r\n\r\n\twriter.insert( paragraph, position );\r\n\r\n\tcollapseSelectionAt( writer, selection, writer.createPositionAt( paragraph, 0 ) );\r\n}\r\n\r\nfunction replaceEntireContentWithParagraph( writer, selection ) {\r\n\tconst limitElement = writer.model.schema.getLimitElement( selection );\r\n\r\n\twriter.remove( writer.createRangeIn( limitElement ) );\r\n\tinsertParagraph( writer, writer.createPositionAt( limitElement, 0 ), selection );\r\n}\r\n\r\n// We want to replace the entire content with a paragraph when:\r\n// * the entire content is selected,\r\n// * selection contains at least two elements,\r\n// * whether the paragraph is allowed in schema in the common ancestor.\r\nfunction shouldEntireContentBeReplacedWithParagraph( schema, selection ) {\r\n\tconst limitElement = schema.getLimitElement( selection );\r\n\r\n\tif ( !selection.containsEntireContent( limitElement ) ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tconst range = selection.getFirstRange();\r\n\r\n\tif ( range.start.parent == range.end.parent ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn schema.checkChild( limitElement, 'paragraph' );\r\n}\r\n\r\n// Helper function that sets the selection. Depending whether given `selection` is a document selection or not,\r\n// uses a different method to set it.\r\nfunction collapseSelectionAt( writer, selection, positionOrRange ) {\r\n\tif ( selection instanceof DocumentSelection ) {\r\n\t\twriter.setSelection( positionOrRange );\r\n\t} else {\r\n\t\tselection.setTo( positionOrRange );\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/utils/getselectedcontent\r\n */\r\n\r\n/**\r\n * Gets a clone of the selected content.\r\n *\r\n * For example, for the following selection:\r\n *\r\n * ```html\r\n * <p>x</p><quote><p>y</p><h>fir[st</h></quote><p>se]cond</p><p>z</p>\r\n * ```\r\n *\r\n * It will return a document fragment with such a content:\r\n *\r\n * ```html\r\n * <quote><h>st</h></quote><p>se</p>\r\n * ```\r\n *\r\n * @param {module:engine/model/model~Model} model The model in context of which\r\n * the selection modification should be performed.\r\n * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\r\n * The selection of which content will be returned.\r\n * @returns {module:engine/model/documentfragment~DocumentFragment}\r\n */\r\nexport default function getSelectedContent( model, selection ) {\r\n\treturn model.change( writer => {\r\n\t\tconst frag = writer.createDocumentFragment();\r\n\t\tconst range = selection.getFirstRange();\r\n\r\n\t\tif ( !range || range.isCollapsed ) {\r\n\t\t\treturn frag;\r\n\t\t}\r\n\r\n\t\tconst root = range.start.root;\r\n\t\tconst commonPath = range.start.getCommonPath( range.end );\r\n\t\tconst commonParent = root.getNodeByPath( commonPath );\r\n\r\n\t\t// ## 1st step\r\n\t\t//\r\n\t\t// First, we'll clone a fragment represented by a minimal flat range\r\n\t\t// containing the original range to be cloned.\r\n\t\t// E.g. let's consider such a range:\r\n\t\t//\r\n\t\t// <p>x</p><quote><p>y</p><h>fir[st</h></quote><p>se]cond</p><p>z</p>\r\n\t\t//\r\n\t\t// A minimal flat range containing this one is:\r\n\t\t//\r\n\t\t// <p>x</p>[<quote><p>y</p><h>first</h></quote><p>second</p>]<p>z</p>\r\n\t\t//\r\n\t\t// We can easily clone this structure, preserving e.g. the <quote> element.\r\n\t\tlet flatSubtreeRange;\r\n\r\n\t\tif ( range.start.parent == range.end.parent ) {\r\n\t\t\t// The original range is flat, so take it.\r\n\t\t\tflatSubtreeRange = range;\r\n\t\t} else {\r\n\t\t\tflatSubtreeRange = writer.createRange(\r\n\t\t\t\twriter.createPositionAt( commonParent, range.start.path[ commonPath.length ] ),\r\n\t\t\t\twriter.createPositionAt( commonParent, range.end.path[ commonPath.length ] + 1 )\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tconst howMany = flatSubtreeRange.end.offset - flatSubtreeRange.start.offset;\r\n\r\n\t\t// Clone the whole contents.\r\n\t\tfor ( const item of flatSubtreeRange.getItems( { shallow: true } ) ) {\r\n\t\t\tif ( item.is( 'textProxy' ) ) {\r\n\t\t\t\twriter.appendText( item.data, item.getAttributes(), frag );\r\n\t\t\t} else {\r\n\t\t\t\twriter.append( item._clone( true ), frag );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// ## 2nd step\r\n\t\t//\r\n\t\t// If the original range wasn't flat, then we need to remove the excess nodes from the both ends of the cloned fragment.\r\n\t\t//\r\n\t\t// For example, for the range shown in the 1st step comment, we need to remove these pieces:\r\n\t\t//\r\n\t\t// <quote>[<p>y</p>]<h>[fir]st</h></quote><p>se[cond]</p>\r\n\t\t//\r\n\t\t// So this will be the final copied content:\r\n\t\t//\r\n\t\t// <quote><h>st</h></quote><p>se</p>\r\n\t\t//\r\n\t\t// In order to do that, we remove content from these two ranges:\r\n\t\t//\r\n\t\t// [<quote><p>y</p><h>fir]st</h></quote><p>se[cond</p>]\r\n\t\tif ( flatSubtreeRange != range ) {\r\n\t\t\t// Find the position of the original range in the cloned fragment.\r\n\t\t\tconst newRange = range._getTransformedByMove( flatSubtreeRange.start, writer.createPositionAt( frag, 0 ), howMany )[ 0 ];\r\n\r\n\t\t\tconst leftExcessRange = writer.createRange( writer.createPositionAt( frag, 0 ), newRange.start );\r\n\t\t\tconst rightExcessRange = writer.createRange( newRange.end, writer.createPositionAt( frag, 'end' ) );\r\n\r\n\t\t\tremoveRangeContent( rightExcessRange, writer );\r\n\t\t\tremoveRangeContent( leftExcessRange, writer );\r\n\t\t}\r\n\r\n\t\treturn frag;\r\n\t} );\r\n}\r\n\r\n// After https://github.com/ckeditor/ckeditor5-engine/issues/690 is fixed,\r\n// this function will, most likely, be able to rewritten using getMinimalFlatRanges().\r\nfunction removeRangeContent( range, writer ) {\r\n\tconst parentsToCheck = [];\r\n\r\n\tArray.from( range.getItems( { direction: 'backward' } ) )\r\n\t\t// We should better store ranges because text proxies will lose integrity\r\n\t\t// with the text nodes when we'll start removing content.\r\n\t\t.map( item => writer.createRangeOn( item ) )\r\n\t\t// Filter only these items which are fully contained in the passed range.\r\n\t\t//\r\n\t\t// E.g. for the following range: [<quote><p>y</p><h>fir]st</h>\r\n\t\t// the walker will return the entire <h> element, when only the \"fir\" item inside it is fully contained.\r\n\t\t.filter( itemRange => {\r\n\t\t\t// We should be able to use Range.containsRange, but https://github.com/ckeditor/ckeditor5-engine/issues/691.\r\n\t\t\tconst contained =\r\n\t\t\t\t( itemRange.start.isAfter( range.start ) || itemRange.start.isEqual( range.start ) ) &&\r\n\t\t\t\t( itemRange.end.isBefore( range.end ) || itemRange.end.isEqual( range.end ) );\r\n\r\n\t\t\treturn contained;\r\n\t\t} )\r\n\t\t.forEach( itemRange => {\r\n\t\t\tparentsToCheck.push( itemRange.start.parent );\r\n\r\n\t\t\twriter.remove( itemRange );\r\n\t\t} );\r\n\r\n\t// Remove ancestors of the removed items if they turned to be empty now\r\n\t// (their whole content was contained in the range).\r\n\tparentsToCheck.forEach( parentToCheck => {\r\n\t\tlet parent = parentToCheck;\r\n\r\n\t\twhile ( parent.parent && parent.isEmpty ) {\r\n\t\t\tconst removeRange = writer.createRangeOn( parent );\r\n\r\n\t\t\tparent = parent.parent;\r\n\r\n\t\t\twriter.remove( removeRange );\r\n\t\t}\r\n\t} );\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/utils/insertcontent\r\n */\r\n\r\nimport Position from '../position';\r\nimport LivePosition from '../liveposition';\r\nimport Element from '../element';\r\nimport Range from '../range';\r\nimport DocumentSelection from '../documentselection';\r\nimport Selection from '../selection';\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\n\r\n/**\r\n * Inserts content into the editor (specified selection) as one would expect the paste\r\n * functionality to work.\r\n *\r\n * If an instance of {@link module:engine/model/selection~Selection} is passed as `selectable` it will be modified\r\n * to the insertion selection (equal to a range to be selected after insertion).\r\n *\r\n * If `selectable` is not passed, the content will be inserted using the current selection of the model document.\r\n *\r\n * **Note:** Use {@link module:engine/model/model~Model#insertContent} instead of this function.\r\n * This function is only exposed to be reusable in algorithms which change the {@link module:engine/model/model~Model#insertContent}\r\n * method's behavior.\r\n *\r\n * @param {module:engine/model/model~Model} model The model in context of which the insertion\r\n * should be performed.\r\n * @param {module:engine/model/documentfragment~DocumentFragment|module:engine/model/item~Item} content The content to insert.\r\n * @param {module:engine/model/selection~Selectable} [selectable=model.document.selection]\r\n * Selection into which the content should be inserted.\r\n * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\r\n * @returns {module:engine/model/range~Range} Range which contains all the performed changes. This is a range that, if removed,\r\n * would return the model to the state before the insertion. If no changes were preformed by `insertContent`, returns a range collapsed\r\n * at the insertion position.\r\n */\r\nexport default function insertContent( model, content, selectable, placeOrOffset ) {\r\n\treturn model.change( writer => {\r\n\t\tlet selection;\r\n\r\n\t\tif ( !selectable ) {\r\n\t\t\tselection = model.document.selection;\r\n\t\t} else if ( selectable instanceof Selection || selectable instanceof DocumentSelection ) {\r\n\t\t\tselection = selectable;\r\n\t\t} else {\r\n\t\t\tselection = writer.createSelection( selectable, placeOrOffset );\r\n\t\t}\r\n\r\n\t\tif ( !selection.isCollapsed ) {\r\n\t\t\tmodel.deleteContent( selection, { doNotAutoparagraph: true } );\r\n\t\t}\r\n\r\n\t\tconst insertion = new Insertion( model, writer, selection.anchor );\r\n\r\n\t\tlet nodesToInsert;\r\n\r\n\t\tif ( content.is( 'documentFragment' ) ) {\r\n\t\t\tnodesToInsert = content.getChildren();\r\n\t\t} else {\r\n\t\t\tnodesToInsert = [ content ];\r\n\t\t}\r\n\r\n\t\tinsertion.handleNodes( nodesToInsert, {\r\n\t\t\t// The set of children being inserted is the only set in this context\r\n\t\t\t// so it's the first and last (it's a hack ;)).\r\n\t\t\tisFirst: true,\r\n\t\t\tisLast: true\r\n\t\t} );\r\n\r\n\t\tconst newRange = insertion.getSelectionRange();\r\n\r\n\t\t/* istanbul ignore else */\r\n\t\tif ( newRange ) {\r\n\t\t\tif ( selection instanceof DocumentSelection ) {\r\n\t\t\t\twriter.setSelection( newRange );\r\n\t\t\t} else {\r\n\t\t\t\tselection.setTo( newRange );\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// We are not testing else because it's a safe check for unpredictable edge cases:\r\n\t\t\t// an insertion without proper range to select.\r\n\t\t\t//\r\n\t\t\t// @if CK_DEBUG // console.warn( 'Cannot determine a proper selection range after insertion.' );\r\n\t\t}\r\n\r\n\t\tconst affectedRange = insertion.getAffectedRange() || model.createRange( selection.anchor );\r\n\r\n\t\tinsertion.destroy();\r\n\r\n\t\treturn affectedRange;\r\n\t} );\r\n}\r\n\r\n/**\r\n * Utility class for performing content insertion.\r\n *\r\n * @private\r\n */\r\nclass Insertion {\r\n\tconstructor( model, writer, position ) {\r\n\t\t/**\r\n\t\t * The model in context of which the insertion should be performed.\r\n\t\t *\r\n\t\t * @member {module:engine/model~Model} #model\r\n\t\t */\r\n\t\tthis.model = model;\r\n\r\n\t\t/**\r\n\t\t * Batch to which operations will be added.\r\n\t\t *\r\n\t\t * @member {module:engine/controller/writer~Batch} #writer\r\n\t\t */\r\n\t\tthis.writer = writer;\r\n\r\n\t\t/**\r\n\t\t * The position at which (or near which) the next node will be inserted.\r\n\t\t *\r\n\t\t * @member {module:engine/model/position~Position} #position\r\n\t\t */\r\n\t\tthis.position = position;\r\n\r\n\t\t/**\r\n\t\t * Elements with which the inserted elements can be merged.\r\n\t\t *\r\n\t\t *\t\t<p>x^</p><p>y</p> + <p>z</p> (can merge to <p>x</p>)\r\n\t\t *\t\t<p>x</p><p>^y</p> + <p>z</p> (can merge to <p>y</p>)\r\n\t\t *\t\t<p>x^y</p> + <p>z</p> (can merge to <p>xy</p> which will be split during the action,\r\n\t\t *\t\t\t\t\t\t\t\tso both its pieces will be added to this set)\r\n\t\t *\r\n\t\t *\r\n\t\t * @member {Set} #canMergeWith\r\n\t\t */\r\n\t\tthis.canMergeWith = new Set( [ this.position.parent ] );\r\n\r\n\t\t/**\r\n\t\t * Schema of the model.\r\n\t\t *\r\n\t\t * @member {module:engine/model/schema~Schema} #schema\r\n\t\t */\r\n\t\tthis.schema = model.schema;\r\n\r\n\t\tthis._filterAttributesOf = [];\r\n\r\n\t\t/**\r\n\t\t * Beginning of the affected range. See {@link module:engine/model/utils/insertcontent~Insertion#getAffectedRange}.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {module:engine/model/liveposition~LivePosition|null} #_affectedStart\r\n\t\t */\r\n\t\tthis._affectedStart = null;\r\n\r\n\t\t/**\r\n\t\t * End of the affected range. See {@link module:engine/model/utils/insertcontent~Insertion#getAffectedRange}.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {module:engine/model/liveposition~LivePosition|null} #_affectedEnd\r\n\t\t */\r\n\t\tthis._affectedEnd = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Handles insertion of a set of nodes.\r\n\t *\r\n\t * @param {Iterable.<module:engine/model/node~Node>} nodes Nodes to insert.\r\n\t * @param {Object} parentContext Context in which parent of these nodes was supposed to be inserted.\r\n\t * If the parent context is passed it means that the parent element was stripped (was not allowed).\r\n\t */\r\n\thandleNodes( nodes, parentContext ) {\r\n\t\tnodes = Array.from( nodes );\r\n\r\n\t\tfor ( let i = 0; i < nodes.length; i++ ) {\r\n\t\t\tconst node = nodes[ i ];\r\n\r\n\t\t\tthis._handleNode( node, {\r\n\t\t\t\tisFirst: i === 0 && parentContext.isFirst,\r\n\t\t\t\tisLast: ( i === ( nodes.length - 1 ) ) && parentContext.isLast\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\t// TMP this will become a post-fixer.\r\n\t\tthis.schema.removeDisallowedAttributes( this._filterAttributesOf, this.writer );\r\n\t\tthis._filterAttributesOf = [];\r\n\t}\r\n\r\n\t/**\r\n\t * Returns range to be selected after insertion.\r\n\t * Returns `null` if there is no valid range to select after insertion.\r\n\t *\r\n\t * @returns {module:engine/model/range~Range|null}\r\n\t */\r\n\tgetSelectionRange() {\r\n\t\tif ( this.nodeToSelect ) {\r\n\t\t\treturn Range._createOn( this.nodeToSelect );\r\n\t\t}\r\n\r\n\t\treturn this.model.schema.getNearestSelectionRange( this.position );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a range which contains all the performed changes. This is a range that, if removed, would return the model to the state\r\n\t * before the insertion. Returns `null` if no changes were done.\r\n\t *\r\n\t * @returns {module:engine/model/range~Range|null}\r\n\t */\r\n\tgetAffectedRange() {\r\n\t\tif ( !this._affectedStart ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn new Range( this._affectedStart, this._affectedEnd );\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys `Insertion` instance.\r\n\t */\r\n\tdestroy() {\r\n\t\tif ( this._affectedStart ) {\r\n\t\t\tthis._affectedStart.detach();\r\n\t\t}\r\n\r\n\t\tif ( this._affectedEnd ) {\r\n\t\t\tthis._affectedEnd.detach();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handles insertion of a single node.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/model/node~Node} node\r\n\t * @param {Object} context\r\n\t * @param {Boolean} context.isFirst Whether the given node is the first one in the content to be inserted.\r\n\t * @param {Boolean} context.isLast Whether the given node is the last one in the content to be inserted.\r\n\t */\r\n\t_handleNode( node, context ) {\r\n\t\t// Let's handle object in a special way.\r\n\t\t// * They should never be merged with other elements.\r\n\t\t// * If they are not allowed in any of the selection ancestors, they could be either autoparagraphed or totally removed.\r\n\t\tif ( this.schema.isObject( node ) ) {\r\n\t\t\tthis._handleObject( node, context );\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Try to find a place for the given node.\r\n\t\t// Split the position.parent's branch up to a point where the node can be inserted.\r\n\t\t// If it isn't allowed in the whole branch, then of course don't split anything.\r\n\t\tconst isAllowed = this._checkAndSplitToAllowedPosition( node, context );\r\n\r\n\t\tif ( !isAllowed ) {\r\n\t\t\tthis._handleDisallowedNode( node, context );\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._insert( node );\r\n\r\n\t\t// After the node was inserted we may try to merge it with its siblings.\r\n\t\t// This should happen only if it was the first and/or last of the nodes (so only with boundary nodes)\r\n\t\t// and only if the selection was in those elements initially.\r\n\t\t//\r\n\t\t// E.g.:\r\n\t\t// <p>x^</p> + <p>y</p> => <p>x</p><p>y</p> => <p>xy[]</p>\r\n\t\t// and:\r\n\t\t// <p>x^y</p> + <p>z</p> => <p>x</p>^<p>y</p> + <p>z</p> => <p>x</p><p>z</p><p>y</p> => <p>xz[]y</p>\r\n\t\t// but:\r\n\t\t// <p>x</p><p>^</p><p>z</p> + <p>y</p> => <p>x</p><p>y</p><p>z</p> (no merging)\r\n\t\t// <p>x</p>[<img>]<p>z</p> + <p>y</p> => <p>x</p><p>y</p><p>z</p> (no merging, note: after running deleteContents\r\n\t\t//\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t it's exactly the same case as above)\r\n\t\tthis._mergeSiblingsOf( node, context );\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @param {module:engine/model/element~Element} node The object element.\r\n\t * @param {Object} context\r\n\t */\r\n\t_handleObject( node, context ) {\r\n\t\t// Try finding it a place in the tree.\r\n\t\tif ( this._checkAndSplitToAllowedPosition( node ) ) {\r\n\t\t\tthis._insert( node );\r\n\t\t}\r\n\t\t// Try autoparagraphing.\r\n\t\telse {\r\n\t\t\tthis._tryAutoparagraphing( node, context );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @param {module:engine/model/node~Node} node The disallowed node which needs to be handled.\r\n\t * @param {Object} context\r\n\t */\r\n\t_handleDisallowedNode( node, context ) {\r\n\t\t// If the node is an element, try inserting its children (strip the parent).\r\n\t\tif ( node.is( 'element' ) ) {\r\n\t\t\tthis.handleNodes( node.getChildren(), context );\r\n\t\t}\r\n\t\t// If text is not allowed, try autoparagraphing it.\r\n\t\telse {\r\n\t\t\tthis._tryAutoparagraphing( node, context );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @param {module:engine/model/node~Node} node The node to insert.\r\n\t */\r\n\t_insert( node ) {\r\n\t\t/* istanbul ignore if */\r\n\t\tif ( !this.schema.checkChild( this.position, node ) ) {\r\n\t\t\t// Algorithm's correctness check. We should never end up here but it's good to know that we did.\r\n\t\t\t// Note that it would often be a silent issue if we insert node in a place where it's not allowed.\r\n\r\n\t\t\t/**\r\n\t\t\t * Given node cannot be inserted on the given position.\r\n\t\t\t *\r\n\t\t\t * @error insertcontent-wrong-position\r\n\t\t\t * @param {module:engine/model/node~Node} node Node to insert.\r\n\t\t\t * @param {module:engine/model/position~Position} position Position to insert the node at.\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'insertcontent-wrong-position: Given node cannot be inserted on the given position.',\r\n\t\t\t\tthis,\r\n\t\t\t\t{ node, position: this.position }\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tconst livePos = LivePosition.fromPosition( this.position, 'toNext' );\r\n\r\n\t\tthis._setAffectedBoundaries( this.position );\r\n\t\tthis.writer.insert( node, this.position );\r\n\r\n\t\tthis.position = livePos.toPosition();\r\n\t\tlivePos.detach();\r\n\r\n\t\t// The last inserted object should be selected because we can't put a collapsed selection after it.\r\n\t\tif ( this.schema.isObject( node ) && !this.schema.checkChild( this.position, '$text' ) ) {\r\n\t\t\tthis.nodeToSelect = node;\r\n\t\t} else {\r\n\t\t\tthis.nodeToSelect = null;\r\n\t\t}\r\n\r\n\t\tthis._filterAttributesOf.push( node );\r\n\t}\r\n\r\n\t/**\r\n\t * Sets `_affectedStart` and `_affectedEnd` to the given `position`. Should be used before a change is done during insertion process to\r\n\t * mark the affected range.\r\n\t *\r\n\t * This method is used before inserting a node or splitting a parent node. `_affectedStart` and `_affectedEnd` are also changed\r\n\t * during merging, but the logic there is more complicated so it is left out of this function.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/model/position~Position} position\r\n\t */\r\n\t_setAffectedBoundaries( position ) {\r\n\t\t// Set affected boundaries stickiness so that those position will \"expand\" when something is inserted in between them:\r\n\t\t// <paragraph>Foo][bar</paragraph> -> <paragraph>Foo]xx[bar</paragraph>\r\n\t\t// This is why it cannot be a range but two separate positions.\r\n\t\tif ( !this._affectedStart ) {\r\n\t\t\tthis._affectedStart = LivePosition.fromPosition( position, 'toPrevious' );\r\n\t\t}\r\n\r\n\t\t// If `_affectedEnd` is before the new boundary position, expand `_affectedEnd`. This can happen if first inserted node was\r\n\t\t// inserted into the parent but the next node is moved-out of that parent:\r\n\t\t// (1) <paragraph>Foo][</paragraph> -> <paragraph>Foo]xx[</paragraph>\r\n\t\t// (2) <paragraph>Foo]xx[</paragraph> -> <paragraph>Foo]xx</paragraph><widget></widget>[\r\n\t\tif ( !this._affectedEnd || this._affectedEnd.isBefore( position ) ) {\r\n\t\t\tif ( this._affectedEnd ) {\r\n\t\t\t\tthis._affectedEnd.detach();\r\n\t\t\t}\r\n\r\n\t\t\tthis._affectedEnd = LivePosition.fromPosition( position, 'toNext' );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @param {module:engine/model/node~Node} node The node which could potentially be merged.\r\n\t * @param {Object} context\r\n\t */\r\n\t_mergeSiblingsOf( node, context ) {\r\n\t\tif ( !( node instanceof Element ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst mergeLeft = this._canMergeLeft( node, context );\r\n\t\tconst mergeRight = this._canMergeRight( node, context );\r\n\t\tconst mergePosLeft = LivePosition._createBefore( node );\r\n\t\tmergePosLeft.stickiness = 'toNext';\r\n\t\tconst mergePosRight = LivePosition._createAfter( node );\r\n\t\tmergePosRight.stickiness = 'toNext';\r\n\r\n\t\tif ( mergeLeft ) {\r\n\t\t\tconst livePosition = LivePosition.fromPosition( this.position );\r\n\t\t\tlivePosition.stickiness = 'toNext';\r\n\r\n\t\t\t// If `_affectedStart` is sames as merge position, it means that the element \"marked\" by `_affectedStart` is going to be\r\n\t\t\t// removed and its contents will be moved. This won't transform `LivePosition` so `_affectedStart` needs to be moved\r\n\t\t\t// by hand to properly reflect affected range. (Due to `_affectedStart` and `_affectedEnd` stickiness, the \"range\" is\r\n\t\t\t// shown as `][`).\r\n\t\t\t//\r\n\t\t\t// Example - insert `<paragraph>Abc</paragraph><paragraph>Xyz</paragraph>` at the end of `<paragraph>Foo^</paragraph>`:\r\n\t\t\t//\r\n\t\t\t// <paragraph>Foo</paragraph><paragraph>Bar</paragraph>   -->\r\n\t\t\t// <paragraph>Foo</paragraph>]<paragraph>Abc</paragraph><paragraph>Xyz</paragraph>[<paragraph>Bar</paragraph>   -->\r\n\t\t\t// <paragraph>Foo]Abc</paragraph><paragraph>Xyz</paragraph>[<paragraph>Bar</paragraph>\r\n\t\t\t//\r\n\t\t\t// Note, that if we are here then something must have been inserted, so `_affectedStart` and `_affectedEnd` have to be set.\r\n\t\t\tif ( this._affectedStart.isEqual( mergePosLeft ) ) {\r\n\t\t\t\tthis._affectedStart.detach();\r\n\t\t\t\tthis._affectedStart = LivePosition._createAt( mergePosLeft.nodeBefore, 'end', 'toPrevious' );\r\n\t\t\t}\r\n\r\n\t\t\tthis.writer.merge( mergePosLeft );\r\n\r\n\t\t\t// If only one element (the merged one) is in the \"affected range\", also move the affected range end appropriately.\r\n\t\t\t//\r\n\t\t\t// Example - insert `<paragraph>Abc</paragraph>` at the of `<paragraph>Foo^</paragraph>`:\r\n\t\t\t//\r\n\t\t\t// <paragraph>Foo</paragraph><paragraph>Bar</paragraph>   -->\r\n\t\t\t// <paragraph>Foo</paragraph>]<paragraph>Abc</paragraph>[<paragraph>Bar</paragraph>   -->\r\n\t\t\t// <paragraph>Foo]Abc</paragraph>[<paragraph>Bar</paragraph>   -->\r\n\t\t\t// <paragraph>Foo]Abc[</paragraph><paragraph>Bar</paragraph>\r\n\t\t\tif ( mergePosLeft.isEqual( this._affectedEnd ) && context.isLast ) {\r\n\t\t\t\tthis._affectedEnd.detach();\r\n\t\t\t\tthis._affectedEnd = LivePosition._createAt( mergePosLeft.nodeBefore, 'end', 'toNext' );\r\n\t\t\t}\r\n\r\n\t\t\tthis.position = livePosition.toPosition();\r\n\t\t\tlivePosition.detach();\r\n\t\t}\r\n\r\n\t\tif ( mergeRight ) {\r\n\t\t\t/* istanbul ignore if */\r\n\t\t\tif ( !this.position.isEqual( mergePosRight ) ) {\r\n\t\t\t\t// Algorithm's correctness check. We should never end up here but it's good to know that we did.\r\n\t\t\t\t// At this point the insertion position should be after the node we'll merge. If it isn't,\r\n\t\t\t\t// it should need to be secured as in the left merge case.\r\n\t\t\t\t/**\r\n\t\t\t\t * An internal error occured during merging insertion content with siblings.\r\n\t\t\t\t * The insertion position should equal to the merge position.\r\n\t\t\t\t *\r\n\t\t\t\t * @error insertcontent-invalid-insertion-position\r\n\t\t\t\t */\r\n\t\t\t\tthrow new CKEditorError( 'insertcontent-invalid-insertion-position', this );\r\n\t\t\t}\r\n\r\n\t\t\t// Move the position to the previous node, so it isn't moved to the graveyard on merge.\r\n\t\t\t// <p>x</p>[]<p>y</p> => <p>x[]</p><p>y</p>\r\n\t\t\tthis.position = Position._createAt( mergePosRight.nodeBefore, 'end' );\r\n\r\n\t\t\t// OK:  <p>xx[]</p> + <p>yy</p> => <p>xx[]yy</p> (when sticks to previous)\r\n\t\t\t// NOK: <p>xx[]</p> + <p>yy</p> => <p>xxyy[]</p> (when sticks to next)\r\n\t\t\tconst livePosition = LivePosition.fromPosition( this.position, 'toPrevious' );\r\n\r\n\t\t\t// See comment above on moving `_affectedStart`.\r\n\t\t\tif ( this._affectedEnd.isEqual( mergePosRight ) ) {\r\n\t\t\t\tthis._affectedEnd.detach();\r\n\t\t\t\tthis._affectedEnd = LivePosition._createAt( mergePosRight.nodeBefore, 'end', 'toNext' );\r\n\t\t\t}\r\n\r\n\t\t\tthis.writer.merge( mergePosRight );\r\n\r\n\t\t\t// See comment above on moving `_affectedStart`.\r\n\t\t\tif ( mergePosRight.getShiftedBy( -1 ).isEqual( this._affectedStart ) && context.isFirst ) {\r\n\t\t\t\tthis._affectedStart.detach();\r\n\t\t\t\tthis._affectedStart = LivePosition._createAt( mergePosRight.nodeBefore, 0, 'toPrevious' );\r\n\t\t\t}\r\n\r\n\t\t\tthis.position = livePosition.toPosition();\r\n\t\t\tlivePosition.detach();\r\n\t\t}\r\n\r\n\t\tif ( mergeLeft || mergeRight ) {\r\n\t\t\t// After merge elements that were marked by _insert() to be filtered might be gone so\r\n\t\t\t// we need to mark the new container.\r\n\t\t\tthis._filterAttributesOf.push( this.position.parent );\r\n\t\t}\r\n\r\n\t\tmergePosLeft.detach();\r\n\t\tmergePosRight.detach();\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether specified node can be merged with previous sibling element.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/model/node~Node} node The node which could potentially be merged.\r\n\t * @param {Object} context\r\n\t * @returns {Boolean}\r\n\t */\r\n\t_canMergeLeft( node, context ) {\r\n\t\tconst previousSibling = node.previousSibling;\r\n\r\n\t\treturn context.isFirst &&\r\n\t\t\t( previousSibling instanceof Element ) &&\r\n\t\t\tthis.canMergeWith.has( previousSibling ) &&\r\n\t\t\tthis.model.schema.checkMerge( previousSibling, node );\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether specified node can be merged with next sibling element.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/model/node~Node} node The node which could potentially be merged.\r\n\t * @param {Object} context\r\n\t * @returns {Boolean}\r\n\t */\r\n\t_canMergeRight( node, context ) {\r\n\t\tconst nextSibling = node.nextSibling;\r\n\r\n\t\treturn context.isLast &&\r\n\t\t\t( nextSibling instanceof Element ) &&\r\n\t\t\tthis.canMergeWith.has( nextSibling ) &&\r\n\t\t\tthis.model.schema.checkMerge( node, nextSibling );\r\n\t}\r\n\r\n\t/**\r\n\t * Tries wrapping the node in a new paragraph and inserting it this way.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/model/node~Node} node The node which needs to be autoparagraphed.\r\n\t * @param {Object} context\r\n\t */\r\n\t_tryAutoparagraphing( node, context ) {\r\n\t\tconst paragraph = this.writer.createElement( 'paragraph' );\r\n\r\n\t\t// Do not autoparagraph if the paragraph won't be allowed there,\r\n\t\t// cause that would lead to an infinite loop. The paragraph would be rejected in\r\n\t\t// the next _handleNode() call and we'd be here again.\r\n\t\tif ( this._getAllowedIn( paragraph, this.position.parent ) && this.schema.checkChild( paragraph, node ) ) {\r\n\t\t\tparagraph._appendChild( node );\r\n\t\t\tthis._handleNode( paragraph, context );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @param {module:engine/model/node~Node} node\r\n\t * @returns {Boolean} Whether an allowed position was found.\r\n\t * `false` is returned if the node isn't allowed at any position up in the tree, `true` if was.\r\n\t */\r\n\t_checkAndSplitToAllowedPosition( node ) {\r\n\t\tconst allowedIn = this._getAllowedIn( node, this.position.parent );\r\n\r\n\t\tif ( !allowedIn ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\twhile ( allowedIn != this.position.parent ) {\r\n\t\t\t// If a parent which we'd need to leave is a limit element, break.\r\n\t\t\tif ( this.schema.isLimit( this.position.parent ) ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.position.isAtStart ) {\r\n\t\t\t\t// If insertion position is at the beginning of the parent, move it out instead of splitting.\r\n\t\t\t\t// <p>^Foo</p> -> ^<p>Foo</p>\r\n\t\t\t\tconst parent = this.position.parent;\r\n\r\n\t\t\t\tthis.position = this.writer.createPositionBefore( parent );\r\n\r\n\t\t\t\t// Special case – parent is empty (<p>^</p>).\r\n\t\t\t\t//\r\n\t\t\t\t// 1. parent.isEmpty\r\n\t\t\t\t// We can remove the element after moving insertion position out of it.\r\n\t\t\t\t//\r\n\t\t\t\t// 2. parent.parent === allowedIn\r\n\t\t\t\t// However parent should remain in place when allowed element is above limit element in document tree.\r\n\t\t\t\t// For example there shouldn't be allowed to remove empty paragraph from tableCell, when is pasted\r\n\t\t\t\t// content allowed in $root.\r\n\t\t\t\tif ( parent.isEmpty && parent.parent === allowedIn ) {\r\n\t\t\t\t\tthis.writer.remove( parent );\r\n\t\t\t\t}\r\n\t\t\t} else if ( this.position.isAtEnd ) {\r\n\t\t\t\t// If insertion position is at the end of the parent, move it out instead of splitting.\r\n\t\t\t\t// <p>Foo^</p> -> <p>Foo</p>^\r\n\t\t\t\tthis.position = this.writer.createPositionAfter( this.position.parent );\r\n\t\t\t} else {\r\n\t\t\t\tconst tempPos = this.writer.createPositionAfter( this.position.parent );\r\n\r\n\t\t\t\tthis._setAffectedBoundaries( this.position );\r\n\t\t\t\tthis.writer.split( this.position );\r\n\r\n\t\t\t\tthis.position = tempPos;\r\n\r\n\t\t\t\tthis.canMergeWith.add( this.position.nodeAfter );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the element in which the given node is allowed. It checks the passed element and all its ancestors.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/model/node~Node} node The node to check.\r\n\t * @param {module:engine/model/element~Element} element The element in which the node's correctness should be checked.\r\n\t * @returns {module:engine/model/element~Element|null}\r\n\t */\r\n\t_getAllowedIn( node, element ) {\r\n\t\tif ( this.schema.checkChild( element, node ) ) {\r\n\t\t\treturn element;\r\n\t\t}\r\n\r\n\t\tif ( element.parent ) {\r\n\t\t\treturn this._getAllowedIn( node, element.parent );\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/utils/modifyselection\r\n */\r\n\r\nimport Position from '../position';\r\nimport TreeWalker from '../treewalker';\r\nimport Range from '../range';\r\nimport { isInsideSurrogatePair, isInsideCombinedSymbol } from '@ckeditor/ckeditor5-utils/src/unicode';\r\nimport DocumentSelection from '../documentselection';\r\n\r\nconst wordBoundaryCharacters = ' ,.?!:;\"-()';\r\n\r\n/**\r\n * Modifies the selection. Currently, the supported modifications are:\r\n *\r\n * * Extending. The selection focus is moved in the specified `options.direction` with a step specified in `options.unit`.\r\n * Possible values for `unit` are:\r\n *  * `'character'` (default) - moves selection by one user-perceived character. In most cases this means moving by one\r\n *  character in `String` sense. However, unicode also defines \"combing marks\". These are special symbols, that combines\r\n *  with a symbol before it (\"base character\") to create one user-perceived character. For example, `q̣̇` is a normal\r\n *  letter `q` with two \"combining marks\": upper dot (`Ux0307`) and lower dot (`Ux0323`). For most actions, i.e. extending\r\n *  selection by one position, it is correct to include both \"base character\" and all of it's \"combining marks\". That is\r\n *  why `'character'` value is most natural and common method of modifying selection.\r\n *  * `'codePoint'` - moves selection by one unicode code point. In contrary to, `'character'` unit, this will insert\r\n *  selection between \"base character\" and \"combining mark\", because \"combining marks\" have their own unicode code points.\r\n *  However, for technical reasons, unicode code points with values above `UxFFFF` are represented in native `String` by\r\n *  two characters, called \"surrogate pairs\". Halves of \"surrogate pairs\" have a meaning only when placed next to each other.\r\n *  For example `𨭎` is represented in `String` by `\\uD862\\uDF4E`. Both `\\uD862` and `\\uDF4E` do not have any meaning\r\n *  outside the pair (are rendered as ? when alone). Position between them would be incorrect. In this case, selection\r\n *  extension will include whole \"surrogate pair\".\r\n *  * `'word'` - moves selection by a whole word.\r\n *\r\n * **Note:** if you extend a forward selection in a backward direction you will in fact shrink it.\r\n *\r\n * **Note:** Use {@link module:engine/model/model~Model#modifySelection} instead of this function.\r\n * This function is only exposed to be reusable in algorithms\r\n * which change the {@link module:engine/model/model~Model#modifySelection}\r\n * method's behavior.\r\n *\r\n * @param {module:engine/model/model~Model} model The model in context of which\r\n * the selection modification should be performed.\r\n * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\r\n * The selection to modify.\r\n * @param {Object} [options]\r\n * @param {'forward'|'backward'} [options.direction='forward'] The direction in which the selection should be modified.\r\n * @param {'character'|'codePoint'|'word'} [options.unit='character'] The unit by which selection should be modified.\r\n */\r\nexport default function modifySelection( model, selection, options = {} ) {\r\n\tconst schema = model.schema;\r\n\tconst isForward = options.direction != 'backward';\r\n\tconst unit = options.unit ? options.unit : 'character';\r\n\r\n\tconst focus = selection.focus;\r\n\r\n\tconst walker = new TreeWalker( {\r\n\t\tboundaries: getSearchRange( focus, isForward ),\r\n\t\tsingleCharacters: true,\r\n\t\tdirection: isForward ? 'forward' : 'backward'\r\n\t} );\r\n\r\n\tconst data = { walker, schema, isForward, unit };\r\n\r\n\tlet next;\r\n\r\n\twhile ( ( next = walker.next() ) ) {\r\n\t\tif ( next.done ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst position = tryExtendingTo( data, next.value );\r\n\r\n\t\tif ( position ) {\r\n\t\t\tif ( selection instanceof DocumentSelection ) {\r\n\t\t\t\tmodel.change( writer => {\r\n\t\t\t\t\twriter.setSelectionFocus( position );\r\n\t\t\t\t} );\r\n\t\t\t} else {\r\n\t\t\t\tselection.setFocus( position );\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Checks whether the selection can be extended to the the walker's next value (next position).\r\n// @param {{ walker, unit, isForward, schema }} data\r\n// @param {module:engine/view/treewalker~TreeWalkerValue} value\r\nfunction tryExtendingTo( data, value ) {\r\n\t// If found text, we can certainly put the focus in it. Let's just find a correct position\r\n\t// based on the unit.\r\n\tif ( value.type == 'text' ) {\r\n\t\tif ( data.unit === 'word' ) {\r\n\t\t\treturn getCorrectWordBreakPosition( data.walker, data.isForward );\r\n\t\t}\r\n\r\n\t\treturn getCorrectPosition( data.walker, data.unit, data.isForward );\r\n\t}\r\n\r\n\t// Entering an element.\r\n\tif ( value.type == ( data.isForward ? 'elementStart' : 'elementEnd' ) ) {\r\n\t\t// If it's an object, we can select it now.\r\n\t\tif ( data.schema.isObject( value.item ) ) {\r\n\t\t\treturn Position._createAt( value.item, data.isForward ? 'after' : 'before' );\r\n\t\t}\r\n\r\n\t\t// If text allowed on this position, extend to this place.\r\n\t\tif ( data.schema.checkChild( value.nextPosition, '$text' ) ) {\r\n\t\t\treturn value.nextPosition;\r\n\t\t}\r\n\t}\r\n\t// Leaving an element.\r\n\telse {\r\n\t\t// If leaving a limit element, stop.\r\n\t\tif ( data.schema.isLimit( value.item ) ) {\r\n\t\t\t// NOTE: Fast-forward the walker until the end.\r\n\t\t\tdata.walker.skip( () => true );\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// If text allowed on this position, extend to this place.\r\n\t\tif ( data.schema.checkChild( value.nextPosition, '$text' ) ) {\r\n\t\t\treturn value.nextPosition;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Finds a correct position by walking in a text node and checking whether selection can be extended to given position\r\n// or should be extended further.\r\n//\r\n// @param {module:engine/model/treewalker~TreeWalker} walker\r\n// @param {String} unit The unit by which selection should be modified.\r\nfunction getCorrectPosition( walker, unit ) {\r\n\tconst textNode = walker.position.textNode;\r\n\r\n\tif ( textNode ) {\r\n\t\tconst data = textNode.data;\r\n\t\tlet offset = walker.position.offset - textNode.startOffset;\r\n\r\n\t\twhile ( isInsideSurrogatePair( data, offset ) || ( unit == 'character' && isInsideCombinedSymbol( data, offset ) ) ) {\r\n\t\t\twalker.next();\r\n\r\n\t\t\toffset = walker.position.offset - textNode.startOffset;\r\n\t\t}\r\n\t}\r\n\r\n\treturn walker.position;\r\n}\r\n\r\n// Finds a correct position of a word break by walking in a text node and checking whether selection can be extended to given position\r\n// or should be extended further.\r\n//\r\n// @param {module:engine/model/treewalker~TreeWalker} walker\r\n// @param {Boolean} isForward Is the direction in which the selection should be modified is forward.\r\nfunction getCorrectWordBreakPosition( walker, isForward ) {\r\n\tlet textNode = walker.position.textNode;\r\n\r\n\tif ( textNode ) {\r\n\t\tlet offset = walker.position.offset - textNode.startOffset;\r\n\r\n\t\twhile ( !isAtWordBoundary( textNode.data, offset, isForward ) && !isAtNodeBoundary( textNode, offset, isForward ) ) {\r\n\t\t\twalker.next();\r\n\r\n\t\t\t// Check of adjacent text nodes with different attributes (like BOLD).\r\n\t\t\t// Example          : 'foofoo []bar<$text bold=\"true\">bar</$text> bazbaz'\r\n\t\t\t// should expand to : 'foofoo [bar<$text bold=\"true\">bar</$text>] bazbaz'.\r\n\t\t\tconst nextNode = isForward ? walker.position.nodeAfter : walker.position.nodeBefore;\r\n\r\n\t\t\t// Scan only text nodes. Ignore inline elements (like `<softBreak>`).\r\n\t\t\tif ( nextNode && nextNode.is( 'text' ) ) {\r\n\t\t\t\t// Check boundary char of an adjacent text node.\r\n\t\t\t\tconst boundaryChar = nextNode.data.charAt( isForward ? 0 : nextNode.data.length - 1 );\r\n\r\n\t\t\t\t// Go to the next node if the character at the boundary of that node belongs to the same word.\r\n\t\t\t\tif ( !wordBoundaryCharacters.includes( boundaryChar ) ) {\r\n\t\t\t\t\t// If adjacent text node belongs to the same word go to it & reset values.\r\n\t\t\t\t\twalker.next();\r\n\r\n\t\t\t\t\ttextNode = walker.position.textNode;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\toffset = walker.position.offset - textNode.startOffset;\r\n\t\t}\r\n\t}\r\n\r\n\treturn walker.position;\r\n}\r\n\r\nfunction getSearchRange( start, isForward ) {\r\n\tconst root = start.root;\r\n\tconst searchEnd = Position._createAt( root, isForward ? 'end' : 0 );\r\n\r\n\tif ( isForward ) {\r\n\t\treturn new Range( start, searchEnd );\r\n\t} else {\r\n\t\treturn new Range( searchEnd, start );\r\n\t}\r\n}\r\n\r\n// Checks if selection is on word boundary.\r\n//\r\n// @param {String} data The text node value to investigate.\r\n// @param {Number} offset Position offset.\r\n// @param {Boolean} isForward Is the direction in which the selection should be modified is forward.\r\nfunction isAtWordBoundary( data, offset, isForward ) {\r\n\t// The offset to check depends on direction.\r\n\tconst offsetToCheck = offset + ( isForward ? 0 : -1 );\r\n\r\n\treturn wordBoundaryCharacters.includes( data.charAt( offsetToCheck ) );\r\n}\r\n\r\n// Checks if selection is on node boundary.\r\n//\r\n// @param {module:engine/model/text~Text} textNode The text node to investigate.\r\n// @param {Number} offset Position offset.\r\n// @param {Boolean} isForward Is the direction in which the selection should be modified is forward.\r\nfunction isAtNodeBoundary( textNode, offset, isForward ) {\r\n\treturn offset === ( isForward ? textNode.endOffset : 0 );\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/utils/selection-post-fixer\r\n */\r\n\r\nimport Range from '../range';\r\nimport Position from '../position';\r\n\r\n/**\r\n * Injects selection post-fixer to the model.\r\n *\r\n * The role of the selection post-fixer is to ensure that the selection is in a correct place\r\n * after a {@link module:engine/model/model~Model#change `change()`} block was executed.\r\n *\r\n * The correct position means that:\r\n *\r\n * * All collapsed selection ranges are in a place where the {@link module:engine/model/schema~Schema}\r\n * allows a `$text`.\r\n * * None of the selection's non-collapsed ranges crosses a {@link module:engine/model/schema~Schema#isLimit limit element}\r\n * boundary (a range must be rooted within one limit element).\r\n * * Only {@link module:engine/model/schema~Schema#isObject object elements} can be selected from the outside\r\n * (e.g. `[<paragraph>foo</paragraph>]` is invalid). This rule applies independently to both selection ends, so this\r\n * selection is correct: `<paragraph>f[oo</paragraph><image></image>]`.\r\n *\r\n * If the position is not correct, the post-fixer will automatically correct it.\r\n *\r\n * ## Fixing a non-collapsed selection\r\n *\r\n * See as an example a selection that starts in a P1 element and ends inside the text of a TD element\r\n * (`[` and `]` are range boundaries and `(l)` denotes an element defined as `isLimit=true`):\r\n *\r\n *\t\troot\r\n *\t\t |- element P1\r\n *\t\t |   |- \"foo\"                                      root\r\n *\t\t |- element TABLE (l)                   P1         TABLE             P2\r\n *\t\t |   |- element TR (l)                 f o[o     TR      TR         b a r\r\n *\t\t |   |   |- element TD (l)                       TD      TD\r\n *\t\t |   |       |- \"aaa\"                          a]a a    b b b\r\n *\t\t |   |- element TR (l)\r\n *\t\t |   |   |- element TD (l)                           ||\r\n *\t\t |   |       |- \"bbb\"                                ||\r\n *\t\t |- element P2                                       VV\r\n *\t\t |   |- \"bar\"\r\n *\t\t                                                   root\r\n *\t\t                                        P1         TABLE]            P2\r\n *\t\t                                       f o[o     TR      TR         b a r\r\n *\t\t                                                 TD      TD\r\n *\t\t                                               a a a    b b b\r\n *\r\n * In the example above, the TABLE, TR and TD are defined as `isLimit=true` in the schema. The range which is not contained within\r\n * a single limit element must be expanded to select the outermost limit element. The range end is inside the text node of the TD element.\r\n * As the TD element is a child of the TR and TABLE elements, where both are defined as `isLimit=true` in the schema, the range must be\r\n * expanded to select the whole TABLE element.\r\n *\r\n * **Note** If the selection contains multiple ranges, the method returns a minimal set of ranges that are not intersecting after expanding\r\n * them to select `isLimit=true` elements.\r\n *\r\n * @param {module:engine/model/model~Model} model\r\n */\r\nexport function injectSelectionPostFixer( model ) {\r\n\tmodel.document.registerPostFixer( writer => selectionPostFixer( writer, model ) );\r\n}\r\n\r\n// The selection post-fixer.\r\n//\r\n// @param {module:engine/model/writer~Writer} writer\r\n// @param {module:engine/model/model~Model} model\r\nfunction selectionPostFixer( writer, model ) {\r\n\tconst selection = model.document.selection;\r\n\tconst schema = model.schema;\r\n\r\n\tconst ranges = [];\r\n\r\n\tlet wasFixed = false;\r\n\r\n\tfor ( const modelRange of selection.getRanges() ) {\r\n\t\t// Go through all ranges in selection and try fixing each of them.\r\n\t\t// Those ranges might overlap but will be corrected later.\r\n\t\tconst correctedRange = tryFixingRange( modelRange, schema );\r\n\r\n\t\tif ( correctedRange ) {\r\n\t\t\tranges.push( correctedRange );\r\n\t\t\twasFixed = true;\r\n\t\t} else {\r\n\t\t\tranges.push( modelRange );\r\n\t\t}\r\n\t}\r\n\r\n\t// If any of ranges were corrected update the selection.\r\n\tif ( wasFixed ) {\r\n\t\twriter.setSelection( mergeIntersectingRanges( ranges ), { backward: selection.isBackward } );\r\n\t}\r\n}\r\n\r\n// Tries fixing a range if it's incorrect.\r\n//\r\n// @param {module:engine/model/range~Range} range\r\n// @param {module:engine/model/schema~Schema} schema\r\n// @returns {module:engine/model/range~Range|null} Returns fixed range or null if range is valid.\r\nfunction tryFixingRange( range, schema ) {\r\n\tif ( range.isCollapsed ) {\r\n\t\treturn tryFixingCollapsedRange( range, schema );\r\n\t}\r\n\r\n\treturn tryFixingNonCollapsedRage( range, schema );\r\n}\r\n\r\n// Tries to fix collapsed ranges.\r\n//\r\n// * Fixes situation when a range is in a place where $text is not allowed\r\n//\r\n// @param {module:engine/model/range~Range} range Collapsed range to fix.\r\n// @param {module:engine/model/schema~Schema} schema\r\n// @returns {module:engine/model/range~Range|null} Returns fixed range or null if range is valid.\r\nfunction tryFixingCollapsedRange( range, schema ) {\r\n\tconst originalPosition = range.start;\r\n\r\n\tconst nearestSelectionRange = schema.getNearestSelectionRange( originalPosition );\r\n\r\n\t// This might be null ie when editor data is empty.\r\n\t// In such cases there is no need to fix the selection range.\r\n\tif ( !nearestSelectionRange ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tif ( !nearestSelectionRange.isCollapsed ) {\r\n\t\treturn nearestSelectionRange;\r\n\t}\r\n\r\n\tconst fixedPosition = nearestSelectionRange.start;\r\n\r\n\t// Fixed position is the same as original - no need to return corrected range.\r\n\tif ( originalPosition.isEqual( fixedPosition ) ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn new Range( fixedPosition );\r\n}\r\n\r\n// Tries to fix an expanded range.\r\n//\r\n// @param {module:engine/model/range~Range} range Expanded range to fix.\r\n// @param {module:engine/model/schema~Schema} schema\r\n// @returns {module:engine/model/range~Range|null} Returns fixed range or null if range is valid.\r\nfunction tryFixingNonCollapsedRage( range, schema ) {\r\n\tconst start = range.start;\r\n\tconst end = range.end;\r\n\r\n\tconst isTextAllowedOnStart = schema.checkChild( start, '$text' );\r\n\tconst isTextAllowedOnEnd = schema.checkChild( end, '$text' );\r\n\r\n\tconst startLimitElement = schema.getLimitElement( start );\r\n\tconst endLimitElement = schema.getLimitElement( end );\r\n\r\n\t// Ranges which both end are inside the same limit element (or root) might needs only minor fix.\r\n\tif ( startLimitElement === endLimitElement ) {\r\n\t\t// Range is valid when both position allows to place a text:\r\n\t\t// - <block>f[oobarba]z</block>\r\n\t\t// This would be \"fixed\" by a next check but as it will be the same it's better to return null so the selection stays the same.\r\n\t\tif ( isTextAllowedOnStart && isTextAllowedOnEnd ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\t// Range that is on non-limit element (or is partially) must be fixed so it is placed inside the block around $text:\r\n\t\t// - [<block>foo</block>]    ->    <block>[foo]</block>\r\n\t\t// - [<block>foo]</block>    ->    <block>[foo]</block>\r\n\t\t// - <block>f[oo</block>]    ->    <block>f[oo]</block>\r\n\t\t// - [<block>foo</block><object></object>]    ->    <block>[foo</block><object></object>]\r\n\t\tif ( checkSelectionOnNonLimitElements( start, end, schema ) ) {\r\n\t\t\tconst isStartObject = start.nodeAfter && schema.isObject( start.nodeAfter );\r\n\t\t\tconst fixedStart = isStartObject ? null : schema.getNearestSelectionRange( start, 'forward' );\r\n\r\n\t\t\tconst isEndObject = end.nodeBefore && schema.isObject( end.nodeBefore );\r\n\t\t\tconst fixedEnd = isEndObject ? null : schema.getNearestSelectionRange( end, 'backward' );\r\n\r\n\t\t\t// The schema.getNearestSelectionRange might return null - if that happens use original position.\r\n\t\t\tconst rangeStart = fixedStart ? fixedStart.start : start;\r\n\t\t\tconst rangeEnd = fixedEnd ? fixedEnd.start : end;\r\n\r\n\t\t\treturn new Range( rangeStart, rangeEnd );\r\n\t\t}\r\n\t}\r\n\r\n\tconst isStartInLimit = startLimitElement && !startLimitElement.is( 'rootElement' );\r\n\tconst isEndInLimit = endLimitElement && !endLimitElement.is( 'rootElement' );\r\n\r\n\t// At this point we eliminated valid positions on text nodes so if one of range positions is placed inside a limit element\r\n\t// then the range crossed limit element boundaries and needs to be fixed.\r\n\tif ( isStartInLimit || isEndInLimit ) {\r\n\t\tconst bothInSameParent = ( start.nodeAfter && end.nodeBefore ) && start.nodeAfter.parent === end.nodeBefore.parent;\r\n\r\n\t\tconst expandStart = isStartInLimit && ( !bothInSameParent || !isInObject( start.nodeAfter, schema ) );\r\n\t\tconst expandEnd = isEndInLimit && ( !bothInSameParent || !isInObject( end.nodeBefore, schema ) );\r\n\r\n\t\t// Although we've already found limit element on start/end positions we must find the outer-most limit element.\r\n\t\t// as limit elements might be nested directly inside (ie table > tableRow > tableCell).\r\n\t\tlet fixedStart = start;\r\n\t\tlet fixedEnd = end;\r\n\r\n\t\tif ( expandStart ) {\r\n\t\t\tfixedStart = Position._createBefore( findOutermostLimitAncestor( startLimitElement, schema ) );\r\n\t\t}\r\n\r\n\t\tif ( expandEnd ) {\r\n\t\t\tfixedEnd = Position._createAfter( findOutermostLimitAncestor( endLimitElement, schema ) );\r\n\t\t}\r\n\r\n\t\treturn new Range( fixedStart, fixedEnd );\r\n\t}\r\n\r\n\t// Range was not fixed at this point so it is valid - ie it was placed around limit element already.\r\n\treturn null;\r\n}\r\n\r\n// Finds the outer-most ancestor.\r\n//\r\n// @param {module:engine/model/node~Node} startingNode\r\n// @param {module:engine/model/schema~Schema} schema\r\n// @param {String} expandToDirection Direction of expansion - either 'start' or 'end' of the range.\r\n// @returns {module:engine/model/node~Node}\r\nfunction findOutermostLimitAncestor( startingNode, schema ) {\r\n\tlet isLimitNode = startingNode;\r\n\tlet parent = isLimitNode;\r\n\r\n\t// Find outer most isLimit block as such blocks might be nested (ie. in tables).\r\n\twhile ( schema.isLimit( parent ) && parent.parent ) {\r\n\t\tisLimitNode = parent;\r\n\t\tparent = parent.parent;\r\n\t}\r\n\r\n\treturn isLimitNode;\r\n}\r\n\r\n// Checks whether any of range boundaries is placed around non-limit elements.\r\n//\r\n// @param {module:engine/model/position~Position} start\r\n// @param {module:engine/model/position~Position} end\r\n// @param {module:engine/model/schema~Schema} schema\r\n// @returns {Boolean}\r\nfunction checkSelectionOnNonLimitElements( start, end, schema ) {\r\n\tconst startIsOnBlock = ( start.nodeAfter && !schema.isLimit( start.nodeAfter ) ) || schema.checkChild( start, '$text' );\r\n\tconst endIsOnBlock = ( end.nodeBefore && !schema.isLimit( end.nodeBefore ) ) || schema.checkChild( end, '$text' );\r\n\r\n\t// We should fix such selection when one of those nodes needs fixing.\r\n\treturn startIsOnBlock || endIsOnBlock;\r\n}\r\n\r\n// Returns a minimal non-intersecting array of ranges.\r\n//\r\n// @param {Array.<module:engine/model/range~Range>} ranges\r\n// @returns {Array.<module:engine/model/range~Range>}\r\nfunction mergeIntersectingRanges( ranges ) {\r\n\tconst nonIntersectingRanges = [];\r\n\r\n\t// First range will always be fine.\r\n\tnonIntersectingRanges.push( ranges.shift() );\r\n\r\n\tfor ( const range of ranges ) {\r\n\t\tconst previousRange = nonIntersectingRanges.pop();\r\n\r\n\t\tif ( range.isIntersecting( previousRange ) ) {\r\n\t\t\t// Get the sum of two ranges.\r\n\t\t\tconst start = previousRange.start.isAfter( range.start ) ? range.start : previousRange.start;\r\n\t\t\tconst end = previousRange.end.isAfter( range.end ) ? previousRange.end : range.end;\r\n\r\n\t\t\tconst merged = new Range( start, end );\r\n\t\t\tnonIntersectingRanges.push( merged );\r\n\t\t} else {\r\n\t\t\tnonIntersectingRanges.push( previousRange );\r\n\t\t\tnonIntersectingRanges.push( range );\r\n\t\t}\r\n\t}\r\n\r\n\treturn nonIntersectingRanges;\r\n}\r\n\r\n// Checks if node exists and if it's an object.\r\n//\r\n// @param {module:engine/model/node~Node} node\r\n// @param {module:engine/model/schema~Schema} schema\r\n// @returns {Boolean}\r\nfunction isInObject( node, schema ) {\r\n\treturn node && schema.isObject( node );\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/model/writer\r\n */\r\n\r\nimport AttributeOperation from './operation/attributeoperation';\r\nimport DetachOperation from './operation/detachoperation';\r\nimport InsertOperation from './operation/insertoperation';\r\nimport MarkerOperation from './operation/markeroperation';\r\nimport MoveOperation from './operation/moveoperation';\r\nimport RenameOperation from './operation/renameoperation';\r\nimport RootAttributeOperation from './operation/rootattributeoperation';\r\nimport SplitOperation from './operation/splitoperation';\r\nimport MergeOperation from './operation/mergeoperation';\r\n\r\nimport DocumentFragment from './documentfragment';\r\nimport Text from './text';\r\nimport Element from './element';\r\nimport RootElement from './rootelement';\r\nimport Position from './position';\r\nimport Range from './range.js';\r\nimport DocumentSelection from './documentselection';\r\n\r\nimport toMap from '@ckeditor/ckeditor5-utils/src/tomap';\r\n\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\n\r\n/**\r\n * The model can only be modified by using the writer. It should be used whenever you want to create a node, modify\r\n * child nodes, attributes or text, set the selection's position and its attributes.\r\n *\r\n * The instance of the writer is only available in the {@link module:engine/model/model~Model#change `change()`} or\r\n * {@link module:engine/model/model~Model#enqueueChange `enqueueChange()`}.\r\n *\r\n *\t\tmodel.change( writer => {\r\n *\t\t\twriter.insertText( 'foo', paragraph, 'end' );\r\n *\t\t} );\r\n *\r\n * Note that the writer should never be stored and used outside of the `change()` and\r\n * `enqueueChange()` blocks.\r\n *\r\n * Note that writer's methods do not check the {@link module:engine/model/schema~Schema}. It is possible\r\n * to create incorrect model structures by using the writer. Read more about in\r\n * {@glink framework/guides/deep-dive/schema#who-checks-the-schema \"Who checks the schema?\"}.\r\n *\r\n * @see module:engine/model/model~Model#change\r\n * @see module:engine/model/model~Model#enqueueChange\r\n */\r\nexport default class Writer {\r\n\t/**\r\n\t * Creates a writer instance.\r\n\t *\r\n\t * **Note:** It is not recommended to use it directly. Use {@link module:engine/model/model~Model#change `Model#change()`} or\r\n\t * {@link module:engine/model/model~Model#enqueueChange `Model#enqueueChange()`} instead.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/model/model~Model} model\r\n\t * @param {module:engine/model/batch~Batch} batch\r\n\t */\r\n\tconstructor( model, batch ) {\r\n\t\t/**\r\n\t\t * Instance of the model on which this writer operates.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @type {module:engine/model/model~Model}\r\n\t\t */\r\n\t\tthis.model = model;\r\n\r\n\t\t/**\r\n\t\t * The batch to which this writer will add changes.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @type {module:engine/model/batch~Batch}\r\n\t\t */\r\n\t\tthis.batch = batch;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new {@link module:engine/model/text~Text text node}.\r\n\t *\r\n\t *\t\twriter.createText( 'foo' );\r\n\t *\t\twriter.createText( 'foo', { bold: true } );\r\n\t *\r\n\t * @param {String} data Text data.\r\n\t * @param {Object} [attributes] Text attributes.\r\n\t * @returns {module:engine/model/text~Text} Created text node.\r\n\t */\r\n\tcreateText( data, attributes ) {\r\n\t\treturn new Text( data, attributes );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new {@link module:engine/model/element~Element element}.\r\n\t *\r\n\t *\t\twriter.createElement( 'paragraph' );\r\n\t *\t\twriter.createElement( 'paragraph', { alignment: 'center' } );\r\n\t *\r\n\t * @param {String} name Name of the element.\r\n\t * @param {Object} [attributes] Elements attributes.\r\n\t * @returns {module:engine/model/element~Element} Created element.\r\n\t */\r\n\tcreateElement( name, attributes ) {\r\n\t\treturn new Element( name, attributes );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new {@link module:engine/model/documentfragment~DocumentFragment document fragment}.\r\n\t *\r\n\t * @returns {module:engine/model/documentfragment~DocumentFragment} Created document fragment.\r\n\t */\r\n\tcreateDocumentFragment() {\r\n\t\treturn new DocumentFragment();\r\n\t}\r\n\r\n\t/**\r\n\t * Inserts item on given position.\r\n\t *\r\n\t *\t\tconst paragraph = writer.createElement( 'paragraph' );\r\n\t *\t\twriter.insert( paragraph, position );\r\n\t *\r\n\t * Instead of using position you can use parent and offset:\r\n\t *\r\n\t *\t\tconst text = writer.createText( 'foo' );\r\n\t *\t\twriter.insert( text, paragraph, 5 );\r\n\t *\r\n\t * You can also use `end` instead of the offset to insert at the end:\r\n\t *\r\n\t *\t\tconst text = writer.createText( 'foo' );\r\n\t *\t\twriter.insert( text, paragraph, 'end' );\r\n\t *\r\n\t * Or insert before or after another element:\r\n\t *\r\n\t *\t\tconst paragraph = writer.createElement( 'paragraph' );\r\n\t *\t\twriter.insert( paragraph, anotherParagraph, 'after' );\r\n\t *\r\n\t * These parameters works the same way as {@link #createPositionAt `writer.createPositionAt()`}.\r\n\t *\r\n\t * Note that if the item already has parent it will be removed from the previous parent.\r\n\t *\r\n\t * Note that you cannot re-insert a node from a document to a different document or a document fragment. In this case,\r\n\t * `model-writer-insert-forbidden-move` is thrown.\r\n\t *\r\n\t * If you want to move {@link module:engine/model/range~Range range} instead of an\r\n\t * {@link module:engine/model/item~Item item} use {@link module:engine/model/writer~Writer#move `Writer#move()`}.\r\n\t *\r\n\t * **Note:** For a paste-like content insertion mechanism see\r\n\t * {@link module:engine/model/model~Model#insertContent `model.insertContent()`}.\r\n\t *\r\n\t * @param {module:engine/model/item~Item|module:engine/model/documentfragment~DocumentFragment} item Item or document\r\n\t * fragment to insert.\r\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\r\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\r\n\t * second parameter is a {@link module:engine/model/item~Item model item}.\r\n\t */\r\n\tinsert( item, itemOrPosition, offset = 0 ) {\r\n\t\tthis._assertWriterUsedCorrectly();\r\n\r\n\t\tif ( item instanceof Text && item.data == '' ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst position = Position._createAt( itemOrPosition, offset );\r\n\r\n\t\t// If item has a parent already.\r\n\t\tif ( item.parent ) {\r\n\t\t\t// We need to check if item is going to be inserted within the same document.\r\n\t\t\tif ( isSameTree( item.root, position.root ) ) {\r\n\t\t\t\t// If it's we just need to move it.\r\n\t\t\t\tthis.move( Range._createOn( item ), position );\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// If it isn't the same root.\r\n\t\t\telse {\r\n\t\t\t\tif ( item.root.document ) {\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Cannot move a node from a document to a different tree.\r\n\t\t\t\t\t * It is forbidden to move a node that was already in a document outside of it.\r\n\t\t\t\t\t *\r\n\t\t\t\t\t * @error model-writer-insert-forbidden-move\r\n\t\t\t\t\t */\r\n\t\t\t\t\tthrow new CKEditorError(\r\n\t\t\t\t\t\t'model-writer-insert-forbidden-move: ' +\r\n\t\t\t\t\t\t'Cannot move a node from a document to a different tree. ' +\r\n\t\t\t\t\t\t'It is forbidden to move a node that was already in a document outside of it.',\r\n\t\t\t\t\t\tthis\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Move between two different document fragments or from document fragment to a document is possible.\r\n\t\t\t\t\t// In that case, remove the item from it's original parent.\r\n\t\t\t\t\tthis.remove( item );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst version = position.root.document ? position.root.document.version : null;\r\n\r\n\t\tconst insert = new InsertOperation( position, item, version );\r\n\r\n\t\tif ( item instanceof Text ) {\r\n\t\t\tinsert.shouldReceiveAttributes = true;\r\n\t\t}\r\n\r\n\t\tthis.batch.addOperation( insert );\r\n\t\tthis.model.applyOperation( insert );\r\n\r\n\t\t// When element is a DocumentFragment we need to move its markers to Document#markers.\r\n\t\tif ( item instanceof DocumentFragment ) {\r\n\t\t\tfor ( const [ markerName, markerRange ] of item.markers ) {\r\n\t\t\t\t// We need to migrate marker range from DocumentFragment to Document.\r\n\t\t\t\tconst rangeRootPosition = Position._createAt( markerRange.root, 0 );\r\n\t\t\t\tconst range = new Range(\r\n\t\t\t\t\tmarkerRange.start._getCombined( rangeRootPosition, position ),\r\n\t\t\t\t\tmarkerRange.end._getCombined( rangeRootPosition, position )\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconst options = { range, usingOperation: true, affectsData: true };\r\n\r\n\t\t\t\tif ( this.model.markers.has( markerName ) ) {\r\n\t\t\t\t\tthis.updateMarker( markerName, options );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.addMarker( markerName, options );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and inserts text on given position. You can optionally set text attributes:\r\n\t *\r\n\t *\t\twriter.insertText( 'foo', position );\r\n\t *\t\twriter.insertText( 'foo', { bold: true }, position );\r\n\t *\r\n\t * Instead of using position you can use parent and offset or define that text should be inserted at the end\r\n\t * or before or after other node:\r\n\t *\r\n\t *\t\t// Inserts 'foo' in paragraph, at offset 5:\r\n\t *\t\twriter.insertText( 'foo', paragraph, 5 );\r\n\t *\t\t// Inserts 'foo' at the end of a paragraph:\r\n\t *\t\twriter.insertText( 'foo', paragraph, 'end' );\r\n\t *\t\t// Inserts 'foo' after an image:\r\n\t *\t\twriter.insertText( 'foo', image, 'after' );\r\n\t *\r\n\t * These parameters work in the same way as {@link #createPositionAt `writer.createPositionAt()`}.\r\n\t *\r\n\t * @param {String} data Text data.\r\n\t * @param {Object} [attributes] Text attributes.\r\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\r\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\r\n\t * third parameter is a {@link module:engine/model/item~Item model item}.\r\n\t */\r\n\tinsertText( text, attributes, itemOrPosition, offset ) {\r\n\t\tif ( attributes instanceof DocumentFragment || attributes instanceof Element || attributes instanceof Position ) {\r\n\t\t\tthis.insert( this.createText( text ), attributes, itemOrPosition );\r\n\t\t} else {\r\n\t\t\tthis.insert( this.createText( text, attributes ), itemOrPosition, offset );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and inserts element on given position. You can optionally set attributes:\r\n\t *\r\n\t *\t\twriter.insertElement( 'paragraph', position );\r\n\t *\t\twriter.insertElement( 'paragraph', { alignment: 'center' }, position );\r\n\t *\r\n\t * Instead of using position you can use parent and offset or define that text should be inserted at the end\r\n\t * or before or after other node:\r\n\t *\r\n\t *\t\t// Inserts paragraph in the root at offset 5:\r\n\t *\t\twriter.insertElement( 'paragraph', root, 5 );\r\n\t *\t\t// Inserts paragraph at the end of a blockquote:\r\n\t *\t\twriter.insertElement( 'paragraph', blockquote, 'end' );\r\n\t *\t\t// Inserts after an image:\r\n\t *\t\twriter.insertElement( 'paragraph', image, 'after' );\r\n\t *\r\n\t * These parameters works the same way as {@link #createPositionAt `writer.createPositionAt()`}.\r\n\t *\r\n\t * @param {String} name Name of the element.\r\n\t * @param {Object} [attributes] Elements attributes.\r\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\r\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\r\n\t * third parameter is a {@link module:engine/model/item~Item model item}.\r\n\t */\r\n\tinsertElement( name, attributes, itemOrPosition, offset ) {\r\n\t\tif ( attributes instanceof DocumentFragment || attributes instanceof Element || attributes instanceof Position ) {\r\n\t\t\tthis.insert( this.createElement( name ), attributes, itemOrPosition );\r\n\t\t} else {\r\n\t\t\tthis.insert( this.createElement( name, attributes ), itemOrPosition, offset );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Inserts item at the end of the given parent.\r\n\t *\r\n\t *\t\tconst paragraph = writer.createElement( 'paragraph' );\r\n\t *\t\twriter.append( paragraph, root );\r\n\t *\r\n\t * Note that if the item already has parent it will be removed from the previous parent.\r\n\t *\r\n\t * If you want to move {@link module:engine/model/range~Range range} instead of an\r\n\t * {@link module:engine/model/item~Item item} use {@link module:engine/model/writer~Writer#move `Writer#move()`}.\r\n\t *\r\n\t * @param {module:engine/model/item~Item|module:engine/model/documentfragment~DocumentFragment}\r\n\t * item Item or document fragment to insert.\r\n\t * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} parent\r\n\t */\r\n\tappend( item, parent ) {\r\n\t\tthis.insert( item, parent, 'end' );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates text node and inserts it at the end of the parent. You can optionally set text attributes:\r\n\t *\r\n\t *\t\twriter.appendText( 'foo', paragraph );\r\n\t *\t\twriter.appendText( 'foo', { bold: true }, paragraph );\r\n\t *\r\n\t * @param {String} text Text data.\r\n\t * @param {Object} [attributes] Text attributes.\r\n\t * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} parent\r\n\t */\r\n\tappendText( text, attributes, parent ) {\r\n\t\tif ( attributes instanceof DocumentFragment || attributes instanceof Element ) {\r\n\t\t\tthis.insert( this.createText( text ), attributes, 'end' );\r\n\t\t} else {\r\n\t\t\tthis.insert( this.createText( text, attributes ), parent, 'end' );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates element and inserts it at the end of the parent. You can optionally set attributes:\r\n\t *\r\n\t *\t\twriter.appendElement( 'paragraph', root );\r\n\t *\t\twriter.appendElement( 'paragraph', { alignment: 'center' }, root );\r\n\t *\r\n\t * @param {String} name Name of the element.\r\n\t * @param {Object} [attributes] Elements attributes.\r\n\t * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} parent\r\n\t */\r\n\tappendElement( name, attributes, parent ) {\r\n\t\tif ( attributes instanceof DocumentFragment || attributes instanceof Element ) {\r\n\t\t\tthis.insert( this.createElement( name ), attributes, 'end' );\r\n\t\t} else {\r\n\t\t\tthis.insert( this.createElement( name, attributes ), parent, 'end' );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets value of the attribute with given key on a {@link module:engine/model/item~Item model item}\r\n\t * or on a {@link module:engine/model/range~Range range}.\r\n\t *\r\n\t * @param {String} key Attribute key.\r\n\t * @param {*} value Attribute new value.\r\n\t * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange\r\n\t * Model item or range on which the attribute will be set.\r\n\t */\r\n\tsetAttribute( key, value, itemOrRange ) {\r\n\t\tthis._assertWriterUsedCorrectly();\r\n\r\n\t\tif ( itemOrRange instanceof Range ) {\r\n\t\t\tconst ranges = itemOrRange.getMinimalFlatRanges();\r\n\r\n\t\t\tfor ( const range of ranges ) {\r\n\t\t\t\tsetAttributeOnRange( this, key, value, range );\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetAttributeOnItem( this, key, value, itemOrRange );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets values of attributes on a {@link module:engine/model/item~Item model item}\r\n\t * or on a {@link module:engine/model/range~Range range}.\r\n\t *\r\n\t *\t\twriter.setAttributes( {\r\n\t *\t\t\tbold: true,\r\n\t *\t\t\titalic: true\r\n\t *\t\t}, range );\r\n\t *\r\n\t * @param {Object} attributes Attributes keys and values.\r\n\t * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange\r\n\t * Model item or range on which the attributes will be set.\r\n\t */\r\n\tsetAttributes( attributes, itemOrRange ) {\r\n\t\tfor ( const [ key, val ] of toMap( attributes ) ) {\r\n\t\t\tthis.setAttribute( key, val, itemOrRange );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an attribute with given key from a {@link module:engine/model/item~Item model item}\r\n\t * or from a {@link module:engine/model/range~Range range}.\r\n\t *\r\n\t * @param {String} key Attribute key.\r\n\t * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange\r\n\t * Model item or range from which the attribute will be removed.\r\n\t */\r\n\tremoveAttribute( key, itemOrRange ) {\r\n\t\tthis._assertWriterUsedCorrectly();\r\n\r\n\t\tif ( itemOrRange instanceof Range ) {\r\n\t\t\tconst ranges = itemOrRange.getMinimalFlatRanges();\r\n\r\n\t\t\tfor ( const range of ranges ) {\r\n\t\t\t\tsetAttributeOnRange( this, key, null, range );\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetAttributeOnItem( this, key, null, itemOrRange );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all attributes from all elements in the range or from the given item.\r\n\t *\r\n\t * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange\r\n\t * Model item or range from which all attributes will be removed.\r\n\t */\r\n\tclearAttributes( itemOrRange ) {\r\n\t\tthis._assertWriterUsedCorrectly();\r\n\r\n\t\tconst removeAttributesFromItem = item => {\r\n\t\t\tfor ( const attribute of item.getAttributeKeys() ) {\r\n\t\t\t\tthis.removeAttribute( attribute, item );\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif ( !( itemOrRange instanceof Range ) ) {\r\n\t\t\tremoveAttributesFromItem( itemOrRange );\r\n\t\t} else {\r\n\t\t\tfor ( const item of itemOrRange.getItems() ) {\r\n\t\t\t\tremoveAttributesFromItem( item );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Moves all items in the source range to the target position.\r\n\t *\r\n\t *\t\twriter.move( sourceRange, targetPosition );\r\n\t *\r\n\t * Instead of the target position you can use parent and offset or define that range should be moved to the end\r\n\t * or before or after chosen item:\r\n\t *\r\n\t *\t\t// Moves all items in the range to the paragraph at offset 5:\r\n\t *\t\twriter.move( sourceRange, paragraph, 5 );\r\n\t *\t\t// Moves all items in the range to the end of a blockquote:\r\n\t *\t\twriter.move( sourceRange, blockquote, 'end' );\r\n\t *\t\t// Moves all items in the range to a position after an image:\r\n\t *\t\twriter.move( sourceRange, image, 'after' );\r\n\t *\r\n\t * These parameters works the same way as {@link #createPositionAt `writer.createPositionAt()`}.\r\n\t *\r\n\t * Note that items can be moved only within the same tree. It means that you can move items within the same root\r\n\t * (element or document fragment) or between {@link module:engine/model/document~Document#roots documents roots},\r\n\t * but you can not move items from document fragment to the document or from one detached element to another. Use\r\n\t * {@link module:engine/model/writer~Writer#insert} in such cases.\r\n\t *\r\n\t * @param {module:engine/model/range~Range} range Source range.\r\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\r\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\r\n\t * second parameter is a {@link module:engine/model/item~Item model item}.\r\n\t */\r\n\tmove( range, itemOrPosition, offset ) {\r\n\t\tthis._assertWriterUsedCorrectly();\r\n\r\n\t\tif ( !( range instanceof Range ) ) {\r\n\t\t\t/**\r\n\t\t\t * Invalid range to move.\r\n\t\t\t *\r\n\t\t\t * @error writer-move-invalid-range\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'writer-move-invalid-range: Invalid range to move.', this );\r\n\t\t}\r\n\r\n\t\tif ( !range.isFlat ) {\r\n\t\t\t/**\r\n\t\t\t * Range to move is not flat.\r\n\t\t\t *\r\n\t\t\t * @error writer-move-range-not-flat\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'writer-move-range-not-flat: Range to move is not flat.', this );\r\n\t\t}\r\n\r\n\t\tconst position = Position._createAt( itemOrPosition, offset );\r\n\r\n\t\t// Do not move anything if the move target is same as moved range start.\r\n\t\tif ( position.isEqual( range.start ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// If part of the marker is removed, create additional marker operation for undo purposes.\r\n\t\tthis._addOperationForAffectedMarkers( 'move', range );\r\n\r\n\t\tif ( !isSameTree( range.root, position.root ) ) {\r\n\t\t\t/**\r\n\t\t\t * Range is going to be moved within not the same document. Please use\r\n\t\t\t * {@link module:engine/model/writer~Writer#insert insert} instead.\r\n\t\t\t *\r\n\t\t\t * @error writer-move-different-document\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'writer-move-different-document: Range is going to be moved between different documents.', this );\r\n\t\t}\r\n\r\n\t\tconst version = range.root.document ? range.root.document.version : null;\r\n\t\tconst operation = new MoveOperation( range.start, range.end.offset - range.start.offset, position, version );\r\n\r\n\t\tthis.batch.addOperation( operation );\r\n\t\tthis.model.applyOperation( operation );\r\n\t}\r\n\r\n\t/**\r\n\t * Removes given model {@link module:engine/model/item~Item item} or {@link module:engine/model/range~Range range}.\r\n\t *\r\n\t * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange Model item or range to remove.\r\n\t */\r\n\tremove( itemOrRange ) {\r\n\t\tthis._assertWriterUsedCorrectly();\r\n\r\n\t\tconst rangeToRemove = itemOrRange instanceof Range ? itemOrRange : Range._createOn( itemOrRange );\r\n\t\tconst ranges = rangeToRemove.getMinimalFlatRanges().reverse();\r\n\r\n\t\tfor ( const flat of ranges ) {\r\n\t\t\t// If part of the marker is removed, create additional marker operation for undo purposes.\r\n\t\t\tthis._addOperationForAffectedMarkers( 'move', flat );\r\n\r\n\t\t\tapplyRemoveOperation( flat.start, flat.end.offset - flat.start.offset, this.batch, this.model );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Merges two siblings at the given position.\r\n\t *\r\n\t * Node before and after the position have to be an element. Otherwise `writer-merge-no-element-before` or\r\n\t * `writer-merge-no-element-after` error will be thrown.\r\n\t *\r\n\t * @param {module:engine/model/position~Position} position Position between merged elements.\r\n\t */\r\n\tmerge( position ) {\r\n\t\tthis._assertWriterUsedCorrectly();\r\n\r\n\t\tconst nodeBefore = position.nodeBefore;\r\n\t\tconst nodeAfter = position.nodeAfter;\r\n\r\n\t\t// If part of the marker is removed, create additional marker operation for undo purposes.\r\n\t\tthis._addOperationForAffectedMarkers( 'merge', position );\r\n\r\n\t\tif ( !( nodeBefore instanceof Element ) ) {\r\n\t\t\t/**\r\n\t\t\t * Node before merge position must be an element.\r\n\t\t\t *\r\n\t\t\t * @error writer-merge-no-element-before\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'writer-merge-no-element-before: Node before merge position must be an element.', this );\r\n\t\t}\r\n\r\n\t\tif ( !( nodeAfter instanceof Element ) ) {\r\n\t\t\t/**\r\n\t\t\t * Node after merge position must be an element.\r\n\t\t\t *\r\n\t\t\t * @error writer-merge-no-element-after\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'writer-merge-no-element-after: Node after merge position must be an element.', this );\r\n\t\t}\r\n\r\n\t\tif ( !position.root.document ) {\r\n\t\t\tthis._mergeDetached( position );\r\n\t\t} else {\r\n\t\t\tthis._merge( position );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Shortcut for {@link module:engine/model/model~Model#createPositionFromPath `Model#createPositionFromPath()`}.\r\n\t *\r\n\t * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} root Root of the position.\r\n\t * @param {Array.<Number>} path Position path. See {@link module:engine/model/position~Position#path}.\r\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness.\r\n\t * See {@link module:engine/model/position~PositionStickiness}.\r\n\t * @returns {module:engine/model/position~Position}\r\n\t */\r\n\tcreatePositionFromPath( root, path, stickiness ) {\r\n\t\treturn this.model.createPositionFromPath( root, path, stickiness );\r\n\t}\r\n\r\n\t/**\r\n\t * Shortcut for {@link module:engine/model/model~Model#createPositionAt `Model#createPositionAt()`}.\r\n\t *\r\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\r\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\r\n\t * first parameter is a {@link module:engine/model/item~Item model item}.\r\n\t * @returns {module:engine/model/position~Position}\r\n\t */\r\n\tcreatePositionAt( itemOrPosition, offset ) {\r\n\t\treturn this.model.createPositionAt( itemOrPosition, offset );\r\n\t}\r\n\r\n\t/**\r\n\t * Shortcut for {@link module:engine/model/model~Model#createPositionAfter `Model#createPositionAfter()`}.\r\n\t *\r\n\t * @param {module:engine/model/item~Item} item Item after which the position should be placed.\r\n\t * @returns {module:engine/model/position~Position}\r\n\t */\r\n\tcreatePositionAfter( item ) {\r\n\t\treturn this.model.createPositionAfter( item );\r\n\t}\r\n\r\n\t/**\r\n\t * Shortcut for {@link module:engine/model/model~Model#createPositionBefore `Model#createPositionBefore()`}.\r\n\t *\r\n\t * @param {module:engine/model/item~Item} item Item after which the position should be placed.\r\n\t * @returns {module:engine/model/position~Position}\r\n\t */\r\n\tcreatePositionBefore( item ) {\r\n\t\treturn this.model.createPositionBefore( item );\r\n\t}\r\n\r\n\t/**\r\n\t * Shortcut for {@link module:engine/model/model~Model#createRange `Model#createRange()`}.\r\n\t *\r\n\t * @param {module:engine/model/position~Position} start Start position.\r\n\t * @param {module:engine/model/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\r\n\t * @returns {module:engine/model/range~Range}\r\n\t */\r\n\tcreateRange( start, end ) {\r\n\t\treturn this.model.createRange( start, end );\r\n\t}\r\n\r\n\t/**\r\n\t * Shortcut for {@link module:engine/model/model~Model#createRangeIn `Model#createRangeIn()`}.\r\n\t *\r\n\t * @param {module:engine/model/element~Element} element Element which is a parent for the range.\r\n\t * @returns {module:engine/model/range~Range}\r\n\t */\r\n\tcreateRangeIn( element ) {\r\n\t\treturn this.model.createRangeIn( element );\r\n\t}\r\n\r\n\t/**\r\n\t * Shortcut for {@link module:engine/model/model~Model#createRangeOn `Model#createRangeOn()`}.\r\n\t *\r\n\t * @param {module:engine/model/element~Element} element Element which is a parent for the range.\r\n\t * @returns {module:engine/model/range~Range}\r\n\t */\r\n\tcreateRangeOn( element ) {\r\n\t\treturn this.model.createRangeOn( element );\r\n\t}\r\n\r\n\t/**\r\n\t * Shortcut for {@link module:engine/model/model~Model#createSelection `Model#createSelection()`}.\r\n\t *\r\n\t * @param {module:engine/model/selection~Selectable} selectable\r\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\r\n\t * @param {Object} [options]\r\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\r\n\t * @returns {module:engine/model/selection~Selection}\r\n\t */\r\n\tcreateSelection( selectable, placeOrOffset, options ) {\r\n\t\treturn this.model.createSelection( selectable, placeOrOffset, options );\r\n\t}\r\n\r\n\t/**\r\n\t * Performs merge action in a detached tree.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/model/position~Position} position Position between merged elements.\r\n\t */\r\n\t_mergeDetached( position ) {\r\n\t\tconst nodeBefore = position.nodeBefore;\r\n\t\tconst nodeAfter = position.nodeAfter;\r\n\r\n\t\tthis.move( Range._createIn( nodeAfter ), Position._createAt( nodeBefore, 'end' ) );\r\n\t\tthis.remove( nodeAfter );\r\n\t}\r\n\r\n\t/**\r\n\t * Performs merge action in a non-detached tree.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/model/position~Position} position Position between merged elements.\r\n\t */\r\n\t_merge( position ) {\r\n\t\tconst targetPosition = Position._createAt( position.nodeBefore, 'end' );\r\n\t\tconst sourcePosition = Position._createAt( position.nodeAfter, 0 );\r\n\r\n\t\tconst graveyard = position.root.document.graveyard;\r\n\t\tconst graveyardPosition = new Position( graveyard, [ 0 ] );\r\n\r\n\t\tconst version = position.root.document.version;\r\n\r\n\t\tconst merge = new MergeOperation( sourcePosition, position.nodeAfter.maxOffset, targetPosition, graveyardPosition, version );\r\n\r\n\t\tthis.batch.addOperation( merge );\r\n\t\tthis.model.applyOperation( merge );\r\n\t}\r\n\r\n\t/**\r\n\t * Renames the given element.\r\n\t *\r\n\t * @param {module:engine/model/element~Element} element The element to rename.\r\n\t * @param {String} newName New element name.\r\n\t */\r\n\trename( element, newName ) {\r\n\t\tthis._assertWriterUsedCorrectly();\r\n\r\n\t\tif ( !( element instanceof Element ) ) {\r\n\t\t\t/**\r\n\t\t\t * Trying to rename an object which is not an instance of Element.\r\n\t\t\t *\r\n\t\t\t * @error writer-rename-not-element-instance\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'writer-rename-not-element-instance: Trying to rename an object which is not an instance of Element.',\r\n\t\t\t\tthis\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tconst version = element.root.document ? element.root.document.version : null;\r\n\t\tconst renameOperation = new RenameOperation( Position._createBefore( element ), element.name, newName, version );\r\n\r\n\t\tthis.batch.addOperation( renameOperation );\r\n\t\tthis.model.applyOperation( renameOperation );\r\n\t}\r\n\r\n\t/**\r\n\t * Splits elements starting from the given position and going to the top of the model tree as long as given\r\n\t * `limitElement` is reached. When `limitElement` is not defined then only the parent of the given position will be split.\r\n\t *\r\n\t * The element needs to have a parent. It cannot be a root element nor a document fragment.\r\n\t * The `writer-split-element-no-parent` error will be thrown if you try to split an element with no parent.\r\n\t *\r\n\t * @param {module:engine/model/position~Position} position Position of split.\r\n\t * @param {module:engine/model/node~Node} [limitElement] Stop splitting when this element will be reached.\r\n\t * @returns {Object} result Split result.\r\n\t * @returns {module:engine/model/position~Position} result.position Position between split elements.\r\n\t * @returns {module:engine/model/range~Range} result.range Range that stars from the end of the first split element and ends\r\n\t * at the beginning of the first copy element.\r\n\t */\r\n\tsplit( position, limitElement ) {\r\n\t\tthis._assertWriterUsedCorrectly();\r\n\r\n\t\tlet splitElement = position.parent;\r\n\r\n\t\tif ( !splitElement.parent ) {\r\n\t\t\t/**\r\n\t\t\t * Element with no parent can not be split.\r\n\t\t\t *\r\n\t\t\t * @error writer-split-element-no-parent\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'writer-split-element-no-parent: Element with no parent can not be split.', this );\r\n\t\t}\r\n\r\n\t\t// When limit element is not defined lets set splitElement parent as limit.\r\n\t\tif ( !limitElement ) {\r\n\t\t\tlimitElement = splitElement.parent;\r\n\t\t}\r\n\r\n\t\tif ( !position.parent.getAncestors( { includeSelf: true } ).includes( limitElement ) ) {\r\n\t\t\tthrow new CKEditorError( 'writer-split-invalid-limit-element: Limit element is not a position ancestor.', this );\r\n\t\t}\r\n\r\n\t\t// We need to cache elements that will be created as a result of the first split because\r\n\t\t// we need to create a range from the end of the first split element to the beginning of the\r\n\t\t// first copy element. This should be handled by LiveRange but it doesn't work on detached nodes.\r\n\t\tlet firstSplitElement, firstCopyElement;\r\n\r\n\t\tdo {\r\n\t\t\tconst version = splitElement.root.document ? splitElement.root.document.version : null;\r\n\t\t\tconst howMany = splitElement.maxOffset - position.offset;\r\n\t\t\tconst split = new SplitOperation( position, howMany, null, version );\r\n\r\n\t\t\tthis.batch.addOperation( split );\r\n\t\t\tthis.model.applyOperation( split );\r\n\r\n\t\t\t// Cache result of the first split.\r\n\t\t\tif ( !firstSplitElement && !firstCopyElement ) {\r\n\t\t\t\tfirstSplitElement = splitElement;\r\n\t\t\t\tfirstCopyElement = position.parent.nextSibling;\r\n\t\t\t}\r\n\r\n\t\t\tposition = this.createPositionAfter( position.parent );\r\n\t\t\tsplitElement = position.parent;\r\n\t\t} while ( splitElement !== limitElement );\r\n\r\n\t\treturn {\r\n\t\t\tposition,\r\n\t\t\trange: new Range( Position._createAt( firstSplitElement, 'end' ), Position._createAt( firstCopyElement, 0 ) )\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Wraps the given range with the given element or with a new element (if a string was passed).\r\n\t *\r\n\t * **Note:** range to wrap should be a \"flat range\" (see {@link module:engine/model/range~Range#isFlat `Range#isFlat`}).\r\n\t * If not, an error will be thrown.\r\n\t *\r\n\t * @param {module:engine/model/range~Range} range Range to wrap.\r\n\t * @param {module:engine/model/element~Element|String} elementOrString Element or name of element to wrap the range with.\r\n\t */\r\n\twrap( range, elementOrString ) {\r\n\t\tthis._assertWriterUsedCorrectly();\r\n\r\n\t\tif ( !range.isFlat ) {\r\n\t\t\t/**\r\n\t\t\t * Range to wrap is not flat.\r\n\t\t\t *\r\n\t\t\t * @error writer-wrap-range-not-flat\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'writer-wrap-range-not-flat: Range to wrap is not flat.', this );\r\n\t\t}\r\n\r\n\t\tconst element = elementOrString instanceof Element ? elementOrString : new Element( elementOrString );\r\n\r\n\t\tif ( element.childCount > 0 ) {\r\n\t\t\t/**\r\n\t\t\t * Element to wrap with is not empty.\r\n\t\t\t *\r\n\t\t\t * @error writer-wrap-element-not-empty\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'writer-wrap-element-not-empty: Element to wrap with is not empty.', this );\r\n\t\t}\r\n\r\n\t\tif ( element.parent !== null ) {\r\n\t\t\t/**\r\n\t\t\t * Element to wrap with is already attached to a tree model.\r\n\t\t\t *\r\n\t\t\t * @error writer-wrap-element-attached\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'writer-wrap-element-attached: Element to wrap with is already attached to tree model.', this );\r\n\t\t}\r\n\r\n\t\tthis.insert( element, range.start );\r\n\r\n\t\t// Shift the range-to-wrap because we just inserted an element before that range.\r\n\t\tconst shiftedRange = new Range( range.start.getShiftedBy( 1 ), range.end.getShiftedBy( 1 ) );\r\n\r\n\t\tthis.move( shiftedRange, Position._createAt( element, 0 ) );\r\n\t}\r\n\r\n\t/**\r\n\t * Unwraps children of the given element – all its children are moved before it and then the element is removed.\r\n\t * Throws error if you try to unwrap an element which does not have a parent.\r\n\t *\r\n\t * @param {module:engine/model/element~Element} element Element to unwrap.\r\n\t */\r\n\tunwrap( element ) {\r\n\t\tthis._assertWriterUsedCorrectly();\r\n\r\n\t\tif ( element.parent === null ) {\r\n\t\t\t/**\r\n\t\t\t * Trying to unwrap an element which has no parent.\r\n\t\t\t *\r\n\t\t\t * @error writer-unwrap-element-no-parent\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'writer-unwrap-element-no-parent: Trying to unwrap an element which has no parent.', this );\r\n\t\t}\r\n\r\n\t\tthis.move( Range._createIn( element ), this.createPositionAfter( element ) );\r\n\t\tthis.remove( element );\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a {@link module:engine/model/markercollection~Marker marker}. Marker is a named range, which tracks\r\n\t * changes in the document and updates its range automatically, when model tree changes.\r\n\t *\r\n\t * As the first parameter you can set marker name.\r\n\t *\r\n\t * The required `options.usingOperation` parameter lets you decide if the marker should be managed by operations or not. See\r\n\t * {@link module:engine/model/markercollection~Marker marker class description} to learn about the difference between\r\n\t * markers managed by operations and not-managed by operations.\r\n\t *\r\n\t * The `options.affectsData` parameter, which defaults to `false`, allows you to define if a marker affects the data. It should be\r\n\t * `true` when the marker change changes the data returned by the\r\n\t * {@link module:core/editor/utils/dataapimixin~DataApi#getData `editor.getData()`} method.\r\n\t * When set to `true` it fires the {@link module:engine/model/document~Document#event:change:data `change:data`} event.\r\n\t * When set to `false` it fires the {@link module:engine/model/document~Document#event:change `change`} event.\r\n\t *\r\n\t * Create marker directly base on marker's name:\r\n\t *\r\n\t *\t\taddMarker( markerName, { range, usingOperation: false } );\r\n\t *\r\n\t * Create marker using operation:\r\n\t *\r\n\t *\t\taddMarker( markerName, { range, usingOperation: true } );\r\n\t *\r\n\t * Create marker that affects the editor data:\r\n\t *\r\n\t *\t\taddMarker( markerName, { range, usingOperation: false, affectsData: true } );\r\n\t *\r\n\t * Note: For efficiency reasons, it's best to create and keep as little markers as possible.\r\n\t *\r\n\t * @see module:engine/model/markercollection~Marker\r\n\t * @param {String} name Name of a marker to create - must be unique.\r\n\t * @param {Object} options\r\n\t * @param {Boolean} options.usingOperation Flag indicating that the marker should be added by MarkerOperation.\r\n\t * See {@link module:engine/model/markercollection~Marker#managedUsingOperations}.\r\n\t * @param {module:engine/model/range~Range} options.range Marker range.\r\n\t * @param {Boolean} [options.affectsData=false] Flag indicating that the marker changes the editor data.\r\n\t * @returns {module:engine/model/markercollection~Marker} Marker that was set.\r\n\t */\r\n\taddMarker( name, options ) {\r\n\t\tthis._assertWriterUsedCorrectly();\r\n\r\n\t\tif ( !options || typeof options.usingOperation != 'boolean' ) {\r\n\t\t\t/**\r\n\t\t\t * The `options.usingOperation` parameter is required when adding a new marker.\r\n\t\t\t *\r\n\t\t\t * @error writer-addMarker-no-usingOperation\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'writer-addMarker-no-usingOperation: The options.usingOperation parameter is required when adding a new marker.',\r\n\t\t\t\tthis\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tconst usingOperation = options.usingOperation;\r\n\t\tconst range = options.range;\r\n\t\tconst affectsData = options.affectsData === undefined ? false : options.affectsData;\r\n\r\n\t\tif ( this.model.markers.has( name ) ) {\r\n\t\t\t/**\r\n\t\t\t * Marker with provided name already exists.\r\n\t\t\t *\r\n\t\t\t * @error writer-addMarker-marker-exists\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'writer-addMarker-marker-exists: Marker with provided name already exists.', this );\r\n\t\t}\r\n\r\n\t\tif ( !range ) {\r\n\t\t\t/**\r\n\t\t\t * Range parameter is required when adding a new marker.\r\n\t\t\t *\r\n\t\t\t * @error writer-addMarker-no-range\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'writer-addMarker-no-range: Range parameter is required when adding a new marker.',\r\n\t\t\t\tthis\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif ( !usingOperation ) {\r\n\t\t\treturn this.model.markers._set( name, range, usingOperation, affectsData );\r\n\t\t}\r\n\r\n\t\tapplyMarkerOperation( this, name, null, range, affectsData );\r\n\r\n\t\treturn this.model.markers.get( name );\r\n\t}\r\n\r\n\t/**\r\n\t * Adds, updates or refreshes a {@link module:engine/model/markercollection~Marker marker}. Marker is a named range, which tracks\r\n\t * changes in the document and updates its range automatically, when model tree changes. Still, it is possible to change the\r\n\t * marker's range directly using this method.\r\n\t *\r\n\t * As the first parameter you can set marker name or instance. If none of them is provided, new marker, with a unique\r\n\t * name is created and returned.\r\n\t *\r\n\t * As the second parameter you can set the new marker data or leave this parameter as empty which will just refresh\r\n\t * the marker by triggering downcast conversion for it. Refreshing the marker is useful when you want to change\r\n\t * the marker {@link module:engine/view/element~Element view element} without changing any marker data.\r\n\t *\r\n\t * \t\tlet isCommentActive = false;\r\n\t *\r\n\t * \t\tmodel.conversion.markerToHighlight( {\r\n\t * \t\t\tmodel: 'comment',\r\n\t *\t\t\tview: data => {\r\n\t *\t\t\t\tconst classes = [ 'comment-marker' ];\r\n\t *\r\n\t *\t\t\t\tif ( isCommentActive ) {\r\n\t *\t\t\t\t\tclasses.push( 'comment-marker--active' );\r\n\t *\t\t\t\t}\r\n\t *\r\n\t *\t\t\t\treturn { classes };\r\n\t *\t\t\t}\r\n\t * \t\t} );\r\n\t *\r\n\t * \t\t// Change the property that indicates if marker is displayed as active or not.\r\n\t * \t\tisCommentActive = true;\r\n\t *\r\n\t * \t\t// And refresh the marker to convert it with additional class.\r\n\t * \t\tmodel.change( writer => writer.updateMarker( 'comment' ) );\r\n\t *\r\n\t * The `options.usingOperation` parameter lets you change if the marker should be managed by operations or not. See\r\n\t * {@link module:engine/model/markercollection~Marker marker class description} to learn about the difference between\r\n\t * markers managed by operations and not-managed by operations. It is possible to change this option for an existing marker.\r\n\t *\r\n\t * The `options.affectsData` parameter, which defaults to `false`, allows you to define if a marker affects the data. It should be\r\n\t * `true` when the marker change changes the data returned by\r\n\t * the {@link module:core/editor/utils/dataapimixin~DataApi#getData `editor.getData()`} method.\r\n\t * When set to `true` it fires the {@link module:engine/model/document~Document#event:change:data `change:data`} event.\r\n\t * When set to `false` it fires the {@link module:engine/model/document~Document#event:change `change`} event.\r\n\t *\r\n\t * Update marker directly base on marker's name:\r\n\t *\r\n\t *\t\tupdateMarker( markerName, { range } );\r\n\t *\r\n\t * Update marker using operation:\r\n\t *\r\n\t *\t\tupdateMarker( marker, { range, usingOperation: true } );\r\n\t *\t\tupdateMarker( markerName, { range, usingOperation: true } );\r\n\t *\r\n\t * Change marker's option (start using operations to manage it):\r\n\t *\r\n\t *\t\tupdateMarker( marker, { usingOperation: true } );\r\n\t *\r\n\t * Change marker's option (inform the engine, that the marker does not affect the data anymore):\r\n\t *\r\n\t *\t\tupdateMarker( markerName, { affectsData: false } );\r\n\t *\r\n\t * @see module:engine/model/markercollection~Marker\r\n\t * @param {String|module:engine/model/markercollection~Marker} markerOrName Name of a marker to update, or a marker instance.\r\n\t * @param {Object} [options] If options object is not defined then marker will be refreshed by triggering\r\n\t * downcast conversion for this marker with the same data.\r\n\t * @param {module:engine/model/range~Range} [options.range] Marker range to update.\r\n\t * @param {Boolean} [options.usingOperation] Flag indicated whether the marker should be added by MarkerOperation.\r\n\t * See {@link module:engine/model/markercollection~Marker#managedUsingOperations}.\r\n\t * @param {Boolean} [options.affectsData] Flag indicating that the marker changes the editor data.\r\n\t */\r\n\tupdateMarker( markerOrName, options ) {\r\n\t\tthis._assertWriterUsedCorrectly();\r\n\r\n\t\tconst markerName = typeof markerOrName == 'string' ? markerOrName : markerOrName.name;\r\n\t\tconst currentMarker = this.model.markers.get( markerName );\r\n\r\n\t\tif ( !currentMarker ) {\r\n\t\t\t/**\r\n\t\t\t * Marker with provided name does not exists.\r\n\t\t\t *\r\n\t\t\t * @error writer-updateMarker-marker-not-exists\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'writer-updateMarker-marker-not-exists: Marker with provided name does not exists.', this );\r\n\t\t}\r\n\r\n\t\tif ( !options ) {\r\n\t\t\tthis.model.markers._refresh( currentMarker );\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst hasUsingOperationDefined = typeof options.usingOperation == 'boolean';\r\n\t\tconst affectsDataDefined = typeof options.affectsData == 'boolean';\r\n\r\n\t\t// Use previously defined marker's affectsData if the property is not provided.\r\n\t\tconst affectsData = affectsDataDefined ? options.affectsData : currentMarker.affectsData;\r\n\r\n\t\tif ( !hasUsingOperationDefined && !options.range && !affectsDataDefined ) {\r\n\t\t\t/**\r\n\t\t\t * One of the options is required - provide range, usingOperations or affectsData.\r\n\t\t\t *\r\n\t\t\t * @error writer-updateMarker-wrong-options\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'writer-updateMarker-wrong-options: One of the options is required - provide range, usingOperations or affectsData.',\r\n\t\t\t\tthis\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tconst currentRange = currentMarker.getRange();\r\n\t\tconst updatedRange = options.range ? options.range : currentRange;\r\n\r\n\t\tif ( hasUsingOperationDefined && options.usingOperation !== currentMarker.managedUsingOperations ) {\r\n\t\t\t// The marker type is changed so it's necessary to create proper operations.\r\n\t\t\tif ( options.usingOperation ) {\r\n\t\t\t\t// If marker changes to a managed one treat this as synchronizing existing marker.\r\n\t\t\t\t// Create `MarkerOperation` with `oldRange` set to `null`, so reverse operation will remove the marker.\r\n\t\t\t\tapplyMarkerOperation( this, markerName, null, updatedRange, affectsData );\r\n\t\t\t} else {\r\n\t\t\t\t// If marker changes to a marker that do not use operations then we need to create additional operation\r\n\t\t\t\t// that removes that marker first.\r\n\t\t\t\tapplyMarkerOperation( this, markerName, currentRange, null, affectsData );\r\n\r\n\t\t\t\t// Although not managed the marker itself should stay in model and its range should be preserver or changed to passed range.\r\n\t\t\t\tthis.model.markers._set( markerName, updatedRange, undefined, affectsData );\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Marker's type doesn't change so update it accordingly.\r\n\t\tif ( currentMarker.managedUsingOperations ) {\r\n\t\t\tapplyMarkerOperation( this, markerName, currentRange, updatedRange, affectsData );\r\n\t\t} else {\r\n\t\t\tthis.model.markers._set( markerName, updatedRange, undefined, affectsData );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes given {@link module:engine/model/markercollection~Marker marker} or marker with given name.\r\n\t * The marker is removed accordingly to how it has been created, so if the marker was created using operation,\r\n\t * it will be destroyed using operation.\r\n\t *\r\n\t * @param {module:engine/model/markercollection~Marker|String} markerOrName Marker or marker name to remove.\r\n\t */\r\n\tremoveMarker( markerOrName ) {\r\n\t\tthis._assertWriterUsedCorrectly();\r\n\r\n\t\tconst name = typeof markerOrName == 'string' ? markerOrName : markerOrName.name;\r\n\r\n\t\tif ( !this.model.markers.has( name ) ) {\r\n\t\t\t/**\r\n\t\t\t * Trying to remove marker which does not exist.\r\n\t\t\t *\r\n\t\t\t * @error writer-removeMarker-no-marker\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'writer-removeMarker-no-marker: Trying to remove marker which does not exist.', this );\r\n\t\t}\r\n\r\n\t\tconst marker = this.model.markers.get( name );\r\n\r\n\t\tif ( !marker.managedUsingOperations ) {\r\n\t\t\tthis.model.markers._remove( name );\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst oldRange = marker.getRange();\r\n\r\n\t\tapplyMarkerOperation( this, name, oldRange, null, marker.affectsData );\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the document's selection (ranges and direction) to the specified location based on the given\r\n\t * {@link module:engine/model/selection~Selectable selectable} or creates an empty selection if no arguments were passed.\r\n\t *\r\n\t *\t\t// Sets selection to the given range.\r\n\t *\t\tconst range = writer.createRange( start, end );\r\n\t *\t\twriter.setSelection( range );\r\n\t *\r\n\t *\t\t// Sets selection to given ranges.\r\n\t *\t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\r\n\t *\t\twriter.setSelection( ranges );\r\n\t *\r\n\t *\t\t// Sets selection to other selection.\r\n\t *\t\tconst otherSelection = writer.createSelection();\r\n\t *\t\twriter.setSelection( otherSelection );\r\n\t *\r\n\t *\t\t// Sets selection to the given document selection.\r\n\t *\t\tconst documentSelection = model.document.selection;\r\n\t *\t\twriter.setSelection( documentSelection );\r\n\t *\r\n\t *\t\t// Sets collapsed selection at the given position.\r\n\t *\t\tconst position = writer.createPosition( root, path );\r\n\t *\t\twriter.setSelection( position );\r\n\t *\r\n\t *\t\t// Sets collapsed selection at the position of the given node and an offset.\r\n\t *\t\twriter.setSelection( paragraph, offset );\r\n\t *\r\n\t * Creates a range inside an {@link module:engine/model/element~Element element} which starts before the first child of\r\n \t * that element and ends after the last child of that element.\r\n\t *\r\n\t *\t\twriter.setSelection( paragraph, 'in' );\r\n\t *\r\n\t * Creates a range on an {@link module:engine/model/item~Item item} which starts before the item and ends just after the item.\r\n\t *\r\n\t *\t\twriter.setSelection( paragraph, 'on' );\r\n\t *\r\n\t *\t\t// Removes all selection's ranges.\r\n\t *\t\twriter.setSelection( null );\r\n\t *\r\n\t * `Writer#setSelection()` allow passing additional options (`backward`) as the last argument.\r\n\t *\r\n\t *\t\t// Sets selection as backward.\r\n\t *\t\twriter.setSelection( range, { backward: true } );\r\n\t *\r\n\t * Throws `writer-incorrect-use` error when the writer is used outside the `change()` block.\r\n\t *\r\n\t * @param {module:engine/model/selection~Selectable} selectable\r\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\r\n\t * @param {Object} [options]\r\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\r\n\t */\r\n\tsetSelection( selectable, placeOrOffset, options ) {\r\n\t\tthis._assertWriterUsedCorrectly();\r\n\r\n\t\tthis.model.document.selection._setTo( selectable, placeOrOffset, options );\r\n\t}\r\n\r\n\t/**\r\n\t * Moves {@link module:engine/model/documentselection~DocumentSelection#focus} to the specified location.\r\n\t *\r\n\t * The location can be specified in the same form as\r\n\t * {@link #createPositionAt `writer.createPositionAt()`} parameters.\r\n\t *\r\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\r\n\t * @param {Number|'end'|'before'|'after'} [offset=0] Offset or one of the flags. Used only when\r\n\t * first parameter is a {@link module:engine/model/item~Item model item}.\r\n\t */\r\n\tsetSelectionFocus( itemOrPosition, offset ) {\r\n\t\tthis._assertWriterUsedCorrectly();\r\n\r\n\t\tthis.model.document.selection._setFocus( itemOrPosition, offset );\r\n\t}\r\n\r\n\t/**\r\n\t * Sets attribute(s) on the selection. If attribute with the same key already is set, it's value is overwritten.\r\n\t *\r\n\t * Using key and value pair:\r\n\t *\r\n\t * \twriter.setSelectionAttribute( 'italic', true );\r\n\t *\r\n\t * Using key-value object:\r\n\t *\r\n\t * \twriter.setSelectionAttribute( { italic: true, bold: false } );\r\n\t *\r\n\t * Using iterable object:\r\n\t *\r\n\t * \twriter.setSelectionAttribute( new Map( [ [ 'italic', true ] ] ) );\r\n\t *\r\n\t * @param {String|Object|Iterable.<*>} keyOrObjectOrIterable Key of the attribute to set\r\n\t * or object / iterable of key => value attribute pairs.\r\n\t * @param {*} [value] Attribute value.\r\n\t */\r\n\tsetSelectionAttribute( keyOrObjectOrIterable, value ) {\r\n\t\tthis._assertWriterUsedCorrectly();\r\n\r\n\t\tif ( typeof keyOrObjectOrIterable === 'string' ) {\r\n\t\t\tthis._setSelectionAttribute( keyOrObjectOrIterable, value );\r\n\t\t} else {\r\n\t\t\tfor ( const [ key, value ] of toMap( keyOrObjectOrIterable ) ) {\r\n\t\t\t\tthis._setSelectionAttribute( key, value );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes attribute(s) with given key(s) from the selection.\r\n\t *\r\n\t * Remove one attribute:\r\n\t *\r\n\t *\t\twriter.removeSelectionAttribute( 'italic' );\r\n\t *\r\n\t * Remove multiple attributes:\r\n\t *\r\n\t *\t\twriter.removeSelectionAttribute( [ 'italic', 'bold' ] );\r\n\t *\r\n\t * @param {String|Iterable.<String>} keyOrIterableOfKeys Key of the attribute to remove or an iterable of attribute keys to remove.\r\n\t */\r\n\tremoveSelectionAttribute( keyOrIterableOfKeys ) {\r\n\t\tthis._assertWriterUsedCorrectly();\r\n\r\n\t\tif ( typeof keyOrIterableOfKeys === 'string' ) {\r\n\t\t\tthis._removeSelectionAttribute( keyOrIterableOfKeys );\r\n\t\t} else {\r\n\t\t\tfor ( const key of keyOrIterableOfKeys ) {\r\n\t\t\t\tthis._removeSelectionAttribute( key );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Temporarily changes the {@link module:engine/model/documentselection~DocumentSelection#isGravityOverridden gravity}\r\n\t * of the selection from left to right.\r\n\t *\r\n\t * The gravity defines from which direction the selection inherits its attributes. If it's the default left gravity,\r\n\t * then the selection (after being moved by the user) inherits attributes from its left-hand side.\r\n\t * This method allows to temporarily override this behavior by forcing the gravity to the right.\r\n\t *\r\n\t * For the following model fragment:\r\n\t *\r\n\t *\t\t<$text bold=\"true\" linkHref=\"url\">bar[]</$text><$text bold=\"true\">biz</$text>\r\n\t *\r\n\t * * Default gravity: selection will have the `bold` and `linkHref` attributes.\r\n\t * * Overridden gravity: selection will have `bold` attribute.\r\n\t *\r\n\t * **Note**: It returns an unique identifier which is required to restore the gravity. It guarantees the symmetry\r\n\t * of the process.\r\n\t *\r\n\t * @returns {String} The unique id which allows restoring the gravity.\r\n\t */\r\n\toverrideSelectionGravity() {\r\n\t\treturn this.model.document.selection._overrideGravity();\r\n\t}\r\n\r\n\t/**\r\n\t * Restores {@link ~Writer#overrideSelectionGravity} gravity to default.\r\n\t *\r\n\t * Restoring the gravity is only possible using the unique identifier returned by\r\n\t * {@link ~Writer#overrideSelectionGravity}. Note that the gravity remains overridden as long as won't be restored\r\n\t * the same number of times it was overridden.\r\n\t *\r\n\t * @param {String} uid The unique id returned by {@link ~Writer#overrideSelectionGravity}.\r\n\t */\r\n\trestoreSelectionGravity( uid ) {\r\n\t\tthis.model.document.selection._restoreGravity( uid );\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @param {String} key Key of the attribute to remove.\r\n\t * @param {*} value Attribute value.\r\n\t */\r\n\t_setSelectionAttribute( key, value ) {\r\n\t\tconst selection = this.model.document.selection;\r\n\r\n\t\t// Store attribute in parent element if the selection is collapsed in an empty node.\r\n\t\tif ( selection.isCollapsed && selection.anchor.parent.isEmpty ) {\r\n\t\t\tconst storeKey = DocumentSelection._getStoreAttributeKey( key );\r\n\r\n\t\t\tthis.setAttribute( storeKey, value, selection.anchor.parent );\r\n\t\t}\r\n\r\n\t\tselection._setAttribute( key, value );\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @param {String} key Key of the attribute to remove.\r\n\t */\r\n\t_removeSelectionAttribute( key ) {\r\n\t\tconst selection = this.model.document.selection;\r\n\r\n\t\t// Remove stored attribute from parent element if the selection is collapsed in an empty node.\r\n\t\tif ( selection.isCollapsed && selection.anchor.parent.isEmpty ) {\r\n\t\t\tconst storeKey = DocumentSelection._getStoreAttributeKey( key );\r\n\r\n\t\t\tthis.removeAttribute( storeKey, selection.anchor.parent );\r\n\t\t}\r\n\r\n\t\tselection._removeAttribute( key );\r\n\t}\r\n\r\n\t/**\r\n\t * Throws `writer-detached-writer-tries-to-modify-model` error when the writer is used outside of the `change()` block.\r\n\t *\r\n\t * @private\r\n\t */\r\n\t_assertWriterUsedCorrectly() {\r\n\t\t/**\r\n\t\t * Trying to use a writer outside a {@link module:engine/model/model~Model#change `change()`} or\r\n\t\t * {@link module:engine/model/model~Model#enqueueChange `enqueueChange()`} blocks.\r\n\t\t *\r\n\t\t * The writer can only be used inside these blocks which ensures that the model\r\n\t\t * can only be changed during such \"sessions\".\r\n\t\t *\r\n\t\t * @error writer-incorrect-use\r\n\t\t */\r\n\t\tif ( this.model._currentWriter !== this ) {\r\n\t\t\tthrow new CKEditorError( 'writer-incorrect-use: Trying to use a writer outside the change() block.', this );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * For given action `type` and `positionOrRange` where the action happens, this function finds all affected markers\r\n\t * and applies a marker operation with the new marker range equal to the current range. Thanks to this, the marker range\r\n\t * can be later correctly processed during undo.\r\n\t *\r\n\t * @private\r\n\t * @param {'move'|'merge'} type Writer action type.\r\n\t * @param {module:engine/model/position~Position|module:engine/model/range~Range} positionOrRange Position or range\r\n\t * where the writer action happens.\r\n\t */\r\n\t_addOperationForAffectedMarkers( type, positionOrRange ) {\r\n\t\tfor ( const marker of this.model.markers ) {\r\n\t\t\tif ( !marker.managedUsingOperations ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tconst markerRange = marker.getRange();\r\n\t\t\tlet isAffected = false;\r\n\r\n\t\t\tif ( type == 'move' ) {\r\n\t\t\t\tisAffected =\r\n\t\t\t\t\tpositionOrRange.containsPosition( markerRange.start ) ||\r\n\t\t\t\t\tpositionOrRange.start.isEqual( markerRange.start ) ||\r\n\t\t\t\t\tpositionOrRange.containsPosition( markerRange.end ) ||\r\n\t\t\t\t\tpositionOrRange.end.isEqual( markerRange.end );\r\n\t\t\t} else {\r\n\t\t\t\t// if type == 'merge'.\r\n\t\t\t\tconst elementBefore = positionOrRange.nodeBefore;\r\n\t\t\t\tconst elementAfter = positionOrRange.nodeAfter;\r\n\r\n\t\t\t\t//               Start:  <p>Foo[</p><p>Bar]</p>\r\n\t\t\t\t//         After merge:  <p>Foo[Bar]</p>\r\n\t\t\t\t// After undoing split:  <p>Foo</p><p>[Bar]</p>     <-- incorrect, needs remembering for undo.\r\n\t\t\t\t//\r\n\t\t\t\tconst affectedInLeftElement = markerRange.start.parent == elementBefore && markerRange.start.isAtEnd;\r\n\r\n\t\t\t\t//               Start:  <p>[Foo</p><p>]Bar</p>\r\n\t\t\t\t//         After merge:  <p>[Foo]Bar</p>\r\n\t\t\t\t// After undoing split:  <p>[Foo]</p><p>Bar</p>     <-- incorrect, needs remembering for undo.\r\n\t\t\t\t//\r\n\t\t\t\tconst affectedInRightElement = markerRange.end.parent == elementAfter && markerRange.end.offset == 0;\r\n\r\n\t\t\t\t//               Start:  <p>[Foo</p>]<p>Bar</p>\r\n\t\t\t\t//         After merge:  <p>[Foo]Bar</p>\r\n\t\t\t\t// After undoing split:  <p>[Foo]</p><p>Bar</p>     <-- incorrect, needs remembering for undo.\r\n\t\t\t\t//\r\n\t\t\t\tconst affectedAfterLeftElement = markerRange.end.nodeAfter == elementAfter;\r\n\r\n\t\t\t\t//               Start:  <p>Foo</p>[<p>Bar]</p>\r\n\t\t\t\t//         After merge:  <p>Foo[Bar]</p>\r\n\t\t\t\t// After undoing split:  <p>Foo</p><p>[Bar]</p>     <-- incorrect, needs remembering for undo.\r\n\t\t\t\t//\r\n\t\t\t\tconst affectedBeforeRightElement = markerRange.start.nodeAfter == elementAfter;\r\n\r\n\t\t\t\tisAffected = affectedInLeftElement || affectedInRightElement || affectedAfterLeftElement || affectedBeforeRightElement;\r\n\t\t\t}\r\n\r\n\t\t\tif ( isAffected ) {\r\n\t\t\t\tthis.updateMarker( marker.name, { range: markerRange } );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Sets given attribute to each node in given range. When attribute value is null then attribute will be removed.\r\n//\r\n// Because attribute operation needs to have the same attribute value on the whole range, this function splits\r\n// the range into smaller parts.\r\n//\r\n// Given `range` must be flat.\r\n//\r\n// @private\r\n// @param {module:engine/model/writer~Writer} writer\r\n// @param {String} key Attribute key.\r\n// @param {*} value Attribute new value.\r\n// @param {module:engine/model/range~Range} range Model range on which the attribute will be set.\r\nfunction setAttributeOnRange( writer, key, value, range ) {\r\n\tconst model = writer.model;\r\n\tconst doc = model.document;\r\n\r\n\t// Position of the last split, the beginning of the new range.\r\n\tlet lastSplitPosition = range.start;\r\n\r\n\t// Currently position in the scanning range. Because we need value after the position, it is not a current\r\n\t// position of the iterator but the previous one (we need to iterate one more time to get the value after).\r\n\tlet position;\r\n\r\n\t// Value before the currently position.\r\n\tlet valueBefore;\r\n\r\n\t// Value after the currently position.\r\n\tlet valueAfter;\r\n\r\n\tfor ( const val of range.getWalker( { shallow: true } ) ) {\r\n\t\tvalueAfter = val.item.getAttribute( key );\r\n\r\n\t\t// At the first run of the iterator the position in undefined. We also do not have a valueBefore, but\r\n\t\t// because valueAfter may be null, valueBefore may be equal valueAfter ( undefined == null ).\r\n\t\tif ( position && valueBefore != valueAfter ) {\r\n\t\t\t// if valueBefore == value there is nothing to change, so we add operation only if these values are different.\r\n\t\t\tif ( valueBefore != value ) {\r\n\t\t\t\taddOperation();\r\n\t\t\t}\r\n\r\n\t\t\tlastSplitPosition = position;\r\n\t\t}\r\n\r\n\t\tposition = val.nextPosition;\r\n\t\tvalueBefore = valueAfter;\r\n\t}\r\n\r\n\t// Because position in the loop is not the iterator position (see let position comment), the last position in\r\n\t// the while loop will be last but one position in the range. We need to check the last position manually.\r\n\tif ( position instanceof Position && position != lastSplitPosition && valueBefore != value ) {\r\n\t\taddOperation();\r\n\t}\r\n\r\n\tfunction addOperation() {\r\n\t\tconst range = new Range( lastSplitPosition, position );\r\n\t\tconst version = range.root.document ? doc.version : null;\r\n\t\tconst operation = new AttributeOperation( range, key, valueBefore, value, version );\r\n\r\n\t\twriter.batch.addOperation( operation );\r\n\t\tmodel.applyOperation( operation );\r\n\t}\r\n}\r\n\r\n// Sets given attribute to the given node. When attribute value is null then attribute will be removed.\r\n//\r\n// @private\r\n// @param {module:engine/model/writer~Writer} writer\r\n// @param {String} key Attribute key.\r\n// @param {*} value Attribute new value.\r\n// @param {module:engine/model/item~Item} item Model item on which the attribute will be set.\r\nfunction setAttributeOnItem( writer, key, value, item ) {\r\n\tconst model = writer.model;\r\n\tconst doc = model.document;\r\n\tconst previousValue = item.getAttribute( key );\r\n\tlet range, operation;\r\n\r\n\tif ( previousValue != value ) {\r\n\t\tconst isRootChanged = item.root === item;\r\n\r\n\t\tif ( isRootChanged ) {\r\n\t\t\t// If we change attributes of root element, we have to use `RootAttributeOperation`.\r\n\t\t\tconst version = item.document ? doc.version : null;\r\n\r\n\t\t\toperation = new RootAttributeOperation( item, key, previousValue, value, version );\r\n\t\t} else {\r\n\t\t\trange = new Range( Position._createBefore( item ), writer.createPositionAfter( item ) );\r\n\r\n\t\t\tconst version = range.root.document ? doc.version : null;\r\n\r\n\t\t\toperation = new AttributeOperation( range, key, previousValue, value, version );\r\n\t\t}\r\n\r\n\t\twriter.batch.addOperation( operation );\r\n\t\tmodel.applyOperation( operation );\r\n\t}\r\n}\r\n\r\n// Creates and applies marker operation to {@link module:engine/model/operation/operation~Operation operation}.\r\n//\r\n// @private\r\n// @param {module:engine/model/writer~Writer} writer\r\n// @param {String} name Marker name.\r\n// @param {module:engine/model/range~Range} oldRange Marker range before the change.\r\n// @param {module:engine/model/range~Range} newRange Marker range after the change.\r\n// @param {Boolean} affectsData\r\nfunction applyMarkerOperation( writer, name, oldRange, newRange, affectsData ) {\r\n\tconst model = writer.model;\r\n\tconst doc = model.document;\r\n\r\n\tconst operation = new MarkerOperation( name, oldRange, newRange, model.markers, affectsData, doc.version );\r\n\r\n\twriter.batch.addOperation( operation );\r\n\tmodel.applyOperation( operation );\r\n}\r\n\r\n// Creates `MoveOperation` or `DetachOperation` that removes `howMany` nodes starting from `position`.\r\n// The operation will be applied on given model instance and added to given operation instance.\r\n//\r\n// @private\r\n// @param {module:engine/model/position~Position} position Position from which nodes are removed.\r\n// @param {Number} howMany Number of nodes to remove.\r\n// @param {Batch} batch Batch to which the operation will be added.\r\n// @param {module:engine/model/model~Model} model Model instance on which operation will be applied.\r\nfunction applyRemoveOperation( position, howMany, batch, model ) {\r\n\tlet operation;\r\n\r\n\tif ( position.root.document ) {\r\n\t\tconst doc = model.document;\r\n\t\tconst graveyardPosition = new Position( doc.graveyard, [ 0 ] );\r\n\r\n\t\toperation = new MoveOperation( position, howMany, graveyardPosition, doc.version );\r\n\t} else {\r\n\t\toperation = new DetachOperation( position, howMany );\r\n\t}\r\n\r\n\tbatch.addOperation( operation );\r\n\tmodel.applyOperation( operation );\r\n}\r\n\r\n// Returns `true` if both root elements are the same element or both are documents root elements.\r\n//\r\n// Elements in the same tree can be moved (for instance you can move element form one documents root to another, or\r\n// within the same document fragment), but when element supposed to be moved from document fragment to the document, or\r\n// to another document it should be removed and inserted to avoid problems with OT. This is because features like undo or\r\n// collaboration may track changes on the document but ignore changes on detached fragments and should not get\r\n// unexpected `move` operation.\r\nfunction isSameTree( rootA, rootB ) {\r\n\t// If it is the same root this is the same tree.\r\n\tif ( rootA === rootB ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// If both roots are documents root it is operation within the document what we still treat as the same tree.\r\n\tif ( rootA instanceof RootElement && rootB instanceof RootElement ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/utils/bindtwostepcarettoattribute\r\n */\r\n\r\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\r\nimport priorities from '@ckeditor/ckeditor5-utils/src/priorities';\r\n\r\n/**\r\n * This helper enables the two-step caret (phantom) movement behavior for the given {@link module:engine/model/model~Model}\r\n * attribute on arrow right (<kbd>→</kbd>) and left (<kbd>←</kbd>) key press.\r\n *\r\n * Thanks to this (phantom) caret movement the user is able to type before/after as well as at the\r\n * beginning/end of an attribute.\r\n *\r\n * **Note:** This helper support right–to–left (Arabic, Hebrew, etc.) content by mirroring its behavior\r\n * but for the sake of simplicity examples showcase only left–to–right use–cases.\r\n *\r\n * # Forward movement\r\n *\r\n * ## \"Entering\" an attribute:\r\n *\r\n * When this behavior is enabled for the `a` attribute and the selection is right before it\r\n * (at the attribute boundary), pressing the right arrow key will not move the selection but update its\r\n * attributes accordingly:\r\n *\r\n * * When enabled:\r\n *\r\n *   \t\tfoo{}<$text a=\"true\">bar</$text>\r\n *\r\n *    <kbd>→</kbd>\r\n *\r\n *   \t\tfoo<$text a=\"true\">{}bar</$text>\r\n *\r\n * * When disabled:\r\n *\r\n *   \t\tfoo{}<$text a=\"true\">bar</$text>\r\n *\r\n *   <kbd>→</kbd>\r\n *\r\n *   \t\tfoo<$text a=\"true\">b{}ar</$text>\r\n *\r\n *\r\n * ## \"Leaving\" an attribute:\r\n *\r\n * * When enabled:\r\n *\r\n *   \t\t<$text a=\"true\">bar{}</$text>baz\r\n *\r\n *    <kbd>→</kbd>\r\n *\r\n *   \t\t<$text a=\"true\">bar</$text>{}baz\r\n *\r\n * * When disabled:\r\n *\r\n *   \t\t<$text a=\"true\">bar{}</$text>baz\r\n *\r\n *   <kbd>→</kbd>\r\n *\r\n *   \t\t<$text a=\"true\">bar</$text>b{}az\r\n *\r\n * # Backward movement\r\n *\r\n * * When enabled:\r\n *\r\n *   \t\t<$text a=\"true\">bar</$text>{}baz\r\n *\r\n *    <kbd>←</kbd>\r\n *\r\n *   \t\t<$text a=\"true\">bar{}</$text>baz\r\n *\r\n * * When disabled:\r\n *\r\n *   \t\t<$text a=\"true\">bar</$text>{}baz\r\n *\r\n *   <kbd>←</kbd>\r\n *\r\n *   \t\t<$text a=\"true\">ba{}r</$text>b{}az\r\n *\r\n * @param {Object} options Helper options.\r\n * @param {module:engine/view/view~View} options.view View controller instance.\r\n * @param {module:engine/model/model~Model} options.model Data model instance.\r\n * @param {module:utils/dom/emittermixin~Emitter} options.emitter The emitter to which this behavior should be added\r\n * (e.g. a plugin instance).\r\n * @param {String} options.attribute Attribute for which this behavior will be added.\r\n * @param {module:utils/locale~Locale} options.locale The {@link module:core/editor/editor~Editor#locale} instance.\r\n */\r\nexport default function bindTwoStepCaretToAttribute( { view, model, emitter, attribute, locale } ) {\r\n\tconst twoStepCaretHandler = new TwoStepCaretHandler( model, emitter, attribute );\r\n\tconst modelSelection = model.document.selection;\r\n\r\n\t// Listen to keyboard events and handle the caret movement according to the 2-step caret logic.\r\n\t//\r\n\t// Note: This listener has the \"high+1\" priority:\r\n\t// * \"high\" because of the filler logic implemented in the renderer which also engages on #keydown.\r\n\t// When the gravity is overridden the attributes of the (model) selection attributes are reset.\r\n\t// It may end up with the filler kicking in and breaking the selection.\r\n\t// * \"+1\" because we would like to avoid collisions with other features (like Widgets), which\r\n\t// take over the keydown events with the \"high\" priority. Two-step caret movement takes precedence\r\n\t// over Widgets in that matter.\r\n\t//\r\n\t// Find out more in https://github.com/ckeditor/ckeditor5-engine/issues/1301.\r\n\temitter.listenTo( view.document, 'keydown', ( evt, data ) => {\r\n\t\t// This implementation works only for collapsed selection.\r\n\t\tif ( !modelSelection.isCollapsed ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// When user tries to expand the selection or jump over the whole word or to the beginning/end then\r\n\t\t// two-steps movement is not necessary.\r\n\t\tif ( data.shiftKey || data.altKey || data.ctrlKey ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst arrowRightPressed = data.keyCode == keyCodes.arrowright;\r\n\t\tconst arrowLeftPressed = data.keyCode == keyCodes.arrowleft;\r\n\r\n\t\t// When neither left or right arrow has been pressed then do noting.\r\n\t\tif ( !arrowRightPressed && !arrowLeftPressed ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst position = modelSelection.getFirstPosition();\r\n\t\tconst contentDirection = locale.contentLanguageDirection;\r\n\t\tlet isMovementHandled;\r\n\r\n\t\tif ( ( contentDirection === 'ltr' && arrowRightPressed ) || ( contentDirection === 'rtl' && arrowLeftPressed ) ) {\r\n\t\t\tisMovementHandled = twoStepCaretHandler.handleForwardMovement( position, data );\r\n\t\t} else {\r\n\t\t\tisMovementHandled = twoStepCaretHandler.handleBackwardMovement( position, data );\r\n\t\t}\r\n\r\n\t\t// Stop the keydown event if the two-step caret movement handled it. Avoid collisions\r\n\t\t// with other features which may also take over the caret movement (e.g. Widget).\r\n\t\tif ( isMovementHandled ) {\r\n\t\t\tevt.stop();\r\n\t\t}\r\n\t}, { priority: priorities.get( 'high' ) + 1 } );\r\n}\r\n\r\n/**\r\n * This is a protected helper–class for {@link module:engine/utils/bindtwostepcarettoattribute}.\r\n * It handles the state of the 2-step caret movement for a single {@link module:engine/model/model~Model}\r\n * attribute upon the `keypress` in the {@link module:engine/view/view~View}.\r\n *\r\n * @protected\r\n */\r\nexport class TwoStepCaretHandler {\r\n\t/*\r\n\t * Creates two step handler instance.\r\n\t *\r\n\t * @param {module:engine/model/model~Model} model Data model instance.\r\n\t * @param {module:utils/dom/emittermixin~Emitter} emitter The emitter to which this behavior should be added\r\n\t * (e.g. a plugin instance).\r\n\t * @param {String} attribute Attribute for which the behavior will be added.\r\n\t */\r\n\tconstructor( model, emitter, attribute ) {\r\n\t\t/**\r\n\t\t * The model instance this class instance operates on.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/model/model~Model#schema}\r\n\t\t */\r\n\t\tthis.model = model;\r\n\r\n\t\t/**\r\n\t\t * The Attribute this class instance operates on.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {String}\r\n\t\t */\r\n\t\tthis.attribute = attribute;\r\n\r\n\t\t/**\r\n\t\t * A reference to the document selection.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {module:engine/model/selection~Selection}\r\n\t\t */\r\n\t\tthis._modelSelection = model.document.selection;\r\n\r\n\t\t/**\r\n\t\t * The current UID of the overridden gravity, as returned by\r\n\t\t * {@link module:engine/model/writer~Writer#overrideSelectionGravity}.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {String}\r\n\t\t */\r\n\t\tthis._overrideUid = null;\r\n\r\n\t\t/**\r\n\t\t * A flag indicating that the automatic gravity restoration for this attribute\r\n\t\t * should not happen upon the next\r\n\t\t * {@link module:engine/model/selection~Selection#event:change:range} event.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {String}\r\n\t\t */\r\n\t\tthis._isNextGravityRestorationSkipped = false;\r\n\r\n\t\t// The automatic gravity restoration logic.\r\n\t\temitter.listenTo( this._modelSelection, 'change:range', ( evt, data ) => {\r\n\t\t\t// Skipping the automatic restoration is needed if the selection should change\r\n\t\t\t// but the gravity must remain overridden afterwards. See the #handleBackwardMovement\r\n\t\t\t// to learn more.\r\n\t\t\tif ( this._isNextGravityRestorationSkipped ) {\r\n\t\t\t\tthis._isNextGravityRestorationSkipped = false;\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Skip automatic restore when the gravity is not overridden — simply, there's nothing to restore\r\n\t\t\t// at this moment.\r\n\t\t\tif ( !this._isGravityOverridden ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Skip automatic restore when the change is indirect AND the selection is at the attribute boundary.\r\n\t\t\t// It means that e.g. if the change was external (collaboration) and the user had their\r\n\t\t\t// selection around the link, its gravity should remain intact in this change:range event.\r\n\t\t\tif ( !data.directChange && isAtBoundary( this._modelSelection.getFirstPosition(), attribute ) ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._restoreGravity();\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the document selection and the view according to the two–step caret movement state\r\n\t * when moving **forwards**. Executed upon `keypress` in the {@link module:engine/view/view~View}.\r\n\t *\r\n\t * @param {module:engine/model/position~Position} position The model position at the moment of the key press.\r\n\t * @param {module:engine/view/observer/domeventdata~DomEventData} data Data of the key press.\r\n\t * @returns {Boolean} `true` when the handler prevented caret movement\r\n\t */\r\n\thandleForwardMovement( position, data ) {\r\n\t\tconst attribute = this.attribute;\r\n\r\n\t\t// DON'T ENGAGE 2-SCM if gravity is already overridden. It means that we just entered\r\n\t\t//\r\n\t\t// \t\t<paragraph>foo<$text attribute>{}bar</$text>baz</paragraph>\r\n\t\t//\r\n\t\t// or left the attribute\r\n\t\t//\r\n\t\t// \t\t<paragraph>foo<$text attribute>bar</$text>{}baz</paragraph>\r\n\t\t//\r\n\t\t// and the gravity will be restored automatically.\r\n\t\tif ( this._isGravityOverridden ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// DON'T ENGAGE 2-SCM when the selection is at the beginning of the block AND already has the\r\n\t\t// attribute:\r\n\t\t// * when the selection was initially set there using the mouse,\r\n\t\t// * when the editor has just started\r\n\t\t//\r\n\t\t//\t\t<paragraph><$text attribute>{}bar</$text>baz</paragraph>\r\n\t\t//\r\n\t\tif ( position.isAtStart && this._hasSelectionAttribute ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// ENGAGE 2-SCM when about to leave one attribute value and enter another:\r\n\t\t//\r\n\t\t// \t\t<paragraph><$text attribute=\"1\">foo{}</$text><$text attribute=\"2\">bar</$text></paragraph>\r\n\t\t//\r\n\t\t// but DON'T when already in between of them (no attribute selection):\r\n\t\t//\r\n\t\t// \t\t<paragraph><$text attribute=\"1\">foo</$text>{}<$text attribute=\"2\">bar</$text></paragraph>\r\n\t\t//\r\n\t\tif ( isBetweenDifferentValues( position, attribute ) && this._hasSelectionAttribute ) {\r\n\t\t\tthis._preventCaretMovement( data );\r\n\t\t\tthis._removeSelectionAttribute();\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// ENGAGE 2-SCM when entering an attribute:\r\n\t\t//\r\n\t\t// \t\t<paragraph>foo{}<$text attribute>bar</$text>baz</paragraph>\r\n\t\t//\r\n\t\tif ( isAtStartBoundary( position, attribute ) ) {\r\n\t\t\tthis._preventCaretMovement( data );\r\n\t\t\tthis._overrideGravity();\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// ENGAGE 2-SCM when leaving an attribute:\r\n\t\t//\r\n\t\t//\t\t<paragraph>foo<$text attribute>bar{}</$text>baz</paragraph>\r\n\t\t//\r\n\t\tif ( isAtEndBoundary( position, attribute ) && this._hasSelectionAttribute ) {\r\n\t\t\tthis._preventCaretMovement( data );\r\n\t\t\tthis._overrideGravity();\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the document selection and the view according to the two–step caret movement state\r\n\t * when moving **backwards**. Executed upon `keypress` in the {@link module:engine/view/view~View}.\r\n\t *\r\n\t * @param {module:engine/model/position~Position} position The model position at the moment of the key press.\r\n\t * @param {module:engine/view/observer/domeventdata~DomEventData} data Data of the key press.\r\n\t * @returns {Boolean} `true` when the handler prevented caret movement\r\n\t */\r\n\thandleBackwardMovement( position, data ) {\r\n\t\tconst attribute = this.attribute;\r\n\r\n\t\t// When the gravity is already overridden...\r\n\t\tif ( this._isGravityOverridden ) {\r\n\t\t\t// ENGAGE 2-SCM & REMOVE SELECTION ATTRIBUTE\r\n\t\t\t// when about to leave one attribute value and enter another:\r\n\t\t\t//\r\n\t\t\t// \t\t<paragraph><$text attribute=\"1\">foo</$text><$text attribute=\"2\">{}bar</$text></paragraph>\r\n\t\t\t//\r\n\t\t\t// but DON'T when already in between of them (no attribute selection):\r\n\t\t\t//\r\n\t\t\t// \t\t<paragraph><$text attribute=\"1\">foo</$text>{}<$text attribute=\"2\">bar</$text></paragraph>\r\n\t\t\t//\r\n\t\t\tif ( isBetweenDifferentValues( position, attribute ) && this._hasSelectionAttribute ) {\r\n\t\t\t\tthis._preventCaretMovement( data );\r\n\t\t\t\tthis._restoreGravity();\r\n\t\t\t\tthis._removeSelectionAttribute();\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t// ENGAGE 2-SCM when at any boundary of the attribute:\r\n\t\t\t//\r\n\t\t\t// \t\t<paragraph>foo<$text attribute>bar</$text>{}baz</paragraph>\r\n\t\t\t// \t\t<paragraph>foo<$text attribute>{}bar</$text>baz</paragraph>\r\n\t\t\t//\r\n\t\t\telse {\r\n\t\t\t\tthis._preventCaretMovement( data );\r\n\t\t\t\tthis._restoreGravity();\r\n\r\n\t\t\t\t// REMOVE SELECTION ATRIBUTE at the beginning of the block.\r\n\t\t\t\t// It's like restoring gravity but towards a non-existent content when\r\n\t\t\t\t// the gravity is overridden:\r\n\t\t\t\t//\r\n\t\t\t\t// \t\t<paragraph><$text attribute>{}bar</$text></paragraph>\r\n\t\t\t\t//\r\n\t\t\t\t// becomes:\r\n\t\t\t\t//\r\n\t\t\t\t// \t\t<paragraph>{}<$text attribute>bar</$text></paragraph>\r\n\t\t\t\t//\r\n\t\t\t\tif ( position.isAtStart ) {\r\n\t\t\t\t\tthis._removeSelectionAttribute();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// ENGAGE 2-SCM when between two different attribute values but selection has no attribute:\r\n\t\t\t//\r\n\t\t\t// \t\t<paragraph><$text attribute=\"1\">foo</$text>{}<$text attribute=\"2\">bar</$text></paragraph>\r\n\t\t\t//\r\n\t\t\tif ( isBetweenDifferentValues( position, attribute ) && !this._hasSelectionAttribute ) {\r\n\t\t\t\tthis._preventCaretMovement( data );\r\n\t\t\t\tthis._setSelectionAttributeFromTheNodeBefore( position );\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t// End of block boundary cases:\r\n\t\t\t//\r\n\t\t\t// \t\t<paragraph><$text attribute>bar{}</$text></paragraph>\r\n\t\t\t// \t\t<paragraph><$text attribute>bar</$text>{}</paragraph>\r\n\t\t\t//\r\n\t\t\tif ( position.isAtEnd && isAtEndBoundary( position, attribute ) ) {\r\n\t\t\t\t// DON'T ENGAGE 2-SCM if the selection has the attribute already.\r\n\t\t\t\t// This is a common selection if set using the mouse.\r\n\t\t\t\t//\r\n\t\t\t\t// \t\t<paragraph><$text attribute>bar{}</$text></paragraph>\r\n\t\t\t\t//\r\n\t\t\t\tif ( this._hasSelectionAttribute ) {\r\n\t\t\t\t\t// DON'T ENGAGE 2-SCM if the attribute at the end of the block which has length == 1.\r\n\t\t\t\t\t// Make sure the selection will not the attribute after it moves backwards.\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// \t\t<paragraph>foo<$text attribute>b{}</$text></paragraph>\r\n\t\t\t\t\t//\r\n\t\t\t\t\tif ( isStepAfterTheAttributeBoundary( position, attribute ) ) {\r\n\t\t\t\t\t\t// Skip the automatic gravity restore upon the next selection#change:range event.\r\n\t\t\t\t\t\t// If not skipped, it would automatically restore the gravity, which should remain\r\n\t\t\t\t\t\t// overridden.\r\n\t\t\t\t\t\tthis._skipNextAutomaticGravityRestoration();\r\n\t\t\t\t\t\tthis._overrideGravity();\r\n\r\n\t\t\t\t\t\t// Don't return \"true\" here because we didn't call _preventCaretMovement.\r\n\t\t\t\t\t\t// Returning here will destabilize the filler logic, which also listens to\r\n\t\t\t\t\t\t// keydown (and the event would be stopped).\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t// ENGAGE 2-SCM if the selection has no attribute. This may happen when the user\r\n\t\t\t\t// left the attribute using a FORWARD 2-SCM.\r\n\t\t\t\t//\r\n\t\t\t\t// \t\t<paragraph><$text attribute>bar</$text>{}</paragraph>\r\n\t\t\t\t//\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._preventCaretMovement( data );\r\n\t\t\t\t\tthis._setSelectionAttributeFromTheNodeBefore( position );\r\n\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// REMOVE SELECTION ATRIBUTE when restoring gravity towards a non-existent content at the\r\n\t\t\t// beginning of the block.\r\n\t\t\t//\r\n\t\t\t// \t\t<paragraph>{}<$text attribute>bar</$text></paragraph>\r\n\t\t\t//\r\n\t\t\tif ( position.isAtStart ) {\r\n\t\t\t\tif ( this._hasSelectionAttribute ) {\r\n\t\t\t\t\tthis._removeSelectionAttribute();\r\n\t\t\t\t\tthis._preventCaretMovement( data );\r\n\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// DON'T ENGAGE 2-SCM when about to enter of leave an attribute.\r\n\t\t\t// We need to check if the caret is a one position before the attribute boundary:\r\n\t\t\t//\r\n\t\t\t// \t\t<paragraph>foo<$text attribute>b{}ar</$text>baz</paragraph>\r\n\t\t\t// \t\t<paragraph>foo<$text attribute>bar</$text>b{}az</paragraph>\r\n\t\t\t//\r\n\t\t\tif ( isStepAfterTheAttributeBoundary( position, attribute ) ) {\r\n\t\t\t\t// Skip the automatic gravity restore upon the next selection#change:range event.\r\n\t\t\t\t// If not skipped, it would automatically restore the gravity, which should remain\r\n\t\t\t\t// overridden.\r\n\t\t\t\tthis._skipNextAutomaticGravityRestoration();\r\n\t\t\t\tthis._overrideGravity();\r\n\r\n\t\t\t\t// Don't return \"true\" here because we didn't call _preventCaretMovement.\r\n\t\t\t\t// Returning here will destabilize the filler logic, which also listens to\r\n\t\t\t\t// keydown (and the event would be stopped).\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * `true` when the gravity is overridden for the {@link #attribute}.\r\n\t *\r\n\t * @readonly\r\n\t * @private\r\n\t * @type {Boolean}\r\n\t */\r\n\tget _isGravityOverridden() {\r\n\t\treturn !!this._overrideUid;\r\n\t}\r\n\r\n\t/**\r\n\t * `true` when the {@link module:engine/model/selection~Selection} has the {@link #attribute}.\r\n\t *\r\n\t * @readonly\r\n\t * @private\r\n\t * @type {Boolean}\r\n\t */\r\n\tget _hasSelectionAttribute() {\r\n\t\treturn this._modelSelection.hasAttribute( this.attribute );\r\n\t}\r\n\r\n\t/**\r\n\t * Overrides the gravity using the {@link module:engine/model/writer~Writer model writer}\r\n\t * and stores the information about this fact in the {@link #_overrideUid}.\r\n\t *\r\n\t * A shorthand for {@link module:engine/model/writer~Writer#overrideSelectionGravity}.\r\n\t *\r\n\t * @private\r\n\t */\r\n\t_overrideGravity() {\r\n\t\tthis._overrideUid = this.model.change( writer => writer.overrideSelectionGravity() );\r\n\t}\r\n\r\n\t/**\r\n\t * Restores the gravity using the {@link module:engine/model/writer~Writer model writer}.\r\n\t *\r\n\t * A shorthand for {@link module:engine/model/writer~Writer#restoreSelectionGravity}.\r\n\t *\r\n\t * @private\r\n\t */\r\n\t_restoreGravity() {\r\n\t\tthis.model.change( writer => {\r\n\t\t\twriter.restoreSelectionGravity( this._overrideUid );\r\n\t\t\tthis._overrideUid = null;\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * Prevents the caret movement in the view by calling `preventDefault` on the event data.\r\n\t *\r\n\t * @private\r\n\t */\r\n\t_preventCaretMovement( data ) {\r\n\t\tdata.preventDefault();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the {@link #attribute} from the selection using using the\r\n\t * {@link module:engine/model/writer~Writer model writer}.\r\n\t *\r\n\t * @private\r\n\t */\r\n\t_removeSelectionAttribute() {\r\n\t\tthis.model.change( writer => {\r\n\t\t\twriter.removeSelectionAttribute( this.attribute );\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the {@link #attribute} to the current selection using using the\r\n\t * value from the node before the current position. Uses\r\n\t * the {@link module:engine/model/writer~Writer model writer}.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/model/position~Position} position\r\n\t */\r\n\t_setSelectionAttributeFromTheNodeBefore( position ) {\r\n\t\tconst attribute = this.attribute;\r\n\r\n\t\tthis.model.change( writer => {\r\n\t\t\twriter.setSelectionAttribute( this.attribute, position.nodeBefore.getAttribute( attribute ) );\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * Skips the next automatic selection gravity restoration upon the\r\n\t * {@link module:engine/model/selection~Selection#event:change:range} event.\r\n\t *\r\n\t * See {@link #_isNextGravityRestorationSkipped}.\r\n\t *\r\n\t * @private\r\n\t */\r\n\t_skipNextAutomaticGravityRestoration() {\r\n\t\tthis._isNextGravityRestorationSkipped = true;\r\n\t}\r\n}\r\n\r\n// @param {module:engine/model/position~Position} position\r\n// @param {String} attribute\r\n// @returns {Boolean} `true` when position between the nodes sticks to the bound of text with given attribute.\r\nfunction isAtBoundary( position, attribute ) {\r\n\treturn isAtStartBoundary( position, attribute ) || isAtEndBoundary( position, attribute );\r\n}\r\n\r\n// @param {module:engine/model/position~Position} position\r\n// @param {String} attribute\r\nfunction isAtStartBoundary( position, attribute ) {\r\n\tconst { nodeBefore, nodeAfter } = position;\r\n\tconst isAttrBefore = nodeBefore ? nodeBefore.hasAttribute( attribute ) : false;\r\n\tconst isAttrAfter = nodeAfter ? nodeAfter.hasAttribute( attribute ) : false;\r\n\r\n\treturn isAttrAfter && ( !isAttrBefore || nodeBefore.getAttribute( attribute ) !== nodeAfter.getAttribute( attribute ) );\r\n}\r\n\r\n// @param {module:engine/model/position~Position} position\r\n// @param {String} attribute\r\nfunction isAtEndBoundary( position, attribute ) {\r\n\tconst { nodeBefore, nodeAfter } = position;\r\n\tconst isAttrBefore = nodeBefore ? nodeBefore.hasAttribute( attribute ) : false;\r\n\tconst isAttrAfter = nodeAfter ? nodeAfter.hasAttribute( attribute ) : false;\r\n\r\n\treturn isAttrBefore && ( !isAttrAfter || nodeBefore.getAttribute( attribute ) !== nodeAfter.getAttribute( attribute ) );\r\n}\r\n\r\n// @param {module:engine/model/position~Position} position\r\n// @param {String} attribute\r\nfunction isBetweenDifferentValues( position, attribute ) {\r\n\tconst { nodeBefore, nodeAfter } = position;\r\n\tconst isAttrBefore = nodeBefore ? nodeBefore.hasAttribute( attribute ) : false;\r\n\tconst isAttrAfter = nodeAfter ? nodeAfter.hasAttribute( attribute ) : false;\r\n\r\n\tif ( !isAttrAfter || !isAttrBefore ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\treturn nodeAfter.getAttribute( attribute ) !== nodeBefore.getAttribute( attribute );\r\n}\r\n\r\n// @param {module:engine/model/position~Position} position\r\n// @param {String} attribute\r\nfunction isStepAfterTheAttributeBoundary( position, attribute ) {\r\n\treturn isAtBoundary( position.getShiftedBy( -1 ), attribute );\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/view/attributeelement\r\n */\r\n\r\nimport Element from './element';\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\n\r\n// Default attribute priority.\r\nconst DEFAULT_PRIORITY = 10;\r\n\r\n/**\r\n * Attribute elements are used to represent formatting elements in the view (think – `<b>`, `<span style=\"font-size: 2em\">`, etc.).\r\n * Most often they are created when downcasting model text attributes.\r\n *\r\n * Editing engine does not define a fixed HTML DTD. This is why a feature developer needs to choose between various\r\n * types (container element, {@link module:engine/view/attributeelement~AttributeElement attribute element},\r\n * {@link module:engine/view/emptyelement~EmptyElement empty element}, etc) when developing a feature.\r\n *\r\n * To create a new attribute element instance use the\r\n * {@link module:engine/view/downcastwriter~DowncastWriter#createAttributeElement `DowncastWriter#createAttributeElement()`} method.\r\n *\r\n * @extends module:engine/view/element~Element\r\n */\r\nexport default class AttributeElement extends Element {\r\n\t/**\r\n\t * Creates an attribute element.\r\n\t *\r\n\t * @see module:engine/view/downcastwriter~DowncastWriter#createAttributeElement\r\n\t * @see module:engine/view/element~Element\r\n\t * @protected\r\n\t * @param {module:engine/view/document~Document} document The document instance to which this element belongs.\r\n\t * @param {String} name Node name.\r\n\t * @param {Object|Iterable} [attrs] Collection of attributes.\r\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\r\n\t * A list of nodes to be inserted into created element.\r\n\t */\r\n\tconstructor( document, name, attrs, children ) {\r\n\t\tsuper( document, name, attrs, children );\r\n\r\n\t\t/**\r\n\t\t * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\r\n\t\t *\r\n\t\t * @method #getFillerOffset\r\n\t\t * @returns {Number|null} Block filler offset or `null` if block filler is not needed.\r\n\t\t */\r\n\t\tthis.getFillerOffset = getFillerOffset;\r\n\r\n\t\t/**\r\n\t\t * Element priority. Decides in what order elements are wrapped by {@link module:engine/view/downcastwriter~DowncastWriter}.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @member {Number}\r\n\t\t */\r\n\t\tthis._priority = DEFAULT_PRIORITY;\r\n\r\n\t\t/**\r\n\t\t * Element identifier. If set, it is used by {@link module:engine/view/element~Element#isSimilar},\r\n\t\t * and then two elements are considered similar if, and only if they have the same `_id`.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @member {String|Number}\r\n\t\t */\r\n\t\tthis._id = null;\r\n\r\n\t\t/**\r\n\t\t * Keeps all the attribute elements that have the same {@link module:engine/view/attributeelement~AttributeElement#id ids}\r\n\t\t * and still exist in the view tree.\r\n\t\t *\r\n\t\t * This property is managed by {@link module:engine/view/downcastwriter~DowncastWriter}.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @member {Set.<module:engine/view/attributeelement~AttributeElement>|null}\r\n\t\t */\r\n\t\tthis._clonesGroup = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Element priority. Decides in what order elements are wrapped by {@link module:engine/view/downcastwriter~DowncastWriter}.\r\n\t *\r\n\t * @readonly\r\n\t * @type {Number}\r\n\t */\r\n\tget priority() {\r\n\t\treturn this._priority;\r\n\t}\r\n\r\n\t/**\r\n\t * Element identifier. If set, it is used by {@link module:engine/view/element~Element#isSimilar},\r\n\t * and then two elements are considered similar if, and only if they have the same `id`.\r\n\t *\r\n\t * @readonly\r\n\t * @type {String|Number}\r\n\t */\r\n\tget id() {\r\n\t\treturn this._id;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all {@link module:engine/view/attributeelement~AttributeElement attribute elements} that has the\r\n\t * same {@link module:engine/view/attributeelement~AttributeElement#id id} and are in the view tree (were not removed).\r\n\t *\r\n\t * Note: If this element has been removed from the tree, returned set will not include it.\r\n\t *\r\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError attribute-element-get-elements-with-same-id-no-id}\r\n\t * if this element has no `id`.\r\n\t *\r\n\t * @returns {Set.<module:engine/view/attributeelement~AttributeElement>} Set containing all the attribute elements\r\n\t * with the same `id` that were added and not removed from the view tree.\r\n\t */\r\n\tgetElementsWithSameId() {\r\n\t\tif ( this.id === null ) {\r\n\t\t\t/**\r\n\t\t\t * Cannot get elements with the same id for an attribute element without id.\r\n\t\t\t *\r\n\t\t\t * @error attribute-element-get-elements-with-same-id-no-id\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'attribute-element-get-elements-with-same-id-no-id: ' +\r\n\t\t\t\t'Cannot get elements with the same id for an attribute element without id.',\r\n\t\t\t\tthis\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn new Set( this._clonesGroup );\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this object is of the given.\r\n\t *\r\n\t *\t\tattributeElement.is( 'attributeElement' ); // -> true\r\n\t *\t\tattributeElement.is( 'element' ); // -> true\r\n\t *\t\tattributeElement.is( 'node' ); // -> true\r\n\t *\t\tattributeElement.is( 'view:attributeElement' ); // -> true\r\n\t *\t\tattributeElement.is( 'view:element' ); // -> true\r\n\t *\t\tattributeElement.is( 'view:node' ); // -> true\r\n\t *\r\n\t *\t\tattributeElement.is( 'model:element' ); // -> false\r\n\t *\t\tattributeElement.is( 'documentFragment' ); // -> false\r\n\t *\r\n\t * Assuming that the object being checked is an attribute element, you can also check its\r\n\t * {@link module:engine/view/attributeelement~AttributeElement#name name}:\r\n\t *\r\n\t *\t\tattributeElement.is( 'b' ); // -> true if this is a bold element\r\n\t *\t\tattributeElement.is( 'attributeElement', 'b' ); // -> same as above\r\n\t *\t\ttext.is( 'b' ); -> false\r\n\t *\r\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\r\n\t *\r\n\t * @param {String} type Type to check when `name` parameter is present.\r\n\t * Otherwise, it acts like the `name` parameter.\r\n\t * @param {String} [name] Element name.\r\n\t * @returns {Boolean}\r\n\t */\r\n\tis( type, name = null ) {\r\n\t\tconst cutType = type && type.replace( /^view:/, '' );\r\n\r\n\t\tif ( !name ) {\r\n\t\t\treturn cutType == 'attributeElement' || super.is( type );\r\n\t\t} else {\r\n\t\t\treturn ( cutType == 'attributeElement' && name == this.name ) || super.is( type, name );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this element is similar to other element.\r\n\t *\r\n\t * If none of elements has set {@link module:engine/view/attributeelement~AttributeElement#id}, then both elements\r\n\t * should have the same name, attributes and priority to be considered as similar. Two similar elements can contain\r\n\t * different set of children nodes.\r\n\t *\r\n\t * If at least one element has {@link module:engine/view/attributeelement~AttributeElement#id} set, then both\r\n\t * elements have to have the same {@link module:engine/view/attributeelement~AttributeElement#id} value to be\r\n\t * considered similar.\r\n\t *\r\n\t * Similarity is important for {@link module:engine/view/downcastwriter~DowncastWriter}. For example:\r\n\t *\r\n\t * * two following similar elements can be merged together into one, longer element,\r\n\t * * {@link module:engine/view/downcastwriter~DowncastWriter#unwrap} checks similarity of passed element and processed element to\r\n\t * decide whether processed element should be unwrapped,\r\n\t * * etc.\r\n\t *\r\n\t * @param {module:engine/view/element~Element} otherElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tisSimilar( otherElement ) {\r\n\t\t// If any element has an `id` set, just compare the ids.\r\n\t\tif ( this.id !== null || otherElement.id !== null ) {\r\n\t\t\treturn this.id === otherElement.id;\r\n\t\t}\r\n\r\n\t\treturn super.isSimilar( otherElement ) && this.priority == otherElement.priority;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones provided element with priority.\r\n\t *\r\n\t * @protected\r\n\t * @param {Boolean} deep If set to `true` clones element and all its children recursively. When set to `false`,\r\n\t * element will be cloned without any children.\r\n\t * @returns {module:engine/view/attributeelement~AttributeElement} Clone of this element.\r\n\t */\r\n\t_clone( deep ) {\r\n\t\tconst cloned = super._clone( deep );\r\n\r\n\t\t// Clone priority too.\r\n\t\tcloned._priority = this._priority;\r\n\r\n\t\t// And id too.\r\n\t\tcloned._id = this._id;\r\n\r\n\t\treturn cloned;\r\n\t}\r\n}\r\n\r\n/**\r\n * Default attribute priority.\r\n *\r\n * @member {Number} module:engine/view/attributeelement~AttributeElement.DEFAULT_PRIORITY\r\n */\r\nAttributeElement.DEFAULT_PRIORITY = DEFAULT_PRIORITY;\r\n\r\n// Returns block {@link module:engine/view/filler~Filler filler} offset or `null` if block filler is not needed.\r\n//\r\n// @returns {Number|null} Block filler offset or `null` if block filler is not needed.\r\nfunction getFillerOffset() {\r\n\t// <b>foo</b> does not need filler.\r\n\tif ( nonUiChildrenCount( this ) ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tlet element = this.parent;\r\n\r\n\t// <p><b></b></p> needs filler -> <p><b><br></b></p>\r\n\twhile ( element && element.is( 'attributeElement' ) ) {\r\n\t\tif ( nonUiChildrenCount( element ) > 1 ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\telement = element.parent;\r\n\t}\r\n\r\n\tif ( !element || nonUiChildrenCount( element ) > 1 ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// Render block filler at the end of element (after all ui elements).\r\n\treturn this.childCount;\r\n}\r\n\r\n// Returns total count of children that are not {@link module:engine/view/uielement~UIElement UIElements}.\r\n//\r\n// @param {module:engine/view/element~Element} element\r\n// @returns {Number}\r\nfunction nonUiChildrenCount( element ) {\r\n\treturn Array.from( element.getChildren() ).filter( element => !element.is( 'uiElement' ) ).length;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/view/containerelement\r\n */\r\n\r\nimport Element from './element';\r\n\r\n/**\r\n * Containers are elements which define document structure. They define boundaries for\r\n * {@link module:engine/view/attributeelement~AttributeElement attributes}. They are mostly used for block elements like `<p>` or `<div>`.\r\n *\r\n * Editing engine does not define a fixed HTML DTD. This is why a feature developer needs to choose between various\r\n * types (container element, {@link module:engine/view/attributeelement~AttributeElement attribute element},\r\n * {@link module:engine/view/emptyelement~EmptyElement empty element}, etc) when developing a feature.\r\n *\r\n * The container element should be your default choice when writing a converter, unless:\r\n *\r\n * * this element represents a model text attribute (then use {@link module:engine/view/attributeelement~AttributeElement}),\r\n * * this is an empty element like `<img>` (then use {@link module:engine/view/emptyelement~EmptyElement}),\r\n * * this is a root element,\r\n * * this is a nested editable element (then use  {@link module:engine/view/editableelement~EditableElement}).\r\n *\r\n * To create a new container element instance use the\r\n * {@link module:engine/view/downcastwriter~DowncastWriter#createContainerElement `DowncastWriter#createContainerElement()`}\r\n * method.\r\n *\r\n * @extends module:engine/view/element~Element\r\n */\r\nexport default class ContainerElement extends Element {\r\n\t/**\r\n\t * Creates a container element.\r\n\t *\r\n\t * @see module:engine/view/downcastwriter~DowncastWriter#createContainerElement\r\n\t * @see module:engine/view/element~Element\r\n\t * @protected\r\n\t * @param {module:engine/view/document~Document} document The document instance to which this element belongs.\r\n\t * @param {String} name Node name.\r\n\t * @param {Object|Iterable} [attrs] Collection of attributes.\r\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\r\n\t * A list of nodes to be inserted into created element.\r\n\t */\r\n\tconstructor( document, name, attrs, children ) {\r\n\t\tsuper( document, name, attrs, children );\r\n\r\n\t\t/**\r\n\t\t * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\r\n\t\t *\r\n\t\t * @method #getFillerOffset\r\n\t\t * @returns {Number|null} Block filler offset or `null` if block filler is not needed.\r\n\t\t */\r\n\t\tthis.getFillerOffset = getFillerOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this object is of the given.\r\n\t *\r\n\t *\t\tcontainerElement.is( 'containerElement' ); // -> true\r\n\t *\t\tcontainerElement.is( 'element' ); // -> true\r\n\t *\t\tcontainerElement.is( 'node' ); // -> true\r\n\t *\t\tcontainerElement.is( 'view:containerElement' ); // -> true\r\n\t *\t\tcontainerElement.is( 'view:element' ); // -> true\r\n\t *\t\tcontainerElement.is( 'view:node' ); // -> true\r\n\t *\r\n\t *\t\tcontainerElement.is( 'model:element' ); // -> false\r\n\t *\t\tcontainerElement.is( 'documentFragment' ); // -> false\r\n\t *\r\n\t * Assuming that the object being checked is a container element, you can also check its\r\n\t * {@link module:engine/view/containerelement~ContainerElement#name name}:\r\n\t *\r\n\t *\t\tcontainerElement.is( 'div' ); // -> true if this is a div container element\r\n\t *\t\tcontainerElement.is( 'contaienrElement', 'div' ); // -> same as above\r\n\t *\t\ttext.is( 'div' ); -> false\r\n\t *\r\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\r\n\t *\r\n\t * @param {String} type Type to check when `name` parameter is present.\r\n\t * Otherwise, it acts like the `name` parameter.\r\n\t * @param {String} [name] Element name.\r\n\t * @returns {Boolean}\r\n\t */\r\n\tis( type, name = null ) {\r\n\t\tconst cutType = type && type.replace( /^view:/, '' );\r\n\t\tif ( !name ) {\r\n\t\t\treturn cutType == 'containerElement' || super.is( type );\r\n\t\t} else {\r\n\t\t\treturn ( cutType == 'containerElement' && name == this.name ) || super.is( type, name );\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\r\n *\r\n * @returns {Number|null} Block filler offset or `null` if block filler is not needed.\r\n */\r\nexport function getFillerOffset() {\r\n\tconst children = [ ...this.getChildren() ];\r\n\tconst lastChild = children[ this.childCount - 1 ];\r\n\r\n\t// Block filler is required after a `<br>` if it's the last element in its container. See #1422.\r\n\tif ( lastChild && lastChild.is( 'element', 'br' ) ) {\r\n\t\treturn this.childCount;\r\n\t}\r\n\r\n\tfor ( const child of children ) {\r\n\t\t// If there's any non-UI element – don't render the bogus.\r\n\t\tif ( !child.is( 'uiElement' ) ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\t// If there are only UI elements – render the bogus at the end of the element.\r\n\treturn this.childCount;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/view/document\r\n */\r\n\r\nimport DocumentSelection from './documentselection';\r\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\r\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\r\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\r\n\r\n// @if CK_DEBUG_ENGINE // const { logDocument } = require( '../dev-utils/utils' );\r\n\r\n/**\r\n * Document class creates an abstract layer over the content editable area, contains a tree of view elements and\r\n * {@link module:engine/view/documentselection~DocumentSelection view selection} associated with this document.\r\n *\r\n * @mixes module:utils/observablemixin~ObservableMixin\r\n */\r\nexport default class Document {\r\n\t/**\r\n\t * Creates a Document instance.\r\n\t *\r\n\t * @param {module:engine/view/stylesmap~StylesProcessor} stylesProcessor The styles processor instance.\r\n\t */\r\n\tconstructor( stylesProcessor ) {\r\n\t\t/**\r\n\t\t * Selection done on this document.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/view/documentselection~DocumentSelection} module:engine/view/document~Document#selection\r\n\t\t */\r\n\t\tthis.selection = new DocumentSelection();\r\n\r\n\t\t/**\r\n\t\t * Roots of the view tree. Collection of the {@link module:engine/view/element~Element view elements}.\r\n\t\t *\r\n\t\t * View roots are created as a result of binding between {@link module:engine/view/document~Document#roots} and\r\n\t\t * {@link module:engine/model/document~Document#roots} and this is handled by\r\n\t\t * {@link module:engine/controller/editingcontroller~EditingController}, so to create view root we need to create\r\n\t\t * model root using {@link module:engine/model/document~Document#createRoot}.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:utils/collection~Collection} module:engine/view/document~Document#roots\r\n\t\t */\r\n\t\tthis.roots = new Collection( { idProperty: 'rootName' } );\r\n\r\n\t\t/**\r\n\t\t * The styles processor instance used by this document when normalizing styles.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/view/stylesmap~StylesProcessor}\r\n\t\t */\r\n\t\tthis.stylesProcessor = stylesProcessor;\r\n\r\n\t\t/**\r\n\t\t * Defines whether document is in read-only mode.\r\n\t\t *\r\n\t\t * When document is read-ony then all roots are read-only as well and caret placed inside this root is hidden.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @member {Boolean} #isReadOnly\r\n\t\t */\r\n\t\tthis.set( 'isReadOnly', false );\r\n\r\n\t\t/**\r\n\t\t * True if document is focused.\r\n\t\t *\r\n\t\t * This property is updated by the {@link module:engine/view/observer/focusobserver~FocusObserver}.\r\n\t\t * If the {@link module:engine/view/observer/focusobserver~FocusObserver} is disabled this property will not change.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @observable\r\n\t\t * @member {Boolean} module:engine/view/document~Document#isFocused\r\n\t\t */\r\n\t\tthis.set( 'isFocused', false );\r\n\r\n\t\t/**\r\n\t\t * True if composition is in progress inside the document.\r\n\t\t *\r\n\t\t * This property is updated by the {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\r\n\t\t * If the {@link module:engine/view/observer/compositionobserver~CompositionObserver} is disabled this property will not change.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @observable\r\n\t\t * @member {Boolean} module:engine/view/document~Document#isComposing\r\n\t\t */\r\n\t\tthis.set( 'isComposing', false );\r\n\r\n\t\t/**\r\n\t\t * Post-fixer callbacks registered to the view document.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Set}\r\n\t\t */\r\n\t\tthis._postFixers = new Set();\r\n\t}\r\n\r\n\t/**\r\n\t * Gets a {@link module:engine/view/document~Document#roots view root element} with the specified name. If the name is not\r\n\t * specific \"main\" root is returned.\r\n\t *\r\n\t * @param {String} [name='main'] Name of the root.\r\n\t * @returns {module:engine/view/rooteditableelement~RootEditableElement|null} The view root element with the specified name\r\n\t * or null when there is no root of given name.\r\n\t */\r\n\tgetRoot( name = 'main' ) {\r\n\t\treturn this.roots.get( name );\r\n\t}\r\n\r\n\t/**\r\n\t * Allows registering post-fixer callbacks. A post-fixers mechanism allows to update the view tree just before it is rendered\r\n\t * to the DOM.\r\n\t *\r\n\t * Post-fixers are executed right after all changes from the outermost change block were applied but\r\n\t * before the {@link module:engine/view/view~View#event:render render event} is fired. If a post-fixer callback made\r\n\t * a change, it should return `true`. When this happens, all post-fixers are fired again to check if something else should\r\n\t * not be fixed in the new document tree state.\r\n\t *\r\n\t * View post-fixers are useful when you want to apply some fixes whenever the view structure changes. Keep in mind that\r\n\t * changes executed in a view post-fixer should not break model-view mapping.\r\n\t *\r\n\t * The types of changes which should be safe:\r\n\t *\r\n\t * * adding or removing attribute from elements,\r\n\t * * changes inside of {@link module:engine/view/uielement~UIElement UI elements},\r\n\t * * {@link module:engine/model/differ~Differ#refreshItem marking some of the model elements to be re-converted}.\r\n\t *\r\n\t * Try to avoid changes which touch view structure:\r\n\t *\r\n\t * * you should not add or remove nor wrap or unwrap any view elements,\r\n\t * * you should not change the editor data model in a view post-fixer.\r\n\t *\r\n\t * As a parameter, a post-fixer callback receives a {@link module:engine/view/downcastwriter~DowncastWriter downcast writer}.\r\n\t *\r\n\t * Typically, a post-fixer will look like this:\r\n\t *\r\n\t *\t\teditor.editing.view.document.registerPostFixer( writer => {\r\n\t *\t\t\tif ( checkSomeCondition() ) {\r\n\t *\t\t\t\twriter.doSomething();\r\n\t *\r\n\t *\t\t\t\t// Let other post-fixers know that something changed.\r\n\t *\t\t\t\treturn true;\r\n\t *\t\t\t}\r\n\t *\t\t} );\r\n\t *\r\n\t * Note that nothing happens right after you register a post-fixer (e.g. execute such a code in the console).\r\n\t * That is because adding a post-fixer does not execute it.\r\n\t * The post-fixer will be executed as soon as any change in the document needs to cause its rendering.\r\n\t * If you want to re-render the editor's view after registering the post-fixer then you should do it manually by calling\r\n\t * {@link module:engine/view/view~View#forceRender `view.forceRender()`}.\r\n\t *\r\n\t * If you need to register a callback which is executed when DOM elements are already updated,\r\n\t * use {@link module:engine/view/view~View#event:render render event}.\r\n\t *\r\n\t * @param {Function} postFixer\r\n\t */\r\n\tregisterPostFixer( postFixer ) {\r\n\t\tthis._postFixers.add( postFixer );\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys this instance. Makes sure that all observers are destroyed and listeners removed.\r\n\t */\r\n\tdestroy() {\r\n\t\tthis.roots.map( root => root.destroy() );\r\n\t\tthis.stopListening();\r\n\t}\r\n\r\n\t/**\r\n\t * Performs post-fixer loops. Executes post-fixer callbacks as long as none of them has done any changes to the model.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer\r\n\t */\r\n\t_callPostFixers( writer ) {\r\n\t\tlet wasFixed = false;\r\n\r\n\t\tdo {\r\n\t\t\tfor ( const callback of this._postFixers ) {\r\n\t\t\t\twasFixed = callback( writer );\r\n\r\n\t\t\t\tif ( wasFixed ) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} while ( wasFixed );\r\n\t}\r\n\r\n\t/**\r\n\t * Event fired whenever document content layout changes. It is fired whenever content is\r\n\t * {@link module:engine/view/view~View#event:render rendered}, but should be also fired by observers in case of\r\n\t * other actions which may change layout, for instance when image loads.\r\n\t *\r\n\t * @event layoutChanged\r\n\t */\r\n\r\n\t// @if CK_DEBUG_ENGINE // log( version ) {\r\n\t// @if CK_DEBUG_ENGINE //\tlogDocument( this, version );\r\n\t// @if CK_DEBUG_ENGINE // }\r\n}\r\n\r\nmix( Document, ObservableMixin );\r\n\r\n/**\r\n * Enum representing type of the change.\r\n *\r\n * Possible values:\r\n *\r\n * * `children` - for child list changes,\r\n * * `attributes` - for element attributes changes,\r\n * * `text` - for text nodes changes.\r\n *\r\n * @typedef {String} module:engine/view/document~ChangeType\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/view/documentfragment\r\n */\r\n\r\nimport Text from './text';\r\nimport TextProxy from './textproxy';\r\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\r\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\r\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\r\n\r\n/**\r\n * Document fragment.\r\n *\r\n * To create a new document fragment instance use the\r\n * {@link module:engine/view/upcastwriter~UpcastWriter#createDocumentFragment `UpcastWriter#createDocumentFragment()`}\r\n * method.\r\n */\r\nexport default class DocumentFragment {\r\n\t/**\r\n\t * Creates new DocumentFragment instance.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/view/document~Document} document The document to which this document fragment belongs.\r\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\r\n\t * A list of nodes to be inserted into the created document fragment.\r\n\t */\r\n\tconstructor( document, children ) {\r\n\t\t/**\r\n\t\t * The document to which this document fragment belongs.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/view/document~Document}\r\n\t\t */\r\n\t\tthis.document = document;\r\n\r\n\t\t/**\r\n\t\t * Array of child nodes.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @member {Array.<module:engine/view/element~Element>} module:engine/view/documentfragment~DocumentFragment#_children\r\n\t\t */\r\n\t\tthis._children = [];\r\n\r\n\t\tif ( children ) {\r\n\t\t\tthis._insertChild( 0, children );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Iterable interface.\r\n\t *\r\n\t * Iterates over nodes added to this document fragment.\r\n\t *\r\n\t * @returns {Iterable.<module:engine/view/node~Node>}\r\n\t */\r\n\t[ Symbol.iterator ]() {\r\n\t\treturn this._children[ Symbol.iterator ]();\r\n\t}\r\n\r\n\t/**\r\n\t * Number of child nodes in this document fragment.\r\n\t *\r\n\t * @readonly\r\n\t * @type {Number}\r\n\t */\r\n\tget childCount() {\r\n\t\treturn this._children.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Is `true` if there are no nodes inside this document fragment, `false` otherwise.\r\n\t *\r\n\t * @readonly\r\n\t * @type {Boolean}\r\n\t */\r\n\tget isEmpty() {\r\n\t\treturn this.childCount === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Artificial root of `DocumentFragment`. Returns itself. Added for compatibility reasons.\r\n\t *\r\n\t * @readonly\r\n\t * @type {module:engine/model/documentfragment~DocumentFragment}\r\n\t */\r\n\tget root() {\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Artificial parent of `DocumentFragment`. Returns `null`. Added for compatibility reasons.\r\n\t *\r\n\t * @readonly\r\n\t * @type {null}\r\n\t */\r\n\tget parent() {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this object is of the given type.\r\n\t *\r\n\t *\t\tdocFrag.is( 'documentFragment' ); // -> true\r\n\t *\t\tdocFrag.is( 'view:documentFragment' ); // -> true\r\n\t *\r\n\t *\t\tdocFrag.is( 'model:documentFragment' ); // -> false\r\n\t *\t\tdocFrag.is( 'element' ); // -> false\r\n\t *\t\tdocFrag.is( 'node' ); // -> false\r\n\t *\r\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\r\n\t *\r\n\t * @param {String} type\r\n\t * @returns {Boolean}\r\n\t */\r\n\tis( type ) {\r\n\t\treturn type == 'documentFragment' || type == 'view:documentFragment';\r\n\t}\r\n\r\n\t/**\r\n\t * {@link module:engine/view/documentfragment~DocumentFragment#_insertChild Insert} a child node or a list of child nodes at the end\r\n\t * and sets the parent of these nodes to this fragment.\r\n\t *\r\n\t * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\r\n\t * @returns {Number} Number of appended nodes.\r\n\t */\r\n\t_appendChild( items ) {\r\n\t\treturn this._insertChild( this.childCount, items );\r\n\t}\r\n\r\n\t/**\r\n\t * Gets child at the given index.\r\n\t *\r\n\t * @param {Number} index Index of child.\r\n\t * @returns {module:engine/view/node~Node} Child node.\r\n\t */\r\n\tgetChild( index ) {\r\n\t\treturn this._children[ index ];\r\n\t}\r\n\r\n\t/**\r\n\t * Gets index of the given child node. Returns `-1` if child node is not found.\r\n\t *\r\n\t * @param {module:engine/view/node~Node} node Child node.\r\n\t * @returns {Number} Index of the child node.\r\n\t */\r\n\tgetChildIndex( node ) {\r\n\t\treturn this._children.indexOf( node );\r\n\t}\r\n\r\n\t/**\r\n\t * Gets child nodes iterator.\r\n\t *\r\n\t * @returns {Iterable.<module:engine/view/node~Node>} Child nodes iterator.\r\n\t */\r\n\tgetChildren() {\r\n\t\treturn this._children[ Symbol.iterator ]();\r\n\t}\r\n\r\n\t/**\r\n\t * Inserts a child node or a list of child nodes on the given index and sets the parent of these nodes to\r\n\t * this fragment.\r\n\t *\r\n\t * @param {Number} index Position where nodes should be inserted.\r\n\t * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\r\n\t * @returns {Number} Number of inserted nodes.\r\n\t */\r\n\t_insertChild( index, items ) {\r\n\t\tthis._fireChange( 'children', this );\r\n\t\tlet count = 0;\r\n\r\n\t\tconst nodes = normalize( this.document, items );\r\n\r\n\t\tfor ( const node of nodes ) {\r\n\t\t\t// If node that is being added to this element is already inside another element, first remove it from the old parent.\r\n\t\t\tif ( node.parent !== null ) {\r\n\t\t\t\tnode._remove();\r\n\t\t\t}\r\n\r\n\t\t\tnode.parent = this;\r\n\r\n\t\t\tthis._children.splice( index, 0, node );\r\n\t\t\tindex++;\r\n\t\t\tcount++;\r\n\t\t}\r\n\r\n\t\treturn count;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes number of child nodes starting at the given index and set the parent of these nodes to `null`.\r\n\t *\r\n\t * @param {Number} index Number of the first node to remove.\r\n\t * @param {Number} [howMany=1] Number of nodes to remove.\r\n\t * @returns {Array.<module:engine/view/node~Node>} The array of removed nodes.\r\n\t */\r\n\t_removeChildren( index, howMany = 1 ) {\r\n\t\tthis._fireChange( 'children', this );\r\n\r\n\t\tfor ( let i = index; i < index + howMany; i++ ) {\r\n\t\t\tthis._children[ i ].parent = null;\r\n\t\t}\r\n\r\n\t\treturn this._children.splice( index, howMany );\r\n\t}\r\n\r\n\t/**\r\n\t * Fires `change` event with given type of the change.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/view/document~ChangeType} type Type of the change.\r\n\t * @param {module:engine/view/node~Node} node Changed node.\r\n\t * @fires module:engine/view/node~Node#change\r\n\t */\r\n\t_fireChange( type, node ) {\r\n\t\tthis.fire( 'change:' + type, node );\r\n\t}\r\n\r\n\t// @if CK_DEBUG_ENGINE // printTree() {\r\n\t// @if CK_DEBUG_ENGINE //\tlet string = 'ViewDocumentFragment: [';\r\n\r\n\t// @if CK_DEBUG_ENGINE //\tfor ( const child of this.getChildren() ) {\r\n\t// @if CK_DEBUG_ENGINE //\t\tif ( child.is( 'text' ) ) {\r\n\t// @if CK_DEBUG_ENGINE //\t\t\tstring += '\\n' + '\\t'.repeat( 1 ) + child.data;\r\n\t// @if CK_DEBUG_ENGINE //\t\t} else {\r\n\t// @if CK_DEBUG_ENGINE //\t\t\tstring += '\\n' + child.printTree( 1 );\r\n\t// @if CK_DEBUG_ENGINE //\t\t}\r\n\t// @if CK_DEBUG_ENGINE //\t}\r\n\r\n\t// @if CK_DEBUG_ENGINE //\tstring += '\\n]';\r\n\r\n\t// @if CK_DEBUG_ENGINE //\treturn string;\r\n\t// @if CK_DEBUG_ENGINE // }\r\n\r\n\t// @if CK_DEBUG_ENGINE // logTree() {\r\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( this.printTree() );\r\n\t// @if CK_DEBUG_ENGINE // }\r\n}\r\n\r\nmix( DocumentFragment, EmitterMixin );\r\n\r\n// Converts strings to Text and non-iterables to arrays.\r\n//\r\n// @param {String|module:engine/view/item~Item|Iterable.<String|module:engine/view/item~Item>}\r\n// @returns {Iterable.<module:engine/view/node~Node>}\r\nfunction normalize( document, nodes ) {\r\n\t// Separate condition because string is iterable.\r\n\tif ( typeof nodes == 'string' ) {\r\n\t\treturn [ new Text( document, nodes ) ];\r\n\t}\r\n\r\n\tif ( !isIterable( nodes ) ) {\r\n\t\tnodes = [ nodes ];\r\n\t}\r\n\r\n\t// Array.from to enable .map() on non-arrays.\r\n\treturn Array.from( nodes )\r\n\t\t.map( node => {\r\n\t\t\tif ( typeof node == 'string' ) {\r\n\t\t\t\treturn new Text( document, node );\r\n\t\t\t}\r\n\r\n\t\t\tif ( node instanceof TextProxy ) {\r\n\t\t\t\treturn new Text( document, node.data );\r\n\t\t\t}\r\n\r\n\t\t\treturn node;\r\n\t\t} );\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/view/documentselection\r\n */\r\n\r\nimport Selection from './selection';\r\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\r\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\r\n\r\n/**\r\n * Class representing the document selection in the view.\r\n *\r\n * Its instance is available in {@link module:engine/view/document~Document#selection `Document#selection`}.\r\n *\r\n * It is similar to {@link module:engine/view/selection~Selection} but\r\n * it has a read-only API and can be modified only by the writer available in\r\n * the {@link module:engine/view/view~View#change `View#change()`} block\r\n * (so via {@link module:engine/view/downcastwriter~DowncastWriter#setSelection `DowncastWriter#setSelection()`}).\r\n */\r\nexport default class DocumentSelection {\r\n\t/**\r\n\t * Creates new DocumentSelection instance.\r\n\t *\r\n\t * \t\t// Creates empty selection without ranges.\r\n\t *\t\tconst selection = new DocumentSelection();\r\n\t *\r\n\t *\t\t// Creates selection at the given range.\r\n\t *\t\tconst range = writer.createRange( start, end );\r\n\t *\t\tconst selection = new DocumentSelection( range );\r\n\t *\r\n\t *\t\t// Creates selection at the given ranges\r\n\t * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( start2, end2 ) ];\r\n\t *\t\tconst selection = new DocumentSelection( ranges );\r\n\t *\r\n\t *\t\t// Creates selection from the other selection.\r\n\t *\t\tconst otherSelection = writer.createSelection();\r\n\t *\t\tconst selection = new DocumentSelection( otherSelection );\r\n\t *\r\n\t * \t\t// Creates selection at the given position.\r\n\t *\t\tconst position = writer.createPositionAt( root, offset );\r\n\t *\t\tconst selection = new DocumentSelection( position );\r\n\t *\r\n\t *\t\t// Creates collapsed selection at the position of given item and offset.\r\n\t *\t\tconst paragraph = writer.createContainerElement( 'paragraph' );\r\n\t *\t\tconst selection = new DocumentSelection( paragraph, offset );\r\n\t *\r\n\t *\t\t// Creates a range inside an {@link module:engine/view/element~Element element} which starts before the\r\n\t *\t\t// first child of that element and ends after the last child of that element.\r\n\t *\t\tconst selection = new DocumentSelection( paragraph, 'in' );\r\n\t *\r\n\t *\t\t// Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends\r\n\t *\t\t// just after the item.\r\n\t *\t\tconst selection = new DocumentSelection( paragraph, 'on' );\r\n\t *\r\n\t * `Selection`'s constructor allow passing additional options (`backward`, `fake` and `label`) as the last argument.\r\n\t *\r\n\t *\t\t// Creates backward selection.\r\n\t *\t\tconst selection = new DocumentSelection( range, { backward: true } );\r\n\t *\r\n\t * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\r\n\t * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\r\n\t * represented in other way, for example by applying proper CSS class.\r\n\t *\r\n\t * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\r\n\t * (and be  properly handled by screen readers).\r\n\t *\r\n\t *\t\t// Creates fake selection with label.\r\n\t *\t\tconst selection = new DocumentSelection( range, { fake: true, label: 'foo' } );\r\n\t *\r\n\t * @param {module:engine/view/selection~Selectable} [selectable=null]\r\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Offset or place when selectable is an `Item`.\r\n\t * @param {Object} [options]\r\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\r\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\r\n\t * @param {String} [options.label] Label for the fake selection.\r\n\t */\r\n\tconstructor( selectable = null, placeOrOffset, options ) {\r\n\t\t/**\r\n\t\t * Selection is used internally (`DocumentSelection` is a proxy to that selection).\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {module:engine/view/selection~Selection}\r\n\t\t */\r\n\t\tthis._selection = new Selection();\r\n\r\n\t\t// Delegate change event to be fired on DocumentSelection instance.\r\n\t\tthis._selection.delegate( 'change' ).to( this );\r\n\r\n\t\t// Set selection data.\r\n\t\tthis._selection.setTo( selectable, placeOrOffset, options );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if selection instance is marked as `fake`.\r\n\t *\r\n\t * @see #_setTo\r\n\t * @returns {Boolean}\r\n\t */\r\n\tget isFake() {\r\n\t\treturn this._selection.isFake;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns fake selection label.\r\n\t *\r\n\t * @see #_setTo\r\n\t * @returns {String}\r\n\t */\r\n\tget fakeSelectionLabel() {\r\n\t\treturn this._selection.fakeSelectionLabel;\r\n\t}\r\n\r\n\t/**\r\n\t * Selection anchor. Anchor may be described as a position where the selection starts. Together with\r\n\t * {@link #focus focus} they define the direction of selection, which is important\r\n\t * when expanding/shrinking selection. Anchor is always the start or end of the most recent added range.\r\n\t * It may be a bit unintuitive when there are multiple ranges in selection.\r\n\t *\r\n\t * @see #focus\r\n\t * @type {module:engine/view/position~Position}\r\n\t */\r\n\tget anchor() {\r\n\t\treturn this._selection.anchor;\r\n\t}\r\n\r\n\t/**\r\n\t * Selection focus. Focus is a position where the selection ends.\r\n\t *\r\n\t * @see #anchor\r\n\t * @type {module:engine/view/position~Position}\r\n\t */\r\n\tget focus() {\r\n\t\treturn this._selection.focus;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns whether the selection is collapsed. Selection is collapsed when there is exactly one range which is\r\n\t * collapsed.\r\n\t *\r\n\t * @type {Boolean}\r\n\t */\r\n\tget isCollapsed() {\r\n\t\treturn this._selection.isCollapsed;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns number of ranges in selection.\r\n\t *\r\n\t * @type {Number}\r\n\t */\r\n\tget rangeCount() {\r\n\t\treturn this._selection.rangeCount;\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether the {@link #focus} precedes {@link #anchor}.\r\n\t *\r\n\t * @type {Boolean}\r\n\t */\r\n\tget isBackward() {\r\n\t\treturn this._selection.isBackward;\r\n\t}\r\n\r\n\t/**\r\n\t * {@link module:engine/view/editableelement~EditableElement EditableElement} instance that contains this selection, or `null`\r\n\t * if the selection is not inside an editable element.\r\n\t *\r\n\t * @type {module:engine/view/editableelement~EditableElement|null}\r\n\t */\r\n\tget editableElement() {\r\n\t\treturn this._selection.editableElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Used for the compatibility with the {@link module:engine/view/selection~Selection#isEqual} method.\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tget _ranges() {\r\n\t\treturn this._selection._ranges;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an iterable that contains copies of all ranges added to the selection.\r\n\t *\r\n\t * @returns {Iterable.<module:engine/view/range~Range>}\r\n\t */\r\n\t* getRanges() {\r\n\t\tyield* this._selection.getRanges();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns copy of the first range in the selection. First range is the one which\r\n\t * {@link module:engine/view/range~Range#start start} position {@link module:engine/view/position~Position#isBefore is before} start\r\n\t * position of all other ranges (not to confuse with the first range added to the selection).\r\n\t * Returns `null` if no ranges are added to selection.\r\n\t *\r\n\t * @returns {module:engine/view/range~Range|null}\r\n\t */\r\n\tgetFirstRange() {\r\n\t\treturn this._selection.getFirstRange();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns copy of the last range in the selection. Last range is the one which {@link module:engine/view/range~Range#end end}\r\n\t * position {@link module:engine/view/position~Position#isAfter is after} end position of all other ranges (not to confuse\r\n\t * with the last range added to the selection). Returns `null` if no ranges are added to selection.\r\n\t *\r\n\t * @returns {module:engine/view/range~Range|null}\r\n\t */\r\n\tgetLastRange() {\r\n\t\treturn this._selection.getLastRange();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns copy of the first position in the selection. First position is the position that\r\n\t * {@link module:engine/view/position~Position#isBefore is before} any other position in the selection ranges.\r\n\t * Returns `null` if no ranges are added to selection.\r\n\t *\r\n\t * @returns {module:engine/view/position~Position|null}\r\n\t */\r\n\tgetFirstPosition() {\r\n\t\treturn this._selection.getFirstPosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns copy of the last position in the selection. Last position is the position that\r\n\t * {@link module:engine/view/position~Position#isAfter is after} any other position in the selection ranges.\r\n\t * Returns `null` if no ranges are added to selection.\r\n\t *\r\n\t * @returns {module:engine/view/position~Position|null}\r\n\t */\r\n\tgetLastPosition() {\r\n\t\treturn this._selection.getLastPosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the selected element. {@link module:engine/view/element~Element Element} is considered as selected if there is only\r\n\t * one range in the selection, and that range contains exactly one element.\r\n\t * Returns `null` if there is no selected element.\r\n\t *\r\n\t * @returns {module:engine/view/element~Element|null}\r\n\t */\r\n\tgetSelectedElement() {\r\n\t\treturn this._selection.getSelectedElement();\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether, this selection is equal to given selection. Selections are equal if they have same directions,\r\n\t * same number of ranges and all ranges from one selection equal to a range from other selection.\r\n\t *\r\n\t * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} otherSelection\r\n\t * Selection to compare with.\r\n\t * @returns {Boolean} `true` if selections are equal, `false` otherwise.\r\n\t */\r\n\tisEqual( otherSelection ) {\r\n\t\treturn this._selection.isEqual( otherSelection );\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this selection is similar to given selection. Selections are similar if they have same directions, same\r\n\t * number of ranges, and all {@link module:engine/view/range~Range#getTrimmed trimmed} ranges from one selection are\r\n\t * equal to any trimmed range from other selection.\r\n\t *\r\n\t * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} otherSelection\r\n\t * Selection to compare with.\r\n\t * @returns {Boolean} `true` if selections are similar, `false` otherwise.\r\n\t */\r\n\tisSimilar( otherSelection ) {\r\n\t\treturn this._selection.isSimilar( otherSelection );\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this object is of the given type.\r\n\t *\r\n\t *\t\tdocSelection.is( 'selection' ); // -> true\r\n\t *\t\tdocSelection.is( 'documentSelection' ); // -> true\r\n\t *\t\tdocSelection.is( 'view:selection' ); // -> true\r\n\t *\t\tdocSelection.is( 'view:documentSelection' ); // -> true\r\n\t *\r\n\t *\t\tdocSelection.is( 'model:documentSelection' ); // -> false\r\n\t *\t\tdocSelection.is( 'element' ); // -> false\r\n\t *\t\tdocSelection.is( 'node' ); // -> false\r\n\t *\r\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\r\n\t *\r\n\t * @param {String} type\r\n\t * @returns {Boolean}\r\n\t */\r\n\tis( type ) {\r\n\t\treturn type == 'selection' ||\r\n\t\t\ttype == 'documentSelection' ||\r\n\t\t\ttype == 'view:selection' ||\r\n\t\t\ttype == 'view:documentSelection';\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this selection's ranges and direction to the specified location based on the given\r\n\t * {@link module:engine/view/selection~Selectable selectable}.\r\n\t *\r\n\t *\t\t// Sets selection to the given range.\r\n\t *\t\tconst range = writer.createRange( start, end );\r\n\t *\t\tdocumentSelection._setTo( range );\r\n\t *\r\n\t *\t\t// Sets selection to given ranges.\r\n\t * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( start2, end2 ) ];\r\n\t *\t\tdocumentSelection._setTo( range );\r\n\t *\r\n\t *\t\t// Sets selection to the other selection.\r\n\t *\t\tconst otherSelection = writer.createSelection();\r\n\t *\t\tdocumentSelection._setTo( otherSelection );\r\n\t *\r\n\t * \t\t// Sets collapsed selection at the given position.\r\n\t *\t\tconst position = writer.createPositionAt( root, offset );\r\n\t *\t\tdocumentSelection._setTo( position );\r\n\t *\r\n\t * \t\t// Sets collapsed selection at the position of given item and offset.\r\n\t *\t\tdocumentSelection._setTo( paragraph, offset );\r\n\t *\r\n\t * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\r\n\t * that element and ends after the last child of that element.\r\n\t *\r\n\t *\t\tdocumentSelection._setTo( paragraph, 'in' );\r\n\t *\r\n\t * Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends just after the item.\r\n\t *\r\n\t *\t\tdocumentSelection._setTo( paragraph, 'on' );\r\n\t *\r\n\t * \t\t// Clears selection. Removes all ranges.\r\n\t *\t\tdocumentSelection._setTo( null );\r\n\t *\r\n\t * `Selection#_setTo()` method allow passing additional options (`backward`, `fake` and `label`) as the last argument.\r\n\t *\r\n\t *\t\t// Sets selection as backward.\r\n\t *\t\tdocumentSelection._setTo( range, { backward: true } );\r\n\t *\r\n\t * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\r\n\t * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\r\n\t * represented in other way, for example by applying proper CSS class.\r\n\t *\r\n\t * Additionally fake's selection label can be provided. It will be used to des cribe fake selection in DOM\r\n\t * (and be  properly handled by screen readers).\r\n\t *\r\n\t *\t\t// Creates fake selection with label.\r\n\t *\t\tdocumentSelection._setTo( range, { fake: true, label: 'foo' } );\r\n\t *\r\n\t * @protected\r\n\t * @fires change\r\n\t * @param {module:engine/view/selection~Selectable} selectable\r\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\r\n\t * @param {Object} [options]\r\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\r\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\r\n\t * @param {String} [options.label] Label for the fake selection.\r\n\t */\r\n\t_setTo( selectable, placeOrOffset, options ) {\r\n\t\tthis._selection.setTo( selectable, placeOrOffset, options );\r\n\t}\r\n\r\n\t/**\r\n\t * Moves {@link #focus} to the specified location.\r\n\t *\r\n\t * The location can be specified in the same form as {@link module:engine/view/view~View#createPositionAt view.createPositionAt()}\r\n\t * parameters.\r\n\t *\r\n\t * @protected\r\n\t * @fires change\r\n\t * @param {module:engine/view/item~Item|module:engine/view/position~Position} itemOrPosition\r\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\r\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\r\n\t */\r\n\t_setFocus( itemOrPosition, offset ) {\r\n\t\tthis._selection.setFocus( itemOrPosition, offset );\r\n\t}\r\n\r\n\t/**\r\n\t * Fired whenever selection ranges are changed through {@link ~DocumentSelection Selection API}.\r\n\t *\r\n\t * @event change\r\n\t */\r\n}\r\n\r\nmix( DocumentSelection, EmitterMixin );\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/view/domconverter\r\n */\r\n\r\n/* globals document, Node, NodeFilter, Text */\r\n\r\nimport ViewText from './text';\r\nimport ViewElement from './element';\r\nimport ViewPosition from './position';\r\nimport ViewRange from './range';\r\nimport ViewSelection from './selection';\r\nimport ViewDocumentFragment from './documentfragment';\r\nimport ViewTreeWalker from './treewalker';\r\nimport { BR_FILLER, getDataWithoutFiller, INLINE_FILLER_LENGTH, isInlineFiller, NBSP_FILLER, startsWithFiller } from './filler';\r\n\r\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\r\nimport indexOf from '@ckeditor/ckeditor5-utils/src/dom/indexof';\r\nimport getAncestors from '@ckeditor/ckeditor5-utils/src/dom/getancestors';\r\nimport getCommonAncestor from '@ckeditor/ckeditor5-utils/src/dom/getcommonancestor';\r\nimport isText from '@ckeditor/ckeditor5-utils/src/dom/istext';\r\nimport { isElement } from 'lodash-es';\r\n\r\n// eslint-disable-next-line new-cap\r\nconst BR_FILLER_REF = BR_FILLER( document );\r\n\r\n/**\r\n * DomConverter is a set of tools to do transformations between DOM nodes and view nodes. It also handles\r\n * {@link module:engine/view/domconverter~DomConverter#bindElements binding} these nodes.\r\n *\r\n * The instance of DOMConverter is available in {@link module:engine/view/view~View#domConverter `editor.editing.view.domConverter`}.\r\n *\r\n * DomConverter does not check which nodes should be rendered (use {@link module:engine/view/renderer~Renderer}), does not keep a\r\n * state of a tree nor keeps synchronization between tree view and DOM tree (use {@link module:engine/view/document~Document}).\r\n *\r\n * DomConverter keeps DOM elements to View element bindings, so when the converter will be destroyed, the binding will\r\n * be lost. Two converters will keep separate binding maps, so one tree view can be bound with two DOM trees.\r\n */\r\nexport default class DomConverter {\r\n\t/**\r\n\t * Creates DOM converter.\r\n\t *\r\n\t * @param {module:engine/view/document~Document} document The view document instance.\r\n\t * @param {Object} options Object with configuration options.\r\n\t * @param {module:engine/view/filler~BlockFillerMode} [options.blockFillerMode='br'] The type of the block filler to use.\r\n\t */\r\n\tconstructor( document, options = {} ) {\r\n\t\t/**\r\n\t\t * @readonly\r\n\t\t * @type {module:engine/view/document~Document}\r\n\t\t */\r\n\t\tthis.document = document;\r\n\r\n\t\t/**\r\n\t\t * The mode of a block filler used by DOM converter.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {'br'|'nbsp'} module:engine/view/domconverter~DomConverter#blockFillerMode\r\n\t\t */\r\n\t\tthis.blockFillerMode = options.blockFillerMode || 'br';\r\n\r\n\t\t/**\r\n\t\t * Elements which are considered pre-formatted elements.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Array.<String>} module:engine/view/domconverter~DomConverter#preElements\r\n\t\t */\r\n\t\tthis.preElements = [ 'pre' ];\r\n\r\n\t\t/**\r\n\t\t * Elements which are considered block elements (and hence should be filled with a\r\n\t\t * {@link #isBlockFiller block filler}).\r\n\t\t *\r\n\t\t * Whether an element is considered a block element also affects handling of trailing whitespaces.\r\n\t\t *\r\n\t\t * You can extend this array if you introduce support for block elements which are not yet recognized here.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Array.<String>} module:engine/view/domconverter~DomConverter#blockElements\r\n\t\t */\r\n\t\tthis.blockElements = [ 'p', 'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'li', 'dd', 'dt', 'figcaption' ];\r\n\r\n\t\t/**\r\n\t\t * Block {@link module:engine/view/filler filler} creator, which is used to create all block fillers during the\r\n\t\t * view to DOM conversion and to recognize block fillers during the DOM to view conversion.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @private\r\n\t\t * @member {Function} module:engine/view/domconverter~DomConverter#_blockFiller\r\n\t\t */\r\n\t\tthis._blockFiller = this.blockFillerMode == 'br' ? BR_FILLER : NBSP_FILLER;\r\n\r\n\t\t/**\r\n\t\t * DOM to View mapping.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {WeakMap} module:engine/view/domconverter~DomConverter#_domToViewMapping\r\n\t\t */\r\n\t\tthis._domToViewMapping = new WeakMap();\r\n\r\n\t\t/**\r\n\t\t * View to DOM mapping.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {WeakMap} module:engine/view/domconverter~DomConverter#_viewToDomMapping\r\n\t\t */\r\n\t\tthis._viewToDomMapping = new WeakMap();\r\n\r\n\t\t/**\r\n\t\t * Holds mapping between fake selection containers and corresponding view selections.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {WeakMap} module:engine/view/domconverter~DomConverter#_fakeSelectionMapping\r\n\t\t */\r\n\t\tthis._fakeSelectionMapping = new WeakMap();\r\n\t}\r\n\r\n\t/**\r\n\t * Binds given DOM element that represents fake selection to a **position** of a\r\n\t * {@link module:engine/view/documentselection~DocumentSelection document selection}.\r\n\t * Document selection copy is stored and can be retrieved by\r\n\t * {@link module:engine/view/domconverter~DomConverter#fakeSelectionToView} method.\r\n\t *\r\n\t * @param {HTMLElement} domElement\r\n\t * @param {module:engine/view/documentselection~DocumentSelection} viewDocumentSelection\r\n\t */\r\n\tbindFakeSelection( domElement, viewDocumentSelection ) {\r\n\t\tthis._fakeSelectionMapping.set( domElement, new ViewSelection( viewDocumentSelection ) );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns {@link module:engine/view/selection~Selection view selection} instance corresponding to\r\n\t * given DOM element that represents fake selection. Returns `undefined` if binding to given DOM element does not exists.\r\n\t *\r\n\t * @param {HTMLElement} domElement\r\n\t * @returns {module:engine/view/selection~Selection|undefined}\r\n\t */\r\n\tfakeSelectionToView( domElement ) {\r\n\t\treturn this._fakeSelectionMapping.get( domElement );\r\n\t}\r\n\r\n\t/**\r\n\t * Binds DOM and View elements, so it will be possible to get corresponding elements using\r\n\t * {@link module:engine/view/domconverter~DomConverter#mapDomToView} and\r\n\t * {@link module:engine/view/domconverter~DomConverter#mapViewToDom}.\r\n\t *\r\n\t * @param {HTMLElement} domElement DOM element to bind.\r\n\t * @param {module:engine/view/element~Element} viewElement View element to bind.\r\n\t */\r\n\tbindElements( domElement, viewElement ) {\r\n\t\tthis._domToViewMapping.set( domElement, viewElement );\r\n\t\tthis._viewToDomMapping.set( viewElement, domElement );\r\n\t}\r\n\r\n\t/**\r\n\t * Unbinds given `domElement` from the view element it was bound to. Unbinding is deep, meaning that all children of\r\n\t * `domElement` will be unbound too.\r\n\t *\r\n\t * @param {HTMLElement} domElement DOM element to unbind.\r\n\t */\r\n\tunbindDomElement( domElement ) {\r\n\t\tconst viewElement = this._domToViewMapping.get( domElement );\r\n\r\n\t\tif ( viewElement ) {\r\n\t\t\tthis._domToViewMapping.delete( domElement );\r\n\t\t\tthis._viewToDomMapping.delete( viewElement );\r\n\r\n\t\t\t// Use Array.from because of MS Edge (#923).\r\n\t\t\tfor ( const child of Array.from( domElement.childNodes ) ) {\r\n\t\t\t\tthis.unbindDomElement( child );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Binds DOM and View document fragments, so it will be possible to get corresponding document fragments using\r\n\t * {@link module:engine/view/domconverter~DomConverter#mapDomToView} and\r\n\t * {@link module:engine/view/domconverter~DomConverter#mapViewToDom}.\r\n\t *\r\n\t * @param {DocumentFragment} domFragment DOM document fragment to bind.\r\n\t * @param {module:engine/view/documentfragment~DocumentFragment} viewFragment View document fragment to bind.\r\n\t */\r\n\tbindDocumentFragments( domFragment, viewFragment ) {\r\n\t\tthis._domToViewMapping.set( domFragment, viewFragment );\r\n\t\tthis._viewToDomMapping.set( viewFragment, domFragment );\r\n\t}\r\n\r\n\t/**\r\n\t * Converts view to DOM. For all text nodes, not bound elements and document fragments new items will\r\n\t * be created. For bound elements and document fragments function will return corresponding items.\r\n\t *\r\n\t * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} viewNode\r\n\t * View node or document fragment to transform.\r\n\t * @param {Document} domDocument Document which will be used to create DOM nodes.\r\n\t * @param {Object} [options] Conversion options.\r\n\t * @param {Boolean} [options.bind=false] Determines whether new elements will be bound.\r\n\t * @param {Boolean} [options.withChildren=true] If `true`, node's and document fragment's children will be converted too.\r\n\t * @returns {Node|DocumentFragment} Converted node or DocumentFragment.\r\n\t */\r\n\tviewToDom( viewNode, domDocument, options = {} ) {\r\n\t\tif ( viewNode.is( 'text' ) ) {\r\n\t\t\tconst textData = this._processDataFromViewText( viewNode );\r\n\r\n\t\t\treturn domDocument.createTextNode( textData );\r\n\t\t} else {\r\n\t\t\tif ( this.mapViewToDom( viewNode ) ) {\r\n\t\t\t\treturn this.mapViewToDom( viewNode );\r\n\t\t\t}\r\n\r\n\t\t\tlet domElement;\r\n\r\n\t\t\tif ( viewNode.is( 'documentFragment' ) ) {\r\n\t\t\t\t// Create DOM document fragment.\r\n\t\t\t\tdomElement = domDocument.createDocumentFragment();\r\n\r\n\t\t\t\tif ( options.bind ) {\r\n\t\t\t\t\tthis.bindDocumentFragments( domElement, viewNode );\r\n\t\t\t\t}\r\n\t\t\t} else if ( viewNode.is( 'uiElement' ) ) {\r\n\t\t\t\t// UIElement has its own render() method (see #799).\r\n\t\t\t\tdomElement = viewNode.render( domDocument );\r\n\r\n\t\t\t\tif ( options.bind ) {\r\n\t\t\t\t\tthis.bindElements( domElement, viewNode );\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn domElement;\r\n\t\t\t} else {\r\n\t\t\t\t// Create DOM element.\r\n\t\t\t\tif ( viewNode.hasAttribute( 'xmlns' ) ) {\r\n\t\t\t\t\tdomElement = domDocument.createElementNS( viewNode.getAttribute( 'xmlns' ), viewNode.name );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdomElement = domDocument.createElement( viewNode.name );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( options.bind ) {\r\n\t\t\t\t\tthis.bindElements( domElement, viewNode );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Copy element's attributes.\r\n\t\t\t\tfor ( const key of viewNode.getAttributeKeys() ) {\r\n\t\t\t\t\tdomElement.setAttribute( key, viewNode.getAttribute( key ) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( options.withChildren || options.withChildren === undefined ) {\r\n\t\t\t\tfor ( const child of this.viewChildrenToDom( viewNode, domDocument, options ) ) {\r\n\t\t\t\t\tdomElement.appendChild( child );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn domElement;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts children of the view element to DOM using the\r\n\t * {@link module:engine/view/domconverter~DomConverter#viewToDom} method.\r\n\t * Additionally, this method adds block {@link module:engine/view/filler filler} to the list of children, if needed.\r\n\t *\r\n\t * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} viewElement Parent view element.\r\n\t * @param {Document} domDocument Document which will be used to create DOM nodes.\r\n\t * @param {Object} options See {@link module:engine/view/domconverter~DomConverter#viewToDom} options parameter.\r\n\t * @returns {Iterable.<Node>} DOM nodes.\r\n\t */\r\n\t* viewChildrenToDom( viewElement, domDocument, options = {} ) {\r\n\t\tconst fillerPositionOffset = viewElement.getFillerOffset && viewElement.getFillerOffset();\r\n\t\tlet offset = 0;\r\n\r\n\t\tfor ( const childView of viewElement.getChildren() ) {\r\n\t\t\tif ( fillerPositionOffset === offset ) {\r\n\t\t\t\tyield this._blockFiller( domDocument );\r\n\t\t\t}\r\n\r\n\t\t\tyield this.viewToDom( childView, domDocument, options );\r\n\r\n\t\t\toffset++;\r\n\t\t}\r\n\r\n\t\tif ( fillerPositionOffset === offset ) {\r\n\t\t\tyield this._blockFiller( domDocument );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts view {@link module:engine/view/range~Range} to DOM range.\r\n\t * Inline and block {@link module:engine/view/filler fillers} are handled during the conversion.\r\n\t *\r\n\t * @param {module:engine/view/range~Range} viewRange View range.\r\n\t * @returns {Range} DOM range.\r\n\t */\r\n\tviewRangeToDom( viewRange ) {\r\n\t\tconst domStart = this.viewPositionToDom( viewRange.start );\r\n\t\tconst domEnd = this.viewPositionToDom( viewRange.end );\r\n\r\n\t\tconst domRange = document.createRange();\r\n\t\tdomRange.setStart( domStart.parent, domStart.offset );\r\n\t\tdomRange.setEnd( domEnd.parent, domEnd.offset );\r\n\r\n\t\treturn domRange;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts view {@link module:engine/view/position~Position} to DOM parent and offset.\r\n\t *\r\n\t * Inline and block {@link module:engine/view/filler fillers} are handled during the conversion.\r\n\t * If the converted position is directly before inline filler it is moved inside the filler.\r\n\t *\r\n\t * @param {module:engine/view/position~Position} viewPosition View position.\r\n\t * @returns {Object|null} position DOM position or `null` if view position could not be converted to DOM.\r\n\t * @returns {Node} position.parent DOM position parent.\r\n\t * @returns {Number} position.offset DOM position offset.\r\n\t */\r\n\tviewPositionToDom( viewPosition ) {\r\n\t\tconst viewParent = viewPosition.parent;\r\n\r\n\t\tif ( viewParent.is( 'text' ) ) {\r\n\t\t\tconst domParent = this.findCorrespondingDomText( viewParent );\r\n\r\n\t\t\tif ( !domParent ) {\r\n\t\t\t\t// Position is in a view text node that has not been rendered to DOM yet.\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tlet offset = viewPosition.offset;\r\n\r\n\t\t\tif ( startsWithFiller( domParent ) ) {\r\n\t\t\t\toffset += INLINE_FILLER_LENGTH;\r\n\t\t\t}\r\n\r\n\t\t\treturn { parent: domParent, offset };\r\n\t\t} else {\r\n\t\t\t// viewParent is instance of ViewElement.\r\n\t\t\tlet domParent, domBefore, domAfter;\r\n\r\n\t\t\tif ( viewPosition.offset === 0 ) {\r\n\t\t\t\tdomParent = this.mapViewToDom( viewParent );\r\n\r\n\t\t\t\tif ( !domParent ) {\r\n\t\t\t\t\t// Position is in a view element that has not been rendered to DOM yet.\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdomAfter = domParent.childNodes[ 0 ];\r\n\t\t\t} else {\r\n\t\t\t\tconst nodeBefore = viewPosition.nodeBefore;\r\n\r\n\t\t\t\tdomBefore = nodeBefore.is( 'text' ) ?\r\n\t\t\t\t\tthis.findCorrespondingDomText( nodeBefore ) :\r\n\t\t\t\t\tthis.mapViewToDom( viewPosition.nodeBefore );\r\n\r\n\t\t\t\tif ( !domBefore ) {\r\n\t\t\t\t\t// Position is after a view element that has not been rendered to DOM yet.\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdomParent = domBefore.parentNode;\r\n\t\t\t\tdomAfter = domBefore.nextSibling;\r\n\t\t\t}\r\n\r\n\t\t\t// If there is an inline filler at position return position inside the filler. We should never return\r\n\t\t\t// the position before the inline filler.\r\n\t\t\tif ( isText( domAfter ) && startsWithFiller( domAfter ) ) {\r\n\t\t\t\treturn { parent: domAfter, offset: INLINE_FILLER_LENGTH };\r\n\t\t\t}\r\n\r\n\t\t\tconst offset = domBefore ? indexOf( domBefore ) + 1 : 0;\r\n\r\n\t\t\treturn { parent: domParent, offset };\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts DOM to view. For all text nodes, not bound elements and document fragments new items will\r\n\t * be created. For bound elements and document fragments function will return corresponding items. For\r\n\t * {@link module:engine/view/filler fillers} `null` will be returned.\r\n\t * For all DOM elements rendered by {@link module:engine/view/uielement~UIElement} that UIElement will be returned.\r\n\t *\r\n\t * @param {Node|DocumentFragment} domNode DOM node or document fragment to transform.\r\n\t * @param {Object} [options] Conversion options.\r\n\t * @param {Boolean} [options.bind=false] Determines whether new elements will be bound.\r\n\t * @param {Boolean} [options.withChildren=true] If `true`, node's and document fragment's children will be converted too.\r\n\t * @param {Boolean} [options.keepOriginalCase=false] If `false`, node's tag name will be converter to lower case.\r\n\t * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null} Converted node or document fragment\r\n\t * or `null` if DOM node is a {@link module:engine/view/filler filler} or the given node is an empty text node.\r\n\t */\r\n\tdomToView( domNode, options = {} ) {\r\n\t\tif ( this.isBlockFiller( domNode, this.blockFillerMode ) ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\t// When node is inside UIElement return that UIElement as it's view representation.\r\n\t\tconst uiElement = this.getParentUIElement( domNode, this._domToViewMapping );\r\n\r\n\t\tif ( uiElement ) {\r\n\t\t\treturn uiElement;\r\n\t\t}\r\n\r\n\t\tif ( isText( domNode ) ) {\r\n\t\t\tif ( isInlineFiller( domNode ) ) {\r\n\t\t\t\treturn null;\r\n\t\t\t} else {\r\n\t\t\t\tconst textData = this._processDataFromDomText( domNode );\r\n\r\n\t\t\t\treturn textData === '' ? null : new ViewText( this.document, textData );\r\n\t\t\t}\r\n\t\t} else if ( this.isComment( domNode ) ) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\tif ( this.mapDomToView( domNode ) ) {\r\n\t\t\t\treturn this.mapDomToView( domNode );\r\n\t\t\t}\r\n\r\n\t\t\tlet viewElement;\r\n\r\n\t\t\tif ( this.isDocumentFragment( domNode ) ) {\r\n\t\t\t\t// Create view document fragment.\r\n\t\t\t\tviewElement = new ViewDocumentFragment( this.document );\r\n\r\n\t\t\t\tif ( options.bind ) {\r\n\t\t\t\t\tthis.bindDocumentFragments( domNode, viewElement );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Create view element.\r\n\t\t\t\tconst viewName = options.keepOriginalCase ? domNode.tagName : domNode.tagName.toLowerCase();\r\n\t\t\t\tviewElement = new ViewElement( this.document, viewName );\r\n\r\n\t\t\t\tif ( options.bind ) {\r\n\t\t\t\t\tthis.bindElements( domNode, viewElement );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Copy element's attributes.\r\n\t\t\t\tconst attrs = domNode.attributes;\r\n\r\n\t\t\t\tfor ( let i = attrs.length - 1; i >= 0; i-- ) {\r\n\t\t\t\t\tviewElement._setAttribute( attrs[ i ].name, attrs[ i ].value );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( options.withChildren || options.withChildren === undefined ) {\r\n\t\t\t\tfor ( const child of this.domChildrenToView( domNode, options ) ) {\r\n\t\t\t\t\tviewElement._appendChild( child );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn viewElement;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts children of the DOM element to view nodes using\r\n\t * the {@link module:engine/view/domconverter~DomConverter#domToView} method.\r\n\t * Additionally this method omits block {@link module:engine/view/filler filler}, if it exists in the DOM parent.\r\n\t *\r\n\t * @param {HTMLElement} domElement Parent DOM element.\r\n\t * @param {Object} options See {@link module:engine/view/domconverter~DomConverter#domToView} options parameter.\r\n\t * @returns {Iterable.<module:engine/view/node~Node>} View nodes.\r\n\t */\r\n\t* domChildrenToView( domElement, options = {} ) {\r\n\t\tfor ( let i = 0; i < domElement.childNodes.length; i++ ) {\r\n\t\t\tconst domChild = domElement.childNodes[ i ];\r\n\t\t\tconst viewChild = this.domToView( domChild, options );\r\n\r\n\t\t\tif ( viewChild !== null ) {\r\n\t\t\t\tyield viewChild;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts DOM selection to view {@link module:engine/view/selection~Selection}.\r\n\t * Ranges which cannot be converted will be omitted.\r\n\t *\r\n\t * @param {Selection} domSelection DOM selection.\r\n\t * @returns {module:engine/view/selection~Selection} View selection.\r\n\t */\r\n\tdomSelectionToView( domSelection ) {\r\n\t\t// DOM selection might be placed in fake selection container.\r\n\t\t// If container contains fake selection - return corresponding view selection.\r\n\t\tif ( domSelection.rangeCount === 1 ) {\r\n\t\t\tlet container = domSelection.getRangeAt( 0 ).startContainer;\r\n\r\n\t\t\t// The DOM selection might be moved to the text node inside the fake selection container.\r\n\t\t\tif ( isText( container ) ) {\r\n\t\t\t\tcontainer = container.parentNode;\r\n\t\t\t}\r\n\r\n\t\t\tconst viewSelection = this.fakeSelectionToView( container );\r\n\r\n\t\t\tif ( viewSelection ) {\r\n\t\t\t\treturn viewSelection;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst isBackward = this.isDomSelectionBackward( domSelection );\r\n\r\n\t\tconst viewRanges = [];\r\n\r\n\t\tfor ( let i = 0; i < domSelection.rangeCount; i++ ) {\r\n\t\t\t// DOM Range have correct start and end, no matter what is the DOM Selection direction. So we don't have to fix anything.\r\n\t\t\tconst domRange = domSelection.getRangeAt( i );\r\n\t\t\tconst viewRange = this.domRangeToView( domRange );\r\n\r\n\t\t\tif ( viewRange ) {\r\n\t\t\t\tviewRanges.push( viewRange );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn new ViewSelection( viewRanges, { backward: isBackward } );\r\n\t}\r\n\r\n\t/**\r\n\t * Converts DOM Range to view {@link module:engine/view/range~Range}.\r\n\t * If the start or end position can not be converted `null` is returned.\r\n\t *\r\n\t * @param {Range} domRange DOM range.\r\n\t * @returns {module:engine/view/range~Range|null} View range.\r\n\t */\r\n\tdomRangeToView( domRange ) {\r\n\t\tconst viewStart = this.domPositionToView( domRange.startContainer, domRange.startOffset );\r\n\t\tconst viewEnd = this.domPositionToView( domRange.endContainer, domRange.endOffset );\r\n\r\n\t\tif ( viewStart && viewEnd ) {\r\n\t\t\treturn new ViewRange( viewStart, viewEnd );\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts DOM parent and offset to view {@link module:engine/view/position~Position}.\r\n\t *\r\n\t * If the position is inside a {@link module:engine/view/filler filler} which has no corresponding view node,\r\n\t * position of the filler will be converted and returned.\r\n\t *\r\n\t * If the position is inside DOM element rendered by {@link module:engine/view/uielement~UIElement}\r\n\t * that position will be converted to view position before that UIElement.\r\n\t *\r\n\t * If structures are too different and it is not possible to find corresponding position then `null` will be returned.\r\n\t *\r\n\t * @param {Node} domParent DOM position parent.\r\n\t * @param {Number} domOffset DOM position offset.\r\n\t * @returns {module:engine/view/position~Position} viewPosition View position.\r\n\t */\r\n\tdomPositionToView( domParent, domOffset ) {\r\n\t\tif ( this.isBlockFiller( domParent, this.blockFillerMode ) ) {\r\n\t\t\treturn this.domPositionToView( domParent.parentNode, indexOf( domParent ) );\r\n\t\t}\r\n\r\n\t\t// If position is somewhere inside UIElement - return position before that element.\r\n\t\tconst viewElement = this.mapDomToView( domParent );\r\n\r\n\t\tif ( viewElement && viewElement.is( 'uiElement' ) ) {\r\n\t\t\treturn ViewPosition._createBefore( viewElement );\r\n\t\t}\r\n\r\n\t\tif ( isText( domParent ) ) {\r\n\t\t\tif ( isInlineFiller( domParent ) ) {\r\n\t\t\t\treturn this.domPositionToView( domParent.parentNode, indexOf( domParent ) );\r\n\t\t\t}\r\n\r\n\t\t\tconst viewParent = this.findCorrespondingViewText( domParent );\r\n\t\t\tlet offset = domOffset;\r\n\r\n\t\t\tif ( !viewParent ) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tif ( startsWithFiller( domParent ) ) {\r\n\t\t\t\toffset -= INLINE_FILLER_LENGTH;\r\n\t\t\t\toffset = offset < 0 ? 0 : offset;\r\n\t\t\t}\r\n\r\n\t\t\treturn new ViewPosition( viewParent, offset );\r\n\t\t}\r\n\t\t// domParent instanceof HTMLElement.\r\n\t\telse {\r\n\t\t\tif ( domOffset === 0 ) {\r\n\t\t\t\tconst viewParent = this.mapDomToView( domParent );\r\n\r\n\t\t\t\tif ( viewParent ) {\r\n\t\t\t\t\treturn new ViewPosition( viewParent, 0 );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconst domBefore = domParent.childNodes[ domOffset - 1 ];\r\n\t\t\t\tconst viewBefore = isText( domBefore ) ?\r\n\t\t\t\t\tthis.findCorrespondingViewText( domBefore ) :\r\n\t\t\t\t\tthis.mapDomToView( domBefore );\r\n\r\n\t\t\t\t// TODO #663\r\n\t\t\t\tif ( viewBefore && viewBefore.parent ) {\r\n\t\t\t\t\treturn new ViewPosition( viewBefore.parent, viewBefore.index + 1 );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns corresponding view {@link module:engine/view/element~Element Element} or\r\n\t * {@link module:engine/view/documentfragment~DocumentFragment} for provided DOM element or\r\n\t * document fragment. If there is no view item {@link module:engine/view/domconverter~DomConverter#bindElements bound}\r\n\t * to the given DOM - `undefined` is returned.\r\n\t * For all DOM elements rendered by {@link module:engine/view/uielement~UIElement} that UIElement will be returned.\r\n\t *\r\n\t * @param {DocumentFragment|Element} domElementOrDocumentFragment DOM element or document fragment.\r\n\t * @returns {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|undefined}\r\n\t * Corresponding view element, document fragment or `undefined` if no element was bound.\r\n\t */\r\n\tmapDomToView( domElementOrDocumentFragment ) {\r\n\t\treturn this.getParentUIElement( domElementOrDocumentFragment ) || this._domToViewMapping.get( domElementOrDocumentFragment );\r\n\t}\r\n\r\n\t/**\r\n\t * Finds corresponding text node. Text nodes are not {@link module:engine/view/domconverter~DomConverter#bindElements bound},\r\n\t * corresponding text node is returned based on the sibling or parent.\r\n\t *\r\n\t * If the directly previous sibling is a {@link module:engine/view/domconverter~DomConverter#bindElements bound} element, it is used\r\n\t * to find the corresponding text node.\r\n\t *\r\n\t * If this is a first child in the parent and the parent is a {@link module:engine/view/domconverter~DomConverter#bindElements bound}\r\n\t * element, it is used to find the corresponding text node.\r\n\t *\r\n\t * For all text nodes rendered by {@link module:engine/view/uielement~UIElement} that UIElement will be returned.\r\n\t *\r\n\t * Otherwise `null` is returned.\r\n\t *\r\n\t * Note that for the block or inline {@link module:engine/view/filler filler} this method returns `null`.\r\n\t *\r\n\t * @param {Text} domText DOM text node.\r\n\t * @returns {module:engine/view/text~Text|null} Corresponding view text node or `null`, if it was not possible to find a\r\n\t * corresponding node.\r\n\t */\r\n\tfindCorrespondingViewText( domText ) {\r\n\t\tif ( isInlineFiller( domText ) ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\t// If DOM text was rendered by UIElement - return that element.\r\n\t\tconst uiElement = this.getParentUIElement( domText );\r\n\r\n\t\tif ( uiElement ) {\r\n\t\t\treturn uiElement;\r\n\t\t}\r\n\r\n\t\tconst previousSibling = domText.previousSibling;\r\n\r\n\t\t// Try to use previous sibling to find the corresponding text node.\r\n\t\tif ( previousSibling ) {\r\n\t\t\tif ( !( this.isElement( previousSibling ) ) ) {\r\n\t\t\t\t// The previous is text or comment.\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tconst viewElement = this.mapDomToView( previousSibling );\r\n\r\n\t\t\tif ( viewElement ) {\r\n\t\t\t\tconst nextSibling = viewElement.nextSibling;\r\n\r\n\t\t\t\t// It might be filler which has no corresponding view node.\r\n\t\t\t\tif ( nextSibling instanceof ViewText ) {\r\n\t\t\t\t\treturn viewElement.nextSibling;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Try to use parent to find the corresponding text node.\r\n\t\telse {\r\n\t\t\tconst viewElement = this.mapDomToView( domText.parentNode );\r\n\r\n\t\t\tif ( viewElement ) {\r\n\t\t\t\tconst firstChild = viewElement.getChild( 0 );\r\n\r\n\t\t\t\t// It might be filler which has no corresponding view node.\r\n\t\t\t\tif ( firstChild instanceof ViewText ) {\r\n\t\t\t\t\treturn firstChild;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns corresponding DOM item for provided {@link module:engine/view/element~Element Element} or\r\n\t * {@link module:engine/view/documentfragment~DocumentFragment DocumentFragment}.\r\n\t * To find a corresponding text for {@link module:engine/view/text~Text view Text instance}\r\n\t * use {@link #findCorrespondingDomText}.\r\n\t *\r\n\t * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} viewNode\r\n\t * View element or document fragment.\r\n\t * @returns {Node|DocumentFragment|undefined} Corresponding DOM node or document fragment.\r\n\t */\r\n\tmapViewToDom( documentFragmentOrElement ) {\r\n\t\treturn this._viewToDomMapping.get( documentFragmentOrElement );\r\n\t}\r\n\r\n\t/**\r\n\t * Finds corresponding text node. Text nodes are not {@link module:engine/view/domconverter~DomConverter#bindElements bound},\r\n\t * corresponding text node is returned based on the sibling or parent.\r\n\t *\r\n\t * If the directly previous sibling is a {@link module:engine/view/domconverter~DomConverter#bindElements bound} element, it is used\r\n\t * to find the corresponding text node.\r\n\t *\r\n\t * If this is a first child in the parent and the parent is a {@link module:engine/view/domconverter~DomConverter#bindElements bound}\r\n\t * element, it is used to find the corresponding text node.\r\n\t *\r\n\t * Otherwise `null` is returned.\r\n\t *\r\n\t * @param {module:engine/view/text~Text} viewText View text node.\r\n\t * @returns {Text|null} Corresponding DOM text node or `null`, if it was not possible to find a corresponding node.\r\n\t */\r\n\tfindCorrespondingDomText( viewText ) {\r\n\t\tconst previousSibling = viewText.previousSibling;\r\n\r\n\t\t// Try to use previous sibling to find the corresponding text node.\r\n\t\tif ( previousSibling && this.mapViewToDom( previousSibling ) ) {\r\n\t\t\treturn this.mapViewToDom( previousSibling ).nextSibling;\r\n\t\t}\r\n\r\n\t\t// If this is a first node, try to use parent to find the corresponding text node.\r\n\t\tif ( !previousSibling && viewText.parent && this.mapViewToDom( viewText.parent ) ) {\r\n\t\t\treturn this.mapViewToDom( viewText.parent ).childNodes[ 0 ];\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Focuses DOM editable that is corresponding to provided {@link module:engine/view/editableelement~EditableElement}.\r\n\t *\r\n\t * @param {module:engine/view/editableelement~EditableElement} viewEditable\r\n\t */\r\n\tfocus( viewEditable ) {\r\n\t\tconst domEditable = this.mapViewToDom( viewEditable );\r\n\r\n\t\tif ( domEditable && domEditable.ownerDocument.activeElement !== domEditable ) {\r\n\t\t\t// Save the scrollX and scrollY positions before the focus.\r\n\t\t\tconst { scrollX, scrollY } = global.window;\r\n\t\t\tconst scrollPositions = [];\r\n\r\n\t\t\t// Save all scrollLeft and scrollTop values starting from domEditable up to\r\n\t\t\t// document#documentElement.\r\n\t\t\tforEachDomNodeAncestor( domEditable, node => {\r\n\t\t\t\tconst { scrollLeft, scrollTop } = node;\r\n\r\n\t\t\t\tscrollPositions.push( [ scrollLeft, scrollTop ] );\r\n\t\t\t} );\r\n\r\n\t\t\tdomEditable.focus();\r\n\r\n\t\t\t// Restore scrollLeft and scrollTop values starting from domEditable up to\r\n\t\t\t// document#documentElement.\r\n\t\t\t// https://github.com/ckeditor/ckeditor5-engine/issues/951\r\n\t\t\t// https://github.com/ckeditor/ckeditor5-engine/issues/957\r\n\t\t\tforEachDomNodeAncestor( domEditable, node => {\r\n\t\t\t\tconst [ scrollLeft, scrollTop ] = scrollPositions.shift();\r\n\r\n\t\t\t\tnode.scrollLeft = scrollLeft;\r\n\t\t\t\tnode.scrollTop = scrollTop;\r\n\t\t\t} );\r\n\r\n\t\t\t// Restore the scrollX and scrollY positions after the focus.\r\n\t\t\t// https://github.com/ckeditor/ckeditor5-engine/issues/951\r\n\t\t\tglobal.window.scrollTo( scrollX, scrollY );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` when `node.nodeType` equals `Node.ELEMENT_NODE`.\r\n\t *\r\n\t * @param {Node} node Node to check.\r\n\t * @returns {Boolean}\r\n\t */\r\n\tisElement( node ) {\r\n\t\treturn node && node.nodeType == Node.ELEMENT_NODE;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` when `node.nodeType` equals `Node.DOCUMENT_FRAGMENT_NODE`.\r\n\t *\r\n\t * @param {Node} node Node to check.\r\n\t * @returns {Boolean}\r\n\t */\r\n\tisDocumentFragment( node ) {\r\n\t\treturn node && node.nodeType == Node.DOCUMENT_FRAGMENT_NODE;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` when `node.nodeType` equals `Node.COMMENT_NODE`.\r\n\t *\r\n\t * @param {Node} node Node to check.\r\n\t * @returns {Boolean}\r\n\t */\r\n\tisComment( node ) {\r\n\t\treturn node && node.nodeType == Node.COMMENT_NODE;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the node is an instance of the block filler for this DOM converter.\r\n\t *\r\n\t *\t\tconst converter = new DomConverter( viewDocument, { blockFillerMode: 'br' } );\r\n\t *\r\n\t *\t\tconverter.isBlockFiller( BR_FILLER( document ) ); // true\r\n\t *\t\tconverter.isBlockFiller( NBSP_FILLER( document ) ); // false\r\n\t *\r\n\t * **Note:**: For the `'nbsp'` mode the method also checks context of a node so it cannot be a detached node.\r\n\t *\r\n\t * **Note:** A special case in the `'nbsp'` mode exists where the `<br>` in `<p><br></p>` is treated as a block filler.\r\n\t *\r\n\t * @param {Node} domNode DOM node to check.\r\n\t * @returns {Boolean} True if a node is considered a block filler for given mode.\r\n\t */\r\n\tisBlockFiller( domNode ) {\r\n\t\tif ( this.blockFillerMode == 'br' ) {\r\n\t\t\treturn domNode.isEqualNode( BR_FILLER_REF );\r\n\t\t}\r\n\r\n\t\t// Special case for <p><br></p> in which case the <br> should be treated as filler even\r\n\t\t// when we're in the 'nbsp' mode. See ckeditor5#5564.\r\n\t\tif ( domNode.tagName === 'BR' && hasBlockParent( domNode, this.blockElements ) && domNode.parentNode.childNodes.length === 1 ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn isNbspBlockFiller( domNode, this.blockElements );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if given selection is a backward selection, that is, if it's `focus` is before `anchor`.\r\n\t *\r\n\t * @param {Selection} DOM Selection instance to check.\r\n\t * @returns {Boolean}\r\n\t */\r\n\tisDomSelectionBackward( selection ) {\r\n\t\tif ( selection.isCollapsed ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Since it takes multiple lines of code to check whether a \"DOM Position\" is before/after another \"DOM Position\",\r\n\t\t// we will use the fact that range will collapse if it's end is before it's start.\r\n\t\tconst range = document.createRange();\r\n\r\n\t\trange.setStart( selection.anchorNode, selection.anchorOffset );\r\n\t\trange.setEnd( selection.focusNode, selection.focusOffset );\r\n\r\n\t\tconst backward = range.collapsed;\r\n\r\n\t\trange.detach();\r\n\r\n\t\treturn backward;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns parent {@link module:engine/view/uielement~UIElement} for provided DOM node. Returns `null` if there is no\r\n\t * parent UIElement.\r\n\t *\r\n\t * @param {Node} domNode\r\n\t * @returns {module:engine/view/uielement~UIElement|null}\r\n\t */\r\n\tgetParentUIElement( domNode ) {\r\n\t\tconst ancestors = getAncestors( domNode );\r\n\r\n\t\t// Remove domNode from the list.\r\n\t\tancestors.pop();\r\n\r\n\t\twhile ( ancestors.length ) {\r\n\t\t\tconst domNode = ancestors.pop();\r\n\t\t\tconst viewNode = this._domToViewMapping.get( domNode );\r\n\r\n\t\t\tif ( viewNode && viewNode.is( 'uiElement' ) ) {\r\n\t\t\t\treturn viewNode;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if given selection's boundaries are at correct places.\r\n\t *\r\n\t * The following places are considered as incorrect for selection boundaries:\r\n\t * * before or in the middle of the inline filler sequence,\r\n\t * * inside the DOM element which represents {@link module:engine/view/uielement~UIElement a view ui element}.\r\n\t *\r\n\t * @param {Selection} domSelection DOM Selection object to be checked.\r\n\t * @returns {Boolean} `true` if the given selection is at a correct place, `false` otherwise.\r\n\t */\r\n\tisDomSelectionCorrect( domSelection ) {\r\n\t\treturn this._isDomSelectionPositionCorrect( domSelection.anchorNode, domSelection.anchorOffset ) &&\r\n\t\t\tthis._isDomSelectionPositionCorrect( domSelection.focusNode, domSelection.focusOffset );\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the given DOM position is a correct place for selection boundary. See {@link #isDomSelectionCorrect}.\r\n\t *\r\n\t * @private\r\n\t * @param {Element} domParent Position parent.\r\n\t * @param {Number} offset Position offset.\r\n\t * @returns {Boolean} `true` if given position is at a correct place for selection boundary, `false` otherwise.\r\n\t */\r\n\t_isDomSelectionPositionCorrect( domParent, offset ) {\r\n\t\t// If selection is before or in the middle of inline filler string, it is incorrect.\r\n\t\tif ( isText( domParent ) && startsWithFiller( domParent ) && offset < INLINE_FILLER_LENGTH ) {\r\n\t\t\t// Selection in a text node, at wrong position (before or in the middle of filler).\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif ( this.isElement( domParent ) && startsWithFiller( domParent.childNodes[ offset ] ) ) {\r\n\t\t\t// Selection in an element node, before filler text node.\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst viewParent = this.mapDomToView( domParent );\r\n\r\n\t\t// If selection is in `view.UIElement`, it is incorrect. Note that `mapDomToView()` returns `view.UIElement`\r\n\t\t// also for any dom element that is inside the view ui element (so we don't need to perform any additional checks).\r\n\t\tif ( viewParent && viewParent.is( 'uiElement' ) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Takes text data from a given {@link module:engine/view/text~Text#data} and processes it so\r\n\t * it is correctly displayed in the DOM.\r\n\t *\r\n\t * Following changes are done:\r\n\t *\r\n\t * * a space at the beginning is changed to `&nbsp;` if this is the first text node in its container\r\n\t * element or if a previous text node ends with a space character,\r\n\t * * space at the end of the text node is changed to `&nbsp;` if there are two spaces at the end of a node or if next node\r\n\t * starts with a space or if it is the last text node in its container,\r\n\t * * remaining spaces are replaced to a chain of spaces and `&nbsp;` (e.g. `'x   x'` becomes `'x &nbsp; x'`).\r\n\t *\r\n\t * Content of {@link #preElements} is not processed.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/view/text~Text} node View text node to process.\r\n\t * @returns {String} Processed text data.\r\n\t */\r\n\t_processDataFromViewText( node ) {\r\n\t\tlet data = node.data;\r\n\r\n\t\t// If any of node ancestors has a name which is in `preElements` array, then currently processed\r\n\t\t// view text node is (will be) in preformatted element. We should not change whitespaces then.\r\n\t\tif ( node.getAncestors().some( parent => this.preElements.includes( parent.name ) ) ) {\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\t// 1. Replace the first space with a nbsp if the previous node ends with a space or there is no previous node\r\n\t\t// (container element boundary).\r\n\t\tif ( data.charAt( 0 ) == ' ' ) {\r\n\t\t\tconst prevNode = this._getTouchingViewTextNode( node, false );\r\n\t\t\tconst prevEndsWithSpace = prevNode && this._nodeEndsWithSpace( prevNode );\r\n\r\n\t\t\tif ( prevEndsWithSpace || !prevNode ) {\r\n\t\t\t\tdata = '\\u00A0' + data.substr( 1 );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 2. Replace the last space with nbsp if there are two spaces at the end or if the next node starts with space or there is no\r\n\t\t// next node (container element boundary).\r\n\t\t//\r\n\t\t// Keep in mind that Firefox prefers $nbsp; before tag, not inside it:\r\n\t\t//\r\n\t\t// Foo <span>&nbsp;bar</span>  <-- bad.\r\n\t\t// Foo&nbsp;<span> bar</span>  <-- good.\r\n\t\t//\r\n\t\t// More here: https://github.com/ckeditor/ckeditor5-engine/issues/1747.\r\n\t\tif ( data.charAt( data.length - 1 ) == ' ' ) {\r\n\t\t\tconst nextNode = this._getTouchingViewTextNode( node, true );\r\n\r\n\t\t\tif ( data.charAt( data.length - 2 ) == ' ' || !nextNode || nextNode.data.charAt( 0 ) == ' ' ) {\r\n\t\t\t\tdata = data.substr( 0, data.length - 1 ) + '\\u00A0';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 3. Create space+nbsp pairs.\r\n\t\treturn data.replace( / {2}/g, ' \\u00A0' );\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether given node ends with a space character after changing appropriate space characters to `&nbsp;`s.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/view/text~Text} node Node to check.\r\n\t * @returns {Boolean} `true` if given `node` ends with space, `false` otherwise.\r\n\t */\r\n\t_nodeEndsWithSpace( node ) {\r\n\t\tif ( node.getAncestors().some( parent => this.preElements.includes( parent.name ) ) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst data = this._processDataFromViewText( node );\r\n\r\n\t\treturn data.charAt( data.length - 1 ) == ' ';\r\n\t}\r\n\r\n\t/**\r\n\t * Takes text data from native `Text` node and processes it to a correct {@link module:engine/view/text~Text view text node} data.\r\n\t *\r\n\t * Following changes are done:\r\n\t *\r\n\t * * multiple whitespaces are replaced to a single space,\r\n\t * * space at the beginning of a text node is removed if it is the first text node in its container\r\n\t * element or if the previous text node ends with a space character,\r\n\t * * space at the end of the text node is removed if there are two spaces at the end of a node or if next node\r\n\t * starts with a space or if it is the last text node in its container\r\n\t * * nbsps are converted to spaces.\r\n\t *\r\n\t * @param {Node} node DOM text node to process.\r\n\t * @returns {String} Processed data.\r\n\t * @private\r\n\t */\r\n\t_processDataFromDomText( node ) {\r\n\t\tlet data = node.data;\r\n\r\n\t\tif ( _hasDomParentOfType( node, this.preElements ) ) {\r\n\t\t\treturn getDataWithoutFiller( node );\r\n\t\t}\r\n\r\n\t\t// Change all consecutive whitespace characters (from the [ \\n\\t\\r] set –\r\n\t\t// see https://github.com/ckeditor/ckeditor5-engine/issues/822#issuecomment-311670249) to a single space character.\r\n\t\t// That's how multiple whitespaces are treated when rendered, so we normalize those whitespaces.\r\n\t\t// We're replacing 1+ (and not 2+) to also normalize singular \\n\\t\\r characters (#822).\r\n\t\tdata = data.replace( /[ \\n\\t\\r]{1,}/g, ' ' );\r\n\r\n\t\tconst prevNode = this._getTouchingInlineDomNode( node, false );\r\n\t\tconst nextNode = this._getTouchingInlineDomNode( node, true );\r\n\r\n\t\tconst shouldLeftTrim = this._checkShouldLeftTrimDomText( prevNode );\r\n\t\tconst shouldRightTrim = this._checkShouldRightTrimDomText( node, nextNode );\r\n\r\n\t\t// If the previous dom text node does not exist or it ends by whitespace character, remove space character from the beginning\r\n\t\t// of this text node. Such space character is treated as a whitespace.\r\n\t\tif ( shouldLeftTrim ) {\r\n\t\t\tdata = data.replace( /^ /, '' );\r\n\t\t}\r\n\r\n\t\t// If the next text node does not exist remove space character from the end of this text node.\r\n\t\tif ( shouldRightTrim ) {\r\n\t\t\tdata = data.replace( / $/, '' );\r\n\t\t}\r\n\r\n\t\t// At the beginning and end of a block element, Firefox inserts normal space + <br> instead of non-breaking space.\r\n\t\t// This means that the text node starts/end with normal space instead of non-breaking space.\r\n\t\t// This causes a problem because the normal space would be removed in `.replace` calls above. To prevent that,\r\n\t\t// the inline filler is removed only after the data is initially processed (by the `.replace` above). See ckeditor5#692.\r\n\t\tdata = getDataWithoutFiller( new Text( data ) );\r\n\r\n\t\t// At this point we should have removed all whitespaces from DOM text data.\r\n\t\t//\r\n\t\t// Now, We will reverse the process that happens in `_processDataFromViewText`.\r\n\t\t//\r\n\t\t// We have to change &nbsp; chars, that were in DOM text data because of rendering reasons, to spaces.\r\n\t\t// First, change all ` \\u00A0` pairs (space + &nbsp;) to two spaces. DOM converter changes two spaces from model/view to\r\n\t\t// ` \\u00A0` to ensure proper rendering. Since here we convert back, we recognize those pairs and change them back to `  `.\r\n\t\tdata = data.replace( / \\u00A0/g, '  ' );\r\n\r\n\t\t// Then, let's change the last nbsp to a space.\r\n\t\tif ( /( |\\u00A0)\\u00A0$/.test( data ) || !nextNode || ( nextNode.data && nextNode.data.charAt( 0 ) == ' ' ) ) {\r\n\t\t\tdata = data.replace( /\\u00A0$/, ' ' );\r\n\t\t}\r\n\r\n\t\t// Then, change &nbsp; character that is at the beginning of the text node to space character.\r\n\t\t// We do that replacement only if this is the first node or the previous node ends on whitespace character.\r\n\t\tif ( shouldLeftTrim ) {\r\n\t\t\tdata = data.replace( /^\\u00A0/, ' ' );\r\n\t\t}\r\n\r\n\t\t// At this point, all whitespaces should be removed and all &nbsp; created for rendering reasons should be\r\n\t\t// changed to normal space. All left &nbsp; are &nbsp; inserted intentionally.\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function which checks if a DOM text node, preceded by the given `prevNode` should\r\n\t * be trimmed from the left side.\r\n\t *\r\n\t * @param {Node} prevNode\r\n\t */\r\n\t_checkShouldLeftTrimDomText( prevNode ) {\r\n\t\tif ( !prevNode ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tif ( isElement( prevNode ) ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn /[^\\S\\u00A0]/.test( prevNode.data.charAt( prevNode.data.length - 1 ) );\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function which checks if a DOM text node, succeeded by the given `nextNode` should\r\n\t * be trimmed from the right side.\r\n\t *\r\n\t * @param {Node} node\r\n\t * @param {Node} nextNode\r\n\t */\r\n\t_checkShouldRightTrimDomText( node, nextNode ) {\r\n\t\tif ( nextNode ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn !startsWithFiller( node );\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function. For given {@link module:engine/view/text~Text view text node}, it finds previous or next sibling\r\n\t * that is contained in the same container element. If there is no such sibling, `null` is returned.\r\n\t *\r\n\t * @param {module:engine/view/text~Text} node Reference node.\r\n\t * @param {Boolean} getNext\r\n\t * @returns {module:engine/view/text~Text|null} Touching text node or `null` if there is no next or previous touching text node.\r\n\t */\r\n\t_getTouchingViewTextNode( node, getNext ) {\r\n\t\tconst treeWalker = new ViewTreeWalker( {\r\n\t\t\tstartPosition: getNext ? ViewPosition._createAfter( node ) : ViewPosition._createBefore( node ),\r\n\t\t\tdirection: getNext ? 'forward' : 'backward'\r\n\t\t} );\r\n\r\n\t\tfor ( const value of treeWalker ) {\r\n\t\t\t// ViewContainerElement is found on a way to next ViewText node, so given `node` was first/last\r\n\t\t\t// text node in its container element.\r\n\t\t\tif ( value.item.is( 'containerElement' ) ) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\t// <br> found – it works like a block boundary, so do not scan further.\r\n\t\t\telse if ( value.item.is( 'br' ) ) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\t// Found a text node in the same container element.\r\n\t\t\telse if ( value.item.is( 'textProxy' ) ) {\r\n\t\t\t\treturn value.item;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function. For the given text node, it finds the closest touching node which is either\r\n\t * a text node or a `<br>`. The search is terminated at block element boundaries and if a matching node\r\n\t * wasn't found so far, `null` is returned.\r\n\t *\r\n\t * In the following DOM structure:\r\n\t *\r\n\t *\t\t<p>foo<b>bar</b><br>bom</p>\r\n\t *\r\n\t * * `foo` doesn't have its previous touching inline node (`null` is returned),\r\n\t * * `foo`'s next touching inline node is `bar`\r\n\t * * `bar`'s next touching inline node is `<br>`\r\n\t *\r\n\t * This method returns text nodes and `<br>` elements because these types of nodes affect how\r\n\t * spaces in the given text node need to be converted.\r\n\t *\r\n\t * @private\r\n\t * @param {Text} node\r\n\t * @param {Boolean} getNext\r\n\t * @returns {Text|Element|null}\r\n\t */\r\n\t_getTouchingInlineDomNode( node, getNext ) {\r\n\t\tif ( !node.parentNode ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tconst direction = getNext ? 'nextNode' : 'previousNode';\r\n\t\tconst document = node.ownerDocument;\r\n\t\tconst topmostParent = getAncestors( node )[ 0 ];\r\n\r\n\t\tconst treeWalker = document.createTreeWalker( topmostParent, NodeFilter.SHOW_TEXT | NodeFilter.SHOW_ELEMENT, {\r\n\t\t\tacceptNode( node ) {\r\n\t\t\t\tif ( isText( node ) ) {\r\n\t\t\t\t\treturn NodeFilter.FILTER_ACCEPT;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( node.tagName == 'BR' ) {\r\n\t\t\t\t\treturn NodeFilter.FILTER_ACCEPT;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn NodeFilter.FILTER_SKIP;\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\ttreeWalker.currentNode = node;\r\n\r\n\t\tconst touchingNode = treeWalker[ direction ]();\r\n\r\n\t\tif ( touchingNode !== null ) {\r\n\t\t\tconst lca = getCommonAncestor( node, touchingNode );\r\n\r\n\t\t\t// If there is common ancestor between the text node and next/prev text node,\r\n\t\t\t// and there are no block elements on a way from the text node to that ancestor,\r\n\t\t\t// and there are no block elements on a way from next/prev text node to that ancestor...\r\n\t\t\tif (\r\n\t\t\t\tlca &&\r\n\t\t\t\t!_hasDomParentOfType( node, this.blockElements, lca ) &&\r\n\t\t\t\t!_hasDomParentOfType( touchingNode, this.blockElements, lca )\r\n\t\t\t) {\r\n\t\t\t\t// Then they are in the same container element.\r\n\t\t\t\treturn touchingNode;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\n// Helper function.\r\n// Used to check if given native `Element` or `Text` node has parent with tag name from `types` array.\r\n//\r\n// @param {Node} node\r\n// @param {Array.<String>} types\r\n// @param {Boolean} [boundaryParent] Can be given if parents should be checked up to a given element (excluding that element).\r\n// @returns {Boolean} `true` if such parent exists or `false` if it does not.\r\nfunction _hasDomParentOfType( node, types, boundaryParent ) {\r\n\tlet parents = getAncestors( node );\r\n\r\n\tif ( boundaryParent ) {\r\n\t\tparents = parents.slice( parents.indexOf( boundaryParent ) + 1 );\r\n\t}\r\n\r\n\treturn parents.some( parent => parent.tagName && types.includes( parent.tagName.toLowerCase() ) );\r\n}\r\n\r\n// A helper that executes given callback for each DOM node's ancestor, starting from the given node\r\n// and ending in document#documentElement.\r\n//\r\n// @param {Node} node\r\n// @param {Function} callback A callback to be executed for each ancestor.\r\nfunction forEachDomNodeAncestor( node, callback ) {\r\n\twhile ( node && node != global.document ) {\r\n\t\tcallback( node );\r\n\t\tnode = node.parentNode;\r\n\t}\r\n}\r\n\r\n// Checks if given node is a nbsp block filler.\r\n//\r\n// A &nbsp; is a block filler only if it is a single child of a block element.\r\n//\r\n// @param {Node} domNode DOM node.\r\n// @returns {Boolean}\r\nfunction isNbspBlockFiller( domNode, blockElements ) {\r\n\tconst isNBSP = isText( domNode ) && domNode.data == '\\u00A0';\r\n\r\n\treturn isNBSP && hasBlockParent( domNode, blockElements ) && domNode.parentNode.childNodes.length === 1;\r\n}\r\n\r\n// Checks if domNode has block parent.\r\n//\r\n// @param {Node} domNode DOM node.\r\n// @returns {Boolean}\r\nfunction hasBlockParent( domNode, blockElements ) {\r\n\tconst parent = domNode.parentNode;\r\n\r\n\treturn parent && parent.tagName && blockElements.includes( parent.tagName.toLowerCase() );\r\n}\r\n\r\n/**\r\n * Enum representing type of the block filler.\r\n *\r\n * Possible values:\r\n *\r\n * * `br` - for `<br>` block filler used in editing view,\r\n * * `nbsp` - for `&nbsp;` block fillers used in the data.\r\n *\r\n * @typedef {String} module:engine/view/filler~BlockFillerMode\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module module:engine/view/downcastwriter\r\n */\r\n\r\nimport Position from './position';\r\nimport Range from './range';\r\nimport Selection from './selection';\r\nimport ContainerElement from './containerelement';\r\nimport AttributeElement from './attributeelement';\r\nimport EmptyElement from './emptyelement';\r\nimport UIElement from './uielement';\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\nimport DocumentFragment from './documentfragment';\r\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\r\nimport Text from './text';\r\nimport EditableElement from './editableelement';\r\nimport { isPlainObject } from 'lodash-es';\r\n\r\n/**\r\n * View downcast writer.\r\n *\r\n * It provides a set of methods used to manipulate view nodes.\r\n *\r\n * Do not create an instance of this writer manually. To modify a view structure, use\r\n * the {@link module:engine/view/view~View#change `View#change()`} block.\r\n *\r\n * The `DowncastWriter` is designed to work with semantic views which are the views that were/are being downcasted from the model.\r\n * To work with ordinary views (e.g. parsed from a pasted content) use the\r\n * {@link module:engine/view/upcastwriter~UpcastWriter upcast writer}.\r\n *\r\n * Read more about changing the view in the {@glink framework/guides/architecture/editing-engine#changing-the-view Changing the view}\r\n * section of the {@glink framework/guides/architecture/editing-engine Editing engine architecture} guide.\r\n */\r\nexport default class DowncastWriter {\r\n\t/**\r\n\t * @param {module:engine/view/document~Document} document The view document instance.\r\n\t */\r\n\tconstructor( document ) {\r\n\t\t/**\r\n\t\t * The view document instance in which this writer operates.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @type {module:engine/view/document~Document}\r\n\t\t */\r\n\t\tthis.document = document;\r\n\r\n\t\t/**\r\n\t\t * Holds references to the attribute groups that share the same {@link module:engine/view/attributeelement~AttributeElement#id id}.\r\n\t\t * The keys are `id`s, the values are `Set`s holding {@link module:engine/view/attributeelement~AttributeElement}s.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {Map.<String,Set>}\r\n\t\t */\r\n\t\tthis._cloneGroups = new Map();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets {@link module:engine/view/documentselection~DocumentSelection selection's} ranges and direction to the\r\n\t * specified location based on the given {@link module:engine/view/selection~Selectable selectable}.\r\n\t *\r\n\t * Usage:\r\n\t *\r\n\t *\t\t// Sets selection to the given range.\r\n\t *\t\tconst range = writer.createRange( start, end );\r\n\t *\t\twriter.setSelection( range );\r\n\t *\r\n\t *\t\t// Sets backward selection to the given range.\r\n\t *\t\tconst range = writer.createRange( start, end );\r\n\t *\t\twriter.setSelection( range );\r\n\t *\r\n\t *\t\t// Sets selection to given ranges.\r\n\t * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( start2, end2 ) ];\r\n\t *\t\twriter.setSelection( range );\r\n\t *\r\n\t *\t\t// Sets selection to the other selection.\r\n\t *\t\tconst otherSelection = writer.createSelection();\r\n\t *\t\twriter.setSelection( otherSelection );\r\n\t *\r\n\t * \t\t// Sets collapsed selection at the given position.\r\n\t *\t\tconst position = writer.createPositionFromPath( root, path );\r\n\t *\t\twriter.setSelection( position );\r\n\t *\r\n\t * \t\t// Sets collapsed selection at the position of given item and offset.\r\n\t *\t\tconst paragraph = writer.createContainerElement( 'p' );\r\n\t *\t\twriter.setSelection( paragraph, offset );\r\n\t *\r\n\t * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\r\n \t * that element and ends after the last child of that element.\r\n\t *\r\n\t * \t\twriter.setSelection( paragraph, 'in' );\r\n\t *\r\n\t * Creates a range on the {@link module:engine/view/item~Item item} which starts before the item and ends just after the item.\r\n\t *\r\n\t *\t\twriter.setSelection( paragraph, 'on' );\r\n\t *\r\n\t * \t\t// Removes all ranges.\r\n\t *\t\twriter.setSelection( null );\r\n\t *\r\n\t * `DowncastWriter#setSelection()` allow passing additional options (`backward`, `fake` and `label`) as the last argument.\r\n\t *\r\n\t *\t\t// Sets selection as backward.\r\n\t *\t\twriter.setSelection( range, { backward: true } );\r\n\t *\r\n\t *\t\t// Sets selection as fake.\r\n\t *\t\t// Fake selection does not render as browser native selection over selected elements and is hidden to the user.\r\n\t * \t\t// This way, no native selection UI artifacts are displayed to the user and selection over elements can be\r\n\t * \t\t// represented in other way, for example by applying proper CSS class.\r\n\t *\t\twriter.setSelection( range, { fake: true } );\r\n\t *\r\n\t * \t\t// Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\r\n\t * \t\t// (and be  properly handled by screen readers).\r\n\t *\t\twriter.setSelection( range, { fake: true, label: 'foo' } );\r\n\t *\r\n\t * @param {module:engine/view/selection~Selectable} selectable\r\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\r\n\t * @param {Object} [options]\r\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\r\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\r\n\t * @param {String} [options.label] Label for the fake selection.\r\n\t */\r\n\tsetSelection( selectable, placeOrOffset, options ) {\r\n\t\tthis.document.selection._setTo( selectable, placeOrOffset, options );\r\n\t}\r\n\r\n\t/**\r\n\t * Moves {@link module:engine/view/documentselection~DocumentSelection#focus selection's focus} to the specified location.\r\n\t *\r\n\t * The location can be specified in the same form as {@link module:engine/view/view~View#createPositionAt view.createPositionAt()}\r\n\t * parameters.\r\n\t *\r\n\t * @param {module:engine/view/item~Item|module:engine/view/position~Position} itemOrPosition\r\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\r\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\r\n\t */\r\n\tsetSelectionFocus( itemOrPosition, offset ) {\r\n\t\tthis.document.selection._setFocus( itemOrPosition, offset );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new {@link module:engine/view/text~Text text node}.\r\n\t *\r\n\t *\t\twriter.createText( 'foo' );\r\n\t *\r\n\t * @param {String} data The text's data.\r\n\t * @returns {module:engine/view/text~Text} The created text node.\r\n\t */\r\n\tcreateText( data ) {\r\n\t\treturn new Text( this.document, data );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates new {@link module:engine/view/attributeelement~AttributeElement}.\r\n\t *\r\n\t *\t\twriter.createAttributeElement( 'strong' );\r\n\t *\t\twriter.createAttributeElement( 'a', { href: 'foo.bar' } );\r\n\t *\r\n\t *\t\t// Make `<a>` element contain other attributes element so the `<a>` element is not broken.\r\n\t *\t\twriter.createAttributeElement( 'a', { href: 'foo.bar' }, { priority: 5 } );\r\n\t *\r\n\t *\t\t// Set `id` of a marker element so it is not joined or merged with \"normal\" elements.\r\n\t *\t\twriter.createAttributeElement( 'span', { class: 'my-marker' }, { id: 'marker:my' } );\r\n\t *\r\n\t * @param {String} name Name of the element.\r\n\t * @param {Object} [attributes] Element's attributes.\r\n\t * @param {Object} [options] Element's options.\r\n\t * @param {Number} [options.priority] Element's {@link module:engine/view/attributeelement~AttributeElement#priority priority}.\r\n\t * @param {Number|String} [options.id] Element's {@link module:engine/view/attributeelement~AttributeElement#id id}.\r\n\t * @returns {module:engine/view/attributeelement~AttributeElement} Created element.\r\n\t */\r\n\tcreateAttributeElement( name, attributes, options = {} ) {\r\n\t\tconst attributeElement = new AttributeElement( this.document, name, attributes );\r\n\r\n\t\tif ( options.priority ) {\r\n\t\t\tattributeElement._priority = options.priority;\r\n\t\t}\r\n\r\n\t\tif ( options.id ) {\r\n\t\t\tattributeElement._id = options.id;\r\n\t\t}\r\n\r\n\t\treturn attributeElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates new {@link module:engine/view/containerelement~ContainerElement}.\r\n\t *\r\n\t *\t\twriter.createContainerElement( 'p' );\r\n\t *\r\n\t *\t\t// Create element with custom attributes.\r\n\t *\t\twriter.createContainerElement( 'div', { id: 'foo-bar', 'data-baz': '123' } );\r\n\t *\r\n\t *\t\t// Create element with custom styles.\r\n\t *\t\twriter.createContainerElement( 'p', { style: 'font-weight: bold; padding-bottom: 10px' } );\r\n\t *\r\n\t *\t\t// Create element with custom classes.\r\n\t *\t\twriter.createContainerElement( 'p', { class: 'foo bar baz' } );\r\n\t *\r\n\t * @param {String} name Name of the element.\r\n\t * @param {Object} [attributes] Elements attributes.\r\n\t * @returns {module:engine/view/containerelement~ContainerElement} Created element.\r\n\t */\r\n\tcreateContainerElement( name, attributes ) {\r\n\t\treturn new ContainerElement( this.document, name, attributes );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates new {@link module:engine/view/editableelement~EditableElement}.\r\n\t *\r\n\t *\t\twriter.createEditableElement( 'div' );\r\n\t *\t\twriter.createEditableElement( 'div', { id: 'foo-1234' } );\r\n\t *\r\n\t * @param {String} name Name of the element.\r\n\t * @param {Object} [attributes] Elements attributes.\r\n\t * @returns {module:engine/view/editableelement~EditableElement} Created element.\r\n\t */\r\n\tcreateEditableElement( name, attributes ) {\r\n\t\tconst editableElement = new EditableElement( this.document, name, attributes );\r\n\t\teditableElement._document = this.document;\r\n\r\n\t\treturn editableElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates new {@link module:engine/view/emptyelement~EmptyElement}.\r\n\t *\r\n\t *\t\twriter.createEmptyElement( 'img' );\r\n\t *\t\twriter.createEmptyElement( 'img', { id: 'foo-1234' } );\r\n\t *\r\n\t * @param {String} name Name of the element.\r\n\t * @param {Object} [attributes] Elements attributes.\r\n\t * @returns {module:engine/view/emptyelement~EmptyElement} Created element.\r\n\t */\r\n\tcreateEmptyElement( name, attributes ) {\r\n\t\treturn new EmptyElement( this.document, name, attributes );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates new {@link module:engine/view/uielement~UIElement}.\r\n\t *\r\n\t *\t\twriter.createUIElement( 'span' );\r\n\t *\t\twriter.createUIElement( 'span', { id: 'foo-1234' } );\r\n\t *\r\n\t * Custom render function can be provided as third parameter:\r\n\t *\r\n\t *\t\twriter.createUIElement( 'span', null, function( domDocument ) {\r\n\t *\t\t\tconst domElement = this.toDomElement( domDocument );\r\n\t *\t\t\tdomElement.innerHTML = '<b>this is ui element</b>';\r\n\t *\r\n\t *\t\t\treturn domElement;\r\n\t *\t\t} );\r\n\t *\r\n\t * @param {String} name Name of the element.\r\n\t * @param {Object} [attributes] Elements attributes.\r\n\t * @param {Function} [renderFunction] Custom render function.\r\n\t * @returns {module:engine/view/uielement~UIElement} Created element.\r\n\t */\r\n\tcreateUIElement( name, attributes, renderFunction ) {\r\n\t\tconst uiElement = new UIElement( this.document, name, attributes );\r\n\r\n\t\tif ( renderFunction ) {\r\n\t\t\tuiElement.render = renderFunction;\r\n\t\t}\r\n\r\n\t\treturn uiElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds or overwrite element's attribute with a specified key and value.\r\n\t *\r\n\t *\t\twriter.setAttribute( 'href', 'http://ckeditor.com', linkElement );\r\n\t *\r\n\t * @param {String} key Attribute key.\r\n\t * @param {String} value Attribute value.\r\n\t * @param {module:engine/view/element~Element} element\r\n\t */\r\n\tsetAttribute( key, value, element ) {\r\n\t\telement._setAttribute( key, value );\r\n\t}\r\n\r\n\t/**\r\n\t * Removes attribute from the element.\r\n\t *\r\n\t *\t\twriter.removeAttribute( 'href', linkElement );\r\n\t *\r\n\t * @param {String} key Attribute key.\r\n\t * @param {module:engine/view/element~Element} element\r\n\t */\r\n\tremoveAttribute( key, element ) {\r\n\t\telement._removeAttribute( key );\r\n\t}\r\n\r\n\t/**\r\n\t * Adds specified class to the element.\r\n\t *\r\n\t *\t\twriter.addClass( 'foo', linkElement );\r\n\t *\t\twriter.addClass( [ 'foo', 'bar' ], linkElement );\r\n\t *\r\n\t * @param {Array.<String>|String} className\r\n\t * @param {module:engine/view/element~Element} element\r\n\t */\r\n\taddClass( className, element ) {\r\n\t\telement._addClass( className );\r\n\t}\r\n\r\n\t/**\r\n\t * Removes specified class from the element.\r\n\t *\r\n\t *\t\twriter.removeClass( 'foo', linkElement );\r\n\t *\t\twriter.removeClass( [ 'foo', 'bar' ], linkElement );\r\n\t *\r\n\t * @param {Array.<String>|String} className\r\n\t * @param {module:engine/view/element~Element} element\r\n\t */\r\n\tremoveClass( className, element ) {\r\n\t\telement._removeClass( className );\r\n\t}\r\n\r\n\t/**\r\n\t * Adds style to the element.\r\n\t *\r\n\t *\t\twriter.setStyle( 'color', 'red', element );\r\n\t *\t\twriter.setStyle( {\r\n\t *\t\t\tcolor: 'red',\r\n\t *\t\t\tposition: 'fixed'\r\n\t *\t\t}, element );\r\n\t *\r\n\t * **Note**: The passed style can be normalized if\r\n\t * {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules a particular style processor rule is enabled}.\r\n\t * See {@link module:engine/view/stylesmap~StylesMap#set `StylesMap#set()`} for details.\r\n\t *\r\n\t * @param {String|Object} property Property name or object with key - value pairs.\r\n\t * @param {String} [value] Value to set. This parameter is ignored if object is provided as the first parameter.\r\n\t * @param {module:engine/view/element~Element} element Element to set styles on.\r\n\t */\r\n\tsetStyle( property, value, element ) {\r\n\t\tif ( isPlainObject( property ) && element === undefined ) {\r\n\t\t\telement = value;\r\n\t\t}\r\n\r\n\t\telement._setStyle( property, value );\r\n\t}\r\n\r\n\t/**\r\n\t * Removes specified style from the element.\r\n\t *\r\n\t *\t\twriter.removeStyle( 'color', element ); // Removes 'color' style.\r\n\t *\t\twriter.removeStyle( [ 'color', 'border-top' ], element ); // Removes both 'color' and 'border-top' styles.\r\n\t *\r\n\t * **Note**: This method can work with normalized style names if\r\n\t * {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules a particular style processor rule is enabled}.\r\n\t * See {@link module:engine/view/stylesmap~StylesMap#remove `StylesMap#remove()`} for details.\r\n\t *\r\n\t * @param {Array.<String>|String} property\r\n\t * @param {module:engine/view/element~Element} element\r\n\t */\r\n\tremoveStyle( property, element ) {\r\n\t\telement._removeStyle( property );\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a custom property on element. Unlike attributes, custom properties are not rendered to the DOM,\r\n\t * so they can be used to add special data to elements.\r\n\t *\r\n\t * @param {String|Symbol} key\r\n\t * @param {*} value\r\n\t * @param {module:engine/view/element~Element} element\r\n\t */\r\n\tsetCustomProperty( key, value, element ) {\r\n\t\telement._setCustomProperty( key, value );\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a custom property stored under the given key.\r\n\t *\r\n\t * @param {String|Symbol} key\r\n\t * @param {module:engine/view/element~Element} element\r\n\t * @returns {Boolean} Returns true if property was removed.\r\n\t */\r\n\tremoveCustomProperty( key, element ) {\r\n\t\treturn element._removeCustomProperty( key );\r\n\t}\r\n\r\n\t/**\r\n\t * Breaks attribute nodes at provided position or at boundaries of provided range. It breaks attribute elements inside\r\n\t * up to a container element.\r\n\t *\r\n\t * In following examples `<p>` is a container, `<b>` and `<u>` are attribute nodes:\r\n\t *\r\n\t *\t\t<p>foo<b><u>bar{}</u></b></p> -> <p>foo<b><u>bar</u></b>[]</p>\r\n\t *\t\t<p>foo<b><u>{}bar</u></b></p> -> <p>foo{}<b><u>bar</u></b></p>\r\n\t *\t\t<p>foo<b><u>b{}ar</u></b></p> -> <p>foo<b><u>b</u></b>[]<b><u>ar</u></b></p>\r\n\t *\t\t<p><b>fo{o</b><u>ba}r</u></p> -> <p><b>fo</b><b>o</b><u>ba</u><u>r</u></b></p>\r\n\t *\r\n\t * **Note:** {@link module:engine/view/documentfragment~DocumentFragment DocumentFragment} is treated like a container.\r\n\t *\r\n\t * **Note:** Difference between {@link module:engine/view/downcastwriter~DowncastWriter#breakAttributes breakAttributes} and\r\n\t * {@link module:engine/view/downcastwriter~DowncastWriter#breakContainer breakContainer} is that `breakAttributes` breaks all\r\n\t * {@link module:engine/view/attributeelement~AttributeElement attribute elements} that are ancestors of given `position`,\r\n\t * up to the first encountered {@link module:engine/view/containerelement~ContainerElement container element}.\r\n\t * `breakContainer` assumes that given `position` is directly in container element and breaks that container element.\r\n\t *\r\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container`\r\n\t * when {@link module:engine/view/range~Range#start start}\r\n\t * and {@link module:engine/view/range~Range#end end} positions of a passed range are not placed inside same parent container.\r\n\t *\r\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-cannot-break-empty-element`\r\n\t * when trying to break attributes\r\n\t * inside {@link module:engine/view/emptyelement~EmptyElement EmptyElement}.\r\n\t *\r\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-cannot-break-ui-element`\r\n\t * when trying to break attributes\r\n\t * inside {@link module:engine/view/uielement~UIElement UIElement}.\r\n\t *\r\n\t * @see module:engine/view/attributeelement~AttributeElement\r\n\t * @see module:engine/view/containerelement~ContainerElement\r\n\t * @see module:engine/view/downcastwriter~DowncastWriter#breakContainer\r\n\t * @param {module:engine/view/position~Position|module:engine/view/range~Range} positionOrRange Position where\r\n\t * to break attribute elements.\r\n\t * @returns {module:engine/view/position~Position|module:engine/view/range~Range} New position or range, after breaking the attribute\r\n\t * elements.\r\n\t */\r\n\tbreakAttributes( positionOrRange ) {\r\n\t\tif ( positionOrRange instanceof Position ) {\r\n\t\t\treturn this._breakAttributes( positionOrRange );\r\n\t\t} else {\r\n\t\t\treturn this._breakAttributesRange( positionOrRange );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Breaks {@link module:engine/view/containerelement~ContainerElement container view element} into two, at the given position. Position\r\n\t * has to be directly inside container element and cannot be in root. Does not break if position is at the beginning\r\n\t * or at the end of it's parent element.\r\n\t *\r\n\t *\t\t<p>foo^bar</p> -> <p>foo</p><p>bar</p>\r\n\t *\t\t<div><p>foo</p>^<p>bar</p></div> -> <div><p>foo</p></div><div><p>bar</p></div>\r\n\t *\t\t<p>^foobar</p> -> ^<p>foobar</p>\r\n\t *\t\t<p>foobar^</p> -> <p>foobar</p>^\r\n\t *\r\n\t * **Note:** Difference between {@link module:engine/view/downcastwriter~DowncastWriter#breakAttributes breakAttributes} and\r\n\t * {@link module:engine/view/downcastwriter~DowncastWriter#breakContainer breakContainer} is that `breakAttributes` breaks all\r\n\t * {@link module:engine/view/attributeelement~AttributeElement attribute elements} that are ancestors of given `position`,\r\n\t * up to the first encountered {@link module:engine/view/containerelement~ContainerElement container element}.\r\n\t * `breakContainer` assumes that given `position` is directly in container element and breaks that container element.\r\n\t *\r\n\t * @see module:engine/view/attributeelement~AttributeElement\r\n\t * @see module:engine/view/containerelement~ContainerElement\r\n\t * @see module:engine/view/downcastwriter~DowncastWriter#breakAttributes\r\n\t * @param {module:engine/view/position~Position} position Position where to break element.\r\n\t * @returns {module:engine/view/position~Position} Position between broken elements. If element has not been broken,\r\n\t * the returned position is placed either before it or after it.\r\n\t */\r\n\tbreakContainer( position ) {\r\n\t\tconst element = position.parent;\r\n\r\n\t\tif ( !( element.is( 'containerElement' ) ) ) {\r\n\t\t\t/**\r\n\t\t\t * Trying to break an element which is not a container element.\r\n\t\t\t *\r\n\t\t\t * @error view-writer-break-non-container-element\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'view-writer-break-non-container-element: Trying to break an element which is not a container element.',\r\n\t\t\t\tthis.document\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif ( !element.parent ) {\r\n\t\t\t/**\r\n\t\t\t * Trying to break root element.\r\n\t\t\t *\r\n\t\t\t * @error view-writer-break-root\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'view-writer-break-root: Trying to break root element.', this.document );\r\n\t\t}\r\n\r\n\t\tif ( position.isAtStart ) {\r\n\t\t\treturn Position._createBefore( element );\r\n\t\t} else if ( !position.isAtEnd ) {\r\n\t\t\tconst newElement = element._clone( false );\r\n\r\n\t\t\tthis.insert( Position._createAfter( element ), newElement );\r\n\r\n\t\t\tconst sourceRange = new Range( position, Position._createAt( element, 'end' ) );\r\n\t\t\tconst targetPosition = new Position( newElement, 0 );\r\n\r\n\t\t\tthis.move( sourceRange, targetPosition );\r\n\t\t}\r\n\r\n\t\treturn Position._createAfter( element );\r\n\t}\r\n\r\n\t/**\r\n\t * Merges {@link module:engine/view/attributeelement~AttributeElement attribute elements}. It also merges text nodes if needed.\r\n\t * Only {@link module:engine/view/attributeelement~AttributeElement#isSimilar similar} attribute elements can be merged.\r\n\t *\r\n\t * In following examples `<p>` is a container and `<b>` is an attribute element:\r\n\t *\r\n\t *\t\t<p>foo[]bar</p> -> <p>foo{}bar</p>\r\n\t *\t\t<p><b>foo</b>[]<b>bar</b></p> -> <p><b>foo{}bar</b></p>\r\n\t *\t\t<p><b foo=\"bar\">a</b>[]<b foo=\"baz\">b</b></p> -> <p><b foo=\"bar\">a</b>[]<b foo=\"baz\">b</b></p>\r\n\t *\r\n\t * It will also take care about empty attributes when merging:\r\n\t *\r\n\t *\t\t<p><b>[]</b></p> -> <p>[]</p>\r\n\t *\t\t<p><b>foo</b><i>[]</i><b>bar</b></p> -> <p><b>foo{}bar</b></p>\r\n\t *\r\n\t * **Note:** Difference between {@link module:engine/view/downcastwriter~DowncastWriter#mergeAttributes mergeAttributes} and\r\n\t * {@link module:engine/view/downcastwriter~DowncastWriter#mergeContainers mergeContainers} is that `mergeAttributes` merges two\r\n\t * {@link module:engine/view/attributeelement~AttributeElement attribute elements} or {@link module:engine/view/text~Text text nodes}\r\n\t * while `mergeContainer` merges two {@link module:engine/view/containerelement~ContainerElement container elements}.\r\n\t *\r\n\t * @see module:engine/view/attributeelement~AttributeElement\r\n\t * @see module:engine/view/containerelement~ContainerElement\r\n\t * @see module:engine/view/downcastwriter~DowncastWriter#mergeContainers\r\n\t * @param {module:engine/view/position~Position} position Merge position.\r\n\t * @returns {module:engine/view/position~Position} Position after merge.\r\n\t */\r\n\tmergeAttributes( position ) {\r\n\t\tconst positionOffset = position.offset;\r\n\t\tconst positionParent = position.parent;\r\n\r\n\t\t// When inside text node - nothing to merge.\r\n\t\tif ( positionParent.is( 'text' ) ) {\r\n\t\t\treturn position;\r\n\t\t}\r\n\r\n\t\t// When inside empty attribute - remove it.\r\n\t\tif ( positionParent.is( 'attributeElement' ) && positionParent.childCount === 0 ) {\r\n\t\t\tconst parent = positionParent.parent;\r\n\t\t\tconst offset = positionParent.index;\r\n\r\n\t\t\tpositionParent._remove();\r\n\t\t\tthis._removeFromClonedElementsGroup( positionParent );\r\n\r\n\t\t\treturn this.mergeAttributes( new Position( parent, offset ) );\r\n\t\t}\r\n\r\n\t\tconst nodeBefore = positionParent.getChild( positionOffset - 1 );\r\n\t\tconst nodeAfter = positionParent.getChild( positionOffset );\r\n\r\n\t\t// Position should be placed between two nodes.\r\n\t\tif ( !nodeBefore || !nodeAfter ) {\r\n\t\t\treturn position;\r\n\t\t}\r\n\r\n\t\t// When position is between two text nodes.\r\n\t\tif ( nodeBefore.is( 'text' ) && nodeAfter.is( 'text' ) ) {\r\n\t\t\treturn mergeTextNodes( nodeBefore, nodeAfter );\r\n\t\t}\r\n\t\t// When position is between two same attribute elements.\r\n\t\telse if ( nodeBefore.is( 'attributeElement' ) && nodeAfter.is( 'attributeElement' ) && nodeBefore.isSimilar( nodeAfter ) ) {\r\n\t\t\t// Move all children nodes from node placed after selection and remove that node.\r\n\t\t\tconst count = nodeBefore.childCount;\r\n\t\t\tnodeBefore._appendChild( nodeAfter.getChildren() );\r\n\r\n\t\t\tnodeAfter._remove();\r\n\t\t\tthis._removeFromClonedElementsGroup( nodeAfter );\r\n\r\n\t\t\t// New position is located inside the first node, before new nodes.\r\n\t\t\t// Call this method recursively to merge again if needed.\r\n\t\t\treturn this.mergeAttributes( new Position( nodeBefore, count ) );\r\n\t\t}\r\n\r\n\t\treturn position;\r\n\t}\r\n\r\n\t/**\r\n\t * Merges two {@link module:engine/view/containerelement~ContainerElement container elements} that are before and after given position.\r\n\t * Precisely, the element after the position is removed and it's contents are moved to element before the position.\r\n\t *\r\n\t *\t\t<p>foo</p>^<p>bar</p> -> <p>foo^bar</p>\r\n\t *\t\t<div>foo</div>^<p>bar</p> -> <div>foo^bar</div>\r\n\t *\r\n\t * **Note:** Difference between {@link module:engine/view/downcastwriter~DowncastWriter#mergeAttributes mergeAttributes} and\r\n\t * {@link module:engine/view/downcastwriter~DowncastWriter#mergeContainers mergeContainers} is that `mergeAttributes` merges two\r\n\t * {@link module:engine/view/attributeelement~AttributeElement attribute elements} or {@link module:engine/view/text~Text text nodes}\r\n\t * while `mergeContainer` merges two {@link module:engine/view/containerelement~ContainerElement container elements}.\r\n\t *\r\n\t * @see module:engine/view/attributeelement~AttributeElement\r\n\t * @see module:engine/view/containerelement~ContainerElement\r\n\t * @see module:engine/view/downcastwriter~DowncastWriter#mergeAttributes\r\n\t * @param {module:engine/view/position~Position} position Merge position.\r\n\t * @returns {module:engine/view/position~Position} Position after merge.\r\n\t */\r\n\tmergeContainers( position ) {\r\n\t\tconst prev = position.nodeBefore;\r\n\t\tconst next = position.nodeAfter;\r\n\r\n\t\tif ( !prev || !next || !prev.is( 'containerElement' ) || !next.is( 'containerElement' ) ) {\r\n\t\t\t/**\r\n\t\t\t * Element before and after given position cannot be merged.\r\n\t\t\t *\r\n\t\t\t * @error view-writer-merge-containers-invalid-position\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'view-writer-merge-containers-invalid-position: ' +\r\n\t\t\t\t'Element before and after given position cannot be merged.', this.document );\r\n\t\t}\r\n\r\n\t\tconst lastChild = prev.getChild( prev.childCount - 1 );\r\n\t\tconst newPosition = lastChild instanceof Text ? Position._createAt( lastChild, 'end' ) : Position._createAt( prev, 'end' );\r\n\r\n\t\tthis.move( Range._createIn( next ), Position._createAt( prev, 'end' ) );\r\n\t\tthis.remove( Range._createOn( next ) );\r\n\r\n\t\treturn newPosition;\r\n\t}\r\n\r\n\t/**\r\n\t * Insert node or nodes at specified position. Takes care about breaking attributes before insertion\r\n\t * and merging them afterwards.\r\n\t *\r\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-insert-invalid-node` when nodes to insert\r\n\t * contains instances that are not {@link module:engine/view/text~Text Texts},\r\n\t * {@link module:engine/view/attributeelement~AttributeElement AttributeElements},\r\n\t * {@link module:engine/view/containerelement~ContainerElement ContainerElements},\r\n\t * {@link module:engine/view/emptyelement~EmptyElement EmptyElements} or\r\n\t * {@link module:engine/view/uielement~UIElement UIElements}.\r\n\t *\r\n\t * @param {module:engine/view/position~Position} position Insertion position.\r\n\t * @param {module:engine/view/text~Text|module:engine/view/attributeelement~AttributeElement|\r\n\t * module:engine/view/containerelement~ContainerElement|module:engine/view/emptyelement~EmptyElement|\r\n\t * module:engine/view/uielement~UIElement|Iterable.<module:engine/view/text~Text|\r\n\t * module:engine/view/attributeelement~AttributeElement|module:engine/view/containerelement~ContainerElement|\r\n\t * module:engine/view/emptyelement~EmptyElement|module:engine/view/uielement~UIElement>} nodes Node or nodes to insert.\r\n\t * @returns {module:engine/view/range~Range} Range around inserted nodes.\r\n\t */\r\n\tinsert( position, nodes ) {\r\n\t\tnodes = isIterable( nodes ) ? [ ...nodes ] : [ nodes ];\r\n\r\n\t\t// Check if nodes to insert are instances of AttributeElements, ContainerElements, EmptyElements, UIElements or Text.\r\n\t\tvalidateNodesToInsert( nodes, this.document );\r\n\r\n\t\tconst container = getParentContainer( position );\r\n\r\n\t\tif ( !container ) {\r\n\t\t\t/**\r\n\t\t\t * Position's parent container cannot be found.\r\n\t\t\t *\r\n\t\t\t * @error view-writer-invalid-position-container\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'view-writer-invalid-position-container', this.document );\r\n\t\t}\r\n\r\n\t\tconst insertionPosition = this._breakAttributes( position, true );\r\n\t\tconst length = container._insertChild( insertionPosition.offset, nodes );\r\n\r\n\t\tfor ( const node of nodes ) {\r\n\t\t\tthis._addToClonedElementsGroup( node );\r\n\t\t}\r\n\r\n\t\tconst endPosition = insertionPosition.getShiftedBy( length );\r\n\t\tconst start = this.mergeAttributes( insertionPosition );\r\n\r\n\t\t// When no nodes were inserted - return collapsed range.\r\n\t\tif ( length === 0 ) {\r\n\t\t\treturn new Range( start, start );\r\n\t\t} else {\r\n\t\t\t// If start position was merged - move end position.\r\n\t\t\tif ( !start.isEqual( insertionPosition ) ) {\r\n\t\t\t\tendPosition.offset--;\r\n\t\t\t}\r\n\r\n\t\t\tconst end = this.mergeAttributes( endPosition );\r\n\r\n\t\t\treturn new Range( start, end );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes provided range from the container.\r\n\t *\r\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\r\n\t * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\r\n\t * same parent container.\r\n\t *\r\n\t * @param {module:engine/view/range~Range|module:engine/view/item~Item} rangeOrItem Range to remove from container\r\n\t * or an {@link module:engine/view/item~Item item} to remove. If range is provided, after removing, it will be updated\r\n\t * to a collapsed range showing the new position.\r\n\t * @returns {module:engine/view/documentfragment~DocumentFragment} Document fragment containing removed nodes.\r\n\t */\r\n\tremove( rangeOrItem ) {\r\n\t\tconst range = rangeOrItem instanceof Range ? rangeOrItem : Range._createOn( rangeOrItem );\r\n\r\n\t\tvalidateRangeContainer( range, this.document );\r\n\r\n\t\t// If range is collapsed - nothing to remove.\r\n\t\tif ( range.isCollapsed ) {\r\n\t\t\treturn new DocumentFragment( this.document );\r\n\t\t}\r\n\r\n\t\t// Break attributes at range start and end.\r\n\t\tconst { start: breakStart, end: breakEnd } = this._breakAttributesRange( range, true );\r\n\t\tconst parentContainer = breakStart.parent;\r\n\r\n\t\tconst count = breakEnd.offset - breakStart.offset;\r\n\r\n\t\t// Remove nodes in range.\r\n\t\tconst removed = parentContainer._removeChildren( breakStart.offset, count );\r\n\r\n\t\tfor ( const node of removed ) {\r\n\t\t\tthis._removeFromClonedElementsGroup( node );\r\n\t\t}\r\n\r\n\t\t// Merge after removing.\r\n\t\tconst mergePosition = this.mergeAttributes( breakStart );\r\n\t\trange.start = mergePosition;\r\n\t\trange.end = mergePosition.clone();\r\n\r\n\t\t// Return removed nodes.\r\n\t\treturn new DocumentFragment( this.document, removed );\r\n\t}\r\n\r\n\t/**\r\n\t * Removes matching elements from given range.\r\n\t *\r\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\r\n\t * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\r\n\t * same parent container.\r\n\t *\r\n\t * @param {module:engine/view/range~Range} range Range to clear.\r\n\t * @param {module:engine/view/element~Element} element Element to remove.\r\n\t */\r\n\tclear( range, element ) {\r\n\t\tvalidateRangeContainer( range, this.document );\r\n\r\n\t\t// Create walker on given range.\r\n\t\t// We walk backward because when we remove element during walk it modifies range end position.\r\n\t\tconst walker = range.getWalker( {\r\n\t\t\tdirection: 'backward',\r\n\t\t\tignoreElementEnd: true\r\n\t\t} );\r\n\r\n\t\t// Let's walk.\r\n\t\tfor ( const current of walker ) {\r\n\t\t\tconst item = current.item;\r\n\t\t\tlet rangeToRemove;\r\n\r\n\t\t\t// When current item matches to the given element.\r\n\t\t\tif ( item.is( 'element' ) && element.isSimilar( item ) ) {\r\n\t\t\t\t// Create range on this element.\r\n\t\t\t\trangeToRemove = Range._createOn( item );\r\n\t\t\t\t// When range starts inside Text or TextProxy element.\r\n\t\t\t} else if ( !current.nextPosition.isAfter( range.start ) && item.is( 'textProxy' ) ) {\r\n\t\t\t\t// We need to check if parent of this text matches to given element.\r\n\t\t\t\tconst parentElement = item.getAncestors().find( ancestor => {\r\n\t\t\t\t\treturn ancestor.is( 'element' ) && element.isSimilar( ancestor );\r\n\t\t\t\t} );\r\n\r\n\t\t\t\t// If it is then create range inside this element.\r\n\t\t\t\tif ( parentElement ) {\r\n\t\t\t\t\trangeToRemove = Range._createIn( parentElement );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// If we have found element to remove.\r\n\t\t\tif ( rangeToRemove ) {\r\n\t\t\t\t// We need to check if element range stick out of the given range and truncate if it is.\r\n\t\t\t\tif ( rangeToRemove.end.isAfter( range.end ) ) {\r\n\t\t\t\t\trangeToRemove.end = range.end;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( rangeToRemove.start.isBefore( range.start ) ) {\r\n\t\t\t\t\trangeToRemove.start = range.start;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// At the end we remove range with found element.\r\n\t\t\t\tthis.remove( rangeToRemove );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Moves nodes from provided range to target position.\r\n\t *\r\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\r\n\t * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\r\n\t * same parent container.\r\n\t *\r\n\t * @param {module:engine/view/range~Range} sourceRange Range containing nodes to move.\r\n\t * @param {module:engine/view/position~Position} targetPosition Position to insert.\r\n\t * @returns {module:engine/view/range~Range} Range in target container. Inserted nodes are placed between\r\n\t * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions.\r\n\t */\r\n\tmove( sourceRange, targetPosition ) {\r\n\t\tlet nodes;\r\n\r\n\t\tif ( targetPosition.isAfter( sourceRange.end ) ) {\r\n\t\t\ttargetPosition = this._breakAttributes( targetPosition, true );\r\n\r\n\t\t\tconst parent = targetPosition.parent;\r\n\t\t\tconst countBefore = parent.childCount;\r\n\r\n\t\t\tsourceRange = this._breakAttributesRange( sourceRange, true );\r\n\r\n\t\t\tnodes = this.remove( sourceRange );\r\n\r\n\t\t\ttargetPosition.offset += ( parent.childCount - countBefore );\r\n\t\t} else {\r\n\t\t\tnodes = this.remove( sourceRange );\r\n\t\t}\r\n\r\n\t\treturn this.insert( targetPosition, nodes );\r\n\t}\r\n\r\n\t/**\r\n\t * Wraps elements within range with provided {@link module:engine/view/attributeelement~AttributeElement AttributeElement}.\r\n\t * If a collapsed range is provided, it will be wrapped only if it is equal to view selection.\r\n\t *\r\n\t * If a collapsed range was passed and is same as selection, the selection\r\n\t * will be moved to the inside of the wrapped attribute element.\r\n\t *\r\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-invalid-range-container`\r\n\t * when {@link module:engine/view/range~Range#start}\r\n\t * and {@link module:engine/view/range~Range#end} positions are not placed inside same parent container.\r\n\t *\r\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-wrap-invalid-attribute` when passed attribute element is not\r\n\t * an instance of {@link module:engine/view/attributeelement~AttributeElement AttributeElement}.\r\n\t *\r\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-wrap-nonselection-collapsed-range` when passed range\r\n\t * is collapsed and different than view selection.\r\n\t *\r\n\t * @param {module:engine/view/range~Range} range Range to wrap.\r\n\t * @param {module:engine/view/attributeelement~AttributeElement} attribute Attribute element to use as wrapper.\r\n\t * @returns {module:engine/view/range~Range} range Range after wrapping, spanning over wrapping attribute element.\r\n\t*/\r\n\twrap( range, attribute ) {\r\n\t\tif ( !( attribute instanceof AttributeElement ) ) {\r\n\t\t\tthrow new CKEditorError( 'view-writer-wrap-invalid-attribute', this.document );\r\n\t\t}\r\n\r\n\t\tvalidateRangeContainer( range, this.document );\r\n\r\n\t\tif ( !range.isCollapsed ) {\r\n\t\t\t// Non-collapsed range. Wrap it with the attribute element.\r\n\t\t\treturn this._wrapRange( range, attribute );\r\n\t\t} else {\r\n\t\t\t// Collapsed range. Wrap position.\r\n\t\t\tlet position = range.start;\r\n\r\n\t\t\tif ( position.parent.is( 'element' ) && !_hasNonUiChildren( position.parent ) ) {\r\n\t\t\t\tposition = position.getLastMatchingPosition( value => value.item.is( 'uiElement' ) );\r\n\t\t\t}\r\n\r\n\t\t\tposition = this._wrapPosition( position, attribute );\r\n\t\t\tconst viewSelection = this.document.selection;\r\n\r\n\t\t\t// If wrapping position is equal to view selection, move view selection inside wrapping attribute element.\r\n\t\t\tif ( viewSelection.isCollapsed && viewSelection.getFirstPosition().isEqual( range.start ) ) {\r\n\t\t\t\tthis.setSelection( position );\r\n\t\t\t}\r\n\r\n\t\t\treturn new Range( position );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Unwraps nodes within provided range from attribute element.\r\n\t *\r\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\r\n\t * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\r\n\t * same parent container.\r\n\t *\r\n\t * @param {module:engine/view/range~Range} range\r\n\t * @param {module:engine/view/attributeelement~AttributeElement} attribute\r\n\t */\r\n\tunwrap( range, attribute ) {\r\n\t\tif ( !( attribute instanceof AttributeElement ) ) {\r\n\t\t\t/**\r\n\t\t\t * Attribute element need to be instance of attribute element.\r\n\t\t\t *\r\n\t\t\t * @error view-writer-unwrap-invalid-attribute\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'view-writer-unwrap-invalid-attribute', this.document );\r\n\t\t}\r\n\r\n\t\tvalidateRangeContainer( range, this.document );\r\n\r\n\t\t// If range is collapsed - nothing to unwrap.\r\n\t\tif ( range.isCollapsed ) {\r\n\t\t\treturn range;\r\n\t\t}\r\n\r\n\t\t// Break attributes at range start and end.\r\n\t\tconst { start: breakStart, end: breakEnd } = this._breakAttributesRange( range, true );\r\n\t\tconst parentContainer = breakStart.parent;\r\n\r\n\t\t// Unwrap children located between break points.\r\n\t\tconst newRange = this._unwrapChildren( parentContainer, breakStart.offset, breakEnd.offset, attribute );\r\n\r\n\t\t// Merge attributes at the both ends and return a new range.\r\n\t\tconst start = this.mergeAttributes( newRange.start );\r\n\r\n\t\t// If start position was merged - move end position back.\r\n\t\tif ( !start.isEqual( newRange.start ) ) {\r\n\t\t\tnewRange.end.offset--;\r\n\t\t}\r\n\r\n\t\tconst end = this.mergeAttributes( newRange.end );\r\n\r\n\t\treturn new Range( start, end );\r\n\t}\r\n\r\n\t/**\r\n\t * Renames element by creating a copy of renamed element but with changed name and then moving contents of the\r\n\t * old element to the new one. Keep in mind that this will invalidate all {@link module:engine/view/position~Position positions} which\r\n\t * has renamed element as {@link module:engine/view/position~Position#parent a parent}.\r\n\t *\r\n\t * New element has to be created because `Element#tagName` property in DOM is readonly.\r\n\t *\r\n\t * Since this function creates a new element and removes the given one, the new element is returned to keep reference.\r\n\t *\r\n\t * @param {String} newName New name for element.\r\n\t * @param {module:engine/view/containerelement~ContainerElement} viewElement Element to be renamed.\r\n\t */\r\n\trename( newName, viewElement ) {\r\n\t\tconst newElement = new ContainerElement( this.document, newName, viewElement.getAttributes() );\r\n\r\n\t\tthis.insert( Position._createAfter( viewElement ), newElement );\r\n\t\tthis.move( Range._createIn( viewElement ), Position._createAt( newElement, 0 ) );\r\n\t\tthis.remove( Range._createOn( viewElement ) );\r\n\r\n\t\treturn newElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up memory by removing obsolete cloned elements group from the writer.\r\n\t *\r\n\t * Should be used whenever all {@link module:engine/view/attributeelement~AttributeElement attribute elements}\r\n\t * with the same {@link module:engine/view/attributeelement~AttributeElement#id id} are going to be removed from the view and\r\n\t * the group will no longer be needed.\r\n\t *\r\n\t * Cloned elements group are not removed automatically in case if the group is still needed after all its elements\r\n\t * were removed from the view.\r\n\t *\r\n\t * Keep in mind that group names are equal to the `id` property of the attribute element.\r\n\t *\r\n\t * @param {String} groupName Name of the group to clear.\r\n\t */\r\n\tclearClonedElementsGroup( groupName ) {\r\n\t\tthis._cloneGroups.delete( groupName );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates position at the given location. The location can be specified as:\r\n\t *\r\n\t * * a {@link module:engine/view/position~Position position},\r\n\t * * parent element and offset (offset defaults to `0`),\r\n\t * * parent element and `'end'` (sets position at the end of that element),\r\n\t * * {@link module:engine/view/item~Item view item} and `'before'` or `'after'` (sets position before or after given view item).\r\n\t *\r\n\t * This method is a shortcut to other constructors such as:\r\n\t *\r\n\t * * {@link #createPositionBefore},\r\n\t * * {@link #createPositionAfter},\r\n\t *\r\n\t * @param {module:engine/view/item~Item|module:engine/model/position~Position} itemOrPosition\r\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\r\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\r\n\t */\r\n\tcreatePositionAt( itemOrPosition, offset ) {\r\n\t\treturn Position._createAt( itemOrPosition, offset );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new position after given view item.\r\n\t *\r\n\t * @param {module:engine/view/item~Item} item View item after which the position should be located.\r\n\t * @returns {module:engine/view/position~Position}\r\n\t */\r\n\tcreatePositionAfter( item ) {\r\n\t\treturn Position._createAfter( item );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new position before given view item.\r\n\t *\r\n\t * @param {module:engine/view/item~Item} item View item before which the position should be located.\r\n\t * @returns {module:engine/view/position~Position}\r\n\t */\r\n\tcreatePositionBefore( item ) {\r\n\t\treturn Position._createBefore( item );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a range spanning from `start` position to `end` position.\r\n\t *\r\n\t * **Note:** This factory method creates its own {@link module:engine/view/position~Position} instances basing on passed values.\r\n\t *\r\n\t * @param {module:engine/view/position~Position} start Start position.\r\n\t * @param {module:engine/view/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\r\n\t * @returns {module:engine/view/range~Range}\r\n\t */\r\n\tcreateRange( start, end ) {\r\n\t\treturn new Range( start, end );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a range that starts before given {@link module:engine/view/item~Item view item} and ends after it.\r\n\t *\r\n\t * @param {module:engine/view/item~Item} item\r\n\t * @returns {module:engine/view/range~Range}\r\n\t */\r\n\tcreateRangeOn( item ) {\r\n\t\treturn Range._createOn( item );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\r\n\t * that element and ends after the last child of that element.\r\n\t *\r\n\t * @param {module:engine/view/element~Element} element Element which is a parent for the range.\r\n\t * @returns {module:engine/view/range~Range}\r\n\t */\r\n\tcreateRangeIn( element ) {\r\n\t\treturn Range._createIn( element );\r\n\t}\r\n\r\n\t/**\r\n\t Creates new {@link module:engine/view/selection~Selection} instance.\r\n\t *\r\n\t * \t\t// Creates empty selection without ranges.\r\n\t *\t\tconst selection = writer.createSelection();\r\n\t *\r\n\t *\t\t// Creates selection at the given range.\r\n\t *\t\tconst range = writer.createRange( start, end );\r\n\t *\t\tconst selection = writer.createSelection( range );\r\n\t *\r\n\t *\t\t// Creates selection at the given ranges\r\n\t * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\r\n\t *\t\tconst selection = writer.createSelection( ranges );\r\n\t *\r\n\t *\t\t// Creates selection from the other selection.\r\n\t *\t\tconst otherSelection = writer.createSelection();\r\n\t *\t\tconst selection = writer.createSelection( otherSelection );\r\n\t *\r\n\t *\t\t// Creates selection from the document selection.\r\n\t *\t\tconst selection = writer.createSelection( editor.editing.view.document.selection );\r\n\t *\r\n\t * \t\t// Creates selection at the given position.\r\n\t *\t\tconst position = writer.createPositionFromPath( root, path );\r\n\t *\t\tconst selection = writer.createSelection( position );\r\n\t *\r\n\t *\t\t// Creates collapsed selection at the position of given item and offset.\r\n\t *\t\tconst paragraph = writer.createContainerElement( 'p' );\r\n\t *\t\tconst selection = writer.createSelection( paragraph, offset );\r\n\t *\r\n\t *\t\t// Creates a range inside an {@link module:engine/view/element~Element element} which starts before the\r\n\t *\t\t// first child of that element and ends after the last child of that element.\r\n\t *\t\tconst selection = writer.createSelection( paragraph, 'in' );\r\n\t *\r\n\t *\t\t// Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends\r\n\t *\t\t// just after the item.\r\n\t *\t\tconst selection = writer.createSelection( paragraph, 'on' );\r\n\t *\r\n\t * `Selection`'s constructor allow passing additional options (`backward`, `fake` and `label`) as the last argument.\r\n\t *\r\n\t *\t\t// Creates backward selection.\r\n\t *\t\tconst selection = writer.createSelection( range, { backward: true } );\r\n\t *\r\n\t * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\r\n\t * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\r\n\t * represented in other way, for example by applying proper CSS class.\r\n\t *\r\n\t * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\r\n\t * (and be  properly handled by screen readers).\r\n\t *\r\n\t *\t\t// Creates fake selection with label.\r\n\t *\t\tconst selection = writer.createSelection( range, { fake: true, label: 'foo' } );\r\n\t *\r\n\t * @param {module:engine/view/selection~Selectable} [selectable=null]\r\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Offset or place when selectable is an `Item`.\r\n\t * @param {Object} [options]\r\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\r\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\r\n\t * @param {String} [options.label] Label for the fake selection.\r\n\t * @returns {module:engine/view/selection~Selection}\r\n\t */\r\n\tcreateSelection( selectable, placeOrOffset, options ) {\r\n\t\treturn new Selection( selectable, placeOrOffset, options );\r\n\t}\r\n\r\n\t/**\r\n\t * Wraps children with provided `wrapElement`. Only children contained in `parent` element between\r\n\t * `startOffset` and `endOffset` will be wrapped.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/view/element~Element} parent\r\n\t * @param {Number} startOffset\r\n\t * @param {Number} endOffset\r\n\t * @param {module:engine/view/element~Element} wrapElement\r\n\t */\r\n\t_wrapChildren( parent, startOffset, endOffset, wrapElement ) {\r\n\t\tlet i = startOffset;\r\n\t\tconst wrapPositions = [];\r\n\r\n\t\twhile ( i < endOffset ) {\r\n\t\t\tconst child = parent.getChild( i );\r\n\t\t\tconst isText = child.is( 'text' );\r\n\t\t\tconst isAttribute = child.is( 'attributeElement' );\r\n\t\t\tconst isEmpty = child.is( 'emptyElement' );\r\n\t\t\tconst isUI = child.is( 'uiElement' );\r\n\r\n\t\t\t//\r\n\t\t\t// (In all examples, assume that `wrapElement` is `<span class=\"foo\">` element.)\r\n\t\t\t//\r\n\t\t\t// Check if `wrapElement` can be joined with the wrapped element. One of requirements is having same name.\r\n\t\t\t// If possible, join elements.\r\n\t\t\t//\r\n\t\t\t// <p><span class=\"bar\">abc</span></p>  -->  <p><span class=\"foo bar\">abc</span></p>\r\n\t\t\t//\r\n\t\t\tif ( isAttribute && this._wrapAttributeElement( wrapElement, child ) ) {\r\n\t\t\t\twrapPositions.push( new Position( parent, i ) );\r\n\t\t\t}\r\n\t\t\t//\r\n\t\t\t// Wrap the child if it is not an attribute element or if it is an attribute element that should be inside\r\n\t\t\t// `wrapElement` (due to priority).\r\n\t\t\t//\r\n\t\t\t// <p>abc</p>                   -->  <p><span class=\"foo\">abc</span></p>\r\n\t\t\t// <p><strong>abc</strong></p>  -->  <p><span class=\"foo\"><strong>abc</strong></span></p>\r\n\t\t\t//\r\n\t\t\telse if ( isText || isEmpty || isUI || ( isAttribute && shouldABeOutsideB( wrapElement, child ) ) ) {\r\n\t\t\t\t// Clone attribute.\r\n\t\t\t\tconst newAttribute = wrapElement._clone();\r\n\r\n\t\t\t\t// Wrap current node with new attribute.\r\n\t\t\t\tchild._remove();\r\n\t\t\t\tnewAttribute._appendChild( child );\r\n\r\n\t\t\t\tparent._insertChild( i, newAttribute );\r\n\t\t\t\tthis._addToClonedElementsGroup( newAttribute );\r\n\r\n\t\t\t\twrapPositions.push( new Position( parent, i ) );\r\n\t\t\t}\r\n\t\t\t//\r\n\t\t\t// If other nested attribute is found and it wasn't wrapped (see above), continue wrapping inside it.\r\n\t\t\t//\r\n\t\t\t// <p><a href=\"foo.html\">abc</a></p>  -->  <p><a href=\"foo.html\"><span class=\"foo\">abc</span></a></p>\r\n\t\t\t//\r\n\t\t\telse if ( isAttribute ) {\r\n\t\t\t\tthis._wrapChildren( child, 0, child.childCount, wrapElement );\r\n\t\t\t}\r\n\r\n\t\t\ti++;\r\n\t\t}\r\n\r\n\t\t// Merge at each wrap.\r\n\t\tlet offsetChange = 0;\r\n\r\n\t\tfor ( const position of wrapPositions ) {\r\n\t\t\tposition.offset -= offsetChange;\r\n\r\n\t\t\t// Do not merge with elements outside selected children.\r\n\t\t\tif ( position.offset == startOffset ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tconst newPosition = this.mergeAttributes( position );\r\n\r\n\t\t\t// If nodes were merged - other merge offsets will change.\r\n\t\t\tif ( !newPosition.isEqual( position ) ) {\r\n\t\t\t\toffsetChange++;\r\n\t\t\t\tendOffset--;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn Range._createFromParentsAndOffsets( parent, startOffset, parent, endOffset );\r\n\t}\r\n\r\n\t/**\r\n\t * Unwraps children from provided `unwrapElement`. Only children contained in `parent` element between\r\n\t * `startOffset` and `endOffset` will be unwrapped.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/view/element~Element} parent\r\n\t * @param {Number} startOffset\r\n\t * @param {Number} endOffset\r\n\t * @param {module:engine/view/element~Element} unwrapElement\r\n\t */\r\n\t_unwrapChildren( parent, startOffset, endOffset, unwrapElement ) {\r\n\t\tlet i = startOffset;\r\n\t\tconst unwrapPositions = [];\r\n\r\n\t\t// Iterate over each element between provided offsets inside parent.\r\n\t\t// We don't use tree walker or range iterator because we will be removing and merging potentially multiple nodes,\r\n\t\t// so it could get messy. It is safer to it manually in this case.\r\n\t\twhile ( i < endOffset ) {\r\n\t\t\tconst child = parent.getChild( i );\r\n\r\n\t\t\t// Skip all text nodes. There should be no container element's here either.\r\n\t\t\tif ( !child.is( 'attributeElement' ) ) {\r\n\t\t\t\ti++;\r\n\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\t\t\t// (In all examples, assume that `unwrapElement` is `<span class=\"foo\">` element.)\r\n\t\t\t//\r\n\t\t\t// If the child is similar to the given attribute element, unwrap it - it will be completely removed.\r\n\t\t\t//\r\n\t\t\t// <p><span class=\"foo\">abc</span>xyz</p>  -->  <p>abcxyz</p>\r\n\t\t\t//\r\n\t\t\tif ( child.isSimilar( unwrapElement ) ) {\r\n\t\t\t\tconst unwrapped = child.getChildren();\r\n\t\t\t\tconst count = child.childCount;\r\n\r\n\t\t\t\t// Replace wrapper element with its children\r\n\t\t\t\tchild._remove();\r\n\t\t\t\tparent._insertChild( i, unwrapped );\r\n\r\n\t\t\t\tthis._removeFromClonedElementsGroup( child );\r\n\r\n\t\t\t\t// Save start and end position of moved items.\r\n\t\t\t\tunwrapPositions.push(\r\n\t\t\t\t\tnew Position( parent, i ),\r\n\t\t\t\t\tnew Position( parent, i + count )\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Skip elements that were unwrapped. Assuming there won't be another element to unwrap in child elements.\r\n\t\t\t\ti += count;\r\n\t\t\t\tendOffset += count - 1;\r\n\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\t\t\t// If the child is not similar but is an attribute element, try partial unwrapping - remove the same attributes/styles/classes.\r\n\t\t\t// Partial unwrapping will happen only if the elements have the same name.\r\n\t\t\t//\r\n\t\t\t// <p><span class=\"foo bar\">abc</span>xyz</p>  -->  <p><span class=\"bar\">abc</span>xyz</p>\r\n\t\t\t// <p><i class=\"foo\">abc</i>xyz</p>            -->  <p><i class=\"foo\">abc</i>xyz</p>\r\n\t\t\t//\r\n\t\t\tif ( this._unwrapAttributeElement( unwrapElement, child ) ) {\r\n\t\t\t\tunwrapPositions.push(\r\n\t\t\t\t\tnew Position( parent, i ),\r\n\t\t\t\t\tnew Position( parent, i + 1 )\r\n\t\t\t\t);\r\n\r\n\t\t\t\ti++;\r\n\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\t\t\t// If other nested attribute is found, look through it's children for elements to unwrap.\r\n\t\t\t//\r\n\t\t\t// <p><i><span class=\"foo\">abc</span></i><p>  -->  <p><i>abc</i><p>\r\n\t\t\t//\r\n\t\t\tthis._unwrapChildren( child, 0, child.childCount, unwrapElement );\r\n\r\n\t\t\ti++;\r\n\t\t}\r\n\r\n\t\t// Merge at each unwrap.\r\n\t\tlet offsetChange = 0;\r\n\r\n\t\tfor ( const position of unwrapPositions ) {\r\n\t\t\tposition.offset -= offsetChange;\r\n\r\n\t\t\t// Do not merge with elements outside selected children.\r\n\t\t\tif ( position.offset == startOffset || position.offset == endOffset ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tconst newPosition = this.mergeAttributes( position );\r\n\r\n\t\t\t// If nodes were merged - other merge offsets will change.\r\n\t\t\tif ( !newPosition.isEqual( position ) ) {\r\n\t\t\t\toffsetChange++;\r\n\t\t\t\tendOffset--;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn Range._createFromParentsAndOffsets( parent, startOffset, parent, endOffset );\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function for `view.writer.wrap`. Wraps range with provided attribute element.\r\n\t * This method will also merge newly added attribute element with its siblings whenever possible.\r\n\t *\r\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-wrap-invalid-attribute` when passed attribute element is not\r\n\t * an instance of {@link module:engine/view/attributeelement~AttributeElement AttributeElement}.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/view/range~Range} range\r\n\t * @param {module:engine/view/attributeelement~AttributeElement} attribute\r\n\t * @returns {module:engine/view/range~Range} New range after wrapping, spanning over wrapping attribute element.\r\n\t */\r\n\t_wrapRange( range, attribute ) {\r\n\t\t// Break attributes at range start and end.\r\n\t\tconst { start: breakStart, end: breakEnd } = this._breakAttributesRange( range, true );\r\n\t\tconst parentContainer = breakStart.parent;\r\n\r\n\t\t// Wrap all children with attribute.\r\n\t\tconst newRange = this._wrapChildren( parentContainer, breakStart.offset, breakEnd.offset, attribute );\r\n\r\n\t\t// Merge attributes at the both ends and return a new range.\r\n\t\tconst start = this.mergeAttributes( newRange.start );\r\n\r\n\t\t// If start position was merged - move end position back.\r\n\t\tif ( !start.isEqual( newRange.start ) ) {\r\n\t\t\tnewRange.end.offset--;\r\n\t\t}\r\n\t\tconst end = this.mergeAttributes( newRange.end );\r\n\r\n\t\treturn new Range( start, end );\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function for {@link #wrap}. Wraps position with provided attribute element.\r\n\t * This method will also merge newly added attribute element with its siblings whenever possible.\r\n\t *\r\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-wrap-invalid-attribute` when passed attribute element is not\r\n\t * an instance of {@link module:engine/view/attributeelement~AttributeElement AttributeElement}.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/view/position~Position} position\r\n\t * @param {module:engine/view/attributeelement~AttributeElement} attribute\r\n\t * @returns {module:engine/view/position~Position} New position after wrapping.\r\n\t */\r\n\t_wrapPosition( position, attribute ) {\r\n\t\t// Return same position when trying to wrap with attribute similar to position parent.\r\n\t\tif ( attribute.isSimilar( position.parent ) ) {\r\n\t\t\treturn movePositionToTextNode( position.clone() );\r\n\t\t}\r\n\r\n\t\t// When position is inside text node - break it and place new position between two text nodes.\r\n\t\tif ( position.parent.is( 'text' ) ) {\r\n\t\t\tposition = breakTextNode( position );\r\n\t\t}\r\n\r\n\t\t// Create fake element that will represent position, and will not be merged with other attributes.\r\n\t\tconst fakePosition = this.createAttributeElement();\r\n\t\tfakePosition._priority = Number.POSITIVE_INFINITY;\r\n\t\tfakePosition.isSimilar = () => false;\r\n\r\n\t\t// Insert fake element in position location.\r\n\t\tposition.parent._insertChild( position.offset, fakePosition );\r\n\r\n\t\t// Range around inserted fake attribute element.\r\n\t\tconst wrapRange = new Range( position, position.getShiftedBy( 1 ) );\r\n\r\n\t\t// Wrap fake element with attribute (it will also merge if possible).\r\n\t\tthis.wrap( wrapRange, attribute );\r\n\r\n\t\t// Remove fake element and place new position there.\r\n\t\tconst newPosition = new Position( fakePosition.parent, fakePosition.index );\r\n\t\tfakePosition._remove();\r\n\r\n\t\t// If position is placed between text nodes - merge them and return position inside.\r\n\t\tconst nodeBefore = newPosition.nodeBefore;\r\n\t\tconst nodeAfter = newPosition.nodeAfter;\r\n\r\n\t\tif ( nodeBefore instanceof Text && nodeAfter instanceof Text ) {\r\n\t\t\treturn mergeTextNodes( nodeBefore, nodeAfter );\r\n\t\t}\r\n\r\n\t\t// If position is next to text node - move position inside.\r\n\t\treturn movePositionToTextNode( newPosition );\r\n\t}\r\n\r\n\t/**\r\n\t * \tWraps one {@link module:engine/view/attributeelement~AttributeElement AttributeElement} into another by\r\n\t * \tmerging them if possible. When merging is possible - all attributes, styles and classes are moved from wrapper\r\n\t * \telement to element being wrapped.\r\n\t *\r\n\t * \t@private\r\n\t * \t@param {module:engine/view/attributeelement~AttributeElement} wrapper Wrapper AttributeElement.\r\n\t * \t@param {module:engine/view/attributeelement~AttributeElement} toWrap AttributeElement to wrap using wrapper element.\r\n\t * \t@returns {Boolean} Returns `true` if elements are merged.\r\n\t */\r\n\t_wrapAttributeElement( wrapper, toWrap ) {\r\n\t\tif ( !canBeJoined( wrapper, toWrap ) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Can't merge if name or priority differs.\r\n\t\tif ( wrapper.name !== toWrap.name || wrapper.priority !== toWrap.priority ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Check if attributes can be merged.\r\n\t\tfor ( const key of wrapper.getAttributeKeys() ) {\r\n\t\t\t// Classes and styles should be checked separately.\r\n\t\t\tif ( key === 'class' || key === 'style' ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// If some attributes are different we cannot wrap.\r\n\t\t\tif ( toWrap.hasAttribute( key ) && toWrap.getAttribute( key ) !== wrapper.getAttribute( key ) ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Check if styles can be merged.\r\n\t\tfor ( const key of wrapper.getStyleNames() ) {\r\n\t\t\tif ( toWrap.hasStyle( key ) && toWrap.getStyle( key ) !== wrapper.getStyle( key ) ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Move all attributes/classes/styles from wrapper to wrapped AttributeElement.\r\n\t\tfor ( const key of wrapper.getAttributeKeys() ) {\r\n\t\t\t// Classes and styles should be checked separately.\r\n\t\t\tif ( key === 'class' || key === 'style' ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Move only these attributes that are not present - other are similar.\r\n\t\t\tif ( !toWrap.hasAttribute( key ) ) {\r\n\t\t\t\tthis.setAttribute( key, wrapper.getAttribute( key ), toWrap );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor ( const key of wrapper.getStyleNames() ) {\r\n\t\t\tif ( !toWrap.hasStyle( key ) ) {\r\n\t\t\t\tthis.setStyle( key, wrapper.getStyle( key ), toWrap );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor ( const key of wrapper.getClassNames() ) {\r\n\t\t\tif ( !toWrap.hasClass( key ) ) {\r\n\t\t\t\tthis.addClass( key, toWrap );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Unwraps {@link module:engine/view/attributeelement~AttributeElement AttributeElement} from another by removing\r\n\t * corresponding attributes, classes and styles. All attributes, classes and styles from wrapper should be present\r\n\t * inside element being unwrapped.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/view/attributeelement~AttributeElement} wrapper Wrapper AttributeElement.\r\n\t * @param {module:engine/view/attributeelement~AttributeElement} toUnwrap AttributeElement to unwrap using wrapper element.\r\n\t * @returns {Boolean} Returns `true` if elements are unwrapped.\r\n\t **/\r\n\t_unwrapAttributeElement( wrapper, toUnwrap ) {\r\n\t\tif ( !canBeJoined( wrapper, toUnwrap ) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Can't unwrap if name or priority differs.\r\n\t\tif ( wrapper.name !== toUnwrap.name || wrapper.priority !== toUnwrap.priority ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Check if AttributeElement has all wrapper attributes.\r\n\t\tfor ( const key of wrapper.getAttributeKeys() ) {\r\n\t\t\t// Classes and styles should be checked separately.\r\n\t\t\tif ( key === 'class' || key === 'style' ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// If some attributes are missing or different we cannot unwrap.\r\n\t\t\tif ( !toUnwrap.hasAttribute( key ) || toUnwrap.getAttribute( key ) !== wrapper.getAttribute( key ) ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Check if AttributeElement has all wrapper classes.\r\n\t\tif ( !toUnwrap.hasClass( ...wrapper.getClassNames() ) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Check if AttributeElement has all wrapper styles.\r\n\t\tfor ( const key of wrapper.getStyleNames() ) {\r\n\t\t\t// If some styles are missing or different we cannot unwrap.\r\n\t\t\tif ( !toUnwrap.hasStyle( key ) || toUnwrap.getStyle( key ) !== wrapper.getStyle( key ) ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Remove all wrapper's attributes from unwrapped element.\r\n\t\tfor ( const key of wrapper.getAttributeKeys() ) {\r\n\t\t\t// Classes and styles should be checked separately.\r\n\t\t\tif ( key === 'class' || key === 'style' ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tthis.removeAttribute( key, toUnwrap );\r\n\t\t}\r\n\r\n\t\t// Remove all wrapper's classes from unwrapped element.\r\n\t\tthis.removeClass( Array.from( wrapper.getClassNames() ), toUnwrap );\r\n\r\n\t\t// Remove all wrapper's styles from unwrapped element.\r\n\t\tthis.removeStyle( Array.from( wrapper.getStyleNames() ), toUnwrap );\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function used by other `DowncastWriter` methods. Breaks attribute elements at the boundaries of given range.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/view/range~Range} range Range which `start` and `end` positions will be used to break attributes.\r\n\t * @param {Boolean} [forceSplitText=false] If set to `true`, will break text nodes even if they are directly in container element.\r\n\t * This behavior will result in incorrect view state, but is needed by other view writing methods which then fixes view state.\r\n\t * @returns {module:engine/view/range~Range} New range with located at break positions.\r\n\t */\r\n\t_breakAttributesRange( range, forceSplitText = false ) {\r\n\t\tconst rangeStart = range.start;\r\n\t\tconst rangeEnd = range.end;\r\n\r\n\t\tvalidateRangeContainer( range, this.document );\r\n\r\n\t\t// Break at the collapsed position. Return new collapsed range.\r\n\t\tif ( range.isCollapsed ) {\r\n\t\t\tconst position = this._breakAttributes( range.start, forceSplitText );\r\n\r\n\t\t\treturn new Range( position, position );\r\n\t\t}\r\n\r\n\t\tconst breakEnd = this._breakAttributes( rangeEnd, forceSplitText );\r\n\t\tconst count = breakEnd.parent.childCount;\r\n\t\tconst breakStart = this._breakAttributes( rangeStart, forceSplitText );\r\n\r\n\t\t// Calculate new break end offset.\r\n\t\tbreakEnd.offset += breakEnd.parent.childCount - count;\r\n\r\n\t\treturn new Range( breakStart, breakEnd );\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function used by other `DowncastWriter` methods. Breaks attribute elements at given position.\r\n\t *\r\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-cannot-break-empty-element` when break position\r\n\t * is placed inside {@link module:engine/view/emptyelement~EmptyElement EmptyElement}.\r\n\t *\r\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-cannot-break-ui-element` when break position\r\n\t * is placed inside {@link module:engine/view/uielement~UIElement UIElement}.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/view/position~Position} position Position where to break attributes.\r\n\t * @param {Boolean} [forceSplitText=false] If set to `true`, will break text nodes even if they are directly in container element.\r\n\t * This behavior will result in incorrect view state, but is needed by other view writing methods which then fixes view state.\r\n\t * @returns {module:engine/view/position~Position} New position after breaking the attributes.\r\n\t */\r\n\t_breakAttributes( position, forceSplitText = false ) {\r\n\t\tconst positionOffset = position.offset;\r\n\t\tconst positionParent = position.parent;\r\n\r\n\t\t// If position is placed inside EmptyElement - throw an exception as we cannot break inside.\r\n\t\tif ( position.parent.is( 'emptyElement' ) ) {\r\n\t\t\t/**\r\n\t\t\t * Cannot break inside EmptyElement instance.\r\n\t\t\t *\r\n\t\t\t * @error view-writer-cannot-break-empty-element\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'view-writer-cannot-break-empty-element', this.document );\r\n\t\t}\r\n\r\n\t\t// If position is placed inside UIElement - throw an exception as we cannot break inside.\r\n\t\tif ( position.parent.is( 'uiElement' ) ) {\r\n\t\t\t/**\r\n\t\t\t * Cannot break inside UIElement instance.\r\n\t\t\t *\r\n\t\t\t * @error view-writer-cannot-break-ui-element\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'view-writer-cannot-break-ui-element', this.document );\r\n\t\t}\r\n\r\n\t\t// There are no attributes to break and text nodes breaking is not forced.\r\n\t\tif ( !forceSplitText && positionParent.is( 'text' ) && isContainerOrFragment( positionParent.parent ) ) {\r\n\t\t\treturn position.clone();\r\n\t\t}\r\n\r\n\t\t// Position's parent is container, so no attributes to break.\r\n\t\tif ( isContainerOrFragment( positionParent ) ) {\r\n\t\t\treturn position.clone();\r\n\t\t}\r\n\r\n\t\t// Break text and start again in new position.\r\n\t\tif ( positionParent.is( 'text' ) ) {\r\n\t\t\treturn this._breakAttributes( breakTextNode( position ), forceSplitText );\r\n\t\t}\r\n\r\n\t\tconst length = positionParent.childCount;\r\n\r\n\t\t// <p>foo<b><u>bar{}</u></b></p>\r\n\t\t// <p>foo<b><u>bar</u>[]</b></p>\r\n\t\t// <p>foo<b><u>bar</u></b>[]</p>\r\n\t\tif ( positionOffset == length ) {\r\n\t\t\tconst newPosition = new Position( positionParent.parent, positionParent.index + 1 );\r\n\r\n\t\t\treturn this._breakAttributes( newPosition, forceSplitText );\r\n\t\t} else {\r\n\t\t\t// <p>foo<b><u>{}bar</u></b></p>\r\n\t\t\t// <p>foo<b>[]<u>bar</u></b></p>\r\n\t\t\t// <p>foo{}<b><u>bar</u></b></p>\r\n\t\t\tif ( positionOffset === 0 ) {\r\n\t\t\t\tconst newPosition = new Position( positionParent.parent, positionParent.index );\r\n\r\n\t\t\t\treturn this._breakAttributes( newPosition, forceSplitText );\r\n\t\t\t}\r\n\t\t\t// <p>foo<b><u>b{}ar</u></b></p>\r\n\t\t\t// <p>foo<b><u>b[]ar</u></b></p>\r\n\t\t\t// <p>foo<b><u>b</u>[]<u>ar</u></b></p>\r\n\t\t\t// <p>foo<b><u>b</u></b>[]<b><u>ar</u></b></p>\r\n\t\t\telse {\r\n\t\t\t\tconst offsetAfter = positionParent.index + 1;\r\n\r\n\t\t\t\t// Break element.\r\n\t\t\t\tconst clonedNode = positionParent._clone();\r\n\r\n\t\t\t\t// Insert cloned node to position's parent node.\r\n\t\t\t\tpositionParent.parent._insertChild( offsetAfter, clonedNode );\r\n\t\t\t\tthis._addToClonedElementsGroup( clonedNode );\r\n\r\n\t\t\t\t// Get nodes to move.\r\n\t\t\t\tconst count = positionParent.childCount - positionOffset;\r\n\t\t\t\tconst nodesToMove = positionParent._removeChildren( positionOffset, count );\r\n\r\n\t\t\t\t// Move nodes to cloned node.\r\n\t\t\t\tclonedNode._appendChild( nodesToMove );\r\n\r\n\t\t\t\t// Create new position to work on.\r\n\t\t\t\tconst newPosition = new Position( positionParent.parent, offsetAfter );\r\n\r\n\t\t\t\treturn this._breakAttributes( newPosition, forceSplitText );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Stores the information that an {@link module:engine/view/attributeelement~AttributeElement attribute element} was\r\n\t * added to the tree. Saves the reference to the group in the given element and updates the group, so other elements\r\n\t * from the group now keep a reference to the given attribute element.\r\n\t *\r\n\t * The clones group can be obtained using {@link module:engine/view/attributeelement~AttributeElement#getElementsWithSameId}.\r\n\t *\r\n\t * Does nothing if added element has no {@link module:engine/view/attributeelement~AttributeElement#id id}.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/view/attributeelement~AttributeElement} element Attribute element to save.\r\n\t */\r\n\t_addToClonedElementsGroup( element ) {\r\n\t\t// Add only if the element is in document tree.\r\n\t\tif ( !element.root.is( 'rootElement' ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Traverse the element's children recursively to find other attribute elements that also might got inserted.\r\n\t\t// The loop is at the beginning so we can make fast returns later in the code.\r\n\t\tif ( element.is( 'element' ) ) {\r\n\t\t\tfor ( const child of element.getChildren() ) {\r\n\t\t\t\tthis._addToClonedElementsGroup( child );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst id = element.id;\r\n\r\n\t\tif ( !id ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet group = this._cloneGroups.get( id );\r\n\r\n\t\tif ( !group ) {\r\n\t\t\tgroup = new Set();\r\n\t\t\tthis._cloneGroups.set( id, group );\r\n\t\t}\r\n\r\n\t\tgroup.add( element );\r\n\t\telement._clonesGroup = group;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all the information about the given {@link module:engine/view/attributeelement~AttributeElement attribute element}\r\n\t * from its clones group.\r\n\t *\r\n\t * Keep in mind, that the element will still keep a reference to the group (but the group will not keep a reference to it).\r\n\t * This allows to reference the whole group even if the element was already removed from the tree.\r\n\t *\r\n\t * Does nothing if the element has no {@link module:engine/view/attributeelement~AttributeElement#id id}.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/view/attributeelement~AttributeElement} element Attribute element to remove.\r\n\t */\r\n\t_removeFromClonedElementsGroup( element ) {\r\n\t\t// Traverse the element's children recursively to find other attribute elements that also got removed.\r\n\t\t// The loop is at the beginning so we can make fast returns later in the code.\r\n\t\tif ( element.is( 'element' ) ) {\r\n\t\t\tfor ( const child of element.getChildren() ) {\r\n\t\t\t\tthis._removeFromClonedElementsGroup( child );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst id = element.id;\r\n\r\n\t\tif ( !id ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst group = this._cloneGroups.get( id );\r\n\r\n\t\tif ( !group ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tgroup.delete( element );\r\n\t\t// Not removing group from element on purpose!\r\n\t\t// If other parts of code have reference to this element, they will be able to get references to other elements from the group.\r\n\t}\r\n}\r\n\r\n// Helper function for `view.writer.wrap`. Checks if given element has any children that are not ui elements.\r\nfunction _hasNonUiChildren( parent ) {\r\n\treturn Array.from( parent.getChildren() ).some( child => !child.is( 'uiElement' ) );\r\n}\r\n\r\n/**\r\n * Attribute element need to be instance of attribute element.\r\n *\r\n * @error view-writer-wrap-invalid-attribute\r\n */\r\n\r\n// Returns first parent container of specified {@link module:engine/view/position~Position Position}.\r\n// Position's parent node is checked as first, then next parents are checked.\r\n// Note that {@link module:engine/view/documentfragment~DocumentFragment DocumentFragment} is treated like a container.\r\n//\r\n// @param {module:engine/view/position~Position} position Position used as a start point to locate parent container.\r\n// @returns {module:engine/view/containerelement~ContainerElement|module:engine/view/documentfragment~DocumentFragment|undefined}\r\n// Parent container element or `undefined` if container is not found.\r\nfunction getParentContainer( position ) {\r\n\tlet parent = position.parent;\r\n\r\n\twhile ( !isContainerOrFragment( parent ) ) {\r\n\t\tif ( !parent ) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\tparent = parent.parent;\r\n\t}\r\n\r\n\treturn parent;\r\n}\r\n\r\n// Checks if first {@link module:engine/view/attributeelement~AttributeElement AttributeElement} provided to the function\r\n// can be wrapped otuside second element. It is done by comparing elements'\r\n// {@link module:engine/view/attributeelement~AttributeElement#priority priorities}, if both have same priority\r\n// {@link module:engine/view/element~Element#getIdentity identities} are compared.\r\n//\r\n// @param {module:engine/view/attributeelement~AttributeElement} a\r\n// @param {module:engine/view/attributeelement~AttributeElement} b\r\n// @returns {Boolean}\r\nfunction shouldABeOutsideB( a, b ) {\r\n\tif ( a.priority < b.priority ) {\r\n\t\treturn true;\r\n\t} else if ( a.priority > b.priority ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// When priorities are equal and names are different - use identities.\r\n\treturn a.getIdentity() < b.getIdentity();\r\n}\r\n\r\n// Returns new position that is moved to near text node. Returns same position if there is no text node before of after\r\n// specified position.\r\n//\r\n//\t\t<p>foo[]</p>  ->  <p>foo{}</p>\r\n//\t\t<p>[]foo</p>  ->  <p>{}foo</p>\r\n//\r\n// @param {module:engine/view/position~Position} position\r\n// @returns {module:engine/view/position~Position} Position located inside text node or same position if there is no text nodes\r\n// before or after position location.\r\nfunction movePositionToTextNode( position ) {\r\n\tconst nodeBefore = position.nodeBefore;\r\n\r\n\tif ( nodeBefore && nodeBefore.is( 'text' ) ) {\r\n\t\treturn new Position( nodeBefore, nodeBefore.data.length );\r\n\t}\r\n\r\n\tconst nodeAfter = position.nodeAfter;\r\n\r\n\tif ( nodeAfter && nodeAfter.is( 'text' ) ) {\r\n\t\treturn new Position( nodeAfter, 0 );\r\n\t}\r\n\r\n\treturn position;\r\n}\r\n\r\n// Breaks text node into two text nodes when possible.\r\n//\r\n//\t\t<p>foo{}bar</p> -> <p>foo[]bar</p>\r\n//\t\t<p>{}foobar</p> -> <p>[]foobar</p>\r\n//\t\t<p>foobar{}</p> -> <p>foobar[]</p>\r\n//\r\n// @param {module:engine/view/position~Position} position Position that need to be placed inside text node.\r\n// @returns {module:engine/view/position~Position} New position after breaking text node.\r\nfunction breakTextNode( position ) {\r\n\tif ( position.offset == position.parent.data.length ) {\r\n\t\treturn new Position( position.parent.parent, position.parent.index + 1 );\r\n\t}\r\n\r\n\tif ( position.offset === 0 ) {\r\n\t\treturn new Position( position.parent.parent, position.parent.index );\r\n\t}\r\n\r\n\t// Get part of the text that need to be moved.\r\n\tconst textToMove = position.parent.data.slice( position.offset );\r\n\r\n\t// Leave rest of the text in position's parent.\r\n\tposition.parent._data = position.parent.data.slice( 0, position.offset );\r\n\r\n\t// Insert new text node after position's parent text node.\r\n\tposition.parent.parent._insertChild( position.parent.index + 1, new Text( position.root.document, textToMove ) );\r\n\r\n\t// Return new position between two newly created text nodes.\r\n\treturn new Position( position.parent.parent, position.parent.index + 1 );\r\n}\r\n\r\n// Merges two text nodes into first node. Removes second node and returns merge position.\r\n//\r\n// @param {module:engine/view/text~Text} t1 First text node to merge. Data from second text node will be moved at the end of\r\n// this text node.\r\n// @param {module:engine/view/text~Text} t2 Second text node to merge. This node will be removed after merging.\r\n// @returns {module:engine/view/position~Position} Position after merging text nodes.\r\nfunction mergeTextNodes( t1, t2 ) {\r\n\t// Merge text data into first text node and remove second one.\r\n\tconst nodeBeforeLength = t1.data.length;\r\n\tt1._data += t2.data;\r\n\tt2._remove();\r\n\r\n\treturn new Position( t1, nodeBeforeLength );\r\n}\r\n\r\n// Checks if provided nodes are valid to insert. Checks if each node is an instance of\r\n// {@link module:engine/view/text~Text Text} or {@link module:engine/view/attributeelement~AttributeElement AttributeElement},\r\n// {@link module:engine/view/containerelement~ContainerElement ContainerElement},\r\n// {@link module:engine/view/emptyelement~EmptyElement EmptyElement} or\r\n// {@link module:engine/view/uielement~UIElement UIElement}.\r\n//\r\n// Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-insert-invalid-node` when nodes to insert\r\n// contains instances that are not {@link module:engine/view/text~Text Texts},\r\n// {@link module:engine/view/emptyelement~EmptyElement EmptyElements},\r\n// {@link module:engine/view/uielement~UIElement UIElements},\r\n// {@link module:engine/view/attributeelement~AttributeElement AttributeElements} or\r\n// {@link module:engine/view/containerelement~ContainerElement ContainerElements}.\r\n//\r\n// @param Iterable.<module:engine/view/text~Text|module:engine/view/attributeelement~AttributeElement\r\n// |module:engine/view/containerelement~ContainerElement> nodes\r\n// @param {Object} errorContext\r\nfunction validateNodesToInsert( nodes, errorContext ) {\r\n\tfor ( const node of nodes ) {\r\n\t\tif ( !validNodesToInsert.some( ( validNode => node instanceof validNode ) ) ) { // eslint-disable-line no-use-before-define\r\n\t\t\t/**\r\n\t\t\t * Inserted nodes should be valid to insert. of {@link module:engine/view/attributeelement~AttributeElement AttributeElement},\r\n\t\t\t * {@link module:engine/view/containerelement~ContainerElement ContainerElement},\r\n\t\t\t * {@link module:engine/view/emptyelement~EmptyElement EmptyElement},\r\n\t\t\t * {@link module:engine/view/uielement~UIElement UIElement}, {@link module:engine/view/text~Text Text}.\r\n\t\t\t *\r\n\t\t\t * @error view-writer-insert-invalid-node\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'view-writer-insert-invalid-node', errorContext );\r\n\t\t}\r\n\r\n\t\tif ( !node.is( 'text' ) ) {\r\n\t\t\tvalidateNodesToInsert( node.getChildren(), errorContext );\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst validNodesToInsert = [ Text, AttributeElement, ContainerElement, EmptyElement, UIElement ];\r\n\r\n// Checks if node is ContainerElement or DocumentFragment, because in most cases they should be treated the same way.\r\n//\r\n// @param {module:engine/view/node~Node} node\r\n// @returns {Boolean} Returns `true` if node is instance of ContainerElement or DocumentFragment.\r\nfunction isContainerOrFragment( node ) {\r\n\treturn node && ( node.is( 'containerElement' ) || node.is( 'documentFragment' ) );\r\n}\r\n\r\n// Checks if {@link module:engine/view/range~Range#start range start} and {@link module:engine/view/range~Range#end range end} are placed\r\n// inside same {@link module:engine/view/containerelement~ContainerElement container element}.\r\n// Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when validation fails.\r\n//\r\n// @param {module:engine/view/range~Range} range\r\n// @param {Object} errorContext\r\nfunction validateRangeContainer( range, errorContext ) {\r\n\tconst startContainer = getParentContainer( range.start );\r\n\tconst endContainer = getParentContainer( range.end );\r\n\r\n\tif ( !startContainer || !endContainer || startContainer !== endContainer ) {\r\n\t\t/**\r\n\t\t * Range container is invalid. This can happen if {@link module:engine/view/range~Range#start range start} and\r\n\t\t * {@link module:engine/view/range~Range#end range end} positions are not placed inside same container or\r\n\t\t * parent container for these positions cannot be found.\r\n\t\t *\r\n\t\t * @error view-writer-invalid-range-container\r\n\t\t */\r\n\r\n\t\tthrow new CKEditorError( 'view-writer-invalid-range-container', errorContext );\r\n\t}\r\n}\r\n\r\n// Checks if two attribute elements can be joined together. Elements can be joined together if, and only if\r\n// they do not have ids specified.\r\n//\r\n// @private\r\n// @param {module:engine/view/element~Element} a\r\n// @param {module:engine/view/element~Element} b\r\n// @returns {Boolean}\r\nfunction canBeJoined( a, b ) {\r\n\treturn a.id === null && b.id === null;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/view/editableelement\r\n */\r\n\r\nimport ContainerElement from './containerelement';\r\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\r\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\r\n\r\n/**\r\n * Editable element which can be a {@link module:engine/view/rooteditableelement~RootEditableElement root}\r\n * or nested editable area in the editor.\r\n *\r\n * Editable is automatically read-only when its {@link module:engine/view/document~Document Document} is read-only.\r\n *\r\n * The constructor of this class shouldn't be used directly. To create new `EditableElement` use the\r\n * {@link module:engine/view/downcastwriter~DowncastWriter#createEditableElement `downcastWriter#createEditableElement()`} method.\r\n *\r\n * @extends module:engine/view/containerelement~ContainerElement\r\n * @mixes module:utils/observablemixin~ObservableMixin\r\n */\r\nexport default class EditableElement extends ContainerElement {\r\n\t/**\r\n\t * Creates an editable element.\r\n\t *\r\n\t * @see module:engine/view/downcastwriter~DowncastWriter#createEditableElement\r\n\t * @protected\r\n\t */\r\n\tconstructor( document, name, attrs, children ) {\r\n\t\tsuper( document, name, attrs, children );\r\n\r\n\t\t/**\r\n\t\t * Whether the editable is in read-write or read-only mode.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @member {Boolean} module:engine/view/editableelement~EditableElement#isReadOnly\r\n\t\t */\r\n\t\tthis.set( 'isReadOnly', false );\r\n\r\n\t\t/**\r\n\t\t * Whether the editable is focused.\r\n\t\t *\r\n\t\t * This property updates when {@link module:engine/view/document~Document#isFocused document.isFocused} or view\r\n\t\t * selection is changed.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @observable\r\n\t\t * @member {Boolean} module:engine/view/editableelement~EditableElement#isFocused\r\n\t\t */\r\n\t\tthis.set( 'isFocused', false );\r\n\r\n\t\tthis.bind( 'isReadOnly' ).to( document );\r\n\r\n\t\tthis.bind( 'isFocused' ).to(\r\n\t\t\tdocument,\r\n\t\t\t'isFocused',\r\n\t\t\tisFocused => isFocused && document.selection.editableElement == this\r\n\t\t);\r\n\r\n\t\t// Update focus state based on selection changes.\r\n\t\tthis.listenTo( document.selection, 'change', () => {\r\n\t\t\tthis.isFocused = document.isFocused && document.selection.editableElement == this;\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this object is of the given.\r\n\t *\r\n\t *\t\teditableElement.is( 'editableElement' ); // -> true\r\n\t *\t\teditableElement.is( 'element' ); // -> true\r\n\t *\t\teditableElement.is( 'node' ); // -> true\r\n\t *\t\teditableElement.is( 'view:editableElement' ); // -> true\r\n\t *\t\teditableElement.is( 'view:element' ); // -> true\r\n\t *\t\teditableElement.is( 'view:node' ); // -> true\r\n\t *\r\n\t *\t\teditableElement.is( 'model:element' ); // -> false\r\n\t *\t\teditableElement.is( 'documentFragment' ); // -> false\r\n\t *\r\n\t * Assuming that the object being checked is an editbale element, you can also check its\r\n\t * {@link module:engine/view/editableelement~EditableElement#name name}:\r\n\t *\r\n\t *\t\teditableElement.is( 'div' ); // -> true if this is a div element\r\n\t *\t\teditableElement.is( 'editableElement', 'div' ); // -> same as above\r\n\t *\t\ttext.is( 'div' ); -> false\r\n\t *\r\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\r\n\t *\r\n\t * @param {String} type Type to check when `name` parameter is present.\r\n\t * Otherwise, it acts like the `name` parameter.\r\n\t * @param {String} [name] Element name.\r\n\t * @returns {Boolean}\r\n\t */\r\n\tis( type, name = null ) {\r\n\t\tconst cutType = type && type.replace( /^view:/, '' );\r\n\t\tif ( !name ) {\r\n\t\t\treturn cutType == 'editableElement' || super.is( type );\r\n\t\t} else {\r\n\t\t\treturn ( cutType == 'editableElement' && name == this.name ) || super.is( type, name );\r\n\t\t}\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tthis.stopListening();\r\n\t}\r\n}\r\n\r\nmix( EditableElement, ObservableMixin );\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/view/element\r\n */\r\n\r\nimport Node from './node';\r\nimport Text from './text';\r\nimport TextProxy from './textproxy';\r\nimport toMap from '@ckeditor/ckeditor5-utils/src/tomap';\r\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\r\nimport Matcher from './matcher';\r\nimport StylesMap from './stylesmap';\r\n\r\n// @if CK_DEBUG_ENGINE // const { convertMapToTags } = require( '../dev-utils/utils' );\r\n\r\n/**\r\n * View element.\r\n *\r\n * The editing engine does not define a fixed semantics of its elements (it is \"DTD-free\").\r\n * This is why the type of the {@link module:engine/view/element~Element} need to\r\n * be defined by the feature developer. When creating an element you should use one of the following methods:\r\n *\r\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createContainerElement `downcastWriter#createContainerElement()`}\r\n * in order to create a {@link module:engine/view/containerelement~ContainerElement},\r\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createAttributeElement `downcastWriter#createAttributeElement()`}\r\n * in order to create a {@link module:engine/view/attributeelement~AttributeElement},\r\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createEmptyElement `downcastWriter#createEmptyElement()`}\r\n * in order to create a {@link module:engine/view/emptyelement~EmptyElement}.\r\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createUIElement `downcastWriter#createUIElement()`}\r\n * in order to create a {@link module:engine/view/uielement~UIElement}.\r\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createEditableElement `downcastWriter#createEditableElement()`}\r\n * in order to create a {@link module:engine/view/editableelement~EditableElement}.\r\n *\r\n * Note that for view elements which are not created from the model, like elements from mutations, paste or\r\n * {@link module:engine/controller/datacontroller~DataController#set data.set} it is not possible to define the type of the element.\r\n * In such cases the {@link module:engine/view/upcastwriter~UpcastWriter#createElement `UpcastWriter#createElement()`} method\r\n * should be used to create generic view elements.\r\n *\r\n * @extends module:engine/view/node~Node\r\n */\r\nexport default class Element extends Node {\r\n\t/**\r\n\t * Creates a view element.\r\n\t *\r\n\t * Attributes can be passed in various formats:\r\n\t *\r\n\t *\t\tnew Element( viewDocument, 'div', { class: 'editor', contentEditable: 'true' } ); // object\r\n\t *\t\tnew Element( viewDocument, 'div', [ [ 'class', 'editor' ], [ 'contentEditable', 'true' ] ] ); // map-like iterator\r\n\t *\t\tnew Element( viewDocument, 'div', mapOfAttributes ); // map\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/view/document~Document} document The document instance to which this element belongs.\r\n\t * @param {String} name Node name.\r\n\t * @param {Object|Iterable} [attrs] Collection of attributes.\r\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\r\n\t * A list of nodes to be inserted into created element.\r\n\t */\r\n\tconstructor( document, name, attrs, children ) {\r\n\t\tsuper( document );\r\n\r\n\t\t/**\r\n\t\t * Name of the element.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {String}\r\n\t\t */\r\n\t\tthis.name = name;\r\n\r\n\t\t/**\r\n\t\t * Map of attributes, where attributes names are keys and attributes values are values.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @member {Map} #_attrs\r\n\t\t */\r\n\t\tthis._attrs = parseAttributes( attrs );\r\n\r\n\t\t/**\r\n\t\t * Array of child nodes.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @member {Array.<module:engine/view/node~Node>}\r\n\t\t */\r\n\t\tthis._children = [];\r\n\r\n\t\tif ( children ) {\r\n\t\t\tthis._insertChild( 0, children );\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Set of classes associated with element instance.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @member {Set}\r\n\t\t */\r\n\t\tthis._classes = new Set();\r\n\r\n\t\tif ( this._attrs.has( 'class' ) ) {\r\n\t\t\t// Remove class attribute and handle it by class set.\r\n\t\t\tconst classString = this._attrs.get( 'class' );\r\n\t\t\tparseClasses( this._classes, classString );\r\n\t\t\tthis._attrs.delete( 'class' );\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Normalized styles.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @member {module:engine/view/stylesmap~StylesMap} module:engine/view/element~Element#_styles\r\n\t\t */\r\n\t\tthis._styles = new StylesMap( this.document.stylesProcessor );\r\n\r\n\t\tif ( this._attrs.has( 'style' ) ) {\r\n\t\t\t// Remove style attribute and handle it by styles map.\r\n\t\t\tthis._styles.setTo( this._attrs.get( 'style' ) );\r\n\r\n\t\t\tthis._attrs.delete( 'style' );\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Map of custom properties.\r\n\t\t * Custom properties can be added to element instance, will be cloned but not rendered into DOM.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @member {Map}\r\n\t\t */\r\n\t\tthis._customProperties = new Map();\r\n\t}\r\n\r\n\t/**\r\n\t * Number of element's children.\r\n\t *\r\n\t * @readonly\r\n\t * @type {Number}\r\n\t */\r\n\tget childCount() {\r\n\t\treturn this._children.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Is `true` if there are no nodes inside this element, `false` otherwise.\r\n\t *\r\n\t * @readonly\r\n\t * @type {Boolean}\r\n\t */\r\n\tget isEmpty() {\r\n\t\treturn this._children.length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this object is of the given.\r\n\t *\r\n\t *\t\telement.is( 'element' ); // -> true\r\n\t *\t\telement.is( 'node' ); // -> true\r\n\t *\t\telement.is( 'view:element' ); // -> true\r\n\t *\t\telement.is( 'view:node' ); // -> true\r\n\t *\r\n\t *\t\telement.is( 'model:element' ); // -> false\r\n\t *\t\telement.is( 'documentSelection' ); // -> false\r\n\t *\r\n\t * Assuming that the object being checked is an element, you can also check its\r\n\t * {@link module:engine/view/element~Element#name name}:\r\n\t *\r\n\t *\t\telement.is( 'img' ); // -> true if this is an <img> element\r\n\t *\t\telement.is( 'element', 'img' ); // -> same as above\r\n\t *\t\ttext.is( 'img' ); -> false\r\n\t *\r\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\r\n\t *\r\n\t * @param {String} type Type to check when `name` parameter is present.\r\n\t * Otherwise, it acts like the `name` parameter.\r\n\t * @param {String} [name] Element name.\r\n\t * @returns {Boolean}\r\n\t */\r\n\tis( type, name = null ) {\r\n\t\tconst cutType = type.replace( /^view:/, '' );\r\n\t\tif ( !name ) {\r\n\t\t\treturn cutType == 'element' || cutType == this.name || super.is( type );\r\n\t\t} else {\r\n\t\t\treturn cutType == 'element' && name == this.name;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Gets child at the given index.\r\n\t *\r\n\t * @param {Number} index Index of child.\r\n\t * @returns {module:engine/view/node~Node} Child node.\r\n\t */\r\n\tgetChild( index ) {\r\n\t\treturn this._children[ index ];\r\n\t}\r\n\r\n\t/**\r\n\t * Gets index of the given child node. Returns `-1` if child node is not found.\r\n\t *\r\n\t * @param {module:engine/view/node~Node} node Child node.\r\n\t * @returns {Number} Index of the child node.\r\n\t */\r\n\tgetChildIndex( node ) {\r\n\t\treturn this._children.indexOf( node );\r\n\t}\r\n\r\n\t/**\r\n\t * Gets child nodes iterator.\r\n\t *\r\n\t * @returns {Iterable.<module:engine/view/node~Node>} Child nodes iterator.\r\n\t */\r\n\tgetChildren() {\r\n\t\treturn this._children[ Symbol.iterator ]();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an iterator that contains the keys for attributes. Order of inserting attributes is not preserved.\r\n\t *\r\n\t * @returns {Iterable.<String>} Keys for attributes.\r\n\t */\r\n\t* getAttributeKeys() {\r\n\t\tif ( this._classes.size > 0 ) {\r\n\t\t\tyield 'class';\r\n\t\t}\r\n\r\n\t\tif ( !this._styles.isEmpty ) {\r\n\t\t\tyield 'style';\r\n\t\t}\r\n\r\n\t\tyield* this._attrs.keys();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns iterator that iterates over this element's attributes.\r\n\t *\r\n\t * Attributes are returned as arrays containing two items. First one is attribute key and second is attribute value.\r\n\t * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\r\n\t *\r\n\t * @returns {Iterable.<*>}\r\n\t */\r\n\t* getAttributes() {\r\n\t\tyield* this._attrs.entries();\r\n\r\n\t\tif ( this._classes.size > 0 ) {\r\n\t\t\tyield [ 'class', this.getAttribute( 'class' ) ];\r\n\t\t}\r\n\r\n\t\tif ( !this._styles.isEmpty ) {\r\n\t\t\tyield [ 'style', this.getAttribute( 'style' ) ];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Gets attribute by key. If attribute is not present - returns undefined.\r\n\t *\r\n\t * @param {String} key Attribute key.\r\n\t * @returns {String|undefined} Attribute value.\r\n\t */\r\n\tgetAttribute( key ) {\r\n\t\tif ( key == 'class' ) {\r\n\t\t\tif ( this._classes.size > 0 ) {\r\n\t\t\t\treturn [ ...this._classes ].join( ' ' );\r\n\t\t\t}\r\n\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\tif ( key == 'style' ) {\r\n\t\t\tconst inlineStyle = this._styles.toString();\r\n\r\n\t\t\treturn inlineStyle == '' ? undefined : inlineStyle;\r\n\t\t}\r\n\r\n\t\treturn this._attrs.get( key );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a boolean indicating whether an attribute with the specified key exists in the element.\r\n\t *\r\n\t * @param {String} key Attribute key.\r\n\t * @returns {Boolean} `true` if attribute with the specified key exists in the element, false otherwise.\r\n\t */\r\n\thasAttribute( key ) {\r\n\t\tif ( key == 'class' ) {\r\n\t\t\treturn this._classes.size > 0;\r\n\t\t}\r\n\r\n\t\tif ( key == 'style' ) {\r\n\t\t\treturn !this._styles.isEmpty;\r\n\t\t}\r\n\r\n\t\treturn this._attrs.has( key );\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this element is similar to other element.\r\n\t * Both elements should have the same name and attributes to be considered as similar. Two similar elements\r\n\t * can contain different set of children nodes.\r\n\t *\r\n\t * @param {module:engine/view/element~Element} otherElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tisSimilar( otherElement ) {\r\n\t\tif ( !( otherElement instanceof Element ) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// If exactly the same Element is provided - return true immediately.\r\n\t\tif ( this === otherElement ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Check element name.\r\n\t\tif ( this.name != otherElement.name ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Check number of attributes, classes and styles.\r\n\t\tif ( this._attrs.size !== otherElement._attrs.size || this._classes.size !== otherElement._classes.size ||\r\n\t\t\tthis._styles.size !== otherElement._styles.size ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Check if attributes are the same.\r\n\t\tfor ( const [ key, value ] of this._attrs ) {\r\n\t\t\tif ( !otherElement._attrs.has( key ) || otherElement._attrs.get( key ) !== value ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Check if classes are the same.\r\n\t\tfor ( const className of this._classes ) {\r\n\t\t\tif ( !otherElement._classes.has( className ) ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Check if styles are the same.\r\n\t\tfor ( const property of this._styles.getStyleNames() ) {\r\n\t\t\tif (\r\n\t\t\t\t!otherElement._styles.has( property ) ||\r\n\t\t\t\totherElement._styles.getAsString( property ) !== this._styles.getAsString( property )\r\n\t\t\t) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if class is present.\r\n\t * If more then one class is provided - returns true only when all classes are present.\r\n\t *\r\n\t *\t\telement.hasClass( 'foo' ); // Returns true if 'foo' class is present.\r\n\t *\t\telement.hasClass( 'foo', 'bar' ); // Returns true if 'foo' and 'bar' classes are both present.\r\n\t *\r\n\t * @param {...String} className\r\n\t */\r\n\thasClass( ...className ) {\r\n\t\tfor ( const name of className ) {\r\n\t\t\tif ( !this._classes.has( name ) ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns iterator that contains all class names.\r\n\t *\r\n\t * @returns {Iterable.<String>}\r\n\t */\r\n\tgetClassNames() {\r\n\t\treturn this._classes.keys();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns style value for the given property mae.\r\n\t * If the style does not exist `undefined` is returned.\r\n\t *\r\n\t * **Note**: This method can work with normalized style names if\r\n\t * {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules a particular style processor rule is enabled}.\r\n\t * See {@link module:engine/view/stylesmap~StylesMap#getAsString `StylesMap#getAsString()`} for details.\r\n\t *\r\n\t * For an element with style set to `'margin:1px'`:\r\n\t *\r\n\t *\t\t// Enable 'margin' shorthand processing:\r\n\t *\t\teditor.data.addStyleProcessorRules( addMarginRules );\r\n\t *\r\n\t *\t\tconst element = view.change( writer => {\r\n\t *\t\t\tconst element = writer.createElement();\r\n\t *\t\t\twriter.setStyle( 'margin', '1px' );\r\n\t *\t\t\twriter.setStyle( 'margin-bottom', '3em' );\r\n\t *\r\n\t *\t\t\treturn element;\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\telement.getStyle( 'margin' ); // -> 'margin: 1px 1px 3em;'\r\n\t *\r\n\t * @param {String} property\r\n\t * @returns {String|undefined}\r\n\t */\r\n\tgetStyle( property ) {\r\n\t\treturn this._styles.getAsString( property );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a normalized style object or single style value.\r\n\t *\r\n\t * For an element with style set to: margin:1px 2px 3em;\r\n\t *\r\n\t *\t\telement.getNormalizedStyle( 'margin' ) );\r\n\t *\r\n\t * will return:\r\n\t *\r\n\t *\t\t{\r\n\t *\t\t\ttop: '1px',\r\n\t *\t\t\tright: '2px',\r\n\t *\t\t\tbottom: '3em',\r\n\t *\t\t\tleft: '2px'    // a normalized value from margin shorthand\r\n\t *\t\t}\r\n\t *\r\n\t * and reading for single style value:\r\n\t *\r\n\t *\t\tstyles.getNormalizedStyle( 'margin-left' );\r\n\t *\r\n\t * Will return a `2px` string.\r\n\t *\r\n\t * **Note**: This method will return normalized values only if\r\n\t * {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules a particular style processor rule is enabled}.\r\n\t * See {@link module:engine/view/stylesmap~StylesMap#getNormalized `StylesMap#getNormalized()`} for details.\r\n\t *\r\n\t *\r\n\t * @param {String} property Name of CSS property\r\n\t * @returns {Object|String|undefined}\r\n\t */\r\n\tgetNormalizedStyle( property ) {\r\n\t\treturn this._styles.getNormalized( property );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns iterator that contains all style names.\r\n\t *\r\n\t * @returns {Iterable.<String>}\r\n\t */\r\n\tgetStyleNames() {\r\n\t\treturn this._styles.getStyleNames();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if style keys are present.\r\n\t * If more then one style property is provided - returns true only when all properties are present.\r\n\t *\r\n\t *\t\telement.hasStyle( 'color' ); // Returns true if 'border-top' style is present.\r\n\t *\t\telement.hasStyle( 'color', 'border-top' ); // Returns true if 'color' and 'border-top' styles are both present.\r\n\t *\r\n\t * @param {...String} property\r\n\t */\r\n\thasStyle( ...property ) {\r\n\t\tfor ( const name of property ) {\r\n\t\t\tif ( !this._styles.has( name ) ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns ancestor element that match specified pattern.\r\n\t * Provided patterns should be compatible with {@link module:engine/view/matcher~Matcher Matcher} as it is used internally.\r\n\t *\r\n\t * @see module:engine/view/matcher~Matcher\r\n\t * @param {Object|String|RegExp|Function} patterns Patterns used to match correct ancestor.\r\n\t * See {@link module:engine/view/matcher~Matcher}.\r\n\t * @returns {module:engine/view/element~Element|null} Found element or `null` if no matching ancestor was found.\r\n\t */\r\n\tfindAncestor( ...patterns ) {\r\n\t\tconst matcher = new Matcher( ...patterns );\r\n\t\tlet parent = this.parent;\r\n\r\n\t\twhile ( parent ) {\r\n\t\t\tif ( matcher.match( parent ) ) {\r\n\t\t\t\treturn parent;\r\n\t\t\t}\r\n\r\n\t\t\tparent = parent.parent;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the custom property value for the given key.\r\n\t *\r\n\t * @param {String|Symbol} key\r\n\t * @returns {*}\r\n\t */\r\n\tgetCustomProperty( key ) {\r\n\t\treturn this._customProperties.get( key );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an iterator which iterates over this element's custom properties.\r\n\t * Iterator provides `[ key, value ]` pairs for each stored property.\r\n\t *\r\n\t * @returns {Iterable.<*>}\r\n\t */\r\n\t* getCustomProperties() {\r\n\t\tyield* this._customProperties.entries();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns identity string based on element's name, styles, classes and other attributes.\r\n\t * Two elements that {@link #isSimilar are similar} will have same identity string.\r\n\t * It has the following format:\r\n\t *\r\n\t *\t\t'name class=\"class1,class2\" style=\"style1:value1;style2:value2\" attr1=\"val1\" attr2=\"val2\"'\r\n \t *\r\n\t * For example:\r\n\t *\r\n\t *\t\tconst element = writer.createContainerElement( 'foo', {\r\n\t *\t\t\tbanana: '10',\r\n\t *\t\t\tapple: '20',\r\n\t *\t\t\tstyle: 'color: red; border-color: white;',\r\n\t *\t\t\tclass: 'baz'\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\t// returns 'foo class=\"baz\" style=\"border-color:white;color:red\" apple=\"20\" banana=\"10\"'\r\n\t *\t\telement.getIdentity();\r\n\t *\r\n\t * **Note**: Classes, styles and other attributes are sorted alphabetically.\r\n\t *\r\n\t * @returns {String}\r\n\t */\r\n\tgetIdentity() {\r\n\t\tconst classes = Array.from( this._classes ).sort().join( ',' );\r\n\t\tconst styles = this._styles.toString();\r\n\t\tconst attributes = Array.from( this._attrs ).map( i => `${ i[ 0 ] }=\"${ i[ 1 ] }\"` ).sort().join( ' ' );\r\n\r\n\t\treturn this.name +\r\n\t\t\t( classes == '' ? '' : ` class=\"${ classes }\"` ) +\r\n\t\t\t( !styles ? '' : ` style=\"${ styles }\"` ) +\r\n\t\t\t( attributes == '' ? '' : ` ${ attributes }` );\r\n\t}\r\n\r\n\t/**\r\n\t * Clones provided element.\r\n\t *\r\n\t * @protected\r\n\t * @param {Boolean} [deep=false] If set to `true` clones element and all its children recursively. When set to `false`,\r\n\t * element will be cloned without any children.\r\n\t * @returns {module:engine/view/element~Element} Clone of this element.\r\n\t */\r\n\t_clone( deep = false ) {\r\n\t\tconst childrenClone = [];\r\n\r\n\t\tif ( deep ) {\r\n\t\t\tfor ( const child of this.getChildren() ) {\r\n\t\t\t\tchildrenClone.push( child._clone( deep ) );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// ContainerElement and AttributeElement should be also cloned properly.\r\n\t\tconst cloned = new this.constructor( this.document, this.name, this._attrs, childrenClone );\r\n\r\n\t\t// Classes and styles are cloned separately - this solution is faster than adding them back to attributes and\r\n\t\t// parse once again in constructor.\r\n\t\tcloned._classes = new Set( this._classes );\r\n\t\tcloned._styles.set( this._styles.getNormalized() );\r\n\r\n\t\t// Clone custom properties.\r\n\t\tcloned._customProperties = new Map( this._customProperties );\r\n\r\n\t\t// Clone filler offset method.\r\n\t\t// We can't define this method in a prototype because it's behavior which\r\n\t\t// is changed by e.g. toWidget() function from ckeditor5-widget. Perhaps this should be one of custom props.\r\n\t\tcloned.getFillerOffset = this.getFillerOffset;\r\n\r\n\t\treturn cloned;\r\n\t}\r\n\r\n\t/**\r\n\t * {@link module:engine/view/element~Element#_insertChild Insert} a child node or a list of child nodes at the end of this node\r\n\t * and sets the parent of these nodes to this element.\r\n\t *\r\n\t * @see module:engine/view/downcastwriter~DowncastWriter#insert\r\n\t * @protected\r\n\t * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\r\n\t * @fires module:engine/view/node~Node#change\r\n\t * @returns {Number} Number of appended nodes.\r\n\t */\r\n\t_appendChild( items ) {\r\n\t\treturn this._insertChild( this.childCount, items );\r\n\t}\r\n\r\n\t/**\r\n\t * Inserts a child node or a list of child nodes on the given index and sets the parent of these nodes to\r\n\t * this element.\r\n\t *\r\n\t * @see module:engine/view/downcastwriter~DowncastWriter#insert\r\n\t * @protected\r\n\t * @param {Number} index Position where nodes should be inserted.\r\n\t * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\r\n\t * @fires module:engine/view/node~Node#change\r\n\t * @returns {Number} Number of inserted nodes.\r\n\t */\r\n\t_insertChild( index, items ) {\r\n\t\tthis._fireChange( 'children', this );\r\n\t\tlet count = 0;\r\n\r\n\t\tconst nodes = normalize( this.document, items );\r\n\r\n\t\tfor ( const node of nodes ) {\r\n\t\t\t// If node that is being added to this element is already inside another element, first remove it from the old parent.\r\n\t\t\tif ( node.parent !== null ) {\r\n\t\t\t\tnode._remove();\r\n\t\t\t}\r\n\r\n\t\t\tnode.parent = this;\r\n\t\t\tnode.document = this.document;\r\n\r\n\t\t\tthis._children.splice( index, 0, node );\r\n\t\t\tindex++;\r\n\t\t\tcount++;\r\n\t\t}\r\n\r\n\t\treturn count;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes number of child nodes starting at the given index and set the parent of these nodes to `null`.\r\n\t *\r\n\t * @see module:engine/view/downcastwriter~DowncastWriter#remove\r\n\t * @protected\r\n\t * @param {Number} index Number of the first node to remove.\r\n\t * @param {Number} [howMany=1] Number of nodes to remove.\r\n\t * @fires module:engine/view/node~Node#change\r\n\t * @returns {Array.<module:engine/view/node~Node>} The array of removed nodes.\r\n\t */\r\n\t_removeChildren( index, howMany = 1 ) {\r\n\t\tthis._fireChange( 'children', this );\r\n\r\n\t\tfor ( let i = index; i < index + howMany; i++ ) {\r\n\t\t\tthis._children[ i ].parent = null;\r\n\t\t}\r\n\r\n\t\treturn this._children.splice( index, howMany );\r\n\t}\r\n\r\n\t/**\r\n\t * Adds or overwrite attribute with a specified key and value.\r\n\t *\r\n\t * @see module:engine/view/downcastwriter~DowncastWriter#setAttribute\r\n\t * @protected\r\n\t * @param {String} key Attribute key.\r\n\t * @param {String} value Attribute value.\r\n\t * @fires module:engine/view/node~Node#change\r\n\t */\r\n\t_setAttribute( key, value ) {\r\n\t\tvalue = String( value );\r\n\r\n\t\tthis._fireChange( 'attributes', this );\r\n\r\n\t\tif ( key == 'class' ) {\r\n\t\t\tparseClasses( this._classes, value );\r\n\t\t} else if ( key == 'style' ) {\r\n\t\t\tthis._styles.setTo( value );\r\n\t\t} else {\r\n\t\t\tthis._attrs.set( key, value );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes attribute from the element.\r\n\t *\r\n\t * @see module:engine/view/downcastwriter~DowncastWriter#removeAttribute\r\n\t * @protected\r\n\t * @param {String} key Attribute key.\r\n\t * @returns {Boolean} Returns true if an attribute existed and has been removed.\r\n\t * @fires module:engine/view/node~Node#change\r\n\t */\r\n\t_removeAttribute( key ) {\r\n\t\tthis._fireChange( 'attributes', this );\r\n\r\n\t\t// Remove class attribute.\r\n\t\tif ( key == 'class' ) {\r\n\t\t\tif ( this._classes.size > 0 ) {\r\n\t\t\t\tthis._classes.clear();\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Remove style attribute.\r\n\t\tif ( key == 'style' ) {\r\n\t\t\tif ( !this._styles.isEmpty ) {\r\n\t\t\t\tthis._styles.clear();\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Remove other attributes.\r\n\t\treturn this._attrs.delete( key );\r\n\t}\r\n\r\n\t/**\r\n\t * Adds specified class.\r\n\t *\r\n\t *\t\telement._addClass( 'foo' ); // Adds 'foo' class.\r\n\t *\t\telement._addClass( [ 'foo', 'bar' ] ); // Adds 'foo' and 'bar' classes.\r\n\t *\r\n\t * @see module:engine/view/downcastwriter~DowncastWriter#addClass\r\n\t * @protected\r\n\t * @param {Array.<String>|String} className\r\n\t * @fires module:engine/view/node~Node#change\r\n\t */\r\n\t_addClass( className ) {\r\n\t\tthis._fireChange( 'attributes', this );\r\n\r\n\t\tclassName = Array.isArray( className ) ? className : [ className ];\r\n\t\tclassName.forEach( name => this._classes.add( name ) );\r\n\t}\r\n\r\n\t/**\r\n\t * Removes specified class.\r\n\t *\r\n\t *\t\telement._removeClass( 'foo' );  // Removes 'foo' class.\r\n\t *\t\telement._removeClass( [ 'foo', 'bar' ] ); // Removes both 'foo' and 'bar' classes.\r\n\t *\r\n\t * @see module:engine/view/downcastwriter~DowncastWriter#removeClass\r\n\t * @protected\r\n\t * @param {Array.<String>|String} className\r\n\t * @fires module:engine/view/node~Node#change\r\n\t */\r\n\t_removeClass( className ) {\r\n\t\tthis._fireChange( 'attributes', this );\r\n\r\n\t\tclassName = Array.isArray( className ) ? className : [ className ];\r\n\t\tclassName.forEach( name => this._classes.delete( name ) );\r\n\t}\r\n\r\n\t/**\r\n\t * Adds style to the element.\r\n\t *\r\n\t *\t\telement._setStyle( 'color', 'red' );\r\n\t *\t\telement._setStyle( {\r\n\t *\t\t\tcolor: 'red',\r\n\t *\t\t\tposition: 'fixed'\r\n\t *\t\t} );\r\n\t *\r\n\t * **Note**: This method can work with normalized style names if\r\n\t * {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules a particular style processor rule is enabled}.\r\n\t * See {@link module:engine/view/stylesmap~StylesMap#set `StylesMap#set()`} for details.\r\n\t *\r\n\t * @see module:engine/view/downcastwriter~DowncastWriter#setStyle\r\n\t * @protected\r\n\t * @param {String|Object} property Property name or object with key - value pairs.\r\n\t * @param {String} [value] Value to set. This parameter is ignored if object is provided as the first parameter.\r\n\t * @fires module:engine/view/node~Node#change\r\n\t */\r\n\t_setStyle( property, value ) {\r\n\t\tthis._fireChange( 'attributes', this );\r\n\r\n\t\tthis._styles.set( property, value );\r\n\t}\r\n\r\n\t/**\r\n\t * Removes specified style.\r\n\t *\r\n\t *\t\telement._removeStyle( 'color' );  // Removes 'color' style.\r\n\t *\t\telement._removeStyle( [ 'color', 'border-top' ] ); // Removes both 'color' and 'border-top' styles.\r\n\t *\r\n\t * **Note**: This method can work with normalized style names if\r\n\t * {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules a particular style processor rule is enabled}.\r\n\t * See {@link module:engine/view/stylesmap~StylesMap#remove `StylesMap#remove()`} for details.\r\n\t *\r\n\t * @see module:engine/view/downcastwriter~DowncastWriter#removeStyle\r\n\t * @protected\r\n\t * @param {Array.<String>|String} property\r\n\t * @fires module:engine/view/node~Node#change\r\n\t */\r\n\t_removeStyle( property ) {\r\n\t\tthis._fireChange( 'attributes', this );\r\n\r\n\t\tproperty = Array.isArray( property ) ? property : [ property ];\r\n\t\tproperty.forEach( name => this._styles.remove( name ) );\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a custom property. Unlike attributes, custom properties are not rendered to the DOM,\r\n\t * so they can be used to add special data to elements.\r\n\t *\r\n\t * @see module:engine/view/downcastwriter~DowncastWriter#setCustomProperty\r\n\t * @protected\r\n\t * @param {String|Symbol} key\r\n\t * @param {*} value\r\n\t */\r\n\t_setCustomProperty( key, value ) {\r\n\t\tthis._customProperties.set( key, value );\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the custom property stored under the given key.\r\n\t *\r\n\t * @see module:engine/view/downcastwriter~DowncastWriter#removeCustomProperty\r\n\t * @protected\r\n\t * @param {String|Symbol} key\r\n\t * @returns {Boolean} Returns true if property was removed.\r\n\t */\r\n\t_removeCustomProperty( key ) {\r\n\t\treturn this._customProperties.delete( key );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\r\n\t *\r\n\t * @abstract\r\n\t * @method module:engine/view/element~Element#getFillerOffset\r\n\t */\r\n\r\n\t// @if CK_DEBUG_ENGINE // printTree( level = 0) {\r\n\t// @if CK_DEBUG_ENGINE // \tlet string = '';\r\n\r\n\t// @if CK_DEBUG_ENGINE //\tstring += '\\t'.repeat( level ) + `<${ this.name }${ convertMapToTags( this.getAttributes() ) }>`;\r\n\r\n\t// @if CK_DEBUG_ENGINE //\tfor ( const child of this.getChildren() ) {\r\n\t// @if CK_DEBUG_ENGINE //\t\tif ( child.is( 'text' ) ) {\r\n\t// @if CK_DEBUG_ENGINE //\t\t\tstring += '\\n' + '\\t'.repeat( level + 1 ) + child.data;\r\n\t// @if CK_DEBUG_ENGINE //\t\t} else {\r\n\t// @if CK_DEBUG_ENGINE //\t\t\tstring += '\\n' + child.printTree( level + 1 );\r\n\t// @if CK_DEBUG_ENGINE //\t\t}\r\n\t// @if CK_DEBUG_ENGINE //\t}\r\n\r\n\t// @if CK_DEBUG_ENGINE //\tif ( this.childCount ) {\r\n\t// @if CK_DEBUG_ENGINE //\t\tstring += '\\n' + '\\t'.repeat( level );\r\n\t// @if CK_DEBUG_ENGINE //\t}\r\n\r\n\t// @if CK_DEBUG_ENGINE //\tstring += `</${ this.name }>`;\r\n\r\n\t// @if CK_DEBUG_ENGINE //\treturn string;\r\n\t// @if CK_DEBUG_ENGINE // }\r\n\r\n\t// @if CK_DEBUG_ENGINE // logTree() {\r\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( this.printTree() );\r\n\t// @if CK_DEBUG_ENGINE // }\r\n}\r\n\r\n// Parses attributes provided to the element constructor before they are applied to an element. If attributes are passed\r\n// as an object (instead of `Iterable`), the object is transformed to the map. Attributes with `null` value are removed.\r\n// Attributes with non-`String` value are converted to `String`.\r\n//\r\n// @param {Object|Iterable} attrs Attributes to parse.\r\n// @returns {Map} Parsed attributes.\r\nfunction parseAttributes( attrs ) {\r\n\tattrs = toMap( attrs );\r\n\r\n\tfor ( const [ key, value ] of attrs ) {\r\n\t\tif ( value === null ) {\r\n\t\t\tattrs.delete( key );\r\n\t\t} else if ( typeof value != 'string' ) {\r\n\t\t\tattrs.set( key, String( value ) );\r\n\t\t}\r\n\t}\r\n\r\n\treturn attrs;\r\n}\r\n\r\n// Parses class attribute and puts all classes into classes set.\r\n// Classes set s cleared before insertion.\r\n//\r\n// @param {Set.<String>} classesSet Set to insert parsed classes.\r\n// @param {String} classesString String with classes to parse.\r\nfunction parseClasses( classesSet, classesString ) {\r\n\tconst classArray = classesString.split( /\\s+/ );\r\n\tclassesSet.clear();\r\n\tclassArray.forEach( name => classesSet.add( name ) );\r\n}\r\n\r\n// Converts strings to Text and non-iterables to arrays.\r\n//\r\n// @param {String|module:engine/view/item~Item|Iterable.<String|module:engine/view/item~Item>}\r\n// @returns {Iterable.<module:engine/view/node~Node>}\r\nfunction normalize( document, nodes ) {\r\n\t// Separate condition because string is iterable.\r\n\tif ( typeof nodes == 'string' ) {\r\n\t\treturn [ new Text( document, nodes ) ];\r\n\t}\r\n\r\n\tif ( !isIterable( nodes ) ) {\r\n\t\tnodes = [ nodes ];\r\n\t}\r\n\r\n\t// Array.from to enable .map() on non-arrays.\r\n\treturn Array.from( nodes )\r\n\t\t.map( node => {\r\n\t\t\tif ( typeof node == 'string' ) {\r\n\t\t\t\treturn new Text( document, node );\r\n\t\t\t}\r\n\r\n\t\t\tif ( node instanceof TextProxy ) {\r\n\t\t\t\treturn new Text( document, node.data );\r\n\t\t\t}\r\n\r\n\t\t\treturn node;\r\n\t\t} );\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/view/emptyelement\r\n */\r\n\r\nimport Element from './element';\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\nimport Node from './node';\r\n\r\n/**\r\n * Empty element class. It is used to represent elements that cannot contain any child nodes (for example `<img>` elements).\r\n *\r\n * To create a new empty element use the\r\n * {@link module:engine/view/downcastwriter~DowncastWriter#createEmptyElement `downcastWriter#createEmptyElement()`} method.\r\n *\r\n * @extends module:engine/view/element~Element\r\n */\r\nexport default class EmptyElement extends Element {\r\n\t/**\r\n\t * Creates new instance of EmptyElement.\r\n\t *\r\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-emptyelement-cannot-add` when third parameter is passed,\r\n\t * to inform that usage of EmptyElement is incorrect (adding child nodes to EmptyElement is forbidden).\r\n\t *\r\n\t * @see module:engine/view/downcastwriter~DowncastWriter#createEmptyElement\r\n\t * @protected\r\n\t * @param {module:engine/view/document~Document} document The document instance to which this element belongs.\r\n\t * @param {String} name Node name.\r\n\t * @param {Object|Iterable} [attrs] Collection of attributes.\r\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\r\n\t * A list of nodes to be inserted into created element.\r\n\t */\r\n\tconstructor( document, name, attrs, children ) {\r\n\t\tsuper( document, name, attrs, children );\r\n\r\n\t\t/**\r\n\t\t * Returns `null` because filler is not needed for EmptyElements.\r\n\t\t *\r\n\t\t * @method #getFillerOffset\r\n\t\t * @returns {null} Always returns null.\r\n\t\t */\r\n\t\tthis.getFillerOffset = getFillerOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this object is of the given.\r\n\t *\r\n\t *\t\temptyElement.is( 'emptyElement' ); // -> true\r\n\t *\t\temptyElement.is( 'element' ); // -> true\r\n\t *\t\temptyElement.is( 'node' ); // -> true\r\n\t *\t\temptyElement.is( 'view:emptyElement' ); // -> true\r\n\t *\t\temptyElement.is( 'view:element' ); // -> true\r\n\t *\t\temptyElement.is( 'view:node' ); // -> true\r\n\t *\r\n\t *\t\temptyElement.is( 'model:element' ); // -> false\r\n\t *\t\temptyElement.is( 'documentFragment' ); // -> false\r\n\t *\r\n\t * Assuming that the object being checked is an empty element, you can also check its\r\n\t * {@link module:engine/view/emptyelement~EmptyElement#name name}:\r\n\t *\r\n\t *\t\temptyElement.is( 'img' ); // -> true if this is a img element\r\n\t *\t\temptyElement.is( 'emptyElement', 'img' ); // -> same as above\r\n\t *\t\ttext.is( 'img' ); -> false\r\n\t *\r\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\r\n\t *\r\n\t * @param {String} type Type to check when `name` parameter is present.\r\n\t * Otherwise, it acts like the `name` parameter.\r\n\t * @param {String} [name] Element name.\r\n\t * @returns {Boolean}\r\n\t */\r\n\tis( type, name = null ) {\r\n\t\tconst cutType = type.replace( /^view:/, '' );\r\n\t\tif ( !name ) {\r\n\t\t\treturn cutType == 'emptyElement' || super.is( type );\r\n\t\t} else {\r\n\t\t\treturn ( cutType == 'emptyElement' && name == this.name ) || super.is( type, name );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Overrides {@link module:engine/view/element~Element#_insertChild} method.\r\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-emptyelement-cannot-add` to prevent\r\n\t * adding any child nodes to EmptyElement.\r\n\t *\r\n\t * @protected\r\n\t */\r\n\t_insertChild( index, nodes ) {\r\n\t\tif ( nodes && ( nodes instanceof Node || Array.from( nodes ).length > 0 ) ) {\r\n\t\t\t/**\r\n\t\t\t * Cannot add children to {@link module:engine/view/emptyelement~EmptyElement}.\r\n\t\t\t *\r\n\t\t\t * @error view-emptyelement-cannot-add\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'view-emptyelement-cannot-add: Cannot add child nodes to EmptyElement instance.',\r\n\t\t\t\t[ this, nodes ]\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Returns `null` because block filler is not needed for EmptyElements.\r\n//\r\n// @returns {null}\r\nfunction getFillerOffset() {\r\n\treturn null;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\r\nimport isText from '@ckeditor/ckeditor5-utils/src/dom/istext';\r\n\r\n/**\r\n * Set of utils related to block and inline fillers handling.\r\n *\r\n * Browsers do not allow to put caret in elements which does not have height. Because of it, we need to fill all\r\n * empty elements which should be selectable with elements or characters called \"fillers\". Unfortunately there is no one\r\n * universal filler, this is why two types are uses:\r\n *\r\n * * Block filler is an element which fill block elements, like `<p>`. CKEditor uses `<br>` as a block filler during the editing,\r\n * as browsers do natively. So instead of an empty `<p>` there will be `<p><br></p>`. The advantage of block filler is that\r\n * it is transparent for the selection, so when the caret is before the `<br>` and user presses right arrow he will be\r\n * moved to the next paragraph, not after the `<br>`. The disadvantage is that it breaks a block, so it can not be used\r\n * in the middle of a line of text. The {@link module:engine/view/filler~BR_FILLER `<br>` filler} can be replaced with any other\r\n * character in the data output, for instance {@link module:engine/view/filler~NBSP_FILLER non-breaking space}.\r\n *\r\n * * Inline filler is a filler which does not break a line of text, so it can be used inside the text, for instance in the empty\r\n * `<b>` surrendered by text: `foo<b></b>bar`, if we want to put the caret there. CKEditor uses a sequence of the zero-width\r\n * spaces as an {@link module:engine/view/filler~INLINE_FILLER inline filler} having the predetermined\r\n * {@link module:engine/view/filler~INLINE_FILLER_LENGTH length}. A sequence is used, instead of a single character to\r\n * avoid treating random zero-width spaces as the inline filler. Disadvantage of the inline filler is that it is not\r\n * transparent for the selection. The arrow key moves the caret between zero-width spaces characters, so the additional\r\n * code is needed to handle the caret.\r\n *\r\n * Both inline and block fillers are handled by the {@link module:engine/view/renderer~Renderer renderer} and are not present in the\r\n * view.\r\n *\r\n * @module engine/view/filler\r\n */\r\n\r\n/**\r\n * Non-breaking space filler creator. This is a function which creates `&nbsp;` text node.\r\n * It defines how the filler is created.\r\n *\r\n * @see module:engine/view/filler~BR_FILLER\r\n * @function\r\n */\r\nexport const NBSP_FILLER = domDocument => domDocument.createTextNode( '\\u00A0' );\r\n\r\n/**\r\n * `<br>` filler creator. This is a function which creates `<br data-cke-filler=\"true\">` element.\r\n * It defines how the filler is created.\r\n *\r\n * @see module:engine/view/filler~NBSP_FILLER\r\n * @function\r\n */\r\nexport const BR_FILLER = domDocument => {\r\n\tconst fillerBr = domDocument.createElement( 'br' );\r\n\tfillerBr.dataset.ckeFiller = true;\r\n\r\n\treturn fillerBr;\r\n};\r\n\r\n/**\r\n * Length of the {@link module:engine/view/filler~INLINE_FILLER INLINE_FILLER}.\r\n */\r\nexport const INLINE_FILLER_LENGTH = 7;\r\n\r\n/**\r\n * Inline filler which is a sequence of the zero width spaces.\r\n */\r\nexport const INLINE_FILLER = ( () => {\r\n\tlet inlineFiller = '';\r\n\r\n\tfor ( let i = 0; i < INLINE_FILLER_LENGTH; i++ ) {\r\n\t\tinlineFiller += '\\u200b';\r\n\t}\r\n\r\n\treturn inlineFiller;\r\n} )(); // Usu IIF so the INLINE_FILLER appears as a constant in the docs.\r\n\r\n/**\r\n * Checks if the node is a text node which starts with the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\r\n *\r\n *\t\tstartsWithFiller( document.createTextNode( INLINE_FILLER ) ); // true\r\n *\t\tstartsWithFiller( document.createTextNode( INLINE_FILLER + 'foo' ) ); // true\r\n *\t\tstartsWithFiller( document.createTextNode( 'foo' ) ); // false\r\n *\t\tstartsWithFiller( document.createElement( 'p' ) ); // false\r\n *\r\n * @param {Node} domNode DOM node.\r\n * @returns {Boolean} True if the text node starts with the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\r\n */\r\nexport function startsWithFiller( domNode ) {\r\n\treturn isText( domNode ) && ( domNode.data.substr( 0, INLINE_FILLER_LENGTH ) === INLINE_FILLER );\r\n}\r\n\r\n/**\r\n * Checks if the text node contains only the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\r\n *\r\n *\t\tisInlineFiller( document.createTextNode( INLINE_FILLER ) ); // true\r\n *\t\tisInlineFiller( document.createTextNode( INLINE_FILLER + 'foo' ) ); // false\r\n *\r\n * @param {Text} domText DOM text node.\r\n * @returns {Boolean} True if the text node contains only the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\r\n */\r\nexport function isInlineFiller( domText ) {\r\n\treturn domText.data.length == INLINE_FILLER_LENGTH && startsWithFiller( domText );\r\n}\r\n\r\n/**\r\n * Get string data from the text node, removing an {@link module:engine/view/filler~INLINE_FILLER inline filler} from it,\r\n * if text node contains it.\r\n *\r\n *\t\tgetDataWithoutFiller( document.createTextNode( INLINE_FILLER + 'foo' ) ) == 'foo' // true\r\n *\t\tgetDataWithoutFiller( document.createTextNode( 'foo' ) ) == 'foo' // true\r\n *\r\n * @param {Text} domText DOM text node, possible with inline filler.\r\n * @returns {String} Data without filler.\r\n */\r\nexport function getDataWithoutFiller( domText ) {\r\n\tif ( startsWithFiller( domText ) ) {\r\n\t\treturn domText.data.slice( INLINE_FILLER_LENGTH );\r\n\t} else {\r\n\t\treturn domText.data;\r\n\t}\r\n}\r\n\r\n/**\r\n * Assign key observer which move cursor from the end of the inline filler to the beginning of it when\r\n * the left arrow is pressed, so the filler does not break navigation.\r\n *\r\n * @param {module:engine/view/view~View} view View controller instance we should inject quirks handling on.\r\n */\r\nexport function injectQuirksHandling( view ) {\r\n\tview.document.on( 'keydown', jumpOverInlineFiller );\r\n}\r\n\r\n// Move cursor from the end of the inline filler to the beginning of it when, so the filler does not break navigation.\r\nfunction jumpOverInlineFiller( evt, data ) {\r\n\tif ( data.keyCode == keyCodes.arrowleft ) {\r\n\t\tconst domSelection = data.domTarget.ownerDocument.defaultView.getSelection();\r\n\r\n\t\tif ( domSelection.rangeCount == 1 && domSelection.getRangeAt( 0 ).collapsed ) {\r\n\t\t\tconst domParent = domSelection.getRangeAt( 0 ).startContainer;\r\n\t\t\tconst domOffset = domSelection.getRangeAt( 0 ).startOffset;\r\n\r\n\t\t\tif ( startsWithFiller( domParent ) && domOffset <= INLINE_FILLER_LENGTH ) {\r\n\t\t\t\tdomSelection.collapse( domParent, 0 );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/view/matcher\r\n */\r\n\r\n/**\r\n * View matcher class.\r\n * Instance of this class can be used to find {@link module:engine/view/element~Element elements} that match given pattern.\r\n */\r\nexport default class Matcher {\r\n\t/**\r\n\t * Creates new instance of Matcher.\r\n\t *\r\n\t * @param {String|RegExp|Object} [pattern] Match patterns. See {@link module:engine/view/matcher~Matcher#add add method} for\r\n\t * more information.\r\n\t */\r\n\tconstructor( ...pattern ) {\r\n\t\t/**\r\n\t\t * @private\r\n\t\t * @type {Array<String|RegExp|Object>}\r\n\t\t */\r\n\t\tthis._patterns = [];\r\n\r\n\t\tthis.add( ...pattern );\r\n\t}\r\n\r\n\t/**\r\n\t * Adds pattern or patterns to matcher instance.\r\n\t *\r\n\t *\t\t// String.\r\n\t *\t\tmatcher.add( 'div' );\r\n\t *\r\n\t *\t\t// Regular expression.\r\n\t *\t\tmatcher.add( /^\\w/ );\r\n\t *\r\n\t *\t\t// Single class.\r\n\t *\t\tmatcher.add( {\r\n\t *\t\t\tclasses: 'foobar'\r\n\t *\t\t} );\r\n\t *\r\n\t * See {@link module:engine/view/matcher~MatcherPattern} for more examples.\r\n\t *\r\n\t * Multiple patterns can be added in one call:\r\n\t *\r\n\t * \t\tmatcher.add( 'div', { classes: 'foobar' } );\r\n\t *\r\n\t * @param {Object|String|RegExp|Function} pattern Object describing pattern details. If string or regular expression\r\n\t * is provided it will be used to match element's name. Pattern can be also provided in a form\r\n\t * of a function - then this function will be called with each {@link module:engine/view/element~Element element} as a parameter.\r\n\t * Function's return value will be stored under `match` key of the object returned from\r\n\t * {@link module:engine/view/matcher~Matcher#match match} or {@link module:engine/view/matcher~Matcher#matchAll matchAll} methods.\r\n\t * @param {String|RegExp} [pattern.name] Name or regular expression to match element's name.\r\n\t * @param {Object} [pattern.attributes] Object with key-value pairs representing attributes to match. Each object key\r\n\t * represents attribute name. Value under that key can be either:\r\n\t * * `true` - then attribute is just required (can be empty),\r\n\t * * a string - then attribute has to be equal, or\r\n\t * * a regular expression - then attribute has to match the expression.\r\n\t * @param {String|RegExp|Array} [pattern.classes] Class name or array of class names to match. Each name can be\r\n\t * provided in a form of string or regular expression.\r\n\t * @param {Object} [pattern.styles] Object with key-value pairs representing styles to match. Each object key\r\n\t * represents style name. Value under that key can be either a string or a regular expression and it will be used\r\n\t * to match style value.\r\n\t */\r\n\tadd( ...pattern ) {\r\n\t\tfor ( let item of pattern ) {\r\n\t\t\t// String or RegExp pattern is used as element's name.\r\n\t\t\tif ( typeof item == 'string' || item instanceof RegExp ) {\r\n\t\t\t\titem = { name: item };\r\n\t\t\t}\r\n\r\n\t\t\t// Single class name/RegExp can be provided.\r\n\t\t\tif ( item.classes && ( typeof item.classes == 'string' || item.classes instanceof RegExp ) ) {\r\n\t\t\t\titem.classes = [ item.classes ];\r\n\t\t\t}\r\n\r\n\t\t\tthis._patterns.push( item );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Matches elements for currently stored patterns. Returns match information about first found\r\n\t * {@link module:engine/view/element~Element element}, otherwise returns `null`.\r\n\t *\r\n\t * Example of returned object:\r\n\t *\r\n\t *\t\t{\r\n\t *\t\t\telement: <instance of found element>,\r\n\t *\t\t\tpattern: <pattern used to match found element>,\r\n\t *\t\t\tmatch: {\r\n\t *\t\t\t\tname: true,\r\n\t *\t\t\t\tattributes: [ 'title', 'href' ],\r\n\t *\t\t\t\tclasses: [ 'foo' ],\r\n\t *\t\t\t\tstyles: [ 'color', 'position' ]\r\n\t *\t\t\t}\r\n\t *\t\t}\r\n\t *\r\n\t * @see module:engine/view/matcher~Matcher#add\r\n\t * @see module:engine/view/matcher~Matcher#matchAll\r\n\t * @param {...module:engine/view/element~Element} element View element to match against stored patterns.\r\n\t * @returns {Object|null} result\r\n\t * @returns {module:engine/view/element~Element} result.element Matched view element.\r\n\t * @returns {Object|String|RegExp|Function} result.pattern Pattern that was used to find matched element.\r\n\t * @returns {Object} result.match Object representing matched element parts.\r\n\t * @returns {Boolean} [result.match.name] True if name of the element was matched.\r\n\t * @returns {Array} [result.match.attributes] Array with matched attribute names.\r\n\t * @returns {Array} [result.match.classes] Array with matched class names.\r\n\t * @returns {Array} [result.match.styles] Array with matched style names.\r\n\t */\r\n\tmatch( ...element ) {\r\n\t\tfor ( const singleElement of element ) {\r\n\t\t\tfor ( const pattern of this._patterns ) {\r\n\t\t\t\tconst match = isElementMatching( singleElement, pattern );\r\n\r\n\t\t\t\tif ( match ) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\telement: singleElement,\r\n\t\t\t\t\t\tpattern,\r\n\t\t\t\t\t\tmatch\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Matches elements for currently stored patterns. Returns array of match information with all found\r\n\t * {@link module:engine/view/element~Element elements}. If no element is found - returns `null`.\r\n\t *\r\n\t * @see module:engine/view/matcher~Matcher#add\r\n\t * @see module:engine/view/matcher~Matcher#match\r\n\t * @param {...module:engine/view/element~Element} element View element to match against stored patterns.\r\n\t * @returns {Array.<Object>|null} Array with match information about found elements or `null`. For more information\r\n\t * see {@link module:engine/view/matcher~Matcher#match match method} description.\r\n\t */\r\n\tmatchAll( ...element ) {\r\n\t\tconst results = [];\r\n\r\n\t\tfor ( const singleElement of element ) {\r\n\t\t\tfor ( const pattern of this._patterns ) {\r\n\t\t\t\tconst match = isElementMatching( singleElement, pattern );\r\n\r\n\t\t\t\tif ( match ) {\r\n\t\t\t\t\tresults.push( {\r\n\t\t\t\t\t\telement: singleElement,\r\n\t\t\t\t\t\tpattern,\r\n\t\t\t\t\t\tmatch\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn results.length > 0 ? results : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the name of the element to match if there is exactly one pattern added to the matcher instance\r\n\t * and it matches element name defined by `string` (not `RegExp`). Otherwise, returns `null`.\r\n\t *\r\n\t * @returns {String|null} Element name trying to match.\r\n\t */\r\n\tgetElementName() {\r\n\t\tif ( this._patterns.length !== 1 ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tconst pattern = this._patterns[ 0 ];\r\n\t\tconst name = pattern.name;\r\n\r\n\t\treturn ( typeof pattern != 'function' && name && !( name instanceof RegExp ) ) ? name : null;\r\n\t}\r\n}\r\n\r\n// Returns match information if {@link module:engine/view/element~Element element} is matching provided pattern.\r\n// If element cannot be matched to provided pattern - returns `null`.\r\n//\r\n// @param {module:engine/view/element~Element} element\r\n// @param {Object|String|RegExp|Function} pattern\r\n// @returns {Object|null} Returns object with match information or null if element is not matching.\r\nfunction isElementMatching( element, pattern ) {\r\n\t// If pattern is provided as function - return result of that function;\r\n\tif ( typeof pattern == 'function' ) {\r\n\t\treturn pattern( element );\r\n\t}\r\n\r\n\tconst match = {};\r\n\t// Check element's name.\r\n\tif ( pattern.name ) {\r\n\t\tmatch.name = matchName( pattern.name, element.name );\r\n\r\n\t\tif ( !match.name ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\t// Check element's attributes.\r\n\tif ( pattern.attributes ) {\r\n\t\tmatch.attributes = matchAttributes( pattern.attributes, element );\r\n\r\n\t\tif ( !match.attributes ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\t// Check element's classes.\r\n\tif ( pattern.classes ) {\r\n\t\tmatch.classes = matchClasses( pattern.classes, element );\r\n\r\n\t\tif ( !match.classes ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t// Check element's styles.\r\n\tif ( pattern.styles ) {\r\n\t\tmatch.styles = matchStyles( pattern.styles, element );\r\n\r\n\t\tif ( !match.styles ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\treturn match;\r\n}\r\n\r\n// Checks if name can be matched by provided pattern.\r\n//\r\n// @param {String|RegExp} pattern\r\n// @param {String} name\r\n// @returns {Boolean} Returns `true` if name can be matched, `false` otherwise.\r\nfunction matchName( pattern, name ) {\r\n\t// If pattern is provided as RegExp - test against this regexp.\r\n\tif ( pattern instanceof RegExp ) {\r\n\t\treturn pattern.test( name );\r\n\t}\r\n\r\n\treturn pattern === name;\r\n}\r\n\r\n// Checks if attributes of provided element can be matched against provided patterns.\r\n//\r\n// @param {Object} patterns Object with information about attributes to match. Each key of the object will be\r\n// used as attribute name. Value of each key can be a string or regular expression to match against attribute value.\r\n// @param {module:engine/view/element~Element} element Element which attributes will be tested.\r\n// @returns {Array|null} Returns array with matched attribute names or `null` if no attributes were matched.\r\nfunction matchAttributes( patterns, element ) {\r\n\tconst match = [];\r\n\r\n\tfor ( const name in patterns ) {\r\n\t\tconst pattern = patterns[ name ];\r\n\r\n\t\tif ( element.hasAttribute( name ) ) {\r\n\t\t\tconst attribute = element.getAttribute( name );\r\n\r\n\t\t\tif ( pattern === true ) {\r\n\t\t\t\tmatch.push( name );\r\n\t\t\t} else if ( pattern instanceof RegExp ) {\r\n\t\t\t\tif ( pattern.test( attribute ) ) {\r\n\t\t\t\t\tmatch.push( name );\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t} else if ( attribute === pattern ) {\r\n\t\t\t\tmatch.push( name );\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\treturn match;\r\n}\r\n\r\n// Checks if classes of provided element can be matched against provided patterns.\r\n//\r\n// @param {Array.<String|RegExp>} patterns Array of strings or regular expressions to match against element's classes.\r\n// @param {module:engine/view/element~Element} element Element which classes will be tested.\r\n// @returns {Array|null} Returns array with matched class names or `null` if no classes were matched.\r\nfunction matchClasses( patterns, element ) {\r\n\tconst match = [];\r\n\r\n\tfor ( const pattern of patterns ) {\r\n\t\tif ( pattern instanceof RegExp ) {\r\n\t\t\tconst classes = element.getClassNames();\r\n\r\n\t\t\tfor ( const name of classes ) {\r\n\t\t\t\tif ( pattern.test( name ) ) {\r\n\t\t\t\t\tmatch.push( name );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( match.length === 0 ) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t} else if ( element.hasClass( pattern ) ) {\r\n\t\t\tmatch.push( pattern );\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\treturn match;\r\n}\r\n\r\n// Checks if styles of provided element can be matched against provided patterns.\r\n//\r\n// @param {Object} patterns Object with information about styles to match. Each key of the object will be\r\n// used as style name. Value of each key can be a string or regular expression to match against style value.\r\n// @param {module:engine/view/element~Element} element Element which styles will be tested.\r\n// @returns {Array|null} Returns array with matched style names or `null` if no styles were matched.\r\nfunction matchStyles( patterns, element ) {\r\n\tconst match = [];\r\n\r\n\tfor ( const name in patterns ) {\r\n\t\tconst pattern = patterns[ name ];\r\n\r\n\t\tif ( element.hasStyle( name ) ) {\r\n\t\t\tconst style = element.getStyle( name );\r\n\r\n\t\t\tif ( pattern instanceof RegExp ) {\r\n\t\t\t\tif ( pattern.test( style ) ) {\r\n\t\t\t\t\tmatch.push( name );\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t} else if ( style === pattern ) {\r\n\t\t\t\tmatch.push( name );\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\treturn match;\r\n}\r\n\r\n/**\r\n * An entity that is a valid pattern recognized by a matcher. `MatcherPattern` is used by {@link ~Matcher} to recognize\r\n * if a view element fits in a group of view elements described by the pattern.\r\n *\r\n * `MatcherPattern` can be given as a `String`, a `RegExp`, an `Object` or a `Function`.\r\n *\r\n * If `MatcherPattern` is given as a `String` or `RegExp`, it will match any view element that has a matching name:\r\n *\r\n *\t\t// Match any element with name equal to 'div'.\r\n *\t\tconst pattern = 'div';\r\n *\r\n *\t\t// Match any element which name starts on 'p'.\r\n *\t\tconst pattern = /^p/;\r\n *\r\n * If `MatcherPattern` is given as an `Object`, all the object's properties will be matched with view element properties.\r\n *\r\n *\t\t// Match view element's name.\r\n *\t\tconst pattern = { name: /^p/ };\r\n *\r\n *\t\t// Match view element which has matching attributes.\r\n *\t\tconst pattern = {\r\n *\t\t\tattributes: {\r\n *\t\t\t\ttitle: 'foobar',\t// Attribute title should equal 'foobar'.\r\n *\t\t\t\tfoo: /^\\w+/,\t\t// Attribute foo should match /^\\w+/ regexp.\r\n *\t\t\t\tbar: true\t\t\t// Attribute bar should be set (can be empty).\r\n *\t\t\t}\r\n *\t\t};\r\n *\r\n *\t\t// Match view element which has given class.\r\n *\t\tconst pattern = {\r\n *\t\t\tclasses: 'foobar'\r\n *\t\t};\r\n *\r\n *\t\t// Match view element class using regular expression.\r\n *\t\tconst pattern = {\r\n *\t\t\tclasses: /foo.../\r\n *\t\t};\r\n *\r\n *\t\t// Multiple classes to match.\r\n *\t\tconst pattern = {\r\n *\t\t\tclasses: [ 'baz', 'bar', /foo.../ ]\r\n *\t\t};\r\n *\r\n *\t\t// Match view element which has given styles.\r\n *\t\tconst pattern = {\r\n *\t\t\tstyles: {\r\n *\t\t\t\tposition: 'absolute',\r\n *\t\t\t\tcolor: /^\\w*blue$/\r\n *\t\t\t}\r\n *\t\t};\r\n *\r\n *\t\t// Pattern with multiple properties.\r\n *\t\tconst pattern = {\r\n *\t\t\tname: 'span',\r\n *\t\t\tstyles: {\r\n *\t\t\t\t'font-weight': 'bold'\r\n *\t\t\t},\r\n *\t\t\tclasses: 'highlighted'\r\n *\t\t};\r\n *\r\n * If `MatcherPattern` is given as a `Function`, the function takes a view element as a first and only parameter and\r\n * the function should decide whether that element matches. If so, it should return what part of the view element has been matched.\r\n * Otherwise, the function should return `null`. The returned result will be included in `match` property of the object\r\n * returned by {@link ~Matcher#match} call.\r\n *\r\n *\t\t// Match an empty <div> element.\r\n *\t\tconst pattern = element => {\r\n *\t\t\tif ( element.name == 'div' && element.childCount > 0 ) {\r\n *\t\t\t\t// Return which part of the element was matched.\r\n *\t\t\t\treturn { name: true };\r\n *\t\t\t}\r\n *\r\n *\t\t\treturn null;\r\n *\t\t};\r\n *\r\n *\t\t// Match a <p> element with big font (\"heading-like\" element).\r\n *\t\tconst pattern = element => {\r\n *\t\t\tif ( element.name == 'p' ) {\r\n *\t\t\t\tconst fontSize = element.getStyle( 'font-size' );\r\n *\t\t\t\tconst size = fontSize.match( /(\\d+)/px );\r\n *\r\n *\t\t\t\tif ( size && Number( size[ 1 ] ) > 26 ) {\r\n *\t\t\t\t\treturn { name: true, attribute: [ 'font-size' ] };\r\n *\t\t\t\t}\r\n *\t\t\t}\r\n *\r\n *\t\t\treturn null;\r\n *\t\t};\r\n *\r\n * `MatcherPattern` is defined in a way that it is a superset of {@link module:engine/view/elementdefinition~ElementDefinition},\r\n * that is, every `ElementDefinition` also can be used as a `MatcherPattern`.\r\n *\r\n * @typedef {String|RegExp|Object|Function} module:engine/view/matcher~MatcherPattern\r\n *\r\n * @property {String|RegExp} [name] View element name to match.\r\n * @property {String|RegExp|Array.<String|RegExp>} [classes] View element's class name(s) to match.\r\n * @property {Object} [styles] Object with key-value pairs representing styles to match.\r\n * Each object key represents style name. Value can be given as `String` or `RegExp`.\r\n * @property {Object} [attributes] Object with key-value pairs representing attributes to match.\r\n * Each object key represents attribute name. Value can be given as `String` or `RegExp`.\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/view/node\r\n */\r\n\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\r\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\r\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\r\nimport { clone } from 'lodash-es';\r\n\r\n// To check if component is loaded more than once.\r\nimport '@ckeditor/ckeditor5-utils/src/version';\r\n\r\n/**\r\n * Abstract view node class.\r\n *\r\n * This is an abstract class. Its constructor should not be used directly.\r\n * Use the {@link module:engine/view/downcastwriter~DowncastWriter} or {@link module:engine/view/upcastwriter~UpcastWriter}\r\n * to create new instances of view nodes.\r\n *\r\n * @abstract\r\n */\r\nexport default class Node {\r\n\t/**\r\n\t * Creates a tree view node.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/view/document~Document} document The document instance to which this node belongs.\r\n\t */\r\n\tconstructor( document ) {\r\n\t\t/**\r\n\t\t * The document instance to which this node belongs.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/view/document~Document}\r\n\t\t */\r\n\t\tthis.document = document;\r\n\r\n\t\t/**\r\n\t\t * Parent element. Null by default. Set by {@link module:engine/view/element~Element#_insertChild}.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|null}\r\n\t\t */\r\n\t\tthis.parent = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Index of the node in the parent element or null if the node has no parent.\r\n\t *\r\n\t * Accessing this property throws an error if this node's parent element does not contain it.\r\n\t * This means that view tree got broken.\r\n\t *\r\n\t * @readonly\r\n\t * @type {Number|null}\r\n\t */\r\n\tget index() {\r\n\t\tlet pos;\r\n\r\n\t\tif ( !this.parent ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\t// No parent or child doesn't exist in parent's children.\r\n\t\tif ( ( pos = this.parent.getChildIndex( this ) ) == -1 ) {\r\n\t\t\t/**\r\n\t\t\t * The node's parent does not contain this node. It means that the document tree is corrupted.\r\n\t\t\t *\r\n\t\t\t * @error view-node-not-found-in-parent\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'view-node-not-found-in-parent: The node\\'s parent does not contain this node.', this );\r\n\t\t}\r\n\r\n\t\treturn pos;\r\n\t}\r\n\r\n\t/**\r\n\t * Node's next sibling, or `null` if it is the last child.\r\n\t *\r\n\t * @readonly\r\n\t * @type {module:engine/view/node~Node|null}\r\n\t */\r\n\tget nextSibling() {\r\n\t\tconst index = this.index;\r\n\r\n\t\treturn ( index !== null && this.parent.getChild( index + 1 ) ) || null;\r\n\t}\r\n\r\n\t/**\r\n\t * Node's previous sibling, or `null` if it is the first child.\r\n\t *\r\n\t * @readonly\r\n\t * @type {module:engine/view/node~Node|null}\r\n\t */\r\n\tget previousSibling() {\r\n\t\tconst index = this.index;\r\n\r\n\t\treturn ( index !== null && this.parent.getChild( index - 1 ) ) || null;\r\n\t}\r\n\r\n\t/**\r\n\t * Top-most ancestor of the node. If the node has no parent it is the root itself.\r\n\t *\r\n\t * @readonly\r\n\t * @type {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\r\n\t */\r\n\tget root() {\r\n\t\tlet root = this; // eslint-disable-line consistent-this\r\n\r\n\t\twhile ( root.parent ) {\r\n\t\t\troot = root.parent;\r\n\t\t}\r\n\r\n\t\treturn root;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the node is in a tree rooted in the document (is a descendant of one of its roots).\r\n\t *\r\n\t * @returns {Boolean}\r\n\t */\r\n\tisAttached() {\r\n\t\treturn this.root.is( 'rootElement' );\r\n\t}\r\n\r\n\t/**\r\n\t * Gets a path to the node. The path is an array containing indices of consecutive ancestors of this node,\r\n\t * beginning from {@link module:engine/view/node~Node#root root}, down to this node's index.\r\n\t *\r\n\t *\t\tconst abc = downcastWriter.createText( 'abc' );\r\n\t *\t\tconst foo = downcastWriter.createText( 'foo' );\r\n\t *\t\tconst h1 = downcastWriter.createElement( 'h1', null, downcastWriter.createText( 'header' ) );\r\n\t *\t\tconst p = downcastWriter.createElement( 'p', null, [ abc, foo ] );\r\n\t *\t\tconst div = downcastWriter.createElement( 'div', null, [ h1, p ] );\r\n\t *\t\tfoo.getPath(); // Returns [ 1, 3 ]. `foo` is in `p` which is in `div`. `p` starts at offset 1, while `foo` at 3.\r\n\t *\t\th1.getPath(); // Returns [ 0 ].\r\n\t *\t\tdiv.getPath(); // Returns [].\r\n\t *\r\n\t * @returns {Array.<Number>} The path.\r\n\t */\r\n\tgetPath() {\r\n\t\tconst path = [];\r\n\t\tlet node = this; // eslint-disable-line consistent-this\r\n\r\n\t\twhile ( node.parent ) {\r\n\t\t\tpath.unshift( node.index );\r\n\t\t\tnode = node.parent;\r\n\t\t}\r\n\r\n\t\treturn path;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns ancestors array of this node.\r\n\t *\r\n\t * @param {Object} options Options object.\r\n\t * @param {Boolean} [options.includeSelf=false] When set to `true` this node will be also included in parent's array.\r\n\t * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from node's parent to root element,\r\n\t * otherwise root element will be the first item in the array.\r\n\t * @returns {Array} Array with ancestors.\r\n\t */\r\n\tgetAncestors( options = { includeSelf: false, parentFirst: false } ) {\r\n\t\tconst ancestors = [];\r\n\t\tlet parent = options.includeSelf ? this : this.parent;\r\n\r\n\t\twhile ( parent ) {\r\n\t\t\tancestors[ options.parentFirst ? 'push' : 'unshift' ]( parent );\r\n\t\t\tparent = parent.parent;\r\n\t\t}\r\n\r\n\t\treturn ancestors;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a {@link module:engine/view/element~Element} or {@link module:engine/view/documentfragment~DocumentFragment}\r\n\t * which is a common ancestor of both nodes.\r\n\t *\r\n\t * @param {module:engine/view/node~Node} node The second node.\r\n\t * @param {Object} options Options object.\r\n\t * @param {Boolean} [options.includeSelf=false] When set to `true` both nodes will be considered \"ancestors\" too.\r\n\t * Which means that if e.g. node A is inside B, then their common ancestor will be B.\r\n\t * @returns {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|null}\r\n\t */\r\n\tgetCommonAncestor( node, options = {} ) {\r\n\t\tconst ancestorsA = this.getAncestors( options );\r\n\t\tconst ancestorsB = node.getAncestors( options );\r\n\r\n\t\tlet i = 0;\r\n\r\n\t\twhile ( ancestorsA[ i ] == ancestorsB[ i ] && ancestorsA[ i ] ) {\r\n\t\t\ti++;\r\n\t\t}\r\n\r\n\t\treturn i === 0 ? null : ancestorsA[ i - 1 ];\r\n\t}\r\n\r\n\t/**\r\n\t * Returns whether this node is before given node. `false` is returned if nodes are in different trees (for example,\r\n\t * in different {@link module:engine/view/documentfragment~DocumentFragment}s).\r\n\t *\r\n\t * @param {module:engine/view/node~Node} node Node to compare with.\r\n\t * @returns {Boolean}\r\n\t */\r\n\tisBefore( node ) {\r\n\t\t// Given node is not before this node if they are same.\r\n\t\tif ( this == node ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Return `false` if it is impossible to compare nodes.\r\n\t\tif ( this.root !== node.root ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst thisPath = this.getPath();\r\n\t\tconst nodePath = node.getPath();\r\n\r\n\t\tconst result = compareArrays( thisPath, nodePath );\r\n\r\n\t\tswitch ( result ) {\r\n\t\t\tcase 'prefix':\r\n\t\t\t\treturn true;\r\n\r\n\t\t\tcase 'extension':\r\n\t\t\t\treturn false;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\treturn thisPath[ result ] < nodePath[ result ];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns whether this node is after given node. `false` is returned if nodes are in different trees (for example,\r\n\t * in different {@link module:engine/view/documentfragment~DocumentFragment}s).\r\n\t *\r\n\t * @param {module:engine/view/node~Node} node Node to compare with.\r\n\t * @returns {Boolean}\r\n\t */\r\n\tisAfter( node ) {\r\n\t\t// Given node is not before this node if they are same.\r\n\t\tif ( this == node ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Return `false` if it is impossible to compare nodes.\r\n\t\tif ( this.root !== node.root ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// In other cases, just check if the `node` is before, and return the opposite.\r\n\t\treturn !this.isBefore( node );\r\n\t}\r\n\r\n\t/**\r\n\t * Removes node from parent.\r\n\t *\r\n\t * @protected\r\n\t */\r\n\t_remove() {\r\n\t\tthis.parent._removeChildren( this.index );\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t * @param {module:engine/view/document~ChangeType} type Type of the change.\r\n\t * @param {module:engine/view/node~Node} node Changed node.\r\n\t * @fires change\r\n\t */\r\n\t_fireChange( type, node ) {\r\n\t\tthis.fire( 'change:' + type, node );\r\n\r\n\t\tif ( this.parent ) {\r\n\t\t\tthis.parent._fireChange( type, node );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Custom toJSON method to solve child-parent circular dependencies.\r\n\t *\r\n\t * @returns {Object} Clone of this object with the parent property removed.\r\n\t */\r\n\ttoJSON() {\r\n\t\tconst json = clone( this );\r\n\r\n\t\t// Due to circular references we need to remove parent reference.\r\n\t\tdelete json.parent;\r\n\r\n\t\treturn json;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this object is of the given type.\r\n\t *\r\n\t * This method is useful when processing view objects that are of unknown type. For example, a function\r\n\t * may return a {@link module:engine/view/documentfragment~DocumentFragment} or a {@link module:engine/view/node~Node}\r\n\t * that can be either a text node or an element. This method can be used to check what kind of object is returned.\r\n\t *\r\n\t *\t\tsomeObject.is( 'element' ); // -> true if this is an element\r\n\t *\t\tsomeObject.is( 'node' ); // -> true if this is a node (a text node or an element)\r\n\t *\t\tsomeObject.is( 'documentFragment' ); // -> true if this is a document fragment\r\n\t *\r\n\t * Since this method is also available on a range of model objects, you can prefix the type of the object with\r\n\t * `model:` or `view:` to check, for example, if this is the model's or view's element:\r\n\t *\r\n\t *\t\tviewElement.is( 'view:element' ); // -> true\r\n\t *\t\tviewElement.is( 'model:element' ); // -> false\r\n\t *\r\n\t * By using this method it is also possible to check a name of an element:\r\n\t *\r\n\t *\t\timgElement.is( 'img' ); // -> true\r\n\t *\t\timgElement.is( 'element', 'img' ); // -> same as above\r\n\t *\t\timgElement.is( 'view:element', 'img' ); // -> same as above, but more precise\r\n\t *\r\n\t * The list of view objects which implement the `is()` method:\r\n\t *\r\n\t * * {@link module:engine/view/attributeelement~AttributeElement#is `AttributeElement#is()`}\r\n\t * * {@link module:engine/view/containerelement~ContainerElement#is `ContainerElement#is()`}\r\n\t * * {@link module:engine/view/documentfragment~DocumentFragment#is `DocumentFragment#is()`}\r\n\t * * {@link module:engine/view/documentselection~DocumentSelection#is `DocumentSelection#is()`}\r\n\t * * {@link module:engine/view/editableelement~EditableElement#is `EditableElement#is()`}\r\n\t * * {@link module:engine/view/element~Element#is `Element#is()`}\r\n\t * * {@link module:engine/view/emptyelement~EmptyElement#is `EmptyElement#is()`}\r\n\t * * {@link module:engine/view/node~Node#is `Node#is()`}\r\n\t * * {@link module:engine/view/position~Position#is `Position#is()`}\r\n\t * * {@link module:engine/view/range~Range#is `Range#is()`}\r\n\t * * {@link module:engine/view/rooteditableelement~RootEditableElement#is `RootEditableElement#is()`}\r\n\t * * {@link module:engine/view/selection~Selection#is `Selection#is()`}\r\n\t * * {@link module:engine/view/text~Text#is `Text#is()`}\r\n\t * * {@link module:engine/view/textproxy~TextProxy#is `TextProxy#is()`}\r\n\t * * {@link module:engine/view/uielement~UIElement#is `UIElement#is()`}\r\n\t *\r\n\t * @method #is\r\n\t * @param {String} type\r\n\t * @returns {Boolean}\r\n\t */\r\n\tis( type ) {\r\n\t\treturn type == 'node' || type == 'view:node';\r\n\t}\r\n\r\n\t/**\r\n\t * Clones this node.\r\n\t *\r\n\t * @protected\r\n\t * @method #_clone\r\n\t * @returns {module:engine/view/node~Node} Clone of this node.\r\n\t */\r\n\r\n\t/**\r\n\t * Checks if provided node is similar to this node.\r\n\t *\r\n\t * @method #isSimilar\r\n\t * @returns {Boolean} True if nodes are similar.\r\n\t */\r\n}\r\n\r\n/**\r\n * Fired when list of {@link module:engine/view/element~Element elements} children changes.\r\n *\r\n * Change event is bubbled – it is fired on all ancestors.\r\n *\r\n * @event change:children\r\n * @param {module:engine/view/node~Node} changedNode\r\n */\r\n\r\n/**\r\n * Fired when list of {@link module:engine/view/element~Element elements} attributes changes.\r\n *\r\n * Change event is bubbled – it is fired on all ancestors.\r\n *\r\n * @event change:attributes\r\n * @param {module:engine/view/node~Node} changedNode\r\n */\r\n\r\n/**\r\n * Fired when {@link module:engine/view/text~Text text nodes} data changes.\r\n *\r\n * Change event is bubbled – it is fired on all ancestors.\r\n *\r\n * @event change:text\r\n * @param {module:engine/view/node~Node} changedNode\r\n */\r\n\r\n/**\r\n * @event change\r\n */\r\n\r\nmix( Node, EmitterMixin );\r\n","\r\n/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/view/observer/clickobserver\r\n */\r\n\r\nimport DomEventObserver from './domeventobserver';\r\n\r\n/**\r\n * {@link module:engine/view/document~Document#event:click Click} event observer.\r\n *\r\n * Note that this observer is not available by default. To make it available it needs to be added to\r\n * {@link module:engine/view/view~View view controller}\r\n * by a {@link module:engine/view/view~View#addObserver} method.\r\n *\r\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\r\n */\r\nexport default class ClickObserver extends DomEventObserver {\r\n\tconstructor( view ) {\r\n\t\tsuper( view );\r\n\r\n\t\tthis.domEventType = 'click';\r\n\t}\r\n\r\n\tonDomEvent( domEvent ) {\r\n\t\tthis.fire( domEvent.type, domEvent );\r\n\t}\r\n}\r\n\r\n/**\r\n * Fired when one of the editables has been clicked.\r\n *\r\n * Introduced by {@link module:engine/view/observer/clickobserver~ClickObserver}.\r\n *\r\n * Note that this event is not available by default. To make it available\r\n * {@link module:engine/view/observer/clickobserver~ClickObserver} needs to be added\r\n * to {@link module:engine/view/view~View} by a {@link module:engine/view/view~View#addObserver} method.\r\n *\r\n * @see module:engine/view/observer/clickobserver~ClickObserver\r\n * @event module:engine/view/document~Document#event:click\r\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/view/observer/compositionobserver\r\n */\r\n\r\nimport DomEventObserver from './domeventobserver';\r\n\r\n/**\r\n * {@link module:engine/view/document~Document#event:compositionstart Compositionstart},\r\n * {@link module:engine/view/document~Document#event:compositionupdate compositionupdate} and\r\n * {@link module:engine/view/document~Document#event:compositionend compositionend} events observer.\r\n *\r\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\r\n *\r\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\r\n */\r\nexport default class CompositionObserver extends DomEventObserver {\r\n\tconstructor( view ) {\r\n\t\tsuper( view );\r\n\r\n\t\tthis.domEventType = [ 'compositionstart', 'compositionupdate', 'compositionend' ];\r\n\t\tconst document = this.document;\r\n\r\n\t\tdocument.on( 'compositionstart', () => {\r\n\t\t\tdocument.isComposing = true;\r\n\t\t} );\r\n\r\n\t\tdocument.on( 'compositionend', () => {\r\n\t\t\tdocument.isComposing = false;\r\n\t\t} );\r\n\t}\r\n\r\n\tonDomEvent( domEvent ) {\r\n\t\tthis.fire( domEvent.type, domEvent );\r\n\t}\r\n}\r\n\r\n/**\r\n * Fired when composition starts inside one of the editables.\r\n *\r\n * Introduced by {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\r\n *\r\n * Note that because {@link module:engine/view/observer/compositionobserver~CompositionObserver} is attached by the\r\n * {@link module:engine/view/view~View} this event is available by default.\r\n *\r\n * @see module:engine/view/observer/compositionobserver~CompositionObserver\r\n * @event module:engine/view/document~Document#event:compositionstart\r\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\r\n */\r\n\r\n/**\r\n * Fired when composition is updated inside one of the editables.\r\n *\r\n * Introduced by {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\r\n *\r\n * Note that because {@link module:engine/view/observer/compositionobserver~CompositionObserver} is attached by the\r\n * {@link module:engine/view/view~View} this event is available by default.\r\n *\r\n * @see module:engine/view/observer/compositionobserver~CompositionObserver\r\n * @event module:engine/view/document~Document#event:compositionupdate\r\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\r\n */\r\n\r\n/**\r\n * Fired when composition ends inside one of the editables.\r\n *\r\n * Introduced by {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\r\n *\r\n * Note that because {@link module:engine/view/observer/compositionobserver~CompositionObserver} is attached by the\r\n * {@link module:engine/view/view~View} this event is available by default.\r\n *\r\n * @see module:engine/view/observer/compositionobserver~CompositionObserver\r\n * @event module:engine/view/document~Document#event:compositionend\r\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/view/observer/domeventdata\r\n */\r\n\r\nimport { extend } from 'lodash-es';\r\n\r\n/**\r\n * Information about a DOM event in context of the {@link module:engine/view/document~Document}.\r\n * It wraps the native event, which usually should not be used as the wrapper contains\r\n * additional data (like key code for keyboard events).\r\n */\r\nexport default class DomEventData {\r\n\t/**\r\n\t * @param {module:engine/view/view~View} view The instance of the view controller.\r\n\t * @param {Event} domEvent The DOM event.\r\n\t * @param {Object} [additionalData] Additional properties that the instance should contain.\r\n\t */\r\n\tconstructor( view, domEvent, additionalData ) {\r\n\t\t/**\r\n\t\t * Instance of the view controller.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/view/view~View} module:engine/view/observer/observer~Observer.DomEvent#view\r\n\t\t */\r\n\t\tthis.view = view;\r\n\r\n\t\t/**\r\n\t\t * The instance of the document.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/view/document~Document} module:engine/view/observer/observer~Observer.DomEvent#document\r\n\t\t */\r\n\t\tthis.document = view.document;\r\n\r\n\t\t/**\r\n\t\t * The DOM event.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Event} module:engine/view/observer/observer~Observer.DomEvent#domEvent\r\n\t\t */\r\n\t\tthis.domEvent = domEvent;\r\n\r\n\t\t/**\r\n\t\t * The DOM target.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {HTMLElement} module:engine/view/observer/observer~Observer.DomEvent#target\r\n\t\t */\r\n\t\tthis.domTarget = domEvent.target;\r\n\r\n\t\textend( this, additionalData );\r\n\t}\r\n\r\n\t/**\r\n\t * The tree view element representing the target.\r\n\t *\r\n\t * @readonly\r\n\t * @type module:engine/view/element~Element\r\n\t */\r\n\tget target() {\r\n\t\treturn this.view.domConverter.mapDomToView( this.domTarget );\r\n\t}\r\n\r\n\t/**\r\n\t * Prevents the native's event default action.\r\n\t */\r\n\tpreventDefault() {\r\n\t\tthis.domEvent.preventDefault();\r\n\t}\r\n\r\n\t/**\r\n\t * Stops native event propagation.\r\n\t */\r\n\tstopPropagation() {\r\n\t\tthis.domEvent.stopPropagation();\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/view/observer/domeventobserver\r\n */\r\n\r\nimport Observer from './observer';\r\nimport DomEventData from './domeventdata';\r\n\r\n/**\r\n * Base class for DOM event observers. This class handles\r\n * {@link module:engine/view/observer/observer~Observer#observe adding} listeners to DOM elements,\r\n * {@link module:engine/view/observer/observer~Observer#disable disabling} and\r\n * {@link module:engine/view/observer/observer~Observer#enable re-enabling} events.\r\n * Child class needs to define\r\n * {@link module:engine/view/observer/domeventobserver~DomEventObserver#domEventType DOM event type} and\r\n * {@link module:engine/view/observer/domeventobserver~DomEventObserver#onDomEvent callback}.\r\n *\r\n * For instance:\r\n *\r\n *\t\tclass ClickObserver extends DomEventObserver {\r\n *\t\t\t// It can also be defined as a normal property in the constructor.\r\n *\t\t\tget domEventType() {\r\n *\t\t\t\treturn 'click';\r\n *\t\t\t}\r\n *\r\n *\t\t\tonDomEvent( domEvent ) {\r\n *\t\t\t\tthis.fire( 'click', domEvent );\r\n *\t\t\t}\r\n *\t\t}\r\n *\r\n * @extends module:engine/view/observer/observer~Observer\r\n */\r\nexport default class DomEventObserver extends Observer {\r\n\t/**\r\n\t * Type of the DOM event the observer should listen on. Array of types can be defined\r\n\t * if the obsever should listen to multiple DOM events.\r\n\t *\r\n\t * @readonly\r\n\t * @member {String|Array.<String>} #domEventType\r\n\t */\r\n\r\n\t/**\r\n\t * Callback which should be called when the DOM event occurred. Note that the callback will not be called if\r\n\t * observer {@link #isEnabled is not enabled}.\r\n\t *\r\n\t * @see #domEventType\r\n\t * @abstract\r\n\t * @method #onDomEvent\r\n\t */\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tconstructor( view ) {\r\n\t\tsuper( view );\r\n\r\n\t\t/**\r\n\t\t * If set to `true` DOM events will be listened on the capturing phase.\r\n\t\t * Default value is `false`.\r\n\t\t *\r\n\t\t * @member {Boolean}\r\n\t\t */\r\n\t\tthis.useCapture = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tobserve( domElement ) {\r\n\t\tconst types = typeof this.domEventType == 'string' ? [ this.domEventType ] : this.domEventType;\r\n\r\n\t\ttypes.forEach( type => {\r\n\t\t\tthis.listenTo( domElement, type, ( eventInfo, domEvent ) => {\r\n\t\t\t\tif ( this.isEnabled ) {\r\n\t\t\t\t\tthis.onDomEvent( domEvent );\r\n\t\t\t\t}\r\n\t\t\t}, { useCapture: this.useCapture } );\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * Calls `Document#fire()` if observer {@link #isEnabled is enabled}.\r\n\t *\r\n\t * @see module:utils/emittermixin~EmitterMixin#fire\r\n\t * @param {String} eventType The event type (name).\r\n\t * @param {Event} domEvent The DOM event.\r\n\t * @param {Object} [additionalData] The additional data which should extend the\r\n\t * {@link module:engine/view/observer/domeventdata~DomEventData event data} object.\r\n\t */\r\n\tfire( eventType, domEvent, additionalData ) {\r\n\t\tif ( this.isEnabled ) {\r\n\t\t\tthis.document.fire( eventType, new DomEventData( this.view, domEvent, additionalData ) );\r\n\t\t}\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/view/observer/fakeselectionobserver\r\n */\r\n\r\nimport Observer from './observer';\r\nimport ViewSelection from '../selection';\r\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\r\nimport { debounce } from 'lodash-es';\r\n\r\n/**\r\n * Fake selection observer class. If view selection is fake it is placed in dummy DOM container. This observer listens\r\n * on {@link module:engine/view/document~Document#event:keydown keydown} events and handles moving fake view selection to the correct place\r\n * if arrow keys are pressed.\r\n * Fires {@link module:engine/view/document~Document#event:selectionChange selectionChange event} simulating natural behaviour of\r\n * {@link module:engine/view/observer/selectionobserver~SelectionObserver SelectionObserver}.\r\n *\r\n * @extends module:engine/view/observer/observer~Observer\r\n */\r\nexport default class FakeSelectionObserver extends Observer {\r\n\t/**\r\n\t * Creates new FakeSelectionObserver instance.\r\n\t *\r\n\t * @param {module:engine/view/view~View} view\r\n\t */\r\n\tconstructor( view ) {\r\n\t\tsuper( view );\r\n\r\n\t\t/**\r\n\t\t * Fires debounced event `selectionChangeDone`. It uses `lodash#debounce` method to delay function call.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @param {Object} data Selection change data.\r\n\t\t * @method #_fireSelectionChangeDoneDebounced\r\n\t\t */\r\n\t\tthis._fireSelectionChangeDoneDebounced = debounce( data => this.document.fire( 'selectionChangeDone', data ), 200 );\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tobserve() {\r\n\t\tconst document = this.document;\r\n\r\n\t\tdocument.on( 'keydown', ( eventInfo, data ) => {\r\n\t\t\tconst selection = document.selection;\r\n\r\n\t\t\tif ( selection.isFake && _isArrowKeyCode( data.keyCode ) && this.isEnabled ) {\r\n\t\t\t\t// Prevents default key down handling - no selection change will occur.\r\n\t\t\t\tdata.preventDefault();\r\n\r\n\t\t\t\tthis._handleSelectionMove( data.keyCode );\r\n\t\t\t}\r\n\t\t}, { priority: 'lowest' } );\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tdestroy() {\r\n\t\tsuper.destroy();\r\n\r\n\t\tthis._fireSelectionChangeDoneDebounced.cancel();\r\n\t}\r\n\r\n\t/**\r\n\t * Handles collapsing view selection according to given key code. If left or up key is provided - new selection will be\r\n\t * collapsed to left. If right or down key is pressed - new selection will be collapsed to right.\r\n\t *\r\n\t * This method fires {@link module:engine/view/document~Document#event:selectionChange} and\r\n\t * {@link module:engine/view/document~Document#event:selectionChangeDone} events imitating behaviour of\r\n\t * {@link module:engine/view/observer/selectionobserver~SelectionObserver}.\r\n\t *\r\n\t * @private\r\n\t * @param {Number} keyCode\r\n\t * @fires module:engine/view/document~Document#event:selectionChange\r\n\t * @fires module:engine/view/document~Document#event:selectionChangeDone\r\n\t */\r\n\t_handleSelectionMove( keyCode ) {\r\n\t\tconst selection = this.document.selection;\r\n\t\tconst newSelection = new ViewSelection( selection.getRanges(), { backward: selection.isBackward, fake: false } );\r\n\r\n\t\t// Left or up arrow pressed - move selection to start.\r\n\t\tif ( keyCode == keyCodes.arrowleft || keyCode == keyCodes.arrowup ) {\r\n\t\t\tnewSelection.setTo( newSelection.getFirstPosition() );\r\n\t\t}\r\n\r\n\t\t// Right or down arrow pressed - move selection to end.\r\n\t\tif ( keyCode == keyCodes.arrowright || keyCode == keyCodes.arrowdown ) {\r\n\t\t\tnewSelection.setTo( newSelection.getLastPosition() );\r\n\t\t}\r\n\r\n\t\tconst data = {\r\n\t\t\toldSelection: selection,\r\n\t\t\tnewSelection,\r\n\t\t\tdomSelection: null\r\n\t\t};\r\n\r\n\t\t// Fire dummy selection change event.\r\n\t\tthis.document.fire( 'selectionChange', data );\r\n\r\n\t\t// Call` #_fireSelectionChangeDoneDebounced` every time when `selectionChange` event is fired.\r\n\t\t// This function is debounced what means that `selectionChangeDone` event will be fired only when\r\n\t\t// defined int the function time will elapse since the last time the function was called.\r\n\t\t// So `selectionChangeDone` will be fired when selection will stop changing.\r\n\t\tthis._fireSelectionChangeDoneDebounced( data );\r\n\t}\r\n}\r\n\r\n// Checks if one of the arrow keys is pressed.\r\n//\r\n// @private\r\n// @param {Number} keyCode\r\n// @returns {Boolean}\r\nfunction _isArrowKeyCode( keyCode ) {\r\n\treturn keyCode == keyCodes.arrowright ||\r\n\t\tkeyCode == keyCodes.arrowleft ||\r\n\t\tkeyCode == keyCodes.arrowup ||\r\n\t\tkeyCode == keyCodes.arrowdown;\r\n}\r\n\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/view/observer/focusobserver\r\n */\r\n\r\n/* globals setTimeout, clearTimeout */\r\n\r\nimport DomEventObserver from './domeventobserver';\r\n\r\n/**\r\n * {@link module:engine/view/document~Document#event:focus Focus}\r\n * and {@link module:engine/view/document~Document#event:blur blur} events observer.\r\n * Focus observer handle also {@link module:engine/view/rooteditableelement~RootEditableElement#isFocused isFocused} property of the\r\n * {@link module:engine/view/rooteditableelement~RootEditableElement root elements}.\r\n *\r\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\r\n *\r\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\r\n */\r\nexport default class FocusObserver extends DomEventObserver {\r\n\tconstructor( view ) {\r\n\t\tsuper( view );\r\n\r\n\t\tthis.domEventType = [ 'focus', 'blur' ];\r\n\t\tthis.useCapture = true;\r\n\t\tconst document = this.document;\r\n\r\n\t\tdocument.on( 'focus', () => {\r\n\t\t\tdocument.isFocused = true;\r\n\r\n\t\t\t// Unfortunately native `selectionchange` event is fired asynchronously.\r\n\t\t\t// We need to wait until `SelectionObserver` handle the event and then render. Otherwise rendering will\r\n\t\t\t// overwrite new DOM selection with selection from the view.\r\n\t\t\t// See https://github.com/ckeditor/ckeditor5-engine/issues/795 for more details.\r\n\t\t\t// Long timeout is needed to solve #676 and https://github.com/ckeditor/ckeditor5-engine/issues/1157 issues.\r\n\t\t\tthis._renderTimeoutId = setTimeout( () => view.forceRender(), 50 );\r\n\t\t} );\r\n\r\n\t\tdocument.on( 'blur', ( evt, data ) => {\r\n\t\t\tconst selectedEditable = document.selection.editableElement;\r\n\r\n\t\t\tif ( selectedEditable === null || selectedEditable === data.target ) {\r\n\t\t\t\tdocument.isFocused = false;\r\n\r\n\t\t\t\t// Re-render the document to update view elements.\r\n\t\t\t\tview.forceRender();\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t/**\r\n\t\t * Identifier of the timeout currently used by focus listener to delay rendering execution.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Number} #_renderTimeoutId\r\n\t\t */\r\n\t}\r\n\r\n\tonDomEvent( domEvent ) {\r\n\t\tthis.fire( domEvent.type, domEvent );\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tdestroy() {\r\n\t\tif ( this._renderTimeoutId ) {\r\n\t\t\tclearTimeout( this._renderTimeoutId );\r\n\t\t}\r\n\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n\r\n/**\r\n * Fired when one of the editables gets focus.\r\n *\r\n * Introduced by {@link module:engine/view/observer/focusobserver~FocusObserver}.\r\n *\r\n * Note that because {@link module:engine/view/observer/focusobserver~FocusObserver} is attached by the\r\n * {@link module:engine/view/view~View} this event is available by default.\r\n *\r\n * @see module:engine/view/observer/focusobserver~FocusObserver\r\n * @event module:engine/view/document~Document#event:focus\r\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\r\n */\r\n\r\n/**\r\n * Fired when one of the editables loses focus.\r\n *\r\n * Introduced by {@link module:engine/view/observer/focusobserver~FocusObserver}.\r\n *\r\n * Note that because {@link module:engine/view/observer/focusobserver~FocusObserver} is attached by the\r\n * {@link module:engine/view/view~View} this event is available by default.\r\n *\r\n * @see module:engine/view/observer/focusobserver~FocusObserver\r\n * @event module:engine/view/document~Document#event:blur\r\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md.\r\n */\r\n\r\n/**\r\n * @module engine/view/observer/inputobserver\r\n */\r\n\r\nimport DomEventObserver from './domeventobserver';\r\n\r\n/**\r\n * Observer for events connected with data input.\r\n *\r\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\r\n *\r\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\r\n */\r\nexport default class InputObserver extends DomEventObserver {\r\n\tconstructor( view ) {\r\n\t\tsuper( view );\r\n\r\n\t\tthis.domEventType = [ 'beforeinput' ];\r\n\t}\r\n\r\n\tonDomEvent( domEvent ) {\r\n\t\tthis.fire( domEvent.type, domEvent );\r\n\t}\r\n}\r\n\r\n/**\r\n * Fired before browser inputs (or deletes) some data.\r\n *\r\n * This event is available only on browsers which support DOM `beforeinput` event.\r\n *\r\n * Introduced by {@link module:engine/view/observer/inputobserver~InputObserver}.\r\n *\r\n * Note that because {@link module:engine/view/observer/inputobserver~InputObserver} is attached by the\r\n * {@link module:engine/view/view~View} this event is available by default.\r\n *\r\n * @see module:engine/view/observer/inputobserver~InputObserver\r\n * @event module:engine/view/document~Document#event:beforeinput\r\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/view/observer/keyobserver\r\n */\r\n\r\nimport DomEventObserver from './domeventobserver';\r\nimport { getCode } from '@ckeditor/ckeditor5-utils/src/keyboard';\r\n\r\n/**\r\n * Observer for events connected with pressing keyboard keys.\r\n *\r\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\r\n *\r\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\r\n */\r\nexport default class KeyObserver extends DomEventObserver {\r\n\tconstructor( view ) {\r\n\t\tsuper( view );\r\n\r\n\t\tthis.domEventType = [ 'keydown', 'keyup' ];\r\n\t}\r\n\r\n\tonDomEvent( domEvt ) {\r\n\t\tthis.fire( domEvt.type, domEvt, {\r\n\t\t\tkeyCode: domEvt.keyCode,\r\n\r\n\t\t\taltKey: domEvt.altKey,\r\n\t\t\tctrlKey: domEvt.ctrlKey || domEvt.metaKey,\r\n\t\t\tshiftKey: domEvt.shiftKey,\r\n\r\n\t\t\tget keystroke() {\r\n\t\t\t\treturn getCode( this );\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n}\r\n\r\n/**\r\n * Fired when a key has been pressed.\r\n *\r\n * Introduced by {@link module:engine/view/observer/keyobserver~KeyObserver}.\r\n *\r\n * Note that because {@link module:engine/view/observer/keyobserver~KeyObserver} is attached by the\r\n * {@link module:engine/view/view~View} this event is available by default.\r\n *\r\n * @see module:engine/view/observer/keyobserver~KeyObserver\r\n * @event module:engine/view/document~Document#event:keydown\r\n * @param {module:engine/view/observer/keyobserver~KeyEventData} keyEventData\r\n */\r\n\r\n/**\r\n * Fired when a key has been released.\r\n *\r\n * Introduced by {@link module:engine/view/observer/keyobserver~KeyObserver}.\r\n *\r\n * Note that because {@link module:engine/view/observer/keyobserver~KeyObserver} is attached by the\r\n * {@link module:engine/view/view~View} this event is available by default.\r\n *\r\n * @see module:engine/view/observer/keyobserver~KeyObserver\r\n * @event module:engine/view/document~Document#event:keyup\r\n * @param {module:engine/view/observer/keyobserver~KeyEventData} keyEventData\r\n */\r\n\r\n/**\r\n * The value of both events - {@link module:engine/view/document~Document#event:keydown} and\r\n * {@link module:engine/view/document~Document#event:keyup}.\r\n *\r\n * @class module:engine/view/observer/keyobserver~KeyEventData\r\n * @extends module:engine/view/observer/domeventdata~DomEventData\r\n * @implements module:utils/keyboard~KeystrokeInfo\r\n */\r\n\r\n/**\r\n * Code of the whole keystroke. See {@link module:utils/keyboard~getCode}.\r\n *\r\n * @readonly\r\n * @member {Number} module:engine/view/observer/keyobserver~KeyEventData#keystroke\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/view/observer/mutationobserver\r\n */\r\n\r\n/* globals window */\r\n\r\nimport Observer from './observer';\r\nimport ViewSelection from '../selection';\r\nimport { startsWithFiller, getDataWithoutFiller } from '../filler';\r\nimport { isEqualWith } from 'lodash-es';\r\n\r\n/**\r\n * Mutation observer class observes changes in the DOM, fires {@link module:engine/view/document~Document#event:mutations} event, mark view\r\n * elements as changed and call {@link module:engine/view/renderer~Renderer#render}.\r\n * Because all mutated nodes are marked as \"to be rendered\" and the\r\n * {@link module:engine/view/renderer~Renderer#render} is called, all changes will be reverted, unless the mutation will be handled by the\r\n * {@link module:engine/view/document~Document#event:mutations} event listener. It means user will see only handled changes, and the editor\r\n * will block all changes which are not handled.\r\n *\r\n * Mutation Observer also take care of reducing number of mutations which are fired. It removes duplicates and\r\n * mutations on elements which do not have corresponding view elements. Also\r\n * {@link module:engine/view/observer/mutationobserver~MutatedText text mutation} is fired only if parent element do not change child list.\r\n *\r\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\r\n *\r\n * @extends module:engine/view/observer/observer~Observer\r\n */\r\nexport default class MutationObserver extends Observer {\r\n\tconstructor( view ) {\r\n\t\tsuper( view );\r\n\r\n\t\t/**\r\n\t\t * Native mutation observer config.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Object}\r\n\t\t */\r\n\t\tthis._config = {\r\n\t\t\tchildList: true,\r\n\t\t\tcharacterData: true,\r\n\t\t\tcharacterDataOldValue: true,\r\n\t\t\tsubtree: true\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Reference to the {@link module:engine/view/view~View#domConverter}.\r\n\t\t *\r\n\t\t * @member {module:engine/view/domconverter~DomConverter}\r\n\t\t */\r\n\t\tthis.domConverter = view.domConverter;\r\n\r\n\t\t/**\r\n\t\t * Reference to the {@link module:engine/view/view~View#_renderer}.\r\n\t\t *\r\n\t\t * @member {module:engine/view/renderer~Renderer}\r\n\t\t */\r\n\t\tthis.renderer = view._renderer;\r\n\r\n\t\t/**\r\n\t\t * Observed DOM elements.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Array.<HTMLElement>}\r\n\t\t */\r\n\t\tthis._domElements = [];\r\n\r\n\t\t/**\r\n\t\t * Native mutation observer.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {MutationObserver}\r\n\t\t */\r\n\t\tthis._mutationObserver = new window.MutationObserver( this._onMutations.bind( this ) );\r\n\t}\r\n\r\n\t/**\r\n\t * Synchronously fires {@link module:engine/view/document~Document#event:mutations} event with all mutations in record queue.\r\n\t * At the same time empties the queue so mutations will not be fired twice.\r\n\t */\r\n\tflush() {\r\n\t\tthis._onMutations( this._mutationObserver.takeRecords() );\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tobserve( domElement ) {\r\n\t\tthis._domElements.push( domElement );\r\n\r\n\t\tif ( this.isEnabled ) {\r\n\t\t\tthis._mutationObserver.observe( domElement, this._config );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tenable() {\r\n\t\tsuper.enable();\r\n\r\n\t\tfor ( const domElement of this._domElements ) {\r\n\t\t\tthis._mutationObserver.observe( domElement, this._config );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tdisable() {\r\n\t\tsuper.disable();\r\n\r\n\t\tthis._mutationObserver.disconnect();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tdestroy() {\r\n\t\tsuper.destroy();\r\n\r\n\t\tthis._mutationObserver.disconnect();\r\n\t}\r\n\r\n\t/**\r\n\t * Handles mutations. Deduplicates, mark view elements to sync, fire event and call render.\r\n\t *\r\n\t * @private\r\n\t * @param {Array.<Object>} domMutations Array of native mutations.\r\n\t */\r\n\t_onMutations( domMutations ) {\r\n\t\t// As a result of this.flush() we can have an empty collection.\r\n\t\tif ( domMutations.length === 0 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst domConverter = this.domConverter;\r\n\r\n\t\t// Use map and set for deduplication.\r\n\t\tconst mutatedTexts = new Map();\r\n\t\tconst mutatedElements = new Set();\r\n\r\n\t\t// Handle `childList` mutations first, so we will be able to check if the `characterData` mutation is in the\r\n\t\t// element with changed structure anyway.\r\n\t\tfor ( const mutation of domMutations ) {\r\n\t\t\tif ( mutation.type === 'childList' ) {\r\n\t\t\t\tconst element = domConverter.mapDomToView( mutation.target );\r\n\r\n\t\t\t\t// Do not collect mutations from UIElements.\r\n\t\t\t\tif ( element && element.is( 'uiElement' ) ) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( element && !this._isBogusBrMutation( mutation ) ) {\r\n\t\t\t\t\tmutatedElements.add( element );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Handle `characterData` mutations later, when we have the full list of nodes which changed structure.\r\n\t\tfor ( const mutation of domMutations ) {\r\n\t\t\tconst element = domConverter.mapDomToView( mutation.target );\r\n\r\n\t\t\t// Do not collect mutations from UIElements.\r\n\t\t\tif ( element && element.is( 'uiElement' ) ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif ( mutation.type === 'characterData' ) {\r\n\t\t\t\tconst text = domConverter.findCorrespondingViewText( mutation.target );\r\n\r\n\t\t\t\tif ( text && !mutatedElements.has( text.parent ) ) {\r\n\t\t\t\t\t// Use text as a key, for deduplication. If there will be another mutation on the same text element\r\n\t\t\t\t\t// we will have only one in the map.\r\n\t\t\t\t\tmutatedTexts.set( text, {\r\n\t\t\t\t\t\ttype: 'text',\r\n\t\t\t\t\t\toldText: text.data,\r\n\t\t\t\t\t\tnewText: getDataWithoutFiller( mutation.target ),\r\n\t\t\t\t\t\tnode: text\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t\t// When we added first letter to the text node which had only inline filler, for the DOM it is mutation\r\n\t\t\t\t// on text, but for the view, where filler text node did not existed, new text node was created, so we\r\n\t\t\t\t// need to fire 'children' mutation instead of 'text'.\r\n\t\t\t\telse if ( !text && startsWithFiller( mutation.target ) ) {\r\n\t\t\t\t\tmutatedElements.add( domConverter.mapDomToView( mutation.target.parentNode ) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Now we build the list of mutations to fire and mark elements. We did not do it earlier to avoid marking the\r\n\t\t// same node multiple times in case of duplication.\r\n\r\n\t\t// List of mutations we will fire.\r\n\t\tconst viewMutations = [];\r\n\r\n\t\tfor ( const mutatedText of mutatedTexts.values() ) {\r\n\t\t\tthis.renderer.markToSync( 'text', mutatedText.node );\r\n\t\t\tviewMutations.push( mutatedText );\r\n\t\t}\r\n\r\n\t\tfor ( const viewElement of mutatedElements ) {\r\n\t\t\tconst domElement = domConverter.mapViewToDom( viewElement );\r\n\t\t\tconst viewChildren = Array.from( viewElement.getChildren() );\r\n\t\t\tconst newViewChildren = Array.from( domConverter.domChildrenToView( domElement, { withChildren: false } ) );\r\n\r\n\t\t\t// It may happen that as a result of many changes (sth was inserted and then removed),\r\n\t\t\t// both elements haven't really changed. #1031\r\n\t\t\tif ( !isEqualWith( viewChildren, newViewChildren, sameNodes ) ) {\r\n\t\t\t\tthis.renderer.markToSync( 'children', viewElement );\r\n\r\n\t\t\t\tviewMutations.push( {\r\n\t\t\t\t\ttype: 'children',\r\n\t\t\t\t\toldChildren: viewChildren,\r\n\t\t\t\t\tnewChildren: newViewChildren,\r\n\t\t\t\t\tnode: viewElement\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Retrieve `domSelection` using `ownerDocument` of one of mutated nodes.\r\n\t\t// There should not be simultaneous mutation in multiple documents, so it's fine.\r\n\t\tconst domSelection = domMutations[ 0 ].target.ownerDocument.getSelection();\r\n\r\n\t\tlet viewSelection = null;\r\n\r\n\t\tif ( domSelection && domSelection.anchorNode ) {\r\n\t\t\t// If `domSelection` is inside a dom node that is already bound to a view node from view tree, get\r\n\t\t\t// corresponding selection in the view and pass it together with `viewMutations`. The `viewSelection` may\r\n\t\t\t// be used by features handling mutations.\r\n\t\t\t// Only one range is supported.\r\n\r\n\t\t\tconst viewSelectionAnchor = domConverter.domPositionToView( domSelection.anchorNode, domSelection.anchorOffset );\r\n\t\t\tconst viewSelectionFocus = domConverter.domPositionToView( domSelection.focusNode, domSelection.focusOffset );\r\n\r\n\t\t\t// Anchor and focus has to be properly mapped to view.\r\n\t\t\tif ( viewSelectionAnchor && viewSelectionFocus ) {\r\n\t\t\t\tviewSelection = new ViewSelection( viewSelectionAnchor );\r\n\t\t\t\tviewSelection.setFocus( viewSelectionFocus );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// In case only non-relevant mutations were recorded it skips the event and force render (#5600).\r\n\t\tif ( viewMutations.length ) {\r\n\t\t\tthis.document.fire( 'mutations', viewMutations, viewSelection );\r\n\r\n\t\t\t// If nothing changes on `mutations` event, at this point we have \"dirty DOM\" (changed) and de-synched\r\n\t\t\t// view (which has not been changed). In order to \"reset DOM\" we render the view again.\r\n\t\t\tthis.view.forceRender();\r\n\t\t}\r\n\r\n\t\tfunction sameNodes( child1, child2 ) {\r\n\t\t\t// First level of comparison (array of children vs array of children) – use the Lodash's default behavior.\r\n\t\t\tif ( Array.isArray( child1 ) ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Elements.\r\n\t\t\tif ( child1 === child2 ) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\t// Texts.\r\n\t\t\telse if ( child1.is( 'text' ) && child2.is( 'text' ) ) {\r\n\t\t\t\treturn child1.data === child2.data;\r\n\t\t\t}\r\n\r\n\t\t\t// Not matching types.\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if mutation was generated by the browser inserting bogus br on the end of the block element.\r\n\t * Such mutations are generated while pressing space or performing native spellchecker correction\r\n\t * on the end of the block element in Firefox browser.\r\n\t *\r\n\t * @private\r\n\t * @param {Object} mutation Native mutation object.\r\n\t * @returns {Boolean}\r\n\t */\r\n\t_isBogusBrMutation( mutation ) {\r\n\t\tlet addedNode = null;\r\n\r\n\t\t// Check if mutation added only one node on the end of its parent.\r\n\t\tif ( mutation.nextSibling === null && mutation.removedNodes.length === 0 && mutation.addedNodes.length == 1 ) {\r\n\t\t\taddedNode = this.domConverter.domToView( mutation.addedNodes[ 0 ], {\r\n\t\t\t\twithChildren: false\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\treturn addedNode && addedNode.is( 'element', 'br' );\r\n\t}\r\n}\r\n\r\n/**\r\n * Fired when mutation occurred. If tree view is not changed on this event, DOM will be reverted to the state before\r\n * mutation, so all changes which should be applied, should be handled on this event.\r\n *\r\n * Introduced by {@link module:engine/view/observer/mutationobserver~MutationObserver}.\r\n *\r\n * Note that because {@link module:engine/view/observer/mutationobserver~MutationObserver} is attached by the\r\n * {@link module:engine/view/view~View} this event is available by default.\r\n *\r\n * @see module:engine/view/observer/mutationobserver~MutationObserver\r\n * @event module:engine/view/document~Document#event:mutations\r\n * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|module:engine/view/observer/mutationobserver~MutatedChildren>}\r\n * viewMutations Array of mutations.\r\n * For mutated texts it will be {@link module:engine/view/observer/mutationobserver~MutatedText} and for mutated elements it will be\r\n * {@link module:engine/view/observer/mutationobserver~MutatedChildren}. You can recognize the type based on the `type` property.\r\n * @param {module:engine/view/selection~Selection|null} viewSelection View selection that is a result of converting DOM selection to view.\r\n * Keep in\r\n * mind that the DOM selection is already \"updated\", meaning that it already acknowledges changes done in mutation.\r\n */\r\n\r\n/**\r\n * Mutation item for text.\r\n *\r\n * @see module:engine/view/document~Document#event:mutations\r\n * @see module:engine/view/observer/mutationobserver~MutatedChildren\r\n *\r\n * @typedef {Object} module:engine/view/observer/mutationobserver~MutatedText\r\n *\r\n * @property {String} type For text mutations it is always 'text'.\r\n * @property {module:engine/view/text~Text} node Mutated text node.\r\n * @property {String} oldText Old text.\r\n * @property {String} newText New text.\r\n */\r\n\r\n/**\r\n * Mutation item for child nodes.\r\n *\r\n * @see module:engine/view/document~Document#event:mutations\r\n * @see module:engine/view/observer/mutationobserver~MutatedText\r\n *\r\n * @typedef {Object} module:engine/view/observer/mutationobserver~MutatedChildren\r\n *\r\n * @property {String} type For child nodes mutations it is always 'children'.\r\n * @property {module:engine/view/element~Element} node Parent of the mutated children.\r\n * @property {Array.<module:engine/view/node~Node>} oldChildren Old child nodes.\r\n * @property {Array.<module:engine/view/node~Node>} newChildren New child nodes.\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/view/observer/observer\r\n */\r\n\r\nimport DomEmitterMixin from '@ckeditor/ckeditor5-utils/src/dom/emittermixin';\r\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\r\n\r\n/**\r\n * Abstract base observer class. Observers are classes which listen to DOM events, do the preliminary\r\n * processing and fire events on the {@link module:engine/view/document~Document} objects.\r\n * Observers can also add features to the view, for instance by updating its status or marking elements\r\n * which need refresh on DOM events.\r\n *\r\n * @abstract\r\n */\r\nexport default class Observer {\r\n\t/**\r\n\t * Creates an instance of the observer.\r\n\t *\r\n\t * @param {module:engine/view/view~View} view\r\n\t */\r\n\tconstructor( view ) {\r\n\t\t/**\r\n\t\t * Instance of the view controller.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/view/view~View}\r\n\t\t */\r\n\t\tthis.view = view;\r\n\r\n\t\t/**\r\n\t\t * Reference to the {@link module:engine/view/document~Document} object.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/view/document~Document}\r\n\t\t */\r\n\t\tthis.document = view.document;\r\n\r\n\t\t/**\r\n\t\t * State of the observer. If it is disabled events will not be fired.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Boolean}\r\n\t\t */\r\n\t\tthis.isEnabled = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Enables the observer. This method is called when the observer is registered to the\r\n\t * {@link module:engine/view/view~View} and after {@link module:engine/view/view~View#forceRender rendering}\r\n\t * (all observers are {@link #disable disabled} before rendering).\r\n\t *\r\n\t * A typical use case for disabling observers is that mutation observers need to be disabled for the rendering.\r\n\t * However, a child class may not need to be disabled, so it can implement an empty method.\r\n\t *\r\n\t * @see module:engine/view/observer/observer~Observer#disable\r\n\t */\r\n\tenable() {\r\n\t\tthis.isEnabled = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Disables the observer. This method is called before\r\n\t * {@link module:engine/view/view~View#forceRender rendering} to prevent firing events during rendering.\r\n\t *\r\n\t * @see module:engine/view/observer/observer~Observer#enable\r\n\t */\r\n\tdisable() {\r\n\t\tthis.isEnabled = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Disables and destroys the observer, among others removes event listeners created by the observer.\r\n\t */\r\n\tdestroy() {\r\n\t\tthis.disable();\r\n\t\tthis.stopListening();\r\n\t}\r\n\r\n\t/**\r\n\t * Starts observing the given root element.\r\n\t *\r\n\t * @method #observe\r\n\t * @param {HTMLElement} domElement\r\n\t * @param {String} name The name of the root element.\r\n\t */\r\n}\r\n\r\nmix( Observer, DomEmitterMixin );\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/view/observer/selectionobserver\r\n */\r\n\r\n/* global setInterval, clearInterval */\r\n\r\nimport Observer from './observer';\r\nimport MutationObserver from './mutationobserver';\r\nimport { debounce } from 'lodash-es';\r\n\r\n/**\r\n * Selection observer class observes selection changes in the document. If selection changes on the document this\r\n * observer checks if there are any mutations and if DOM selection is different than the\r\n * {@link module:engine/view/document~Document#selection view selection}. Selection observer fires\r\n * {@link module:engine/view/document~Document#event:selectionChange} event only if selection change was the only change in the document\r\n * and DOM selection is different then the view selection.\r\n *\r\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\r\n *\r\n * @see module:engine/view/observer/mutationobserver~MutationObserver\r\n * @extends module:engine/view/observer/observer~Observer\r\n */\r\nexport default class SelectionObserver extends Observer {\r\n\tconstructor( view ) {\r\n\t\tsuper( view );\r\n\r\n\t\t/**\r\n\t\t * Instance of the mutation observer. Selection observer calls\r\n\t\t * {@link module:engine/view/observer/mutationobserver~MutationObserver#flush} to ensure that the mutations will be handled\r\n\t\t * before the {@link module:engine/view/document~Document#event:selectionChange} event is fired.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/view/observer/mutationobserver~MutationObserver}\r\n\t\t * module:engine/view/observer/selectionobserver~SelectionObserver#mutationObserver\r\n\t\t */\r\n\t\tthis.mutationObserver = view.getObserver( MutationObserver );\r\n\r\n\t\t/**\r\n\t\t * Reference to the view {@link module:engine/view/documentselection~DocumentSelection} object used to compare\r\n\t\t * new selection with it.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/view/documentselection~DocumentSelection}\r\n\t\t * module:engine/view/observer/selectionobserver~SelectionObserver#selection\r\n\t\t */\r\n\t\tthis.selection = this.document.selection;\r\n\r\n\t\t/* eslint-disable max-len */\r\n\t\t/**\r\n\t\t * Reference to the {@link module:engine/view/view~View#domConverter}.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/view/domconverter~DomConverter} module:engine/view/observer/selectionobserver~SelectionObserver#domConverter\r\n\t\t */\r\n\t\t/* eslint-enable max-len */\r\n\t\tthis.domConverter = view.domConverter;\r\n\r\n\t\t/**\r\n\t\t * Set of documents which have added \"selectionchange\" listener to avoid adding listener twice to the same\r\n\t\t * document.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {WeakSet.<Document>} module:engine/view/observer/selectionobserver~SelectionObserver#_documents\r\n\t\t */\r\n\t\tthis._documents = new WeakSet();\r\n\r\n\t\t/**\r\n\t\t * Fires debounced event `selectionChangeDone`. It uses `lodash#debounce` method to delay function call.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @param {Object} data Selection change data.\r\n\t\t * @method #_fireSelectionChangeDoneDebounced\r\n\t\t */\r\n\t\tthis._fireSelectionChangeDoneDebounced = debounce( data => this.document.fire( 'selectionChangeDone', data ), 200 );\r\n\r\n\t\tthis._clearInfiniteLoopInterval = setInterval( () => this._clearInfiniteLoop(), 1000 );\r\n\r\n\t\t/**\r\n\t\t * Private property to check if the code does not enter infinite loop.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Number} module:engine/view/observer/selectionobserver~SelectionObserver#_loopbackCounter\r\n\t\t */\r\n\t\tthis._loopbackCounter = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tobserve( domElement ) {\r\n\t\tconst domDocument = domElement.ownerDocument;\r\n\r\n\t\t// Add listener once per each document.\r\n\t\tif ( this._documents.has( domDocument ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.listenTo( domDocument, 'selectionchange', () => {\r\n\t\t\tthis._handleSelectionChange( domDocument );\r\n\t\t} );\r\n\r\n\t\tthis._documents.add( domDocument );\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tdestroy() {\r\n\t\tsuper.destroy();\r\n\r\n\t\tclearInterval( this._clearInfiniteLoopInterval );\r\n\t\tthis._fireSelectionChangeDoneDebounced.cancel();\r\n\t}\r\n\r\n\t/**\r\n\t * Selection change listener. {@link module:engine/view/observer/mutationobserver~MutationObserver#flush Flush} mutations, check if\r\n\t * selection changes and fires {@link module:engine/view/document~Document#event:selectionChange} event on every change\r\n\t * and {@link module:engine/view/document~Document#event:selectionChangeDone} when selection stop changing.\r\n\t *\r\n\t * @private\r\n\t * @param {Document} domDocument DOM document.\r\n\t */\r\n\t_handleSelectionChange( domDocument ) {\r\n\t\tif ( !this.isEnabled ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Ensure the mutation event will be before selection event on all browsers.\r\n\t\tthis.mutationObserver.flush();\r\n\r\n\t\t// If there were mutations then the view will be re-rendered by the mutation observer and selection\r\n\t\t// will be updated, so selections will equal and event will not be fired, as expected.\r\n\t\tconst domSelection = domDocument.defaultView.getSelection();\r\n\t\tconst newViewSelection = this.domConverter.domSelectionToView( domSelection );\r\n\r\n\t\t// Do not convert selection change if the new view selection has no ranges in it.\r\n\t\t//\r\n\t\t// It means that the DOM selection is in some way incorrect. Ranges that were in the DOM selection could not be\r\n\t\t// converted to the view. This happens when the DOM selection was moved outside of the editable element.\r\n\t\tif ( newViewSelection.rangeCount == 0 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( this.selection.isEqual( newViewSelection ) && this.domConverter.isDomSelectionCorrect( domSelection ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Ensure we are not in the infinite loop (#400).\r\n\t\t// This counter is reset each second. 60 selection changes in 1 second is enough high number\r\n\t\t// to be very difficult (impossible) to achieve using just keyboard keys (during normal editor use).\r\n\t\tif ( ++this._loopbackCounter > 60 ) {\r\n\t\t\t// Selection change observer detected an infinite rendering loop.\r\n\t\t\t// Most probably you try to put the selection in the position which is not allowed\r\n\t\t\t// by the browser and browser fixes it automatically what causes `selectionchange` event on\r\n\t\t\t// which a loopback through a model tries to re-render the wrong selection and again.\r\n\t\t\t//\r\n\t\t\t// @if CK_DEBUG // console.warn( 'Selection change observer detected an infinite rendering loop.' );\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( this.selection.isSimilar( newViewSelection ) ) {\r\n\t\t\t// If selection was equal and we are at this point of algorithm, it means that it was incorrect.\r\n\t\t\t// Just re-render it, no need to fire any events, etc.\r\n\t\t\tthis.view.forceRender();\r\n\t\t} else {\r\n\t\t\tconst data = {\r\n\t\t\t\toldSelection: this.selection,\r\n\t\t\t\tnewSelection: newViewSelection,\r\n\t\t\t\tdomSelection\r\n\t\t\t};\r\n\r\n\t\t\t// Prepare data for new selection and fire appropriate events.\r\n\t\t\tthis.document.fire( 'selectionChange', data );\r\n\r\n\t\t\t// Call` #_fireSelectionChangeDoneDebounced` every time when `selectionChange` event is fired.\r\n\t\t\t// This function is debounced what means that `selectionChangeDone` event will be fired only when\r\n\t\t\t// defined int the function time will elapse since the last time the function was called.\r\n\t\t\t// So `selectionChangeDone` will be fired when selection will stop changing.\r\n\t\t\tthis._fireSelectionChangeDoneDebounced( data );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Clears `SelectionObserver` internal properties connected with preventing infinite loop.\r\n\t *\r\n\t * @protected\r\n\t */\r\n\t_clearInfiniteLoop() {\r\n\t\tthis._loopbackCounter = 0;\r\n\t}\r\n}\r\n\r\n/**\r\n * Fired when selection has changed. This event is fired only when the selection change was the only change that happened\r\n * in the document, and old selection is different then the new selection.\r\n *\r\n * Introduced by {@link module:engine/view/observer/selectionobserver~SelectionObserver}.\r\n *\r\n * Note that because {@link module:engine/view/observer/selectionobserver~SelectionObserver} is attached by the\r\n * {@link module:engine/view/view~View} this event is available by default.\r\n *\r\n * @see module:engine/view/observer/selectionobserver~SelectionObserver\r\n * @event module:engine/view/document~Document#event:selectionChange\r\n * @param {Object} data\r\n * @param {module:engine/view/documentselection~DocumentSelection} data.oldSelection Old View selection which is\r\n * {@link module:engine/view/document~Document#selection}.\r\n * @param {module:engine/view/selection~Selection} data.newSelection New View selection which is converted DOM selection.\r\n * @param {Selection} data.domSelection Native DOM selection.\r\n */\r\n\r\n/**\r\n * Fired when selection stops changing.\r\n *\r\n * Introduced by {@link module:engine/view/observer/selectionobserver~SelectionObserver}.\r\n *\r\n * Note that because {@link module:engine/view/observer/selectionobserver~SelectionObserver} is attached by the\r\n * {@link module:engine/view/view~View} this event is available by default.\r\n *\r\n * @see module:engine/view/observer/selectionobserver~SelectionObserver\r\n * @event module:engine/view/document~Document#event:selectionChangeDone\r\n * @param {Object} data\r\n * @param {module:engine/view/documentselection~DocumentSelection} data.oldSelection Old View selection which is\r\n * {@link module:engine/view/document~Document#selection}.\r\n * @param {module:engine/view/selection~Selection} data.newSelection New View selection which is converted DOM selection.\r\n * @param {Selection} data.domSelection Native DOM selection.\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/view/placeholder\r\n */\r\n\r\nimport '../../theme/placeholder.css';\r\n\r\n// Each document stores information about its placeholder elements and check functions.\r\nconst documentPlaceholders = new WeakMap();\r\n\r\n/**\r\n * A helper that enables a placeholder on the provided view element (also updates its visibility).\r\n * The placeholder is a CSS pseudo–element (with a text content) attached to the element.\r\n *\r\n * To change the placeholder text, simply call this method again with new options.\r\n *\r\n * To disable the placeholder, use {@link module:engine/view/placeholder~disablePlaceholder `disablePlaceholder()`} helper.\r\n *\r\n * @param {Object} [options] Configuration options of the placeholder.\r\n * @param {module:engine/view/view~View} options.view Editing view instance.\r\n * @param {module:engine/view/element~Element} options.element Element that will gain a placeholder.\r\n * See `options.isDirectHost` to learn more.\r\n * @param {String} options.text Placeholder text.\r\n * @param {Boolean} [options.isDirectHost=true] If set `false`, the placeholder will not be enabled directly\r\n * in the passed `element` but in one of its children (selected automatically, i.e. a first empty child element).\r\n * Useful when attaching placeholders to elements that can host other elements (not just text), for instance,\r\n * editable root elements.\r\n */\r\nexport function enablePlaceholder( options ) {\r\n\tconst { view, element, text, isDirectHost = true } = options;\r\n\tconst doc = view.document;\r\n\r\n\t// Use a single a single post fixer per—document to update all placeholders.\r\n\tif ( !documentPlaceholders.has( doc ) ) {\r\n\t\tdocumentPlaceholders.set( doc, new Map() );\r\n\r\n\t\t// If a post-fixer callback makes a change, it should return `true` so other post–fixers\r\n\t\t// can re–evaluate the document again.\r\n\t\tdoc.registerPostFixer( writer => updateDocumentPlaceholders( doc, writer ) );\r\n\t}\r\n\r\n\t// Store information about the element placeholder under its document.\r\n\tdocumentPlaceholders.get( doc ).set( element, {\r\n\t\ttext,\r\n\t\tisDirectHost\r\n\t} );\r\n\r\n\t// Update the placeholders right away.\r\n\tview.change( writer => updateDocumentPlaceholders( doc, writer ) );\r\n}\r\n\r\n/**\r\n * Disables the placeholder functionality from a given element.\r\n *\r\n * See {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`} to learn more.\r\n *\r\n * @param {module:engine/view/view~View} view\r\n * @param {module:engine/view/element~Element} element\r\n */\r\nexport function disablePlaceholder( view, element ) {\r\n\tconst doc = element.document;\r\n\r\n\tview.change( writer => {\r\n\t\tif ( !documentPlaceholders.has( doc ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst placeholders = documentPlaceholders.get( doc );\r\n\t\tconst config = placeholders.get( element );\r\n\r\n\t\twriter.removeAttribute( 'data-placeholder', config.hostElement );\r\n\t\thidePlaceholder( writer, config.hostElement );\r\n\r\n\t\tplaceholders.delete( element );\r\n\t} );\r\n}\r\n\r\n/**\r\n * Shows a placeholder in the provided element by changing related attributes and CSS classes.\r\n *\r\n * **Note**: This helper will not update the placeholder visibility nor manage the\r\n * it in any way in the future. What it does is a one–time state change of an element. Use\r\n * {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`} and\r\n * {@link module:engine/view/placeholder~disablePlaceholder `disablePlaceholder()`} for full\r\n * placeholder functionality.\r\n *\r\n * **Note**: This helper will blindly show the placeholder directly in the root editable element if\r\n * one is passed, which could result in a visual clash if the editable element has some children\r\n * (for instance, an empty paragraph). Use {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`}\r\n * in that case or make sure the correct element is passed to the helper.\r\n *\r\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer\r\n * @param {module:engine/view/element~Element} element\r\n * @returns {Boolean} `true`, if any changes were made to the `element`.\r\n */\r\nexport function showPlaceholder( writer, element ) {\r\n\tif ( !element.hasClass( 'ck-placeholder' ) ) {\r\n\t\twriter.addClass( 'ck-placeholder', element );\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n}\r\n\r\n/**\r\n * Hides a placeholder in the element by changing related attributes and CSS classes.\r\n *\r\n * **Note**: This helper will not update the placeholder visibility nor manage the\r\n * it in any way in the future. What it does is a one–time state change of an element. Use\r\n * {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`} and\r\n * {@link module:engine/view/placeholder~disablePlaceholder `disablePlaceholder()`} for full\r\n * placeholder functionality.\r\n *\r\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer\r\n * @param {module:engine/view/element~Element} element\r\n * @returns {Boolean} `true`, if any changes were made to the `element`.\r\n */\r\nexport function hidePlaceholder( writer, element ) {\r\n\tif ( element.hasClass( 'ck-placeholder' ) ) {\r\n\t\twriter.removeClass( 'ck-placeholder', element );\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n}\r\n\r\n/**\r\n * Checks if a placeholder should be displayed in the element.\r\n *\r\n * **Note**: This helper will blindly check the possibility of showing a placeholder directly in the\r\n * root editable element if one is passed, which may not be the expected result. If an element can\r\n * host other elements (not just text), most likely one of its children should be checked instead\r\n * because it will be the final host for the placeholder. Use\r\n * {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`} in that case or make\r\n * sure the correct element is passed to the helper.\r\n *\r\n * @param {module:engine/view/element~Element} element\r\n * @returns {Boolean}\r\n */\r\nexport function needsPlaceholder( element ) {\r\n\tif ( !element.isAttached() ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// The element is empty only as long as it contains nothing but uiElements.\r\n\tconst isEmptyish = !Array.from( element.getChildren() )\r\n\t\t.some( element => !element.is( 'uiElement' ) );\r\n\r\n\tconst doc = element.document;\r\n\r\n\t// If the element is empty and the document is blurred.\r\n\tif ( !doc.isFocused && isEmptyish ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tconst viewSelection = doc.selection;\r\n\tconst selectionAnchor = viewSelection.anchor;\r\n\r\n\t// If document is focused and the element is empty but the selection is not anchored inside it.\r\n\tif ( isEmptyish && selectionAnchor && selectionAnchor.parent !== element ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n}\r\n\r\n// Updates all placeholders associated with a document in a post–fixer callback.\r\n//\r\n// @private\r\n// @param { module:engine/view/document~Document} doc\r\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\r\n// @returns {Boolean} True if any changes were made to the view document.\r\nfunction updateDocumentPlaceholders( doc, writer ) {\r\n\tconst placeholders = documentPlaceholders.get( doc );\r\n\tlet wasViewModified = false;\r\n\r\n\tfor ( const [ element, config ] of placeholders ) {\r\n\t\tif ( updatePlaceholder( writer, element, config ) ) {\r\n\t\t\twasViewModified = true;\r\n\t\t}\r\n\t}\r\n\r\n\treturn wasViewModified;\r\n}\r\n\r\n// Updates a single placeholder in a post–fixer callback.\r\n//\r\n// @private\r\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\r\n// @param {module:engine/view/element~Element} element\r\n// @param {Object} config Configuration of the placeholder\r\n// @param {String} config.text\r\n// @param {Boolean} config.isDirectHost\r\n// @returns {Boolean} True if any changes were made to the view document.\r\nfunction updatePlaceholder( writer, element, config ) {\r\n\tconst { text, isDirectHost } = config;\r\n\r\n\tconst hostElement = isDirectHost ? element : getChildPlaceholderHostSubstitute( element );\r\n\tlet wasViewModified = false;\r\n\r\n\t// When not a direct host, it could happen that there is no child element\r\n\t// capable of displaying a placeholder.\r\n\tif ( !hostElement ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// Cache the host element. It will be necessary for disablePlaceholder() to know\r\n\t// which element should have class and attribute removed because, depending on\r\n\t// the config.isDirectHost value, it could be the element or one of its descendants.\r\n\tconfig.hostElement = hostElement;\r\n\r\n\t// This may be necessary when updating the placeholder text to something else.\r\n\tif ( hostElement.getAttribute( 'data-placeholder' ) !== text ) {\r\n\t\twriter.setAttribute( 'data-placeholder', text, hostElement );\r\n\t\twasViewModified = true;\r\n\t}\r\n\r\n\tif ( needsPlaceholder( hostElement ) ) {\r\n\t\tif ( showPlaceholder( writer, hostElement ) ) {\r\n\t\t\twasViewModified = true;\r\n\t\t}\r\n\t} else if ( hidePlaceholder( writer, hostElement ) ) {\r\n\t\twasViewModified = true;\r\n\t}\r\n\r\n\treturn wasViewModified;\r\n}\r\n\r\n// Gets a child element capable of displaying a placeholder if a parent element can host more\r\n// than just text (for instance, when it is a root editable element). The child element\r\n// can then be used in other placeholder helpers as a substitute of its parent.\r\n//\r\n// @private\r\n// @param {module:engine/view/element~Element} parent\r\n// @returns {module:engine/view/element~Element|null}\r\nfunction getChildPlaceholderHostSubstitute( parent ) {\r\n\tif ( parent.childCount === 1 ) {\r\n\t\tconst firstChild = parent.getChild( 0 );\r\n\r\n\t\tif ( firstChild.is( 'element' ) && !firstChild.is( 'uiElement' ) ) {\r\n\t\t\treturn firstChild;\r\n\t\t}\r\n\t}\r\n\r\n\treturn null;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/view/position\r\n */\r\n\r\nimport TreeWalker from './treewalker';\r\n\r\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\nimport EditableElement from './editableelement';\r\n\r\n// To check if component is loaded more than once.\r\nimport '@ckeditor/ckeditor5-utils/src/version';\r\n\r\n/**\r\n * Position in the view tree. Position is represented by its parent node and an offset in this parent.\r\n *\r\n * In order to create a new position instance use the `createPosition*()` factory methods available in:\r\n *\r\n * * {@link module:engine/view/view~View}\r\n * * {@link module:engine/view/downcastwriter~DowncastWriter}\r\n * * {@link module:engine/view/upcastwriter~UpcastWriter}\r\n */\r\nexport default class Position {\r\n\t/**\r\n\t * Creates a position.\r\n\t *\r\n\t * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} parent Position parent.\r\n\t * @param {Number} offset Position offset.\r\n\t */\r\n\tconstructor( parent, offset ) {\r\n\t\t/**\r\n\t\t * Position parent.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\r\n\t\t * module:engine/view/position~Position#parent\r\n\t\t */\r\n\t\tthis.parent = parent;\r\n\r\n\t\t/**\r\n\t\t * Position offset.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Number} module:engine/view/position~Position#offset\r\n\t\t */\r\n\t\tthis.offset = offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Node directly after the position. Equals `null` when there is no node after position or position is located\r\n\t * inside text node.\r\n\t *\r\n\t * @readonly\r\n\t * @type {module:engine/view/node~Node|null}\r\n\t */\r\n\tget nodeAfter() {\r\n\t\tif ( this.parent.is( 'text' ) ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn this.parent.getChild( this.offset ) || null;\r\n\t}\r\n\r\n\t/**\r\n\t * Node directly before the position. Equals `null` when there is no node before position or position is located\r\n\t * inside text node.\r\n\t *\r\n\t * @readonly\r\n\t * @type {module:engine/view/node~Node|null}\r\n\t */\r\n\tget nodeBefore() {\r\n\t\tif ( this.parent.is( 'text' ) ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn this.parent.getChild( this.offset - 1 ) || null;\r\n\t}\r\n\r\n\t/**\r\n\t * Is `true` if position is at the beginning of its {@link module:engine/view/position~Position#parent parent}, `false` otherwise.\r\n\t *\r\n\t * @readonly\r\n\t * @type {Boolean}\r\n\t */\r\n\tget isAtStart() {\r\n\t\treturn this.offset === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Is `true` if position is at the end of its {@link module:engine/view/position~Position#parent parent}, `false` otherwise.\r\n\t *\r\n\t * @readonly\r\n\t * @type {Boolean}\r\n\t */\r\n\tget isAtEnd() {\r\n\t\tconst endOffset = this.parent.is( 'text' ) ? this.parent.data.length : this.parent.childCount;\r\n\r\n\t\treturn this.offset === endOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Position's root, that is the root of the position's parent element.\r\n\t *\r\n\t * @readonly\r\n\t * @type {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\r\n\t */\r\n\tget root() {\r\n\t\treturn this.parent.root;\r\n\t}\r\n\r\n\t/**\r\n\t * {@link module:engine/view/editableelement~EditableElement EditableElement} instance that contains this position, or `null` if\r\n\t * position is not inside an editable element.\r\n\t *\r\n\t * @type {module:engine/view/editableelement~EditableElement|null}\r\n\t */\r\n\tget editableElement() {\r\n\t\tlet editable = this.parent;\r\n\r\n\t\twhile ( !( editable instanceof EditableElement ) ) {\r\n\t\t\tif ( editable.parent ) {\r\n\t\t\t\teditable = editable.parent;\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn editable;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new instance of Position with offset incremented by `shift` value.\r\n\t *\r\n\t * @param {Number} shift How position offset should get changed. Accepts negative values.\r\n\t * @returns {module:engine/view/position~Position} Shifted position.\r\n\t */\r\n\tgetShiftedBy( shift ) {\r\n\t\tconst shifted = Position._createAt( this );\r\n\r\n\t\tconst offset = shifted.offset + shift;\r\n\t\tshifted.offset = offset < 0 ? 0 : offset;\r\n\r\n\t\treturn shifted;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the farthest position which matches the callback using\r\n\t * {@link module:engine/view/treewalker~TreeWalker TreeWalker}.\r\n\t *\r\n\t * For example:\r\n\t *\r\n\t * \t\tgetLastMatchingPosition( value => value.type == 'text' ); // <p>{}foo</p> -> <p>foo[]</p>\r\n\t * \t\tgetLastMatchingPosition( value => value.type == 'text', { direction: 'backward' } ); // <p>foo[]</p> -> <p>{}foo</p>\r\n\t * \t\tgetLastMatchingPosition( value => false ); // Do not move the position.\r\n\t *\r\n\t * @param {Function} skip Callback function. Gets {@link module:engine/view/treewalker~TreeWalkerValue} and should\r\n\t * return `true` if the value should be skipped or `false` if not.\r\n\t * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\r\n\t *\r\n\t * @returns {module:engine/view/position~Position} The position after the last item which matches the `skip` callback test.\r\n\t */\r\n\tgetLastMatchingPosition( skip, options = {} ) {\r\n\t\toptions.startPosition = this;\r\n\r\n\t\tconst treeWalker = new TreeWalker( options );\r\n\t\ttreeWalker.skip( skip );\r\n\r\n\t\treturn treeWalker.position;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns ancestors array of this position, that is this position's parent and it's ancestors.\r\n\t *\r\n\t * @returns {Array} Array with ancestors.\r\n\t */\r\n\tgetAncestors() {\r\n\t\tif ( this.parent.is( 'documentFragment' ) ) {\r\n\t\t\treturn [ this.parent ];\r\n\t\t} else {\r\n\t\t\treturn this.parent.getAncestors( { includeSelf: true } );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a {@link module:engine/view/node~Node} or {@link module:engine/view/documentfragment~DocumentFragment}\r\n\t * which is a common ancestor of both positions.\r\n\t *\r\n\t * @param {module:engine/view/position~Position} position\r\n\t * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null}\r\n\t */\r\n\tgetCommonAncestor( position ) {\r\n\t\tconst ancestorsA = this.getAncestors();\r\n\t\tconst ancestorsB = position.getAncestors();\r\n\r\n\t\tlet i = 0;\r\n\r\n\t\twhile ( ancestorsA[ i ] == ancestorsB[ i ] && ancestorsA[ i ] ) {\r\n\t\t\ti++;\r\n\t\t}\r\n\r\n\t\treturn i === 0 ? null : ancestorsA[ i - 1 ];\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this object is of the given type.\r\n\t *\r\n\t *\t\tposition.is( 'position' ); // -> true\r\n\t *\t\tposition.is( 'view:position' ); // -> true\r\n\t *\r\n\t *\t\tposition.is( 'model:position' ); // -> false\r\n\t *\t\tposition.is( 'element' ); // -> false\r\n\t *\t\tposition.is( 'range' ); // -> false\r\n\t *\r\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\r\n\t *\r\n\t * @param {String} type\r\n\t * @returns {Boolean}\r\n\t */\r\n\tis( type ) {\r\n\t\treturn type == 'position' || type == 'view:position';\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this position equals given position.\r\n\t *\r\n\t * @param {module:engine/view/position~Position} otherPosition Position to compare with.\r\n\t * @returns {Boolean} True if positions are same.\r\n\t */\r\n\tisEqual( otherPosition ) {\r\n\t\treturn ( this.parent == otherPosition.parent && this.offset == otherPosition.offset );\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this position is located before given position. When method returns `false` it does not mean that\r\n\t * this position is after give one. Two positions may be located inside separate roots and in that situation this\r\n\t * method will still return `false`.\r\n\t *\r\n\t * @see module:engine/view/position~Position#isAfter\r\n\t * @see module:engine/view/position~Position#compareWith\r\n\t * @param {module:engine/view/position~Position} otherPosition Position to compare with.\r\n\t * @returns {Boolean} Returns `true` if this position is before given position.\r\n\t */\r\n\tisBefore( otherPosition ) {\r\n\t\treturn this.compareWith( otherPosition ) == 'before';\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this position is located after given position. When method returns `false` it does not mean that\r\n\t * this position is before give one. Two positions may be located inside separate roots and in that situation this\r\n\t * method will still return `false`.\r\n\t *\r\n\t * @see module:engine/view/position~Position#isBefore\r\n\t * @see module:engine/view/position~Position#compareWith\r\n\t * @param {module:engine/view/position~Position} otherPosition Position to compare with.\r\n\t * @returns {Boolean} Returns `true` if this position is after given position.\r\n\t */\r\n\tisAfter( otherPosition ) {\r\n\t\treturn this.compareWith( otherPosition ) == 'after';\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this position is before, after or in same position that other position. Two positions may be also\r\n\t * different when they are located in separate roots.\r\n\t *\r\n\t * @param {module:engine/view/position~Position} otherPosition Position to compare with.\r\n\t * @returns {module:engine/view/position~PositionRelation}\r\n\t */\r\n\tcompareWith( otherPosition ) {\r\n\t\tif ( this.root !== otherPosition.root ) {\r\n\t\t\treturn 'different';\r\n\t\t}\r\n\r\n\t\tif ( this.isEqual( otherPosition ) ) {\r\n\t\t\treturn 'same';\r\n\t\t}\r\n\r\n\t\t// Get path from root to position's parent element.\r\n\t\tconst thisPath = this.parent.is( 'node' ) ? this.parent.getPath() : [];\r\n\t\tconst otherPath = otherPosition.parent.is( 'node' ) ? otherPosition.parent.getPath() : [];\r\n\r\n\t\t// Add the positions' offsets to the parents offsets.\r\n\t\tthisPath.push( this.offset );\r\n\t\totherPath.push( otherPosition.offset );\r\n\r\n\t\t// Compare both path arrays to find common ancestor.\r\n\t\tconst result = compareArrays( thisPath, otherPath );\r\n\r\n\t\tswitch ( result ) {\r\n\t\t\tcase 'prefix':\r\n\t\t\t\treturn 'before';\r\n\r\n\t\t\tcase 'extension':\r\n\t\t\t\treturn 'after';\r\n\r\n\t\t\tdefault:\r\n\t\t\t\treturn thisPath[ result ] < otherPath[ result ] ? 'before' : 'after';\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a {@link module:engine/view/treewalker~TreeWalker TreeWalker} instance with this positions as a start position.\r\n\t *\r\n\t * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}\r\n\t * @param {module:engine/view/range~Range} [options.boundaries=null] Range to define boundaries of the iterator.\r\n\t * @param {Boolean} [options.singleCharacters=false]\r\n\t * @param {Boolean} [options.shallow=false]\r\n\t * @param {Boolean} [options.ignoreElementEnd=false]\r\n\t */\r\n\tgetWalker( options = {} ) {\r\n\t\toptions.startPosition = this;\r\n\r\n\t\treturn new TreeWalker( options );\r\n\t}\r\n\r\n\tclone() {\r\n\t\treturn new Position( this.parent, this.offset );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates position at the given location. The location can be specified as:\r\n\t *\r\n\t * * a {@link module:engine/view/position~Position position},\r\n\t * * parent element and offset (offset defaults to `0`),\r\n\t * * parent element and `'end'` (sets position at the end of that element),\r\n\t * * {@link module:engine/view/item~Item view item} and `'before'` or `'after'` (sets position before or after given view item).\r\n\t *\r\n\t * This method is a shortcut to other constructors such as:\r\n\t *\r\n\t * * {@link module:engine/view/position~Position._createBefore},\r\n\t * * {@link module:engine/view/position~Position._createAfter}.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/view/item~Item|module:engine/view/position~Position} itemOrPosition\r\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\r\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\r\n\t */\r\n\tstatic _createAt( itemOrPosition, offset ) {\r\n\t\tif ( itemOrPosition instanceof Position ) {\r\n\t\t\treturn new this( itemOrPosition.parent, itemOrPosition.offset );\r\n\t\t} else {\r\n\t\t\tconst node = itemOrPosition;\r\n\r\n\t\t\tif ( offset == 'end' ) {\r\n\t\t\t\toffset = node.is( 'text' ) ? node.data.length : node.childCount;\r\n\t\t\t} else if ( offset == 'before' ) {\r\n\t\t\t\treturn this._createBefore( node );\r\n\t\t\t} else if ( offset == 'after' ) {\r\n\t\t\t\treturn this._createAfter( node );\r\n\t\t\t} else if ( offset !== 0 && !offset ) {\r\n\t\t\t\t/**\r\n\t\t\t\t * {@link module:engine/view/view~View#createPositionAt `View#createPositionAt()`}\r\n\t\t\t\t * requires the offset to be specified when the first parameter is a view item.\r\n\t\t\t\t *\r\n\t\t\t\t * @error view-createPositionAt-offset-required\r\n\t\t\t\t */\r\n\t\t\t\tthrow new CKEditorError(\r\n\t\t\t\t\t'view-createPositionAt-offset-required: ' +\r\n\t\t\t\t\t'View#createPositionAt() requires the offset when the first parameter is a view item.',\r\n\t\t\t\t\tnode\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\treturn new Position( node, offset );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new position after given view item.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/view/item~Item} item View item after which the position should be located.\r\n\t * @returns {module:engine/view/position~Position}\r\n\t */\r\n\tstatic _createAfter( item ) {\r\n\t\t// TextProxy is not a instance of Node so we need do handle it in specific way.\r\n\t\tif ( item.is( 'textProxy' ) ) {\r\n\t\t\treturn new Position( item.textNode, item.offsetInText + item.data.length );\r\n\t\t}\r\n\r\n\t\tif ( !item.parent ) {\r\n\t\t\t/**\r\n\t\t\t * You can not make a position after a root.\r\n\t\t\t *\r\n\t\t\t * @error view-position-after-root\r\n\t\t\t * @param {module:engine/view/node~Node} root\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'view-position-after-root: You can not make position after root.', item, { root: item } );\r\n\t\t}\r\n\r\n\t\treturn new Position( item.parent, item.index + 1 );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new position before given view item.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/view/item~Item} item View item before which the position should be located.\r\n\t * @returns {module:engine/view/position~Position}\r\n\t */\r\n\tstatic _createBefore( item ) {\r\n\t\t// TextProxy is not a instance of Node so we need do handle it in specific way.\r\n\t\tif ( item.is( 'textProxy' ) ) {\r\n\t\t\treturn new Position( item.textNode, item.offsetInText );\r\n\t\t}\r\n\r\n\t\tif ( !item.parent ) {\r\n\t\t\t/**\r\n\t\t\t * You cannot make a position before a root.\r\n\t\t\t *\r\n\t\t\t * @error view-position-before-root\r\n\t\t\t * @param {module:engine/view/node~Node} root\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'view-position-before-root: You can not make position before root.', item, { root: item } );\r\n\t\t}\r\n\r\n\t\treturn new Position( item.parent, item.index );\r\n\t}\r\n}\r\n\r\n/**\r\n * A flag indicating whether this position is `'before'` or `'after'` or `'same'` as given position.\r\n * If positions are in different roots `'different'` flag is returned.\r\n *\r\n * @typedef {String} module:engine/view/position~PositionRelation\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/view/range\r\n */\r\n\r\nimport Position from './position';\r\nimport TreeWalker from './treewalker';\r\n\r\n/**\r\n * Range in the view tree. A range is represented by its start and end {@link module:engine/view/position~Position positions}.\r\n *\r\n * In order to create a new position instance use the `createPosition*()` factory methods available in:\r\n *\r\n * * {@link module:engine/view/view~View}\r\n * * {@link module:engine/view/downcastwriter~DowncastWriter}\r\n * * {@link module:engine/view/upcastwriter~UpcastWriter}\r\n */\r\nexport default class Range {\r\n\t/**\r\n\t * Creates a range spanning from `start` position to `end` position.\r\n\t *\r\n\t * **Note:** Constructor creates it's own {@link module:engine/view/position~Position} instances basing on passed values.\r\n\t *\r\n\t * @param {module:engine/view/position~Position} start Start position.\r\n\t * @param {module:engine/view/position~Position} [end] End position. If not set, range will be collapsed at the `start` position.\r\n\t */\r\n\tconstructor( start, end = null ) {\r\n\t\t/**\r\n\t\t * Start position.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/view/position~Position}\r\n\t\t */\r\n\t\tthis.start = start.clone();\r\n\r\n\t\t/**\r\n\t\t * End position.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/view/position~Position}\r\n\t\t */\r\n\t\tthis.end = end ? end.clone() : start.clone();\r\n\t}\r\n\r\n\t/**\r\n\t * Iterable interface.\r\n\t *\r\n\t * Iterates over all {@link module:engine/view/item~Item view items} that are in this range and returns\r\n\t * them together with additional information like length or {@link module:engine/view/position~Position positions},\r\n\t * grouped as {@link module:engine/view/treewalker~TreeWalkerValue}.\r\n\t *\r\n\t * This iterator uses {@link module:engine/view/treewalker~TreeWalker TreeWalker} with `boundaries` set to this range and\r\n\t * `ignoreElementEnd` option\r\n\t * set to `true`.\r\n\t *\r\n\t * @returns {Iterable.<module:engine/view/treewalker~TreeWalkerValue>}\r\n\t */\r\n\t* [ Symbol.iterator ]() {\r\n\t\tyield* new TreeWalker( { boundaries: this, ignoreElementEnd: true } );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns whether the range is collapsed, that is it start and end positions are equal.\r\n\t *\r\n\t * @type {Boolean}\r\n\t */\r\n\tget isCollapsed() {\r\n\t\treturn this.start.isEqual( this.end );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns whether this range is flat, that is if {@link module:engine/view/range~Range#start start} position and\r\n\t * {@link module:engine/view/range~Range#end end} position are in the same {@link module:engine/view/position~Position#parent parent}.\r\n\t *\r\n\t * @type {Boolean}\r\n\t */\r\n\tget isFlat() {\r\n\t\treturn this.start.parent === this.end.parent;\r\n\t}\r\n\r\n\t/**\r\n\t * Range root element.\r\n\t *\r\n\t * @type {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment}\r\n\t */\r\n\tget root() {\r\n\t\treturn this.start.root;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a maximal range that has the same content as this range but is expanded in both ways (at the beginning\r\n\t * and at the end).\r\n\t *\r\n\t * For example:\r\n\t *\r\n\t *\t\t<p>Foo</p><p><b>{Bar}</b></p> -> <p>Foo</p>[<p><b>Bar</b>]</p>\r\n\t *\t\t<p><b>foo</b>{bar}<span></span></p> -> <p><b>foo[</b>bar<span></span>]</p>\r\n\t *\r\n\t * Note that in the sample above:\r\n\t *\r\n\t * - `<p>` have type of {@link module:engine/view/containerelement~ContainerElement},\r\n\t * - `<b>` have type of {@link module:engine/view/attributeelement~AttributeElement},\r\n\t * - `<span>` have type of {@link module:engine/view/uielement~UIElement}.\r\n\t *\r\n\t * @returns {module:engine/view/range~Range} Enlarged range.\r\n\t */\r\n\tgetEnlarged() {\r\n\t\tlet start = this.start.getLastMatchingPosition( enlargeTrimSkip, { direction: 'backward' } );\r\n\t\tlet end = this.end.getLastMatchingPosition( enlargeTrimSkip );\r\n\r\n\t\t// Fix positions, in case if they are in Text node.\r\n\t\tif ( start.parent.is( 'text' ) && start.isAtStart ) {\r\n\t\t\tstart = Position._createBefore( start.parent );\r\n\t\t}\r\n\r\n\t\tif ( end.parent.is( 'text' ) && end.isAtEnd ) {\r\n\t\t\tend = Position._createAfter( end.parent );\r\n\t\t}\r\n\r\n\t\treturn new Range( start, end );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a minimum range that has the same content as this range but is trimmed in both ways (at the beginning\r\n\t * and at the end).\r\n\t *\r\n\t * For example:\r\n\t *\r\n\t *\t\t<p>Foo</p>[<p><b>Bar</b>]</p> -> <p>Foo</p><p><b>{Bar}</b></p>\r\n\t *\t\t<p><b>foo[</b>bar<span></span>]</p> -> <p><b>foo</b>{bar}<span></span></p>\r\n\t *\r\n\t * Note that in the sample above:\r\n\t *\r\n\t * - `<p>` have type of {@link module:engine/view/containerelement~ContainerElement},\r\n\t * - `<b>` have type of {@link module:engine/view/attributeelement~AttributeElement},\r\n\t * - `<span>` have type of {@link module:engine/view/uielement~UIElement}.\r\n\t *\r\n\t * @returns {module:engine/view/range~Range} Shrink range.\r\n\t */\r\n\tgetTrimmed() {\r\n\t\tlet start = this.start.getLastMatchingPosition( enlargeTrimSkip );\r\n\r\n\t\tif ( start.isAfter( this.end ) || start.isEqual( this.end ) ) {\r\n\t\t\treturn new Range( start, start );\r\n\t\t}\r\n\r\n\t\tlet end = this.end.getLastMatchingPosition( enlargeTrimSkip, { direction: 'backward' } );\r\n\t\tconst nodeAfterStart = start.nodeAfter;\r\n\t\tconst nodeBeforeEnd = end.nodeBefore;\r\n\r\n\t\t// Because TreeWalker prefers positions next to text node, we need to move them manually into these text nodes.\r\n\t\tif ( nodeAfterStart && nodeAfterStart.is( 'text' ) ) {\r\n\t\t\tstart = new Position( nodeAfterStart, 0 );\r\n\t\t}\r\n\r\n\t\tif ( nodeBeforeEnd && nodeBeforeEnd.is( 'text' ) ) {\r\n\t\t\tend = new Position( nodeBeforeEnd, nodeBeforeEnd.data.length );\r\n\t\t}\r\n\r\n\t\treturn new Range( start, end );\r\n\t}\r\n\r\n\t/**\r\n\t * Two ranges are equal if their start and end positions are equal.\r\n\t *\r\n\t * @param {module:engine/view/range~Range} otherRange Range to compare with.\r\n\t * @returns {Boolean} `true` if ranges are equal, `false` otherwise\r\n\t */\r\n\tisEqual( otherRange ) {\r\n\t\treturn this == otherRange || ( this.start.isEqual( otherRange.start ) && this.end.isEqual( otherRange.end ) );\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this range contains given {@link module:engine/view/position~Position position}.\r\n\t *\r\n\t * @param {module:engine/view/position~Position} position Position to check.\r\n\t * @returns {Boolean} `true` if given {@link module:engine/view/position~Position position} is contained in this range,\r\n\t * `false` otherwise.\r\n\t */\r\n\tcontainsPosition( position ) {\r\n\t\treturn position.isAfter( this.start ) && position.isBefore( this.end );\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this range contains given {@link module:engine/view/range~Range range}.\r\n\t *\r\n\t * @param {module:engine/view/range~Range} otherRange Range to check.\r\n\t * @param {Boolean} [loose=false] Whether the check is loose or strict. If the check is strict (`false`), compared range cannot\r\n\t * start or end at the same position as this range boundaries. If the check is loose (`true`), compared range can start, end or\r\n\t * even be equal to this range. Note that collapsed ranges are always compared in strict mode.\r\n\t * @returns {Boolean} `true` if given {@link module:engine/view/range~Range range} boundaries are contained by this range, `false`\r\n\t * otherwise.\r\n\t */\r\n\tcontainsRange( otherRange, loose = false ) {\r\n\t\tif ( otherRange.isCollapsed ) {\r\n\t\t\tloose = false;\r\n\t\t}\r\n\r\n\t\tconst containsStart = this.containsPosition( otherRange.start ) || ( loose && this.start.isEqual( otherRange.start ) );\r\n\t\tconst containsEnd = this.containsPosition( otherRange.end ) || ( loose && this.end.isEqual( otherRange.end ) );\r\n\r\n\t\treturn containsStart && containsEnd;\r\n\t}\r\n\r\n\t/**\r\n\t * Computes which part(s) of this {@link module:engine/view/range~Range range} is not a part of given\r\n\t * {@link module:engine/view/range~Range range}.\r\n\t * Returned array contains zero, one or two {@link module:engine/view/range~Range ranges}.\r\n\t *\r\n\t * Examples:\r\n\t *\r\n\t *\t\tlet foo = downcastWriter.createText( 'foo' );\r\n\t *\t\tlet img = downcastWriter.createContainerElement( 'img' );\r\n\t *\t\tlet bar = downcastWriter.createText( 'bar' );\r\n\t *\t\tlet p = downcastWriter.createContainerElement( 'p', null, [ foo, img, bar ] );\r\n\t *\r\n\t *\t\tlet range = view.createRange( view.createPositionAt( foo, 2 ), view.createPositionAt( bar, 1 ); // \"o\", img, \"b\" are in range.\r\n\t *\t\tlet otherRange = view.createRange( // \"oo\", img, \"ba\" are in range.\r\n\t *\t\t\tview.createPositionAt( foo, 1 ),\r\n\t *\t\t\tview.createPositionAt( bar, 2 )\r\n\t *\t\t);\r\n\t *\t\tlet transformed = range.getDifference( otherRange );\r\n\t *\t\t// transformed array has no ranges because `otherRange` contains `range`\r\n\t *\r\n\t *\t\totherRange = view.createRange( view.createPositionAt( foo, 1 ), view.createPositionAt( p, 2 ); // \"oo\", img are in range.\r\n\t *\t\ttransformed = range.getDifference( otherRange );\r\n\t *\t\t// transformed array has one range: from ( p, 2 ) to ( bar, 1 )\r\n\t *\r\n\t *\t\totherRange = view.createRange( view.createPositionAt( p, 1 ), view.createPositionAt( p, 2 ) ); // img is in range.\r\n\t *\t\ttransformed = range.getDifference( otherRange );\r\n\t *\t\t// transformed array has two ranges: from ( foo, 1 ) to ( p, 1 ) and from ( p, 2 ) to ( bar, 1 )\r\n\t *\r\n\t * @param {module:engine/view/range~Range} otherRange Range to differentiate against.\r\n\t * @returns {Array.<module:engine/view/range~Range>} The difference between ranges.\r\n\t */\r\n\tgetDifference( otherRange ) {\r\n\t\tconst ranges = [];\r\n\r\n\t\tif ( this.isIntersecting( otherRange ) ) {\r\n\t\t\t// Ranges intersect.\r\n\r\n\t\t\tif ( this.containsPosition( otherRange.start ) ) {\r\n\t\t\t\t// Given range start is inside this range. This means that we have to\r\n\t\t\t\t// add shrunken range - from the start to the middle of this range.\r\n\t\t\t\tranges.push( new Range( this.start, otherRange.start ) );\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.containsPosition( otherRange.end ) ) {\r\n\t\t\t\t// Given range end is inside this range. This means that we have to\r\n\t\t\t\t// add shrunken range - from the middle of this range to the end.\r\n\t\t\t\tranges.push( new Range( otherRange.end, this.end ) );\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Ranges do not intersect, return the original range.\r\n\t\t\tranges.push( this.clone() );\r\n\t\t}\r\n\r\n\t\treturn ranges;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an intersection of this {@link module:engine/view/range~Range range} and given {@link module:engine/view/range~Range range}.\r\n\t * Intersection is a common part of both of those ranges. If ranges has no common part, returns `null`.\r\n\t *\r\n\t * Examples:\r\n\t *\r\n\t *\t\tlet foo = downcastWriter.createText( 'foo' );\r\n\t *\t\tlet img = downcastWriter.createContainerElement( 'img' );\r\n\t *\t\tlet bar = downcastWriter.createText( 'bar' );\r\n\t *\t\tlet p = downcastWriter.createContainerElement( 'p', null, [ foo, img, bar ] );\r\n\t *\r\n\t *\t\tlet range = view.createRange( view.createPositionAt( foo, 2 ), view.createPositionAt( bar, 1 ); // \"o\", img, \"b\" are in range.\r\n\t *\t\tlet otherRange = view.createRange( view.createPositionAt( foo, 1 ), view.createPositionAt( p, 2 ); // \"oo\", img are in range.\r\n\t *\t\tlet transformed = range.getIntersection( otherRange ); // range from ( foo, 1 ) to ( p, 2 ).\r\n\t *\r\n\t *\t\totherRange = view.createRange( view.createPositionAt( bar, 1 ), view.createPositionAt( bar, 3 ); \"ar\" is in range.\r\n\t *\t\ttransformed = range.getIntersection( otherRange ); // null - no common part.\r\n\t *\r\n\t * @param {module:engine/view/range~Range} otherRange Range to check for intersection.\r\n\t * @returns {module:engine/view/range~Range|null} A common part of given ranges or `null` if ranges have no common part.\r\n\t */\r\n\tgetIntersection( otherRange ) {\r\n\t\tif ( this.isIntersecting( otherRange ) ) {\r\n\t\t\t// Ranges intersect, so a common range will be returned.\r\n\t\t\t// At most, it will be same as this range.\r\n\t\t\tlet commonRangeStart = this.start;\r\n\t\t\tlet commonRangeEnd = this.end;\r\n\r\n\t\t\tif ( this.containsPosition( otherRange.start ) ) {\r\n\t\t\t\t// Given range start is inside this range. This means thaNt we have to\r\n\t\t\t\t// shrink common range to the given range start.\r\n\t\t\t\tcommonRangeStart = otherRange.start;\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.containsPosition( otherRange.end ) ) {\r\n\t\t\t\t// Given range end is inside this range. This means that we have to\r\n\t\t\t\t// shrink common range to the given range end.\r\n\t\t\t\tcommonRangeEnd = otherRange.end;\r\n\t\t\t}\r\n\r\n\t\t\treturn new Range( commonRangeStart, commonRangeEnd );\r\n\t\t}\r\n\r\n\t\t// Ranges do not intersect, so they do not have common part.\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a {@link module:engine/view/treewalker~TreeWalker TreeWalker} instance with this range as a boundary.\r\n\t *\r\n\t * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\r\n\t * @param {module:engine/view/position~Position} [options.startPosition]\r\n\t * @param {Boolean} [options.singleCharacters=false]\r\n\t * @param {Boolean} [options.shallow=false]\r\n\t * @param {Boolean} [options.ignoreElementEnd=false]\r\n\t * @returns {module:engine/view/treewalker~TreeWalker}\r\n\t */\r\n\tgetWalker( options = {} ) {\r\n\t\toptions.boundaries = this;\r\n\r\n\t\treturn new TreeWalker( options );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a {@link module:engine/view/node~Node} or {@link module:engine/view/documentfragment~DocumentFragment}\r\n\t * which is a common ancestor of range's both ends (in which the entire range is contained).\r\n\t *\r\n\t * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null}\r\n\t */\r\n\tgetCommonAncestor() {\r\n\t\treturn this.start.getCommonAncestor( this.end );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an {@link module:engine/view/element~Element Element} contained by the range.\r\n\t * The element will be returned when it is the **only** node within the range and **fully–contained**\r\n\t * at the same time.\r\n\t *\r\n\t * @returns {module:engine/view/element~Element|null}\r\n\t */\r\n\tgetContainedElement() {\r\n\t\tif ( this.isCollapsed ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tlet nodeAfterStart = this.start.nodeAfter;\r\n\t\tlet nodeBeforeEnd = this.end.nodeBefore;\r\n\r\n\t\t// Handle the situation when the range position is at the beginning / at the end of a text node.\r\n\t\t// In such situation `.nodeAfter` and `.nodeBefore` are `null` but the range still might be spanning\r\n\t\t// over one element.\r\n\t\t//\r\n\t\t// <p>Foo{<span class=\"widget\"></span>}bar</p> vs <p>Foo[<span class=\"widget\"></span>]bar</p>\r\n\t\t//\r\n\t\t// These are basically the same range, only the difference is if the range position is at\r\n\t\t// at the end/at the beginning of a text node or just before/just after the text node.\r\n\t\t//\r\n\t\tif ( this.start.parent.is( 'text' ) && this.start.isAtEnd && this.start.parent.nextSibling ) {\r\n\t\t\tnodeAfterStart = this.start.parent.nextSibling;\r\n\t\t}\r\n\r\n\t\tif ( this.end.parent.is( 'text' ) && this.end.isAtStart && this.end.parent.previousSibling ) {\r\n\t\t\tnodeBeforeEnd = this.end.parent.previousSibling;\r\n\t\t}\r\n\r\n\t\tif ( nodeAfterStart && nodeAfterStart.is( 'element' ) && nodeAfterStart === nodeBeforeEnd ) {\r\n\t\t\treturn nodeAfterStart;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones this range.\r\n\t *\r\n\t * @returns {module:engine/view/range~Range}\r\n\t */\r\n\tclone() {\r\n\t\treturn new Range( this.start, this.end );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an iterator that iterates over all {@link module:engine/view/item~Item view items} that are in this range and returns\r\n\t * them.\r\n\t *\r\n\t * This method uses {@link module:engine/view/treewalker~TreeWalker} with `boundaries` set to this range and `ignoreElementEnd` option\r\n\t * set to `true`. However it returns only {@link module:engine/view/item~Item items},\r\n\t * not {@link module:engine/view/treewalker~TreeWalkerValue}.\r\n\t *\r\n\t * You may specify additional options for the tree walker. See {@link module:engine/view/treewalker~TreeWalker} for\r\n\t * a full list of available options.\r\n\t *\r\n\t * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\r\n\t * @returns {Iterable.<module:engine/view/item~Item>}\r\n\t */\r\n\t* getItems( options = {} ) {\r\n\t\toptions.boundaries = this;\r\n\t\toptions.ignoreElementEnd = true;\r\n\r\n\t\tconst treeWalker = new TreeWalker( options );\r\n\r\n\t\tfor ( const value of treeWalker ) {\r\n\t\t\tyield value.item;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an iterator that iterates over all {@link module:engine/view/position~Position positions} that are boundaries or\r\n\t * contained in this range.\r\n\t *\r\n\t * This method uses {@link module:engine/view/treewalker~TreeWalker} with `boundaries` set to this range. However it returns only\r\n\t * {@link module:engine/view/position~Position positions}, not {@link module:engine/view/treewalker~TreeWalkerValue}.\r\n\t *\r\n\t * You may specify additional options for the tree walker. See {@link module:engine/view/treewalker~TreeWalker} for\r\n\t * a full list of available options.\r\n\t *\r\n\t * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\r\n\t * @returns {Iterable.<module:engine/view/position~Position>}\r\n\t */\r\n\t* getPositions( options = {} ) {\r\n\t\toptions.boundaries = this;\r\n\r\n\t\tconst treeWalker = new TreeWalker( options );\r\n\r\n\t\tyield treeWalker.position;\r\n\r\n\t\tfor ( const value of treeWalker ) {\r\n\t\t\tyield value.nextPosition;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this object is of the given type.\r\n\t *\r\n\t *\t\trange.is( 'range' ); // -> true\r\n\t *\t\trange.is( 'view:range' ); // -> true\r\n\t *\r\n\t *\t\trange.is( 'model:range' ); // -> false\r\n\t *\t\trange.is( 'element' ); // -> false\r\n\t *\t\trange.is( 'selection' ); // -> false\r\n\t *\r\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\r\n\t *\r\n\t * @param {String} type\r\n\t * @returns {Boolean}\r\n\t */\r\n\tis( type ) {\r\n\t\treturn type == 'range' || type == 'view:range';\r\n\t}\r\n\r\n\t/**\r\n\t * Checks and returns whether this range intersects with the given range.\r\n\t *\r\n\t * @param {module:engine/view/range~Range} otherRange Range to compare with.\r\n\t * @returns {Boolean} True if ranges intersect.\r\n\t */\r\n\tisIntersecting( otherRange ) {\r\n\t\treturn this.start.isBefore( otherRange.end ) && this.end.isAfter( otherRange.start );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a range from the given parents and offsets.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} startElement Start position\r\n\t * parent element.\r\n\t * @param {Number} startOffset Start position offset.\r\n\t * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} endElement End position\r\n\t * parent element.\r\n\t * @param {Number} endOffset End position offset.\r\n\t * @returns {module:engine/view/range~Range} Created range.\r\n\t */\r\n\tstatic _createFromParentsAndOffsets( startElement, startOffset, endElement, endOffset ) {\r\n\t\treturn new this(\r\n\t\t\tnew Position( startElement, startOffset ),\r\n\t\t\tnew Position( endElement, endOffset )\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new range, spreading from specified {@link module:engine/view/position~Position position} to a position moved by\r\n\t * given `shift`. If `shift` is a negative value, shifted position is treated as the beginning of the range.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/view/position~Position} position Beginning of the range.\r\n\t * @param {Number} shift How long the range should be.\r\n\t * @returns {module:engine/view/range~Range}\r\n\t */\r\n\tstatic _createFromPositionAndShift( position, shift ) {\r\n\t\tconst start = position;\r\n\t\tconst end = position.getShiftedBy( shift );\r\n\r\n\t\treturn shift > 0 ? new this( start, end ) : new this( end, start );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\r\n\t * that element and ends after the last child of that element.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/view/element~Element} element Element which is a parent for the range.\r\n\t * @returns {module:engine/view/range~Range}\r\n\t */\r\n\tstatic _createIn( element ) {\r\n\t\treturn this._createFromParentsAndOffsets( element, 0, element, element.childCount );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a range that starts before given {@link module:engine/view/item~Item view item} and ends after it.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/view/item~Item} item\r\n\t * @returns {module:engine/view/range~Range}\r\n\t */\r\n\tstatic _createOn( item ) {\r\n\t\tconst size = item.is( 'textProxy' ) ? item.offsetSize : 1;\r\n\r\n\t\treturn this._createFromPositionAndShift( Position._createBefore( item ), size );\r\n\t}\r\n}\r\n\r\n// Function used by getEnlarged and getTrimmed methods.\r\nfunction enlargeTrimSkip( value ) {\r\n\tif ( value.item.is( 'attributeElement' ) || value.item.is( 'uiElement' ) ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/* globals Node */\r\n\r\n/**\r\n * @module engine/view/renderer\r\n */\r\n\r\nimport ViewText from './text';\r\nimport ViewPosition from './position';\r\nimport { INLINE_FILLER, INLINE_FILLER_LENGTH, startsWithFiller, isInlineFiller } from './filler';\r\n\r\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\r\nimport diff from '@ckeditor/ckeditor5-utils/src/diff';\r\nimport insertAt from '@ckeditor/ckeditor5-utils/src/dom/insertat';\r\nimport remove from '@ckeditor/ckeditor5-utils/src/dom/remove';\r\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\nimport isText from '@ckeditor/ckeditor5-utils/src/dom/istext';\r\nimport isNode from '@ckeditor/ckeditor5-utils/src/dom/isnode';\r\nimport fastDiff from '@ckeditor/ckeditor5-utils/src/fastdiff';\r\nimport env from '@ckeditor/ckeditor5-utils/src/env';\r\n\r\n/**\r\n * Renderer is responsible for updating the DOM structure and the DOM selection based on\r\n * the {@link module:engine/view/renderer~Renderer#markToSync information about updated view nodes}.\r\n * In other words, it renders the view to the DOM.\r\n *\r\n * Its main responsibility is to make only the necessary, minimal changes to the DOM. However, unlike in many\r\n * virtual DOM implementations, the primary reason for doing minimal changes is not the performance but ensuring\r\n * that native editing features such as text composition, autocompletion, spell checking, selection's x-index are\r\n * affected as little as possible.\r\n *\r\n * Renderer uses {@link module:engine/view/domconverter~DomConverter} to transform view nodes and positions\r\n * to and from the DOM.\r\n */\r\nexport default class Renderer {\r\n\t/**\r\n\t * Creates a renderer instance.\r\n\t *\r\n\t * @param {module:engine/view/domconverter~DomConverter} domConverter Converter instance.\r\n\t * @param {module:engine/view/documentselection~DocumentSelection} selection View selection.\r\n\t */\r\n\tconstructor( domConverter, selection ) {\r\n\t\t/**\r\n\t\t * Set of DOM Documents instances.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Set.<Document>}\r\n\t\t */\r\n\t\tthis.domDocuments = new Set();\r\n\r\n\t\t/**\r\n\t\t * Converter instance.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/view/domconverter~DomConverter}\r\n\t\t */\r\n\t\tthis.domConverter = domConverter;\r\n\r\n\t\t/**\r\n\t\t * Set of nodes which attributes changed and may need to be rendered.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Set.<module:engine/view/node~Node>}\r\n\t\t */\r\n\t\tthis.markedAttributes = new Set();\r\n\r\n\t\t/**\r\n\t\t * Set of elements which child lists changed and may need to be rendered.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Set.<module:engine/view/node~Node>}\r\n\t\t */\r\n\t\tthis.markedChildren = new Set();\r\n\r\n\t\t/**\r\n\t\t * Set of text nodes which text data changed and may need to be rendered.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Set.<module:engine/view/node~Node>}\r\n\t\t */\r\n\t\tthis.markedTexts = new Set();\r\n\r\n\t\t/**\r\n\t\t * View selection. Renderer updates DOM selection based on the view selection.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/view/documentselection~DocumentSelection}\r\n\t\t */\r\n\t\tthis.selection = selection;\r\n\r\n\t\t/**\r\n\t\t * Indicates if the view document is focused and selection can be rendered. Selection will not be rendered if\r\n\t\t * this is set to `false`.\r\n\t\t *\r\n\t\t * @member {Boolean}\r\n\t\t */\r\n\t\tthis.isFocused = false;\r\n\r\n\t\t/**\r\n\t\t * The text node in which the inline filler was rendered.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Text}\r\n\t\t */\r\n\t\tthis._inlineFiller = null;\r\n\r\n\t\t/**\r\n\t\t * DOM element containing fake selection.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {null|HTMLElement}\r\n\t\t */\r\n\t\tthis._fakeSelectionContainer = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Marks a view node to be updated in the DOM by {@link #render `render()`}.\r\n\t *\r\n\t * Note that only view nodes whose parents have corresponding DOM elements need to be marked to be synchronized.\r\n\t *\r\n\t * @see #markedAttributes\r\n\t * @see #markedChildren\r\n\t * @see #markedTexts\r\n\t *\r\n\t * @param {module:engine/view/document~ChangeType} type Type of the change.\r\n\t * @param {module:engine/view/node~Node} node Node to be marked.\r\n\t */\r\n\tmarkToSync( type, node ) {\r\n\t\tif ( type === 'text' ) {\r\n\t\t\tif ( this.domConverter.mapViewToDom( node.parent ) ) {\r\n\t\t\t\tthis.markedTexts.add( node );\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// If the node has no DOM element it is not rendered yet,\r\n\t\t\t// its children/attributes do not need to be marked to be sync.\r\n\t\t\tif ( !this.domConverter.mapViewToDom( node ) ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif ( type === 'attributes' ) {\r\n\t\t\t\tthis.markedAttributes.add( node );\r\n\t\t\t} else if ( type === 'children' ) {\r\n\t\t\t\tthis.markedChildren.add( node );\r\n\t\t\t} else {\r\n\t\t\t\t/**\r\n\t\t\t\t * Unknown type passed to Renderer.markToSync.\r\n\t\t\t\t *\r\n\t\t\t\t * @error renderer-unknown-type\r\n\t\t\t\t */\r\n\t\t\t\tthrow new CKEditorError( 'view-renderer-unknown-type: Unknown type passed to Renderer.markToSync.', this );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Renders all buffered changes ({@link #markedAttributes}, {@link #markedChildren} and {@link #markedTexts}) and\r\n\t * the current view selection (if needed) to the DOM by applying a minimal set of changes to it.\r\n\t *\r\n\t * Renderer tries not to break the text composition (e.g. IME) and x-index of the selection,\r\n\t * so it does as little as it is needed to update the DOM.\r\n\t *\r\n\t * Renderer also handles {@link module:engine/view/filler fillers}. Especially, it checks if the inline filler is needed\r\n\t * at the selection position and adds or removes it. To prevent breaking text composition inline filler will not be\r\n\t * removed as long as the selection is in the text node which needed it at first.\r\n\t */\r\n\trender() {\r\n\t\tlet inlineFillerPosition;\r\n\r\n\t\t// Refresh mappings.\r\n\t\tfor ( const element of this.markedChildren ) {\r\n\t\t\tthis._updateChildrenMappings( element );\r\n\t\t}\r\n\r\n\t\t// There was inline filler rendered in the DOM but it's not\r\n\t\t// at the selection position any more, so we can remove it\r\n\t\t// (cause even if it's needed, it must be placed in another location).\r\n\t\tif ( this._inlineFiller && !this._isSelectionInInlineFiller() ) {\r\n\t\t\tthis._removeInlineFiller();\r\n\t\t}\r\n\r\n\t\t// If we've got the filler, let's try to guess its position in the view.\r\n\t\tif ( this._inlineFiller ) {\r\n\t\t\tinlineFillerPosition = this._getInlineFillerPosition();\r\n\t\t}\r\n\t\t// Otherwise, if it's needed, create it at the selection position.\r\n\t\telse if ( this._needsInlineFillerAtSelection() ) {\r\n\t\t\tinlineFillerPosition = this.selection.getFirstPosition();\r\n\r\n\t\t\t// Do not use `markToSync` so it will be added even if the parent is already added.\r\n\t\t\tthis.markedChildren.add( inlineFillerPosition.parent );\r\n\t\t}\r\n\r\n\t\tfor ( const element of this.markedAttributes ) {\r\n\t\t\tthis._updateAttrs( element );\r\n\t\t}\r\n\r\n\t\tfor ( const element of this.markedChildren ) {\r\n\t\t\tthis._updateChildren( element, { inlineFillerPosition } );\r\n\t\t}\r\n\r\n\t\tfor ( const node of this.markedTexts ) {\r\n\t\t\tif ( !this.markedChildren.has( node.parent ) && this.domConverter.mapViewToDom( node.parent ) ) {\r\n\t\t\t\tthis._updateText( node, { inlineFillerPosition } );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Check whether the inline filler is required and where it really is in the DOM.\r\n\t\t// At this point in most cases it will be in the DOM, but there are exceptions.\r\n\t\t// For example, if the inline filler was deep in the created DOM structure, it will not be created.\r\n\t\t// Similarly, if it was removed at the beginning of this function and then neither text nor children were updated,\r\n\t\t// it will not be present.\r\n\t\t// Fix those and similar scenarios.\r\n\t\tif ( inlineFillerPosition ) {\r\n\t\t\tconst fillerDomPosition = this.domConverter.viewPositionToDom( inlineFillerPosition );\r\n\t\t\tconst domDocument = fillerDomPosition.parent.ownerDocument;\r\n\r\n\t\t\tif ( !startsWithFiller( fillerDomPosition.parent ) ) {\r\n\t\t\t\t// Filler has not been created at filler position. Create it now.\r\n\t\t\t\tthis._inlineFiller = addInlineFiller( domDocument, fillerDomPosition.parent, fillerDomPosition.offset );\r\n\t\t\t} else {\r\n\t\t\t\t// Filler has been found, save it.\r\n\t\t\t\tthis._inlineFiller = fillerDomPosition.parent;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// There is no filler needed.\r\n\t\t\tthis._inlineFiller = null;\r\n\t\t}\r\n\r\n\t\tthis._updateSelection();\r\n\t\tthis._updateFocus();\r\n\r\n\t\tthis.markedTexts.clear();\r\n\t\tthis.markedAttributes.clear();\r\n\t\tthis.markedChildren.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates mappings of view element's children.\r\n\t *\r\n\t * Children that were replaced in the view structure by similar elements (same tag name) are treated as 'replaced'.\r\n\t * This means that their mappings can be updated so the new view elements are mapped to the existing DOM elements.\r\n\t * Thanks to that these elements do not need to be re-rendered completely.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/view/node~Node} viewElement The view element whose children mappings will be updated.\r\n\t */\r\n\t_updateChildrenMappings( viewElement ) {\r\n\t\tconst domElement = this.domConverter.mapViewToDom( viewElement );\r\n\r\n\t\tif ( !domElement ) {\r\n\t\t\t// If there is no `domElement` it means that it was already removed from DOM and there is no need to process it.\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst actualDomChildren = this.domConverter.mapViewToDom( viewElement ).childNodes;\r\n\t\tconst expectedDomChildren = Array.from(\r\n\t\t\tthis.domConverter.viewChildrenToDom( viewElement, domElement.ownerDocument, { withChildren: false } )\r\n\t\t);\r\n\t\tconst diff = this._diffNodeLists( actualDomChildren, expectedDomChildren );\r\n\t\tconst actions = this._findReplaceActions( diff, actualDomChildren, expectedDomChildren );\r\n\r\n\t\tif ( actions.indexOf( 'replace' ) !== -1 ) {\r\n\t\t\tconst counter = { equal: 0, insert: 0, delete: 0 };\r\n\r\n\t\t\tfor ( const action of actions ) {\r\n\t\t\t\tif ( action === 'replace' ) {\r\n\t\t\t\t\tconst insertIndex = counter.equal + counter.insert;\r\n\t\t\t\t\tconst deleteIndex = counter.equal + counter.delete;\r\n\t\t\t\t\tconst viewChild = viewElement.getChild( insertIndex );\r\n\r\n\t\t\t\t\t// The 'uiElement' is a special one and its children are not stored in a view (#799),\r\n\t\t\t\t\t// so we cannot use it with replacing flow (since it uses view children during rendering\r\n\t\t\t\t\t// which will always result in rendering empty element).\r\n\t\t\t\t\tif ( viewChild && !viewChild.is( 'uiElement' ) ) {\r\n\t\t\t\t\t\tthis._updateElementMappings( viewChild, actualDomChildren[ deleteIndex ] );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tremove( expectedDomChildren[ insertIndex ] );\r\n\t\t\t\t\tcounter.equal++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcounter[ action ]++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates mappings of a given view element.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/view/node~Node} viewElement The view element whose mappings will be updated.\r\n\t * @param {Node} domElement The DOM element representing the given view element.\r\n\t */\r\n\t_updateElementMappings( viewElement, domElement ) {\r\n\t\t// Remap 'DomConverter' bindings.\r\n\t\tthis.domConverter.unbindDomElement( domElement );\r\n\t\tthis.domConverter.bindElements( domElement, viewElement );\r\n\r\n\t\t// View element may have children which needs to be updated, but are not marked, mark them to update.\r\n\t\tthis.markedChildren.add( viewElement );\r\n\r\n\t\t// Because we replace new view element mapping with the existing one, the corresponding DOM element\r\n\t\t// will not be rerendered. The new view element may have different attributes than the previous one.\r\n\t\t// Since its corresponding DOM element will not be rerendered, new attributes will not be added\r\n\t\t// to the DOM, so we need to mark it here to make sure its attributes gets updated. See #1427 for more\r\n\t\t// detailed case study.\r\n\t\t// Also there are cases where replaced element is removed from the view structure and then has\r\n\t\t// its attributes changed or removed. In such cases the element will not be present in `markedAttributes`\r\n\t\t// and also may be the same (`element.isSimilar()`) as the reused element not having its attributes updated.\r\n\t\t// To prevent such situations we always mark reused element to have its attributes rerenderd (#1560).\r\n\t\tthis.markedAttributes.add( viewElement );\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the position of the inline filler based on the current selection.\r\n\t * Here, we assume that we know that the filler is needed and\r\n\t * {@link #_isSelectionInInlineFiller is at the selection position}, and, since it is needed,\r\n\t * it is somewhere at the selection position.\r\n\t *\r\n\t * Note: The filler position cannot be restored based on the filler's DOM text node, because\r\n\t * when this method is called (before rendering), the bindings will often be broken. View-to-DOM\r\n\t * bindings are only dependable after rendering.\r\n\t *\r\n\t * @private\r\n\t * @returns {module:engine/view/position~Position}\r\n\t */\r\n\t_getInlineFillerPosition() {\r\n\t\tconst firstPos = this.selection.getFirstPosition();\r\n\r\n\t\tif ( firstPos.parent.is( 'text' ) ) {\r\n\t\t\treturn ViewPosition._createBefore( this.selection.getFirstPosition().parent );\r\n\t\t} else {\r\n\t\t\treturn firstPos;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the selection has not left the inline filler's text node.\r\n\t * If it is `true`, it means that the filler had been added for a reason and the selection did not\r\n\t * leave the filler's text node. For example, the user can be in the middle of a composition so it should not be touched.\r\n\t *\r\n\t * @private\r\n\t * @returns {Boolean} `true` if the inline filler and selection are in the same place.\r\n\t */\r\n\t_isSelectionInInlineFiller() {\r\n\t\tif ( this.selection.rangeCount != 1 || !this.selection.isCollapsed ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Note, we can't check if selection's position equals position of the\r\n\t\t// this._inlineFiller node, because of #663. We may not be able to calculate\r\n\t\t// the filler's position in the view at this stage.\r\n\t\t// Instead, we check it the other way – whether selection is anchored in\r\n\t\t// that text node or next to it.\r\n\r\n\t\t// Possible options are:\r\n\t\t// \"FILLER{}\"\r\n\t\t// \"FILLERadded-text{}\"\r\n\t\tconst selectionPosition = this.selection.getFirstPosition();\r\n\t\tconst position = this.domConverter.viewPositionToDom( selectionPosition );\r\n\r\n\t\tif ( position && isText( position.parent ) && startsWithFiller( position.parent ) ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the inline filler.\r\n\t *\r\n\t * @private\r\n\t */\r\n\t_removeInlineFiller() {\r\n\t\tconst domFillerNode = this._inlineFiller;\r\n\r\n\t\t// Something weird happened and the stored node doesn't contain the filler's text.\r\n\t\tif ( !startsWithFiller( domFillerNode ) ) {\r\n\t\t\t/**\r\n\t\t\t * The inline filler node was lost. Most likely, something overwrote the filler text node\r\n\t\t\t * in the DOM.\r\n\t\t\t *\r\n\t\t\t * @error view-renderer-filler-was-lost\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'view-renderer-filler-was-lost: The inline filler node was lost.', this );\r\n\t\t}\r\n\r\n\t\tif ( isInlineFiller( domFillerNode ) ) {\r\n\t\t\tdomFillerNode.parentNode.removeChild( domFillerNode );\r\n\t\t} else {\r\n\t\t\tdomFillerNode.data = domFillerNode.data.substr( INLINE_FILLER_LENGTH );\r\n\t\t}\r\n\r\n\t\tthis._inlineFiller = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the inline {@link module:engine/view/filler filler} should be added.\r\n\t *\r\n\t * @private\r\n\t * @returns {Boolean} `true` if the inline filler should be added.\r\n\t */\r\n\t_needsInlineFillerAtSelection() {\r\n\t\tif ( this.selection.rangeCount != 1 || !this.selection.isCollapsed ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst selectionPosition = this.selection.getFirstPosition();\r\n\t\tconst selectionParent = selectionPosition.parent;\r\n\t\tconst selectionOffset = selectionPosition.offset;\r\n\r\n\t\t// If there is no DOM root we do not care about fillers.\r\n\t\tif ( !this.domConverter.mapViewToDom( selectionParent.root ) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif ( !( selectionParent.is( 'element' ) ) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Prevent adding inline filler inside elements with contenteditable=false.\r\n\t\t// https://github.com/ckeditor/ckeditor5-engine/issues/1170\r\n\t\tif ( !isEditable( selectionParent ) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// We have block filler, we do not need inline one.\r\n\t\tif ( selectionOffset === selectionParent.getFillerOffset() ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst nodeBefore = selectionPosition.nodeBefore;\r\n\t\tconst nodeAfter = selectionPosition.nodeAfter;\r\n\r\n\t\tif ( nodeBefore instanceof ViewText || nodeAfter instanceof ViewText ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if text needs to be updated and possibly updates it.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/view/text~Text} viewText View text to update.\r\n\t * @param {Object} options\r\n\t * @param {module:engine/view/position~Position} options.inlineFillerPosition The position where the inline\r\n\t * filler should be rendered.\r\n\t */\r\n\t_updateText( viewText, options ) {\r\n\t\tconst domText = this.domConverter.findCorrespondingDomText( viewText );\r\n\t\tconst newDomText = this.domConverter.viewToDom( viewText, domText.ownerDocument );\r\n\r\n\t\tconst actualText = domText.data;\r\n\t\tlet expectedText = newDomText.data;\r\n\r\n\t\tconst filler = options.inlineFillerPosition;\r\n\r\n\t\tif ( filler && filler.parent == viewText.parent && filler.offset == viewText.index ) {\r\n\t\t\texpectedText = INLINE_FILLER + expectedText;\r\n\t\t}\r\n\r\n\t\tif ( actualText != expectedText ) {\r\n\t\t\tconst actions = fastDiff( actualText, expectedText );\r\n\r\n\t\t\tfor ( const action of actions ) {\r\n\t\t\t\tif ( action.type === 'insert' ) {\r\n\t\t\t\t\tdomText.insertData( action.index, action.values.join( '' ) );\r\n\t\t\t\t} else { // 'delete'\r\n\t\t\t\t\tdomText.deleteData( action.index, action.howMany );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if attribute list needs to be updated and possibly updates it.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/view/element~Element} viewElement The view element to update.\r\n\t */\r\n\t_updateAttrs( viewElement ) {\r\n\t\tconst domElement = this.domConverter.mapViewToDom( viewElement );\r\n\r\n\t\tif ( !domElement ) {\r\n\t\t\t// If there is no `domElement` it means that 'viewElement' is outdated as its mapping was updated\r\n\t\t\t// in 'this._updateChildrenMappings()'. There is no need to process it as new view element which\r\n\t\t\t// replaced old 'viewElement' mapping was also added to 'this.markedAttributes'\r\n\t\t\t// in 'this._updateChildrenMappings()' so it will be processed separately.\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst domAttrKeys = Array.from( domElement.attributes ).map( attr => attr.name );\r\n\t\tconst viewAttrKeys = viewElement.getAttributeKeys();\r\n\r\n\t\t// Add or overwrite attributes.\r\n\t\tfor ( const key of viewAttrKeys ) {\r\n\t\t\tdomElement.setAttribute( key, viewElement.getAttribute( key ) );\r\n\t\t}\r\n\r\n\t\t// Remove from DOM attributes which do not exists in the view.\r\n\t\tfor ( const key of domAttrKeys ) {\r\n\t\t\tif ( !viewElement.hasAttribute( key ) ) {\r\n\t\t\t\tdomElement.removeAttribute( key );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if elements child list needs to be updated and possibly updates it.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/view/element~Element} viewElement View element to update.\r\n\t * @param {Object} options\r\n\t * @param {module:engine/view/position~Position} options.inlineFillerPosition The position where the inline\r\n\t * filler should be rendered.\r\n\t */\r\n\t_updateChildren( viewElement, options ) {\r\n\t\tconst domElement = this.domConverter.mapViewToDom( viewElement );\r\n\r\n\t\tif ( !domElement ) {\r\n\t\t\t// If there is no `domElement` it means that it was already removed from DOM.\r\n\t\t\t// There is no need to process it. It will be processed when re-inserted.\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst inlineFillerPosition = options.inlineFillerPosition;\r\n\t\tconst actualDomChildren = this.domConverter.mapViewToDom( viewElement ).childNodes;\r\n\t\tconst expectedDomChildren = Array.from(\r\n\t\t\tthis.domConverter.viewChildrenToDom( viewElement, domElement.ownerDocument, { bind: true, inlineFillerPosition } )\r\n\t\t);\r\n\r\n\t\t// Inline filler element has to be created as it is present in the DOM, but not in the view. It is required\r\n\t\t// during diffing so text nodes could be compared correctly and also during rendering to maintain\r\n\t\t// proper order and indexes while updating the DOM.\r\n\t\tif ( inlineFillerPosition && inlineFillerPosition.parent === viewElement ) {\r\n\t\t\taddInlineFiller( domElement.ownerDocument, expectedDomChildren, inlineFillerPosition.offset );\r\n\t\t}\r\n\r\n\t\tconst diff = this._diffNodeLists( actualDomChildren, expectedDomChildren );\r\n\r\n\t\tlet i = 0;\r\n\t\tconst nodesToUnbind = new Set();\r\n\r\n\t\t// Handle deletions first.\r\n\t\t// This is to prevent a situation where an element that already exists in `actualDomChildren` is inserted at a different\r\n\t\t// index in `actualDomChildren`. Since `actualDomChildren` is a `NodeList`, this works like move, not like an insert,\r\n\t\t// and it disrupts the whole algorithm. See https://github.com/ckeditor/ckeditor5/issues/6367.\r\n\t\t//\r\n\t\t// It doesn't matter in what order we remove or add nodes, as long as we remove and add correct nodes at correct indexes.\r\n\t\tfor ( const action of diff ) {\r\n\t\t\tif ( action === 'delete' ) {\r\n\t\t\t\tnodesToUnbind.add( actualDomChildren[ i ] );\r\n\t\t\t\tremove( actualDomChildren[ i ] );\r\n\t\t\t} else if ( action === 'equal' ) {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\r\n\t\tfor ( const action of diff ) {\r\n\t\t\tif ( action === 'insert' ) {\r\n\t\t\t\tinsertAt( domElement, i, expectedDomChildren[ i ] );\r\n\t\t\t\ti++;\r\n\t\t\t} else if ( action === 'equal' ) {\r\n\t\t\t\t// Force updating text nodes inside elements which did not change and do not need to be re-rendered (#1125).\r\n\t\t\t\t// Do it here (not in the loop above) because only after insertions the `i` index is correct.\r\n\t\t\t\tthis._markDescendantTextToSync( this.domConverter.domToView( expectedDomChildren[ i ] ) );\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Unbind removed nodes. When node does not have a parent it means that it was removed from DOM tree during\r\n\t\t// comparision with the expected DOM. We don't need to check child nodes, because if child node was reinserted,\r\n\t\t// it was moved to DOM tree out of the removed node.\r\n\t\tfor ( const node of nodesToUnbind ) {\r\n\t\t\tif ( !node.parentNode ) {\r\n\t\t\t\tthis.domConverter.unbindDomElement( node );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Shorthand for diffing two arrays or node lists of DOM nodes.\r\n\t *\r\n\t * @private\r\n\t * @param {Array.<Node>|NodeList} actualDomChildren Actual DOM children\r\n\t * @param {Array.<Node>|NodeList} expectedDomChildren Expected DOM children.\r\n\t * @returns {Array.<String>} The list of actions based on the {@link module:utils/diff~diff} function.\r\n\t */\r\n\t_diffNodeLists( actualDomChildren, expectedDomChildren ) {\r\n\t\tactualDomChildren = filterOutFakeSelectionContainer( actualDomChildren, this._fakeSelectionContainer );\r\n\r\n\t\treturn diff( actualDomChildren, expectedDomChildren, sameNodes.bind( null, this.domConverter ) );\r\n\t}\r\n\r\n\t/**\r\n\t * Finds DOM nodes that were replaced with the similar nodes (same tag name) in the view. All nodes are compared\r\n\t * within one `insert`/`delete` action group, for example:\r\n\t *\r\n\t * \t\tActual DOM:\t\t<p><b>Foo</b>Bar<i>Baz</i><b>Bax</b></p>\r\n\t * \t\tExpected DOM:\t<p>Bar<b>123</b><i>Baz</i><b>456</b></p>\r\n\t * \t\tInput actions:\t[ insert, insert, delete, delete, equal, insert, delete ]\r\n\t * \t\tOutput actions:\t[ insert, replace, delete, equal, replace ]\r\n\t *\r\n\t * @private\r\n\t * @param {Array.<String>} actions Actions array which is a result of the {@link module:utils/diff~diff} function.\r\n\t * @param {Array.<Node>|NodeList} actualDom Actual DOM children\r\n\t * @param {Array.<Node>} expectedDom Expected DOM children.\r\n\t * @returns {Array.<String>} Actions array modified with the `replace` actions.\r\n\t */\r\n\t_findReplaceActions( actions, actualDom, expectedDom ) {\r\n\t\t// If there is no both 'insert' and 'delete' actions, no need to check for replaced elements.\r\n\t\tif ( actions.indexOf( 'insert' ) === -1 || actions.indexOf( 'delete' ) === -1 ) {\r\n\t\t\treturn actions;\r\n\t\t}\r\n\r\n\t\tlet newActions = [];\r\n\t\tlet actualSlice = [];\r\n\t\tlet expectedSlice = [];\r\n\r\n\t\tconst counter = { equal: 0, insert: 0, delete: 0 };\r\n\r\n\t\tfor ( const action of actions ) {\r\n\t\t\tif ( action === 'insert' ) {\r\n\t\t\t\texpectedSlice.push( expectedDom[ counter.equal + counter.insert ] );\r\n\t\t\t} else if ( action === 'delete' ) {\r\n\t\t\t\tactualSlice.push( actualDom[ counter.equal + counter.delete ] );\r\n\t\t\t} else { // equal\r\n\t\t\t\tnewActions = newActions.concat( diff( actualSlice, expectedSlice, areSimilar ).map( x => x === 'equal' ? 'replace' : x ) );\r\n\t\t\t\tnewActions.push( 'equal' );\r\n\t\t\t\t// Reset stored elements on 'equal'.\r\n\t\t\t\tactualSlice = [];\r\n\t\t\t\texpectedSlice = [];\r\n\t\t\t}\r\n\t\t\tcounter[ action ]++;\r\n\t\t}\r\n\r\n\t\treturn newActions.concat( diff( actualSlice, expectedSlice, areSimilar ).map( x => x === 'equal' ? 'replace' : x ) );\r\n\t}\r\n\r\n\t/**\r\n\t * Marks text nodes to be synchronized.\r\n\t *\r\n\t * If a text node is passed, it will be marked. If an element is passed, all descendant text nodes inside it will be marked.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/view/node~Node} viewNode View node to sync.\r\n\t */\r\n\t_markDescendantTextToSync( viewNode ) {\r\n\t\tif ( !viewNode ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( viewNode.is( 'text' ) ) {\r\n\t\t\tthis.markedTexts.add( viewNode );\r\n\t\t} else if ( viewNode.is( 'element' ) ) {\r\n\t\t\tfor ( const child of viewNode.getChildren() ) {\r\n\t\t\t\tthis._markDescendantTextToSync( child );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the selection needs to be updated and possibly updates it.\r\n\t *\r\n\t * @private\r\n\t */\r\n\t_updateSelection() {\r\n\t\t// If there is no selection - remove DOM and fake selections.\r\n\t\tif ( this.selection.rangeCount === 0 ) {\r\n\t\t\tthis._removeDomSelection();\r\n\t\t\tthis._removeFakeSelection();\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst domRoot = this.domConverter.mapViewToDom( this.selection.editableElement );\r\n\r\n\t\t// Do nothing if there is no focus, or there is no DOM element corresponding to selection's editable element.\r\n\t\tif ( !this.isFocused || !domRoot ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Render selection.\r\n\t\tif ( this.selection.isFake ) {\r\n\t\t\tthis._updateFakeSelection( domRoot );\r\n\t\t} else {\r\n\t\t\tthis._removeFakeSelection();\r\n\t\t\tthis._updateDomSelection( domRoot );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the fake selection.\r\n\t *\r\n\t * @private\r\n\t * @param {HTMLElement} domRoot A valid DOM root where the fake selection container should be added.\r\n\t */\r\n\t_updateFakeSelection( domRoot ) {\r\n\t\tconst domDocument = domRoot.ownerDocument;\r\n\r\n\t\tif ( !this._fakeSelectionContainer ) {\r\n\t\t\tthis._fakeSelectionContainer = createFakeSelectionContainer( domDocument );\r\n\t\t}\r\n\r\n\t\tconst container = this._fakeSelectionContainer;\r\n\r\n\t\t// Bind fake selection container with the current selection *position*.\r\n\t\tthis.domConverter.bindFakeSelection( container, this.selection );\r\n\r\n\t\tif ( !this._fakeSelectionNeedsUpdate( domRoot ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( !container.parentElement || container.parentElement != domRoot ) {\r\n\t\t\tdomRoot.appendChild( container );\r\n\t\t}\r\n\r\n\t\tcontainer.textContent = this.selection.fakeSelectionLabel || '\\u00A0';\r\n\r\n\t\tconst domSelection = domDocument.getSelection();\r\n\t\tconst domRange = domDocument.createRange();\r\n\r\n\t\tdomSelection.removeAllRanges();\r\n\t\tdomRange.selectNodeContents( container );\r\n\t\tdomSelection.addRange( domRange );\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the DOM selection.\r\n\t *\r\n\t * @private\r\n\t * @param {HTMLElement} domRoot A valid DOM root where the DOM selection should be rendered.\r\n\t */\r\n\t_updateDomSelection( domRoot ) {\r\n\t\tconst domSelection = domRoot.ownerDocument.defaultView.getSelection();\r\n\r\n\t\t// Let's check whether DOM selection needs updating at all.\r\n\t\tif ( !this._domSelectionNeedsUpdate( domSelection ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Multi-range selection is not available in most browsers, and, at least in Chrome, trying to\r\n\t\t// set such selection, that is not continuous, throws an error. Because of that, we will just use anchor\r\n\t\t// and focus of view selection.\r\n\t\t// Since we are not supporting multi-range selection, we also do not need to check if proper editable is\r\n\t\t// selected. If there is any editable selected, it is okay (editable is taken from selection anchor).\r\n\t\tconst anchor = this.domConverter.viewPositionToDom( this.selection.anchor );\r\n\t\tconst focus = this.domConverter.viewPositionToDom( this.selection.focus );\r\n\r\n\t\t// Focus the new editing host.\r\n\t\t// Otherwise, FF may throw an error (https://github.com/ckeditor/ckeditor5/issues/721).\r\n\t\tdomRoot.focus();\r\n\r\n\t\tdomSelection.collapse( anchor.parent, anchor.offset );\r\n\t\tdomSelection.extend( focus.parent, focus.offset );\r\n\r\n\t\t// Firefox–specific hack (https://github.com/ckeditor/ckeditor5-engine/issues/1439).\r\n\t\tif ( env.isGecko ) {\r\n\t\t\tfixGeckoSelectionAfterBr( focus, domSelection );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether a given DOM selection needs to be updated.\r\n\t *\r\n\t * @private\r\n\t * @param {Selection} domSelection The DOM selection to check.\r\n\t * @returns {Boolean}\r\n\t */\r\n\t_domSelectionNeedsUpdate( domSelection ) {\r\n\t\tif ( !this.domConverter.isDomSelectionCorrect( domSelection ) ) {\r\n\t\t\t// Current DOM selection is in incorrect position. We need to update it.\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tconst oldViewSelection = domSelection && this.domConverter.domSelectionToView( domSelection );\r\n\r\n\t\tif ( oldViewSelection && this.selection.isEqual( oldViewSelection ) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// If selection is not collapsed, it does not need to be updated if it is similar.\r\n\t\tif ( !this.selection.isCollapsed && this.selection.isSimilar( oldViewSelection ) ) {\r\n\t\t\t// Selection did not changed and is correct, do not update.\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Selections are not similar.\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether the fake selection needs to be updated.\r\n\t *\r\n\t * @private\r\n\t * @param {HTMLElement} domRoot A valid DOM root where a new fake selection container should be added.\r\n\t * @returns {Boolean}\r\n\t */\r\n\t_fakeSelectionNeedsUpdate( domRoot ) {\r\n\t\tconst container = this._fakeSelectionContainer;\r\n\t\tconst domSelection = domRoot.ownerDocument.getSelection();\r\n\r\n\t\t// Fake selection needs to be updated if there's no fake selection container, or the container currently sits\r\n\t\t// in a different root.\r\n\t\tif ( !container || container.parentElement !== domRoot ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Make sure that the selection actually is within the fake selection.\r\n\t\tif ( domSelection.anchorNode !== container && !container.contains( domSelection.anchorNode ) ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn container.textContent !== this.selection.fakeSelectionLabel;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the DOM selection.\r\n\t *\r\n\t * @private\r\n\t */\r\n\t_removeDomSelection() {\r\n\t\tfor ( const doc of this.domDocuments ) {\r\n\t\t\tconst domSelection = doc.getSelection();\r\n\r\n\t\t\tif ( domSelection.rangeCount ) {\r\n\t\t\t\tconst activeDomElement = doc.activeElement;\r\n\t\t\t\tconst viewElement = this.domConverter.mapDomToView( activeDomElement );\r\n\r\n\t\t\t\tif ( activeDomElement && viewElement ) {\r\n\t\t\t\t\tdoc.getSelection().removeAllRanges();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the fake selection.\r\n\t *\r\n\t * @private\r\n\t */\r\n\t_removeFakeSelection() {\r\n\t\tconst container = this._fakeSelectionContainer;\r\n\r\n\t\tif ( container ) {\r\n\t\t\tcontainer.remove();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if focus needs to be updated and possibly updates it.\r\n\t *\r\n\t * @private\r\n\t */\r\n\t_updateFocus() {\r\n\t\tif ( this.isFocused ) {\r\n\t\t\tconst editable = this.selection.editableElement;\r\n\r\n\t\t\tif ( editable ) {\r\n\t\t\t\tthis.domConverter.focus( editable );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nmix( Renderer, ObservableMixin );\r\n\r\n// Checks if provided element is editable.\r\n//\r\n// @private\r\n// @param {module:engine/view/element~Element} element\r\n// @returns {Boolean}\r\nfunction isEditable( element ) {\r\n\tif ( element.getAttribute( 'contenteditable' ) == 'false' ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tconst parent = element.findAncestor( element => element.hasAttribute( 'contenteditable' ) );\r\n\r\n\treturn !parent || parent.getAttribute( 'contenteditable' ) == 'true';\r\n}\r\n\r\n// Adds inline filler at a given position.\r\n//\r\n// The position can be given as an array of DOM nodes and an offset in that array,\r\n// or a DOM parent element and an offset in that element.\r\n//\r\n// @private\r\n// @param {Document} domDocument\r\n// @param {Element|Array.<Node>} domParentOrArray\r\n// @param {Number} offset\r\n// @returns {Text} The DOM text node that contains an inline filler.\r\nfunction addInlineFiller( domDocument, domParentOrArray, offset ) {\r\n\tconst childNodes = domParentOrArray instanceof Array ? domParentOrArray : domParentOrArray.childNodes;\r\n\tconst nodeAfterFiller = childNodes[ offset ];\r\n\r\n\tif ( isText( nodeAfterFiller ) ) {\r\n\t\tnodeAfterFiller.data = INLINE_FILLER + nodeAfterFiller.data;\r\n\r\n\t\treturn nodeAfterFiller;\r\n\t} else {\r\n\t\tconst fillerNode = domDocument.createTextNode( INLINE_FILLER );\r\n\r\n\t\tif ( Array.isArray( domParentOrArray ) ) {\r\n\t\t\tchildNodes.splice( offset, 0, fillerNode );\r\n\t\t} else {\r\n\t\t\tinsertAt( domParentOrArray, offset, fillerNode );\r\n\t\t}\r\n\r\n\t\treturn fillerNode;\r\n\t}\r\n}\r\n\r\n// Whether two DOM nodes should be considered as similar.\r\n// Nodes are considered similar if they have the same tag name.\r\n//\r\n// @private\r\n// @param {Node} node1\r\n// @param {Node} node2\r\n// @returns {Boolean}\r\nfunction areSimilar( node1, node2 ) {\r\n\treturn isNode( node1 ) && isNode( node2 ) &&\r\n\t\t!isText( node1 ) && !isText( node2 ) &&\r\n\t\tnode1.tagName.toLowerCase() === node2.tagName.toLowerCase();\r\n}\r\n\r\n// Whether two dom nodes should be considered as the same.\r\n// Two nodes which are considered the same are:\r\n//\r\n//\t\t* Text nodes with the same text.\r\n//\t\t* Element nodes represented by the same object.\r\n//\t\t* Two block filler elements.\r\n//\r\n// @private\r\n// @param {String} blockFillerMode Block filler mode, see {@link module:engine/view/domconverter~DomConverter#blockFillerMode}.\r\n// @param {Node} node1\r\n// @param {Node} node2\r\n// @returns {Boolean}\r\nfunction sameNodes( domConverter, actualDomChild, expectedDomChild ) {\r\n\t// Elements.\r\n\tif ( actualDomChild === expectedDomChild ) {\r\n\t\treturn true;\r\n\t}\r\n\t// Texts.\r\n\telse if ( isText( actualDomChild ) && isText( expectedDomChild ) ) {\r\n\t\treturn actualDomChild.data === expectedDomChild.data;\r\n\t}\r\n\t// Block fillers.\r\n\telse if ( domConverter.isBlockFiller( actualDomChild ) &&\r\n\t\tdomConverter.isBlockFiller( expectedDomChild ) ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Not matching types.\r\n\treturn false;\r\n}\r\n\r\n// The following is a Firefox–specific hack (https://github.com/ckeditor/ckeditor5-engine/issues/1439).\r\n// When the native DOM selection is at the end of the block and preceded by <br /> e.g.\r\n//\r\n//\t\t<p>foo<br/>[]</p>\r\n//\r\n// which happens a lot when using the soft line break, the browser fails to (visually) move the\r\n// caret to the new line. A quick fix is as simple as force–refreshing the selection with the same range.\r\nfunction fixGeckoSelectionAfterBr( focus, domSelection ) {\r\n\tconst parent = focus.parent;\r\n\r\n\t// This fix works only when the focus point is at the very end of an element.\r\n\t// There is no point in running it in cases unrelated to the browser bug.\r\n\tif ( parent.nodeType != Node.ELEMENT_NODE || focus.offset != parent.childNodes.length - 1 ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst childAtOffset = parent.childNodes[ focus.offset ];\r\n\r\n\t// To stay on the safe side, the fix being as specific as possible, it targets only the\r\n\t// selection which is at the very end of the element and preceded by <br />.\r\n\tif ( childAtOffset && childAtOffset.tagName == 'BR' ) {\r\n\t\tdomSelection.addRange( domSelection.getRangeAt( 0 ) );\r\n\t}\r\n}\r\n\r\nfunction filterOutFakeSelectionContainer( domChildList, fakeSelectionContainer ) {\r\n\tconst childList = Array.from( domChildList );\r\n\r\n\tif ( childList.length == 0 || !fakeSelectionContainer ) {\r\n\t\treturn childList;\r\n\t}\r\n\r\n\tconst last = childList[ childList.length - 1 ];\r\n\r\n\tif ( last == fakeSelectionContainer ) {\r\n\t\tchildList.pop();\r\n\t}\r\n\r\n\treturn childList;\r\n}\r\n\r\n// Creates a fake selection container for a given document.\r\n//\r\n// @private\r\n// @param {Document} domDocument\r\n// @returns {HTMLElement}\r\nfunction createFakeSelectionContainer( domDocument ) {\r\n\tconst container = domDocument.createElement( 'div' );\r\n\r\n\tObject.assign( container.style, {\r\n\t\tposition: 'fixed',\r\n\t\ttop: 0,\r\n\t\tleft: '-9999px',\r\n\t\t// See https://github.com/ckeditor/ckeditor5/issues/752.\r\n\t\twidth: '42px'\r\n\t} );\r\n\r\n\t// Fill it with a text node so we can update it later.\r\n\tcontainer.textContent = '\\u00A0';\r\n\r\n\treturn container;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/view/rooteditableelement\r\n */\r\n\r\nimport EditableElement from './editableelement';\r\n\r\nconst rootNameSymbol = Symbol( 'rootName' );\r\n\r\n/**\r\n * Class representing a single root in the data view. A root can be either {@link ~RootEditableElement#isReadOnly editable or read-only},\r\n * but in both cases it is called \"an editable\". Roots can contain other {@link module:engine/view/editableelement~EditableElement\r\n * editable elements} making them \"nested editables\".\r\n *\r\n * @extends module:engine/view/editableelement~EditableElement\r\n */\r\nexport default class RootEditableElement extends EditableElement {\r\n\t/**\r\n\t * Creates root editable element.\r\n\t *\r\n\t * @param {module:engine/view/document~Document} document The document instance to which this element belongs.\r\n\t * @param {String} name Node name.\r\n\t */\r\n\tconstructor( document, name ) {\r\n\t\tsuper( document, name );\r\n\r\n\t\t/**\r\n\t\t * Name of this root inside {@link module:engine/view/document~Document} that is an owner of this root. If no\r\n\t\t * other name is set, `main` name is used.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {String}\r\n\t\t */\r\n\t\tthis.rootName = 'main';\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this object is of the given.\r\n\t *\r\n\t *\t\trootEditableElement.is( 'rootEditableElement' ); // -> true\r\n\t *\t\trootEditableElement.is( 'editableElement' ); // -> true\r\n\t *\t\trootEditableElement.is( 'element' ); // -> true\r\n\t *\t\trootEditableElement.is( 'node' ); // -> true\r\n\t *\t\trootEditableElement.is( 'view:rootEditableElement' ); // -> true\r\n\t *\t\trootEditableElement.is( 'view:editableElement' ); // -> true\r\n\t *\t\trootEditableElement.is( 'view:element' ); // -> true\r\n\t *\t\trootEditableElement.is( 'view:node' ); // -> true\r\n\t *\r\n\t *\t\trootEditableElement.is( 'model:element' ); // -> false\r\n\t *\t\trootEditableElement.is( 'documentFragment' ); // -> false\r\n\t *\r\n\t * Assuming that the object being checked is a root editbale element, you can also check its\r\n\t * {@link module:engine/view/rooteditableelement~RootEditableElement#name name}:\r\n\t *\r\n\t *\t\trootEditableElement.is( 'div' ); // -> true if this is a div root editable element\r\n\t *\t\trootEditableElement.is( 'rootEditableElement', 'div' ); // -> same as above\r\n\t *\t\ttext.is( 'div' ); -> false\r\n\t *\r\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\r\n\t *\r\n\t * @param {String} type Type to check when `name` parameter is present.\r\n\t * Otherwise, it acts like the `name` parameter.\r\n\t * @param {String} [name] Element name.\r\n\t * @returns {Boolean}\r\n\t */\r\n\tis( type, name = null ) {\r\n\t\tconst cutType = type.replace( /^view:/, '' );\r\n\t\tif ( !name ) {\r\n\t\t\treturn cutType == 'rootElement' || super.is( type );\r\n\t\t} else {\r\n\t\t\treturn ( cutType == 'rootElement' && name == this.name ) || super.is( type, name );\r\n\t\t}\r\n\t}\r\n\r\n\tget rootName() {\r\n\t\treturn this.getCustomProperty( rootNameSymbol );\r\n\t}\r\n\r\n\tset rootName( rootName ) {\r\n\t\tthis._setCustomProperty( rootNameSymbol, rootName );\r\n\t}\r\n\r\n\t/**\r\n\t * Overrides old element name and sets new one.\r\n\t * This is needed because view roots are created before they are attached to the DOM.\r\n\t * The name of the root element is temporary at this stage. It has to be changed when the\r\n\t * view root element is attached to the DOM element.\r\n\t *\r\n\t * @protected\r\n\t * @param {String} name The new name of element.\r\n\t */\r\n\tset _name( name ) {\r\n\t\tthis.name = name;\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/view/selection\r\n */\r\n\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\nimport Range from './range';\r\nimport Position from './position';\r\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\r\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\r\nimport Node from './node';\r\nimport count from '@ckeditor/ckeditor5-utils/src/count';\r\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\r\nimport DocumentSelection from './documentselection';\r\n\r\n/**\r\n * Class representing an arbirtary selection in the view.\r\n * See also {@link module:engine/view/documentselection~DocumentSelection}.\r\n *\r\n * New selection instances can be created via the constructor or one these methods:\r\n *\r\n * * {@link module:engine/view/view~View#createSelection `View#createSelection()`},\r\n * * {@link module:engine/view/upcastwriter~UpcastWriter#createSelection `UpcastWriter#createSelection()`}.\r\n *\r\n * A selection can consist of {@link module:engine/view/range~Range ranges} that can be set by using\r\n * the {@link module:engine/view/selection~Selection#setTo `Selection#setTo()`} method.\r\n */\r\nexport default class Selection {\r\n\t/**\r\n\t * Creates new selection instance.\r\n\t *\r\n\t * **Note**: The selection constructor is available as a factory method:\r\n\t *\r\n\t * * {@link module:engine/view/view~View#createSelection `View#createSelection()`},\r\n\t * * {@link module:engine/view/upcastwriter~UpcastWriter#createSelection `UpcastWriter#createSelection()`}.\r\n\t *\r\n\t * \t\t// Creates empty selection without ranges.\r\n\t *\t\tconst selection = writer.createSelection();\r\n\t *\r\n\t *\t\t// Creates selection at the given range.\r\n\t *\t\tconst range = writer.createRange( start, end );\r\n\t *\t\tconst selection = writer.createSelection( range );\r\n\t *\r\n\t *\t\t// Creates selection at the given ranges\r\n\t * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\r\n\t *\t\tconst selection = writer.createSelection( ranges );\r\n\t *\r\n\t *\t\t// Creates selection from the other selection.\r\n\t *\t\tconst otherSelection = writer.createSelection();\r\n\t *\t\tconst selection = writer.createSelection( otherSelection );\r\n\t *\r\n\t *\t\t// Creates selection from the document selection.\r\n\t *\t\tconst selection = writer.createSelection( editor.editing.view.document.selection );\r\n\t *\r\n\t * \t\t// Creates selection at the given position.\r\n\t *\t\tconst position = writer.createPositionFromPath( root, path );\r\n\t *\t\tconst selection = writer.createSelection( position );\r\n\t *\r\n\t *\t\t// Creates collapsed selection at the position of given item and offset.\r\n\t *\t\tconst paragraph = writer.createContainerElement( 'paragraph' );\r\n\t *\t\tconst selection = writer.createSelection( paragraph, offset );\r\n\t *\r\n\t *\t\t// Creates a range inside an {@link module:engine/view/element~Element element} which starts before the\r\n\t *\t\t// first child of that element and ends after the last child of that element.\r\n\t *\t\tconst selection = writer.createSelection( paragraph, 'in' );\r\n\t *\r\n\t *\t\t// Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends\r\n\t *\t\t// just after the item.\r\n\t *\t\tconst selection = writer.createSelection( paragraph, 'on' );\r\n\t *\r\n\t * `Selection`'s constructor allow passing additional options (`backward`, `fake` and `label`) as the last argument.\r\n\t *\r\n\t *\t\t// Creates backward selection.\r\n\t *\t\tconst selection = writer.createSelection( range, { backward: true } );\r\n\t *\r\n\t * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\r\n\t * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\r\n\t * represented in other way, for example by applying proper CSS class.\r\n\t *\r\n\t * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\r\n\t * (and be  properly handled by screen readers).\r\n\t *\r\n\t *\t\t// Creates fake selection with label.\r\n\t *\t\tconst selection = writer.createSelection( range, { fake: true, label: 'foo' } );\r\n\t *\r\n\t * @param {module:engine/view/selection~Selectable} [selectable=null]\r\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Offset or place when selectable is an `Item`.\r\n\t * @param {Object} [options]\r\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\r\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\r\n\t * @param {String} [options.label] Label for the fake selection.\r\n\t */\r\n\tconstructor( selectable = null, placeOrOffset, options ) {\r\n\t\t/**\r\n\t\t * Stores all ranges that are selected.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @member {Array.<module:engine/view/range~Range>}\r\n\t\t */\r\n\t\tthis._ranges = [];\r\n\r\n\t\t/**\r\n\t\t * Specifies whether the last added range was added as a backward or forward range.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @member {Boolean}\r\n\t\t */\r\n\t\tthis._lastRangeBackward = false;\r\n\r\n\t\t/**\r\n\t\t * Specifies whether selection instance is fake.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Boolean}\r\n\t\t */\r\n\t\tthis._isFake = false;\r\n\r\n\t\t/**\r\n\t\t * Fake selection's label.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {String}\r\n\t\t */\r\n\t\tthis._fakeSelectionLabel = '';\r\n\r\n\t\tthis.setTo( selectable, placeOrOffset, options );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if selection instance is marked as `fake`.\r\n\t *\r\n\t * @see #setTo\r\n\t * @returns {Boolean}\r\n\t */\r\n\tget isFake() {\r\n\t\treturn this._isFake;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns fake selection label.\r\n\t *\r\n\t * @see #setTo\r\n\t * @returns {String}\r\n\t */\r\n\tget fakeSelectionLabel() {\r\n\t\treturn this._fakeSelectionLabel;\r\n\t}\r\n\r\n\t/**\r\n\t * Selection anchor. Anchor may be described as a position where the selection starts. Together with\r\n\t * {@link #focus focus} they define the direction of selection, which is important\r\n\t * when expanding/shrinking selection. Anchor is always the start or end of the most recent added range.\r\n\t * It may be a bit unintuitive when there are multiple ranges in selection.\r\n\t *\r\n\t * @see #focus\r\n\t * @type {module:engine/view/position~Position}\r\n\t */\r\n\tget anchor() {\r\n\t\tif ( !this._ranges.length ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tconst range = this._ranges[ this._ranges.length - 1 ];\r\n\t\tconst anchor = this._lastRangeBackward ? range.end : range.start;\r\n\r\n\t\treturn anchor.clone();\r\n\t}\r\n\r\n\t/**\r\n\t * Selection focus. Focus is a position where the selection ends.\r\n\t *\r\n\t * @see #anchor\r\n\t * @type {module:engine/view/position~Position}\r\n\t */\r\n\tget focus() {\r\n\t\tif ( !this._ranges.length ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tconst range = this._ranges[ this._ranges.length - 1 ];\r\n\t\tconst focus = this._lastRangeBackward ? range.start : range.end;\r\n\r\n\t\treturn focus.clone();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns whether the selection is collapsed. Selection is collapsed when there is exactly one range which is\r\n\t * collapsed.\r\n\t *\r\n\t * @type {Boolean}\r\n\t */\r\n\tget isCollapsed() {\r\n\t\treturn this.rangeCount === 1 && this._ranges[ 0 ].isCollapsed;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns number of ranges in selection.\r\n\t *\r\n\t * @type {Number}\r\n\t */\r\n\tget rangeCount() {\r\n\t\treturn this._ranges.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether the {@link #focus} precedes {@link #anchor}.\r\n\t *\r\n\t * @type {Boolean}\r\n\t */\r\n\tget isBackward() {\r\n\t\treturn !this.isCollapsed && this._lastRangeBackward;\r\n\t}\r\n\r\n\t/**\r\n\t * {@link module:engine/view/editableelement~EditableElement EditableElement} instance that contains this selection, or `null`\r\n\t * if the selection is not inside an editable element.\r\n\t *\r\n\t * @type {module:engine/view/editableelement~EditableElement|null}\r\n\t */\r\n\tget editableElement() {\r\n\t\tif ( this.anchor ) {\r\n\t\t\treturn this.anchor.editableElement;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an iterable that contains copies of all ranges added to the selection.\r\n\t *\r\n\t * @returns {Iterable.<module:engine/view/range~Range>}\r\n\t */\r\n\t* getRanges() {\r\n\t\tfor ( const range of this._ranges ) {\r\n\t\t\tyield range.clone();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns copy of the first range in the selection. First range is the one which\r\n\t * {@link module:engine/view/range~Range#start start} position {@link module:engine/view/position~Position#isBefore is before} start\r\n\t * position of all other ranges (not to confuse with the first range added to the selection).\r\n\t * Returns `null` if no ranges are added to selection.\r\n\t *\r\n\t * @returns {module:engine/view/range~Range|null}\r\n\t */\r\n\tgetFirstRange() {\r\n\t\tlet first = null;\r\n\r\n\t\tfor ( const range of this._ranges ) {\r\n\t\t\tif ( !first || range.start.isBefore( first.start ) ) {\r\n\t\t\t\tfirst = range;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn first ? first.clone() : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns copy of the last range in the selection. Last range is the one which {@link module:engine/view/range~Range#end end}\r\n\t * position {@link module:engine/view/position~Position#isAfter is after} end position of all other ranges (not to confuse\r\n\t * with the last range added to the selection). Returns `null` if no ranges are added to selection.\r\n\t *\r\n\t * @returns {module:engine/view/range~Range|null}\r\n\t */\r\n\tgetLastRange() {\r\n\t\tlet last = null;\r\n\r\n\t\tfor ( const range of this._ranges ) {\r\n\t\t\tif ( !last || range.end.isAfter( last.end ) ) {\r\n\t\t\t\tlast = range;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn last ? last.clone() : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns copy of the first position in the selection. First position is the position that\r\n\t * {@link module:engine/view/position~Position#isBefore is before} any other position in the selection ranges.\r\n\t * Returns `null` if no ranges are added to selection.\r\n\t *\r\n\t * @returns {module:engine/view/position~Position|null}\r\n\t */\r\n\tgetFirstPosition() {\r\n\t\tconst firstRange = this.getFirstRange();\r\n\r\n\t\treturn firstRange ? firstRange.start.clone() : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns copy of the last position in the selection. Last position is the position that\r\n\t * {@link module:engine/view/position~Position#isAfter is after} any other position in the selection ranges.\r\n\t * Returns `null` if no ranges are added to selection.\r\n\t *\r\n\t * @returns {module:engine/view/position~Position|null}\r\n\t */\r\n\tgetLastPosition() {\r\n\t\tconst lastRange = this.getLastRange();\r\n\r\n\t\treturn lastRange ? lastRange.end.clone() : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether, this selection is equal to given selection. Selections are equal if they have same directions,\r\n\t * same number of ranges and all ranges from one selection equal to a range from other selection.\r\n\t *\r\n\t * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} otherSelection\r\n\t * Selection to compare with.\r\n\t * @returns {Boolean} `true` if selections are equal, `false` otherwise.\r\n\t */\r\n\tisEqual( otherSelection ) {\r\n\t\tif ( this.isFake != otherSelection.isFake ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif ( this.isFake && this.fakeSelectionLabel != otherSelection.fakeSelectionLabel ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif ( this.rangeCount != otherSelection.rangeCount ) {\r\n\t\t\treturn false;\r\n\t\t} else if ( this.rangeCount === 0 ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tif ( !this.anchor.isEqual( otherSelection.anchor ) || !this.focus.isEqual( otherSelection.focus ) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tfor ( const thisRange of this._ranges ) {\r\n\t\t\tlet found = false;\r\n\r\n\t\t\tfor ( const otherRange of otherSelection._ranges ) {\r\n\t\t\t\tif ( thisRange.isEqual( otherRange ) ) {\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( !found ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this selection is similar to given selection. Selections are similar if they have same directions, same\r\n\t * number of ranges, and all {@link module:engine/view/range~Range#getTrimmed trimmed} ranges from one selection are\r\n\t * equal to any trimmed range from other selection.\r\n\t *\r\n\t * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} otherSelection\r\n\t * Selection to compare with.\r\n\t * @returns {Boolean} `true` if selections are similar, `false` otherwise.\r\n\t */\r\n\tisSimilar( otherSelection ) {\r\n\t\tif ( this.isBackward != otherSelection.isBackward ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst numOfRangesA = count( this.getRanges() );\r\n\t\tconst numOfRangesB = count( otherSelection.getRanges() );\r\n\r\n\t\t// If selections have different number of ranges, they cannot be similar.\r\n\t\tif ( numOfRangesA != numOfRangesB ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// If both selections have no ranges, they are similar.\r\n\t\tif ( numOfRangesA == 0 ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Check if each range in one selection has a similar range in other selection.\r\n\t\tfor ( let rangeA of this.getRanges() ) {\r\n\t\t\trangeA = rangeA.getTrimmed();\r\n\r\n\t\t\tlet found = false;\r\n\r\n\t\t\tfor ( let rangeB of otherSelection.getRanges() ) {\r\n\t\t\t\trangeB = rangeB.getTrimmed();\r\n\r\n\t\t\t\tif ( rangeA.start.isEqual( rangeB.start ) && rangeA.end.isEqual( rangeB.end ) ) {\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// For `rangeA`, neither range in `otherSelection` was similar. So selections are not similar.\r\n\t\t\tif ( !found ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// There were no ranges that weren't matched. Selections are similar.\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the selected element. {@link module:engine/view/element~Element Element} is considered as selected if there is only\r\n\t * one range in the selection, and that range contains exactly one element.\r\n\t * Returns `null` if there is no selected element.\r\n\t *\r\n\t * @returns {module:engine/view/element~Element|null}\r\n\t */\r\n\tgetSelectedElement() {\r\n\t\tif ( this.rangeCount !== 1 ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn this.getFirstRange().getContainedElement();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this selection's ranges and direction to the specified location based on the given\r\n\t * {@link module:engine/view/selection~Selectable selectable}.\r\n\t *\r\n\t *\t\t// Sets selection to the given range.\r\n\t *\t\tconst range = writer.createRange( start, end );\r\n\t *\t\tselection.setTo( range );\r\n\t *\r\n\t *\t\t// Sets selection to given ranges.\r\n\t * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\r\n\t *\t\tselection.setTo( range );\r\n\t *\r\n\t *\t\t// Sets selection to the other selection.\r\n\t *\t\tconst otherSelection = writer.createSelection();\r\n\t *\t\tselection.setTo( otherSelection );\r\n\t *\r\n\t *\t \t// Sets selection to contents of DocumentSelection.\r\n\t *\t\tselection.setTo( editor.editing.view.document.selection );\r\n\t *\r\n\t * \t\t// Sets collapsed selection at the given position.\r\n\t *\t\tconst position = writer.createPositionAt( root, path );\r\n\t *\t\tselection.setTo( position );\r\n\t *\r\n\t * \t\t// Sets collapsed selection at the position of given item and offset.\r\n\t *\t\tselection.setTo( paragraph, offset );\r\n\t *\r\n\t * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\r\n\t * that element and ends after the last child of that element.\r\n\t *\r\n\t *\t\tselection.setTo( paragraph, 'in' );\r\n\t *\r\n\t * Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends just after the item.\r\n\t *\r\n\t *\t\tselection.setTo( paragraph, 'on' );\r\n\t *\r\n\t * \t\t// Clears selection. Removes all ranges.\r\n\t *\t\tselection.setTo( null );\r\n\t *\r\n\t * `Selection#setTo()` method allow passing additional options (`backward`, `fake` and `label`) as the last argument.\r\n\t *\r\n\t *\t\t// Sets selection as backward.\r\n\t *\t\tselection.setTo( range, { backward: true } );\r\n\t *\r\n\t * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\r\n\t * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\r\n\t * represented in other way, for example by applying proper CSS class.\r\n\t *\r\n\t * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\r\n\t * (and be  properly handled by screen readers).\r\n\t *\r\n\t *\t\t// Creates fake selection with label.\r\n\t *\t\tselection.setTo( range, { fake: true, label: 'foo' } );\r\n\t *\r\n\t * @fires change\r\n\t * @param {module:engine/view/selection~Selectable} selectable\r\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\r\n\t * @param {Object} [options]\r\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\r\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\r\n\t * @param {String} [options.label] Label for the fake selection.\r\n\t */\r\n\tsetTo( selectable, placeOrOffset, options ) {\r\n\t\tif ( selectable === null ) {\r\n\t\t\tthis._setRanges( [] );\r\n\t\t\tthis._setFakeOptions( placeOrOffset );\r\n\t\t} else if ( selectable instanceof Selection || selectable instanceof DocumentSelection ) {\r\n\t\t\tthis._setRanges( selectable.getRanges(), selectable.isBackward );\r\n\t\t\tthis._setFakeOptions( { fake: selectable.isFake, label: selectable.fakeSelectionLabel } );\r\n\t\t} else if ( selectable instanceof Range ) {\r\n\t\t\tthis._setRanges( [ selectable ], placeOrOffset && placeOrOffset.backward );\r\n\t\t\tthis._setFakeOptions( placeOrOffset );\r\n\t\t} else if ( selectable instanceof Position ) {\r\n\t\t\tthis._setRanges( [ new Range( selectable ) ] );\r\n\t\t\tthis._setFakeOptions( placeOrOffset );\r\n\t\t} else if ( selectable instanceof Node ) {\r\n\t\t\tconst backward = !!options && !!options.backward;\r\n\t\t\tlet range;\r\n\r\n\t\t\tif ( placeOrOffset === undefined ) {\r\n\t\t\t\t/**\r\n\t\t\t\t * selection.setTo requires the second parameter when the first parameter is a node.\r\n\t\t\t\t *\r\n\t\t\t\t * @error view-selection-setTo-required-second-parameter\r\n\t\t\t\t */\r\n\t\t\t\tthrow new CKEditorError(\r\n\t\t\t\t\t'view-selection-setTo-required-second-parameter: ' +\r\n\t\t\t\t\t'selection.setTo requires the second parameter when the first parameter is a node.',\r\n\t\t\t\t\tthis\r\n\t\t\t\t);\r\n\t\t\t} else if ( placeOrOffset == 'in' ) {\r\n\t\t\t\trange = Range._createIn( selectable );\r\n\t\t\t} else if ( placeOrOffset == 'on' ) {\r\n\t\t\t\trange = Range._createOn( selectable );\r\n\t\t\t} else {\r\n\t\t\t\trange = new Range( Position._createAt( selectable, placeOrOffset ) );\r\n\t\t\t}\r\n\r\n\t\t\tthis._setRanges( [ range ], backward );\r\n\t\t\tthis._setFakeOptions( options );\r\n\t\t} else if ( isIterable( selectable ) ) {\r\n\t\t\t// We assume that the selectable is an iterable of ranges.\r\n\t\t\t// Array.from() is used to prevent setting ranges to the old iterable\r\n\t\t\tthis._setRanges( selectable, placeOrOffset && placeOrOffset.backward );\r\n\t\t\tthis._setFakeOptions( placeOrOffset );\r\n\t\t} else {\r\n\t\t\t/**\r\n\t\t\t * Cannot set selection to given place.\r\n\t\t\t *\r\n\t\t\t * @error view-selection-setTo-not-selectable\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'view-selection-setTo-not-selectable: Cannot set selection to given place.', this );\r\n\t\t}\r\n\r\n\t\tthis.fire( 'change' );\r\n\t}\r\n\r\n\t/**\r\n\t * Moves {@link #focus} to the specified location.\r\n\t *\r\n\t * The location can be specified in the same form as {@link module:engine/view/view~View#createPositionAt view.createPositionAt()}\r\n\t * parameters.\r\n\t *\r\n\t * @fires change\r\n\t * @param {module:engine/view/item~Item|module:engine/view/position~Position} itemOrPosition\r\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\r\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\r\n\t */\r\n\tsetFocus( itemOrPosition, offset ) {\r\n\t\tif ( this.anchor === null ) {\r\n\t\t\t/**\r\n\t\t\t * Cannot set selection focus if there are no ranges in selection.\r\n\t\t\t *\r\n\t\t\t * @error view-selection-setFocus-no-ranges\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'view-selection-setFocus-no-ranges: Cannot set selection focus if there are no ranges in selection.',\r\n\t\t\t\tthis\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tconst newFocus = Position._createAt( itemOrPosition, offset );\r\n\r\n\t\tif ( newFocus.compareWith( this.focus ) == 'same' ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst anchor = this.anchor;\r\n\r\n\t\tthis._ranges.pop();\r\n\r\n\t\tif ( newFocus.compareWith( anchor ) == 'before' ) {\r\n\t\t\tthis._addRange( new Range( newFocus, anchor ), true );\r\n\t\t} else {\r\n\t\t\tthis._addRange( new Range( anchor, newFocus ) );\r\n\t\t}\r\n\r\n\t\tthis.fire( 'change' );\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this object is of the given type.\r\n\t *\r\n\t *\t\tselection.is( 'selection' ); // -> true\r\n\t *\t\tselection.is( 'view:selection' ); // -> true\r\n\t *\r\n\t *\t\tselection.is( 'model:selection' ); // -> false\r\n\t *\t\tselection.is( 'element' ); // -> false\r\n\t *\t\tselection.is( 'range' ); // -> false\r\n\t *\r\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\r\n\t *\r\n\t * @param {String} type\r\n\t * @returns {Boolean}\r\n\t */\r\n\tis( type ) {\r\n\t\treturn type == 'selection' || type == 'view:selection';\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces all ranges that were added to the selection with given array of ranges. Last range of the array\r\n\t * is treated like the last added range and is used to set {@link #anchor anchor} and {@link #focus focus}.\r\n\t * Accepts a flag describing in which way the selection is made.\r\n\t *\r\n\t * @private\r\n\t * @param {Iterable.<module:engine/view/range~Range>} newRanges Iterable object of ranges to set.\r\n\t * @param {Boolean} [isLastBackward=false] Flag describing if last added range was selected forward - from start to end\r\n\t * (`false`) or backward - from end to start (`true`). Defaults to `false`.\r\n\t */\r\n\t_setRanges( newRanges, isLastBackward = false ) {\r\n\t\t// New ranges should be copied to prevent removing them by setting them to `[]` first.\r\n\t\t// Only applies to situations when selection is set to the same selection or same selection's ranges.\r\n\t\tnewRanges = Array.from( newRanges );\r\n\r\n\t\tthis._ranges = [];\r\n\r\n\t\tfor ( const range of newRanges ) {\r\n\t\t\tthis._addRange( range );\r\n\t\t}\r\n\r\n\t\tthis._lastRangeBackward = !!isLastBackward;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this selection instance to be marked as `fake`. A fake selection does not render as browser native selection\r\n\t * over selected elements and is hidden to the user. This way, no native selection UI artifacts are displayed to\r\n\t * the user and selection over elements can be represented in other way, for example by applying proper CSS class.\r\n\t *\r\n\t * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM (and be\r\n\t * properly handled by screen readers).\r\n\t *\r\n\t * @private\r\n\t * @param {Object} [options] Options.\r\n\t * @param {Boolean} [options.fake] If set to true selection will be marked as `fake`.\r\n\t * @param {String} [options.label=''] Fake selection label.\r\n\t */\r\n\t_setFakeOptions( options = {} ) {\r\n\t\tthis._isFake = !!options.fake;\r\n\t\tthis._fakeSelectionLabel = options.fake ? options.label || '' : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a range to the selection. Added range is copied. This means that passed range is not saved in the\r\n\t * selection instance and you can safely operate on it.\r\n\t *\r\n\t * Accepts a flag describing in which way the selection is made - passed range might be selected from\r\n\t * {@link module:engine/view/range~Range#start start} to {@link module:engine/view/range~Range#end end}\r\n\t * or from {@link module:engine/view/range~Range#end end} to {@link module:engine/view/range~Range#start start}.\r\n\t * The flag is used to set {@link #anchor anchor} and {@link #focus focus} properties.\r\n\t *\r\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-selection-range-intersects` if added range intersects\r\n\t * with ranges already stored in Selection instance.\r\n\t *\r\n\t * @private\r\n\t * @fires change\r\n\t * @param {module:engine/view/range~Range} range\r\n\t * @param {Boolean} [isBackward]\r\n\t */\r\n\t_addRange( range, isBackward = false ) {\r\n\t\tif ( !( range instanceof Range ) ) {\r\n\t\t\t/**\r\n\t\t\t * Selection range set to an object that is not an instance of {@link module:engine/view/range~Range}.\r\n\t\t\t *\r\n\t\t\t * @error view-selection-add-range-not-range\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'view-selection-add-range-not-range: ' +\r\n\t\t\t\t'Selection range set to an object that is not an instance of view.Range',\r\n\t\t\t\tthis\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tthis._pushRange( range );\r\n\t\tthis._lastRangeBackward = !!isBackward;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds range to selection - creates copy of given range so it can be safely used and modified.\r\n\t *\r\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-selection-range-intersects` if added range intersects\r\n\t * with ranges already stored in selection instance.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/view/range~Range} range\r\n\t */\r\n\t_pushRange( range ) {\r\n\t\tfor ( const storedRange of this._ranges ) {\r\n\t\t\tif ( range.isIntersecting( storedRange ) ) {\r\n\t\t\t\t/**\r\n\t\t\t\t * Trying to add a range that intersects with another range from selection.\r\n\t\t\t\t *\r\n\t\t\t\t * @error view-selection-range-intersects\r\n\t\t\t\t * @param {module:engine/view/range~Range} addedRange Range that was added to the selection.\r\n\t\t\t\t * @param {module:engine/view/range~Range} intersectingRange Range from selection that intersects with `addedRange`.\r\n\t\t\t\t */\r\n\t\t\t\tthrow new CKEditorError(\r\n\t\t\t\t\t'view-selection-range-intersects: Trying to add a range that intersects with another range from selection.',\r\n\t\t\t\t\tthis,\r\n\t\t\t\t\t{ addedRange: range, intersectingRange: storedRange }\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._ranges.push( new Range( range.start, range.end ) );\r\n\t}\r\n\r\n\t/**\r\n\t * Fired whenever selection ranges are changed through {@link ~Selection Selection API}.\r\n\t *\r\n\t * @event change\r\n\t */\r\n}\r\n\r\nmix( Selection, EmitterMixin );\r\n\r\n/**\r\n * An entity that is used to set selection.\r\n *\r\n * See also {@link module:engine/view/selection~Selection#setTo}\r\n *\r\n * @typedef {\r\n *    module:engine/view/selection~Selection|\r\n *    module:engine/view/documentselection~DocumentSelection|\r\n *    module:engine/view/position~Position|\r\n *    Iterable.<module:engine/view/range~Range>|\r\n *    module:engine/view/range~Range|\r\n *    module:engine/view/item~Item|\r\n *    null\r\n * } module:engine/view/selection~Selectable\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/view/stylesmap\r\n */\r\n\r\nimport { get, isObject, merge, set, unset } from 'lodash-es';\r\n\r\n/**\r\n * Styles map. Allows handling (adding, removing, retrieving) a set of style rules (usually, of an element).\r\n *\r\n * The styles map is capable of normalizing style names so e.g. the following operations are possible:\r\n */\r\nexport default class StylesMap {\r\n\t/**\r\n\t * Creates Styles instance.\r\n\t *\r\n\t * @param {module:engine/view/stylesmap~StylesProcessor} styleProcessor\r\n\t */\r\n\tconstructor( styleProcessor ) {\r\n\t\t/**\r\n\t\t * Keeps an internal representation of styles map. Normalized styles are kept as object tree to allow unified modification and\r\n\t\t * value access model using lodash's get, set, unset, etc methods.\r\n\t\t *\r\n\t\t * When no style processor rules are defined the it acts as simple key-value storage.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {Object}\r\n\t\t */\r\n\t\tthis._styles = {};\r\n\r\n\t\t/**\r\n\t\t * An instance of the {@link module:engine/view/stylesmap~StylesProcessor}.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {module:engine/view/stylesmap~StylesProcessor}\r\n\t\t */\r\n\t\tthis._styleProcessor = styleProcessor;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if style map has no styles set.\r\n\t *\r\n\t * @returns {Boolean}\r\n\t */\r\n\tget isEmpty() {\r\n\t\tconst entries = Object.entries( this._styles );\r\n\t\tconst from = Array.from( entries );\r\n\r\n\t\treturn !from.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Number of styles defined.\r\n\t *\r\n\t * @type {Number}\r\n\t */\r\n\tget size() {\r\n\t\tif ( this.isEmpty ) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\treturn this.getStyleNames().length;\r\n\t}\r\n\r\n\t/**\r\n\t * Set styles map to a new value.\r\n\t *\r\n\t *\t\tstyles.setTo( 'border:1px solid blue;margin-top:1px;' );\r\n\t *\r\n\t * @param {String} inlineStyle\r\n\t */\r\n\tsetTo( inlineStyle ) {\r\n\t\tthis.clear();\r\n\r\n\t\tconst parsedStyles = Array.from( parseInlineStyles( inlineStyle ).entries() );\r\n\r\n\t\tfor ( const [ key, value ] of parsedStyles ) {\r\n\t\t\tthis._styleProcessor.toNormalizedForm( key, value, this._styles );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if a given style is set.\r\n\t *\r\n\t *\t\tstyles.setTo( 'margin-left:1px;' );\r\n\t *\r\n\t *\t\tstyles.has( 'margin-left' );    // -> true\r\n\t *\t\tstyles.has( 'padding' );        // -> false\r\n\t *\r\n\t * **Note**: This check supports normalized style names.\r\n\t *\r\n\t *\t\t// Enable 'margin' shorthand processing:\r\n\t *\t\teditor.data.addStyleProcessorRules( addMarginRules );\r\n\t *\r\n\t *\t\tstyles.setTo( 'margin:2px;' );\r\n\t *\r\n\t *\t\tstyles.has( 'margin' );         // -> true\r\n\t *\t\tstyles.has( 'margin-top' );     // -> true\r\n\t *\t\tstyles.has( 'margin-left' );    // -> true\r\n\t *\r\n\t *\t\tstyles.remove( 'margin-top' );\r\n\t *\r\n\t *\t\tstyles.has( 'margin' );         // -> false\r\n\t *\t\tstyles.has( 'margin-top' );     // -> false\r\n\t *\t\tstyles.has( 'margin-left' );    // -> true\r\n\t *\r\n\t * @param {String} name Style name.\r\n\t * @returns {Boolean}\r\n\t */\r\n\thas( name ) {\r\n\t\tif ( this.isEmpty ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst styles = this._styleProcessor.getReducedForm( name, this._styles );\r\n\r\n\t\tconst propertyDescriptor = styles.find( ( [ property ] ) => property === name );\r\n\r\n\t\t// Only return a value if it is set;\r\n\t\treturn Array.isArray( propertyDescriptor );\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a given style.\r\n\t *\r\n\t * Can insert one by one:\r\n\t *\r\n\t *\t\tstyles.set( 'color', 'blue' );\r\n\t *\t\tstyles.set( 'margin-right', '1em' );\r\n\t *\r\n\t * or many styles at once:\r\n\t *\r\n\t *\t\tstyles.set( {\r\n\t *\t\t\tcolor: 'blue',\r\n\t *\t\t\t'margin-right': '1em'\r\n\t *\t\t} );\r\n\t *\r\n\t * ***Note**:* This method uses {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules\r\n\t * enabled style processor rules} to normalize passed values.\r\n\t *\r\n\t *\t\t// Enable 'margin' shorthand processing:\r\n\t *\t\teditor.data.addStyleProcessorRules( addMarginRules );\r\n\t *\r\n\t *\t\tstyles.set( 'margin', '2px' );\r\n\t *\r\n\t * The above code will set margin to:\r\n\t *\r\n\t *\t\tstyles.getNormalized( 'margin' );\r\n\t *\t\t// -> { top: '2px', right: '2px', bottom: '2px', left: '2px' }\r\n\t *\r\n\t * Which makes it possible to retrieve a \"sub-value\":\r\n\t *\r\n\t *\t\tstyles.get( 'margin-left' );       // -> '2px'\r\n\t *\r\n\t * Or modify it:\r\n\t *\r\n\t *\t\tstyles.remove( 'margin-left' );\r\n\t *\r\n\t *\t\tstyles.getNormalized( 'margin' );  // -> { top: '1px', bottom: '1px', right: '1px' }\r\n\t *\t\tstyles.toString();                 // -> 'margin-bottom:1px;margin-right:1px;margin-top:1px;'\r\n\t *\r\n\t * This method also allows to set normalized values directly (if a particular styles processor rule was enabled):\r\n\t *\r\n\t *\t\tstyles.set( 'border-color', { top: 'blue' } );\r\n\t *\t\tstyles.set( 'margin', { right: '2em' } );\r\n\t *\r\n\t *\t\tstyles.toString();                 // -> 'border-color-top:blue;margin-right:2em;'\r\n\t *\r\n\t * @param {String|Object} nameOrObject Style property name or object with multiple properties.\r\n\t * @param {String|Object} valueOrObject Value to set.\r\n\t */\r\n\tset( nameOrObject, valueOrObject ) {\r\n\t\tif ( isObject( nameOrObject ) ) {\r\n\t\t\tfor ( const [ key, value ] of Object.entries( nameOrObject ) ) {\r\n\t\t\t\tthis._styleProcessor.toNormalizedForm( key, value, this._styles );\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._styleProcessor.toNormalizedForm( nameOrObject, valueOrObject, this._styles );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes given style.\r\n\t *\r\n\t *\t\tstyles.setTo( 'background:#f00;margin-right:2px;' );\r\n\t *\r\n\t *\t\tstyles.remove( 'background' );\r\n\t *\r\n\t *\t\tstyles.toString();   // -> 'margin-right:2px;'\r\n\t *\r\n\t * ***Note**:* This method uses {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules\r\n\t * enabled style processor rules} to normalize passed values.\r\n\t *\r\n\t *\t\t// Enable 'margin' shorthand processing:\r\n\t *\t\teditor.data.addStyleProcessorRules( addMarginRules );\r\n\t *\r\n\t *\t\tstyles.setTo( 'margin:1px' );\r\n\t *\r\n\t *\t\tstyles.remove( 'margin-top' );\r\n\t *\t\tstyles.remove( 'margin-right' );\r\n\t *\r\n\t *\t\tstyles.toString(); // -> 'margin-bottom:1px;margin-left:1px;'\r\n\t *\r\n\t * @param {String} name Style name.\r\n\t */\r\n\tremove( name ) {\r\n\t\tconst path = toPath( name );\r\n\r\n\t\tunset( this._styles, path );\r\n\t\tdelete this._styles[ name ];\r\n\r\n\t\tthis._cleanEmptyObjectsOnPath( path );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a normalized style object or a single value.\r\n\t *\r\n\t *\t\t// Enable 'margin' shorthand processing:\r\n\t *\t\teditor.data.addStyleProcessorRules( addMarginRules );\r\n\t *\r\n\t *\t\tconst styles = new Styles();\r\n\t *\t\tstyles.setTo( 'margin:1px 2px 3em;' );\r\n\t *\r\n\t *\t\tstyles.getNormalized( 'margin' );\r\n\t *\t\t// will log:\r\n\t *\t\t// {\r\n\t *\t\t//     top: '1px',\r\n\t *\t\t//     right: '2px',\r\n\t *\t\t//     bottom: '3em',\r\n\t *\t\t//     left: '2px'     // normalized value from margin shorthand\r\n\t *\t\t// }\r\n\t *\r\n\t *\t\tstyles.getNormalized( 'margin-left' ); // -> '2px'\r\n\t *\r\n\t * **Note**: This method will only return normalized styles if a style processor was defined.\r\n\t *\r\n\t * @param {String} name Style name.\r\n\t * @returns {Object|String|undefined}\r\n\t */\r\n\tgetNormalized( name ) {\r\n\t\treturn this._styleProcessor.getNormalized( name, this._styles );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a normalized style string. Styles are sorted by name.\r\n\t *\r\n\t *\t\tstyles.set( 'margin' , '1px' );\r\n\t *\t\tstyles.set( 'background', '#f00' );\r\n\t *\r\n\t *\t\tstyles.toString(); // -> 'background:#f00;margin:1px;'\r\n\t *\r\n\t * **Note**: This method supports normalized styles if defined.\r\n\t *\r\n\t *\t\t// Enable 'margin' shorthand processing:\r\n\t *\t\teditor.data.addStyleProcessorRules( addMarginRules );\r\n\t *\r\n\t *\t\tstyles.set( 'margin' , '1px' );\r\n\t *\t\tstyles.set( 'background', '#f00' );\r\n\t *\t\tstyles.remove( 'margin-top' );\r\n\t *\t\tstyles.remove( 'margin-right' );\r\n\t *\r\n\t *\t\tstyles.toString(); // -> 'background:#f00;margin-bottom:1px;margin-left:1px;'\r\n\t *\r\n\t * @returns {String}\r\n\t */\r\n\ttoString() {\r\n\t\tif ( this.isEmpty ) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\r\n\t\treturn this._getStylesEntries()\r\n\t\t\t.map( arr => arr.join( ':' ) )\r\n\t\t\t.sort()\r\n\t\t\t.join( ';' ) + ';';\r\n\t}\r\n\r\n\t/**\r\n\t * Returns property as a value string or undefined if property is not set.\r\n\t *\r\n\t *\t\t// Enable 'margin' shorthand processing:\r\n\t *\t\teditor.data.addStyleProcessorRules( addMarginRules );\r\n\t *\r\n\t *\t\tconst styles = new Styles();\r\n\t *\t\tstyles.setTo( 'margin:1px;' );\r\n\t *\t\tstyles.set( 'margin-bottom', '3em' );\r\n\t *\r\n\t *\t\tstyles.getAsString( 'margin' ); // -> 'margin: 1px 1px 3em;'\r\n\t *\r\n\t * Note, however, that all sub-values must be set for the longhand property name to return a value:\r\n\t *\r\n\t *\t\tconst styles = new Styles();\r\n\t *\t\tstyles.setTo( 'margin:1px;' );\r\n\t *\t\tstyles.remove( 'margin-bottom' );\r\n\t *\r\n\t *\t\tstyles.getAsString( 'margin' ); // -> undefined\r\n\t *\r\n\t * In the above scenario, it is not possible to return a `margin` value, so `undefined` is returned.\r\n\t * Instead, you should use:\r\n\t *\r\n\t *\t\tconst styles = new Styles();\r\n\t *\t\tstyles.setTo( 'margin:1px;' );\r\n\t *\t\tstyles.remove( 'margin-bottom' );\r\n\t *\r\n\t *\t\tfor ( const styleName of styles.getStyleNames() ) {\r\n\t *\t\t\tconsole.log( styleName, styles.getAsString( styleName ) );\r\n\t *\t\t}\r\n\t *\t\t// 'margin-top', '1px'\r\n\t *\t\t// 'margin-right', '1px'\r\n\t *\t\t// 'margin-left', '1px'\r\n\t *\r\n\t * In general, it is recommend to iterate over style names like in the example above. This way, you will always get all\r\n\t * the currently set style values. So, if all the 4 margin values would be set\r\n\t * the for-of loop above would yield only `'margin'`, `'1px'`:\r\n\t *\r\n\t *\t\tconst styles = new Styles();\r\n\t *\t\tstyles.setTo( 'margin:1px;' );\r\n\t *\r\n\t *\t\tfor ( const styleName of styles.getStyleNames() ) {\r\n\t *\t\t\tconsole.log( styleName, styles.getAsString( styleName ) );\r\n\t *\t\t}\r\n\t *\t\t// 'margin', '1px'\r\n\t *\r\n\t * **Note**: To get a normalized version of a longhand property use the {@link #getNormalized `#getNormalized()`} method.\r\n\t *\r\n\t * @param {String} propertyName\r\n\t * @returns {String|undefined}\r\n\t */\r\n\tgetAsString( propertyName ) {\r\n\t\tif ( this.isEmpty ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( this._styles[ propertyName ] && !isObject( this._styles[ propertyName ] ) ) {\r\n\t\t\t// Try return styles set directly - values that are not parsed.\r\n\t\t\treturn this._styles[ propertyName ];\r\n\t\t}\r\n\r\n\t\tconst styles = this._styleProcessor.getReducedForm( propertyName, this._styles );\r\n\r\n\t\tconst propertyDescriptor = styles.find( ( [ property ] ) => property === propertyName );\r\n\r\n\t\t// Only return a value if it is set;\r\n\t\tif ( Array.isArray( propertyDescriptor ) ) {\r\n\t\t\treturn propertyDescriptor[ 1 ];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns style property names as they would appear when using {@link #toString `#toString()`}.\r\n\t *\r\n\t * @returns {Array.<String>}\r\n\t */\r\n\tgetStyleNames() {\r\n\t\tif ( this.isEmpty ) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tconst entries = this._getStylesEntries();\r\n\r\n\t\treturn entries.map( ( [ key ] ) => key );\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all styles.\r\n\t */\r\n\tclear() {\r\n\t\tthis._styles = {};\r\n\t}\r\n\r\n\t/**\r\n\t * Returns normalized styles entries for further processing.\r\n\t *\r\n\t * @private\r\n\t * @returns {Array.<module:engine/view/stylesmap~PropertyDescriptor>}\r\n\t */\r\n\t_getStylesEntries() {\r\n\t\tconst parsed = [];\r\n\r\n\t\tconst keys = Object.keys( this._styles );\r\n\r\n\t\tfor ( const key of keys ) {\r\n\t\t\tparsed.push( ...this._styleProcessor.getReducedForm( key, this._styles ) );\r\n\t\t}\r\n\r\n\t\treturn parsed;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes empty objects upon removing an entry from internal object.\r\n\t *\r\n\t * @param {String} path\r\n\t * @private\r\n\t */\r\n\t_cleanEmptyObjectsOnPath( path ) {\r\n\t\tconst pathParts = path.split( '.' );\r\n\t\tconst isChildPath = pathParts.length > 1;\r\n\r\n\t\tif ( !isChildPath ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst parentPath = pathParts.splice( 0, pathParts.length - 1 ).join( '.' );\r\n\r\n\t\tconst parentObject = get( this._styles, parentPath );\r\n\r\n\t\tif ( !parentObject ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst isParentEmpty = !Array.from( Object.keys( parentObject ) ).length;\r\n\r\n\t\tif ( isParentEmpty ) {\r\n\t\t\tthis.remove( parentPath );\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Style processor is responsible for writing and reading a normalized styles object.\r\n */\r\nexport class StylesProcessor {\r\n\t/**\r\n\t * Creates StylesProcessor instance.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tconstructor() {\r\n\t\tthis._normalizers = new Map();\r\n\t\tthis._extractors = new Map();\r\n\t\tthis._reducers = new Map();\r\n\t\tthis._consumables = new Map();\r\n\t}\r\n\r\n\t/**\r\n\t * Parse style string value to a normalized object and appends it to styles object.\r\n\t *\r\n\t *\t\tconst styles = {};\r\n\t *\r\n\t *\t\tstylesProcessor.toNormalizedForm( 'margin', '1px', styles );\r\n\t *\r\n\t *\t\t// styles will consist: { margin: { top: '1px', right: '1px', bottom: '1px', left: '1px; } }\r\n\t *\r\n\t * **Note**: To define normalizer callbacks use {@link #setNormalizer}.\r\n\t *\r\n\t * @param {String} name Name of style property.\r\n\t * @param {String} propertyValue Value of style property.\r\n\t * @param {Object} styles Object holding normalized styles.\r\n\t */\r\n\ttoNormalizedForm( name, propertyValue, styles ) {\r\n\t\tif ( isObject( propertyValue ) ) {\r\n\t\t\tappendStyleValue( styles, toPath( name ), propertyValue );\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( this._normalizers.has( name ) ) {\r\n\t\t\tconst normalizer = this._normalizers.get( name );\r\n\r\n\t\t\tconst { path, value } = normalizer( propertyValue );\r\n\r\n\t\t\tappendStyleValue( styles, path, value );\r\n\t\t} else {\r\n\t\t\tappendStyleValue( styles, name, propertyValue );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a normalized version of a style property.\r\n\t *\t\tconst styles = {\r\n\t *\t\t\tmargin: { top: '1px', right: '1px', bottom: '1px', left: '1px; },\r\n\t *\t\t\tbackground: { color: '#f00' }\r\n\t *\t\t};\r\n\t *\r\n\t *\t\tstylesProcessor.getNormalized( 'background' );\r\n\t *\t\t// will return: { color: '#f00' }\r\n\t *\r\n\t *\t\tstylesProcessor.getNormalized( 'margin-top' );\r\n\t *\t\t// will return: '1px'\r\n\t *\r\n\t * **Note**: In some cases extracting single value requires defining an extractor callback {@link #setExtractor}.\r\n\t *\r\n\t * @param {String} name Name of style property.\r\n\t * @param {Object} styles Object holding normalized styles.\r\n\t * @returns {*}\r\n\t */\r\n\tgetNormalized( name, styles ) {\r\n\t\tif ( !name ) {\r\n\t\t\treturn merge( {}, styles );\r\n\t\t}\r\n\r\n\t\t// Might be empty string.\r\n\t\tif ( styles[ name ] !== undefined ) {\r\n\t\t\treturn styles[ name ];\r\n\t\t}\r\n\r\n\t\tif ( this._extractors.has( name ) ) {\r\n\t\t\tconst extractor = this._extractors.get( name );\r\n\r\n\t\t\tif ( typeof extractor === 'string' ) {\r\n\t\t\t\treturn get( styles, extractor );\r\n\t\t\t}\r\n\r\n\t\t\tconst value = extractor( name, styles );\r\n\r\n\t\t\tif ( value ) {\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn get( styles, toPath( name ) );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a reduced form of style property form normalized object.\r\n\t *\r\n\t * For default margin reducer, the below code:\r\n\t *\r\n\t *\t\tstylesProcessor.getReducedForm( 'margin', {\r\n\t *\t\t\tmargin: { top: '1px', right: '1px', bottom: '2px', left: '1px; }\r\n\t *\t\t} );\r\n\t *\r\n\t * will return:\r\n\t *\r\n\t *\t\t[\r\n\t *\t\t\t[ 'margin', '1px 1px 2px' ]\r\n\t *\t\t]\r\n\t *\r\n\t * because it might be represented as a shorthand 'margin' value. However if one of margin long hand values is missing it should return:\r\n\t *\r\n\t *\t\t[\r\n\t *\t\t\t[ 'margin-top', '1px' ],\r\n\t *\t\t\t[ 'margin-right', '1px' ],\r\n\t *\t\t\t[ 'margin-bottom', '2px' ]\r\n\t *\t\t\t// the 'left' value is missing - cannot use 'margin' shorthand.\r\n\t *\t\t]\r\n\t *\r\n\t * **Note**: To define reducer callbacks use {@link #setReducer}.\r\n\t *\r\n\t * @param {String} name\r\n\t * @param {String} name Name of style property.\r\n\t * @param {Object} styles Object holding normalized styles.\r\n\t * @returns {Array.<module:engine/view/stylesmap~PropertyDescriptor>}\r\n\t */\r\n\tgetReducedForm( name, styles ) {\r\n\t\tconst normalizedValue = this.getNormalized( name, styles );\r\n\r\n\t\t// Might be empty string.\r\n\t\tif ( normalizedValue === undefined ) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tif ( this._reducers.has( name ) ) {\r\n\t\t\tconst reducer = this._reducers.get( name );\r\n\r\n\t\t\treturn reducer( normalizedValue );\r\n\t\t}\r\n\r\n\t\treturn [ [ name, normalizedValue ] ];\r\n\t}\r\n\r\n\t/**\r\n\t * Returns related style names.\r\n\t *\r\n\t *\t\tstylesProcessor.getRelatedStyles( 'margin' );\r\n\t *\t\t// will return: [ 'margin-top', 'margin-right', 'margin-bottom', 'margin-left' ];\r\n\t *\r\n\t *\t\tstylesProcessor.getRelatedStyles( 'margin-top' );\r\n\t *\t\t// will return: [ 'margin' ];\r\n\t *\r\n\t * **Note**: To define new style relations load an existing style processor or use\r\n\t * {@link module:engine/view/stylesmap~StylesProcessor#setStyleRelation `StylesProcessor.setStyleRelation()`}.\r\n\t *\r\n\t * @param {String} name\r\n\t * @returns {Array.<String>}\r\n\t */\r\n\tgetRelatedStyles( name ) {\r\n\t\treturn this._consumables.get( name ) || [];\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a normalizer method for a style property.\r\n\t *\r\n\t * A normalizer returns describing how the value should be normalized.\r\n\t *\r\n\t * For instance 'margin' style is a shorthand for four margin values:\r\n\t *\r\n\t * - 'margin-top'\r\n\t * - 'margin-right'\r\n\t * - 'margin-bottom'\r\n\t * - 'margin-left'\r\n\t *\r\n\t * and can be written in various ways if some values are equal to others. For instance `'margin: 1px 2em;'` is a shorthand for\r\n\t * `'margin-top: 1px;margin-right: 2em;margin-bottom: 1px;margin-left: 2em'`.\r\n\t *\r\n\t * A normalizer should parse various margin notations as a single object:\r\n\t *\r\n\t *\t\tconst styles = {\r\n\t *\t\t\tmargin: {\r\n\t *\t\t\t\ttop: '1px',\r\n\t *\t\t\t\tright: '2em',\r\n\t *\t\t\t\tbottom: '1px',\r\n\t *\t\t\t\tleft: '2em'\r\n\t *\t\t\t}\r\n\t *\t\t};\r\n\t *\r\n\t * Thus a normalizer for 'margin' style should return an object defining style path and value to store:\r\n\t *\r\n\t *\t\tconst returnValue = {\r\n\t *\t\t\tpath: 'margin',\r\n\t *\t\t\tvalue: {\r\n\t *\t\t\t\ttop: '1px',\r\n\t *\t\t\t\tright: '2em',\r\n\t *\t\t\t\tbottom: '1px',\r\n\t *\t\t\t\tleft: '2em'\r\n\t *\t\t\t}\r\n\t *\t\t};\r\n\t *\r\n\t * Additionally to fully support all margin notations there should be also defined 4 normalizers for longhand margin notations. Below\r\n\t * is an example for 'margin-top' style property normalizer:\r\n\t *\r\n\t *\t\tstylesProcessor.setNormalizer( 'margin-top', valueString => {\r\n\t *\t\t\treturn {\r\n\t *\t\t\t\tpath: 'margin.top',\r\n\t *\t\t\t\tvalue: valueString\r\n\t *\t\t\t}\r\n\t *\t\t} );\r\n\t *\r\n\t * @param {String} name\r\n\t * @param {Function} callback\r\n\t */\r\n\tsetNormalizer( name, callback ) {\r\n\t\tthis._normalizers.set( name, callback );\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a extractor callback for a style property.\r\n\t *\r\n\t * Most normalized style values are stored as one level objects. It is assumed that `'margin-top'` style will be stored as:\r\n\t *\r\n\t *\t\tconst styles = {\r\n\t *\t\t\tmargin: {\r\n\t *\t\t\t\ttop: 'value'\r\n\t *\t\t\t}\r\n\t *\t\t}\r\n\t *\r\n\t * However, some styles can have conflicting notations and thus it might be harder to extract a style value from shorthand. For instance\r\n\t * the 'border-top-style' can be defined using `'border-top:solid'`, `'border-style:solid none none none'` or by `'border:solid'`\r\n\t * shorthands. The default border styles processors stores styles as:\r\n\t *\r\n\t *\t\tconst styles = {\r\n\t *\t\t\tborder: {\r\n\t *\t\t\t\tstyle: {\r\n\t *\t\t\t\t\ttop: 'solid'\r\n\t *\t\t\t\t}\r\n\t *\t\t\t}\r\n\t *\t\t}\r\n\t *\r\n\t * as it is better to modify border style independently from other values. On the other part the output of the border might be\r\n\t * desired as `border-top`, `border-left`, etc notation.\r\n\t *\r\n\t * In the above example a reducer should return a side border value that combines style, color and width:\r\n\t *\r\n\t *\t\tstyleProcessor.setExtractor( 'border-top', styles => {\r\n\t *\t\t\treturn {\r\n\t *\t\t\t\tcolor: styles.border.color.top,\r\n\t *\t\t\t\tstyle: styles.border.style.top,\r\n\t *\t\t\t\twidth: styles.border.width.top\r\n\t *\t\t\t}\r\n\t *\t\t} );\r\n\t *\r\n\t * @param {String} name\r\n\t * @param {Function|String} callbackOrPath Callback that return a requested value or path string for single values.\r\n\t */\r\n\tsetExtractor( name, callbackOrPath ) {\r\n\t\tthis._extractors.set( name, callbackOrPath );\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a reducer callback for a style property.\r\n\t *\r\n\t * Reducer returns a minimal notation for given style name. For longhand properties it is not required to write a reducer as\r\n\t * by default the direct value from style path is taken.\r\n\t *\r\n\t * For shorthand styles a reducer should return minimal style notation either by returning single name-value tuple or multiple tuples\r\n\t * if a shorthand cannot be used. For instance for a margin shorthand a reducer might return:\r\n\t *\r\n\t *\t\tconst marginShortHandTuple = [\r\n\t *\t\t\t[ 'margin', '1px 1px 2px' ]\r\n\t *\t\t];\r\n\t *\r\n\t * or a longhand tuples for defined values:\r\n\t *\r\n\t *\t\t// Considering margin.bottom and margin.left are undefined.\r\n\t *\t\tconst marginLonghandsTuples = [\r\n\t *\t\t\t[ 'margin-top', '1px' ],\r\n\t *\t\t\t[ 'margin-right', '1px' ]\r\n\t *\t\t];\r\n\t *\r\n\t * A reducer obtains a normalized style value:\r\n\t *\r\n\t *\t\t// Simplified reducer that always outputs 4 values which are always present:\r\n\t *\t\tstylesProcessor.setReducer( 'margin', margin => {\r\n\t *\t\t\treturn [\r\n\t *\t\t\t\t[ 'margin', `${ margin.top } ${ margin.right } ${ margin.bottom } ${ margin.left }` ]\r\n\t *\t\t\t]\r\n\t *\t\t} );\r\n\t *\r\n\t * @param {String} name\r\n\t * @param {Function} callback\r\n\t */\r\n\tsetReducer( name, callback ) {\r\n\t\tthis._reducers.set( name, callback );\r\n\t}\r\n\r\n\t/**\r\n\t * Defines a style shorthand relation to other style notations.\r\n\t *\r\n\t *\t\tstylesProcessor.setStyleRelation( 'margin', [\r\n\t *\t\t\t'margin-top',\r\n\t *\t\t\t'margin-right',\r\n\t *\t\t\t'margin-bottom',\r\n\t *\t\t\t'margin-left'\r\n\t *\t\t] );\r\n\t *\r\n\t * This enables expanding of style names for shorthands. For instance, if defined,\r\n\t * {@link module:engine/conversion/viewconsumable~ViewConsumable view consumable} items are automatically created\r\n\t * for long-hand margin style notation alongside the `'margin'` item.\r\n\t *\r\n\t * This means that when an element being converted has a style `margin`, a converter for `margin-left` will work just\r\n\t * fine since the view consumable will contain a consumable `margin-left` item (thanks to the relation) and\r\n\t * `element.getStyle( 'margin-left' )` will work as well assuming that the style processor was correctly configured.\r\n\t * However, once `margin-left` is consumed, `margin` will not be consumable anymore.\r\n\t *\r\n\t * @param {String} shorthandName\r\n\t * @param {Array.<String>} styleNames\r\n\t */\r\n\tsetStyleRelation( shorthandName, styleNames ) {\r\n\t\tthis._mapStyleNames( shorthandName, styleNames );\r\n\r\n\t\tfor ( const alsoName of styleNames ) {\r\n\t\t\tthis._mapStyleNames( alsoName, [ shorthandName ] );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set two-way binding of style names.\r\n\t *\r\n\t * @param {String} name\r\n\t * @param {Array.<String>} styleNames\r\n\t * @private\r\n\t */\r\n\t_mapStyleNames( name, styleNames ) {\r\n\t\tif ( !this._consumables.has( name ) ) {\r\n\t\t\tthis._consumables.set( name, [] );\r\n\t\t}\r\n\r\n\t\tthis._consumables.get( name ).push( ...styleNames );\r\n\t}\r\n}\r\n\r\n// Parses inline styles and puts property - value pairs into styles map.\r\n//\r\n// @param {String} stylesString Styles to parse.\r\n// @returns {Map.<String, String>} stylesMap Map of parsed properties and values.\r\nfunction parseInlineStyles( stylesString ) {\r\n\t// `null` if no quote was found in input string or last found quote was a closing quote. See below.\r\n\tlet quoteType = null;\r\n\tlet propertyNameStart = 0;\r\n\tlet propertyValueStart = 0;\r\n\tlet propertyName = null;\r\n\r\n\tconst stylesMap = new Map();\r\n\r\n\t// Do not set anything if input string is empty.\r\n\tif ( stylesString === '' ) {\r\n\t\treturn stylesMap;\r\n\t}\r\n\r\n\t// Fix inline styles that do not end with `;` so they are compatible with algorithm below.\r\n\tif ( stylesString.charAt( stylesString.length - 1 ) != ';' ) {\r\n\t\tstylesString = stylesString + ';';\r\n\t}\r\n\r\n\t// Seek the whole string for \"special characters\".\r\n\tfor ( let i = 0; i < stylesString.length; i++ ) {\r\n\t\tconst char = stylesString.charAt( i );\r\n\r\n\t\tif ( quoteType === null ) {\r\n\t\t\t// No quote found yet or last found quote was a closing quote.\r\n\t\t\tswitch ( char ) {\r\n\t\t\t\tcase ':':\r\n\t\t\t\t\t// Most of time colon means that property name just ended.\r\n\t\t\t\t\t// Sometimes however `:` is found inside property value (for example in background image url).\r\n\t\t\t\t\tif ( !propertyName ) {\r\n\t\t\t\t\t\t// Treat this as end of property only if property name is not already saved.\r\n\t\t\t\t\t\t// Save property name.\r\n\t\t\t\t\t\tpropertyName = stylesString.substr( propertyNameStart, i - propertyNameStart );\r\n\t\t\t\t\t\t// Save this point as the start of property value.\r\n\t\t\t\t\t\tpropertyValueStart = i + 1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '\"':\r\n\t\t\t\tcase '\\'':\r\n\t\t\t\t\t// Opening quote found (this is an opening quote, because `quoteType` is `null`).\r\n\t\t\t\t\tquoteType = char;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase ';': {\r\n\t\t\t\t\t// Property value just ended.\r\n\t\t\t\t\t// Use previously stored property value start to obtain property value.\r\n\t\t\t\t\tconst propertyValue = stylesString.substr( propertyValueStart, i - propertyValueStart );\r\n\r\n\t\t\t\t\tif ( propertyName ) {\r\n\t\t\t\t\t\t// Save parsed part.\r\n\t\t\t\t\t\tstylesMap.set( propertyName.trim(), propertyValue.trim() );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tpropertyName = null;\r\n\r\n\t\t\t\t\t// Save this point as property name start. Property name starts immediately after previous property value ends.\r\n\t\t\t\t\tpropertyNameStart = i + 1;\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if ( char === quoteType ) {\r\n\t\t\t// If a quote char is found and it is a closing quote, mark this fact by `null`-ing `quoteType`.\r\n\t\t\tquoteType = null;\r\n\t\t}\r\n\t}\r\n\r\n\treturn stylesMap;\r\n}\r\n\r\n// Return lodash compatible path from style name.\r\nfunction toPath( name ) {\r\n\treturn name.replace( '-', '.' );\r\n}\r\n\r\n// Appends style definition to the styles object.\r\n//\r\n// @param {String} nameOrPath\r\n// @param {String|Object} valueOrObject\r\n// @private\r\nfunction appendStyleValue( stylesObject, nameOrPath, valueOrObject ) {\r\n\tlet valueToSet = valueOrObject;\r\n\r\n\tif ( isObject( valueOrObject ) ) {\r\n\t\tvalueToSet = merge( {}, get( stylesObject, nameOrPath ), valueOrObject );\r\n\t}\r\n\r\n\tset( stylesObject, nameOrPath, valueToSet );\r\n}\r\n\r\n/**\r\n * A CSS style property descriptor that contains tuplet of two strings:\r\n *\r\n * - first string describes property name\r\n * - second string describes property value\r\n *\r\n *\t\tconst marginDescriptor = [ 'margin', '2px 3em' ];\r\n *\t\tconst marginTopDescriptor = [ 'margin-top', '2px' ];\r\n *\r\n * @typedef {Array.<String, String>} module:engine/view/stylesmap~PropertyDescriptor\r\n */\r\n\r\n/**\r\n * An object describing values associated with the sides of a box, for instance margins, paddings,\r\n * border widths, border colors, etc.\r\n *\r\n *\t\tconst margin = {\r\n *\t\t\ttop: '1px',\r\n *\t\t\tright: '3px',\r\n *\t\t\tbottom: '3px',\r\n *\t\t\tleft: '7px'\r\n *\t\t};\r\n *\r\n *\t\tconst borderColor = {\r\n *\t\t\ttop: 'red',\r\n *\t\t\tright: 'blue',\r\n *\t\t\tbottom: 'blue',\r\n *\t\t\tleft: 'red'\r\n *\t\t};\r\n *\r\n * @typedef {Object} module:engine/view/stylesmap~BoxSides\r\n *\r\n * @property {String} top Top side value.\r\n * @property {String} right Right side value.\r\n * @property {String} bottom Bottom side value.\r\n * @property {String} left Left side value.\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/view/text\r\n */\r\n\r\nimport Node from './node';\r\n\r\n/**\r\n * Tree view text node.\r\n *\r\n * The constructor of this class should not be used directly. To create a new text node instance\r\n * use the {@link module:engine/view/downcastwriter~DowncastWriter#createText `DowncastWriter#createText()`}\r\n * method when working on data downcasted from the model or the\r\n * {@link module:engine/view/upcastwriter~UpcastWriter#createText `UpcastWriter#createText()`}\r\n * method when working on non-semantic views.\r\n *\r\n * @extends module:engine/view/node~Node\r\n */\r\nexport default class Text extends Node {\r\n\t/**\r\n\t * Creates a tree view text node.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/view/document~Document} document The document instance to which this text node belongs.\r\n\t * @param {String} data The text's data.\r\n\t */\r\n\tconstructor( document, data ) {\r\n\t\tsuper( document );\r\n\r\n\t\t/**\r\n\t\t * The text content.\r\n\t\t *\r\n\t\t * Setting the data fires the {@link module:engine/view/node~Node#event:change:text change event}.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @member {String} module:engine/view/text~Text#_textData\r\n\t\t */\r\n\t\tthis._textData = data;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this object is of the given type.\r\n\t *\r\n\t *\t\ttext.is( 'text' ); // -> true\r\n\t *\t\ttext.is( 'node' ); // -> true\r\n\t *\t\ttext.is( 'view:text' ); // -> true\r\n\t *\t\ttext.is( 'view:node' ); // -> true\r\n\t *\r\n\t *\t\ttext.is( 'model:text' ); // -> false\r\n\t *\t\ttext.is( 'element' ); // -> false\r\n\t *\t\ttext.is( 'range' ); // -> false\r\n\t *\r\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\r\n\t *\r\n\t * @param {String} type\r\n\t * @returns {Boolean}\r\n\t */\r\n\tis( type ) {\r\n\t\treturn type == 'text' || type == 'view:text' || super.is( type );\r\n\t}\r\n\r\n\t/**\r\n\t * The text content.\r\n\t *\r\n\t * @readonly\r\n\t * @type {String}\r\n\t */\r\n\tget data() {\r\n\t\treturn this._textData;\r\n\t}\r\n\r\n\t/**\r\n\t * This getter is required when using the addition assignment operator on protected property:\r\n\t *\r\n\t *\t\tconst foo = downcastWriter.createText( 'foo' );\r\n\t *\t\tconst bar = downcastWriter.createText( 'bar' );\r\n\t *\r\n\t *\t\tfoo._data += bar.data;   // executes: `foo._data = foo._data + bar.data`\r\n\t *\t\tconsole.log( foo.data ); // prints: 'foobar'\r\n\t *\r\n\t * If the protected getter didn't exist, `foo._data` will return `undefined` and result of the merge will be invalid.\r\n\t *\r\n\t * @protected\r\n\t * @type {String}\r\n\t */\r\n\tget _data() {\r\n\t\treturn this.data;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets data and fires the {@link module:engine/view/node~Node#event:change:text change event}.\r\n\t *\r\n\t * @protected\r\n\t * @fires change:text\r\n\t * @param {String} data New data for the text node.\r\n\t */\r\n\tset _data( data ) {\r\n\t\tthis._fireChange( 'text', this );\r\n\r\n\t\tthis._textData = data;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this text node is similar to other text node.\r\n\t * Both nodes should have the same data to be considered as similar.\r\n\t *\r\n\t * @param {module:engine/view/text~Text} otherNode Node to check if it is same as this node.\r\n\t * @returns {Boolean}\r\n\t */\r\n\tisSimilar( otherNode ) {\r\n\t\tif ( !( otherNode instanceof Text ) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn this === otherNode || this.data === otherNode.data;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones this node.\r\n\t *\r\n\t * @protected\r\n\t * @returns {module:engine/view/text~Text} Text node that is a clone of this node.\r\n\t */\r\n\t_clone() {\r\n\t\treturn new Text( this.document, this.data );\r\n\t}\r\n\r\n\t// @if CK_DEBUG_ENGINE // toString() {\r\n\t// @if CK_DEBUG_ENGINE // \treturn `#${ this.data }`;\r\n\t// @if CK_DEBUG_ENGINE // }\r\n\r\n\t// @if CK_DEBUG_ENGINE // log() {\r\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ViewText: ' + this );\r\n\t// @if CK_DEBUG_ENGINE // }\r\n\r\n\t// @if CK_DEBUG_ENGINE // logExtended() {\r\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ViewText: ' + this );\r\n\t// @if CK_DEBUG_ENGINE // }\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/view/textproxy\r\n */\r\n\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\n\r\n/**\r\n * TextProxy is a wrapper for substring of {@link module:engine/view/text~Text}. Instance of this class is created by\r\n * {@link module:engine/view/treewalker~TreeWalker} when only a part of {@link module:engine/view/text~Text} needs to be returned.\r\n *\r\n * `TextProxy` has an API similar to {@link module:engine/view/text~Text Text} and allows to do most of the common tasks performed\r\n * on view nodes.\r\n *\r\n * **Note:** Some `TextProxy` instances may represent whole text node, not just a part of it.\r\n * See {@link module:engine/view/textproxy~TextProxy#isPartial}.\r\n *\r\n * **Note:** `TextProxy` is a readonly interface.\r\n *\r\n * **Note:** `TextProxy` instances are created on the fly basing on the current state of parent {@link module:engine/view/text~Text}.\r\n * Because of this it is highly unrecommended to store references to `TextProxy instances because they might get\r\n * invalidated due to operations on Document. Also TextProxy is not a {@link module:engine/view/node~Node} so it can not be\r\n * inserted as a child of {@link module:engine/view/element~Element}.\r\n *\r\n * `TextProxy` instances are created by {@link module:engine/view/treewalker~TreeWalker view tree walker}. You should not need to create\r\n * an instance of this class by your own.\r\n */\r\nexport default class TextProxy {\r\n\t/**\r\n\t * Creates a text proxy.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/view/text~Text} textNode Text node which part is represented by this text proxy.\r\n\t * @param {Number} offsetInText Offset in {@link module:engine/view/textproxy~TextProxy#textNode text node}\r\n\t * from which the text proxy starts.\r\n\t * @param {Number} length Text proxy length, that is how many text node's characters, starting from `offsetInText` it represents.\r\n\t * @constructor\r\n\t */\r\n\tconstructor( textNode, offsetInText, length ) {\r\n\t\t/**\r\n\t\t * Reference to the {@link module:engine/view/text~Text} element which TextProxy is a substring.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/view/text~Text} module:engine/view/textproxy~TextProxy#textNode\r\n\t\t */\r\n\t\tthis.textNode = textNode;\r\n\r\n\t\tif ( offsetInText < 0 || offsetInText > textNode.data.length ) {\r\n\t\t\t/**\r\n\t\t\t * Given offsetInText value is incorrect.\r\n\t\t\t *\r\n\t\t\t * @error view-textproxy-wrong-offsetintext\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'view-textproxy-wrong-offsetintext: Given offsetInText value is incorrect.', this );\r\n\t\t}\r\n\r\n\t\tif ( length < 0 || offsetInText + length > textNode.data.length ) {\r\n\t\t\t/**\r\n\t\t\t * Given length value is incorrect.\r\n\t\t\t *\r\n\t\t\t * @error view-textproxy-wrong-length\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'view-textproxy-wrong-length: Given length value is incorrect.', this );\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Text data represented by this text proxy.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {String} module:engine/view/textproxy~TextProxy#data\r\n\t\t */\r\n\t\tthis.data = textNode.data.substring( offsetInText, offsetInText + length );\r\n\r\n\t\t/**\r\n\t\t * Offset in the `textNode` where this `TextProxy` instance starts.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Number} module:engine/view/textproxy~TextProxy#offsetInText\r\n\t\t */\r\n\t\tthis.offsetInText = offsetInText;\r\n\t}\r\n\r\n\t/**\r\n\t * Offset size of this node.\r\n\t *\r\n\t * @readonly\r\n\t * @type {Number}\r\n\t */\r\n\tget offsetSize() {\r\n\t\treturn this.data.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Flag indicating whether `TextProxy` instance covers only part of the original {@link module:engine/view/text~Text text node}\r\n\t * (`true`) or the whole text node (`false`).\r\n\t *\r\n\t * This is `false` when text proxy starts at the very beginning of {@link module:engine/view/textproxy~TextProxy#textNode textNode}\r\n\t * ({@link module:engine/view/textproxy~TextProxy#offsetInText offsetInText} equals `0`) and text proxy sizes is equal to\r\n\t * text node size.\r\n\t *\r\n\t * @readonly\r\n\t * @type {Boolean}\r\n\t */\r\n\tget isPartial() {\r\n\t\treturn this.data.length !== this.textNode.data.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent of this text proxy, which is same as parent of text node represented by this text proxy.\r\n\t *\r\n\t * @readonly\r\n\t * @type {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|null}\r\n\t */\r\n\tget parent() {\r\n\t\treturn this.textNode.parent;\r\n\t}\r\n\r\n\t/**\r\n\t * Root of this text proxy, which is same as root of text node represented by this text proxy.\r\n\t *\r\n\t * @readonly\r\n\t * @type {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\r\n\t */\r\n\tget root() {\r\n\t\treturn this.textNode.root;\r\n\t}\r\n\r\n\t/**\r\n\t * {@link module:engine/view/document~Document View document} that owns this text proxy, or `null` if the text proxy is inside\r\n\t * {@link module:engine/view/documentfragment~DocumentFragment document fragment}.\r\n\t *\r\n\t * @readonly\r\n\t * @type {module:engine/view/document~Document|null}\r\n\t */\r\n\tget document() {\r\n\t\treturn this.textNode.document;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this object is of the given type.\r\n\t *\r\n\t *\t\ttextProxy.is( 'textProxy' ); // -> true\r\n\t *\t\ttextProxy.is( 'view:textProxy' ); // -> true\r\n\t *\r\n\t *\t\ttextProxy.is( 'model:textProxy' ); // -> false\r\n\t *\t\ttextProxy.is( 'element' ); // -> false\r\n\t *\t\ttextProxy.is( 'range' ); // -> false\r\n\t *\r\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\r\n\t *\r\n\t * @param {String} type\r\n\t * @returns {Boolean}\r\n\t */\r\n\tis( type ) {\r\n\t\treturn type == 'textProxy' || type == 'view:textProxy';\r\n\t}\r\n\r\n\t/**\r\n\t * Returns ancestors array of this text proxy.\r\n\t *\r\n\t * @param {Object} options Options object.\r\n\t * @param {Boolean} [options.includeSelf=false] When set to `true` {#textNode} will be also included in parent's array.\r\n\t * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from text proxy parent to\r\n\t * root element, otherwise root element will be the first item in the array.\r\n\t * @returns {Array} Array with ancestors.\r\n\t */\r\n\tgetAncestors( options = { includeSelf: false, parentFirst: false } ) {\r\n\t\tconst ancestors = [];\r\n\t\tlet parent = options.includeSelf ? this.textNode : this.parent;\r\n\r\n\t\twhile ( parent !== null ) {\r\n\t\t\tancestors[ options.parentFirst ? 'push' : 'unshift' ]( parent );\r\n\t\t\tparent = parent.parent;\r\n\t\t}\r\n\r\n\t\treturn ancestors;\r\n\t}\r\n\r\n\t// @if CK_DEBUG_ENGINE // toString() {\r\n\t// @if CK_DEBUG_ENGINE // \treturn `#${ this.data }`;\r\n\t// @if CK_DEBUG_ENGINE // }\r\n\r\n\t// @if CK_DEBUG_ENGINE // log() {\r\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ViewTextProxy: ' + this );\r\n\t// @if CK_DEBUG_ENGINE // }\r\n\r\n\t// @if CK_DEBUG_ENGINE // logExtended() {\r\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ViewTextProxy: ' + this );\r\n\t// @if CK_DEBUG_ENGINE // }\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/view/treewalker\r\n */\r\n\r\nimport Element from './element';\r\nimport Text from './text';\r\nimport TextProxy from './textproxy';\r\nimport Position from './position';\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\n\r\n/**\r\n * Position iterator class. It allows to iterate forward and backward over the document.\r\n */\r\nexport default class TreeWalker {\r\n\t/**\r\n\t * Creates a range iterator. All parameters are optional, but you have to specify either `boundaries` or `startPosition`.\r\n\t *\r\n\t * @constructor\r\n\t * @param {Object} options Object with configuration.\r\n\t * @param {module:engine/view/range~Range} [options.boundaries=null] Range to define boundaries of the iterator.\r\n\t * @param {module:engine/view/position~Position} [options.startPosition] Starting position.\r\n\t * @param {'forward'|'backward'} [options.direction='forward'] Walking direction.\r\n\t * @param {Boolean} [options.singleCharacters=false] Flag indicating whether all characters from\r\n\t * {@link module:engine/view/text~Text} should be returned as one {@link module:engine/view/text~Text} (`false`) ore one by one as\r\n\t * {@link module:engine/view/textproxy~TextProxy} (`true`).\r\n\t * @param {Boolean} [options.shallow=false] Flag indicating whether iterator should enter elements or not. If the\r\n\t * iterator is shallow child nodes of any iterated node will not be returned along with `elementEnd` tag.\r\n\t * @param {Boolean} [options.ignoreElementEnd=false] Flag indicating whether iterator should ignore `elementEnd`\r\n\t * tags. If the option is true walker will not return a parent node of start position. If this option is `true`\r\n\t * each {@link module:engine/view/element~Element} will be returned once, while if the option is `false` they might be returned\r\n\t * twice: for `'elementStart'` and `'elementEnd'`.\r\n\t */\r\n\tconstructor( options = {} ) {\r\n\t\tif ( !options.boundaries && !options.startPosition ) {\r\n\t\t\t/**\r\n\t\t\t * Neither boundaries nor starting position have been defined.\r\n\t\t\t *\r\n\t\t\t * @error view-tree-walker-no-start-position\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'view-tree-walker-no-start-position: Neither boundaries nor starting position have been defined.',\r\n\t\t\t\tnull\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif ( options.direction && options.direction != 'forward' && options.direction != 'backward' ) {\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'view-tree-walker-unknown-direction: Only `backward` and `forward` direction allowed.',\r\n\t\t\t\toptions.startPosition,\r\n\t\t\t\t{ direction: options.direction }\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Iterator boundaries.\r\n\t\t *\r\n\t\t * When the iterator is walking `'forward'` on the end of boundary or is walking `'backward'`\r\n\t\t * on the start of boundary, then `{ done: true }` is returned.\r\n\t\t *\r\n\t\t * If boundaries are not defined they are set before first and after last child of the root node.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/view/range~Range} module:engine/view/treewalker~TreeWalker#boundaries\r\n\t\t */\r\n\t\tthis.boundaries = options.boundaries || null;\r\n\r\n\t\t/**\r\n\t\t * Iterator position. If start position is not defined then position depends on {@link #direction}. If direction is\r\n\t\t * `'forward'` position starts form the beginning, when direction is `'backward'` position starts from the end.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/view/position~Position} module:engine/view/treewalker~TreeWalker#position\r\n\t\t */\r\n\t\tif ( options.startPosition ) {\r\n\t\t\tthis.position = Position._createAt( options.startPosition );\r\n\t\t} else {\r\n\t\t\tthis.position = Position._createAt( options.boundaries[ options.direction == 'backward' ? 'end' : 'start' ] );\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Walking direction. Defaults `'forward'`.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {'backward'|'forward'} module:engine/view/treewalker~TreeWalker#direction\r\n\t\t */\r\n\t\tthis.direction = options.direction || 'forward';\r\n\r\n\t\t/**\r\n\t\t * Flag indicating whether all characters from {@link module:engine/view/text~Text} should be returned as one\r\n\t\t * {@link module:engine/view/text~Text} or one by one as {@link module:engine/view/textproxy~TextProxy}.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Boolean} module:engine/view/treewalker~TreeWalker#singleCharacters\r\n\t\t */\r\n\t\tthis.singleCharacters = !!options.singleCharacters;\r\n\r\n\t\t/**\r\n\t\t * Flag indicating whether iterator should enter elements or not. If the iterator is shallow child nodes of any\r\n\t\t * iterated node will not be returned along with `elementEnd` tag.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Boolean} module:engine/view/treewalker~TreeWalker#shallow\r\n\t\t */\r\n\t\tthis.shallow = !!options.shallow;\r\n\r\n\t\t/**\r\n\t\t * Flag indicating whether iterator should ignore `elementEnd` tags. If set to `true`, walker will not\r\n\t\t * return a parent node of the start position. Each {@link module:engine/view/element~Element} will be returned once.\r\n\t\t * When set to `false` each element might be returned twice: for `'elementStart'` and `'elementEnd'`.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Boolean} module:engine/view/treewalker~TreeWalker#ignoreElementEnd\r\n\t\t */\r\n\t\tthis.ignoreElementEnd = !!options.ignoreElementEnd;\r\n\r\n\t\t/**\r\n\t\t * Start boundary parent.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {module:engine/view/node~Node} module:engine/view/treewalker~TreeWalker#_boundaryStartParent\r\n\t\t */\r\n\t\tthis._boundaryStartParent = this.boundaries ? this.boundaries.start.parent : null;\r\n\r\n\t\t/**\r\n\t\t * End boundary parent.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {module:engine/view/node~Node} module:engine/view/treewalker~TreeWalker#_boundaryEndParent\r\n\t\t */\r\n\t\tthis._boundaryEndParent = this.boundaries ? this.boundaries.end.parent : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Iterable interface.\r\n\t *\r\n\t * @returns {Iterable.<module:engine/view/treewalker~TreeWalkerValue>}\r\n\t */\r\n\t[ Symbol.iterator ]() {\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves {@link #position} in the {@link #direction} skipping values as long as the callback function returns `true`.\r\n\t *\r\n\t * For example:\r\n\t *\r\n\t * \t\twalker.skip( value => value.type == 'text' ); // <p>{}foo</p> -> <p>foo[]</p>\r\n\t * \t\twalker.skip( value => true ); // Move the position to the end: <p>{}foo</p> -> <p>foo</p>[]\r\n\t * \t\twalker.skip( value => false ); // Do not move the position.\r\n\t *\r\n\t * @param {Function} skip Callback function. Gets {@link module:engine/view/treewalker~TreeWalkerValue} and should\r\n\t * return `true` if the value should be skipped or `false` if not.\r\n\t */\r\n\tskip( skip ) {\r\n\t\tlet done, value, prevPosition;\r\n\r\n\t\tdo {\r\n\t\t\tprevPosition = this.position;\r\n\r\n\t\t\t( { done, value } = this.next() );\r\n\t\t} while ( !done && skip( value ) );\r\n\r\n\t\tif ( !done ) {\r\n\t\t\tthis.position = prevPosition;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the next tree walker's value.\r\n\t *\r\n\t * @returns {module:engine/view/treewalker~TreeWalkerValue} Object implementing iterator interface, returning\r\n\t * information about taken step.\r\n\t */\r\n\tnext() {\r\n\t\tif ( this.direction == 'forward' ) {\r\n\t\t\treturn this._next();\r\n\t\t} else {\r\n\t\t\treturn this._previous();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Makes a step forward in view. Moves the {@link #position} to the next position and returns the encountered value.\r\n\t *\r\n\t * @private\r\n\t * @returns {Object}\r\n\t * @returns {Boolean} return.done `true` if iterator is done, `false` otherwise.\r\n\t * @returns {module:engine/view/treewalker~TreeWalkerValue} return.value Information about taken step.\r\n\t */\r\n\t_next() {\r\n\t\tlet position = this.position.clone();\r\n\t\tconst previousPosition = this.position;\r\n\t\tconst parent = position.parent;\r\n\r\n\t\t// We are at the end of the root.\r\n\t\tif ( parent.parent === null && position.offset === parent.childCount ) {\r\n\t\t\treturn { done: true };\r\n\t\t}\r\n\r\n\t\t// We reached the walker boundary.\r\n\t\tif ( parent === this._boundaryEndParent && position.offset == this.boundaries.end.offset ) {\r\n\t\t\treturn { done: true };\r\n\t\t}\r\n\r\n\t\t// Get node just after current position.\r\n\t\tlet node;\r\n\r\n\t\t// Text is a specific parent because it contains string instead of child nodes.\r\n\t\tif ( parent instanceof Text ) {\r\n\t\t\tif ( position.isAtEnd ) {\r\n\t\t\t\t// Prevent returning \"elementEnd\" for Text node. Skip that value and return the next walker step.\r\n\t\t\t\tthis.position = Position._createAfter( parent );\r\n\r\n\t\t\t\treturn this._next();\r\n\t\t\t}\r\n\r\n\t\t\tnode = parent.data[ position.offset ];\r\n\t\t} else {\r\n\t\t\tnode = parent.getChild( position.offset );\r\n\t\t}\r\n\r\n\t\tif ( node instanceof Element ) {\r\n\t\t\tif ( !this.shallow ) {\r\n\t\t\t\tposition = new Position( node, 0 );\r\n\t\t\t} else {\r\n\t\t\t\tposition.offset++;\r\n\t\t\t}\r\n\r\n\t\t\tthis.position = position;\r\n\r\n\t\t\treturn this._formatReturnValue( 'elementStart', node, previousPosition, position, 1 );\r\n\t\t} else if ( node instanceof Text ) {\r\n\t\t\tif ( this.singleCharacters ) {\r\n\t\t\t\tposition = new Position( node, 0 );\r\n\t\t\t\tthis.position = position;\r\n\r\n\t\t\t\treturn this._next();\r\n\t\t\t} else {\r\n\t\t\t\tlet charactersCount = node.data.length;\r\n\t\t\t\tlet item;\r\n\r\n\t\t\t\t// If text stick out of walker range, we need to cut it and wrap in TextProxy.\r\n\t\t\t\tif ( node == this._boundaryEndParent ) {\r\n\t\t\t\t\tcharactersCount = this.boundaries.end.offset;\r\n\t\t\t\t\titem = new TextProxy( node, 0, charactersCount );\r\n\t\t\t\t\tposition = Position._createAfter( item );\r\n\t\t\t\t} else {\r\n\t\t\t\t\titem = new TextProxy( node, 0, node.data.length );\r\n\t\t\t\t\t// If not just keep moving forward.\r\n\t\t\t\t\tposition.offset++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.position = position;\r\n\r\n\t\t\t\treturn this._formatReturnValue( 'text', item, previousPosition, position, charactersCount );\r\n\t\t\t}\r\n\t\t} else if ( typeof node == 'string' ) {\r\n\t\t\tlet textLength;\r\n\r\n\t\t\tif ( this.singleCharacters ) {\r\n\t\t\t\ttextLength = 1;\r\n\t\t\t} else {\r\n\t\t\t\t// Check if text stick out of walker range.\r\n\t\t\t\tconst endOffset = parent === this._boundaryEndParent ? this.boundaries.end.offset : parent.data.length;\r\n\r\n\t\t\t\ttextLength = endOffset - position.offset;\r\n\t\t\t}\r\n\r\n\t\t\tconst textProxy = new TextProxy( parent, position.offset, textLength );\r\n\r\n\t\t\tposition.offset += textLength;\r\n\t\t\tthis.position = position;\r\n\r\n\t\t\treturn this._formatReturnValue( 'text', textProxy, previousPosition, position, textLength );\r\n\t\t} else {\r\n\t\t\t// `node` is not set, we reached the end of current `parent`.\r\n\t\t\tposition = Position._createAfter( parent );\r\n\t\t\tthis.position = position;\r\n\r\n\t\t\tif ( this.ignoreElementEnd ) {\r\n\t\t\t\treturn this._next();\r\n\t\t\t} else {\r\n\t\t\t\treturn this._formatReturnValue( 'elementEnd', parent, previousPosition, position );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Makes a step backward in view. Moves the {@link #position} to the previous position and returns the encountered value.\r\n\t *\r\n\t * @private\r\n\t * @returns {Object}\r\n\t * @returns {Boolean} return.done True if iterator is done.\r\n\t * @returns {module:engine/view/treewalker~TreeWalkerValue} return.value Information about taken step.\r\n\t */\r\n\t_previous() {\r\n\t\tlet position = this.position.clone();\r\n\t\tconst previousPosition = this.position;\r\n\t\tconst parent = position.parent;\r\n\r\n\t\t// We are at the beginning of the root.\r\n\t\tif ( parent.parent === null && position.offset === 0 ) {\r\n\t\t\treturn { done: true };\r\n\t\t}\r\n\r\n\t\t// We reached the walker boundary.\r\n\t\tif ( parent == this._boundaryStartParent && position.offset == this.boundaries.start.offset ) {\r\n\t\t\treturn { done: true };\r\n\t\t}\r\n\r\n\t\t// Get node just before current position.\r\n\t\tlet node;\r\n\r\n\t\t// Text {@link module:engine/view/text~Text} element is a specific parent because contains string instead of child nodes.\r\n\t\tif ( parent instanceof Text ) {\r\n\t\t\tif ( position.isAtStart ) {\r\n\t\t\t\t// Prevent returning \"elementStart\" for Text node. Skip that value and return the next walker step.\r\n\t\t\t\tthis.position = Position._createBefore( parent );\r\n\r\n\t\t\t\treturn this._previous();\r\n\t\t\t}\r\n\r\n\t\t\tnode = parent.data[ position.offset - 1 ];\r\n\t\t} else {\r\n\t\t\tnode = parent.getChild( position.offset - 1 );\r\n\t\t}\r\n\r\n\t\tif ( node instanceof Element ) {\r\n\t\t\tif ( !this.shallow ) {\r\n\t\t\t\tposition = new Position( node, node.childCount );\r\n\t\t\t\tthis.position = position;\r\n\r\n\t\t\t\tif ( this.ignoreElementEnd ) {\r\n\t\t\t\t\treturn this._previous();\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn this._formatReturnValue( 'elementEnd', node, previousPosition, position );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tposition.offset--;\r\n\t\t\t\tthis.position = position;\r\n\r\n\t\t\t\treturn this._formatReturnValue( 'elementStart', node, previousPosition, position, 1 );\r\n\t\t\t}\r\n\t\t} else if ( node instanceof Text ) {\r\n\t\t\tif ( this.singleCharacters ) {\r\n\t\t\t\tposition = new Position( node, node.data.length );\r\n\t\t\t\tthis.position = position;\r\n\r\n\t\t\t\treturn this._previous();\r\n\t\t\t} else {\r\n\t\t\t\tlet charactersCount = node.data.length;\r\n\t\t\t\tlet item;\r\n\r\n\t\t\t\t// If text stick out of walker range, we need to cut it and wrap in TextProxy.\r\n\t\t\t\tif ( node == this._boundaryStartParent ) {\r\n\t\t\t\t\tconst offset = this.boundaries.start.offset;\r\n\r\n\t\t\t\t\titem = new TextProxy( node, offset, node.data.length - offset );\r\n\t\t\t\t\tcharactersCount = item.data.length;\r\n\t\t\t\t\tposition = Position._createBefore( item );\r\n\t\t\t\t} else {\r\n\t\t\t\t\titem = new TextProxy( node, 0, node.data.length );\r\n\t\t\t\t\t// If not just keep moving backward.\r\n\t\t\t\t\tposition.offset--;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.position = position;\r\n\r\n\t\t\t\treturn this._formatReturnValue( 'text', item, previousPosition, position, charactersCount );\r\n\t\t\t}\r\n\t\t} else if ( typeof node == 'string' ) {\r\n\t\t\tlet textLength;\r\n\r\n\t\t\tif ( !this.singleCharacters ) {\r\n\t\t\t\t// Check if text stick out of walker range.\r\n\t\t\t\tconst startOffset = parent === this._boundaryStartParent ? this.boundaries.start.offset : 0;\r\n\r\n\t\t\t\ttextLength = position.offset - startOffset;\r\n\t\t\t} else {\r\n\t\t\t\ttextLength = 1;\r\n\t\t\t}\r\n\r\n\t\t\tposition.offset -= textLength;\r\n\r\n\t\t\tconst textProxy = new TextProxy( parent, position.offset, textLength );\r\n\r\n\t\t\tthis.position = position;\r\n\r\n\t\t\treturn this._formatReturnValue( 'text', textProxy, previousPosition, position, textLength );\r\n\t\t} else {\r\n\t\t\t// `node` is not set, we reached the beginning of current `parent`.\r\n\t\t\tposition = Position._createBefore( parent );\r\n\t\t\tthis.position = position;\r\n\r\n\t\t\treturn this._formatReturnValue( 'elementStart', parent, previousPosition, position, 1 );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Format returned data and adjust `previousPosition` and `nextPosition` if reach the bound of the {@link module:engine/view/text~Text}.\r\n\t *\r\n\t * @private\r\n\t * @param {module:engine/view/treewalker~TreeWalkerValueType} type Type of step.\r\n\t * @param {module:engine/view/item~Item} item Item between old and new position.\r\n\t * @param {module:engine/view/position~Position} previousPosition Previous position of iterator.\r\n\t * @param {module:engine/view/position~Position} nextPosition Next position of iterator.\r\n\t * @param {Number} [length] Length of the item.\r\n\t * @returns {module:engine/view/treewalker~TreeWalkerValue}\r\n\t */\r\n\t_formatReturnValue( type, item, previousPosition, nextPosition, length ) {\r\n\t\t// Text is a specific parent, because contains string instead of children.\r\n\t\t// Walker doesn't enter to the Text except situations when walker is iterating over every single character,\r\n\t\t// or the bound starts/ends inside the Text. So when the position is at the beginning or at the end of the Text\r\n\t\t// we move it just before or just after Text.\r\n\t\tif ( item instanceof TextProxy ) {\r\n\t\t\t// Position is at the end of Text.\r\n\t\t\tif ( item.offsetInText + item.data.length == item.textNode.data.length ) {\r\n\t\t\t\tif ( this.direction == 'forward' && !( this.boundaries && this.boundaries.end.isEqual( this.position ) ) ) {\r\n\t\t\t\t\tnextPosition = Position._createAfter( item.textNode );\r\n\t\t\t\t\t// When we change nextPosition of returned value we need also update walker current position.\r\n\t\t\t\t\tthis.position = nextPosition;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpreviousPosition = Position._createAfter( item.textNode );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Position is at the begining ot the text.\r\n\t\t\tif ( item.offsetInText === 0 ) {\r\n\t\t\t\tif ( this.direction == 'backward' && !( this.boundaries && this.boundaries.start.isEqual( this.position ) ) ) {\r\n\t\t\t\t\tnextPosition = Position._createBefore( item.textNode );\r\n\t\t\t\t\t// When we change nextPosition of returned value we need also update walker current position.\r\n\t\t\t\t\tthis.position = nextPosition;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpreviousPosition = Position._createBefore( item.textNode );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tdone: false,\r\n\t\t\tvalue: {\r\n\t\t\t\ttype,\r\n\t\t\t\titem,\r\n\t\t\t\tpreviousPosition,\r\n\t\t\t\tnextPosition,\r\n\t\t\t\tlength\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**\r\n * Type of the step made by {@link module:engine/view/treewalker~TreeWalker}.\r\n * Possible values: `'elementStart'` if walker is at the beginning of a node, `'elementEnd'` if walker is at the end\r\n * of node, or `'text'` if walker traversed over single and multiple characters.\r\n * For {@link module:engine/view/text~Text} `elementStart` and `elementEnd` is not returned.\r\n *\r\n * @typedef {String} module:engine/view/treewalker~TreeWalkerValueType\r\n */\r\n\r\n/**\r\n * Object returned by {@link module:engine/view/treewalker~TreeWalker} when traversing tree view.\r\n *\r\n * @typedef {Object} module:engine/view/treewalker~TreeWalkerValue\r\n * @property {module:engine/view/treewalker~TreeWalkerValueType} type\r\n * @property {module:engine/view/item~Item} item Item between the old and the new positions\r\n * of the tree walker.\r\n * @property {module:engine/view/position~Position} previousPosition Previous position of the iterator.\r\n * * Forward iteration: For `'elementEnd'` it is the last position inside the element. For all other types it is the\r\n * position before the item.\r\n * * Backward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\r\n * the position after item.\r\n * * If the position is at the beginning or at the end of the {@link module:engine/view/text~Text} it is always moved from the\r\n * inside of the text to its parent just before or just after that text.\r\n * @property {module:engine/view/position~Position} nextPosition Next position of the iterator.\r\n * * Forward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\r\n * the position after the item.\r\n * * Backward iteration: For `'elementEnd'` it is last position inside element. For all other types it is the position\r\n * before the item.\r\n * * If the position is at the beginning or at the end of the {@link module:engine/view/text~Text} it is always moved from the\r\n * inside of the text to its parent just before or just after that text.\r\n * @property {Number} [length] Length of the item. For `'elementStart'` it is `1`. For `'text'` it is\r\n * the length of that text. For `'elementEnd'` it is `undefined`.\r\n */\r\n\r\n/**\r\n * Tree walking directions.\r\n *\r\n * @typedef {'forward'|'backward'} module:engine/view/treewalker~TreeWalkerDirection\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/view/uielement\r\n */\r\n\r\nimport Element from './element';\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\nimport Node from './node';\r\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\r\n\r\n/**\r\n * UI element class. It should be used to represent editing UI which needs to be injected into the editing view\r\n * If possible, you should keep your UI outside the editing view. However, if that is not possible,\r\n * UI elements can be used.\r\n *\r\n * How a UI element is rendered is in your control (you pass a callback to\r\n * {@link module:engine/view/downcastwriter~DowncastWriter#createUIElement `downcastWriter#createUIElement()`}).\r\n * The editor will ignore your UI element – the selection cannot be placed in it, it is skipped (invisible) when\r\n * the user modifies the selection by using arrow keys and the editor does not listen to any mutations which\r\n * happen inside your UI elements.\r\n *\r\n * The limitation is that you cannot convert a model element to a UI element. UI elements need to be\r\n * created for {@link module:engine/model/markercollection~Marker markers} or as additinal elements\r\n * inside normal {@link module:engine/view/containerelement~ContainerElement container elements}.\r\n *\r\n * To create a new UI element use the\r\n * {@link module:engine/view/downcastwriter~DowncastWriter#createUIElement `downcastWriter#createUIElement()`} method.\r\n *\r\n * @extends module:engine/view/element~Element\r\n */\r\nexport default class UIElement extends Element {\r\n\t/**\r\n\t * Creates new instance of UIElement.\r\n\t *\r\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-uielement-cannot-add` when third parameter is passed,\r\n\t * to inform that usage of UIElement is incorrect (adding child nodes to UIElement is forbidden).\r\n\t *\r\n\t * @see module:engine/view/downcastwriter~DowncastWriter#createUIElement\r\n\t * @protected\r\n\t * @param {module:engine/view/document~Document} document The document instance to which this element belongs.\r\n\t * @param {String} name Node name.\r\n\t * @param {Object|Iterable} [attributes] Collection of attributes.\r\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\r\n\t * A list of nodes to be inserted into created element.\r\n\t */\r\n\tconstructor( document, name, attributes, children ) {\r\n\t\tsuper( document, name, attributes, children );\r\n\r\n\t\t/**\r\n\t\t * Returns `null` because filler is not needed for UIElements.\r\n\t\t *\r\n\t\t * @method #getFillerOffset\r\n\t\t * @returns {null} Always returns null.\r\n\t\t */\r\n\t\tthis.getFillerOffset = getFillerOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether this object is of the given.\r\n\t *\r\n\t *\t\tuiElement.is( 'uiElement' ); // -> true\r\n\t *\t\tuiElement.is( 'element' ); // -> true\r\n\t *\t\tuiElement.is( 'node' ); // -> true\r\n\t *\t\tuiElement.is( 'view:uiElement' ); // -> true\r\n\t *\t\tuiElement.is( 'view:element' ); // -> true\r\n\t *\t\tuiElement.is( 'view:node' ); // -> true\r\n\t *\r\n\t *\t\tuiElement.is( 'model:element' ); // -> false\r\n\t *\t\tuiElement.is( 'documentFragment' ); // -> false\r\n\t *\r\n\t * Assuming that the object being checked is an ui element, you can also check its\r\n\t * {@link module:engine/view/uielement~UIElement#name name}:\r\n\t *\r\n\t *\t\tuiElement.is( 'span' ); // -> true if this is a span ui element\r\n\t *\t\tuiElement.is( 'uiElement', 'span' ); // -> same as above\r\n\t *\t\ttext.is( 'span' ); -> false\r\n\t *\r\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\r\n\t *\r\n\t * @param {String} type Type to check when `name` parameter is present.\r\n\t * Otherwise, it acts like the `name` parameter.\r\n\t * @param {String} [name] Element name.\r\n\t * @returns {Boolean}\r\n\t */\r\n\tis( type, name = null ) {\r\n\t\tconst cutType = type.replace( /^view:/, '' );\r\n\t\tif ( !name ) {\r\n\t\t\treturn cutType == 'uiElement' || super.is( type );\r\n\t\t} else {\r\n\t\t\treturn ( cutType == 'uiElement' && name == this.name ) || super.is( type, name );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Overrides {@link module:engine/view/element~Element#_insertChild} method.\r\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-uielement-cannot-add` to prevent adding any child nodes\r\n\t * to UIElement.\r\n\t *\r\n\t * @protected\r\n\t */\r\n\t_insertChild( index, nodes ) {\r\n\t\tif ( nodes && ( nodes instanceof Node || Array.from( nodes ).length > 0 ) ) {\r\n\t\t\t/**\r\n\t\t\t * Cannot add children to {@link module:engine/view/uielement~UIElement}.\r\n\t\t\t *\r\n\t\t\t * @error view-uielement-cannot-add\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'view-uielement-cannot-add: Cannot add child nodes to UIElement instance.', this );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Renders this {@link module:engine/view/uielement~UIElement} to DOM. This method is called by\r\n\t * {@link module:engine/view/domconverter~DomConverter}.\r\n\t * Do not use inheritance to create custom rendering method, replace `render()` method instead:\r\n\t *\r\n\t *\t\tconst myUIElement = downcastWriter.createUIElement( 'span' );\r\n\t *\t\tmyUIElement.render = function( domDocument ) {\r\n\t *\t\t\tconst domElement = this.toDomElement( domDocument );\r\n\t *\t\t\tdomElement.innerHTML = '<b>this is ui element</b>';\r\n\t *\r\n\t *\t\t\treturn domElement;\r\n\t *\t\t};\r\n\t *\r\n\t * If changes in your UI element should trigger some editor UI update you should call\r\n\t * the {@link module:core/editor/editorui~EditorUI#update `editor.ui.update()`} method\r\n\t * after rendering your UI element.\r\n\t *\r\n\t * @param {Document} domDocument\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\trender( domDocument ) {\r\n\t\treturn this.toDomElement( domDocument );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates DOM element based on this view UIElement.\r\n\t * Note that each time this method is called new DOM element is created.\r\n\t *\r\n\t * @param {Document} domDocument\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\ttoDomElement( domDocument ) {\r\n\t\tconst domElement = domDocument.createElement( this.name );\r\n\r\n\t\tfor ( const key of this.getAttributeKeys() ) {\r\n\t\t\tdomElement.setAttribute( key, this.getAttribute( key ) );\r\n\t\t}\r\n\r\n\t\treturn domElement;\r\n\t}\r\n}\r\n\r\n/**\r\n * This function injects UI element handling to the given {@link module:engine/view/document~Document document}.\r\n *\r\n * A callback is added to {@link module:engine/view/document~Document#event:keydown document keydown event}.\r\n * The callback handles the situation when right arrow key is pressed and selection is collapsed before a UI element.\r\n * Without this handler, it would be impossible to \"jump over\" UI element using right arrow key.\r\n *\r\n * @param {module:engine/view/view~View} view View controller to which the quirks handling will be injected.\r\n */\r\nexport function injectUiElementHandling( view ) {\r\n\tview.document.on( 'keydown', ( evt, data ) => jumpOverUiElement( evt, data, view.domConverter ) );\r\n}\r\n\r\n// Returns `null` because block filler is not needed for UIElements.\r\n//\r\n// @returns {null}\r\nfunction getFillerOffset() {\r\n\treturn null;\r\n}\r\n\r\n// Selection cannot be placed in a `UIElement`. Whenever it is placed there, it is moved before it. This\r\n// causes a situation when it is impossible to jump over `UIElement` using right arrow key, because the selection\r\n// ends up in ui element (in DOM) and is moved back to the left. This handler fixes this situation.\r\nfunction jumpOverUiElement( evt, data, domConverter ) {\r\n\tif ( data.keyCode == keyCodes.arrowright ) {\r\n\t\tconst domSelection = data.domTarget.ownerDocument.defaultView.getSelection();\r\n\t\tconst domSelectionCollapsed = domSelection.rangeCount == 1 && domSelection.getRangeAt( 0 ).collapsed;\r\n\r\n\t\t// Jump over UI element if selection is collapsed or shift key is pressed. These are the cases when selection would extend.\r\n\t\tif ( domSelectionCollapsed || data.shiftKey ) {\r\n\t\t\tconst domParent = domSelection.focusNode;\r\n\t\t\tconst domOffset = domSelection.focusOffset;\r\n\r\n\t\t\tconst viewPosition = domConverter.domPositionToView( domParent, domOffset );\r\n\r\n\t\t\t// In case if dom element is not converted to view or is not mapped or something. Happens for example in some tests.\r\n\t\t\tif ( viewPosition === null ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Skip all following ui elements.\r\n\t\t\tlet jumpedOverAnyUiElement = false;\r\n\r\n\t\t\tconst nextViewPosition = viewPosition.getLastMatchingPosition( value => {\r\n\t\t\t\tif ( value.item.is( 'uiElement' ) ) {\r\n\t\t\t\t\t// Remember that there was at least one ui element.\r\n\t\t\t\t\tjumpedOverAnyUiElement = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Jump over ui elements, jump over empty attribute elements, move up from inside of attribute element.\r\n\t\t\t\tif ( value.item.is( 'uiElement' ) || value.item.is( 'attributeElement' ) ) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Don't jump over text or don't get out of container element.\r\n\t\t\t\treturn false;\r\n\t\t\t} );\r\n\r\n\t\t\t// If anything has been skipped, fix position.\r\n\t\t\t// This `if` could be possibly omitted but maybe it is better not to mess with DOM selection if not needed.\r\n\t\t\tif ( jumpedOverAnyUiElement ) {\r\n\t\t\t\tconst newDomPosition = domConverter.viewPositionToDom( nextViewPosition );\r\n\r\n\t\t\t\tif ( domSelectionCollapsed ) {\r\n\t\t\t\t\t// Selection was collapsed, so collapse it at further position.\r\n\t\t\t\t\tdomSelection.collapse( newDomPosition.parent, newDomPosition.offset );\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Selection was not collapse, so extend it instead of collapsing.\r\n\t\t\t\t\tdomSelection.extend( newDomPosition.parent, newDomPosition.offset );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module module:engine/view/upcastwriter\r\n */\r\n\r\nimport DocumentFragment from './documentfragment';\r\nimport Element from './element';\r\nimport Text from './text';\r\nimport { isPlainObject } from 'lodash-es';\r\nimport Position from './position';\r\nimport Range from './range';\r\nimport Selection from './selection';\r\n\r\n/**\r\n * View upcast writer. It provides a set of methods used to manipulate non-semantic view trees.\r\n *\r\n * It should be used only while working on a non-semantic view\r\n * (e.g. a view created from HTML string on paste).\r\n * To manipulate a view which was or is being downcasted from the the model use the\r\n * {@link module:engine/view/downcastwriter~DowncastWriter downcast writer}.\r\n *\r\n * Read more about changing the view in the {@glink framework/guides/architecture/editing-engine#changing-the-view Changing the view}\r\n * section of the {@glink framework/guides/architecture/editing-engine Editing engine architecture} guide.\r\n *\r\n * Unlike `DowncastWriter`, which is available in the {@link module:engine/view/view~View#change `View#change()`} block,\r\n * `UpcastWriter` can be created wherever you need it:\r\n *\r\n *\t\tconst writer = new UpcastWriter( viewDocument );\r\n *\t\tconst text = writer.createText( 'foo!' );\r\n *\r\n *\t\twriter.appendChild( text, someViewElement );\r\n */\r\nexport default class UpcastWriter {\r\n\t/**\r\n\t * @param {module:engine/view/document~Document} document The view document instance in which this upcast writer operates.\r\n\t */\r\n\tconstructor( document ) {\r\n\t\t/**\r\n\t\t * The view document instance in which this upcast writer operates.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @type {module:engine/view/document~Document}\r\n\t\t */\r\n\t\tthis.document = document;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new {@link module:engine/view/documentfragment~DocumentFragment} instance.\r\n\t *\r\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\r\n\t * A list of nodes to be inserted into the created document fragment.\r\n\t * @returns {module:engine/view/documentfragment~DocumentFragment} The created document fragment.\r\n\t */\r\n\tcreateDocumentFragment( children ) {\r\n\t\treturn new DocumentFragment( this.document, children );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new {@link module:engine/view/element~Element} instance.\r\n\t *\r\n\t * Attributes can be passed in various formats:\r\n\t *\r\n\t *\t\tupcastWriter.createElement( 'div', { class: 'editor', contentEditable: 'true' } ); // object\r\n\t *\t\tupcastWriter.createElement( 'div', [ [ 'class', 'editor' ], [ 'contentEditable', 'true' ] ] ); // map-like iterator\r\n\t *\t\tupcastWriter.createElement( 'div', mapOfAttributes ); // map\r\n\t *\r\n\t * @param {String} name Node name.\r\n\t * @param {Object|Iterable} [attrs] Collection of attributes.\r\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\r\n\t * A list of nodes to be inserted into created element.\r\n\t * @returns {module:engine/view/element~Element} Created element.\r\n\t */\r\n\tcreateElement( name, attrs, children ) {\r\n\t\treturn new Element( this.document, name, attrs, children );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new {@link module:engine/view/text~Text} instance.\r\n\t *\r\n\t * @param {String} data The text's data.\r\n\t * @returns {module:engine/view/text~Text} The created text node.\r\n\t */\r\n\tcreateText( data ) {\r\n\t\treturn new Text( this.document, data );\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the provided element.\r\n\t *\r\n\t * @see module:engine/view/element~Element#_clone\r\n\t * @param {module:engine/view/element~Element} element Element to be cloned.\r\n\t * @param {Boolean} [deep=false] If set to `true` clones element and all its children recursively. When set to `false`,\r\n\t * element will be cloned without any children.\r\n\t * @returns {module:engine/view/element~Element} Clone of this element.\r\n\t */\r\n\tclone( element, deep = false ) {\r\n\t\treturn element._clone( deep );\r\n\t}\r\n\r\n\t/**\r\n\t * Appends a child node or a list of child nodes at the end of this node\r\n\t * and sets the parent of these nodes to this element.\r\n\t *\r\n\t * @see module:engine/view/element~Element#_appendChild\r\n\t * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\r\n\t * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} element Element\r\n\t * to which items will be appended.\r\n\t * @fires module:engine/view/node~Node#event:change\r\n\t * @returns {Number} Number of appended nodes.\r\n\t */\r\n\tappendChild( items, element ) {\r\n\t\treturn element._appendChild( items );\r\n\t}\r\n\r\n\t/**\r\n\t * Inserts a child node or a list of child nodes on the given index and sets the parent of these nodes to\r\n\t * this element.\r\n\t *\r\n\t * @see module:engine/view/element~Element#_insertChild\r\n\t * @param {Number} index Offset at which nodes should be inserted.\r\n\t * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\r\n\t * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} element Element\r\n\t * to which items will be inserted.\r\n\t * @fires module:engine/view/node~Node#event:change\r\n\t * @returns {Number} Number of inserted nodes.\r\n\t */\r\n\tinsertChild( index, items, element ) {\r\n\t\treturn element._insertChild( index, items );\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the given number of child nodes starting at the given index and set the parent of these nodes to `null`.\r\n\t *\r\n\t * @see module:engine/view/element~Element#_removeChildren\r\n\t * @param {Number} index Offset from which nodes will be removed.\r\n\t * @param {Number} howMany Number of nodes to remove.\r\n\t * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} element Element\r\n\t * which children will be removed.\r\n\t * @fires module:engine/view/node~Node#event:change\r\n\t * @returns {Array.<module:engine/view/node~Node>} The array containing removed nodes.\r\n\t */\r\n\tremoveChildren( index, howMany, element ) {\r\n\t\treturn element._removeChildren( index, howMany );\r\n\t}\r\n\r\n\t/**\r\n\t * Removes given element from the view structure. Will not have effect on detached elements.\r\n\t *\r\n\t * @param {module:engine/view/element~Element} element Element which will be removed.\r\n\t * @returns {Array.<module:engine/view/node~Node>} The array containing removed nodes.\r\n\t */\r\n\tremove( element ) {\r\n\t\tconst parent = element.parent;\r\n\r\n\t\tif ( parent ) {\r\n\t\t\treturn this.removeChildren( parent.getChildIndex( element ), 1, parent );\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces given element with the new one in the view structure. Will not have effect on detached elements.\r\n\t *\r\n\t * @param {module:engine/view/element~Element} oldElement Element which will be replaced.\r\n\t * @param {module:engine/view/element~Element} newElement Element which will be inserted in the place of the old element.\r\n\t * @returns {Boolean} Whether old element was successfully replaced.\r\n\t */\r\n\treplace( oldElement, newElement ) {\r\n\t\tconst parent = oldElement.parent;\r\n\r\n\t\tif ( parent ) {\r\n\t\t\tconst index = parent.getChildIndex( oldElement );\r\n\r\n\t\t\tthis.removeChildren( index, 1, parent );\r\n\t\t\tthis.insertChild( index, newElement, parent );\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes given element from view structure and places its children in its position.\r\n\t * It does nothing if element has no parent.\r\n\t *\r\n\t * @param {module:engine/view/element~Element} element Element to unwrap.\r\n\t */\r\n\tunwrapElement( element ) {\r\n\t\tconst parent = element.parent;\r\n\r\n\t\tif ( parent ) {\r\n\t\t\tconst index = parent.getChildIndex( element );\r\n\r\n\t\t\tthis.remove( element );\r\n\t\t\tthis.insertChild( index, element.getChildren(), parent );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Renames element by creating a copy of a given element but with its name changed and then moving contents of the\r\n\t * old element to the new one.\r\n\t *\r\n\t * Since this function creates a new element and removes the given one, the new element is returned to keep reference.\r\n\t *\r\n\t * @param {String} newName New element name.\r\n\t * @param {module:engine/view/element~Element} element Element to be renamed.\r\n\t * @returns {module:engine/view/element~Element|null} New element or null if the old element\r\n\t * was not replaced (happens for detached elements).\r\n\t */\r\n\trename( newName, element ) {\r\n\t\tconst newElement = new Element( this.document, newName, element.getAttributes(), element.getChildren() );\r\n\r\n\t\treturn this.replace( element, newElement ) ? newElement : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds or overwrites element's attribute with a specified key and value.\r\n\t *\r\n\t *\t\twriter.setAttribute( linkElement, 'href', 'http://ckeditor.com' );\r\n\t *\r\n\t * @see module:engine/view/element~Element#_setAttribute\r\n\t * @param {String} key Attribute key.\r\n\t * @param {String} value Attribute value.\r\n\t * @param {module:engine/view/element~Element} element Element for which attribute will be set.\r\n\t */\r\n\tsetAttribute( key, value, element ) {\r\n\t\telement._setAttribute( key, value );\r\n\t}\r\n\r\n\t/**\r\n\t * Removes attribute from the element.\r\n\t *\r\n\t *\t\twriter.removeAttribute( linkElement, 'href' );\r\n\t *\r\n\t * @see module:engine/view/element~Element#_removeAttribute\r\n\t * @param {String} key Attribute key.\r\n\t * @param {module:engine/view/element~Element} element Element from which attribute will be removed.\r\n\t */\r\n\tremoveAttribute( key, element ) {\r\n\t\telement._removeAttribute( key );\r\n\t}\r\n\r\n\t/**\r\n\t * Adds specified class to the element.\r\n\t *\r\n\t *\t\twriter.addClass( linkElement, 'foo' );\r\n\t *\t\twriter.addClass( linkElement, [ 'foo', 'bar' ] );\r\n\t *\r\n\t * @see module:engine/view/element~Element#_addClass\r\n\t * @param {Array.<String>|String} className Single class name or array of class names which will be added.\r\n\t * @param {module:engine/view/element~Element} element Element for which class will be added.\r\n\t */\r\n\taddClass( className, element ) {\r\n\t\telement._addClass( className );\r\n\t}\r\n\r\n\t/**\r\n\t * Removes specified class from the element.\r\n\t *\r\n\t *\t\twriter.removeClass( linkElement, 'foo' );\r\n\t *\t\twriter.removeClass( linkElement, [ 'foo', 'bar' ] );\r\n\t *\r\n\t * @see module:engine/view/element~Element#_removeClass\r\n\t * @param {Array.<String>|String} className Single class name or array of class names which will be removed.\r\n\t * @param {module:engine/view/element~Element} element Element from which class will be removed.\r\n\t */\r\n\tremoveClass( className, element ) {\r\n\t\telement._removeClass( className );\r\n\t}\r\n\r\n\t/**\r\n\t * Adds style to the element.\r\n\t *\r\n\t *\t\twriter.setStyle( element, 'color', 'red' );\r\n\t *\t\twriter.setStyle( element, {\r\n\t *\t\t\tcolor: 'red',\r\n\t *\t\t\tposition: 'fixed'\r\n\t *\t\t} );\r\n\t *\r\n\t * **Note**: This method can work with normalized style names if\r\n\t * {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules a particular style processor rule is enabled}.\r\n\t * See {@link module:engine/view/stylesmap~StylesMap#set `StylesMap#set()`} for details.\r\n\t *\r\n\t * @see module:engine/view/element~Element#_setStyle\r\n\t * @param {String|Object} property Property name or object with key - value pairs.\r\n\t * @param {String} [value] Value to set. This parameter is ignored if object is provided as the first parameter.\r\n\t * @param {module:engine/view/element~Element} element Element for which style will be added.\r\n\t */\r\n\tsetStyle( property, value, element ) {\r\n\t\tif ( isPlainObject( property ) && element === undefined ) {\r\n\t\t\telement = value;\r\n\t\t}\r\n\t\telement._setStyle( property, value );\r\n\t}\r\n\r\n\t/**\r\n\t * Removes specified style from the element.\r\n\t *\r\n\t *\t\twriter.removeStyle( element, 'color' );  // Removes 'color' style.\r\n\t *\t\twriter.removeStyle( element, [ 'color', 'border-top' ] ); // Removes both 'color' and 'border-top' styles.\r\n\t *\r\n\t * **Note**: This method can work with normalized style names if\r\n\t * {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules a particular style processor rule is enabled}.\r\n\t * See {@link module:engine/view/stylesmap~StylesMap#remove `StylesMap#remove()`} for details.\r\n\t *\r\n\t * @see module:engine/view/element~Element#_removeStyle\r\n\t * @param {Array.<String>|String} property Style property name or names to be removed.\r\n\t * @param {module:engine/view/element~Element} element Element from which style will be removed.\r\n\t */\r\n\tremoveStyle( property, element ) {\r\n\t\telement._removeStyle( property );\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a custom property on element. Unlike attributes, custom properties are not rendered to the DOM,\r\n\t * so they can be used to add special data to elements.\r\n\t *\r\n\t * @see module:engine/view/element~Element#_setCustomProperty\r\n\t * @param {String|Symbol} key Custom property name/key.\r\n\t * @param {*} value Custom property value to be stored.\r\n\t * @param {module:engine/view/element~Element} element Element for which custom property will be set.\r\n\t */\r\n\tsetCustomProperty( key, value, element ) {\r\n\t\telement._setCustomProperty( key, value );\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a custom property stored under the given key.\r\n\t *\r\n\t * @see module:engine/view/element~Element#_removeCustomProperty\r\n\t * @param {String|Symbol} key Name/key of the custom property to be removed.\r\n\t * @param {module:engine/view/element~Element} element Element from which the custom property will be removed.\r\n\t * @returns {Boolean} Returns true if property was removed.\r\n\t */\r\n\tremoveCustomProperty( key, element ) {\r\n\t\treturn element._removeCustomProperty( key );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates position at the given location. The location can be specified as:\r\n\t *\r\n\t * * a {@link module:engine/view/position~Position position},\r\n\t * * parent element and offset (offset defaults to `0`),\r\n\t * * parent element and `'end'` (sets position at the end of that element),\r\n\t * * {@link module:engine/view/item~Item view item} and `'before'` or `'after'` (sets position before or after given view item).\r\n\t *\r\n\t * This method is a shortcut to other constructors such as:\r\n\t *\r\n\t * * {@link #createPositionBefore},\r\n\t * * {@link #createPositionAfter},\r\n\t *\r\n\t * @param {module:engine/view/item~Item|module:engine/model/position~Position} itemOrPosition\r\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\r\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\r\n\t */\r\n\tcreatePositionAt( itemOrPosition, offset ) {\r\n\t\treturn Position._createAt( itemOrPosition, offset );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new position after given view item.\r\n\t *\r\n\t * @param {module:engine/view/item~Item} item View item after which the position should be located.\r\n\t * @returns {module:engine/view/position~Position}\r\n\t */\r\n\tcreatePositionAfter( item ) {\r\n\t\treturn Position._createAfter( item );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new position before given view item.\r\n\t *\r\n\t * @param {module:engine/view/item~Item} item View item before which the position should be located.\r\n\t * @returns {module:engine/view/position~Position}\r\n\t */\r\n\tcreatePositionBefore( item ) {\r\n\t\treturn Position._createBefore( item );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a range spanning from `start` position to `end` position.\r\n\t *\r\n\t * **Note:** This factory method creates it's own {@link module:engine/view/position~Position} instances basing on passed values.\r\n\t *\r\n\t * @param {module:engine/view/position~Position} start Start position.\r\n\t * @param {module:engine/view/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\r\n\t * @returns {module:engine/view/range~Range}\r\n\t */\r\n\tcreateRange( start, end ) {\r\n\t\treturn new Range( start, end );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a range that starts before given {@link module:engine/view/item~Item view item} and ends after it.\r\n\t *\r\n\t * @param {module:engine/view/item~Item} item\r\n\t * @returns {module:engine/view/range~Range}\r\n\t */\r\n\tcreateRangeOn( item ) {\r\n\t\treturn Range._createOn( item );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\r\n\t * that element and ends after the last child of that element.\r\n\t *\r\n\t * @param {module:engine/view/element~Element} element Element which is a parent for the range.\r\n\t * @returns {module:engine/view/range~Range}\r\n\t */\r\n\tcreateRangeIn( element ) {\r\n\t\treturn Range._createIn( element );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new {@link module:engine/view/selection~Selection} instance.\r\n\t *\r\n\t * \t\t// Creates empty selection without ranges.\r\n\t *\t\tconst selection = writer.createSelection();\r\n\t *\r\n\t *\t\t// Creates selection at the given range.\r\n\t *\t\tconst range = writer.createRange( start, end );\r\n\t *\t\tconst selection = writer.createSelection( range );\r\n\t *\r\n\t *\t\t// Creates selection at the given ranges\r\n\t * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\r\n\t *\t\tconst selection = writer.createSelection( ranges );\r\n\t *\r\n\t *\t\t// Creates selection from the other selection.\r\n\t *\t\tconst otherSelection = writer.createSelection();\r\n\t *\t\tconst selection = writer.createSelection( otherSelection );\r\n\t *\r\n\t *\t\t// Creates selection from the document selection.\r\n\t *\t\tconst selection = writer.createSelection( editor.editing.view.document.selection );\r\n\t *\r\n\t * \t\t// Creates selection at the given position.\r\n\t *\t\tconst position = writer.createPositionFromPath( root, path );\r\n\t *\t\tconst selection = writer.createSelection( position );\r\n\t *\r\n\t *\t\t// Creates collapsed selection at the position of given item and offset.\r\n\t *\t\tconst paragraph = writer.createContainerElement( 'paragraph' );\r\n\t *\t\tconst selection = writer.createSelection( paragraph, offset );\r\n\t *\r\n\t *\t\t// Creates a range inside an {@link module:engine/view/element~Element element} which starts before the\r\n\t *\t\t// first child of that element and ends after the last child of that element.\r\n\t *\t\tconst selection = writer.createSelection( paragraph, 'in' );\r\n\t *\r\n\t *\t\t// Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends\r\n\t *\t\t// just after the item.\r\n\t *\t\tconst selection = writer.createSelection( paragraph, 'on' );\r\n\t *\r\n\t * `Selection`'s constructor allow passing additional options (`backward`, `fake` and `label`) as the last argument.\r\n\t *\r\n\t *\t\t// Creates backward selection.\r\n\t *\t\tconst selection = writer.createSelection( range, { backward: true } );\r\n\t *\r\n\t * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\r\n\t * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\r\n\t * represented in other way, for example by applying proper CSS class.\r\n\t *\r\n\t * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\r\n\t * (and be  properly handled by screen readers).\r\n\t *\r\n\t *\t\t// Creates fake selection with label.\r\n\t *\t\tconst selection = writer.createSelection( range, { fake: true, label: 'foo' } );\r\n\t *\r\n\t * @param {module:engine/view/selection~Selectable} [selectable=null]\r\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Offset or place when selectable is an `Item`.\r\n\t * @param {Object} [options]\r\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\r\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\r\n\t * @param {String} [options.label] Label for the fake selection.\r\n\t * @returns {module:engine/view/selection~Selection}\r\n\t */\r\n\tcreateSelection( selectable, placeOrOffset, options ) {\r\n\t\treturn new Selection( selectable, placeOrOffset, options );\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module engine/view/view\r\n */\r\n\r\nimport Document from './document';\r\nimport DowncastWriter from './downcastwriter';\r\nimport Renderer from './renderer';\r\nimport DomConverter from './domconverter';\r\nimport Position from './position';\r\nimport Range from './range';\r\nimport Selection from './selection';\r\n\r\nimport MutationObserver from './observer/mutationobserver';\r\nimport KeyObserver from './observer/keyobserver';\r\nimport FakeSelectionObserver from './observer/fakeselectionobserver';\r\nimport SelectionObserver from './observer/selectionobserver';\r\nimport FocusObserver from './observer/focusobserver';\r\nimport CompositionObserver from './observer/compositionobserver';\r\nimport InputObserver from './observer/inputobserver';\r\n\r\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\r\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\r\nimport { scrollViewportToShowTarget } from '@ckeditor/ckeditor5-utils/src/dom/scroll';\r\nimport { injectUiElementHandling } from './uielement';\r\nimport { injectQuirksHandling } from './filler';\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\nimport env from '@ckeditor/ckeditor5-utils/src/env';\r\n\r\n/**\r\n * Editor's view controller class. Its main responsibility is DOM - View management for editing purposes, to provide\r\n * abstraction over the DOM structure and events and hide all browsers quirks.\r\n *\r\n * View controller renders view document to DOM whenever view structure changes. To determine when view can be rendered,\r\n * all changes need to be done using the {@link module:engine/view/view~View#change} method, using\r\n * {@link module:engine/view/downcastwriter~DowncastWriter}:\r\n *\r\n *\t\tview.change( writer => {\r\n *\t\t\twriter.insert( position, writer.createText( 'foo' ) );\r\n *\t\t} );\r\n *\r\n * View controller also register {@link module:engine/view/observer/observer~Observer observers} which observes changes\r\n * on DOM and fire events on the {@link module:engine/view/document~Document Document}.\r\n * Note that the following observers are added by the class constructor and are always available:\r\n *\r\n * * {@link module:engine/view/observer/mutationobserver~MutationObserver},\r\n * * {@link module:engine/view/observer/selectionobserver~SelectionObserver},\r\n * * {@link module:engine/view/observer/focusobserver~FocusObserver},\r\n * * {@link module:engine/view/observer/keyobserver~KeyObserver},\r\n * * {@link module:engine/view/observer/fakeselectionobserver~FakeSelectionObserver}.\r\n * * {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\r\n *\r\n * This class also {@link module:engine/view/view~View#attachDomRoot binds the DOM and the view elements}.\r\n *\r\n * If you do not need full a DOM - view management, and only want to transform a tree of view elements to a tree of DOM\r\n * elements you do not need this controller. You can use the {@link module:engine/view/domconverter~DomConverter DomConverter} instead.\r\n *\r\n * @mixes module:utils/observablemixin~ObservableMixin\r\n */\r\nexport default class View {\r\n\t/**\r\n\t * @param {module:engine/view/stylesmap~StylesProcessor} stylesProcessor The styles processor instance.\r\n\t */\r\n\tconstructor( stylesProcessor ) {\r\n\t\t/**\r\n\t\t * Instance of the {@link module:engine/view/document~Document} associated with this view controller.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @type {module:engine/view/document~Document}\r\n\t\t */\r\n\t\tthis.document = new Document( stylesProcessor );\r\n\r\n\t\t/**\r\n\t\t * Instance of the {@link module:engine/view/domconverter~DomConverter domConverter} used by\r\n\t\t * {@link module:engine/view/view~View#_renderer renderer}\r\n\t\t * and {@link module:engine/view/observer/observer~Observer observers}.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @type {module:engine/view/domconverter~DomConverter}\r\n\t\t */\r\n\t\tthis.domConverter = new DomConverter( this.document );\r\n\r\n\t\t/**\r\n\t\t * Roots of the DOM tree. Map on the `HTMLElement`s with roots names as keys.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @type {Map.<String, HTMLElement>}\r\n\t\t */\r\n\t\tthis.domRoots = new Map();\r\n\r\n\t\t/**\r\n\t\t * Used to prevent calling {@link #forceRender} and {@link #change} during rendering view to the DOM.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Boolean} #isRenderingInProgress\r\n\t\t */\r\n\t\tthis.set( 'isRenderingInProgress', false );\r\n\r\n\t\t/**\r\n\t\t * Instance of the {@link module:engine/view/renderer~Renderer renderer}.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @type {module:engine/view/renderer~Renderer}\r\n\t\t */\r\n\t\tthis._renderer = new Renderer( this.domConverter, this.document.selection );\r\n\t\tthis._renderer.bind( 'isFocused' ).to( this.document );\r\n\r\n\t\t/**\r\n\t\t * A DOM root attributes cache. It saves the initial values of DOM root attributes before the DOM element\r\n\t\t * is {@link module:engine/view/view~View#attachDomRoot attached} to the view so later on, when\r\n\t\t * the view is destroyed ({@link module:engine/view/view~View#detachDomRoot}), they can be easily restored.\r\n\t\t * This way, the DOM element can go back to the (clean) state as if the editing view never used it.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {WeakMap.<HTMLElement,Object>}\r\n\t\t */\r\n\t\tthis._initialDomRootAttributes = new WeakMap();\r\n\r\n\t\t/**\r\n\t\t * Map of registered {@link module:engine/view/observer/observer~Observer observers}.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {Map.<Function, module:engine/view/observer/observer~Observer>}\r\n\t\t */\r\n\t\tthis._observers = new Map();\r\n\r\n\t\t/**\r\n\t\t * Is set to `true` when {@link #change view changes} are currently in progress.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {Boolean}\r\n\t\t */\r\n\t\tthis._ongoingChange = false;\r\n\r\n\t\t/**\r\n\t\t * Used to prevent calling {@link #forceRender} and {@link #change} during rendering view to the DOM.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {Boolean}\r\n\t\t */\r\n\t\tthis._postFixersInProgress = false;\r\n\r\n\t\t/**\r\n\t\t * Internal flag to temporary disable rendering. See the usage in the {@link #_disableRendering}.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {Boolean}\r\n\t\t */\r\n\t\tthis._renderingDisabled = false;\r\n\r\n\t\t/**\r\n\t\t * Internal flag that disables rendering when there are no changes since the last rendering.\r\n\t\t * It stores information about changed selection and changed elements from attached document roots.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {Boolean}\r\n\t\t */\r\n\t\tthis._hasChangedSinceTheLastRendering = false;\r\n\r\n\t\t/**\r\n\t\t * DowncastWriter instance used in {@link #change change method} callbacks.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {module:engine/view/downcastwriter~DowncastWriter}\r\n\t\t */\r\n\t\tthis._writer = new DowncastWriter( this.document );\r\n\r\n\t\t// Add default observers.\r\n\t\tthis.addObserver( MutationObserver );\r\n\t\tthis.addObserver( SelectionObserver );\r\n\t\tthis.addObserver( FocusObserver );\r\n\t\tthis.addObserver( KeyObserver );\r\n\t\tthis.addObserver( FakeSelectionObserver );\r\n\t\tthis.addObserver( CompositionObserver );\r\n\r\n\t\tif ( env.isAndroid ) {\r\n\t\t\tthis.addObserver( InputObserver );\r\n\t\t}\r\n\r\n\t\t// Inject quirks handlers.\r\n\t\tinjectQuirksHandling( this );\r\n\t\tinjectUiElementHandling( this );\r\n\r\n\t\t// Use 'normal' priority so that rendering is performed as first when using that priority.\r\n\t\tthis.on( 'render', () => {\r\n\t\t\tthis._render();\r\n\r\n\t\t\t// Informs that layout has changed after render.\r\n\t\t\tthis.document.fire( 'layoutChanged' );\r\n\r\n\t\t\t// Reset the `_hasChangedSinceTheLastRendering` flag after rendering.\r\n\t\t\tthis._hasChangedSinceTheLastRendering = false;\r\n\t\t} );\r\n\r\n\t\t// Listen to the document selection changes directly.\r\n\t\tthis.listenTo( this.document.selection, 'change', () => {\r\n\t\t\tthis._hasChangedSinceTheLastRendering = true;\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * Attaches a DOM root element to the view element and enable all observers on that element.\r\n\t * Also {@link module:engine/view/renderer~Renderer#markToSync mark element} to be synchronized\r\n\t * with the view what means that all child nodes will be removed and replaced with content of the view root.\r\n\t *\r\n\t * This method also will change view element name as the same as tag name of given dom root.\r\n\t * Name is always transformed to lower case.\r\n\t *\r\n\t * **Note:** Use {@link #detachDomRoot `detachDomRoot()`} to revert this action.\r\n\t *\r\n\t * @param {Element} domRoot DOM root element.\r\n\t * @param {String} [name='main'] Name of the root.\r\n\t */\r\n\tattachDomRoot( domRoot, name = 'main' ) {\r\n\t\tconst viewRoot = this.document.getRoot( name );\r\n\r\n\t\t// Set view root name the same as DOM root tag name.\r\n\t\tviewRoot._name = domRoot.tagName.toLowerCase();\r\n\r\n\t\tconst initialDomRootAttributes = {};\r\n\r\n\t\t// 1. Copy and cache the attributes to remember the state of the element before attaching.\r\n\t\t//    The cached attributes will be restored in detachDomRoot() so the element goes to the\r\n\t\t//    clean state as if the editing view never used it.\r\n\t\t// 2. Apply the attributes using the view writer, so they all go under the control of the engine.\r\n\t\t//    The editing view takes over the attribute management completely because various\r\n\t\t//    features (e.g. addPlaceholder()) require dynamic changes of those attributes and they\r\n\t\t//    cannot be managed by the engine and the UI library at the same time.\r\n\t\tfor ( const { name, value } of Array.from( domRoot.attributes ) ) {\r\n\t\t\tinitialDomRootAttributes[ name ] = value;\r\n\r\n\t\t\t// Do not use writer.setAttribute() for the class attribute. The EditableUIView class\r\n\t\t\t// and its descendants could have already set some using the writer.addClass() on the view\r\n\t\t\t// document root. They haven't been rendered yet so they are not present in the DOM root.\r\n\t\t\t// Using writer.setAttribute( 'class', ... ) would override them completely.\r\n\t\t\tif ( name === 'class' ) {\r\n\t\t\t\tthis._writer.addClass( value.split( ' ' ), viewRoot );\r\n\t\t\t} else {\r\n\t\t\t\tthis._writer.setAttribute( name, value, viewRoot );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._initialDomRootAttributes.set( domRoot, initialDomRootAttributes );\r\n\r\n\t\tconst updateContenteditableAttribute = () => {\r\n\t\t\tthis._writer.setAttribute( 'contenteditable', !viewRoot.isReadOnly, viewRoot );\r\n\r\n\t\t\tif ( viewRoot.isReadOnly ) {\r\n\t\t\t\tthis._writer.addClass( 'ck-read-only', viewRoot );\r\n\t\t\t} else {\r\n\t\t\t\tthis._writer.removeClass( 'ck-read-only', viewRoot );\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Set initial value.\r\n\t\tupdateContenteditableAttribute();\r\n\r\n\t\tthis.domRoots.set( name, domRoot );\r\n\t\tthis.domConverter.bindElements( domRoot, viewRoot );\r\n\t\tthis._renderer.markToSync( 'children', viewRoot );\r\n\t\tthis._renderer.markToSync( 'attributes', viewRoot );\r\n\t\tthis._renderer.domDocuments.add( domRoot.ownerDocument );\r\n\r\n\t\tviewRoot.on( 'change:children', ( evt, node ) => this._renderer.markToSync( 'children', node ) );\r\n\t\tviewRoot.on( 'change:attributes', ( evt, node ) => this._renderer.markToSync( 'attributes', node ) );\r\n\t\tviewRoot.on( 'change:text', ( evt, node ) => this._renderer.markToSync( 'text', node ) );\r\n\t\tviewRoot.on( 'change:isReadOnly', () => this.change( updateContenteditableAttribute ) );\r\n\r\n\t\tviewRoot.on( 'change', () => {\r\n\t\t\tthis._hasChangedSinceTheLastRendering = true;\r\n\t\t} );\r\n\r\n\t\tfor ( const observer of this._observers.values() ) {\r\n\t\t\tobserver.observe( domRoot, name );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Detaches a DOM root element from the view element and restores its attributes to the state before\r\n\t * {@link #attachDomRoot `attachDomRoot()`}.\r\n\t *\r\n\t * @param {String} name Name of the root to detach.\r\n\t */\r\n\tdetachDomRoot( name ) {\r\n\t\tconst domRoot = this.domRoots.get( name );\r\n\r\n\t\t// Remove all root attributes so the DOM element is \"bare\".\r\n\t\tArray.from( domRoot.attributes ).forEach( ( { name } ) => domRoot.removeAttribute( name ) );\r\n\r\n\t\tconst initialDomRootAttributes = this._initialDomRootAttributes.get( domRoot );\r\n\r\n\t\t// Revert all view root attributes back to the state before attachDomRoot was called.\r\n\t\tfor ( const attribute in initialDomRootAttributes ) {\r\n\t\t\tdomRoot.setAttribute( attribute, initialDomRootAttributes[ attribute ] );\r\n\t\t}\r\n\r\n\t\tthis.domRoots.delete( name );\r\n\t\tthis.domConverter.unbindDomElement( domRoot );\r\n\t}\r\n\r\n\t/**\r\n\t * Gets DOM root element.\r\n\t *\r\n\t * @param {String} [name='main']  Name of the root.\r\n\t * @returns {Element} DOM root element instance.\r\n\t */\r\n\tgetDomRoot( name = 'main' ) {\r\n\t\treturn this.domRoots.get( name );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates observer of the given type if not yet created, {@link module:engine/view/observer/observer~Observer#enable enables} it\r\n\t * and {@link module:engine/view/observer/observer~Observer#observe attaches} to all existing and future\r\n\t * {@link #domRoots DOM roots}.\r\n\t *\r\n\t * Note: Observers are recognized by their constructor (classes). A single observer will be instantiated and used only\r\n\t * when registered for the first time. This means that features and other components can register a single observer\r\n\t * multiple times without caring whether it has been already added or not.\r\n\t *\r\n\t * @param {Function} Observer The constructor of an observer to add.\r\n\t * Should create an instance inheriting from {@link module:engine/view/observer/observer~Observer}.\r\n\t * @returns {module:engine/view/observer/observer~Observer} Added observer instance.\r\n\t */\r\n\taddObserver( Observer ) {\r\n\t\tlet observer = this._observers.get( Observer );\r\n\r\n\t\tif ( observer ) {\r\n\t\t\treturn observer;\r\n\t\t}\r\n\r\n\t\tobserver = new Observer( this );\r\n\r\n\t\tthis._observers.set( Observer, observer );\r\n\r\n\t\tfor ( const [ name, domElement ] of this.domRoots ) {\r\n\t\t\tobserver.observe( domElement, name );\r\n\t\t}\r\n\r\n\t\tobserver.enable();\r\n\r\n\t\treturn observer;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns observer of the given type or `undefined` if such observer has not been added yet.\r\n\t *\r\n\t * @param {Function} Observer The constructor of an observer to get.\r\n\t * @returns {module:engine/view/observer/observer~Observer|undefined} Observer instance or undefined.\r\n\t */\r\n\tgetObserver( Observer ) {\r\n\t\treturn this._observers.get( Observer );\r\n\t}\r\n\r\n\t/**\r\n\t * Disables all added observers.\r\n\t */\r\n\tdisableObservers() {\r\n\t\tfor ( const observer of this._observers.values() ) {\r\n\t\t\tobserver.disable();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Enables all added observers.\r\n\t */\r\n\tenableObservers() {\r\n\t\tfor ( const observer of this._observers.values() ) {\r\n\t\t\tobserver.enable();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Scrolls the page viewport and {@link #domRoots} with their ancestors to reveal the\r\n\t * caret, if not already visible to the user.\r\n\t */\r\n\tscrollToTheSelection() {\r\n\t\tconst range = this.document.selection.getFirstRange();\r\n\r\n\t\tif ( range ) {\r\n\t\t\tscrollViewportToShowTarget( {\r\n\t\t\t\ttarget: this.domConverter.viewRangeToDom( range ),\r\n\t\t\t\tviewportOffset: 20\r\n\t\t\t} );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * It will focus DOM element representing {@link module:engine/view/editableelement~EditableElement EditableElement}\r\n\t * that is currently having selection inside.\r\n\t */\r\n\tfocus() {\r\n\t\tif ( !this.document.isFocused ) {\r\n\t\t\tconst editable = this.document.selection.editableElement;\r\n\r\n\t\t\tif ( editable ) {\r\n\t\t\t\tthis.domConverter.focus( editable );\r\n\t\t\t\tthis.forceRender();\r\n\t\t\t} else {\r\n\t\t\t\t// Before focusing view document, selection should be placed inside one of the view's editables.\r\n\t\t\t\t// Normally its selection will be converted from model document (which have default selection), but\r\n\t\t\t\t// when using view document on its own, we need to manually place selection before focusing it.\r\n\t\t\t\t//\r\n\t\t\t\t// @if CK_DEBUG // console.warn( 'There is no selection in any editable to focus.' );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The `change()` method is the primary way of changing the view. You should use it to modify any node in the view tree.\r\n\t * It makes sure that after all changes are made the view is rendered to the DOM (assuming that the view will be changed\r\n\t * inside the callback). It prevents situations when the DOM is updated when the view state is not yet correct. It allows\r\n\t * to nest calls one inside another and still performs a single rendering after all those changes are made.\r\n\t * It also returns the return value of its callback.\r\n\t *\r\n\t *\t\tconst text = view.change( writer => {\r\n\t *\t\t\tconst newText = writer.createText( 'foo' );\r\n\t *\t\t\twriter.insert( position1, newText );\r\n\t *\r\n\t *\t\t\tview.change( writer => {\r\n\t *\t\t\t\twriter.insert( position2, writer.createText( 'bar' ) );\r\n\t *\t\t\t} );\r\n\t *\r\n\t * \t\t\twriter.remove( range );\r\n\t *\r\n\t * \t\t\treturn newText;\r\n\t *\t\t} );\r\n\t *\r\n\t * When the outermost change block is done and rendering to the DOM is over the\r\n\t * {@link module:engine/view/view~View#event:render `View#render`} event is fired.\r\n\t *\r\n\t * This method throws a `applying-view-changes-on-rendering` error when\r\n\t * the change block is used after rendering to the DOM has started.\r\n\t *\r\n\t * @param {Function} callback Callback function which may modify the view.\r\n\t * @returns {*} Value returned by the callback.\r\n\t */\r\n\tchange( callback ) {\r\n\t\tif ( this.isRenderingInProgress || this._postFixersInProgress ) {\r\n\t\t\t/**\r\n\t\t\t * Thrown when there is an attempt to make changes to the view tree when it is in incorrect state. This may\r\n\t\t\t * cause some unexpected behaviour and inconsistency between the DOM and the view.\r\n\t\t\t * This may be caused by:\r\n\t\t\t *\r\n\t\t\t * * calling {@link #change} or {@link #forceRender} during rendering process,\r\n\t\t\t * * calling {@link #change} or {@link #forceRender} inside of\r\n\t\t\t *   {@link module:engine/view/document~Document#registerPostFixer post-fixer function}.\r\n\t\t\t *\r\n\t\t\t * @error cannot-change-view-tree\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'cannot-change-view-tree: ' +\r\n\t\t\t\t'Attempting to make changes to the view when it is in an incorrect state: rendering or post-fixers are in progress. ' +\r\n\t\t\t\t'This may cause some unexpected behavior and inconsistency between the DOM and the view.',\r\n\t\t\t\tthis\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\t// Recursive call to view.change() method - execute listener immediately.\r\n\t\t\tif ( this._ongoingChange ) {\r\n\t\t\t\treturn callback( this._writer );\r\n\t\t\t}\r\n\r\n\t\t\t// This lock will assure that all recursive calls to view.change() will end up in same block - one \"render\"\r\n\t\t\t// event for all nested calls.\r\n\t\t\tthis._ongoingChange = true;\r\n\t\t\tconst callbackResult = callback( this._writer );\r\n\t\t\tthis._ongoingChange = false;\r\n\r\n\t\t\t// This lock is used by editing controller to render changes from outer most model.change() once. As plugins might call\r\n\t\t\t// view.change() inside model.change() block - this will ensures that postfixers and rendering are called once after all\r\n\t\t\t// changes. Also, we don't need to render anything if there're no changes since last rendering.\r\n\t\t\tif ( !this._renderingDisabled && this._hasChangedSinceTheLastRendering ) {\r\n\t\t\t\tthis._postFixersInProgress = true;\r\n\t\t\t\tthis.document._callPostFixers( this._writer );\r\n\t\t\t\tthis._postFixersInProgress = false;\r\n\r\n\t\t\t\tthis.fire( 'render' );\r\n\t\t\t}\r\n\r\n\t\t\treturn callbackResult;\r\n\t\t} catch ( err ) {\r\n\t\t\t// @if CK_DEBUG // throw err;\r\n\t\t\t/* istanbul ignore next */\r\n\t\t\tCKEditorError.rethrowUnexpectedError( err, this );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Forces rendering {@link module:engine/view/document~Document view document} to DOM. If any view changes are\r\n\t * currently in progress, rendering will start after all {@link #change change blocks} are processed.\r\n\t *\r\n\t * Note that this method is dedicated for special cases. All view changes should be wrapped in the {@link #change}\r\n\t * block and the view will automatically check whether it needs to render DOM or not.\r\n\t *\r\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `applying-view-changes-on-rendering` when\r\n\t * trying to re-render when rendering to DOM has already started.\r\n\t */\r\n\tforceRender() {\r\n\t\tthis._hasChangedSinceTheLastRendering = true;\r\n\t\tthis.change( () => {} );\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys this instance. Makes sure that all observers are destroyed and listeners removed.\r\n\t */\r\n\tdestroy() {\r\n\t\tfor ( const observer of this._observers.values() ) {\r\n\t\t\tobserver.destroy();\r\n\t\t}\r\n\r\n\t\tthis.document.destroy();\r\n\r\n\t\tthis.stopListening();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates position at the given location. The location can be specified as:\r\n\t *\r\n\t * * a {@link module:engine/view/position~Position position},\r\n\t * * parent element and offset (offset defaults to `0`),\r\n\t * * parent element and `'end'` (sets position at the end of that element),\r\n\t * * {@link module:engine/view/item~Item view item} and `'before'` or `'after'` (sets position before or after given view item).\r\n\t *\r\n\t * This method is a shortcut to other constructors such as:\r\n\t *\r\n\t * * {@link #createPositionBefore},\r\n\t * * {@link #createPositionAfter},\r\n\t *\r\n\t * @param {module:engine/view/item~Item|module:engine/model/position~Position} itemOrPosition\r\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\r\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\r\n\t */\r\n\tcreatePositionAt( itemOrPosition, offset ) {\r\n\t\treturn Position._createAt( itemOrPosition, offset );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new position after given view item.\r\n\t *\r\n\t * @param {module:engine/view/item~Item} item View item after which the position should be located.\r\n\t * @returns {module:engine/view/position~Position}\r\n\t */\r\n\tcreatePositionAfter( item ) {\r\n\t\treturn Position._createAfter( item );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new position before given view item.\r\n\t *\r\n\t * @param {module:engine/view/item~Item} item View item before which the position should be located.\r\n\t * @returns {module:engine/view/position~Position}\r\n\t */\r\n\tcreatePositionBefore( item ) {\r\n\t\treturn Position._createBefore( item );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a range spanning from `start` position to `end` position.\r\n\t *\r\n\t * **Note:** This factory method creates it's own {@link module:engine/view/position~Position} instances basing on passed values.\r\n\t *\r\n\t * @param {module:engine/view/position~Position} start Start position.\r\n\t * @param {module:engine/view/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\r\n\t * @returns {module:engine/view/range~Range}\r\n\t */\r\n\tcreateRange( start, end ) {\r\n\t\treturn new Range( start, end );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a range that starts before given {@link module:engine/view/item~Item view item} and ends after it.\r\n\t *\r\n\t * @param {module:engine/view/item~Item} item\r\n\t * @returns {module:engine/view/range~Range}\r\n\t */\r\n\tcreateRangeOn( item ) {\r\n\t\treturn Range._createOn( item );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\r\n\t * that element and ends after the last child of that element.\r\n\t *\r\n\t * @param {module:engine/view/element~Element} element Element which is a parent for the range.\r\n\t * @returns {module:engine/view/range~Range}\r\n\t */\r\n\tcreateRangeIn( element ) {\r\n\t\treturn Range._createIn( element );\r\n\t}\r\n\r\n\t/**\r\n\t Creates new {@link module:engine/view/selection~Selection} instance.\r\n\t *\r\n\t * \t\t// Creates empty selection without ranges.\r\n\t *\t\tconst selection = view.createSelection();\r\n\t *\r\n\t *\t\t// Creates selection at the given range.\r\n\t *\t\tconst range = view.createRange( start, end );\r\n\t *\t\tconst selection = view.createSelection( range );\r\n\t *\r\n\t *\t\t// Creates selection at the given ranges\r\n\t * \t\tconst ranges = [ view.createRange( start1, end2 ), view.createRange( star2, end2 ) ];\r\n\t *\t\tconst selection = view.createSelection( ranges );\r\n\t *\r\n\t *\t\t// Creates selection from the other selection.\r\n\t *\t\tconst otherSelection = view.createSelection();\r\n\t *\t\tconst selection = view.createSelection( otherSelection );\r\n\t *\r\n\t *\t\t// Creates selection from the document selection.\r\n\t *\t\tconst selection = view.createSelection( editor.editing.view.document.selection );\r\n\t *\r\n\t * \t\t// Creates selection at the given position.\r\n\t *\t\tconst position = view.createPositionFromPath( root, path );\r\n\t *\t\tconst selection = view.createSelection( position );\r\n\t *\r\n\t *\t\t// Creates collapsed selection at the position of given item and offset.\r\n\t *\t\tconst paragraph = view.createContainerElement( 'paragraph' );\r\n\t *\t\tconst selection = view.createSelection( paragraph, offset );\r\n\t *\r\n\t *\t\t// Creates a range inside an {@link module:engine/view/element~Element element} which starts before the\r\n\t *\t\t// first child of that element and ends after the last child of that element.\r\n\t *\t\tconst selection = view.createSelection( paragraph, 'in' );\r\n\t *\r\n\t *\t\t// Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends\r\n\t *\t\t// just after the item.\r\n\t *\t\tconst selection = view.createSelection( paragraph, 'on' );\r\n\t *\r\n\t * `Selection`'s factory method allow passing additional options (`backward`, `fake` and `label`) as the last argument.\r\n\t *\r\n\t *\t\t// Creates backward selection.\r\n\t *\t\tconst selection = view.createSelection( range, { backward: true } );\r\n\t *\r\n\t * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\r\n\t * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\r\n\t * represented in other way, for example by applying proper CSS class.\r\n\t *\r\n\t * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\r\n\t * (and be  properly handled by screen readers).\r\n\t *\r\n\t *\t\t// Creates fake selection with label.\r\n\t *\t\tconst selection = view.createSelection( range, { fake: true, label: 'foo' } );\r\n\t *\r\n\t * @param {module:engine/view/selection~Selectable} [selectable=null]\r\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Offset or place when selectable is an `Item`.\r\n\t * @param {Object} [options]\r\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\r\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\r\n\t * @param {String} [options.label] Label for the fake selection.\r\n\t * @returns {module:engine/view/selection~Selection}\r\n\t */\r\n\tcreateSelection( selectable, placeOrOffset, options ) {\r\n\t\treturn new Selection( selectable, placeOrOffset, options );\r\n\t}\r\n\r\n\t/**\r\n\t * Disables or enables rendering. If the flag is set to `true` then the rendering will be disabled.\r\n\t * If the flag is set to `false` and if there was some change in the meantime, then the rendering action will be performed.\r\n\t *\r\n\t * @protected\r\n\t * @param {Boolean} flag A flag indicates whether the rendering should be disabled.\r\n\t */\r\n\t_disableRendering( flag ) {\r\n\t\tthis._renderingDisabled = flag;\r\n\r\n\t\tif ( flag == false ) {\r\n\t\t\t// Render when you stop blocking rendering.\r\n\t\t\tthis.change( () => {} );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Renders all changes. In order to avoid triggering the observers (e.g. mutations) all observers are disabled\r\n\t * before rendering and re-enabled after that.\r\n\t *\r\n\t * @private\r\n\t */\r\n\t_render() {\r\n\t\tthis.isRenderingInProgress = true;\r\n\t\tthis.disableObservers();\r\n\t\tthis._renderer.render();\r\n\t\tthis.enableObservers();\r\n\t\tthis.isRenderingInProgress = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Fired after a topmost {@link module:engine/view/view~View#change change block} and all\r\n\t * {@link module:engine/view/document~Document#registerPostFixer post-fixers} are executed.\r\n\t *\r\n\t * Actual rendering is performed as a first listener on 'normal' priority.\r\n\t *\r\n\t *\t\tview.on( 'render', () => {\r\n\t *\t\t\t// Rendering to the DOM is complete.\r\n\t *\t\t} );\r\n\t *\r\n\t * This event is useful when you want to update interface elements after the rendering, e.g. position of the\r\n\t * balloon panel. If you wants to change view structure use\r\n\t * {@link module:engine/view/document~Document#registerPostFixer post-fixers}.\r\n\t *\r\n\t * @event module:engine/view/view~View#event:render\r\n\t */\r\n}\r\n\r\nmix( View, ObservableMixin );\r\n","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./placeholder.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module enter/enter\r\n */\r\n\r\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\r\nimport EnterCommand from './entercommand';\r\nimport EnterObserver from './enterobserver';\r\n\r\n/**\r\n * This plugin handles the <kbd>Enter</kbd> key (hard line break) in the editor.\r\n *\r\n * See also the {@link module:enter/shiftenter~ShiftEnter} plugin.\r\n *\r\n * For more information about this feature see the {@glink api/enter package page}.\r\n *\r\n * @extends module:core/plugin~Plugin\r\n */\r\nexport default class Enter extends Plugin {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get pluginName() {\r\n\t\treturn 'Enter';\r\n\t}\r\n\r\n\tinit() {\r\n\t\tconst editor = this.editor;\r\n\t\tconst view = editor.editing.view;\r\n\t\tconst viewDocument = view.document;\r\n\r\n\t\tview.addObserver( EnterObserver );\r\n\r\n\t\teditor.commands.add( 'enter', new EnterCommand( editor ) );\r\n\r\n\t\tthis.listenTo( viewDocument, 'enter', ( evt, data ) => {\r\n\t\t\tdata.preventDefault();\r\n\r\n\t\t\t// The soft enter key is handled by the ShiftEnter plugin.\r\n\t\t\tif ( data.isSoft ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\teditor.execute( 'enter' );\r\n\t\t\tview.scrollToTheSelection();\r\n\t\t}, { priority: 'low' } );\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module enter/entercommand\r\n */\r\n\r\nimport Command from '@ckeditor/ckeditor5-core/src/command';\r\nimport { getCopyOnEnterAttributes } from './utils';\r\n\r\n/**\r\n * Enter command. It is used by the {@link module:enter/enter~Enter Enter feature} to handle the <kbd>Enter</kbd> key.\r\n *\r\n * @extends module:core/command~Command\r\n */\r\nexport default class EnterCommand extends Command {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\texecute() {\r\n\t\tconst model = this.editor.model;\r\n\t\tconst doc = model.document;\r\n\r\n\t\tmodel.change( writer => {\r\n\t\t\tenterBlock( this.editor.model, writer, doc.selection, model.schema );\r\n\t\t\tthis.fire( 'afterExecute', { writer } );\r\n\t\t} );\r\n\t}\r\n}\r\n\r\n// Creates a new block in the way that the <kbd>Enter</kbd> key is expected to work.\r\n//\r\n// @param {module:engine/model~Model} model\r\n// @param {module:engine/model/writer~Writer} writer\r\n// @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\r\n// Selection on which the action should be performed.\r\n// @param {module:engine/model/schema~Schema} schema\r\nfunction enterBlock( model, writer, selection, schema ) {\r\n\tconst isSelectionEmpty = selection.isCollapsed;\r\n\tconst range = selection.getFirstRange();\r\n\tconst startElement = range.start.parent;\r\n\tconst endElement = range.end.parent;\r\n\r\n\t// Don't touch the roots and other limit elements.\r\n\tif ( schema.isLimit( startElement ) || schema.isLimit( endElement ) ) {\r\n\t\t// Delete the selected content but only if inside a single limit element.\r\n\t\t// Abort, when crossing limit elements boundary (e.g. <limit1>x[x</limit1>donttouchme<limit2>y]y</limit2>).\r\n\t\t// This is an edge case and it's hard to tell what should actually happen because such a selection\r\n\t\t// is not entirely valid.\r\n\t\tif ( !isSelectionEmpty && startElement == endElement ) {\r\n\t\t\tmodel.deleteContent( selection );\r\n\t\t}\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\tif ( isSelectionEmpty ) {\r\n\t\tconst attributesToCopy = getCopyOnEnterAttributes( writer.model.schema, selection.getAttributes() );\r\n\t\tsplitBlock( writer, range.start );\r\n\t\twriter.setSelectionAttribute( attributesToCopy );\r\n\t} else {\r\n\t\tconst leaveUnmerged = !( range.start.isAtStart && range.end.isAtEnd );\r\n\t\tconst isContainedWithinOneElement = ( startElement == endElement );\r\n\r\n\t\tmodel.deleteContent( selection, { leaveUnmerged } );\r\n\r\n\t\tif ( leaveUnmerged ) {\r\n\t\t\t// Partially selected elements.\r\n\t\t\t//\r\n\t\t\t// <h>x[xx]x</h>\t\t-> <h>x^x</h>\t\t\t-> <h>x</h><h>^x</h>\r\n\t\t\tif ( isContainedWithinOneElement ) {\r\n\t\t\t\tsplitBlock( writer, selection.focus );\r\n\t\t\t}\r\n\t\t\t// Selection over multiple elements.\r\n\t\t\t//\r\n\t\t\t// <h>x[x</h><p>y]y<p>\t-> <h>x^</h><p>y</p>\t-> <h>x</h><p>^y</p>\r\n\t\t\telse {\r\n\t\t\t\twriter.setSelection( endElement, 0 );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction splitBlock( writer, splitPos ) {\r\n\twriter.split( splitPos );\r\n\twriter.setSelection( splitPos.parent.nextSibling, 0 );\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module enter/enterobserver\r\n */\r\n\r\nimport Observer from '@ckeditor/ckeditor5-engine/src/view/observer/observer';\r\nimport DomEventData from '@ckeditor/ckeditor5-engine/src/view/observer/domeventdata';\r\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\r\n\r\n/**\r\n * Enter observer introduces the {@link module:engine/view/document~Document#event:enter} event.\r\n *\r\n * @extends module:engine/view/observer/observer~Observer\r\n */\r\nexport default class EnterObserver extends Observer {\r\n\tconstructor( view ) {\r\n\t\tsuper( view );\r\n\r\n\t\tconst doc = this.document;\r\n\r\n\t\tdoc.on( 'keydown', ( evt, data ) => {\r\n\t\t\tif ( this.isEnabled && data.keyCode == keyCodes.enter ) {\r\n\t\t\t\t// Save the event object to check later if it was stopped or not.\r\n\t\t\t\tlet event;\r\n\t\t\t\tdoc.once( 'enter', evt => ( event = evt ), { priority: 'highest' } );\r\n\r\n\t\t\t\tdoc.fire( 'enter', new DomEventData( doc, data.domEvent, {\r\n\t\t\t\t\tisSoft: data.shiftKey\r\n\t\t\t\t} ) );\r\n\r\n\t\t\t\t// Stop `keydown` event if `enter` event was stopped.\r\n\t\t\t\t// https://github.com/ckeditor/ckeditor5/issues/753\r\n\t\t\t\tif ( event && event.stop.called ) {\r\n\t\t\t\t\tevt.stop();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tobserve() {}\r\n}\r\n\r\n/**\r\n * Event fired when the user presses the <kbd>Enter</kbd> key.\r\n *\r\n * Note: This event is fired by the {@link module:enter/enterobserver~EnterObserver observer}\r\n * (usually registered by the {@link module:enter/enter~Enter Enter feature} and\r\n * {@link module:enter/shiftenter~ShiftEnter ShiftEnter feature}).\r\n *\r\n * @event module:engine/view/document~Document#event:enter\r\n * @param {module:engine/view/observer/domeventdata~DomEventData} data\r\n * @param {Boolean} data.isSoft Whether it's a soft enter (<kbd>Shift</kbd>+<kbd>Enter</kbd>) or hard enter (<kbd>Enter</kbd>).\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module enter/shiftenter\r\n */\r\n\r\nimport ShiftEnterCommand from './shiftentercommand';\r\nimport EnterObserver from './enterobserver';\r\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\r\n\r\n/**\r\n * This plugin handles the <kbd>Shift</kbd>+<kbd>Enter</kbd> keystroke (soft line break) in the editor.\r\n *\r\n * See also the {@link module:enter/enter~Enter} plugin.\r\n *\r\n * For more information about this feature see the {@glink api/enter package page}.\r\n *\r\n * @extends module:core/plugin~Plugin\r\n */\r\nexport default class ShiftEnter extends Plugin {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get pluginName() {\r\n\t\treturn 'ShiftEnter';\r\n\t}\r\n\r\n\tinit() {\r\n\t\tconst editor = this.editor;\r\n\t\tconst schema = editor.model.schema;\r\n\t\tconst conversion = editor.conversion;\r\n\t\tconst view = editor.editing.view;\r\n\t\tconst viewDocument = view.document;\r\n\r\n\t\t// Configure the schema.\r\n\t\tschema.register( 'softBreak', {\r\n\t\t\tallowWhere: '$text',\r\n\t\t\tisInline: true\r\n\t\t} );\r\n\r\n\t\t// Configure converters.\r\n\t\tconversion.for( 'upcast' )\r\n\t\t\t.elementToElement( {\r\n\t\t\t\tmodel: 'softBreak',\r\n\t\t\t\tview: 'br'\r\n\t\t\t} );\r\n\r\n\t\tconversion.for( 'downcast' )\r\n\t\t\t.elementToElement( {\r\n\t\t\t\tmodel: 'softBreak',\r\n\t\t\t\tview: ( modelElement, viewWriter ) => viewWriter.createEmptyElement( 'br' )\r\n\t\t\t} );\r\n\r\n\t\tview.addObserver( EnterObserver );\r\n\r\n\t\teditor.commands.add( 'shiftEnter', new ShiftEnterCommand( editor ) );\r\n\r\n\t\tthis.listenTo( viewDocument, 'enter', ( evt, data ) => {\r\n\t\t\tdata.preventDefault();\r\n\r\n\t\t\t// The hard enter key is handled by the Enter plugin.\r\n\t\t\tif ( !data.isSoft ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\teditor.execute( 'shiftEnter' );\r\n\t\t\tview.scrollToTheSelection();\r\n\t\t}, { priority: 'low' } );\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module enter/shiftentercommand\r\n */\r\n\r\nimport Command from '@ckeditor/ckeditor5-core/src/command';\r\nimport { getCopyOnEnterAttributes } from './utils';\r\n\r\n/**\r\n * ShiftEnter command. It is used by the {@link module:enter/shiftenter~ShiftEnter ShiftEnter feature} to handle\r\n * the <kbd>Shift</kbd>+<kbd>Enter</kbd> keystroke.\r\n *\r\n * @extends module:core/command~Command\r\n */\r\nexport default class ShiftEnterCommand extends Command {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\texecute() {\r\n\t\tconst model = this.editor.model;\r\n\t\tconst doc = model.document;\r\n\r\n\t\tmodel.change( writer => {\r\n\t\t\tsoftBreakAction( model, writer, doc.selection );\r\n\t\t\tthis.fire( 'afterExecute', { writer } );\r\n\t\t} );\r\n\t}\r\n\r\n\trefresh() {\r\n\t\tconst model = this.editor.model;\r\n\t\tconst doc = model.document;\r\n\r\n\t\tthis.isEnabled = isEnabled( model.schema, doc.selection );\r\n\t}\r\n}\r\n\r\n// Checks whether the ShiftEnter command should be enabled in the specified selection.\r\n//\r\n// @param {module:engine/model/schema~Schema} schema\r\n// @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\r\nfunction isEnabled( schema, selection ) {\r\n\t// At this moment it is okay to support single range selections only.\r\n\t// But in the future we may need to change that.\r\n\tif ( selection.rangeCount > 1 ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tconst anchorPos = selection.anchor;\r\n\r\n\t// Check whether the break element can be inserted in the current selection anchor.\r\n\tif ( !anchorPos || !schema.checkChild( anchorPos, 'softBreak' ) ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tconst range = selection.getFirstRange();\r\n\tconst startElement = range.start.parent;\r\n\tconst endElement = range.end.parent;\r\n\r\n\t// Do not modify the content if selection is cross-limit elements.\r\n\tif ( ( isInsideLimitElement( startElement, schema ) || isInsideLimitElement( endElement, schema ) ) && startElement !== endElement ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn true;\r\n}\r\n\r\n// Creates a break in the way that the <kbd>Shift</kbd>+<kbd>Enter</kbd> keystroke is expected to work.\r\n//\r\n// @param {module:engine/model~Model} model\r\n// @param {module:engine/model/writer~Writer} writer\r\n// @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\r\n// Selection on which the action should be performed.\r\nfunction softBreakAction( model, writer, selection ) {\r\n\tconst isSelectionEmpty = selection.isCollapsed;\r\n\tconst range = selection.getFirstRange();\r\n\tconst startElement = range.start.parent;\r\n\tconst endElement = range.end.parent;\r\n\tconst isContainedWithinOneElement = ( startElement == endElement );\r\n\r\n\tif ( isSelectionEmpty ) {\r\n\t\tconst attributesToCopy = getCopyOnEnterAttributes( model.schema, selection.getAttributes() );\r\n\t\tinsertBreak( model, writer, range.end );\r\n\r\n\t\twriter.removeSelectionAttribute( selection.getAttributeKeys() );\r\n\t\twriter.setSelectionAttribute( attributesToCopy );\r\n\t} else {\r\n\t\tconst leaveUnmerged = !( range.start.isAtStart && range.end.isAtEnd );\r\n\t\tmodel.deleteContent( selection, { leaveUnmerged } );\r\n\r\n\t\t// Selection within one element:\r\n\t\t//\r\n\t\t// <h>x[xx]x</h>\t\t-> <h>x^x</h>\t\t\t-> <h>x<br>^x</h>\r\n\t\tif ( isContainedWithinOneElement ) {\r\n\t\t\tinsertBreak( model, writer, selection.focus );\r\n\t\t}\r\n\t\t// Selection over multiple elements.\r\n\t\t//\r\n\t\t// <h>x[x</h><p>y]y<p>\t-> <h>x^</h><p>y</p>\t-> <h>x</h><p>^y</p>\r\n\t\t//\r\n\t\t// We chose not to insert a line break in this case because:\r\n\t\t//\r\n\t\t// * it's not a very common scenario,\r\n\t\t// * it actually surprised me when I saw the \"expected behavior\" in real life.\r\n\t\t//\r\n\t\t// It's ok if the user will need to be more specific where they want the <br> to be inserted.\r\n\t\telse {\r\n\t\t\t// Move the selection to the 2nd element (last step of the example above).\r\n\t\t\tif ( leaveUnmerged ) {\r\n\t\t\t\twriter.setSelection( endElement, 0 );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction insertBreak( model, writer, position ) {\r\n\tconst breakLineElement = writer.createElement( 'softBreak' );\r\n\r\n\tmodel.insertContent( breakLineElement, position );\r\n\twriter.setSelection( breakLineElement, 'after' );\r\n}\r\n\r\n// Checks whether the specified `element` is a child of the limit element.\r\n//\r\n// Checking whether the `<p>` element is inside a limit element:\r\n//   - <$root><p>Text.</p></$root> => false\r\n//   - <$root><limitElement><p>Text</p></limitElement></$root> => true\r\n//\r\n// @param {module:engine/model/element~Element} element\r\n// @param {module:engine/schema~Schema} schema\r\n// @returns {Boolean}\r\nfunction isInsideLimitElement( element, schema ) {\r\n\t// `$root` is a limit element but in this case is an invalid element.\r\n\tif ( element.is( 'rootElement' ) ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn schema.isLimit( element ) || isInsideLimitElement( element.parent, schema );\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module enter/utils\r\n */\r\n\r\n/**\r\n * Returns attributes that should be preserved on the enter key.\r\n *\r\n * Filtering is realized based on `copyOnEnter` attribute property. Read more about attribute properties\r\n * {@link module:engine/model/schema~Schema#setAttributeProperties here}.\r\n *\r\n * @param {module:engine/model/schema~Schema} schema\r\n * @param {Iterable.<*>} allAttributes attributes to filter.\r\n * @returns {Iterable.<*>}\r\n */\r\nexport function* getCopyOnEnterAttributes( schema, allAttributes ) {\r\n\tfor ( const attribute of allAttributes ) {\r\n\t\tif ( attribute && schema.getAttributeProperties( attribute[ 0 ] ).copyOnEnter ) {\r\n\t\t\tyield attribute;\r\n\t\t}\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module essentials/essentials\r\n */\r\n\r\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\r\n\r\nimport Clipboard from '@ckeditor/ckeditor5-clipboard/src/clipboard';\r\nimport Enter from '@ckeditor/ckeditor5-enter/src/enter';\r\nimport ShiftEnter from '@ckeditor/ckeditor5-enter/src/shiftenter';\r\nimport Typing from '@ckeditor/ckeditor5-typing/src/typing';\r\nimport Undo from '@ckeditor/ckeditor5-undo/src/undo';\r\n\r\n/**\r\n * A plugin including all essential editing features. It represents a set of features that enables similar functionalities\r\n * to a `<textarea>` element.\r\n *\r\n * It includes:\r\n *\r\n * * {@link module:clipboard/clipboard~Clipboard},\r\n * * {@link module:enter/enter~Enter},\r\n * * {@link module:enter/shiftenter~ShiftEnter},\r\n * * {@link module:typing/typing~Typing},\r\n * * {@link module:undo/undo~Undo}.\r\n *\r\n * This plugin set does not define any block-level containers (such as {@link module:paragraph/paragraph~Paragraph}).\r\n * If your editor is supposed to handle block content, make sure to include it.\r\n *\r\n * @extends module:core/plugin~Plugin\r\n */\r\nexport default class Essentials extends Plugin {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get requires() {\r\n\t\treturn [ Clipboard, Enter, ShiftEnter, Typing, Undo ];\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get pluginName() {\r\n\t\treturn 'Essentials';\r\n\t}\r\n}\r\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/documentcolorcollection\n */\n\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * A collection to store document colors. It enforces colors to be unique.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n * @extends module:utils/collection~Collection\n */\nexport default class DocumentColorCollection extends Collection {\n\tconstructor( options ) {\n\t\tsuper( options );\n\n\t\t/**\n\t\t * Indicates whether the document color collection is empty.\n\t\t *\n\t\t * @observable\n\t\t * @readonly\n\t\t * @member {Boolean} #isEmpty\n\t\t */\n\t\tthis.set( 'isEmpty', true );\n\t}\n\n\t/**\n\t * Adds a color to the document color collection.\n\t *\n\t * This method ensures that no color duplicates are inserted (compared using\n\t * the color value of the {@link module:ui/colorgrid/colorgrid~ColorDefinition}).\n\t *\n\t * If the item does not have an ID, it will be automatically generated and set on the item.\n\t *\n\t * @chainable\n\t * @param {module:ui/colorgrid/colorgrid~ColorDefinition} item\n\t * @param {Number} [index] The position of the item in the collection. The item\n\t * is pushed to the collection when `index` is not specified.\n\t * @fires add\n\t */\n\tadd( item, index ) {\n\t\tif ( this.find( element => element.color === item.color ) ) {\n\t\t\t// No duplicates are allowed.\n\t\t\treturn;\n\t\t}\n\n\t\tsuper.add( item, index );\n\n\t\tthis.set( 'isEmpty', false );\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tremove( subject ) {\n\t\tconst ret = super.remove( subject );\n\n\t\tif ( this.length === 0 ) {\n\t\t\tthis.set( 'isEmpty', true );\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\t/**\n\t * Checks if an object with given colors is present in the document color collection.\n\t *\n\t * @param {String} color\n\t * @returns {Boolean}\n\t */\n\thasColor( color ) {\n\t\treturn !!this.find( item => item.color === color );\n\t}\n}\n\nmix( DocumentColorCollection, ObservableMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/fontbackgroundcolor\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport FontBackgroundColorEditing from './fontbackgroundcolor/fontbackgroundcolorediting';\nimport FontBackgroundColorUI from './fontbackgroundcolor/fontbackgroundcolorui';\n\n/**\n * The font background color plugin.\n *\n * For a detailed overview, check the {@glink features/font font feature} documentation\n * and the {@glink api/font package page}.\n *\n * This is a \"glue\" plugin which loads\n * the {@link module:font/fontbackgroundcolor/fontbackgroundcolorediting~FontBackgroundColorEditing} and\n * {@link module:font/fontbackgroundcolor/fontbackgroundcolorui~FontBackgroundColorUI} features in the editor.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class FontBackgroundColor extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ FontBackgroundColorEditing, FontBackgroundColorUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'FontBackgroundColor';\n\t}\n}\n\n/**\n * The configuration of the font background color feature.\n * It is introduced by the {@link module:font/fontbackgroundcolor/fontbackgroundcolorediting~FontBackgroundColorEditing} feature.\n *\n * Read more in {@link module:font/fontbackgroundcolor~FontBackgroundColorConfig}.\n *\n * @member {module:font/fontbackgroundcolor~FontBackgroundColorConfig} module:core/editor/editorconfig~EditorConfig#fontBackgroundColor\n */\n\n/**\n * The configuration of the font background color feature.\n * This option is used by the {@link module:font/fontbackgroundcolor/fontbackgroundcolorediting~FontBackgroundColorEditing} feature.\n *\n *\t\tClassicEditor\n *\t\t\t.create( {\n *\t\t\t\tfontBackgroundColor: ... // Font background color feature configuration.\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n *\n * @interface module:font/fontbackgroundcolor~FontBackgroundColorConfig\n */\n\n/**\n * Available font background colors defined as an array of strings or objects.\n *\n * The default value registers the following colors:\n *\n *\t\tconst fontBackgroundColorConfig = {\n *\t\t\tcolors: [\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(0, 0%, 0%)',\n *\t\t\t\t\tlabel: 'Black'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(0, 0%, 30%)',\n *\t\t\t\t\tlabel: 'Dim grey'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(0, 0%, 60%)',\n *\t\t\t\t\tlabel: 'Grey'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(0, 0%, 90%)',\n *\t\t\t\t\tlabel: 'Light grey'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(0, 0%, 100%)',\n *\t\t\t\t\tlabel: 'White',\n *\t\t\t\t\thasBorder: true\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(0, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Red'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(30, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Orange'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(60, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Yellow'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(90, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Light green'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(120, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Green'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(150, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Aquamarine'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(180, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Turquoise'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(210, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Light blue'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(240, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Blue'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(270, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Purple'\n *\t\t\t\t}\n *\t\t\t]\n *\t\t};\n *\n * **Note**: The colors are displayed in the `'fontBackgroundColor'` dropdown.\n *\n * @member {Array.<String|Object>} module:font/fontbackgroundcolor~FontBackgroundColorConfig#colors\n */\n\n/**\n * Represents the number of columns in the font background color dropdown.\n *\n * The default value is:\n *\n *\t\tconst fontBackgroundColorConfig = {\n *\t\t\tcolumns: 5\n *\t\t}\n *\n * @member {Number} module:font/fontbackgroundcolor~FontBackgroundColorConfig#columns\n */\n\n/**\n * Determines the maximum number of available document colors.\n * Setting it to `0` will disable the document colors feature.\n *\n * By default it equals to the {@link module:font/fontbackgroundcolor~FontBackgroundColorConfig#columns} value.\n *\n * Examples:\n *\n * \t// 1) Neither document colors nor columns are defined in the configuration.\n * \t// Document colors will equal 5,\n * \t// because the value will be inherited from columns,\n * \t// which has a predefined value of 5.\n * \tconst fontBackgroundColorConfig = {}\n *\n * \t// 2) Document colors will equal 8, because the value will be inherited from columns.\n * \tconst fontBackgroundColorConfig = {\n * \t\tcolumns: 8\n * \t}\n *\n * \t// 3) Document colors will equal 24, because it has its own value defined.\n * \tconst fontBackgroundColorConfig = {\n * \t\tcolumns: 8,\n * \t\tdocumentColors: 24\n * \t}\n *\n * \t// 4) The document colors feature will be disabled.\n * \tconst fontBackgroundColorConfig = {\n * \t\tcolumns: 8,\n * \t\tdocumentColors: 0\n * \t}\n *\n * @member {Number} module:font/fontbackgroundcolor~FontBackgroundColorConfig#documentColors\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/fontbackgroundcolor/fontbackgroundcolorcommand\n */\n\nimport FontCommand from '../fontcommand';\nimport { FONT_BACKGROUND_COLOR } from '../utils';\n\n/**\n * The font background color command. It is used by\n * {@link module:font/fontbackgroundcolor/fontbackgroundcolorediting~FontBackgroundColorEditing}\n * to apply the font background color.\n *\n *\t\teditor.execute( 'fontBackgroundColor', { value: 'rgb(250, 20, 20)' } );\n *\n * **Note**: Executing the command with the `null` value removes the attribute from the model.\n *\n * @extends module:font/fontcommand~FontCommand\n */\nexport default class FontBackgroundColorCommand extends FontCommand {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor, FONT_BACKGROUND_COLOR );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/fontbackgroundcolor/fontbackgroundcolorediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport FontBackgroundColorCommand from './fontbackgroundcolorcommand';\nimport { FONT_BACKGROUND_COLOR, renderDowncastElement, renderUpcastAttribute } from '../utils';\n\n/**\n * The font background color editing feature.\n *\n * It introduces the {@link module:font/fontbackgroundcolor/fontbackgroundcolorcommand~FontBackgroundColorCommand command} and\n * the `fontBackgroundColor` attribute in the {@link module:engine/model/model~Model model} which renders\n * in the {@link module:engine/view/view view} as a `<span>` element (`<span style=\"background-color: ...\">`),\n * depending on the {@link module:font/fontbackgroundcolor~FontBackgroundColorConfig configuration}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class FontBackgroundColorEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'FontBackgroundColorEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\teditor.config.define( FONT_BACKGROUND_COLOR, {\n\t\t\tcolors: [\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(0, 0%, 0%)',\n\t\t\t\t\tlabel: 'Black'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(0, 0%, 30%)',\n\t\t\t\t\tlabel: 'Dim grey'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(0, 0%, 60%)',\n\t\t\t\t\tlabel: 'Grey'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(0, 0%, 90%)',\n\t\t\t\t\tlabel: 'Light grey'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(0, 0%, 100%)',\n\t\t\t\t\tlabel: 'White',\n\t\t\t\t\thasBorder: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(0, 75%, 60%)',\n\t\t\t\t\tlabel: 'Red'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(30, 75%, 60%)',\n\t\t\t\t\tlabel: 'Orange'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(60, 75%, 60%)',\n\t\t\t\t\tlabel: 'Yellow'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(90, 75%, 60%)',\n\t\t\t\t\tlabel: 'Light green'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(120, 75%, 60%)',\n\t\t\t\t\tlabel: 'Green'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(150, 75%, 60%)',\n\t\t\t\t\tlabel: 'Aquamarine'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(180, 75%, 60%)',\n\t\t\t\t\tlabel: 'Turquoise'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(210, 75%, 60%)',\n\t\t\t\t\tlabel: 'Light blue'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(240, 75%, 60%)',\n\t\t\t\t\tlabel: 'Blue'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(270, 75%, 60%)',\n\t\t\t\t\tlabel: 'Purple'\n\t\t\t\t}\n\t\t\t],\n\t\t\tcolumns: 5\n\t\t} );\n\n\t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\n\t\t\tview: {\n\t\t\t\tname: 'span',\n\t\t\t\tstyles: {\n\t\t\t\t\t'background-color': /[\\s\\S]+/\n\t\t\t\t}\n\t\t\t},\n\t\t\tmodel: {\n\t\t\t\tkey: FONT_BACKGROUND_COLOR,\n\t\t\t\tvalue: renderUpcastAttribute( 'background-color' )\n\t\t\t}\n\t\t} );\n\n\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n\t\t\tmodel: FONT_BACKGROUND_COLOR,\n\t\t\tview: renderDowncastElement( 'background-color' )\n\t\t} );\n\n\t\teditor.commands.add( FONT_BACKGROUND_COLOR, new FontBackgroundColorCommand( editor ) );\n\n\t\t// Allow the font backgroundColor attribute on text nodes.\n\t\teditor.model.schema.extend( '$text', { allowAttributes: FONT_BACKGROUND_COLOR } );\n\n\t\teditor.model.schema.setAttributeProperties( FONT_BACKGROUND_COLOR, {\n\t\t\tisFormatting: true,\n\t\t\tcopyOnEnter: true\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module font/fontbackgroundcolor/fontbackgroundcolorui\n */\nimport ColorUI from '../ui/colorui';\nimport { FONT_BACKGROUND_COLOR } from '../utils';\nimport fontBackgroundColorIcon from '../../theme/icons/font-background.svg';\n/**\n * The font background color UI plugin. It introduces the `'fontBackgroundColor'` dropdown.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class FontBackgroundColorUI extends ColorUI {\n    /**\n\t * @inheritDoc\n\t */\n    constructor(editor) {\n        const t = editor.locale.t;\n        super(editor, {\n            commandName: FONT_BACKGROUND_COLOR,\n            componentName: FONT_BACKGROUND_COLOR,\n            icon: fontBackgroundColorIcon,\n            dropdownLabel: t('f')\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */\n    static get pluginName() {\n        return 'FontBackgroundColorUI';\n    }\n}","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/fontcolor\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport FontColorEditing from './fontcolor/fontcolorediting';\nimport FontColorUI from './fontcolor/fontcolorui';\n\n/**\n * The font color plugin.\n *\n * For a detailed overview, check the {@glink features/font font feature} documentation\n * and the {@glink api/font package page}.\n *\n * This is a \"glue\" plugin which loads the {@link module:font/fontcolor/fontcolorediting~FontColorEditing} and\n * {@link module:font/fontcolor/fontcolorui~FontColorUI} features in the editor.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class FontColor extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ FontColorEditing, FontColorUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'FontColor';\n\t}\n}\n\n/**\n * The configuration of the font color feature.\n * It is introduced by the {@link module:font/fontcolor/fontcolorediting~FontColorEditing} feature.\n *\n * Read more in {@link module:font/fontcolor~FontColorConfig}.\n *\n * @member {module:font/fontcolor~FontColorConfig} module:core/editor/editorconfig~EditorConfig#fontColor\n */\n\n/**\n * The configuration of the font color feature.\n * This option is used by the {@link module:font/fontcolor/fontcolorediting~FontColorEditing} feature.\n *\n *\t\tClassicEditor\n *\t\t\t.create( {\n *\t\t\t\tfontColor: ... // Font color feature configuration.\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n *\n * @interface module:font/fontcolor~FontColorConfig\n */\n\n/**\n * Available font colors defined as an array of strings or objects.\n *\n * The default value registers the following colors:\n *\n *\t\tconst fontColorConfig = {\n *\t\t\tcolors: [\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(0, 0%, 0%)',\n *\t\t\t\t\tlabel: 'Black'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(0, 0%, 30%)',\n *\t\t\t\t\tlabel: 'Dim grey'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(0, 0%, 60%)',\n *\t\t\t\t\tlabel: 'Grey'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(0, 0%, 90%)',\n *\t\t\t\t\tlabel: 'Light grey'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(0, 0%, 100%)',\n *\t\t\t\t\tlabel: 'White',\n *\t\t\t\t\thasBorder: true\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(0, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Red'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(30, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Orange'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(60, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Yellow'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(90, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Light green'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(120, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Green'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(150, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Aquamarine'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(180, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Turquoise'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(210, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Light blue'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(240, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Blue'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(270, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Purple'\n *\t\t\t\t}\n *\t\t\t]\n *\t\t};\n *\n * **Note**: The colors are displayed in the `'fontColor'` dropdown.\n *\n * @member {Array.<String|Object>} module:font/fontcolor~FontColorConfig#colors\n */\n\n/**\n * Represents the number of columns in the font color dropdown.\n *\n * The default value is:\n *\n *\t\tconst fontColorConfig = {\n *\t\t\tcolumns: 5\n *\t\t}\n *\n * @member {Number} module:font/fontcolor~FontColorConfig#columns\n */\n\n/**\n * Determines the maximum number of available document colors.\n * Setting it to `0` will disable the document colors feature.\n *\n * By default it equals to the {@link module:font/fontcolor~FontColorConfig#columns} value.\n *\n * Examples:\n *\n * \t// 1) Neither document colors nor columns are defined in the configuration.\n * \t// Document colors will equal 5,\n * \t// because the value will be inherited from columns,\n * \t// which has a predefined value of 5.\n * \tconst fontColorConfig = {}\n *\n * \t// 2) Document colors will equal 8, because the value will be inherited from columns.\n * \tconst fontColorConfig = {\n * \t\tcolumns: 8\n * \t}\n *\n * \t// 3) Document colors will equal 24, because it has its own value defined.\n * \tconst fontColorConfig = {\n * \t\tcolumns: 8,\n * \t\tdocumentColors: 24\n * \t}\n *\n * \t// 4) The document colors feature will be disabled.\n * \tconst fontColorConfig = {\n * \t\tcolumns: 8,\n * \t\tdocumentColors: 0\n * \t}\n *\n * @member {Number} module:font/fontcolor~FontColorConfig#documentColors\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/fontcolor/fontcolorcommand\n */\n\nimport FontCommand from '../fontcommand';\nimport { FONT_COLOR } from '../utils';\n\n/**\n * The font color command. It is used by {@link module:font/fontcolor/fontcolorediting~FontColorEditing}\n * to apply the font color.\n *\n *\t\teditor.execute( 'fontColor', { value: 'rgb(250, 20, 20)' } );\n *\n * **Note**: Executing the command with the `null` value removes the attribute from the model.\n *\n * @extends module:font/fontcommand~FontCommand\n */\nexport default class FontColorCommand extends FontCommand {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor, FONT_COLOR );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/fontcolor/fontcolorediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport FontColorCommand from './fontcolorcommand';\nimport { FONT_COLOR, renderDowncastElement, renderUpcastAttribute } from '../utils';\n\n/**\n * The font color editing feature.\n *\n * It introduces the {@link module:font/fontcolor/fontcolorcommand~FontColorCommand command} and\n * the `fontColor` attribute in the {@link module:engine/model/model~Model model} which renders\n * in the {@link module:engine/view/view view} as a `<span>` element (`<span style=\"color: ...\">`),\n * depending on the {@link module:font/fontcolor~FontColorConfig configuration}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class FontColorEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'FontColorEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\teditor.config.define( FONT_COLOR, {\n\t\t\tcolors: [\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(0, 0%, 0%)',\n\t\t\t\t\tlabel: 'Black'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(0, 0%, 30%)',\n\t\t\t\t\tlabel: 'Dim grey'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(0, 0%, 60%)',\n\t\t\t\t\tlabel: 'Grey'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(0, 0%, 90%)',\n\t\t\t\t\tlabel: 'Light grey'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(0, 0%, 100%)',\n\t\t\t\t\tlabel: 'White',\n\t\t\t\t\thasBorder: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(0, 75%, 60%)',\n\t\t\t\t\tlabel: 'Red'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(30, 75%, 60%)',\n\t\t\t\t\tlabel: 'Orange'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(60, 75%, 60%)',\n\t\t\t\t\tlabel: 'Yellow'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(90, 75%, 60%)',\n\t\t\t\t\tlabel: 'Light green'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(120, 75%, 60%)',\n\t\t\t\t\tlabel: 'Green'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(150, 75%, 60%)',\n\t\t\t\t\tlabel: 'Aquamarine'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(180, 75%, 60%)',\n\t\t\t\t\tlabel: 'Turquoise'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(210, 75%, 60%)',\n\t\t\t\t\tlabel: 'Light blue'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(240, 75%, 60%)',\n\t\t\t\t\tlabel: 'Blue'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(270, 75%, 60%)',\n\t\t\t\t\tlabel: 'Purple'\n\t\t\t\t}\n\t\t\t],\n\t\t\tcolumns: 5\n\t\t} );\n\n\t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\n\t\t\tview: {\n\t\t\t\tname: 'span',\n\t\t\t\tstyles: {\n\t\t\t\t\t'color': /[\\s\\S]+/\n\t\t\t\t}\n\t\t\t},\n\t\t\tmodel: {\n\t\t\t\tkey: FONT_COLOR,\n\t\t\t\tvalue: renderUpcastAttribute( 'color' )\n\t\t\t}\n\t\t} );\n\n\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n\t\t\tmodel: FONT_COLOR,\n\t\t\tview: renderDowncastElement( 'color' )\n\t\t} );\n\n\t\teditor.commands.add( FONT_COLOR, new FontColorCommand( editor ) );\n\n\t\t// Allow the font color attribute on text nodes.\n\t\teditor.model.schema.extend( '$text', { allowAttributes: FONT_COLOR } );\n\n\t\teditor.model.schema.setAttributeProperties( FONT_COLOR, {\n\t\t\tisFormatting: true,\n\t\t\tcopyOnEnter: true\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module font/fontcolor/fontcolorui\n */\nimport ColorUI from '../ui/colorui';\nimport { FONT_COLOR } from '../utils';\nimport fontColorIcon from '../../theme/icons/font-color.svg';\n/**\n * The font color UI plugin. It introduces the `'fontColor'` dropdown.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class FontColorUI extends ColorUI {\n    /**\n\t * @inheritDoc\n\t */\n    constructor(editor) {\n        const t = editor.locale.t;\n        super(editor, {\n            commandName: FONT_COLOR,\n            componentName: FONT_COLOR,\n            icon: fontColorIcon,\n            dropdownLabel: t('e')\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */\n    static get pluginName() {\n        return 'FontColorUI';\n    }\n}","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/fontcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\n\n/**\n * The base font command.\n *\n * @extends module:core/command~Command\n */\nexport default class FontCommand extends Command {\n\t/**\n\t * Creates an instance of the command.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor Editor instance.\n\t * @param {String} attributeKey The name of a model attribute on which this command operates.\n\t */\n\tconstructor( editor, attributeKey ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * When set, it reflects the {@link #attributeKey} value of the selection.\n\t\t *\n\t\t * @observable\n\t\t * @readonly\n\t\t * @member {String} module:font/fontcommand~FontCommand#value\n\t\t */\n\n\t\t/**\n\t\t * A model attribute on which this command operates.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} module:font/fontcommand~FontCommand#attributeKey\n\t\t */\n\t\tthis.attributeKey = attributeKey;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\n\t\tthis.value = doc.selection.getAttribute( this.attributeKey );\n\t\tthis.isEnabled = model.schema.checkAttributeInSelection( doc.selection, this.attributeKey );\n\t}\n\n\t/**\n\t * Executes the command. Applies the `value` of the {@link #attributeKey} to the selection.\n\t * If no `value` is passed, it removes the attribute from the selection.\n\t *\n\t * @protected\n\t * @param {Object} [options] Options for the executed command.\n\t * @param {String} [options.value] The value to apply.\n\t * @fires execute\n\t */\n\texecute( options = {} ) {\n\t\tconst model = this.editor.model;\n\t\tconst document = model.document;\n\t\tconst selection = document.selection;\n\n\t\tconst value = options.value;\n\n\t\tmodel.change( writer => {\n\t\t\tif ( selection.isCollapsed ) {\n\t\t\t\tif ( value ) {\n\t\t\t\t\twriter.setSelectionAttribute( this.attributeKey, value );\n\t\t\t\t} else {\n\t\t\t\t\twriter.removeSelectionAttribute( this.attributeKey );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst ranges = model.schema.getValidRanges( selection.getRanges(), this.attributeKey );\n\n\t\t\t\tfor ( const range of ranges ) {\n\t\t\t\t\tif ( value ) {\n\t\t\t\t\t\twriter.setAttribute( this.attributeKey, value, range );\n\t\t\t\t\t} else {\n\t\t\t\t\t\twriter.removeAttribute( this.attributeKey, range );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/ui/colortableview\n */\n\nimport View from '@ckeditor/ckeditor5-ui/src/view';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport ColorTileView from '@ckeditor/ckeditor5-ui/src/colorgrid/colortileview';\nimport ColorGridView from '@ckeditor/ckeditor5-ui/src/colorgrid/colorgridview';\nimport LabelView from '@ckeditor/ckeditor5-ui/src/label/labelview';\nimport DocumentColorCollection from '../documentcolorcollection';\nimport Template from '@ckeditor/ckeditor5-ui/src/template';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport FocusCycler from '@ckeditor/ckeditor5-ui/src/focuscycler';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\nimport removeButtonIcon from '@ckeditor/ckeditor5-core/theme/icons/eraser.svg';\nimport '../../theme/fontcolor.css';\n\n/**\n * A class which represents a view with the following sub–components:\n *\n * * A remove color button,\n * * A static {@link module:ui/colorgrid/colorgrid~ColorGridView} of colors defined in the configuration,\n * * A dynamic {@link module:ui/colorgrid/colorgrid~ColorGridView} of colors used in the document.\n *\n * @extends module:ui/view~View\n */\nexport default class ColorTableView extends View {\n\t/**\n\t * Creates a view to be inserted as a child of {@link module:ui/dropdown/dropdownview~DropdownView}.\n\t *\n\t * @param {module:utils/locale~Locale} [locale] The localization services instance.\n\t * @param {Object} config The configuration object.\n\t * @param {Array.<module:ui/colorgrid/colorgrid~ColorDefinition>} config.colors An array with definitions of colors to\n\t * be displayed in the table.\n\t * @param {Number} config.columns The number of columns in the color grid.\n\t * @param {String} config.removeButtonLabel The label of the button responsible for removing the color.\n\t * @param {String} config.documentColorsLabel The label for the section with the document colors.\n\t * @param {String} config.documentColorsCount The number of colors in the document colors section inside the color dropdown.\n\t */\n\tconstructor( locale, { colors, columns, removeButtonLabel, documentColorsLabel, documentColorsCount } ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * A collection of the children of the table.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.items = this.createCollection();\n\n\t\t/**\n\t\t * An array with objects representing colors to be displayed in the grid.\n\t\t *\n\t\t * @type {Arrray.<module:ui/colorgrid/colorgrid~ColorDefinition>}\n\t\t */\n\t\tthis.colorDefinitions = colors;\n\n\t\t/**\n\t\t * Tracks information about the DOM focus in the list.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\t/**\n\t\t * Keeps the value of the command associated with the table for the current selection.\n\t\t *\n\t\t * @type {String}\n\t\t */\n\t\tthis.set( 'selectedColor' );\n\n\t\t/**\n\t\t * The label of the button responsible for removing color attributes.\n\t\t *\n\t\t * @type {String}\n\t\t */\n\t\tthis.removeButtonLabel = removeButtonLabel;\n\n\t\t/**\n\t\t * The number of columns in the color grid.\n\t\t *\n\t\t * @type {Number}\n\t\t */\n\t\tthis.columns = columns;\n\n\t\t/**\n\t\t * A collection of definitions that store the document colors.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:font/documentcolorcollection~DocumentColorCollection}\n\t\t */\n\t\tthis.documentColors = new DocumentColorCollection();\n\n\t\t/**\n\t\t * The maximum number of colors in the document colors section.\n\t\t * If it equals 0, the document colors section is not added.\n\t\t *\n\t\t * @readonly\n\t\t * @type {Number}\n\t\t */\n\t\tthis.documentColorsCount = documentColorsCount;\n\n\t\t/**\n\t\t * Preserves the reference to {@link module:ui/colorgrid/colorgrid~ColorGridView} used to create\n\t\t * the default (static) color set.\n\t\t *\n\t\t * The property is loaded once the the parent dropdown is opened the first time.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/colorgrid/colorgrid~ColorGridView|undefined} #staticColorsGrid\n\t\t */\n\n\t\t/**\n\t\t * Preserves the reference to {@link module:ui/colorgrid/colorgrid~ColorGridView} used to create\n\t\t * the document colors. It remains undefined if the document colors feature is disabled.\n\t\t *\n\t\t * The property is loaded once the the parent dropdown is opened the first time.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/colorgrid/colorgrid~ColorGridView|undefined} #documentColorsGrid\n\t\t */\n\n\t\t/**\n\t\t * Helps cycling over focusable {@link #items} in the list.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/focuscycler~FocusCycler}\n\t\t */\n\t\tthis._focusCycler = new FocusCycler( {\n\t\t\tfocusables: this.items,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tactions: {\n\t\t\t\t// Navigate list items backwards using the Arrow Up key.\n\t\t\t\tfocusPrevious: 'arrowup',\n\n\t\t\t\t// Navigate list items forwards using the Arrow Down key.\n\t\t\t\tfocusNext: 'arrowdown'\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * Document color section's label.\n\t\t *\n\t\t * @private\n\t\t * @readonly\n\t\t * @type {String}\n\t\t */\n\t\tthis._documentColorsLabel = documentColorsLabel;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-color-table'\n\t\t\t\t]\n\t\t\t},\n\t\t\tchildren: this.items\n\t\t} );\n\n\t\tthis.items.add( this._removeColorButton() );\n\t}\n\n\t/**\n\t * Scans through the editor model and searches for text node attributes with the given attribute name.\n\t * Found entries are set as document colors.\n\t *\n\t * All the previously stored document colors will be lost in the process.\n\t *\n\t * @param {module:engine/model/model~Model} model The model used as a source to obtain the document colors.\n\t * @param {String} attributeName Determines the name of the related model's attribute for a given dropdown.\n\t */\n\tupdateDocumentColors( model, attributeName ) {\n\t\tconst document = model.document;\n\t\tconst maxCount = this.documentColorsCount;\n\n\t\tthis.documentColors.clear();\n\n\t\tfor ( const rootName of document.getRootNames() ) {\n\t\t\tconst root = document.getRoot( rootName );\n\t\t\tconst range = model.createRangeIn( root );\n\n\t\t\tfor ( const node of range.getItems() ) {\n\t\t\t\tif ( node.is( 'textProxy' ) && node.hasAttribute( attributeName ) ) {\n\t\t\t\t\tthis._addColorToDocumentColors( node.getAttribute( attributeName ) );\n\n\t\t\t\t\tif ( this.documentColors.length >= maxCount ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Refreshes the state of the selected color in one or both {@link module:ui/colorgrid/colorgrid~ColorGridView}s\n\t * available in the {@link module:font/ui/colortableview~ColorTableView}. It guarantees that the selection will occur only in one\n\t * of them.\n\t */\n\tupdateSelectedColors() {\n\t\tconst documentColorsGrid = this.documentColorsGrid;\n\t\tconst staticColorsGrid = this.staticColorsGrid;\n\t\tconst selectedColor = this.selectedColor;\n\n\t\tstaticColorsGrid.selectedColor = selectedColor;\n\n\t\tif ( documentColorsGrid ) {\n\t\t\tdocumentColorsGrid.selectedColor = selectedColor;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\t// Items added before rendering should be known to the #focusTracker.\n\t\tfor ( const item of this.items ) {\n\t\t\tthis.focusTracker.add( item.element );\n\t\t}\n\n\t\t// Start listening for the keystrokes coming from #element.\n\t\tthis.keystrokes.listenTo( this.element );\n\t}\n\n\t/**\n\t * Appends {@link #staticColorsGrid} and {@link #documentColorsGrid} views.\n\t */\n\tappendGrids() {\n\t\tif ( this.staticColorsGrid ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.staticColorsGrid = this._createStaticColorsGrid();\n\n\t\tthis.items.add( this.staticColorsGrid );\n\n\t\tif ( this.documentColorsCount ) {\n\t\t\t// Create a label for document colors.\n\t\t\tconst bind = Template.bind( this.documentColors, this.documentColors );\n\t\t\tconst label = new LabelView( this.locale );\n\t\t\tlabel.text = this._documentColorsLabel;\n\t\t\tlabel.extendTemplate( {\n\t\t\t\tattributes: {\n\t\t\t\t\tclass: [\n\t\t\t\t\t\t'ck',\n\t\t\t\t\t\t'ck-color-grid__label',\n\t\t\t\t\t\tbind.if( 'isEmpty', 'ck-hidden' )\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t} );\n\t\t\tthis.items.add( label );\n\t\t\tthis.documentColorsGrid = this._createDocumentColorsGrid();\n\t\t\tthis.items.add( this.documentColorsGrid );\n\t\t}\n\t}\n\n\t/**\n\t * Focuses the first focusable element in {@link #items}.\n\t */\n\tfocus() {\n\t\tthis._focusCycler.focusFirst();\n\t}\n\n\t/**\n\t * Focuses the last focusable element in {@link #items}.\n\t */\n\tfocusLast() {\n\t\tthis._focusCycler.focusLast();\n\t}\n\n\t/**\n\t * Adds the remove color button as a child of the current view.\n\t *\n\t * @private\n\t * @returns {module:ui/button/buttonview~ButtonView}\n\t */\n\t_removeColorButton() {\n\t\tconst buttonView = new ButtonView();\n\n\t\tbuttonView.set( {\n\t\t\twithText: true,\n\t\t\ticon: removeButtonIcon,\n\t\t\ttooltip: true,\n\t\t\tlabel: this.removeButtonLabel\n\t\t} );\n\n\t\tbuttonView.class = 'ck-color-table__remove-color';\n\t\tbuttonView.on( 'execute', () => {\n\t\t\tthis.fire( 'execute', { value: null } );\n\t\t} );\n\n\t\treturn buttonView;\n\t}\n\n\t/**\n\t * Creates a static color table grid based on the editor configuration.\n\t *\n\t * @private\n\t * @returns {module:ui/colorgrid/colorgrid~ColorGridView}\n\t */\n\t_createStaticColorsGrid() {\n\t\tconst colorGrid = new ColorGridView( this.locale, {\n\t\t\tcolorDefinitions: this.colorDefinitions,\n\t\t\tcolumns: this.columns\n\t\t} );\n\n\t\tcolorGrid.delegate( 'execute' ).to( this );\n\n\t\treturn colorGrid;\n\t}\n\n\t/**\n\t * Creates the document colors section view and binds it to {@link #documentColors}.\n\t *\n\t * @private\n\t * @returns {module:ui/colorgrid/colorgrid~ColorGridView}\n\t */\n\t_createDocumentColorsGrid() {\n\t\tconst bind = Template.bind( this.documentColors, this.documentColors );\n\t\tconst documentColorsGrid = new ColorGridView( this.locale, {\n\t\t\tcolumns: this.columns\n\t\t} );\n\n\t\tdocumentColorsGrid.delegate( 'execute' ).to( this );\n\n\t\tdocumentColorsGrid.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: bind.if( 'isEmpty', 'ck-hidden' )\n\t\t\t}\n\t\t} );\n\n\t\tdocumentColorsGrid.items.bindTo( this.documentColors ).using(\n\t\t\tcolorObj => {\n\t\t\t\tconst colorTile = new ColorTileView();\n\n\t\t\t\tcolorTile.set( {\n\t\t\t\t\tcolor: colorObj.color,\n\t\t\t\t\thasBorder: colorObj.options && colorObj.options.hasBorder\n\t\t\t\t} );\n\n\t\t\t\tif ( colorObj.label ) {\n\t\t\t\t\tcolorTile.set( {\n\t\t\t\t\t\tlabel: colorObj.label,\n\t\t\t\t\t\ttooltip: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\tcolorTile.on( 'execute', () => {\n\t\t\t\t\tthis.fire( 'execute', {\n\t\t\t\t\t\tvalue: colorObj.color\n\t\t\t\t\t} );\n\t\t\t\t} );\n\n\t\t\t\treturn colorTile;\n\t\t\t}\n\t\t);\n\n\t\t// Selected color should be cleared when document colors became empty.\n\t\tthis.documentColors.on( 'change:isEmpty', ( evt, name, val ) => {\n\t\t\tif ( val ) {\n\t\t\t\tdocumentColorsGrid.selectedColor = null;\n\t\t\t}\n\t\t} );\n\n\t\treturn documentColorsGrid;\n\t}\n\n\t/**\n\t * Adds a given color to the document colors list. If possible, the method will attempt to use\n\t * data from the {@link #colorDefinitions} (label, color options).\n\t *\n\t * @private\n\t * @param {String} color A string that stores the value of the recently applied color.\n\t */\n\t_addColorToDocumentColors( color ) {\n\t\tconst predefinedColor = this.colorDefinitions\n\t\t\t.find( definition => definition.color === color );\n\n\t\tif ( !predefinedColor ) {\n\t\t\tthis.documentColors.add( {\n\t\t\t\tcolor,\n\t\t\t\tlabel: color,\n\t\t\t\toptions: {\n\t\t\t\t\thasBorder: false\n\t\t\t\t}\n\t\t\t} );\n\t\t} else {\n\t\t\tthis.documentColors.add( Object.assign( {}, predefinedColor ) );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module font/ui/colorui\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport { createDropdown } from '@ckeditor/ckeditor5-ui/src/dropdown/utils';\nimport {\n    normalizeColorOptions,\n    getLocalizedColorOptions\n} from '@ckeditor/ckeditor5-ui/src/colorgrid/utils';\nimport { addColorTableToDropdown } from '../utils';\n/**\n * The color UI plugin which isolates the common logic responsible for displaying dropdowns with color grids.\n *\n * It is used to create the `'fontBackgroundColor'` and `'fontColor'` dropdowns, each hosting\n * a {@link module:font/ui/colortableview~ColorTableView}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ColorUI extends Plugin {\n    /**\n\t * Creates a plugin which introduces a dropdown with a pre–configured {@link module:font/ui/colortableview~ColorTableView}.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor\n\t * @param {Object} config The configuration object.\n\t * @param {String} config.commandName The name of the command which will be executed when a color tile is clicked.\n\t * @param {String} config.componentName The name of the dropdown in the {@link module:ui/componentfactory~ComponentFactory}\n\t * and the configuration scope name in `editor.config`.\n\t * @param {String} config.icon The SVG icon used by the dropdown.\n\t * @param {String} config.dropdownLabel The label used by the dropdown.\n\t */\n    constructor(editor, {commandName, icon, componentName, dropdownLabel}) {\n        super(editor);\n        /**\n\t\t * The name of the command which will be executed when a color tile is clicked.\n\t\t *\n\t\t * @type {String}\n\t\t */\n        this.commandName = commandName;\n        /**\n\t\t * The name of this component in the {@link module:ui/componentfactory~ComponentFactory}.\n\t\t * Also the configuration scope name in `editor.config`.\n\t\t *\n\t\t * @type {String}\n\t\t */\n        this.componentName = componentName;\n        /**\n\t\t * The SVG icon used by the dropdown.\n\t\t * @type {String}\n\t\t */\n        this.icon = icon;\n        /**\n\t\t * The label used by the dropdown.\n\t\t *\n\t\t * @type {String}\n\t\t */\n        this.dropdownLabel = dropdownLabel;\n        /**\n\t\t * The number of columns in the color grid.\n\t\t *\n\t\t * @type {Number}\n\t\t */\n        this.columns = editor.config.get(`${ this.componentName }.columns`);\n        /**\n\t\t * Keeps a reference to {@link module:font/ui/colortableview~ColorTableView}.\n\t\t *\n\t\t * @member {module:font/ui/colortableview~ColorTableView}\n\t\t */\n        this.colorTableView;\n    }\n    /**\n\t * @inheritDoc\n\t */\n    init() {\n        const editor = this.editor;\n        const locale = editor.locale;\n        const t = locale.t;\n        const command = editor.commands.get(this.commandName);\n        const colorsConfig = normalizeColorOptions(editor.config.get(this.componentName).colors);\n        const localizedColors = getLocalizedColorOptions(locale, colorsConfig);\n        const documentColorsCount = editor.config.get(`${ this.componentName }.documentColors`);\n        // Register the UI component.\n        editor.ui.componentFactory.add(this.componentName, locale => {\n            const dropdownView = createDropdown(locale);\n            this.colorTableView = addColorTableToDropdown({\n                dropdownView,\n                colors: localizedColors.map(option => ({\n                    label: option.label,\n                    color: option.model,\n                    options: { hasBorder: option.hasBorder }\n                })),\n                columns: this.columns,\n                removeButtonLabel: t('q'),\n                documentColorsLabel: documentColorsCount !== 0 ? t('r') : undefined,\n                documentColorsCount: documentColorsCount === undefined ? this.columns : documentColorsCount\n            });\n            this.colorTableView.bind('selectedColor').to(command, 'value');\n            dropdownView.buttonView.set({\n                label: this.dropdownLabel,\n                icon: this.icon,\n                tooltip: true\n            });\n            dropdownView.extendTemplate({ attributes: { class: 'ck-color-ui-dropdown' } });\n            dropdownView.bind('isEnabled').to(command);\n            dropdownView.on('execute', (evt, data) => {\n                editor.execute(this.commandName, data);\n                editor.editing.view.focus();\n            });\n            dropdownView.on('change:isOpen', (evt, name, isVisible) => {\n                // Grids rendering is deferred (#6192).\n                dropdownView.colorTableView.appendGrids();\n                if (isVisible) {\n                    if (documentColorsCount !== 0) {\n                        this.colorTableView.updateDocumentColors(editor.model, this.componentName);\n                    }\n                    this.colorTableView.updateSelectedColors();\n                }\n            });\n            return dropdownView;\n        });\n    }\n}","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/utils\n */\n\nimport ColorTableView from './ui/colortableview';\n\n/**\n * The name of the font size plugin.\n */\nexport const FONT_SIZE = 'fontSize';\n\n/**\n * The name of the font family plugin.\n */\nexport const FONT_FAMILY = 'fontFamily';\n\n/**\n * The name of the font color plugin.\n */\nexport const FONT_COLOR = 'fontColor';\n\n/**\n * The name of the font background color plugin.\n */\nexport const FONT_BACKGROUND_COLOR = 'fontBackgroundColor';\n\n/**\n * Builds a proper {@link module:engine/conversion/conversion~ConverterDefinition converter definition} out of input data.\n *\n * @param {String} modelAttributeKey Key\n * @param {Array.<module:font/fontfamily~FontFamilyOption>|Array.<module:font/fontsize~FontSizeOption>} options\n * @returns {module:engine/conversion/conversion~ConverterDefinition}\n */\nexport function buildDefinition( modelAttributeKey, options ) {\n\tconst definition = {\n\t\tmodel: {\n\t\t\tkey: modelAttributeKey,\n\t\t\tvalues: []\n\t\t},\n\t\tview: {},\n\t\tupcastAlso: {}\n\t};\n\n\tfor ( const option of options ) {\n\t\tdefinition.model.values.push( option.model );\n\t\tdefinition.view[ option.model ] = option.view;\n\n\t\tif ( option.upcastAlso ) {\n\t\t\tdefinition.upcastAlso[ option.model ] = option.upcastAlso;\n\t\t}\n\t}\n\n\treturn definition;\n}\n\n/**\n * A {@link module:font/fontcolor~FontColor font color} and\n * {@link module:font/fontbackgroundcolor~FontBackgroundColor font background color} helper\n * responsible for upcasting data to the model.\n *\n * **Note**: The `styleAttr` parameter should be either `'color'` or `'background-color'`.\n *\n * @param {String} styleAttr\n * @return {String}\n */\nexport function renderUpcastAttribute( styleAttr ) {\n\treturn viewElement => normalizeColorCode( viewElement.getStyle( styleAttr ) );\n}\n\n/**\n * A {@link module:font/fontcolor~FontColor font color} and\n * {@link module:font/fontbackgroundcolor~FontBackgroundColor font background color} helper\n * responsible for downcasting a color attribute to a `<span>` element.\n *\n * **Note**: The `styleAttr` parameter should be either `'color'` or `'background-color'`.\n *\n * @param {String} styleAttr\n */\nexport function renderDowncastElement( styleAttr ) {\n\treturn ( modelAttributeValue, viewWriter ) => viewWriter.createAttributeElement( 'span', {\n\t\tstyle: `${ styleAttr }:${ modelAttributeValue }`\n\t}, { priority: 7 } );\n}\n\n/**\n * A helper that adds {@link module:font/ui/colortableview~ColorTableView} to the color dropdown with proper initial values.\n *\n * @param {Object} config The configuration object.\n * @param {module:ui/dropdown/dropdownview~DropdownView} config.dropdownView The dropdown view to which\n * a {@link module:font/ui/colortableview~ColorTableView} will be added.\n * @param {Array.<module:ui/colorgrid/colorgrid~ColorDefinition>} config.colors An array with definitions\n * representing colors to be displayed in the color table.\n * @param {String} config.removeButtonLabel The label for the button responsible for removing the color.\n * @param {String} config.documentColorsLabel The label for the section with document colors.\n * @param {String} config.documentColorsCount The number of document colors inside the dropdown.\n * @returns {module:font/ui/colortableview~ColorTableView} The new color table view.\n */\nexport function addColorTableToDropdown( { dropdownView, colors, columns, removeButtonLabel, documentColorsLabel, documentColorsCount } ) {\n\tconst locale = dropdownView.locale;\n\tconst colorTableView = new ColorTableView( locale, { colors, columns, removeButtonLabel, documentColorsLabel, documentColorsCount } );\n\n\tdropdownView.colorTableView = colorTableView;\n\tdropdownView.panelView.children.add( colorTableView );\n\n\tcolorTableView.delegate( 'execute' ).to( dropdownView, 'execute' );\n\n\treturn colorTableView;\n}\n\n// Fixes the color value string.\n//\n// @param {String} value\n// @returns {String}\nfunction normalizeColorCode( value ) {\n\treturn value.replace( /\\s/g, '' );\n}\n","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./fontcolor.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M4 2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2zm8.38 9.262H7.62L10 5.506l2.38 5.756zm.532 1.285L14.34 16h1.426L10.804 4H9.196L4.234 16H5.66l1.428-3.453h5.824z\\\"/></svg>\"","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M12.4 10.3L10 4.5l-2.4 5.8h4.8zm.5 1.2H7.1L5.7 15H4.2l5-12h1.6l5 12h-1.5L13 11.5zm3.1 7H4a1 1 0 0 1 0-2h12a1 1 0 0 1 0 2z\\\"/></svg>\"","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module link/findlinkrange\r\n */\r\n\r\n/**\r\n * Returns a range containing the entire link in which the given `position` is placed.\r\n *\r\n * It can be used e.g. to get the entire range on which the `linkHref` attribute needs to be changed when having a\r\n * selection inside a link.\r\n *\r\n * @param {module:engine/model/position~Position} position The start position.\r\n * @param {String} value The `linkHref` attribute value.\r\n * @returns {module:engine/model/range~Range} The link range.\r\n */\r\nexport default function findLinkRange( position, value, model ) {\r\n\treturn model.createRange( _findBound( position, value, true, model ), _findBound( position, value, false, model ) );\r\n}\r\n\r\n// Walks forward or backward (depends on the `lookBack` flag), node by node, as long as they have the same `linkHref` attribute value\r\n// and returns a position just before or after (depends on the `lookBack` flag) the last matched node.\r\n//\r\n// @param {module:engine/model/position~Position} position The start position.\r\n// @param {String} value The `linkHref` attribute value.\r\n// @param {Boolean} lookBack Whether the walk direction is forward (`false`) or backward (`true`).\r\n// @returns {module:engine/model/position~Position} The position just before the last matched node.\r\nfunction _findBound( position, value, lookBack, model ) {\r\n\t// Get node before or after position (depends on `lookBack` flag).\r\n\t// When position is inside text node then start searching from text node.\r\n\tlet node = position.textNode || ( lookBack ? position.nodeBefore : position.nodeAfter );\r\n\r\n\tlet lastNode = null;\r\n\r\n\twhile ( node && node.getAttribute( 'linkHref' ) == value ) {\r\n\t\tlastNode = node;\r\n\t\tnode = lookBack ? node.previousSibling : node.nextSibling;\r\n\t}\r\n\r\n\treturn lastNode ? model.createPositionAt( lastNode, lookBack ? 'before' : 'after' ) : position;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module link/link\r\n */\r\n\r\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\r\nimport LinkEditing from './linkediting';\r\nimport LinkUI from './linkui';\r\n\r\n/**\r\n * The link plugin.\r\n *\r\n * This is a \"glue\" plugin that loads the {@link module:link/linkediting~LinkEditing link editing feature}\r\n * and {@link module:link/linkui~LinkUI link UI feature}.\r\n *\r\n * @extends module:core/plugin~Plugin\r\n */\r\nexport default class Link extends Plugin {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get requires() {\r\n\t\treturn [ LinkEditing, LinkUI ];\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get pluginName() {\r\n\t\treturn 'Link';\r\n\t}\r\n}\r\n\r\n/**\r\n * The configuration of the {@link module:link/link~Link} feature.\r\n *\r\n * Read more in {@link module:link/link~LinkConfig}.\r\n *\r\n * @member {module:link/link~LinkConfig} module:core/editor/editorconfig~EditorConfig#link\r\n */\r\n\r\n/**\r\n * The configuration of the {@link module:link/link~Link link feature}.\r\n *\r\n *\t\tClassicEditor\r\n *\t\t\t.create( editorElement, {\r\n * \t\t\t\tlink:  ... // Link feature configuration.\r\n *\t\t\t} )\r\n *\t\t\t.then( ... )\r\n *\t\t\t.catch( ... );\r\n *\r\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\r\n * @interface LinkConfig\r\n */\r\n\r\n/**\r\n * When set to `true`, the `target=\"blank\"` and `rel=\"noopener noreferrer\"` attributes are automatically added to all external links\r\n * in the editor. \"External links\" are all links in the editor content starting with `http`, `https`, or `//`.\r\n *\r\n *\t\tClassicEditor\r\n *\t\t\t.create( editorElement, {\r\n *\t\t\t\tlink: {\r\n *\t\t\t\t\taddTargetToExternalLinks: true\r\n *\t\t\t\t}\r\n *\t\t\t} )\r\n *\t\t\t.then( ... )\r\n *\t\t\t.catch( ... );\r\n *\r\n * Internally, this option activates a predefined {@link module:link/link~LinkConfig#decorators automatic link decorator}\r\n * that extends all external links with the `target` and `rel` attributes.\r\n *\r\n * **Note**: To control the `target` and `rel` attributes of specific links in the edited content, a dedicated\r\n * {@link module:link/link~LinkDecoratorManualDefinition manual} decorator must be defined in the\r\n * {@link module:link/link~LinkConfig#decorators `config.link.decorators`} array. In such scenario,\r\n * the `config.link.addTargetToExternalLinks` option should remain `undefined` or `false` to not interfere with the manual decorator.\r\n *\r\n * It is possible to add other {@link module:link/link~LinkDecoratorAutomaticDefinition automatic}\r\n * or {@link module:link/link~LinkDecoratorManualDefinition manual} link decorators when this option is active.\r\n *\r\n * More information about decorators can be found in the {@link module:link/link~LinkConfig#decorators decorators configuration}\r\n * reference.\r\n *\r\n * @default false\r\n * @member {Boolean} module:link/link~LinkConfig#addTargetToExternalLinks\r\n */\r\n\r\n/**\r\n * Decorators provide an easy way to configure and manage additional link attributes in the editor content. There are\r\n * two types of link decorators:\r\n *\r\n * * {@link module:link/link~LinkDecoratorAutomaticDefinition Automatic} &ndash; They match links against pre–defined rules and\r\n * manage their attributes based on the results.\r\n * * {@link module:link/link~LinkDecoratorManualDefinition Manual} &ndash; They allow users to control link attributes individually,\r\n *  using the editor UI.\r\n *\r\n * Link decorators are defined as objects with key-value pairs, where the key is the name provided for a given decorator and the\r\n * value is the decorator definition.\r\n *\r\n * The name of the decorator also corresponds to the {@glink framework/guides/architecture/editing-engine#text-attributes text attribute}\r\n * in the model. For instance, the `isExternal` decorator below is represented as a `linkIsExternal` attribute in the model.\r\n *\r\n *\t\tClassicEditor\r\n *\t\t\t.create( editorElement, {\r\n *\t\t\t\tlink: {\r\n *\t\t\t\t\tdecorators: {\r\n *\t\t\t\t\t\tisExternal: {\r\n *\t\t\t\t\t\t\tmode: 'automatic',\r\n *\t\t\t\t\t\t\tcallback: url => url.startsWith( 'http://' ),\r\n *\t\t\t\t\t\t\tattributes: {\r\n *\t\t\t\t\t\t\t\ttarget: '_blank',\r\n *\t\t\t\t\t\t\t\trel: 'noopener noreferrer'\r\n *\t\t\t\t\t\t\t}\r\n *\t\t\t\t\t\t},\r\n *\t\t\t\t\t\tisDownloadable: {\r\n *\t\t\t\t\t\t\tmode: 'manual',\r\n *\t\t\t\t\t\t\tlabel: 'Downloadable',\r\n *\t\t\t\t\t\t\tattributes: {\r\n *\t\t\t\t\t\t\t\tdownload: 'file.png',\r\n *\t\t\t\t\t\t\t}\r\n *\t\t\t\t\t\t},\r\n *\t\t\t\t\t\t// ...\r\n *\t\t\t\t\t}\r\n *\t\t\t\t}\r\n *\t\t\t} )\r\n *\t\t\t.then( ... )\r\n *\t\t\t.catch( ... );\r\n *\r\n * To learn more about the configuration syntax, check out the {@link module:link/link~LinkDecoratorAutomaticDefinition automatic}\r\n * and {@link module:link/link~LinkDecoratorManualDefinition manual} decorator option reference.\r\n *\r\n * **Warning:** Currently, link decorators work independently of one another and no conflict resolution mechanism exists.\r\n * For example, configuring the `target` attribute using both an automatic and a manual decorator at the same time could end up with\r\n * quirky results. The same applies if multiple manual or automatic decorators were defined for the same attribute.\r\n *\r\n * **Note**: Since the `target` attribute management for external links is a common use case, there is a predefined automatic decorator\r\n * dedicated for that purpose which can be enabled by turning a single option on. Check out the\r\n * {@link module:link/link~LinkConfig#addTargetToExternalLinks `config.link.addTargetToExternalLinks`}\r\n * configuration description to learn more.\r\n *\r\n * See also the {@glink features/link#custom-link-attributes-decorators link feature guide} for more information.\r\n *\r\n * @member {Object.<String, module:link/link~LinkDecoratorDefinition>} module:link/link~LinkConfig#decorators\r\n */\r\n\r\n/**\r\n * Represents a link decorator definition ({@link module:link/link~LinkDecoratorManualDefinition `'manual'`}\r\n * or {@link module:link/link~LinkDecoratorAutomaticDefinition `'automatic'`}).\r\n *\r\n * @interface LinkDecoratorDefinition\r\n */\r\n\r\n/**\r\n * Link decorator type.\r\n *\r\n * Check out the {@glink features/link#custom-link-attributes-decorators link feature guide} for more information.\r\n *\r\n * @member {'manual'|'automatic'} module:link/link~LinkDecoratorDefinition#mode\r\n */\r\n\r\n/**\r\n * Describes an automatic {@link module:link/link~LinkConfig#decorators link decorator}. This decorator type matches\r\n * all links in the editor content against a function that decides whether the link should receive a pre–defined set of attributes.\r\n *\r\n * It takes an object with key-value pairs of attributes and a callback function that must return a Boolean value based on the link's\r\n * `href` (URL). When the callback returns `true`, attributes are applied to the link.\r\n *\r\n * For example, to add the `target=\"_blank\"` attribute to all links in the editor starting with `http://`, the\r\n * configuration could look like this:\r\n *\r\n *\t\t{\r\n *\t\t\tmode: 'automatic',\r\n *\t\t\tcallback: url => url.startsWith( 'http://' ),\r\n *\t\t\tattributes: {\r\n *\t\t\t\ttarget: '_blank'\r\n *\t\t\t}\r\n *\t\t}\r\n *\r\n * **Note**: Since the `target` attribute management for external links is a common use case, there is a predefined automatic decorator\r\n * dedicated for that purpose that can be enabled by turning a single option on. Check out the\r\n * {@link module:link/link~LinkConfig#addTargetToExternalLinks `config.link.addTargetToExternalLinks`}\r\n * configuration description to learn more.\r\n *\r\n * @typedef {Object} module:link/link~LinkDecoratorAutomaticDefinition\r\n * @property {'automatic'} mode Link decorator type. It is `'automatic'` for all automatic decorators.\r\n * @property {Function} callback Takes a `url` as a parameter and returns `true` if the `attributes` should be applied to the link.\r\n * @property {Object} attributes Key-value pairs used as link attributes added to the output during the\r\n * {@glink framework/guides/architecture/editing-engine#conversion downcasting}.\r\n * Attributes should follow the {@link module:engine/view/elementdefinition~ElementDefinition} syntax.\r\n */\r\n\r\n/**\r\n * Describes a manual {@link module:link/link~LinkConfig#decorators link decorator}. This decorator type is represented in\r\n * the link feature's {@link module:link/linkui user interface} as a switch that the user can use to control the presence\r\n * of a predefined set of attributes.\r\n *\r\n * For instance, to allow the users to manually control the presence of the `target=\"_blank\"` and\r\n * `rel=\"noopener noreferrer\"` attributes on specific links, the decorator could look as follows:\r\n *\r\n *\t\t{\r\n *\t\t\tmode: 'manual',\r\n *\t\t\tlabel: 'Open in a new tab',\r\n *\t\t\tattributes: {\r\n *\t\t\t\ttarget: '_blank',\r\n *\t\t\t\trel: 'noopener noreferrer'\r\n *\t\t\t}\r\n *\t\t}\r\n *\r\n * @typedef {Object} module:link/link~LinkDecoratorManualDefinition\r\n * @property {'manual'} mode Link decorator type. It is `'manual'` for all manual decorators.\r\n * @property {String} label The label of the UI button that the user can use to control the presence of link attributes.\r\n * @property {Object} attributes Key-value pairs used as link attributes added to the output during the\r\n * {@glink framework/guides/architecture/editing-engine#conversion downcasting}.\r\n * Attributes should follow the {@link module:engine/view/elementdefinition~ElementDefinition} syntax.\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module link/linkcommand\r\n */\r\n\r\nimport Command from '@ckeditor/ckeditor5-core/src/command';\r\nimport findLinkRange from './findlinkrange';\r\nimport toMap from '@ckeditor/ckeditor5-utils/src/tomap';\r\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\r\n\r\n/**\r\n * The link command. It is used by the {@link module:link/link~Link link feature}.\r\n *\r\n * @extends module:core/command~Command\r\n */\r\nexport default class LinkCommand extends Command {\r\n\t/**\r\n\t * The value of the `'linkHref'` attribute if the start of the selection is located in a node with this attribute.\r\n\t *\r\n\t * @observable\r\n\t * @readonly\r\n\t * @member {Object|undefined} #value\r\n\t */\r\n\r\n\tconstructor( editor ) {\r\n\t\tsuper( editor );\r\n\r\n\t\t/**\r\n\t\t * A collection of {@link module:link/utils~ManualDecorator manual decorators}\r\n\t\t * corresponding to the {@link module:link/link~LinkConfig#decorators decorator configuration}.\r\n\t\t *\r\n\t\t * You can consider it a model with states of manual decorators added to the currently selected link.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @type {module:utils/collection~Collection}\r\n\t\t */\r\n\t\tthis.manualDecorators = new Collection();\r\n\t}\r\n\r\n\t/**\r\n\t * Synchronizes the state of {@link #manualDecorators} with the currently present elements in the model.\r\n\t */\r\n\trestoreManualDecoratorStates() {\r\n\t\tfor ( const manualDecorator of this.manualDecorators ) {\r\n\t\t\tmanualDecorator.value = this._getDecoratorStateFromModel( manualDecorator.id );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\trefresh() {\r\n\t\tconst model = this.editor.model;\r\n\t\tconst doc = model.document;\r\n\r\n\t\tthis.value = doc.selection.getAttribute( 'linkHref' );\r\n\r\n\t\tfor ( const manualDecorator of this.manualDecorators ) {\r\n\t\t\tmanualDecorator.value = this._getDecoratorStateFromModel( manualDecorator.id );\r\n\t\t}\r\n\r\n\t\tthis.isEnabled = model.schema.checkAttributeInSelection( doc.selection, 'linkHref' );\r\n\t}\r\n\r\n\t/**\r\n\t * Executes the command.\r\n\t *\r\n\t * When the selection is non-collapsed, the `linkHref` attribute will be applied to nodes inside the selection, but only to\r\n\t * those nodes where the `linkHref` attribute is allowed (disallowed nodes will be omitted).\r\n\t *\r\n\t * When the selection is collapsed and is not inside the text with the `linkHref` attribute, a\r\n\t * new {@link module:engine/model/text~Text text node} with the `linkHref` attribute will be inserted in place of the caret, but\r\n\t * only if such element is allowed in this place. The `_data` of the inserted text will equal the `href` parameter.\r\n\t * The selection will be updated to wrap the just inserted text node.\r\n\t *\r\n\t * When the selection is collapsed and inside the text with the `linkHref` attribute, the attribute value will be updated.\r\n\t *\r\n\t * # Decorators and model attribute management\r\n\t *\r\n\t * There is an optional argument to this command that applies or removes model\r\n\t * {@glink framework/guides/architecture/editing-engine#text-attributes text attributes} brought by\r\n\t * {@link module:link/utils~ManualDecorator manual link decorators}.\r\n\t *\r\n\t * Text attribute names in the model correspond to the entries in the {@link module:link/link~LinkConfig#decorators configuration}.\r\n\t * For every decorator configured, a model text attribute exists with the \"link\" prefix. For example, a `'linkMyDecorator'` attribute\r\n\t * corresponds to `'myDecorator'` in the configuration.\r\n\t *\r\n\t * To learn more about link decorators, check out the {@link module:link/link~LinkConfig#decorators `config.link.decorators`}\r\n\t * documentation.\r\n\t *\r\n\t * Here is how to manage decorator attributes with the link command:\r\n\t *\r\n\t *\t\tconst linkCommand = editor.commands.get( 'link' );\r\n\t *\r\n\t *\t\t// Adding a new decorator attribute.\r\n\t *\t\tlinkCommand.execute( 'http://example.com', {\r\n\t *\t\t\tlinkIsExternal: true\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\t// Removing a decorator attribute from the selection.\r\n\t *\t\tlinkCommand.execute( 'http://example.com', {\r\n\t *\t\t\tlinkIsExternal: false\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\t// Adding multiple decorator attributes at the same time.\r\n\t *\t\tlinkCommand.execute( 'http://example.com', {\r\n\t *\t\t\tlinkIsExternal: true,\r\n\t *\t\t\tlinkIsDownloadable: true,\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\t// Removing and adding decorator attributes at the same time.\r\n\t *\t\tlinkCommand.execute( 'http://example.com', {\r\n\t *\t\t\tlinkIsExternal: false,\r\n\t *\t\t\tlinkFoo: true,\r\n\t *\t\t\tlinkIsDownloadable: false,\r\n\t *\t\t} );\r\n\t *\r\n\t * **Note**: If the decorator attribute name is not specified, its state remains untouched.\r\n\t *\r\n\t * **Note**: {@link module:link/unlinkcommand~UnlinkCommand#execute `UnlinkCommand#execute()`} removes all\r\n\t * decorator attributes.\r\n\t *\r\n\t * @fires execute\r\n\t * @param {String} href Link destination.\r\n\t * @param {Object} [manualDecoratorIds={}] The information about manual decorator attributes to be applied or removed upon execution.\r\n\t */\r\n\texecute( href, manualDecoratorIds = {} ) {\r\n\t\tconst model = this.editor.model;\r\n\t\tconst selection = model.document.selection;\r\n\t\t// Stores information about manual decorators to turn them on/off when command is applied.\r\n\t\tconst truthyManualDecorators = [];\r\n\t\tconst falsyManualDecorators = [];\r\n\r\n\t\tfor ( const name in manualDecoratorIds ) {\r\n\t\t\tif ( manualDecoratorIds[ name ] ) {\r\n\t\t\t\ttruthyManualDecorators.push( name );\r\n\t\t\t} else {\r\n\t\t\t\tfalsyManualDecorators.push( name );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tmodel.change( writer => {\r\n\t\t\t// If selection is collapsed then update selected link or insert new one at the place of caret.\r\n\t\t\tif ( selection.isCollapsed ) {\r\n\t\t\t\tconst position = selection.getFirstPosition();\r\n\r\n\t\t\t\t// When selection is inside text with `linkHref` attribute.\r\n\t\t\t\tif ( selection.hasAttribute( 'linkHref' ) ) {\r\n\t\t\t\t\t// Then update `linkHref` value.\r\n\t\t\t\t\tconst linkRange = findLinkRange( position, selection.getAttribute( 'linkHref' ), model );\r\n\r\n\t\t\t\t\twriter.setAttribute( 'linkHref', href, linkRange );\r\n\r\n\t\t\t\t\ttruthyManualDecorators.forEach( item => {\r\n\t\t\t\t\t\twriter.setAttribute( item, true, linkRange );\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t\tfalsyManualDecorators.forEach( item => {\r\n\t\t\t\t\t\twriter.removeAttribute( item, linkRange );\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t// Create new range wrapping changed link.\r\n\t\t\t\t\twriter.setSelection( linkRange );\r\n\t\t\t\t}\r\n\t\t\t\t// If not then insert text node with `linkHref` attribute in place of caret.\r\n\t\t\t\t// However, since selection in collapsed, attribute value will be used as data for text node.\r\n\t\t\t\t// So, if `href` is empty, do not create text node.\r\n\t\t\t\telse if ( href !== '' ) {\r\n\t\t\t\t\tconst attributes = toMap( selection.getAttributes() );\r\n\r\n\t\t\t\t\tattributes.set( 'linkHref', href );\r\n\r\n\t\t\t\t\ttruthyManualDecorators.forEach( item => {\r\n\t\t\t\t\t\tattributes.set( item, true );\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t\tconst node = writer.createText( href, attributes );\r\n\r\n\t\t\t\t\tmodel.insertContent( node, position );\r\n\r\n\t\t\t\t\t// Create new range wrapping created node.\r\n\t\t\t\t\twriter.setSelection( writer.createRangeOn( node ) );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// If selection has non-collapsed ranges, we change attribute on nodes inside those ranges\r\n\t\t\t\t// omitting nodes where `linkHref` attribute is disallowed.\r\n\t\t\t\tconst ranges = model.schema.getValidRanges( selection.getRanges(), 'linkHref' );\r\n\r\n\t\t\t\tfor ( const range of ranges ) {\r\n\t\t\t\t\twriter.setAttribute( 'linkHref', href, range );\r\n\r\n\t\t\t\t\ttruthyManualDecorators.forEach( item => {\r\n\t\t\t\t\t\twriter.setAttribute( item, true, range );\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t\tfalsyManualDecorators.forEach( item => {\r\n\t\t\t\t\t\twriter.removeAttribute( item, range );\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * Provides information whether a decorator with a given name is present in the currently processed selection.\r\n\t *\r\n\t * @private\r\n\t * @param {String} decoratorName The name of the manual decorator used in the model\r\n\t * @returns {Boolean} The information whether a given decorator is currently present in the selection.\r\n\t */\r\n\t_getDecoratorStateFromModel( decoratorName ) {\r\n\t\tconst doc = this.editor.model.document;\r\n\t\treturn doc.selection.getAttribute( decoratorName ) || false;\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module link/linkediting\r\n */\r\n\r\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\r\nimport LinkCommand from './linkcommand';\r\nimport UnlinkCommand from './unlinkcommand';\r\nimport { createLinkElement, ensureSafeUrl, getLocalizedDecorators, normalizeDecorators } from './utils';\r\nimport AutomaticDecorators from './utils/automaticdecorators';\r\nimport ManualDecorator from './utils/manualdecorator';\r\nimport bindTwoStepCaretToAttribute from '@ckeditor/ckeditor5-engine/src/utils/bindtwostepcarettoattribute';\r\nimport findLinkRange from './findlinkrange';\r\nimport '../theme/link.css';\r\n\r\nconst HIGHLIGHT_CLASS = 'ck-link_selected';\r\nconst DECORATOR_AUTOMATIC = 'automatic';\r\nconst DECORATOR_MANUAL = 'manual';\r\nconst EXTERNAL_LINKS_REGEXP = /^(https?:)?\\/\\//;\r\n\r\n/**\r\n * The link engine feature.\r\n *\r\n * It introduces the `linkHref=\"url\"` attribute in the model which renders to the view as a `<a href=\"url\">` element\r\n * as well as `'link'` and `'unlink'` commands.\r\n *\r\n * @extends module:core/plugin~Plugin\r\n */\r\nexport default class LinkEditing extends Plugin {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get pluginName() {\r\n\t\treturn 'LinkEditing';\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tconstructor( editor ) {\r\n\t\tsuper( editor );\r\n\r\n\t\teditor.config.define( 'link', {\r\n\t\t\taddTargetToExternalLinks: false\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tinit() {\r\n\t\tconst editor = this.editor;\r\n\t\tconst locale = editor.locale;\r\n\r\n\t\t// Allow link attribute on all inline nodes.\r\n\t\teditor.model.schema.extend( '$text', { allowAttributes: 'linkHref' } );\r\n\r\n\t\teditor.conversion.for( 'dataDowncast' )\r\n\t\t\t.attributeToElement( { model: 'linkHref', view: createLinkElement } );\r\n\r\n\t\teditor.conversion.for( 'editingDowncast' )\r\n\t\t\t.attributeToElement( { model: 'linkHref', view: ( href, writer ) => {\r\n\t\t\t\treturn createLinkElement( ensureSafeUrl( href ), writer );\r\n\t\t\t} } );\r\n\r\n\t\teditor.conversion.for( 'upcast' )\r\n\t\t\t.elementToAttribute( {\r\n\t\t\t\tview: {\r\n\t\t\t\t\tname: 'a',\r\n\t\t\t\t\tattributes: {\r\n\t\t\t\t\t\thref: true\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tmodel: {\r\n\t\t\t\t\tkey: 'linkHref',\r\n\t\t\t\t\tvalue: viewElement => viewElement.getAttribute( 'href' )\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t// Create linking commands.\r\n\t\teditor.commands.add( 'link', new LinkCommand( editor ) );\r\n\t\teditor.commands.add( 'unlink', new UnlinkCommand( editor ) );\r\n\r\n\t\tconst linkDecorators = getLocalizedDecorators( editor.t, normalizeDecorators( editor.config.get( 'link.decorators' ) ) );\r\n\r\n\t\tthis._enableAutomaticDecorators( linkDecorators.filter( item => item.mode === DECORATOR_AUTOMATIC ) );\r\n\t\tthis._enableManualDecorators( linkDecorators.filter( item => item.mode === DECORATOR_MANUAL ) );\r\n\r\n\t\t// Enable two-step caret movement for `linkHref` attribute.\r\n\t\tbindTwoStepCaretToAttribute( {\r\n\t\t\tview: editor.editing.view,\r\n\t\t\tmodel: editor.model,\r\n\t\t\temitter: this,\r\n\t\t\tattribute: 'linkHref',\r\n\t\t\tlocale\r\n\t\t} );\r\n\r\n\t\t// Setup highlight over selected link.\r\n\t\tthis._setupLinkHighlight();\r\n\t}\r\n\r\n\t/**\r\n\t * Processes an array of configured {@link module:link/link~LinkDecoratorAutomaticDefinition automatic decorators}\r\n\t * and registers a {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher downcast dispatcher}\r\n\t * for each one of them. Downcast dispatchers are obtained using the\r\n\t * {@link module:link/utils~AutomaticDecorators#getDispatcher} method.\r\n\t *\r\n\t * **Note**: This method also activates the automatic external link decorator if enabled with\r\n\t * {@link module:link/link~LinkConfig#addTargetToExternalLinks `config.link.addTargetToExternalLinks`}.\r\n\t *\r\n\t * @private\r\n\t * @param {Array.<module:link/link~LinkDecoratorAutomaticDefinition>} automaticDecoratorDefinitions\r\n\t */\r\n\t_enableAutomaticDecorators( automaticDecoratorDefinitions ) {\r\n\t\tconst editor = this.editor;\r\n\t\tconst automaticDecorators = new AutomaticDecorators();\r\n\r\n\t\t// Adds a default decorator for external links.\r\n\t\tif ( editor.config.get( 'link.addTargetToExternalLinks' ) ) {\r\n\t\t\tautomaticDecorators.add( {\r\n\t\t\t\tid: 'linkIsExternal',\r\n\t\t\t\tmode: DECORATOR_AUTOMATIC,\r\n\t\t\t\tcallback: url => EXTERNAL_LINKS_REGEXP.test( url ),\r\n\t\t\t\tattributes: {\r\n\t\t\t\t\ttarget: '_blank',\r\n\t\t\t\t\trel: 'noopener noreferrer'\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tautomaticDecorators.add( automaticDecoratorDefinitions );\r\n\r\n\t\tif ( automaticDecorators.length ) {\r\n\t\t\teditor.conversion.for( 'downcast' ).add( automaticDecorators.getDispatcher() );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Processes an array of configured {@link module:link/link~LinkDecoratorManualDefinition manual decorators},\r\n\t * transforms them into {@link module:link/utils~ManualDecorator} instances and stores them in the\r\n\t * {@link module:link/linkcommand~LinkCommand#manualDecorators} collection (a model for manual decorators state).\r\n\t *\r\n\t * Also registers an {@link module:engine/conversion/downcasthelpers~DowncastHelpers#attributeToElement attribute-to-element}\r\n\t * converter for each manual decorator and extends the {@link module:engine/model/schema~Schema model's schema}\r\n\t * with adequate model attributes.\r\n\t *\r\n\t * @private\r\n\t * @param {Array.<module:link/link~LinkDecoratorManualDefinition>} manualDecoratorDefinitions\r\n\t */\r\n\t_enableManualDecorators( manualDecoratorDefinitions ) {\r\n\t\tif ( !manualDecoratorDefinitions.length ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst editor = this.editor;\r\n\t\tconst command = editor.commands.get( 'link' );\r\n\t\tconst manualDecorators = command.manualDecorators;\r\n\r\n\t\tmanualDecoratorDefinitions.forEach( decorator => {\r\n\t\t\teditor.model.schema.extend( '$text', { allowAttributes: decorator.id } );\r\n\r\n\t\t\t// Keeps reference to manual decorator to decode its name to attributes during downcast.\r\n\t\t\tmanualDecorators.add( new ManualDecorator( decorator ) );\r\n\r\n\t\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\r\n\t\t\t\tmodel: decorator.id,\r\n\t\t\t\tview: ( manualDecoratorName, writer ) => {\r\n\t\t\t\t\tif ( manualDecoratorName ) {\r\n\t\t\t\t\t\tconst attributes = manualDecorators.get( decorator.id ).attributes;\r\n\t\t\t\t\t\tconst element = writer.createAttributeElement( 'a', attributes, { priority: 5 } );\r\n\t\t\t\t\t\twriter.setCustomProperty( 'link', true, element );\r\n\r\n\t\t\t\t\t\treturn element;\r\n\t\t\t\t\t}\r\n\t\t\t\t} } );\r\n\r\n\t\t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\r\n\t\t\t\tview: {\r\n\t\t\t\t\tname: 'a',\r\n\t\t\t\t\tattributes: manualDecorators.get( decorator.id ).attributes\r\n\t\t\t\t},\r\n\t\t\t\tmodel: {\r\n\t\t\t\t\tkey: decorator.id\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a visual highlight style to a link in which the selection is anchored.\r\n\t * Together with two-step caret movement, they indicate that the user is typing inside the link.\r\n\t *\r\n\t * Highlight is turned on by adding the `.ck-link_selected` class to the link in the view:\r\n\t *\r\n\t * * The class is removed before the conversion has started, as callbacks added with the `'highest'` priority\r\n\t * to {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher} events.\r\n\t * * The class is added in the view post fixer, after other changes in the model tree were converted to the view.\r\n\t *\r\n\t * This way, adding and removing the highlight does not interfere with conversion.\r\n\t *\r\n\t * @private\r\n\t */\r\n\t_setupLinkHighlight() {\r\n\t\tconst editor = this.editor;\r\n\t\tconst view = editor.editing.view;\r\n\t\tconst highlightedLinks = new Set();\r\n\r\n\t\t// Adding the class.\r\n\t\tview.document.registerPostFixer( writer => {\r\n\t\t\tconst selection = editor.model.document.selection;\r\n\t\t\tlet changed = false;\r\n\r\n\t\t\tif ( selection.hasAttribute( 'linkHref' ) ) {\r\n\t\t\t\tconst modelRange = findLinkRange( selection.getFirstPosition(), selection.getAttribute( 'linkHref' ), editor.model );\r\n\t\t\t\tconst viewRange = editor.editing.mapper.toViewRange( modelRange );\r\n\r\n\t\t\t\t// There might be multiple `a` elements in the `viewRange`, for example, when the `a` element is\r\n\t\t\t\t// broken by a UIElement.\r\n\t\t\t\tfor ( const item of viewRange.getItems() ) {\r\n\t\t\t\t\tif ( item.is( 'a' ) && !item.hasClass( HIGHLIGHT_CLASS ) ) {\r\n\t\t\t\t\t\twriter.addClass( HIGHLIGHT_CLASS, item );\r\n\t\t\t\t\t\thighlightedLinks.add( item );\r\n\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn changed;\r\n\t\t} );\r\n\r\n\t\t// Removing the class.\r\n\t\teditor.conversion.for( 'editingDowncast' ).add( dispatcher => {\r\n\t\t\t// Make sure the highlight is removed on every possible event, before conversion is started.\r\n\t\t\tdispatcher.on( 'insert', removeHighlight, { priority: 'highest' } );\r\n\t\t\tdispatcher.on( 'remove', removeHighlight, { priority: 'highest' } );\r\n\t\t\tdispatcher.on( 'attribute', removeHighlight, { priority: 'highest' } );\r\n\t\t\tdispatcher.on( 'selection', removeHighlight, { priority: 'highest' } );\r\n\r\n\t\t\tfunction removeHighlight() {\r\n\t\t\t\tview.change( writer => {\r\n\t\t\t\t\tfor ( const item of highlightedLinks.values() ) {\r\n\t\t\t\t\t\twriter.removeClass( HIGHLIGHT_CLASS, item );\r\n\t\t\t\t\t\thighlightedLinks.delete( item );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\n/**\r\n * @module link/linkui\r\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ClickObserver from '@ckeditor/ckeditor5-engine/src/view/observer/clickobserver';\nimport { isLinkElement } from './utils';\nimport ContextualBalloon from '@ckeditor/ckeditor5-ui/src/panel/balloon/contextualballoon';\nimport clickOutsideHandler from '@ckeditor/ckeditor5-ui/src/bindings/clickoutsidehandler';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport LinkFormView from './ui/linkformview';\nimport LinkActionsView from './ui/linkactionsview';\nimport linkIcon from '../theme/icons/link.svg';\nconst linkKeystroke = 'Ctrl+K';\n/**\r\n * The link UI plugin. It introduces the `'link'` and `'unlink'` buttons and support for the <kbd>Ctrl+K</kbd> keystroke.\r\n *\r\n * It uses the\r\n * {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon plugin}.\r\n *\r\n * @extends module:core/plugin~Plugin\r\n */\nexport default class LinkUI extends Plugin {\n    /**\r\n\t * @inheritDoc\r\n\t */\n    static get requires() {\n        return [ContextualBalloon];\n    }\n    /**\r\n\t * @inheritDoc\r\n\t */\n    static get pluginName() {\n        return 'LinkUI';\n    }\n    /**\r\n\t * @inheritDoc\r\n\t */\n    init() {\n        const editor = this.editor;\n        editor.editing.view.addObserver(ClickObserver);\n        /**\r\n\t\t * The actions view displayed inside of the balloon.\r\n\t\t *\r\n\t\t * @member {module:link/ui/linkactionsview~LinkActionsView}\r\n\t\t */\n        this.actionsView = this._createActionsView();\n        /**\r\n\t\t * The form view displayed inside the balloon.\r\n\t\t *\r\n\t\t * @member {module:link/ui/linkformview~LinkFormView}\r\n\t\t */\n        this.formView = this._createFormView();\n        /**\r\n\t\t * The contextual balloon plugin instance.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {module:ui/panel/balloon/contextualballoon~ContextualBalloon}\r\n\t\t */\n        this._balloon = editor.plugins.get(ContextualBalloon);\n        // Create toolbar buttons.\n        this._createToolbarLinkButton();\n        // Attach lifecycle actions to the the balloon.\n        this._enableUserBalloonInteractions();\n    }\n    /**\r\n\t * @inheritDoc\r\n\t */\n    destroy() {\n        super.destroy();\n        // Destroy created UI components as they are not automatically destroyed (see ckeditor5#1341).\n        this.formView.destroy();\n    }\n    /**\r\n\t * Creates the {@link module:link/ui/linkactionsview~LinkActionsView} instance.\r\n\t *\r\n\t * @private\r\n\t * @returns {module:link/ui/linkactionsview~LinkActionsView} The link actions view instance.\r\n\t */\n    _createActionsView() {\n        const editor = this.editor;\n        const actionsView = new LinkActionsView(editor.locale);\n        const linkCommand = editor.commands.get('link');\n        const unlinkCommand = editor.commands.get('unlink');\n        actionsView.bind('href').to(linkCommand, 'value');\n        actionsView.editButtonView.bind('isEnabled').to(linkCommand);\n        actionsView.unlinkButtonView.bind('isEnabled').to(unlinkCommand);\n        // Execute unlink command after clicking on the \"Edit\" button.\n        this.listenTo(actionsView, 'edit', () => {\n            this._addFormView();\n        });\n        // Execute unlink command after clicking on the \"Unlink\" button.\n        this.listenTo(actionsView, 'unlink', () => {\n            editor.execute('unlink');\n            this._hideUI();\n        });\n        // Close the panel on esc key press when the **actions have focus**.\n        actionsView.keystrokes.set('Esc', (data, cancel) => {\n            this._hideUI();\n            cancel();\n        });\n        // Open the form view on Ctrl+K when the **actions have focus**..\n        actionsView.keystrokes.set(linkKeystroke, (data, cancel) => {\n            this._addFormView();\n            cancel();\n        });\n        return actionsView;\n    }\n    /**\r\n\t * Creates the {@link module:link/ui/linkformview~LinkFormView} instance.\r\n\t *\r\n\t * @private\r\n\t * @returns {module:link/ui/linkformview~LinkFormView} The link form view instance.\r\n\t */\n    _createFormView() {\n        const editor = this.editor;\n        const linkCommand = editor.commands.get('link');\n        const formView = new LinkFormView(editor.locale, linkCommand.manualDecorators);\n        formView.urlInputView.bind('value').to(linkCommand, 'value');\n        // Form elements should be read-only when corresponding commands are disabled.\n        formView.urlInputView.bind('isReadOnly').to(linkCommand, 'isEnabled', value => !value);\n        formView.saveButtonView.bind('isEnabled').to(linkCommand);\n        // Execute link command after clicking the \"Save\" button.\n        this.listenTo(formView, 'submit', () => {\n            editor.execute('link', formView.urlInputView.inputView.element.value, formView.getDecoratorSwitchesState());\n            this._closeFormView();\n        });\n        // Hide the panel after clicking the \"Cancel\" button.\n        this.listenTo(formView, 'cancel', () => {\n            this._closeFormView();\n        });\n        // Close the panel on esc key press when the **form has focus**.\n        formView.keystrokes.set('Esc', (data, cancel) => {\n            this._closeFormView();\n            cancel();\n        });\n        return formView;\n    }\n    /**\r\n\t * Creates a toolbar Link button. Clicking this button will show\r\n\t * a {@link #_balloon} attached to the selection.\r\n\t *\r\n\t * @private\r\n\t */\n    _createToolbarLinkButton() {\n        const editor = this.editor;\n        const linkCommand = editor.commands.get('link');\n        const t = editor.t;\n        // Handle the `Ctrl+K` keystroke and show the panel.\n        editor.keystrokes.set(linkKeystroke, (keyEvtData, cancel) => {\n            // Prevent focusing the search bar in FF and opening new tab in Edge. #153, #154.\n            cancel();\n            this._showUI(true);\n        });\n        editor.ui.componentFactory.add('link', locale => {\n            const button = new ButtonView(locale);\n            button.isEnabled = true;\n            button.label = t('b');\n            button.icon = linkIcon;\n            button.keystroke = linkKeystroke;\n            button.tooltip = true;\n            button.isToggleable = true;\n            // Bind button to the command.\n            button.bind('isEnabled').to(linkCommand, 'isEnabled');\n            button.bind('isOn').to(linkCommand, 'value', value => !!value);\n            // Show the panel on button click.\n            this.listenTo(button, 'execute', () => this._showUI(true));\n            return button;\n        });\n    }\n    /**\r\n\t * Attaches actions that control whether the balloon panel containing the\r\n\t * {@link #formView} is visible or not.\r\n\t *\r\n\t * @private\r\n\t */\n    _enableUserBalloonInteractions() {\n        const viewDocument = this.editor.editing.view.document;\n        // Handle click on view document and show panel when selection is placed inside the link element.\n        // Keep panel open until selection will be inside the same link element.\n        this.listenTo(viewDocument, 'click', () => {\n            const parentLink = this._getSelectedLinkElement();\n            if (parentLink) {\n                // Then show panel but keep focus inside editor editable.\n                this._showUI();\n            }\n        });\n        // Focus the form if the balloon is visible and the Tab key has been pressed.\n        this.editor.keystrokes.set('Tab', (data, cancel) => {\n            if (this._areActionsVisible && !this.actionsView.focusTracker.isFocused) {\n                this.actionsView.focus();\n                cancel();\n            }\n        }, {\n            // Use the high priority because the link UI navigation is more important\n            // than other feature's actions, e.g. list indentation.\n            // https://github.com/ckeditor/ckeditor5-link/issues/146\n            priority: 'high'\n        });\n        // Close the panel on the Esc key press when the editable has focus and the balloon is visible.\n        this.editor.keystrokes.set('Esc', (data, cancel) => {\n            if (this._isUIVisible) {\n                this._hideUI();\n                cancel();\n            }\n        });\n        // Close on click outside of balloon panel element.\n        clickOutsideHandler({\n            emitter: this.formView,\n            activator: () => this._isUIInPanel,\n            contextElements: [this._balloon.view.element],\n            callback: () => this._hideUI()\n        });\n    }\n    /**\r\n\t * Adds the {@link #actionsView} to the {@link #_balloon}.\r\n\t *\r\n\t * @protected\r\n\t */\n    _addActionsView() {\n        if (this._areActionsInPanel) {\n            return;\n        }\n        this._balloon.add({\n            view: this.actionsView,\n            position: this._getBalloonPositionData()\n        });\n    }\n    /**\r\n\t * Adds the {@link #formView} to the {@link #_balloon}.\r\n\t *\r\n\t * @protected\r\n\t */\n    _addFormView() {\n        if (this._isFormInPanel) {\n            return;\n        }\n        const editor = this.editor;\n        const linkCommand = editor.commands.get('link');\n        this._balloon.add({\n            view: this.formView,\n            position: this._getBalloonPositionData()\n        });\n        // Select input when form view is currently visible.\n        if (this._balloon.visibleView === this.formView) {\n            this.formView.urlInputView.select();\n        }\n        // Make sure that each time the panel shows up, the URL field remains in sync with the value of\n        // the command. If the user typed in the input, then canceled the balloon (`urlInputView#value` stays\n        // unaltered) and re-opened it without changing the value of the link command (e.g. because they\n        // clicked the same link), they would see the old value instead of the actual value of the command.\n        // https://github.com/ckeditor/ckeditor5-link/issues/78\n        // https://github.com/ckeditor/ckeditor5-link/issues/123\n        this.formView.urlInputView.inputView.element.value = linkCommand.value || '';\n    }\n    /**\r\n\t * Closes the form view. Decides whether the balloon should be hidden completely or if the action view should be shown. This is\r\n\t * decided upon the link command value (which has a value if the document selection is in the link).\r\n\t *\r\n\t * Additionally, if any {@link module:link/link~LinkConfig#decorators} are defined in the editor configuration, the state of\r\n\t * switch buttons responsible for manual decorator handling is restored.\r\n\t *\r\n\t * @private\r\n\t */\n    _closeFormView() {\n        const linkCommand = this.editor.commands.get('link');\n        // Restore manual decorator states to represent the current model state. This case is important to reset the switch buttons\n        // when the user cancels the editing form.\n        linkCommand.restoreManualDecoratorStates();\n        if (linkCommand.value !== undefined) {\n            this._removeFormView();\n        } else {\n            this._hideUI();\n        }\n    }\n    /**\r\n\t * Removes the {@link #formView} from the {@link #_balloon}.\r\n\t *\r\n\t * @protected\r\n\t */\n    _removeFormView() {\n        if (this._isFormInPanel) {\n            // Blur the input element before removing it from DOM to prevent issues in some browsers.\n            // See https://github.com/ckeditor/ckeditor5/issues/1501.\n            this.formView.saveButtonView.focus();\n            this._balloon.remove(this.formView);\n            // Because the form has an input which has focus, the focus must be brought back\n            // to the editor. Otherwise, it would be lost.\n            this.editor.editing.view.focus();\n        }\n    }\n    /**\r\n\t * Shows the correct UI type. It is either {@link #formView} or {@link #actionsView}.\r\n\t *\r\n\t * @param {Boolean} forceVisible\r\n\t * @private\r\n\t */\n    _showUI(forceVisible = false) {\n        // When there's no link under the selection, go straight to the editing UI.\n        if (!this._getSelectedLinkElement()) {\n            this._addActionsView();\n            // Be sure panel with link is visible.\n            if (forceVisible) {\n                this._balloon.showStack('main');\n            }\n            this._addFormView();\n        }    // If there's a link under the selection...\n        else {\n            // Go to the editing UI if actions are already visible.\n            if (this._areActionsVisible) {\n                this._addFormView();\n            }    // Otherwise display just the actions UI.\n            else {\n                this._addActionsView();\n            }\n            // Be sure panel with link is visible.\n            if (forceVisible) {\n                this._balloon.showStack('main');\n            }\n        }\n        // Begin responding to ui#update once the UI is added.\n        this._startUpdatingUI();\n    }\n    /**\r\n\t * Removes the {@link #formView} from the {@link #_balloon}.\r\n\t *\r\n\t * See {@link #_addFormView}, {@link #_addActionsView}.\r\n\t *\r\n\t * @protected\r\n\t */\n    _hideUI() {\n        if (!this._isUIInPanel) {\n            return;\n        }\n        const editor = this.editor;\n        this.stopListening(editor.ui, 'update');\n        this.stopListening(this._balloon, 'change:visibleView');\n        // Make sure the focus always gets back to the editable _before_ removing the focused form view.\n        // Doing otherwise causes issues in some browsers. See https://github.com/ckeditor/ckeditor5-link/issues/193.\n        editor.editing.view.focus();\n        // Remove form first because it's on top of the stack.\n        this._removeFormView();\n        // Then remove the actions view because it's beneath the form.\n        this._balloon.remove(this.actionsView);\n    }\n    /**\r\n\t * Makes the UI react to the {@link module:core/editor/editorui~EditorUI#event:update} event to\r\n\t * reposition itself when the editor UI should be refreshed.\r\n\t *\r\n\t * See: {@link #_hideUI} to learn when the UI stops reacting to the `update` event.\r\n\t *\r\n\t * @protected\r\n\t */\n    _startUpdatingUI() {\n        const editor = this.editor;\n        const viewDocument = editor.editing.view.document;\n        let prevSelectedLink = this._getSelectedLinkElement();\n        let prevSelectionParent = getSelectionParent();\n        const update = () => {\n            const selectedLink = this._getSelectedLinkElement();\n            const selectionParent = getSelectionParent();\n            // Hide the panel if:\n            //\n            // * the selection went out of the EXISTING link element. E.g. user moved the caret out\n            //   of the link,\n            // * the selection went to a different parent when creating a NEW link. E.g. someone\n            //   else modified the document.\n            // * the selection has expanded (e.g. displaying link actions then pressing SHIFT+Right arrow).\n            //\n            // Note: #_getSelectedLinkElement will return a link for a non-collapsed selection only\n            // when fully selected.\n            if (prevSelectedLink && !selectedLink || !prevSelectedLink && selectionParent !== prevSelectionParent) {\n                this._hideUI();\n            }    // Update the position of the panel when:\n                 //  * link panel is in the visible stack\n                 //  * the selection remains in the original link element,\n                 //  * there was no link element in the first place, i.e. creating a new link\n            else if (this._isUIVisible) {\n                // If still in a link element, simply update the position of the balloon.\n                // If there was no link (e.g. inserting one), the balloon must be moved\n                // to the new position in the editing view (a new native DOM range).\n                this._balloon.updatePosition(this._getBalloonPositionData());\n            }\n            prevSelectedLink = selectedLink;\n            prevSelectionParent = selectionParent;\n        };\n        function getSelectionParent() {\n            return viewDocument.selection.focus.getAncestors().reverse().find(node => node.is('element'));\n        }\n        this.listenTo(editor.ui, 'update', update);\n        this.listenTo(this._balloon, 'change:visibleView', update);\n    }\n    /**\r\n\t * Returns `true` when {@link #formView} is in the {@link #_balloon}.\r\n\t *\r\n\t * @readonly\r\n\t * @protected\r\n\t * @type {Boolean}\r\n\t */\n    get _isFormInPanel() {\n        return this._balloon.hasView(this.formView);\n    }\n    /**\r\n\t * Returns `true` when {@link #actionsView} is in the {@link #_balloon}.\r\n\t *\r\n\t * @readonly\r\n\t * @protected\r\n\t * @type {Boolean}\r\n\t */\n    get _areActionsInPanel() {\n        return this._balloon.hasView(this.actionsView);\n    }\n    /**\r\n\t * Returns `true` when {@link #actionsView} is in the {@link #_balloon} and it is\r\n\t * currently visible.\r\n\t *\r\n\t * @readonly\r\n\t * @protected\r\n\t * @type {Boolean}\r\n\t */\n    get _areActionsVisible() {\n        return this._balloon.visibleView === this.actionsView;\n    }\n    /**\r\n\t * Returns `true` when {@link #actionsView} or {@link #formView} is in the {@link #_balloon}.\r\n\t *\r\n\t * @readonly\r\n\t * @protected\r\n\t * @type {Boolean}\r\n\t */\n    get _isUIInPanel() {\n        return this._isFormInPanel || this._areActionsInPanel;\n    }\n    /**\r\n\t * Returns `true` when {@link #actionsView} or {@link #formView} is in the {@link #_balloon} and it is\r\n\t * currently visible.\r\n\t *\r\n\t * @readonly\r\n\t * @protected\r\n\t * @type {Boolean}\r\n\t */\n    get _isUIVisible() {\n        const visibleView = this._balloon.visibleView;\n        return visibleView == this.formView || this._areActionsVisible;\n    }\n    /**\r\n\t * Returns positioning options for the {@link #_balloon}. They control the way the balloon is attached\r\n\t * to the target element or selection.\r\n\t *\r\n\t * If the selection is collapsed and inside a link element, the panel will be attached to the\r\n\t * entire link element. Otherwise, it will be attached to the selection.\r\n\t *\r\n\t * @private\r\n\t * @returns {module:utils/dom/position~Options}\r\n\t */\n    _getBalloonPositionData() {\n        const view = this.editor.editing.view;\n        const viewDocument = view.document;\n        const targetLink = this._getSelectedLinkElement();\n        const target = targetLink ? // When selection is inside link element, then attach panel to this element.\n        view.domConverter.mapViewToDom(targetLink) : // Otherwise attach panel to the selection.\n        view.domConverter.viewRangeToDom(viewDocument.selection.getFirstRange());\n        return { target };\n    }\n    /**\r\n\t * Returns the link {@link module:engine/view/attributeelement~AttributeElement} under\r\n\t * the {@link module:engine/view/document~Document editing view's} selection or `null`\r\n\t * if there is none.\r\n\t *\r\n\t * **Note**: For a non–collapsed selection, the link element is only returned when **fully**\r\n\t * selected and the **only** element within the selection boundaries.\r\n\t *\r\n\t * @private\r\n\t * @returns {module:engine/view/attributeelement~AttributeElement|null}\r\n\t */\n    _getSelectedLinkElement() {\n        const view = this.editor.editing.view;\n        const selection = view.document.selection;\n        if (selection.isCollapsed) {\n            return findLinkElementAncestor(selection.getFirstPosition());\n        } else {\n            // The range for fully selected link is usually anchored in adjacent text nodes.\n            // Trim it to get closer to the actual link element.\n            const range = selection.getFirstRange().getTrimmed();\n            const startLink = findLinkElementAncestor(range.start);\n            const endLink = findLinkElementAncestor(range.end);\n            if (!startLink || startLink != endLink) {\n                return null;\n            }\n            // Check if the link element is fully selected.\n            if (view.createRangeIn(startLink).getTrimmed().isEqual(range)) {\n                return startLink;\n            } else {\n                return null;\n            }\n        }\n    }\n}\n// Returns a link element if there's one among the ancestors of the provided `Position`.\n//\n// @private\n// @param {module:engine/view/position~Position} View position to analyze.\n// @returns {module:engine/view/attributeelement~AttributeElement|null} Link element at the position or null.\nfunction findLinkElementAncestor(position) {\n    return position.getAncestors().find(ancestor => isLinkElement(ancestor));\n}","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\n/**\r\n * @module link/ui/linkactionsview\r\n */\nimport View from '@ckeditor/ckeditor5-ui/src/view';\nimport ViewCollection from '@ckeditor/ckeditor5-ui/src/viewcollection';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport FocusCycler from '@ckeditor/ckeditor5-ui/src/focuscycler';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\nimport { ensureSafeUrl } from '../utils';\nimport unlinkIcon from '../../theme/icons/unlink.svg';\nimport pencilIcon from '@ckeditor/ckeditor5-core/theme/icons/pencil.svg';\nimport '../../theme/linkactions.css';\n/**\r\n * The link actions view class. This view displays the link preview, allows\r\n * unlinking or editing the link.\r\n *\r\n * @extends module:ui/view~View\r\n */\nexport default class LinkActionsView extends View {\n    /**\r\n\t * @inheritDoc\r\n\t */\n    constructor(locale) {\n        super(locale);\n        const t = locale.t;\n        /**\r\n\t\t * Tracks information about DOM focus in the actions.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:utils/focustracker~FocusTracker}\r\n\t\t */\n        this.focusTracker = new FocusTracker();\n        /**\r\n\t\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\r\n\t\t */\n        this.keystrokes = new KeystrokeHandler();\n        /**\r\n\t\t * The href preview view.\r\n\t\t *\r\n\t\t * @member {module:ui/view~View}\r\n\t\t */\n        this.previewButtonView = this._createPreviewButton();\n        /**\r\n\t\t * The unlink button view.\r\n\t\t *\r\n\t\t * @member {module:ui/button/buttonview~ButtonView}\r\n\t\t */\n        this.unlinkButtonView = this._createButton(t('l'), unlinkIcon, 'unlink');\n        /**\r\n\t\t * The edit link button view.\r\n\t\t *\r\n\t\t * @member {module:ui/button/buttonview~ButtonView}\r\n\t\t */\n        this.editButtonView = this._createButton(t('m'), pencilIcon, 'edit');\n        /**\r\n\t\t * The value of the \"href\" attribute of the link to use in the {@link #previewButtonView}.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @member {String}\r\n\t\t */\n        this.set('href');\n        /**\r\n\t\t * A collection of views that can be focused in the view.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @protected\r\n\t\t * @member {module:ui/viewcollection~ViewCollection}\r\n\t\t */\n        this._focusables = new ViewCollection();\n        /**\r\n\t\t * Helps cycling over {@link #_focusables} in the view.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @protected\r\n\t\t * @member {module:ui/focuscycler~FocusCycler}\r\n\t\t */\n        this._focusCycler = new FocusCycler({\n            focusables: this._focusables,\n            focusTracker: this.focusTracker,\n            keystrokeHandler: this.keystrokes,\n            actions: {\n                // Navigate fields backwards using the Shift + Tab keystroke.\n                focusPrevious: 'shift + tab',\n                // Navigate fields forwards using the Tab key.\n                focusNext: 'tab'\n            }\n        });\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-link-actions'\n                ],\n                // https://github.com/ckeditor/ckeditor5-link/issues/90\n                tabindex: '-1'\n            },\n            children: [\n                this.previewButtonView,\n                this.editButtonView,\n                this.unlinkButtonView\n            ]\n        });\n    }\n    /**\r\n\t * @inheritDoc\r\n\t */\n    render() {\n        super.render();\n        const childViews = [\n            this.previewButtonView,\n            this.editButtonView,\n            this.unlinkButtonView\n        ];\n        childViews.forEach(v => {\n            // Register the view as focusable.\n            this._focusables.add(v);\n            // Register the view in the focus tracker.\n            this.focusTracker.add(v.element);\n        });\n        // Start listening for the keystrokes coming from #element.\n        this.keystrokes.listenTo(this.element);\n    }\n    /**\r\n\t * Focuses the fist {@link #_focusables} in the actions.\r\n\t */\n    focus() {\n        this._focusCycler.focusFirst();\n    }\n    /**\r\n\t * Creates a button view.\r\n\t *\r\n\t * @private\r\n\t * @param {String} label The button label.\r\n\t * @param {String} icon The button icon.\r\n\t * @param {String} [eventName] An event name that the `ButtonView#execute` event will be delegated to.\r\n\t * @returns {module:ui/button/buttonview~ButtonView} The button view instance.\r\n\t */\n    _createButton(label, icon, eventName) {\n        const button = new ButtonView(this.locale);\n        button.set({\n            label,\n            icon,\n            tooltip: true\n        });\n        button.delegate('execute').to(this, eventName);\n        return button;\n    }\n    /**\r\n\t * Creates a link href preview button.\r\n\t *\r\n\t * @private\r\n\t * @returns {module:ui/button/buttonview~ButtonView} The button view instance.\r\n\t */\n    _createPreviewButton() {\n        const button = new ButtonView(this.locale);\n        const bind = this.bindTemplate;\n        const t = this.t;\n        button.set({\n            withText: true,\n            tooltip: t('n')\n        });\n        button.extendTemplate({\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-link-actions__preview'\n                ],\n                href: bind.to('href', href => href && ensureSafeUrl(href)),\n                target: '_blank',\n                rel: 'noopener noreferrer'\n            }\n        });\n        button.bind('label').to(this, 'href', href => {\n            return href || t('o');\n        });\n        button.bind('isEnabled').to(this, 'href', href => !!href);\n        button.template.tag = 'a';\n        button.template.eventListeners = {};\n        return button;\n    }\n}    /**\r\n * Fired when the {@link #editButtonView} is clicked.\r\n *\r\n * @event edit\r\n */\n     /**\r\n * Fired when the {@link #unlinkButtonView} is clicked.\r\n *\r\n * @event unlink\r\n */","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\n/**\r\n * @module link/ui/linkformview\r\n */\nimport View from '@ckeditor/ckeditor5-ui/src/view';\nimport ViewCollection from '@ckeditor/ckeditor5-ui/src/viewcollection';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport SwitchButtonView from '@ckeditor/ckeditor5-ui/src/button/switchbuttonview';\nimport LabeledInputView from '@ckeditor/ckeditor5-ui/src/labeledinput/labeledinputview';\nimport InputTextView from '@ckeditor/ckeditor5-ui/src/inputtext/inputtextview';\nimport submitHandler from '@ckeditor/ckeditor5-ui/src/bindings/submithandler';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport FocusCycler from '@ckeditor/ckeditor5-ui/src/focuscycler';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\nimport checkIcon from '@ckeditor/ckeditor5-core/theme/icons/check.svg';\nimport cancelIcon from '@ckeditor/ckeditor5-core/theme/icons/cancel.svg';\nimport '../../theme/linkform.css';\n/**\r\n * The link form view controller class.\r\n *\r\n * See {@link module:link/ui/linkformview~LinkFormView}.\r\n *\r\n * @extends module:ui/view~View\r\n */\nexport default class LinkFormView extends View {\n    /**\r\n\t * Creates an instance of the {@link module:link/ui/linkformview~LinkFormView} class.\r\n\t *\r\n\t * Also see {@link #render}.\r\n\t *\r\n\t * @param {module:utils/locale~Locale} [locale] The localization services instance.\r\n\t * @param {module:utils/collection~Collection} [manualDecorators] Reference to manual decorators in\r\n\t * {@link module:link/linkcommand~LinkCommand#manualDecorators}.\r\n\t */\n    constructor(locale, manualDecorators = []) {\n        super(locale);\n        const t = locale.t;\n        /**\r\n\t\t * Tracks information about DOM focus in the form.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:utils/focustracker~FocusTracker}\r\n\t\t */\n        this.focusTracker = new FocusTracker();\n        /**\r\n\t\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\r\n\t\t */\n        this.keystrokes = new KeystrokeHandler();\n        /**\r\n\t\t * The URL input view.\r\n\t\t *\r\n\t\t * @member {module:ui/labeledinput/labeledinputview~LabeledInputView}\r\n\t\t */\n        this.urlInputView = this._createUrlInput();\n        /**\r\n\t\t * The Save button view.\r\n\t\t *\r\n\t\t * @member {module:ui/button/buttonview~ButtonView}\r\n\t\t */\n        this.saveButtonView = this._createButton(t('i'), checkIcon, 'ck-button-save');\n        this.saveButtonView.type = 'submit';\n        /**\r\n\t\t * The Cancel button view.\r\n\t\t *\r\n\t\t * @member {module:ui/button/buttonview~ButtonView}\r\n\t\t */\n        this.cancelButtonView = this._createButton(t('j'), cancelIcon, 'ck-button-cancel', 'cancel');\n        /**\r\n\t\t * A collection of {@link module:ui/button/switchbuttonview~SwitchButtonView},\r\n\t\t * which corresponds to {@link module:link/linkcommand~LinkCommand#manualDecorators manual decorators}\r\n\t\t * configured in the editor.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @readonly\r\n\t\t * @type {module:ui/viewcollection~ViewCollection}\r\n\t\t */\n        this._manualDecoratorSwitches = this._createManualDecoratorSwitches(manualDecorators);\n        /**\r\n\t\t * A collection of child views in the form.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @type {module:ui/viewcollection~ViewCollection}\r\n\t\t */\n        this.children = this._createFormChildren(manualDecorators);\n        /**\r\n\t\t * A collection of views that can be focused in the form.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @protected\r\n\t\t * @member {module:ui/viewcollection~ViewCollection}\r\n\t\t */\n        this._focusables = new ViewCollection();\n        /**\r\n\t\t * Helps cycling over {@link #_focusables} in the form.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @protected\r\n\t\t * @member {module:ui/focuscycler~FocusCycler}\r\n\t\t */\n        this._focusCycler = new FocusCycler({\n            focusables: this._focusables,\n            focusTracker: this.focusTracker,\n            keystrokeHandler: this.keystrokes,\n            actions: {\n                // Navigate form fields backwards using the Shift + Tab keystroke.\n                focusPrevious: 'shift + tab',\n                // Navigate form fields forwards using the Tab key.\n                focusNext: 'tab'\n            }\n        });\n        const classList = [\n            'ck',\n            'ck-link-form'\n        ];\n        if (manualDecorators.length) {\n            classList.push('ck-link-form_layout-vertical');\n        }\n        this.setTemplate({\n            tag: 'form',\n            attributes: {\n                class: classList,\n                // https://github.com/ckeditor/ckeditor5-link/issues/90\n                tabindex: '-1'\n            },\n            children: this.children\n        });\n    }\n    /**\r\n\t * Obtains the state of the {@link module:ui/button/switchbuttonview~SwitchButtonView switch buttons} representing\r\n\t * {@link module:link/linkcommand~LinkCommand#manualDecorators manual link decorators}\r\n\t * in the {@link module:link/ui/linkformview~LinkFormView}.\r\n\t *\r\n\t * @returns {Object.<String,Boolean>} Key-value pairs, where the key is the name of the decorator and the value is\r\n\t * its state.\r\n\t */\n    getDecoratorSwitchesState() {\n        return Array.from(this._manualDecoratorSwitches).reduce((accumulator, switchButton) => {\n            accumulator[switchButton.name] = switchButton.isOn;\n            return accumulator;\n        }, {});\n    }\n    /**\r\n\t * @inheritDoc\r\n\t */\n    render() {\n        super.render();\n        submitHandler({ view: this });\n        const childViews = [\n            this.urlInputView,\n            ...this._manualDecoratorSwitches,\n            this.saveButtonView,\n            this.cancelButtonView\n        ];\n        childViews.forEach(v => {\n            // Register the view as focusable.\n            this._focusables.add(v);\n            // Register the view in the focus tracker.\n            this.focusTracker.add(v.element);\n        });\n        // Start listening for the keystrokes coming from #element.\n        this.keystrokes.listenTo(this.element);\n    }\n    /**\r\n\t * Focuses the fist {@link #_focusables} in the form.\r\n\t */\n    focus() {\n        this._focusCycler.focusFirst();\n    }\n    /**\r\n\t * Creates a labeled input view.\r\n\t *\r\n\t * @private\r\n\t * @returns {module:ui/labeledinput/labeledinputview~LabeledInputView} Labeled input view instance.\r\n\t */\n    _createUrlInput() {\n        const t = this.locale.t;\n        const labeledInput = new LabeledInputView(this.locale, InputTextView);\n        labeledInput.label = t('k');\n        labeledInput.inputView.placeholder = 'https://example.com';\n        return labeledInput;\n    }\n    /**\r\n\t * Creates a button view.\r\n\t *\r\n\t * @private\r\n\t * @param {String} label The button label.\r\n\t * @param {String} icon The button icon.\r\n\t * @param {String} className The additional button CSS class name.\r\n\t * @param {String} [eventName] An event name that the `ButtonView#execute` event will be delegated to.\r\n\t * @returns {module:ui/button/buttonview~ButtonView} The button view instance.\r\n\t */\n    _createButton(label, icon, className, eventName) {\n        const button = new ButtonView(this.locale);\n        button.set({\n            label,\n            icon,\n            tooltip: true\n        });\n        button.extendTemplate({ attributes: { class: className } });\n        if (eventName) {\n            button.delegate('execute').to(this, eventName);\n        }\n        return button;\n    }\n    /**\r\n\t * Populates {@link module:ui/viewcollection~ViewCollection} of {@link module:ui/button/switchbuttonview~SwitchButtonView}\r\n\t * made based on {@link module:link/linkcommand~LinkCommand#manualDecorators}.\r\n\t *\r\n\t * @private\r\n\t * @param {module:utils/collection~Collection} manualDecorators A reference to the\r\n\t * collection of manual decorators stored in the link command.\r\n\t * @returns {module:ui/viewcollection~ViewCollection} of switch buttons.\r\n\t */\n    _createManualDecoratorSwitches(manualDecorators) {\n        const switches = this.createCollection();\n        for (const manualDecorator of manualDecorators) {\n            const switchButton = new SwitchButtonView(this.locale);\n            switchButton.set({\n                name: manualDecorator.id,\n                label: manualDecorator.label,\n                withText: true\n            });\n            switchButton.bind('isOn').to(manualDecorator, 'value');\n            switchButton.on('execute', () => {\n                manualDecorator.set('value', !switchButton.isOn);\n            });\n            switches.add(switchButton);\n        }\n        return switches;\n    }\n    /**\r\n\t * Populates the {@link #children} collection of the form.\r\n\t *\r\n\t * If {@link module:link/linkcommand~LinkCommand#manualDecorators manual decorators} are configured in the editor, it creates an\r\n\t * additional `View` wrapping all {@link #_manualDecoratorSwitches} switch buttons corresponding\r\n\t * to these decorators.\r\n\t *\r\n\t * @private\r\n\t * @param {module:utils/collection~Collection} manualDecorators A reference to\r\n\t * the collection of manual decorators stored in the link command.\r\n\t * @returns {module:ui/viewcollection~ViewCollection} The children of link form view.\r\n\t */\n    _createFormChildren(manualDecorators) {\n        const children = this.createCollection();\n        children.add(this.urlInputView);\n        if (manualDecorators.length) {\n            const additionalButtonsView = new View();\n            additionalButtonsView.setTemplate({\n                tag: 'ul',\n                children: this._manualDecoratorSwitches.map(switchButton => ({\n                    tag: 'li',\n                    children: [switchButton],\n                    attributes: {\n                        class: [\n                            'ck',\n                            'ck-list__item'\n                        ]\n                    }\n                })),\n                attributes: {\n                    class: [\n                        'ck',\n                        'ck-reset',\n                        'ck-list'\n                    ]\n                }\n            });\n            children.add(additionalButtonsView);\n        }\n        children.add(this.saveButtonView);\n        children.add(this.cancelButtonView);\n        return children;\n    }\n}    /**\r\n * Fired when the form view is submitted (when one of the children triggered the submit event),\r\n * for example with a click on {@link #saveButtonView}.\r\n *\r\n * @event submit\r\n */\n     /**\r\n * Fired when the form view is canceled, for example with a click on {@link #cancelButtonView}.\r\n *\r\n * @event cancel\r\n */","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module link/unlinkcommand\r\n */\r\n\r\nimport Command from '@ckeditor/ckeditor5-core/src/command';\r\nimport findLinkRange from './findlinkrange';\r\n\r\n/**\r\n * The unlink command. It is used by the {@link module:link/link~Link link plugin}.\r\n *\r\n * @extends module:core/command~Command\r\n */\r\nexport default class UnlinkCommand extends Command {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\trefresh() {\r\n\t\tthis.isEnabled = this.editor.model.document.selection.hasAttribute( 'linkHref' );\r\n\t}\r\n\r\n\t/**\r\n\t * Executes the command.\r\n\t *\r\n\t * When the selection is collapsed, it removes the `linkHref` attribute from each node with the same `linkHref` attribute value.\r\n\t * When the selection is non-collapsed, it removes the `linkHref` attribute from each node in selected ranges.\r\n\t *\r\n\t * # Decorators\r\n\t *\r\n\t * If {@link module:link/link~LinkConfig#decorators `config.link.decorators`} is specified,\r\n\t * all configured decorators are removed together with the `linkHref` attribute.\r\n\t *\r\n\t * @fires execute\r\n\t */\r\n\texecute() {\r\n\t\tconst editor = this.editor;\r\n\t\tconst model = this.editor.model;\r\n\t\tconst selection = model.document.selection;\r\n\t\tconst linkCommand = editor.commands.get( 'link' );\r\n\r\n\t\tmodel.change( writer => {\r\n\t\t\t// Get ranges to unlink.\r\n\t\t\tconst rangesToUnlink = selection.isCollapsed ?\r\n\t\t\t\t[ findLinkRange( selection.getFirstPosition(), selection.getAttribute( 'linkHref' ), model ) ] : selection.getRanges();\r\n\r\n\t\t\t// Remove `linkHref` attribute from specified ranges.\r\n\t\t\tfor ( const range of rangesToUnlink ) {\r\n\t\t\t\twriter.removeAttribute( 'linkHref', range );\r\n\t\t\t\t// If there are registered custom attributes, then remove them during unlink.\r\n\t\t\t\tif ( linkCommand ) {\r\n\t\t\t\t\tfor ( const manualDecorator of linkCommand.manualDecorators ) {\r\n\t\t\t\t\t\twriter.removeAttribute( manualDecorator.id, range );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\n/**\r\n * @module link/utils\r\n */\nimport { upperFirst } from 'lodash-es';\nconst ATTRIBUTE_WHITESPACES = /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205f\\u3000]/g;\n// eslint-disable-line no-control-regex\nconst SAFE_URL = /^(?:(?:https?|ftps?|mailto):|[^a-z]|[a-z+.-]+(?:[^a-z+.:-]|$))/i;\n/**\r\n * Returns `true` if a given view node is the link element.\r\n *\r\n * @param {module:engine/view/node~Node} node\r\n * @returns {Boolean}\r\n */\nexport function isLinkElement(node) {\n    return node.is('attributeElement') && !!node.getCustomProperty('link');\n}\n/**\r\n * Creates link {@link module:engine/view/attributeelement~AttributeElement} with the provided `href` attribute.\r\n *\r\n * @param {String} href\r\n * @returns {module:engine/view/attributeelement~AttributeElement}\r\n */\nexport function createLinkElement(href, writer) {\n    // Priority 5 - https://github.com/ckeditor/ckeditor5-link/issues/121.\n    const linkElement = writer.createAttributeElement('a', { href }, { priority: 5 });\n    writer.setCustomProperty('link', true, linkElement);\n    return linkElement;\n}\n/**\r\n * Returns a safe URL based on a given value.\r\n *\r\n * A URL is considered safe if it is safe for the user (does not contain any malicious code).\r\n *\r\n * If a URL is considered unsafe, a simple `\"#\"` is returned.\r\n *\r\n * @protected\r\n * @param {*} url\r\n * @returns {String} Safe URL.\r\n */\nexport function ensureSafeUrl(url) {\n    url = String(url);\n    return isSafeUrl(url) ? url : '#';\n}\n// Checks whether the given URL is safe for the user (does not contain any malicious code).\n//\n// @param {String} url URL to check.\nfunction isSafeUrl(url) {\n    const normalizedUrl = url.replace(ATTRIBUTE_WHITESPACES, '');\n    return normalizedUrl.match(SAFE_URL);\n}\n/**\r\n * Returns the {@link module:link/link~LinkConfig#decorators `config.link.decorators`} configuration processed\r\n * to respect the locale of the editor, i.e. to display the {@link module:link/link~LinkDecoratorManualDefinition label}\r\n * in the correct language.\r\n *\r\n * **Note**: Only the few most commonly used labels are translated automatically. Other labels should be manually\r\n * translated in the {@link module:link/link~LinkConfig#decorators `config.link.decorators`} configuration.\r\n *\r\n * @param {module:utils/locale~Locale#t} t shorthand for {@link module:utils/locale~Locale#t Locale#t}\r\n * @param {Array.<module:link/link~LinkDecoratorDefinition>} The decorator reference\r\n * where the label values should be localized.\r\n * @returns {Array.<module:link/link~LinkDecoratorDefinition>}\r\n */\nexport function getLocalizedDecorators(t, decorators) {\n    const localizedDecoratorsLabels = {\n        'Open in a new tab': t('g'),\n        'Downloadable': t('h')\n    };\n    decorators.forEach(decorator => {\n        if (decorator.label && localizedDecoratorsLabels[decorator.label]) {\n            decorator.label = localizedDecoratorsLabels[decorator.label];\n        }\n        return decorator;\n    });\n    return decorators;\n}\n/**\r\n * Converts an object with defined decorators to a normalized array of decorators. The `id` key is added for each decorator and\r\n * is used as the attribute's name in the model.\r\n *\r\n * @param {Object.<String, module:link/link~LinkDecoratorDefinition>} decorators\r\n * @returns {Array.<module:link/link~LinkDecoratorDefinition>}\r\n */\nexport function normalizeDecorators(decorators) {\n    const retArray = [];\n    if (decorators) {\n        for (const [key, value] of Object.entries(decorators)) {\n            const decorator = Object.assign({}, value, { id: `link${ upperFirst(key) }` });\n            retArray.push(decorator);\n        }\n    }\n    return retArray;\n}","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md.\r\n */\r\n\r\n/**\r\n * @module link/utils\r\n */\r\n\r\n/**\r\n * Helper class that ties together all {@link module:link/link~LinkDecoratorAutomaticDefinition} and provides\r\n * a {@link module:engine/conversion/downcasthelpers~DowncastHelpers#attributeToElement downcast dispatcher} for them.\r\n */\r\nexport default class AutomaticDecorators {\r\n\tconstructor() {\r\n\t\t/**\r\n\t\t * Stores the definition of {@link module:link/link~LinkDecoratorAutomaticDefinition automatic decorators}.\r\n\t\t * This data is used as a source for a downcast dispatcher to create a proper conversion to output data.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {Set}\r\n\t\t */\r\n\t\tthis._definitions = new Set();\r\n\t}\r\n\r\n\t/**\r\n\t * Gives information about the number of decorators stored in the {@link module:link/utils~AutomaticDecorators} instance.\r\n\t *\r\n\t * @readonly\r\n\t * @protected\r\n\t * @type {Number}\r\n\t */\r\n\tget length() {\r\n\t\treturn this._definitions.size;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds automatic decorator objects or an array with them to be used during downcasting.\r\n\t *\r\n\t * @param {module:link/link~LinkDecoratorAutomaticDefinition|Array.<module:link/link~LinkDecoratorAutomaticDefinition>} item\r\n\t * A configuration object of automatic rules for decorating links. It might also be an array of such objects.\r\n\t */\r\n\tadd( item ) {\r\n\t\tif ( Array.isArray( item ) ) {\r\n\t\t\titem.forEach( item => this._definitions.add( item ) );\r\n\t\t} else {\r\n\t\t\tthis._definitions.add( item );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Provides the conversion helper used in the {@link module:engine/conversion/downcasthelpers~DowncastHelpers#add} method.\r\n\t *\r\n\t * @returns {Function} A dispatcher function used as conversion helper\r\n\t * in {@link module:engine/conversion/downcasthelpers~DowncastHelpers#add}.\r\n\t */\r\n\tgetDispatcher() {\r\n\t\treturn dispatcher => {\r\n\t\t\tdispatcher.on( 'attribute:linkHref', ( evt, data, conversionApi ) => {\r\n\t\t\t\t// There is only test as this behavior decorates links and\r\n\t\t\t\t// it is run before dispatcher which actually consumes this node.\r\n\t\t\t\t// This allows on writing own dispatcher with highest priority,\r\n\t\t\t\t// which blocks both native converter and this additional decoration.\r\n\t\t\t\tif ( !conversionApi.consumable.test( data.item, 'attribute:linkHref' ) ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tconst viewWriter = conversionApi.writer;\r\n\t\t\t\tconst viewSelection = viewWriter.document.selection;\r\n\r\n\t\t\t\tfor ( const item of this._definitions ) {\r\n\t\t\t\t\tconst viewElement = viewWriter.createAttributeElement( 'a', item.attributes, {\r\n\t\t\t\t\t\tpriority: 5\r\n\t\t\t\t\t} );\r\n\t\t\t\t\tviewWriter.setCustomProperty( 'link', true, viewElement );\r\n\t\t\t\t\tif ( item.callback( data.attributeNewValue ) ) {\r\n\t\t\t\t\t\tif ( data.item.is( 'selection' ) ) {\r\n\t\t\t\t\t\t\tviewWriter.wrap( viewSelection.getFirstRange(), viewElement );\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tviewWriter.wrap( conversionApi.mapper.toViewRange( data.range ), viewElement );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tviewWriter.unwrap( conversionApi.mapper.toViewRange( data.range ), viewElement );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, { priority: 'high' } );\r\n\t\t};\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module link/utils\r\n */\r\n\r\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\r\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\r\n\r\n/**\r\n * Helper class that stores manual decorators with observable {@link module:link/utils~ManualDecorator#value}\r\n * to support integration with the UI state. An instance of this class is a model with the state of individual manual decorators.\r\n * These decorators are kept as collections in {@link module:link/linkcommand~LinkCommand#manualDecorators}.\r\n *\r\n * @mixes module:utils/observablemixin~ObservableMixin\r\n */\r\nexport default class ManualDecorator {\r\n\t/**\r\n\t * Creates a new instance of {@link module:link/utils~ManualDecorator}.\r\n\t *\r\n\t * @param {Object} config\r\n\t * @param {String} config.id The name of the attribute used in the model that represents a given manual decorator.\r\n\t * For example: `'linkIsExternal'`.\r\n\t * @param {String} config.label The label used in the user interface to toggle the manual decorator.\r\n\t * @param {Object} config.attributes A set of attributes added to output data when the decorator is active for a specific link.\r\n\t * Attributes should keep the format of attributes defined in {@link module:engine/view/elementdefinition~ElementDefinition}.\r\n\t */\r\n\tconstructor( { id, label, attributes } ) {\r\n\t\t/**\r\n\t\t * An ID of a manual decorator which is the name of the attribute in the model, for example: 'linkManualDecorator0'.\r\n\t\t *\r\n\t\t * @type {String}\r\n\t\t */\r\n\t\tthis.id = id;\r\n\r\n\t\t/**\r\n\t\t * The value of the current manual decorator. It reflects its state from the UI.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @member {Boolean} module:link/utils~ManualDecorator#value\r\n\t\t */\r\n\t\tthis.set( 'value' );\r\n\r\n\t\t/**\r\n\t\t * The label used in the user interface to toggle the manual decorator.\r\n\t\t *\r\n\t\t * @type {String}\r\n\t\t */\r\n\t\tthis.label = label;\r\n\r\n\t\t/**\r\n\t\t * A set of attributes added to downcasted data when the decorator is activated for a specific link.\r\n\t\t * Attributes should be added in a form of attributes defined in {@link module:engine/view/elementdefinition~ElementDefinition}.\r\n\t\t *\r\n\t\t * @type {Object}\r\n\t\t */\r\n\t\tthis.attributes = attributes;\r\n\t}\r\n}\r\n\r\nmix( ManualDecorator, ObservableMixin );\r\n","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M11.077 15l.991-1.416a.75.75 0 1 1 1.229.86l-1.148 1.64a.748.748 0 0 1-.217.206 5.251 5.251 0 0 1-8.503-5.955.741.741 0 0 1 .12-.274l1.147-1.639a.75.75 0 1 1 1.228.86L4.933 10.7l.006.003a3.75 3.75 0 0 0 6.132 4.294l.006.004zm5.494-5.335a.748.748 0 0 1-.12.274l-1.147 1.639a.75.75 0 1 1-1.228-.86l.86-1.23a3.75 3.75 0 0 0-6.144-4.301l-.86 1.229a.75.75 0 0 1-1.229-.86l1.148-1.64a.748.748 0 0 1 .217-.206 5.251 5.251 0 0 1 8.503 5.955zm-4.563-2.532a.75.75 0 0 1 .184 1.045l-3.155 4.505a.75.75 0 1 1-1.229-.86l3.155-4.506a.75.75 0 0 1 1.045-.184z\\\"/></svg>\"","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M11.077 15l.991-1.416a.75.75 0 1 1 1.229.86l-1.148 1.64a.748.748 0 0 1-.217.206 5.251 5.251 0 0 1-8.503-5.955.741.741 0 0 1 .12-.274l1.147-1.639a.75.75 0 1 1 1.228.86L4.933 10.7l.006.003a3.75 3.75 0 0 0 6.132 4.294l.006.004zm5.494-5.335a.748.748 0 0 1-.12.274l-1.147 1.639a.75.75 0 1 1-1.228-.86l.86-1.23a3.75 3.75 0 0 0-6.144-4.301l-.86 1.229a.75.75 0 0 1-1.229-.86l1.148-1.64a.748.748 0 0 1 .217-.206 5.251 5.251 0 0 1 8.503 5.955zm-4.563-2.532a.75.75 0 0 1 .184 1.045l-3.155 4.505a.75.75 0 1 1-1.229-.86l3.155-4.506a.75.75 0 0 1 1.045-.184zm4.919 10.562l-1.414 1.414a.75.75 0 1 1-1.06-1.06l1.414-1.415-1.415-1.414a.75.75 0 0 1 1.061-1.06l1.414 1.414 1.414-1.415a.75.75 0 0 1 1.061 1.061l-1.414 1.414 1.414 1.415a.75.75 0 0 1-1.06 1.06l-1.415-1.414z\\\"/></svg>\"","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./link.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./linkactions.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./linkform.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module paragraph/paragraph\r\n */\r\n\r\nimport ParagraphCommand from './paragraphcommand';\r\n\r\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\r\n\r\n/**\r\n * The paragraph feature for the editor.\r\n *\r\n * It introduces the `<paragraph>` element in the model which renders as a `<p>` element in the DOM and data.\r\n *\r\n * @extends module:core/plugin~Plugin\r\n */\r\nexport default class Paragraph extends Plugin {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get pluginName() {\r\n\t\treturn 'Paragraph';\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tinit() {\r\n\t\tconst editor = this.editor;\r\n\t\tconst model = editor.model;\r\n\t\tconst data = editor.data;\r\n\r\n\t\teditor.commands.add( 'paragraph', new ParagraphCommand( editor ) );\r\n\r\n\t\t// Schema.\r\n\t\tmodel.schema.register( 'paragraph', { inheritAllFrom: '$block' } );\r\n\r\n\t\teditor.conversion.elementToElement( { model: 'paragraph', view: 'p' } );\r\n\r\n\t\t// Content autoparagraphing. --------------------------------------------------\r\n\r\n\t\t// Handles element which has not been converted by any plugin and checks if it would be converted if\r\n\t\t// we wrap it in a paragraph or change it to a paragraph.\r\n\t\teditor.conversion.for( 'upcast' ).elementToElement( {\r\n\t\t\tmodel: ( viewElement, modelWriter ) => {\r\n\t\t\t\tif ( !Paragraph.paragraphLikeElements.has( viewElement.name ) ) {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Do not auto-paragraph empty elements.\r\n\t\t\t\tif ( viewElement.isEmpty ) {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn modelWriter.createElement( 'paragraph' );\r\n\t\t\t},\r\n\t\t\tconverterPriority: 'low'\r\n\t\t} );\r\n\r\n\t\tdata.upcastDispatcher.on( 'element', ( evt, data, conversionApi ) => {\r\n\t\t\t// Do not try auto-paragraphing if the element was already converted.\r\n\t\t\tif ( !conversionApi.consumable.test( data.viewItem, { name: data.viewItem.name } ) ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// If the element is not paragraph-like try wrapping it in a paragraph.\r\n\t\t\tif ( isParagraphable( data.viewItem, data.modelCursor, conversionApi.schema ) ) {\r\n\t\t\t\tObject.assign( data, wrapInParagraph( data.viewItem, data.modelCursor, conversionApi ) );\r\n\t\t\t}\r\n\t\t}, { priority: 'low' } );\r\n\r\n\t\t// Handles not converted text nodes and checks if would be converted if we wraps then by a paragraph.\r\n\t\tdata.upcastDispatcher.on( 'text', ( evt, data, conversionApi ) => {\r\n\t\t\t// When node is already converted then do nothing.\r\n\t\t\tif ( data.modelRange ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif ( isParagraphable( data.viewItem, data.modelCursor, conversionApi.schema ) ) {\r\n\t\t\t\tObject.assign( data, wrapInParagraph( data.viewItem, data.modelCursor, conversionApi ) );\r\n\t\t\t}\r\n\t\t}, { priority: 'lowest' } );\r\n\r\n\t\t// Empty roots autoparagraphing. -----------------------------------------------\r\n\r\n\t\t// Post-fixer which takes care of adding empty paragraph elements to empty roots.\r\n\t\t// Besides fixing content on #changesDone we also need to handle editor.data#ready event because\r\n\t\t// if initial data is empty or setData() wasn't even called there will be no #change fired.\r\n\t\tmodel.document.registerPostFixer( writer => this._autoparagraphEmptyRoots( writer ) );\r\n\r\n\t\teditor.data.on( 'ready', () => {\r\n\t\t\tmodel.enqueueChange( 'transparent', writer => this._autoparagraphEmptyRoots( writer ) );\r\n\t\t}, { priority: 'lowest' } );\r\n\t}\r\n\r\n\t/**\r\n\t * Fixes all empty roots.\r\n\t *\r\n\t * @private\r\n\t * @returns {Boolean} `true` if any change has been applied, `false` otherwise.\r\n\t */\r\n\t_autoparagraphEmptyRoots( writer ) {\r\n\t\tconst model = this.editor.model;\r\n\r\n\t\tfor ( const rootName of model.document.getRootNames() ) {\r\n\t\t\tconst root = model.document.getRoot( rootName );\r\n\r\n\t\t\tif ( root.isEmpty && root.rootName != '$graveyard' ) {\r\n\t\t\t\t// If paragraph element is allowed in the root, create paragraph element.\r\n\t\t\t\tif ( model.schema.checkChild( root, 'paragraph' ) ) {\r\n\t\t\t\t\twriter.insertElement( 'paragraph', root );\r\n\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * A list of element names which should be treated by the autoparagraphing algorithms as\r\n * paragraph-like. This means that e.g. the following content:\r\n *\r\n *\t\t<h1>Foo</h1>\r\n *\t\t<table>\r\n *\t\t\t<tr>\r\n *\t\t\t\t<td>X</td>\r\n *\t\t\t\t<td>\r\n *\t\t\t\t\t<ul>\r\n *\t\t\t\t\t\t<li>Y</li>\r\n *\t\t\t\t\t\t<li>Z</li>\r\n *\t\t\t\t\t</ul>\r\n *\t\t\t\t</td>\r\n *\t\t\t</tr>\r\n *\t\t</table>\r\n *\r\n * contains five paragraph-like elements: `<h1>`, two `<td>`s and two `<li>`s.\r\n * Hence, if none of the features is going to convert those elements the above content will be automatically handled\r\n * by the paragraph feature and converted to:\r\n *\r\n *\t\t<p>Foo</p>\r\n *\t\t<p>X</p>\r\n *\t\t<p>Y</p>\r\n *\t\t<p>Z</p>\r\n *\r\n * Note: The `<td>` containing two `<li>` elements was ignored as the innermost paragraph-like elements\r\n * have a priority upon conversion.\r\n *\r\n * @member {Set.<String>} module:paragraph/paragraph~Paragraph.paragraphLikeElements\r\n */\r\nParagraph.paragraphLikeElements = new Set( [\r\n\t'blockquote',\r\n\t'dd',\r\n\t'div',\r\n\t'dt',\r\n\t'h1',\r\n\t'h2',\r\n\t'h3',\r\n\t'h4',\r\n\t'h5',\r\n\t'h6',\r\n\t'li',\r\n\t'p',\r\n\t'td'\r\n] );\r\n\r\nfunction wrapInParagraph( input, position, conversionApi ) {\r\n\tconst paragraph = conversionApi.writer.createElement( 'paragraph' );\r\n\r\n\tconversionApi.writer.insert( paragraph, position );\r\n\treturn conversionApi.convertItem( input, conversionApi.writer.createPositionAt( paragraph, 0 ) );\r\n}\r\n\r\nfunction isParagraphable( node, position, schema ) {\r\n\tconst context = schema.createContext( position );\r\n\r\n\t// When paragraph is allowed in this context...\r\n\tif ( !schema.checkChild( context, 'paragraph' ) ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// And a node would be allowed in this paragraph...\r\n\tif ( !schema.checkChild( context.push( 'paragraph' ), node ) ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn true;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module paragraph/paragraphcommand\r\n */\r\n\r\nimport Command from '@ckeditor/ckeditor5-core/src/command';\r\nimport first from '@ckeditor/ckeditor5-utils/src/first';\r\n\r\n/**\r\n * The paragraph command.\r\n *\r\n * @extends module:core/command~Command\r\n */\r\nexport default class ParagraphCommand extends Command {\r\n\t/**\r\n\t * The value of the command. Indicates whether the selection start is placed in a paragraph.\r\n\t *\r\n\t * @readonly\r\n\t * @observable\r\n\t * @member {Boolean} #value\r\n\t */\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\trefresh() {\r\n\t\tconst model = this.editor.model;\r\n\t\tconst document = model.document;\r\n\t\tconst block = first( document.selection.getSelectedBlocks() );\r\n\r\n\t\tthis.value = !!block && block.is( 'paragraph' );\r\n\t\tthis.isEnabled = !!block && checkCanBecomeParagraph( block, model.schema );\r\n\t}\r\n\r\n\t/**\r\n\t * Executes the command. All the blocks (see {@link module:engine/model/schema~Schema}) in the selection\r\n\t * will be turned to paragraphs.\r\n\t *\r\n\t * @fires execute\r\n\t * @param {Object} [options] Options for the executed command.\r\n\t * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} [options.selection]\r\n\t * The selection that the command should be applied to.\r\n\t * By default, if not provided, the command is applied to the {@link module:engine/model/document~Document#selection}.\r\n\t */\r\n\texecute( options = {} ) {\r\n\t\tconst model = this.editor.model;\r\n\t\tconst document = model.document;\r\n\r\n\t\tmodel.change( writer => {\r\n\t\t\tconst blocks = ( options.selection || document.selection ).getSelectedBlocks();\r\n\r\n\t\t\tfor ( const block of blocks ) {\r\n\t\t\t\tif ( !block.is( 'paragraph' ) && checkCanBecomeParagraph( block, model.schema ) ) {\r\n\t\t\t\t\twriter.rename( block, 'paragraph' );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n}\r\n\r\n// Checks whether the given block can be replaced by a paragraph.\r\n//\r\n// @private\r\n// @param {module:engine/model/element~Element} block A block to be tested.\r\n// @param {module:engine/model/schema~Schema} schema The schema of the document.\r\n// @returns {Boolean}\r\nfunction checkCanBecomeParagraph( block, schema ) {\r\n\treturn schema.checkChild( block.parent, 'paragraph' ) && !schema.isObject( block );\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module paste-from-office/filters/image\r\n */\r\n\r\n/* globals btoa */\r\n\r\nimport ViewMatcher from '@ckeditor/ckeditor5-engine/src/view/matcher';\r\nimport UpcastWriter from '@ckeditor/ckeditor5-engine/src/view/upcastwriter';\r\n\r\n/**\r\n * Replaces source attribute of all `<img>` elements representing regular\r\n * images (not the Word shapes) with inlined base64 image representation extracted from RTF or Blob data.\r\n *\r\n * @param {module:engine/view/documentfragment~DocumentFragment} documentFragment Document fragment on which transform images.\r\n * @param {String} rtfData The RTF data from which images representation will be used.\r\n */\r\nexport function replaceImagesSourceWithBase64( documentFragment, rtfData ) {\r\n\tif ( !documentFragment.childCount ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst upcastWriter = new UpcastWriter();\r\n\tconst shapesIds = findAllShapesIds( documentFragment, upcastWriter );\r\n\r\n\tremoveAllImgElementsRepresentingShapes( shapesIds, documentFragment, upcastWriter );\r\n\tremoveAllShapeElements( documentFragment, upcastWriter );\r\n\r\n\tconst images = findAllImageElementsWithLocalSource( documentFragment, upcastWriter );\r\n\r\n\tif ( images.length ) {\r\n\t\treplaceImagesFileSourceWithInlineRepresentation( images, extractImageDataFromRtf( rtfData ), upcastWriter );\r\n\t}\r\n}\r\n\r\n/**\r\n * Converts given HEX string to base64 representation.\r\n *\r\n * @protected\r\n * @param {String} hexString The HEX string to be converted.\r\n * @returns {String} Base64 representation of a given HEX string.\r\n */\r\nexport function _convertHexToBase64( hexString ) {\r\n\treturn btoa( hexString.match( /\\w{2}/g ).map( char => {\r\n\t\treturn String.fromCharCode( parseInt( char, 16 ) );\r\n\t} ).join( '' ) );\r\n}\r\n\r\n// Finds all shapes (`<v:*>...</v:*>`) ids. Shapes can represent images (canvas)\r\n// or Word shapes (which does not have RTF or Blob representation).\r\n//\r\n// @param {module:engine/view/documentfragment~DocumentFragment} documentFragment Document fragment\r\n// from which to extract shape ids.\r\n// @param {module:engine/view/upcastwriter~UpcastWriter} writer\r\n// @returns {Array.<String>} Array of shape ids.\r\nfunction findAllShapesIds( documentFragment, writer ) {\r\n\tconst range = writer.createRangeIn( documentFragment );\r\n\r\n\tconst shapeElementsMatcher = new ViewMatcher( {\r\n\t\tname: /v:(.+)/\r\n\t} );\r\n\r\n\tconst shapesIds = [];\r\n\r\n\tfor ( const value of range ) {\r\n\t\tconst el = value.item;\r\n\t\tconst prevSiblingName = el.previousSibling && el.previousSibling.name || null;\r\n\r\n\t\t// If shape element have 'o:gfxdata' attribute and is not directly before `<v:shapetype>` element it means it represent Word shape.\r\n\t\tif ( shapeElementsMatcher.match( el ) && el.getAttribute( 'o:gfxdata' ) && prevSiblingName !== 'v:shapetype' ) {\r\n\t\t\tshapesIds.push( value.item.getAttribute( 'id' ) );\r\n\t\t}\r\n\t}\r\n\r\n\treturn shapesIds;\r\n}\r\n\r\n// Removes all `<img>` elements which represents Word shapes and not regular images.\r\n//\r\n// @param {Array.<String>} shapesIds Shape ids which will be checked against `<img>` elements.\r\n// @param {module:engine/view/documentfragment~DocumentFragment} documentFragment Document fragment from which to remove `<img>` elements.\r\n// @param {module:engine/view/upcastwriter~UpcastWriter} writer\r\nfunction removeAllImgElementsRepresentingShapes( shapesIds, documentFragment, writer ) {\r\n\tconst range = writer.createRangeIn( documentFragment );\r\n\r\n\tconst imageElementsMatcher = new ViewMatcher( {\r\n\t\tname: 'img'\r\n\t} );\r\n\r\n\tconst imgs = [];\r\n\r\n\tfor ( const value of range ) {\r\n\t\tif ( imageElementsMatcher.match( value.item ) ) {\r\n\t\t\tconst el = value.item;\r\n\t\t\tconst shapes = el.getAttribute( 'v:shapes' ) ? el.getAttribute( 'v:shapes' ).split( ' ' ) : [];\r\n\r\n\t\t\tif ( shapes.length && shapes.every( shape => shapesIds.indexOf( shape ) > -1 ) ) {\r\n\t\t\t\timgs.push( el );\r\n\t\t\t// Shapes may also have empty source while content is paste in some browsers (Safari).\r\n\t\t\t} else if ( !el.getAttribute( 'src' ) ) {\r\n\t\t\t\timgs.push( el );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfor ( const img of imgs ) {\r\n\t\twriter.remove( img );\r\n\t}\r\n}\r\n\r\n// Removes all shape elements (`<v:*>...</v:*>`) so they do not pollute the output structure.\r\n//\r\n// @param {module:engine/view/documentfragment~DocumentFragment} documentFragment Document fragment from which to remove shape elements.\r\n// @param {module:engine/view/upcastwriter~UpcastWriter} writer\r\nfunction removeAllShapeElements( documentFragment, writer ) {\r\n\tconst range = writer.createRangeIn( documentFragment );\r\n\r\n\tconst shapeElementsMatcher = new ViewMatcher( {\r\n\t\tname: /v:(.+)/\r\n\t} );\r\n\r\n\tconst shapes = [];\r\n\r\n\tfor ( const value of range ) {\r\n\t\tif ( shapeElementsMatcher.match( value.item ) ) {\r\n\t\t\tshapes.push( value.item );\r\n\t\t}\r\n\t}\r\n\r\n\tfor ( const shape of shapes ) {\r\n\t\twriter.remove( shape );\r\n\t}\r\n}\r\n\r\n// Finds all `<img>` elements in a given document fragment which have source pointing to local `file://` resource.\r\n//\r\n// @param {module:engine/view/documentfragment~DocumentFragment} documentFragment Document fragment in which to look for `<img>` elements.\r\n// @param {module:engine/view/upcastwriter~UpcastWriter} writer\r\n// @returns {Object} result All found images grouped by source type.\r\n// @returns {Array.<module:engine/view/element~Element>} result.file Array of found `<img>` elements with `file://` source.\r\n// @returns {Array.<module:engine/view/element~Element>} result.blob Array of found `<img>` elements with `blob:` source.\r\nfunction findAllImageElementsWithLocalSource( documentFragment, writer ) {\r\n\tconst range = writer.createRangeIn( documentFragment );\r\n\r\n\tconst imageElementsMatcher = new ViewMatcher( {\r\n\t\tname: 'img'\r\n\t} );\r\n\r\n\tconst imgs = [];\r\n\r\n\tfor ( const value of range ) {\r\n\t\tif ( imageElementsMatcher.match( value.item ) ) {\r\n\t\t\tif ( value.item.getAttribute( 'src' ).startsWith( 'file://' ) ) {\r\n\t\t\t\timgs.push( value.item );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn imgs;\r\n}\r\n\r\n// Extracts all images HEX representations from a given RTF data.\r\n//\r\n// @param {String} rtfData The RTF data from which to extract images HEX representation.\r\n// @returns {Array.<Object>} Array of found HEX representations. Each array item is an object containing:\r\n//\r\n// \t\t* {String} hex Image representation in HEX format.\r\n// \t\t* {string} type Type of image, `image/png` or `image/jpeg`.\r\nfunction extractImageDataFromRtf( rtfData ) {\r\n\tif ( !rtfData ) {\r\n\t\treturn [];\r\n\t}\r\n\r\n\tconst regexPictureHeader = /{\\\\pict[\\s\\S]+?\\\\bliptag-?\\d+(\\\\blipupi-?\\d+)?({\\\\\\*\\\\blipuid\\s?[\\da-fA-F]+)?[\\s}]*?/;\r\n\tconst regexPicture = new RegExp( '(?:(' + regexPictureHeader.source + '))([\\\\da-fA-F\\\\s]+)\\\\}', 'g' );\r\n\tconst images = rtfData.match( regexPicture );\r\n\tconst result = [];\r\n\r\n\tif ( images ) {\r\n\t\tfor ( const image of images ) {\r\n\t\t\tlet imageType = false;\r\n\r\n\t\t\tif ( image.includes( '\\\\pngblip' ) ) {\r\n\t\t\t\timageType = 'image/png';\r\n\t\t\t} else if ( image.includes( '\\\\jpegblip' ) ) {\r\n\t\t\t\timageType = 'image/jpeg';\r\n\t\t\t}\r\n\r\n\t\t\tif ( imageType ) {\r\n\t\t\t\tresult.push( {\r\n\t\t\t\t\thex: image.replace( regexPictureHeader, '' ).replace( /[^\\da-fA-F]/g, '' ),\r\n\t\t\t\t\ttype: imageType\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\n// Replaces `src` attribute value of all given images with the corresponding base64 image representation.\r\n//\r\n// @param {Array.<module:engine/view/element~Element>} imageElements Array of image elements which will have its source replaced.\r\n// @param {Array.<Object>} imagesHexSources Array of images hex sources (usually the result of `extractImageDataFromRtf()` function).\r\n// The array should be the same length as `imageElements` parameter.\r\n// @param {module:engine/view/upcastwriter~UpcastWriter} writer\r\nfunction replaceImagesFileSourceWithInlineRepresentation( imageElements, imagesHexSources, writer ) {\r\n\t// Assume there is an equal amount of image elements and images HEX sources so they can be matched accordingly based on existing order.\r\n\tif ( imageElements.length === imagesHexSources.length ) {\r\n\t\tfor ( let i = 0; i < imageElements.length; i++ ) {\r\n\t\t\tconst newSrc = `data:${ imagesHexSources[ i ].type };base64,${ _convertHexToBase64( imagesHexSources[ i ].hex ) }`;\r\n\t\t\twriter.setAttribute( 'src', newSrc, imageElements[ i ] );\r\n\t\t}\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module paste-from-office/filters/list\r\n */\r\n\r\nimport Matcher from '@ckeditor/ckeditor5-engine/src/view/matcher';\r\nimport UpcastWriter from '@ckeditor/ckeditor5-engine/src/view/upcastwriter';\r\n\r\n/**\r\n * Transforms Word specific list-like elements to the semantic HTML lists.\r\n *\r\n * Lists in Word are represented by block elements with special attributes like:\r\n *\r\n *\t\t<p class=MsoListParagraphCxSpFirst style='mso-list:l1 level1 lfo1'>...</p> // Paragraph based list.\r\n *\t\t<h1 style='mso-list:l0 level1 lfo1'>...</h1> // Heading 1 based list.\r\n *\r\n * @param {module:engine/view/documentfragment~DocumentFragment} documentFragment The view structure to be transformed.\r\n * @param {String} stylesString Styles from which list-like elements styling will be extracted.\r\n */\r\nexport function transformListItemLikeElementsIntoLists( documentFragment, stylesString ) {\r\n\tif ( !documentFragment.childCount ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst writer = new UpcastWriter( documentFragment.document );\r\n\tconst itemLikeElements = findAllItemLikeElements( documentFragment, writer );\r\n\r\n\tif ( !itemLikeElements.length ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tlet currentList = null;\r\n\tlet currentIndentation = 1;\r\n\r\n\titemLikeElements.forEach( ( itemLikeElement, i ) => {\r\n\t\tconst isDifferentList = isNewListNeeded( itemLikeElements[ i - 1 ], itemLikeElement );\r\n\t\tconst previousItemLikeElement = isDifferentList ? null : itemLikeElements[ i - 1 ];\r\n\t\tconst indentationDifference = getIndentationDifference( previousItemLikeElement, itemLikeElement );\r\n\r\n\t\tif ( isDifferentList ) {\r\n\t\t\tcurrentList = null;\r\n\t\t\tcurrentIndentation = 1;\r\n\t\t}\r\n\r\n\t\tif ( !currentList || indentationDifference !== 0 ) {\r\n\t\t\tconst listStyle = detectListStyle( itemLikeElement, stylesString );\r\n\r\n\t\t\tif ( !currentList ) {\r\n\t\t\t\tcurrentList = insertNewEmptyList( listStyle, itemLikeElement.element, writer );\r\n\t\t\t} else if ( itemLikeElement.indent > currentIndentation ) {\r\n\t\t\t\tconst lastListItem = currentList.getChild( currentList.childCount - 1 );\r\n\t\t\t\tconst lastListItemChild = lastListItem.getChild( lastListItem.childCount - 1 );\r\n\r\n\t\t\t\tcurrentList = insertNewEmptyList( listStyle, lastListItemChild, writer );\r\n\r\n\t\t\t\tcurrentIndentation += 1;\r\n\t\t\t} else if ( itemLikeElement.indent < currentIndentation ) {\r\n\t\t\t\tconst differentIndentation = currentIndentation - itemLikeElement.indent;\r\n\r\n\t\t\t\tcurrentList = findParentListAtLevel( currentList, differentIndentation );\r\n\r\n\t\t\t\tcurrentIndentation = parseInt( itemLikeElement.indent );\r\n\t\t\t}\r\n\r\n\t\t\tif ( itemLikeElement.indent <= currentIndentation ) {\r\n\t\t\t\tif ( !currentList.is( listStyle.type ) ) {\r\n\t\t\t\t\tcurrentList = writer.rename( listStyle.type, currentList );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst listItem = transformElementIntoListItem( itemLikeElement.element, writer );\r\n\r\n\t\twriter.appendChild( listItem, currentList );\r\n\t} );\r\n}\r\n\r\n/**\r\n * Removes paragraph wrapping content inside a list item.\r\n *\r\n * @param {module:engine/view/documentfragment~DocumentFragment} documentFragment\r\n * @param {module:engine/view/upcastwriter~UpcastWriter} writer\r\n */\r\nexport function unwrapParagraphInListItem( documentFragment, writer ) {\r\n\tfor ( const value of writer.createRangeIn( documentFragment ) ) {\r\n\t\tconst element = value.item;\r\n\r\n\t\tif ( element.is( 'li' ) ) {\r\n\t\t\t// Google Docs allows on single paragraph inside LI.\r\n\t\t\tconst firstChild = element.getChild( 0 );\r\n\r\n\t\t\tif ( firstChild.is( 'p' ) ) {\r\n\t\t\t\twriter.unwrapElement( firstChild );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Finds all list-like elements in a given document fragment.\r\n//\r\n// @param {module:engine/view/documentfragment~DocumentFragment} documentFragment Document fragment\r\n// in which to look for list-like nodes.\r\n// @param {module:engine/view/upcastwriter~UpcastWriter} writer\r\n// @returns {Array.<Object>} Array of found list-like items. Each item is an object containing:\r\n//\r\n//\t\t* {module:engine/src/view/element~Element} element List-like element.\r\n//\t\t* {Number} id List item id parsed from `mso-list` style (see `getListItemData()` function).\r\n//\t\t* {Number} order List item creation order parsed from `mso-list` style (see `getListItemData()` function).\r\n//\t\t* {Number} indent List item indentation level parsed from `mso-list` style (see `getListItemData()` function).\r\nfunction findAllItemLikeElements( documentFragment, writer ) {\r\n\tconst range = writer.createRangeIn( documentFragment );\r\n\r\n\t// Matcher for finding list-like elements.\r\n\tconst itemLikeElementsMatcher = new Matcher( {\r\n\t\tname: /^p|h\\d+$/,\r\n\t\tstyles: {\r\n\t\t\t'mso-list': /.*/\r\n\t\t}\r\n\t} );\r\n\r\n\tconst itemLikeElements = [];\r\n\r\n\tfor ( const value of range ) {\r\n\t\tif ( value.type === 'elementStart' && itemLikeElementsMatcher.match( value.item ) ) {\r\n\t\t\tconst itemData = getListItemData( value.item );\r\n\r\n\t\t\titemLikeElements.push( {\r\n\t\t\t\telement: value.item,\r\n\t\t\t\tid: itemData.id,\r\n\t\t\t\torder: itemData.order,\r\n\t\t\t\tindent: itemData.indent\r\n\t\t\t} );\r\n\t\t}\r\n\t}\r\n\r\n\treturn itemLikeElements;\r\n}\r\n\r\n// Extracts list item style from the provided CSS.\r\n//\r\n// List item style is extracted from CSS stylesheet. Each list with its specific style attribute\r\n// value (`mso-list:l1 level1 lfo1`) has its dedicated properties in a CSS stylesheet defined with a selector like:\r\n//\r\n// \t\t@list l1:level1 { ... }\r\n//\r\n// It contains `mso-level-number-format` property which defines list numbering/bullet style. If this property\r\n// is not defined it means default `decimal` numbering.\r\n//\r\n// Here CSS string representation is used as `mso-level-number-format` property is an invalid CSS property\r\n// and will be removed during CSS parsing.\r\n//\r\n// @param {Object} listLikeItem List-like item for which list style will be searched for. Usually\r\n// a result of `findAllItemLikeElements()` function.\r\n// @param {String} stylesString CSS stylesheet.\r\n// @returns {Object} result\r\n// @returns {String} result.type List type, could be `ul` or `ol`.\r\n// @returns {String} result.style List style, for example: `decimal`, `lower-roman`, etc. It is extracted\r\n// directly from Word stylesheet without further processing and may be not compatible\r\n// with CSS `list-style-type` property accepted values.\r\nfunction detectListStyle( listLikeItem, stylesString ) {\r\n\tconst listStyleRegexp = new RegExp( `@list l${ listLikeItem.id }:level${ listLikeItem.indent }\\\\s*({[^}]*)`, 'gi' );\r\n\tconst listStyleTypeRegex = /mso-level-number-format:([^;]*);/gi;\r\n\r\n\tconst listStyleMatch = listStyleRegexp.exec( stylesString );\r\n\r\n\tlet listStyleType = 'decimal'; // Decimal is default one.\r\n\tif ( listStyleMatch && listStyleMatch[ 1 ] ) {\r\n\t\tconst listStyleTypeMatch = listStyleTypeRegex.exec( listStyleMatch[ 1 ] );\r\n\r\n\t\tif ( listStyleTypeMatch && listStyleTypeMatch[ 1 ] ) {\r\n\t\t\tlistStyleType = listStyleTypeMatch[ 1 ].trim();\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\ttype: listStyleType !== 'bullet' && listStyleType !== 'image' ? 'ol' : 'ul',\r\n\t\tstyle: listStyleType\r\n\t};\r\n}\r\n\r\n// Creates empty list of a given type and inserts it after a specified element.\r\n//\r\n// @param {Object} listStyle List style object which determines the type of newly created list.\r\n// Usually a result of `detectListStyle()` function.\r\n// @param {module:engine/view/element~Element} element Element after which list is inserted.\r\n// @param {module:engine/view/upcastwriter~UpcastWriter} writer\r\n// @returns {module:engine/view/element~Element} Newly created list element.\r\n\r\nfunction insertNewEmptyList( listStyle, element, writer ) {\r\n\tconst parent = element.parent;\r\n\tconst list = writer.createElement( listStyle.type );\r\n\tconst position = parent.getChildIndex( element ) + 1;\r\n\r\n\twriter.insertChild( position, list, parent );\r\n\r\n\treturn list;\r\n}\r\n\r\n// Transforms given element into a semantic list item. As the function operates on a provided\r\n// {module:engine/src/view/element~Element element} it will modify the view structure to which this element belongs.\r\n//\r\n// @param {module:engine/view/element~Element} element Element which will be transformed into list item.\r\n// @param {module:engine/view/upcastwriter~UpcastWriter} writer\r\n// @returns {module:engine/view/element~Element} New element to which the given one was transformed. It is\r\n// inserted in place of the old element (the reference to the old element is lost due to renaming).\r\nfunction transformElementIntoListItem( element, writer ) {\r\n\tremoveBulletElement( element, writer );\r\n\r\n\treturn writer.rename( 'li', element );\r\n}\r\n\r\n// Extracts list item information from Word specific list-like element style:\r\n//\r\n//\t\t`style=\"mso-list:l1 level1 lfo1\"`\r\n//\r\n// where:\r\n//\r\n//\t\t* `l1` is a list id (however it does not mean this is a continuous list - see #43),\r\n//\t\t* `level1` is a list item indentation level,\r\n//\t\t* `lfo1` is a list insertion order in a document.\r\n//\r\n// @param {module:engine/view/element~Element} element Element from which style data is extracted.\r\n// @returns {Object} result\r\n// @returns {Number} result.id Parent list id.\r\n// @returns {Number} result.order List item creation order.\r\n// @returns {Number} result.indent List item indentation level.\r\nfunction getListItemData( element ) {\r\n\tconst data = {};\r\n\tconst listStyle = element.getStyle( 'mso-list' );\r\n\r\n\tif ( listStyle ) {\r\n\t\tconst idMatch = listStyle.match( /(^|\\s+)l(\\d+)/i );\r\n\t\tconst orderMatch = listStyle.match( /\\s*lfo(\\d+)/i );\r\n\t\tconst indentMatch = listStyle.match( /\\s*level(\\d+)/i );\r\n\r\n\t\tif ( idMatch && orderMatch && indentMatch ) {\r\n\t\t\tdata.id = idMatch[ 2 ];\r\n\t\t\tdata.order = orderMatch[ 1 ];\r\n\t\t\tdata.indent = indentMatch[ 1 ];\r\n\t\t}\r\n\t}\r\n\r\n\treturn data;\r\n}\r\n\r\n// Removes span with a numbering/bullet from a given element.\r\n//\r\n// @param {module:engine/view/element~Element} element\r\n// @param {module:engine/view/upcastwriter~UpcastWriter} writer\r\nfunction removeBulletElement( element, writer ) {\r\n\t// Matcher for finding `span` elements holding lists numbering/bullets.\r\n\tconst bulletMatcher = new Matcher( {\r\n\t\tname: 'span',\r\n\t\tstyles: {\r\n\t\t\t'mso-list': 'Ignore'\r\n\t\t}\r\n\t} );\r\n\r\n\tconst range = writer.createRangeIn( element );\r\n\r\n\tfor ( const value of range ) {\r\n\t\tif ( value.type === 'elementStart' && bulletMatcher.match( value.item ) ) {\r\n\t\t\twriter.remove( value.item );\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Whether previous and current item belongs to the same list. It is determined based on `item.id`\r\n// (extracted from `mso-list` style, see #getListItemData) and previous sibling of the current item.\r\n//\r\n// @param {Object} previousItem\r\n// @param {Object} currentItem\r\n// @returns {Boolean}\r\nfunction isNewListNeeded( previousItem, currentItem ) {\r\n\tif ( !previousItem ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif ( previousItem.id !== currentItem.id ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tconst previousSibling = currentItem.element.previousSibling;\r\n\r\n\tif ( !previousSibling ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Even with the same id the list does not have to be continuous (#43).\r\n\treturn !isList( previousSibling );\r\n}\r\n\r\nfunction isList( element ) {\r\n\treturn element.is( 'ol' ) || element.is( 'ul' );\r\n}\r\n\r\n// Calculates the indentation difference between two given list items (based on indent attribute\r\n// extracted from `mso-list` style, see #getListItemData).\r\n//\r\n// @param {Object} previousItem\r\n// @param {Object} currentItem\r\n// @returns {Number}\r\nfunction getIndentationDifference( previousItem, currentItem ) {\r\n\treturn previousItem ? currentItem.indent - previousItem.indent : currentItem.indent - 1;\r\n}\r\n\r\n// Finds parent list element (ul/ol) of a given list element with indentation level lower by a given value.\r\n//\r\n// @param {module:engine/view/element~Element} listElement List element from which to start looking for a parent list.\r\n// @param {Number} indentationDifference Indentation difference between lists.\r\n// @returns {module:engine/view/element~Element} Found list element with indentation level lower by a given value.\r\nfunction findParentListAtLevel( listElement, indentationDifference ) {\r\n\tconst ancestors = listElement.getAncestors( { parentFirst: true } );\r\n\r\n\tlet parentList = null;\r\n\tlet levelChange = 0;\r\n\r\n\tfor ( const ancestor of ancestors ) {\r\n\t\tif ( ancestor.name === 'ul' || ancestor.name === 'ol' ) {\r\n\t\t\tlevelChange++;\r\n\t\t}\r\n\r\n\t\tif ( levelChange === indentationDifference ) {\r\n\t\t\tparentList = ancestor;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\treturn parentList;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module paste-from-office/filters/parse\r\n */\r\n\r\n/* globals DOMParser */\r\n\r\nimport DomConverter from '@ckeditor/ckeditor5-engine/src/view/domconverter';\r\nimport ViewDocument from '@ckeditor/ckeditor5-engine/src/view/document';\r\n\r\nimport { normalizeSpacing, normalizeSpacerunSpans } from './space';\r\nimport { StylesProcessor } from '@ckeditor/ckeditor5-engine/src/view/stylesmap';\r\n\r\n/**\r\n * Parses provided HTML extracting contents of `<body>` and `<style>` tags.\r\n *\r\n * @param {String} htmlString HTML string to be parsed.\r\n * @returns {Object} result\r\n * @returns {module:engine/view/documentfragment~DocumentFragment} result.body Parsed body\r\n * content as a traversable structure.\r\n * @returns {String} result.bodyString Entire body content as a string.\r\n * @returns {Array.<CSSStyleSheet>} result.styles Array of native `CSSStyleSheet` objects, each representing\r\n * separate `style` tag from the source HTML.\r\n * @returns {String} result.stylesString All `style` tags contents combined in the order of occurrence into one string.\r\n */\r\nexport function parseHtml( htmlString ) {\r\n\tconst domParser = new DOMParser();\r\n\r\n\t// Remove Word specific \"if comments\" so content inside is not omitted by the parser.\r\n\thtmlString = htmlString.replace( /<!--\\[if gte vml 1]>/g, '' );\r\n\r\n\tconst normalizedHtml = normalizeSpacing( cleanContentAfterBody( htmlString ) );\r\n\r\n\t// Parse htmlString as native Document object.\r\n\tconst htmlDocument = domParser.parseFromString( normalizedHtml, 'text/html' );\r\n\r\n\tnormalizeSpacerunSpans( htmlDocument );\r\n\r\n\t// Get `innerHTML` first as transforming to View modifies the source document.\r\n\tconst bodyString = htmlDocument.body.innerHTML;\r\n\r\n\t// Transform document.body to View.\r\n\tconst bodyView = documentToView( htmlDocument );\r\n\r\n\t// Extract stylesheets.\r\n\tconst stylesObject = extractStyles( htmlDocument );\r\n\r\n\treturn {\r\n\t\tbody: bodyView,\r\n\t\tbodyString,\r\n\t\tstyles: stylesObject.styles,\r\n\t\tstylesString: stylesObject.stylesString\r\n\t};\r\n}\r\n\r\n// Transforms native `Document` object into {@link module:engine/view/documentfragment~DocumentFragment}.\r\n//\r\n// @param {Document} htmlDocument Native `Document` object to be transformed.\r\n// @returns {module:engine/view/documentfragment~DocumentFragment}\r\nfunction documentToView( htmlDocument ) {\r\n\tconst viewDocument = new ViewDocument( new StylesProcessor() );\r\n\tconst domConverter = new DomConverter( viewDocument, { blockFillerMode: 'nbsp' } );\r\n\tconst fragment = htmlDocument.createDocumentFragment();\r\n\tconst nodes = htmlDocument.body.childNodes;\r\n\r\n\twhile ( nodes.length > 0 ) {\r\n\t\tfragment.appendChild( nodes[ 0 ] );\r\n\t}\r\n\r\n\treturn domConverter.domToView( fragment );\r\n}\r\n\r\n// Extracts both `CSSStyleSheet` and string representation from all `style` elements available in a provided `htmlDocument`.\r\n//\r\n// @param {Document} htmlDocument Native `Document` object from which styles will be extracted.\r\n// @returns {Object} result\r\n// @returns {Array.<CSSStyleSheet>} result.styles Array of native `CSSStyleSheet` object, each representing\r\n// separate `style` tag from the source object.\r\n// @returns {String} result.stylesString All `style` tags contents combined in the order of occurrence as one string.\r\nfunction extractStyles( htmlDocument ) {\r\n\tconst styles = [];\r\n\tconst stylesString = [];\r\n\tconst styleTags = Array.from( htmlDocument.getElementsByTagName( 'style' ) );\r\n\r\n\tfor ( const style of styleTags ) {\r\n\t\tif ( style.sheet && style.sheet.cssRules && style.sheet.cssRules.length ) {\r\n\t\t\tstyles.push( style.sheet );\r\n\t\t\tstylesString.push( style.innerHTML );\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tstyles,\r\n\t\tstylesString: stylesString.join( ' ' )\r\n\t};\r\n}\r\n\r\n// Removes leftover content from between closing </body> and closing </html> tag:\r\n//\r\n// \t\t<html><body><p>Foo Bar</p></body><span>Fo</span></html> -> <html><body><p>Foo Bar</p></body></html>\r\n//\r\n// This function is used as specific browsers (Edge) add some random content after `body` tag when pasting from Word.\r\n// @param {String} htmlString The HTML string to be cleaned.\r\n// @returns {String} The HTML string with leftover content removed.\r\nfunction cleanContentAfterBody( htmlString ) {\r\n\tconst regexp = /<\\/body>(.*?)(<\\/html>|$)/;\r\n\tconst match = htmlString.match( regexp );\r\n\r\n\tif ( match && match[ 1 ] ) {\r\n\t\thtmlString = htmlString.slice( 0, match.index ) + htmlString.slice( match.index ).replace( match[ 1 ], '' );\r\n\t}\r\n\r\n\treturn htmlString;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module paste-from-office/filters/removeboldwrapper\r\n */\r\n\r\n/**\r\n * Removes `<b>` tag wrapper added by Google Docs to a copied content.\r\n *\r\n * @param {module:engine/view/documentfragment~DocumentFragment} documentFragment element `data.content` obtained from clipboard\r\n * @param {module:engine/view/upcastwriter~UpcastWriter} writer\r\n */\r\nexport default function removeBoldWrapper( documentFragment, writer ) {\r\n\tfor ( const child of documentFragment.getChildren() ) {\r\n\t\tif ( child.is( 'b' ) && child.getStyle( 'font-weight' ) === 'normal' ) {\r\n\t\t\tconst childIndex = documentFragment.getChildIndex( child );\r\n\r\n\t\t\twriter.remove( child );\r\n\t\t\twriter.insertChild( childIndex, child.getChildren(), documentFragment );\r\n\t\t}\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module paste-from-office/filters/space\r\n */\r\n\r\n/**\r\n * Replaces last space preceding elements closing tag with `&nbsp;`. Such operation prevents spaces from being removed\r\n * during further DOM/View processing (see especially {@link module:engine/view/domconverter~DomConverter#_processDataFromDomText}).\r\n * This method also takes into account Word specific `<o:p></o:p>` empty tags.\r\n * Additionally multiline sequences of spaces and new lines between tags are removed (see #39 and #40).\r\n *\r\n * @param {String} htmlString HTML string in which spacing should be normalized.\r\n * @returns {String} Input HTML with spaces normalized.\r\n */\r\nexport function normalizeSpacing( htmlString ) {\r\n\t// Run normalizeSafariSpaceSpans() two times to cover nested spans.\r\n\treturn normalizeSafariSpaceSpans( normalizeSafariSpaceSpans( htmlString ) )\r\n\t\t// Remove all \\r\\n from \"spacerun spans\" so the last replace line doesn't strip all whitespaces.\r\n\t\t.replace( /(<span\\s+style=['\"]mso-spacerun:yes['\"]>[\\s]*?)[\\r\\n]+(\\s*<\\/span>)/g, '$1$2' )\r\n\t\t.replace( /<span\\s+style=['\"]mso-spacerun:yes['\"]><\\/span>/g, '' )\r\n\t\t.replace( / <\\//g, '\\u00A0</' )\r\n\t\t.replace( / <o:p><\\/o:p>/g, '\\u00A0<o:p></o:p>' )\r\n\t\t// Remove <o:p> block filler from empty paragraph. Safari uses \\u00A0 instead of &nbsp;.\r\n\t\t.replace( /<o:p>(&nbsp;|\\u00A0)<\\/o:p>/g, '' )\r\n\t\t// Remove all whitespaces when they contain any \\r or \\n.\r\n\t\t.replace( />(\\s*[\\r\\n]\\s*)</g, '><' );\r\n}\r\n\r\n/**\r\n * Normalizes spacing in special Word `spacerun spans` (`<span style='mso-spacerun:yes'>\\s+</span>`) by replacing\r\n * all spaces with `&nbsp; ` pairs. This prevents spaces from being removed during further DOM/View processing\r\n * (see especially {@link module:engine/view/domconverter~DomConverter#_processDataFromDomText}).\r\n *\r\n * @param {Document} htmlDocument Native `Document` object in which spacing should be normalized.\r\n */\r\nexport function normalizeSpacerunSpans( htmlDocument ) {\r\n\thtmlDocument.querySelectorAll( 'span[style*=spacerun]' ).forEach( el => {\r\n\t\t// Use `el.childNodes[ 0 ].data.length` instead of `el.innerText.length`. For `el.innerText.length` which\r\n\t\t// contains spaces mixed with `&nbsp;` Edge browser returns incorrect length.\r\n\t\tconst innerTextLength = ( el.childNodes &&\r\n\t\t\tel.childNodes[ 0 ] &&\r\n\t\t\tel.childNodes[ 0 ].data &&\r\n\t\t\tel.childNodes[ 0 ].data.length ) || 0;\r\n\r\n\t\tel.innerHTML = Array( innerTextLength + 1 ).join( '\\u00A0 ' ).substr( 0, innerTextLength );\r\n\t} );\r\n}\r\n\r\n// Normalizes specific spacing generated by Safari when content pasted from Word (`<span class=\"Apple-converted-space\"> </span>`)\r\n// by replacing all spaces sequences longer than 1 space with `&nbsp; ` pairs. This prevents spaces from being removed during\r\n// further DOM/View processing (see especially {@link module:engine/view/domconverter~DomConverter#_processDataFromDomText}).\r\n//\r\n// This function is similar to {@link module:clipboard/utils/normalizeclipboarddata normalizeClipboardData util} but uses\r\n// regular spaces / &nbsp; sequence for replacement.\r\n//\r\n// @param {String} htmlString HTML string in which spacing should be normalized\r\n// @returns {String} Input HTML with spaces normalized.\r\nfunction normalizeSafariSpaceSpans( htmlString ) {\r\n\treturn htmlString.replace( /<span(?: class=\"Apple-converted-space\"|)>(\\s+)<\\/span>/g, ( fullMatch, spaces ) => {\r\n\t\treturn spaces.length === 1 ? ' ' : Array( spaces.length + 1 ).join( '\\u00A0 ' ).substr( 0, spaces.length );\r\n\t} );\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module paste-from-office/normalizers/googledocsnormalizer\r\n */\r\n\r\nimport removeBoldWrapper from '../filters/removeboldwrapper';\r\nimport { unwrapParagraphInListItem } from '../filters/list';\r\nimport UpcastWriter from '@ckeditor/ckeditor5-engine/src/view/upcastwriter';\r\n\r\nconst googleDocsMatch = /id=(\"|')docs-internal-guid-[-0-9a-f]+(\"|')/i;\r\n\r\n/**\r\n * Normalizer for the content pasted from Google Docs.\r\n *\r\n * @implements module:paste-from-office/normalizer~Normalizer\r\n */\r\nexport default class GoogleDocsNormalizer {\r\n\tconstructor( document ) {\r\n\t\t/**\r\n\t\t * @readonly\r\n\t\t * @type {module:engine/view/document~Document}\r\n\t\t */\r\n\t\tthis.document = document;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tisActive( htmlString ) {\r\n\t\treturn googleDocsMatch.test( htmlString );\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\texecute( data ) {\r\n\t\tconst writer = new UpcastWriter( this.document );\r\n\r\n\t\tremoveBoldWrapper( data.content, writer );\r\n\t\tunwrapParagraphInListItem( data.content, writer );\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module paste-from-office/normalizers/mswordnormalizer\r\n */\r\n\r\nimport { parseHtml } from '../filters/parse';\r\nimport { transformListItemLikeElementsIntoLists } from '../filters/list';\r\nimport { replaceImagesSourceWithBase64 } from '../filters/image';\r\n\r\nconst msWordMatch1 = /<meta\\s*name=\"?generator\"?\\s*content=\"?microsoft\\s*word\\s*\\d+\"?\\/?>/i;\r\nconst msWordMatch2 = /xmlns:o=\"urn:schemas-microsoft-com/i;\r\n\r\n/**\r\n * Normalizer for the content pasted from Microsoft Word.\r\n *\r\n * @implements module:paste-from-office/normalizer~Normalizer\r\n */\r\nexport default class MSWordNormalizer {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tisActive( htmlString ) {\r\n\t\treturn msWordMatch1.test( htmlString ) || msWordMatch2.test( htmlString );\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\texecute( data ) {\r\n\t\tconst { body, stylesString } = parseHtml( data.dataTransfer.getData( 'text/html' ) );\r\n\r\n\t\ttransformListItemLikeElementsIntoLists( body, stylesString );\r\n\t\treplaceImagesSourceWithBase64( body, data.dataTransfer.getData( 'text/rtf' ) );\r\n\r\n\t\tdata.content = body;\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module paste-from-office/pastefromoffice\r\n */\r\n\r\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\r\n\r\nimport GoogleDocsNormalizer from './normalizers/googledocsnormalizer';\r\nimport MSWordNormalizer from './normalizers/mswordnormalizer';\r\nimport Clipboard from '@ckeditor/ckeditor5-clipboard/src/clipboard';\r\n\r\n/**\r\n * The Paste from Office plugin.\r\n *\r\n * This plugin handles content pasted from Office apps and transforms it (if necessary)\r\n * to a valid structure which can then be understood by the editor features.\r\n *\r\n * Transformation is made by a set of predefined {@link module:paste-from-office/normalizer~Normalizer normalizers}.\r\n * This plugin includes following normalizers:\r\n *   * {@link module:paste-from-office/normalizers/mswordnormalizer~MSWordNormalizer Microsoft Word normalizer}\r\n *   * {@link module:paste-from-office/normalizers/googledocsnormalizer~GoogleDocsNormalizer Google Docs normalizer}\r\n *\r\n * For more information about this feature check the {@glink api/paste-from-office package page}.\r\n *\r\n * @extends module:core/plugin~Plugin\r\n */\r\nexport default class PasteFromOffice extends Plugin {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get pluginName() {\r\n\t\treturn 'PasteFromOffice';\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get requires() {\r\n\t\treturn [ Clipboard ];\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tinit() {\r\n\t\tconst editor = this.editor;\r\n\t\tconst normalizers = [];\r\n\r\n\t\tnormalizers.push( new MSWordNormalizer() );\r\n\t\tnormalizers.push( new GoogleDocsNormalizer( editor.editing.view.document ) );\r\n\r\n\t\teditor.plugins.get( 'Clipboard' ).on(\r\n\t\t\t'inputTransformation',\r\n\t\t\t( evt, data ) => {\r\n\t\t\t\tif ( data.isTransformedWithPasteFromOffice ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst htmlString = data.dataTransfer.getData( 'text/html' );\r\n\t\t\t\tconst activeNormalizer = normalizers.find( normalizer => normalizer.isActive( htmlString ) );\r\n\r\n\t\t\t\tif ( activeNormalizer ) {\r\n\t\t\t\t\tactiveNormalizer.execute( data );\r\n\r\n\t\t\t\t\tdata.isTransformedWithPasteFromOffice = true;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{ priority: 'high' }\r\n\t\t);\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module typing/delete\r\n */\r\n\r\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\r\nimport DeleteCommand from './deletecommand';\r\nimport DeleteObserver from './deleteobserver';\r\nimport env from '@ckeditor/ckeditor5-utils/src/env';\r\n\r\n/**\r\n * The delete and backspace feature. Handles the <kbd>Delete</kbd> and <kbd>Backspace</kbd> keys in the editor.\r\n *\r\n * @extends module:core/plugin~Plugin\r\n */\r\nexport default class Delete extends Plugin {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get pluginName() {\r\n\t\treturn 'Delete';\r\n\t}\r\n\r\n\tinit() {\r\n\t\tconst editor = this.editor;\r\n\t\tconst view = editor.editing.view;\r\n\t\tconst viewDocument = view.document;\r\n\r\n\t\tview.addObserver( DeleteObserver );\r\n\r\n\t\teditor.commands.add( 'forwardDelete', new DeleteCommand( editor, 'forward' ) );\r\n\t\teditor.commands.add( 'delete', new DeleteCommand( editor, 'backward' ) );\r\n\r\n\t\tthis.listenTo( viewDocument, 'delete', ( evt, data ) => {\r\n\t\t\tconst deleteCommandParams = { unit: data.unit, sequence: data.sequence };\r\n\r\n\t\t\t// If a specific (view) selection to remove was set, convert it to a model selection and set as a parameter for `DeleteCommand`.\r\n\t\t\tif ( data.selectionToRemove ) {\r\n\t\t\t\tconst modelSelection = editor.model.createSelection();\r\n\t\t\t\tconst ranges = [];\r\n\r\n\t\t\t\tfor ( const viewRange of data.selectionToRemove.getRanges() ) {\r\n\t\t\t\t\tranges.push( editor.editing.mapper.toModelRange( viewRange ) );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmodelSelection.setTo( ranges );\r\n\r\n\t\t\t\tdeleteCommandParams.selection = modelSelection;\r\n\t\t\t}\r\n\r\n\t\t\teditor.execute( data.direction == 'forward' ? 'forwardDelete' : 'delete', deleteCommandParams );\r\n\r\n\t\t\tdata.preventDefault();\r\n\r\n\t\t\tview.scrollToTheSelection();\r\n\t\t} );\r\n\r\n\t\t// Android IMEs have a quirk - they change DOM selection after the input changes were performed by the browser.\r\n\t\t// This happens on `keyup` event. Android doesn't know anything about our deletion and selection handling. Even if the selection\r\n\t\t// was changed during input events, IME remembers the position where the selection \"should\" be placed and moves it there.\r\n\t\t//\r\n\t\t// To prevent incorrect selection, we save the selection after deleting here and then re-set it on `keyup`. This has to be done\r\n\t\t// on DOM selection level, because on `keyup` the model selection is still the same as it was just after deletion, so it\r\n\t\t// wouldn't be changed and the fix would do nothing.\r\n\t\t//\r\n\t\tif ( env.isAndroid ) {\r\n\t\t\tlet domSelectionAfterDeletion = null;\r\n\r\n\t\t\tthis.listenTo( viewDocument, 'delete', ( evt, data ) => {\r\n\t\t\t\tconst domSelection = data.domTarget.ownerDocument.defaultView.getSelection();\r\n\r\n\t\t\t\tdomSelectionAfterDeletion = {\r\n\t\t\t\t\tanchorNode: domSelection.anchorNode,\r\n\t\t\t\t\tanchorOffset: domSelection.anchorOffset,\r\n\t\t\t\t\tfocusNode: domSelection.focusNode,\r\n\t\t\t\t\tfocusOffset: domSelection.focusOffset\r\n\t\t\t\t};\r\n\t\t\t}, { priority: 'lowest' } );\r\n\r\n\t\t\tthis.listenTo( viewDocument, 'keyup', ( evt, data ) => {\r\n\t\t\t\tif ( domSelectionAfterDeletion ) {\r\n\t\t\t\t\tconst domSelection = data.domTarget.ownerDocument.defaultView.getSelection();\r\n\r\n\t\t\t\t\tdomSelection.collapse( domSelectionAfterDeletion.anchorNode, domSelectionAfterDeletion.anchorOffset );\r\n\t\t\t\t\tdomSelection.extend( domSelectionAfterDeletion.focusNode, domSelectionAfterDeletion.focusOffset );\r\n\r\n\t\t\t\t\tdomSelectionAfterDeletion = null;\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t}\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module typing/deletecommand\r\n */\r\n\r\nimport Command from '@ckeditor/ckeditor5-core/src/command';\r\nimport count from '@ckeditor/ckeditor5-utils/src/count';\r\n\r\nimport ChangeBuffer from './utils/changebuffer';\r\n\r\n/**\r\n * The delete command. Used by the {@link module:typing/delete~Delete delete feature} to handle the <kbd>Delete</kbd> and\r\n * <kbd>Backspace</kbd> keys.\r\n *\r\n * @extends module:core/command~Command\r\n */\r\nexport default class DeleteCommand extends Command {\r\n\t/**\r\n\t * Creates an instance of the command.\r\n\t *\r\n\t * @param {module:core/editor/editor~Editor} editor\r\n\t * @param {'forward'|'backward'} direction The directionality of the delete describing in what direction it\r\n\t * should consume the content when the selection is collapsed.\r\n\t */\r\n\tconstructor( editor, direction ) {\r\n\t\tsuper( editor );\r\n\r\n\t\t/**\r\n\t\t * The directionality of the delete describing in what direction it should\r\n\t\t * consume the content when the selection is collapsed.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {'forward'|'backward'} #direction\r\n\t\t */\r\n\t\tthis.direction = direction;\r\n\r\n\t\t/**\r\n\t\t * Delete's change buffer used to group subsequent changes into batches.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @private\r\n\t\t * @member {typing.ChangeBuffer} #buffer\r\n\t\t */\r\n\t\tthis._buffer = new ChangeBuffer( editor.model, editor.config.get( 'typing.undoStep' ) );\r\n\t}\r\n\r\n\t/**\r\n\t * The current change buffer.\r\n\t *\r\n\t * @type {module:typing/utils/changebuffer~ChangeBuffer}\r\n\t */\r\n\tget buffer() {\r\n\t\treturn this._buffer;\r\n\t}\r\n\r\n\t/**\r\n\t * Executes the delete command. Depending on whether the selection is collapsed or not, deletes its content\r\n\t * or a piece of content in the {@link #direction defined direction}.\r\n\t *\r\n\t * @fires execute\r\n\t * @param {Object} [options] The command options.\r\n\t * @param {'character'} [options.unit='character'] See {@link module:engine/model/utils/modifyselection~modifySelection}'s options.\r\n\t * @param {Number} [options.sequence=1] A number describing which subsequent delete event it is without the key being released.\r\n\t * See the {@link module:engine/view/document~Document#event:delete} event data.\r\n\t * @param {module:engine/model/selection~Selection} [options.selection] Selection to remove. If not set, current model selection\r\n\t * will be used.\r\n\t */\r\n\texecute( options = {} ) {\r\n\t\tconst model = this.editor.model;\r\n\t\tconst doc = model.document;\r\n\r\n\t\tmodel.enqueueChange( this._buffer.batch, writer => {\r\n\t\t\tthis._buffer.lock();\r\n\r\n\t\t\tconst selection = writer.createSelection( options.selection || doc.selection );\r\n\r\n\t\t\t// Do not replace the whole selected content if selection was collapsed.\r\n\t\t\t// This prevents such situation:\r\n\t\t\t//\r\n\t\t\t// <h1></h1><p>[]</p>\t-->  <h1>[</h1><p>]</p> \t\t-->  <p></p>\r\n\t\t\t// starting content\t\t-->   after `modifySelection`\t-->  after `deleteContent`.\r\n\t\t\tconst doNotResetEntireContent = selection.isCollapsed;\r\n\r\n\t\t\t// Try to extend the selection in the specified direction.\r\n\t\t\tif ( selection.isCollapsed ) {\r\n\t\t\t\tmodel.modifySelection( selection, { direction: this.direction, unit: options.unit } );\r\n\t\t\t}\r\n\r\n\t\t\t// Check if deleting in an empty editor. See #61.\r\n\t\t\tif ( this._shouldEntireContentBeReplacedWithParagraph( options.sequence || 1 ) ) {\r\n\t\t\t\tthis._replaceEntireContentWithParagraph( writer );\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// If selection is still collapsed, then there's nothing to delete.\r\n\t\t\tif ( selection.isCollapsed ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet changeCount = 0;\r\n\r\n\t\t\tselection.getFirstRange().getMinimalFlatRanges().forEach( range => {\r\n\t\t\t\tchangeCount += count(\r\n\t\t\t\t\trange.getWalker( { singleCharacters: true, ignoreElementEnd: true, shallow: true } )\r\n\t\t\t\t);\r\n\t\t\t} );\r\n\r\n\t\t\tmodel.deleteContent( selection, {\r\n\t\t\t\tdoNotResetEntireContent,\r\n\t\t\t\tdirection: this.direction\r\n\t\t\t} );\r\n\r\n\t\t\tthis._buffer.input( changeCount );\r\n\r\n\t\t\twriter.setSelection( selection );\r\n\r\n\t\t\tthis._buffer.unlock();\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * If the user keeps <kbd>Backspace</kbd> or <kbd>Delete</kbd> key pressed, the content of the current\r\n\t * editable will be cleared. However, this will not yet lead to resetting the remaining block to a paragraph\r\n\t * (which happens e.g. when the user does <kbd>Ctrl</kbd> + <kbd>A</kbd>, <kbd>Backspace</kbd>).\r\n\t *\r\n\t * But, if the user pressed the key in an empty editable for the first time,\r\n\t * we want to replace the entire content with a paragraph if:\r\n\t *\r\n\t * * the current limit element is empty,\r\n\t * * the paragraph is allowed in the limit element,\r\n\t * * the limit doesn't already have a paragraph inside.\r\n\t *\r\n\t * See https://github.com/ckeditor/ckeditor5-typing/issues/61.\r\n\t *\r\n\t * @private\r\n\t * @param {Number} sequence A number describing which subsequent delete event it is without the key being released.\r\n\t * @returns {Boolean}\r\n\t */\r\n\t_shouldEntireContentBeReplacedWithParagraph( sequence ) {\r\n\t\t// Does nothing if user pressed and held the \"Backspace\" or \"Delete\" key.\r\n\t\tif ( sequence > 1 ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst model = this.editor.model;\r\n\t\tconst doc = model.document;\r\n\t\tconst selection = doc.selection;\r\n\t\tconst limitElement = model.schema.getLimitElement( selection );\r\n\r\n\t\t// If a collapsed selection contains the whole content it means that the content is empty\r\n\t\t// (from the user perspective).\r\n\t\tconst limitElementIsEmpty = selection.isCollapsed && selection.containsEntireContent( limitElement );\r\n\r\n\t\tif ( !limitElementIsEmpty ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif ( !model.schema.checkChild( limitElement, 'paragraph' ) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst limitElementFirstChild = limitElement.getChild( 0 );\r\n\r\n\t\t// Does nothing if the limit element already contains only a paragraph.\r\n\t\t// We ignore the case when paragraph might have some inline elements (<p><inlineWidget>[]</inlineWidget></p>)\r\n\t\t// because we don't support such cases yet and it's unclear whether inlineWidget shouldn't be a limit itself.\r\n\t\tif ( limitElementFirstChild && limitElementFirstChild.name === 'paragraph' ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * The entire content is replaced with the paragraph. Selection is moved inside the paragraph.\r\n\t *\r\n\t * @private\r\n\t */\r\n\t_replaceEntireContentWithParagraph( writer ) {\r\n\t\tconst model = this.editor.model;\r\n\t\tconst doc = model.document;\r\n\t\tconst selection = doc.selection;\r\n\t\tconst limitElement = model.schema.getLimitElement( selection );\r\n\t\tconst paragraph = writer.createElement( 'paragraph' );\r\n\r\n\t\twriter.remove( writer.createRangeIn( limitElement ) );\r\n\t\twriter.insert( paragraph, limitElement );\r\n\r\n\t\twriter.setSelection( paragraph, 0 );\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module typing/deleteobserver\r\n */\r\n\r\nimport Observer from '@ckeditor/ckeditor5-engine/src/view/observer/observer';\r\nimport DomEventData from '@ckeditor/ckeditor5-engine/src/view/observer/domeventdata';\r\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\r\nimport env from '@ckeditor/ckeditor5-utils/src/env';\r\n\r\n/**\r\n * Delete observer introduces the {@link module:engine/view/document~Document#event:delete} event.\r\n *\r\n * @extends module:engine/view/observer/observer~Observer\r\n */\r\nexport default class DeleteObserver extends Observer {\r\n\tconstructor( view ) {\r\n\t\tsuper( view );\r\n\r\n\t\tconst document = view.document;\r\n\t\tlet sequence = 0;\r\n\r\n\t\tdocument.on( 'keyup', ( evt, data ) => {\r\n\t\t\tif ( data.keyCode == keyCodes.delete || data.keyCode == keyCodes.backspace ) {\r\n\t\t\t\tsequence = 0;\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tdocument.on( 'keydown', ( evt, data ) => {\r\n\t\t\tconst deleteData = {};\r\n\r\n\t\t\tif ( data.keyCode == keyCodes.delete ) {\r\n\t\t\t\tdeleteData.direction = 'forward';\r\n\t\t\t\tdeleteData.unit = 'character';\r\n\t\t\t} else if ( data.keyCode == keyCodes.backspace ) {\r\n\t\t\t\tdeleteData.direction = 'backward';\r\n\t\t\t\tdeleteData.unit = 'codePoint';\r\n\t\t\t} else {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst hasWordModifier = env.isMac ? data.altKey : data.ctrlKey;\r\n\t\t\tdeleteData.unit = hasWordModifier ? 'word' : deleteData.unit;\r\n\t\t\tdeleteData.sequence = ++sequence;\r\n\r\n\t\t\tfireViewDeleteEvent( evt, data.domEvent, deleteData );\r\n\t\t} );\r\n\r\n\t\t// `beforeinput` is handled only for Android devices. Desktop Chrome and iOS are skipped because they are working fine now.\r\n\t\tif ( env.isAndroid ) {\r\n\t\t\tdocument.on( 'beforeinput', ( evt, data ) => {\r\n\t\t\t\t// If event type is other than `deleteContentBackward` then this is not deleting.\r\n\t\t\t\tif ( data.domEvent.inputType != 'deleteContentBackward' ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst deleteData = {\r\n\t\t\t\t\tunit: 'codepoint',\r\n\t\t\t\t\tdirection: 'backward',\r\n\t\t\t\t\tsequence: 1\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Android IMEs may change the DOM selection on `beforeinput` event so that the selection contains all the text\r\n\t\t\t\t// that the IME wants to remove. We will pass this information to `delete` event so proper part of the content is removed.\r\n\t\t\t\t//\r\n\t\t\t\t// Sometimes it is only expanding by a one character (in case of collapsed selection). In this case we don't need to\r\n\t\t\t\t// set a different selection to remove, it will work just fine.\r\n\t\t\t\tconst domSelection = data.domTarget.ownerDocument.defaultView.getSelection();\r\n\r\n\t\t\t\tif ( domSelection.anchorNode == domSelection.focusNode && domSelection.anchorOffset + 1 != domSelection.focusOffset ) {\r\n\t\t\t\t\tdeleteData.selectionToRemove = view.domConverter.domSelectionToView( domSelection );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfireViewDeleteEvent( evt, data.domEvent, deleteData );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tfunction fireViewDeleteEvent( originalEvent, domEvent, deleteData ) {\r\n\t\t\t// Save the event object to check later if it was stopped or not.\r\n\t\t\tlet event;\r\n\t\t\tdocument.once( 'delete', evt => ( event = evt ), { priority: Number.POSITIVE_INFINITY } );\r\n\r\n\t\t\tdocument.fire( 'delete', new DomEventData( document, domEvent, deleteData ) );\r\n\r\n\t\t\t// Stop the original event if `delete` event was stopped.\r\n\t\t\t// https://github.com/ckeditor/ckeditor5/issues/753\r\n\t\t\tif ( event && event.stop.called ) {\r\n\t\t\t\toriginalEvent.stop();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tobserve() {}\r\n}\r\n\r\n/**\r\n * Event fired when the user tries to delete content (e.g. presses <kbd>Delete</kbd> or <kbd>Backspace</kbd>).\r\n *\r\n * Note: This event is fired by the {@link module:typing/deleteobserver~DeleteObserver observer}\r\n * (usually registered by the {@link module:typing/delete~Delete delete feature}).\r\n *\r\n * @event module:engine/view/document~Document#event:delete\r\n * @param {module:engine/view/observer/domeventdata~DomEventData} data\r\n * @param {'forward'|'delete'} data.direction The direction in which the deletion should happen.\r\n * @param {'character'|'word'} data.unit The \"amount\" of content that should be deleted.\r\n * @param {Number} data.sequence A number describing which subsequent delete event it is without the key being released.\r\n * If it's 2 or more it means that the key was pressed and hold.\r\n * @param {module:engine/view/selection~Selection} [data.selectionToRemove] View selection which content should be removed. If not set,\r\n * current selection should be used.\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module typing/input\r\n */\r\n\r\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\r\nimport InputCommand from './inputcommand';\r\n\r\nimport injectUnsafeKeystrokesHandling from './utils/injectunsafekeystrokeshandling';\r\nimport injectTypingMutationsHandling from './utils/injecttypingmutationshandling';\r\n\r\n/**\r\n * Handles text input coming from the keyboard or other input methods.\r\n *\r\n * @extends module:core/plugin~Plugin\r\n */\r\nexport default class Input extends Plugin {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get pluginName() {\r\n\t\treturn 'Input';\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tinit() {\r\n\t\tconst editor = this.editor;\r\n\r\n\t\t// TODO The above default configuration value should be defined using editor.config.define() once it's fixed.\r\n\t\tconst inputCommand = new InputCommand( editor, editor.config.get( 'typing.undoStep' ) || 20 );\r\n\r\n\t\teditor.commands.add( 'input', inputCommand );\r\n\r\n\t\tinjectUnsafeKeystrokesHandling( editor );\r\n\t\tinjectTypingMutationsHandling( editor );\r\n\t}\r\n\r\n\t/**\r\n\t * Checks batch if it is a result of user input - e.g. typing.\r\n\t *\r\n\t *\t\tconst input = editor.plugins.get( 'Input' );\r\n\t *\r\n\t *\t\teditor.model.document.on( 'change:data', ( evt, batch ) => {\r\n\t *\t\t\tif ( input.isTyping( batch ) ) {\r\n\t *\t\t\t\tconsole.log( 'The user typed something...' );\r\n\t *\t\t\t}\r\n\t *\t\t} );\r\n\t *\r\n\t * **Note:** This method checks if the batch was created using {@link module:typing/inputcommand~InputCommand 'input'}\r\n\t * command as typing changes coming from user input are inserted to the document using that command.\r\n\t *\r\n\t * @param {module:engine/model/batch~Batch} batch A batch to check.\r\n\t * @returns {Boolean}\r\n\t */\r\n\tisInput( batch ) {\r\n\t\tconst inputCommand = this.editor.commands.get( 'input' );\r\n\r\n\t\treturn inputCommand._batches.has( batch );\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module typing/inputcommand\r\n */\r\n\r\nimport Command from '@ckeditor/ckeditor5-core/src/command';\r\n\r\nimport ChangeBuffer from './utils/changebuffer';\r\n\r\n/**\r\n * The input command. Used by the {@link module:typing/input~Input input feature} to handle typing.\r\n *\r\n * @extends module:core/command~Command\r\n */\r\nexport default class InputCommand extends Command {\r\n\t/**\r\n\t * Creates an instance of the command.\r\n\t *\r\n\t * @param {module:core/editor/editor~Editor} editor\r\n\t * @param {Number} undoStepSize The maximum number of atomic changes\r\n\t * which can be contained in one batch in the command buffer.\r\n\t */\r\n\tconstructor( editor, undoStepSize ) {\r\n\t\tsuper( editor );\r\n\r\n\t\t/**\r\n\t\t * Typing's change buffer used to group subsequent changes into batches.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @private\r\n\t\t * @member {module:typing/utils/changebuffer~ChangeBuffer} #_buffer\r\n\t\t */\r\n\t\tthis._buffer = new ChangeBuffer( editor.model, undoStepSize );\r\n\r\n\t\t/**\r\n\t\t * Stores batches created by the input command. The batches are used to differentiate input batches from other batches using\r\n\t\t * {@link module:typing/input~Input#isInput} method.\r\n\t\t *\r\n\t\t * @type {WeakSet<module:engine/model/batch~Batch>}\r\n\t\t * @protected\r\n\t\t */\r\n\t\tthis._batches = new WeakSet();\r\n\t}\r\n\r\n\t/**\r\n\t * The current change buffer.\r\n\t *\r\n\t * @type {module:typing/utils/changebuffer~ChangeBuffer}\r\n\t */\r\n\tget buffer() {\r\n\t\treturn this._buffer;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tdestroy() {\r\n\t\tsuper.destroy();\r\n\r\n\t\tthis._buffer.destroy();\r\n\t}\r\n\r\n\t/**\r\n\t * Executes the input command. It replaces the content within the given range with the given text.\r\n\t * Replacing is a two step process, first the content within the range is removed and then the new text is inserted\r\n\t * at the beginning of the range (which after the removal is a collapsed range).\r\n\t *\r\n\t * @fires execute\r\n\t * @param {Object} [options] The command options.\r\n\t * @param {String} [options.text=''] The text to be inserted.\r\n\t * @param {module:engine/model/range~Range} [options.range] The range in which the text is inserted. Defaults\r\n\t * to the first range in the current selection.\r\n\t * @param {module:engine/model/range~Range} [options.resultRange] The range where the selection\r\n\t * should be placed after the insertion. If not specified, the selection will be placed right after\r\n\t * the inserted text.\r\n\t */\r\n\texecute( options = {} ) {\r\n\t\tconst model = this.editor.model;\r\n\t\tconst doc = model.document;\r\n\t\tconst text = options.text || '';\r\n\t\tconst textInsertions = text.length;\r\n\t\tconst selection = options.range ? model.createSelection( options.range ) : doc.selection;\r\n\t\tconst resultRange = options.resultRange;\r\n\r\n\t\tmodel.enqueueChange( this._buffer.batch, writer => {\r\n\t\t\tthis._buffer.lock();\r\n\r\n\t\t\tmodel.deleteContent( selection );\r\n\r\n\t\t\tif ( text ) {\r\n\t\t\t\tmodel.insertContent( writer.createText( text, doc.selection.getAttributes() ), selection );\r\n\t\t\t}\r\n\r\n\t\t\tif ( resultRange ) {\r\n\t\t\t\twriter.setSelection( resultRange );\r\n\t\t\t} else if ( !selection.is( 'documentSelection' ) ) {\r\n\t\t\t\twriter.setSelection( selection );\r\n\t\t\t}\r\n\r\n\t\t\tthis._buffer.unlock();\r\n\r\n\t\t\tthis._buffer.input( textInsertions );\r\n\r\n\t\t\t// Store the batch as an 'input' batch for the Input.isInput( batch ) check.\r\n\t\t\tthis._batches.add( this._buffer.batch );\r\n\t\t} );\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module typing/typing\r\n */\r\n\r\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\r\nimport Input from './input';\r\nimport Delete from './delete';\r\n\r\n/**\r\n * The typing feature. It handles typing.\r\n *\r\n * This is a \"glue\" plugin which loads the {@link module:typing/input~Input} and {@link module:typing/delete~Delete}\r\n * plugins.\r\n *\r\n * @extends module:core/plugin~Plugin\r\n */\r\nexport default class Typing extends Plugin {\r\n\tstatic get requires() {\r\n\t\treturn [ Input, Delete ];\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get pluginName() {\r\n\t\treturn 'Typing';\r\n\t}\r\n}\r\n\r\n/**\r\n * The configuration of the typing features. Used by the features from the `@ckeditor/ckeditor5-typing` package.\r\n *\r\n * Read more in {@link module:typing/typing~TypingConfig}.\r\n *\r\n * @member {module:typing/typing~TypingConfig} module:core/editor/editorconfig~EditorConfig#typing\r\n */\r\n\r\n/**\r\n * The configuration of the typing features. Used by the typing features in `@ckeditor/ckeditor5-typing` package.\r\n *\r\n *\t\tClassicEditor\r\n *\t\t\t.create( editorElement, {\r\n * \t\t\t\ttyping: ... // Typing feature options.\r\n *\t\t\t} )\r\n *\t\t\t.then( ... )\r\n *\t\t\t.catch( ... );\r\n *\r\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\r\n *\r\n * @interface TypingConfig\r\n */\r\n\r\n/**\r\n * The granularity of undo/redo for typing and deleting. The value `20` means (more or less) that a new undo step\r\n * is created every 20 characters are inserted or deleted.\r\n *\r\n * @member {Number} [module:typing/typing~TypingConfig#undoStep=20]\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module typing/utils/changebuffer\r\n */\r\n\r\n/**\r\n * Change buffer allows to group atomic changes (like characters that have been typed) into\r\n * {@link module:engine/model/batch~Batch batches}.\r\n *\r\n * Batches represent single undo steps, hence changes added to one single batch are undone together.\r\n *\r\n * The buffer has a configurable limit of atomic changes that it can accommodate. After the limit was\r\n * exceeded (see {@link ~ChangeBuffer#input}), a new batch is created in {@link ~ChangeBuffer#batch}.\r\n *\r\n * To use the change buffer you need to let it know about the number of changes that were added to the batch:\r\n *\r\n *\t\tconst buffer = new ChangeBuffer( model, LIMIT );\r\n *\r\n *\t\t// Later on in your feature:\r\n *\t\tbuffer.batch.insert( pos, insertedCharacters );\r\n *\t\tbuffer.input( insertedCharacters.length );\r\n *\r\n */\r\nexport default class ChangeBuffer {\r\n\t/**\r\n\t * Creates a new instance of the change buffer.\r\n\t *\r\n\t * @param {module:engine/model/model~Model} model\r\n\t * @param {Number} [limit=20] The maximum number of atomic changes which can be contained in one batch.\r\n\t */\r\n\tconstructor( model, limit = 20 ) {\r\n\t\t/**\r\n\t\t * The model instance.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/model/model~Model} #model\r\n\t\t */\r\n\t\tthis.model = model;\r\n\r\n\t\t/**\r\n\t\t * The number of atomic changes in the buffer. Once it exceeds the {@link #limit},\r\n\t\t * the {@link #batch batch} is set to a new one.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Number} #size\r\n\t\t */\r\n\t\tthis.size = 0;\r\n\r\n\t\t/**\r\n\t\t * The maximum number of atomic changes which can be contained in one batch.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Number} #limit\r\n\t\t */\r\n\t\tthis.limit = limit;\r\n\r\n\t\t/**\r\n\t\t * Whether the buffer is locked. A locked buffer cannot be reset unless it gets unlocked.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Boolean} #isLocked\r\n\t\t */\r\n\t\tthis.isLocked = false;\r\n\r\n\t\t// The function to be called in order to notify the buffer about batches which appeared in the document.\r\n\t\t// The callback will check whether it is a new batch and in that case the buffer will be flushed.\r\n\t\t//\r\n\t\t// The reason why the buffer needs to be flushed whenever a new batch appears is that the changes added afterwards\r\n\t\t// should be added to a new batch. For instance, when the  user types, then inserts an image, and then types again,\r\n\t\t// the characters typed after inserting the image should be added to a different batch than the characters typed before.\r\n\t\tthis._changeCallback = ( evt, batch ) => {\r\n\t\t\tif ( batch.type != 'transparent' && batch !== this._batch ) {\r\n\t\t\t\tthis._reset( true );\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis._selectionChangeCallback = () => {\r\n\t\t\tthis._reset();\r\n\t\t};\r\n\r\n\t\tthis.model.document.on( 'change', this._changeCallback );\r\n\r\n\t\tthis.model.document.selection.on( 'change:range', this._selectionChangeCallback );\r\n\t\tthis.model.document.selection.on( 'change:attribute', this._selectionChangeCallback );\r\n\r\n\t\t/**\r\n\t\t * The current batch instance.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member #_batch\r\n\t\t */\r\n\r\n\t\t/**\r\n\t\t * The callback to document the change event which later needs to be removed.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member #_changeCallback\r\n\t\t */\r\n\r\n\t\t/**\r\n\t\t * The callback to document selection `change:attribute` and `change:range` events which resets the buffer.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member #_selectionChangeCallback\r\n\t\t */\r\n\t}\r\n\r\n\t/**\r\n\t * The current batch to which a feature should add its operations. Once the {@link #size}\r\n\t * is reached or exceeds the {@link #limit}, the batch is set to a new instance and the size is reset.\r\n\t *\r\n\t * @type {module:engine/model/batch~Batch}\r\n\t */\r\n\tget batch() {\r\n\t\tif ( !this._batch ) {\r\n\t\t\tthis._batch = this.model.createBatch();\r\n\t\t}\r\n\r\n\t\treturn this._batch;\r\n\t}\r\n\r\n\t/**\r\n\t * The input number of changes into the buffer. Once the {@link #size} is\r\n\t * reached or exceeds the {@link #limit}, the batch is set to a new instance and the size is reset.\r\n\t *\r\n\t * @param {Number} changeCount The number of atomic changes to input.\r\n\t */\r\n\tinput( changeCount ) {\r\n\t\tthis.size += changeCount;\r\n\r\n\t\tif ( this.size >= this.limit ) {\r\n\t\t\tthis._reset( true );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Locks the buffer.\r\n\t */\r\n\tlock() {\r\n\t\tthis.isLocked = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Unlocks the buffer.\r\n\t */\r\n\tunlock() {\r\n\t\tthis.isLocked = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys the buffer.\r\n\t */\r\n\tdestroy() {\r\n\t\tthis.model.document.off( 'change', this._changeCallback );\r\n\t\tthis.model.document.selection.off( 'change:range', this._selectionChangeCallback );\r\n\t\tthis.model.document.selection.off( 'change:attribute', this._selectionChangeCallback );\r\n\t}\r\n\r\n\t/**\r\n\t * Resets the change buffer.\r\n\t *\r\n\t * @private\r\n\t * @param {Boolean} [ignoreLock] Whether internal lock {@link #isLocked} should be ignored.\r\n\t */\r\n\t_reset( ignoreLock ) {\r\n\t\tif ( !this.isLocked || ignoreLock ) {\r\n\t\t\tthis._batch = null;\r\n\t\t\tthis.size = 0;\r\n\t\t}\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module typing/utils/injecttypingmutationshandling\r\n */\r\n\r\nimport diff from '@ckeditor/ckeditor5-utils/src/diff';\r\nimport DomConverter from '@ckeditor/ckeditor5-engine/src/view/domconverter';\r\n\r\nimport { getSingleTextNodeChange, containerChildrenMutated } from './utils';\r\n\r\n/**\r\n * Handles mutations caused by normal typing.\r\n *\r\n * @param {module:core/editor/editor~Editor} editor The editor instance.\r\n */\r\nexport default function injectTypingMutationsHandling( editor ) {\r\n\teditor.editing.view.document.on( 'mutations', ( evt, mutations, viewSelection ) => {\r\n\t\tnew MutationHandler( editor ).handle( mutations, viewSelection );\r\n\t} );\r\n}\r\n\r\n/**\r\n * Helper class for translating DOM mutations into model changes.\r\n *\r\n * @private\r\n */\r\nclass MutationHandler {\r\n\t/**\r\n\t * Creates an instance of the mutation handler.\r\n\t *\r\n\t * @param {module:core/editor/editor~Editor} editor\r\n\t */\r\n\tconstructor( editor ) {\r\n\t\t/**\r\n\t\t * Editor instance for which mutations are handled.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:core/editor/editor~Editor} #editor\r\n\t\t */\r\n\t\tthis.editor = editor;\r\n\r\n\t\t/**\r\n\t\t * The editing controller.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:engine/controller/editingcontroller~EditingController} #editing\r\n\t\t */\r\n\t\tthis.editing = this.editor.editing;\r\n\t}\r\n\r\n\t/**\r\n\t * Handles given mutations.\r\n\t *\r\n\t * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\r\n\t * module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\r\n\t * @param {module:engine/view/selection~Selection|null} viewSelection\r\n\t */\r\n\thandle( mutations, viewSelection ) {\r\n\t\tif ( containerChildrenMutated( mutations ) ) {\r\n\t\t\tthis._handleContainerChildrenMutations( mutations, viewSelection );\r\n\t\t} else {\r\n\t\t\tfor ( const mutation of mutations ) {\r\n\t\t\t\t// Fortunately it will never be both.\r\n\t\t\t\tthis._handleTextMutation( mutation, viewSelection );\r\n\t\t\t\tthis._handleTextNodeInsertion( mutation );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handles situations when container's children mutated during input. This can happen when\r\n\t * the browser is trying to \"fix\" DOM in certain situations. For example, when the user starts to type\r\n\t * in `<p><a href=\"\"><i>Link{}</i></a></p>`, the browser might change the order of elements\r\n\t * to `<p><i><a href=\"\">Link</a>x{}</i></p>`. A similar situation happens when the spell checker\r\n\t * replaces a word wrapped with `<strong>` with a word wrapped with a `<b>` element.\r\n\t *\r\n\t * To handle such situations, the common DOM ancestor of all mutations is converted to the model representation\r\n\t * and then compared with the current model to calculate the proper text change.\r\n\t *\r\n\t * Note: Single text node insertion is handled in {@link #_handleTextNodeInsertion} and text node mutation is handled\r\n\t * in {@link #_handleTextMutation}).\r\n\t *\r\n\t * @private\r\n\t * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\r\n\t * module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\r\n\t * @param {module:engine/view/selection~Selection|null} viewSelection\r\n\t */\r\n\t_handleContainerChildrenMutations( mutations, viewSelection ) {\r\n\t\t// Get common ancestor of all mutations.\r\n\t\tconst mutationsCommonAncestor = getMutationsContainer( mutations );\r\n\r\n\t\t// Quit if there is no common ancestor.\r\n\t\tif ( !mutationsCommonAncestor ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst domConverter = this.editor.editing.view.domConverter;\r\n\r\n\t\t// Get common ancestor in DOM.\r\n\t\tconst domMutationCommonAncestor = domConverter.mapViewToDom( mutationsCommonAncestor );\r\n\r\n\t\t// Create fresh DomConverter so it will not use existing mapping and convert current DOM to model.\r\n\t\t// This wouldn't be needed if DomConverter would allow to create fresh view without checking any mappings.\r\n\t\tconst freshDomConverter = new DomConverter( this.editor.editing.view.document );\r\n\t\tconst modelFromCurrentDom = this.editor.data.toModel(\r\n\t\t\tfreshDomConverter.domToView( domMutationCommonAncestor )\r\n\t\t).getChild( 0 );\r\n\r\n\t\t// Current model.\r\n\t\tconst currentModel = this.editor.editing.mapper.toModelElement( mutationsCommonAncestor );\r\n\r\n\t\t// If common ancestor is not mapped, do not do anything. It probably is a parent of another view element.\r\n\t\t// That means that we would need to diff model elements (see `if` below). Better return early instead of\r\n\t\t// trying to get a reasonable model ancestor. It will fell into the `if` below anyway.\r\n\t\t// This situation happens for example for lists. If `<ul>` is a common ancestor, `currentModel` is `undefined`\r\n\t\t// because `<ul>` is not mapped (`<li>`s are).\r\n\t\t// See https://github.com/ckeditor/ckeditor5/issues/718.\r\n\t\tif ( !currentModel ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Get children from both ancestors.\r\n\t\tconst modelFromDomChildren = Array.from( modelFromCurrentDom.getChildren() );\r\n\t\tconst currentModelChildren = Array.from( currentModel.getChildren() );\r\n\r\n\t\t// Remove the last `<softBreak>` from the end of `modelFromDomChildren` if there is no `<softBreak>` in current model.\r\n\t\t// If the described scenario happened, it means that this is a bogus `<br />` added by a browser.\r\n\t\tconst lastDomChild = modelFromDomChildren[ modelFromDomChildren.length - 1 ];\r\n\t\tconst lastCurrentChild = currentModelChildren[ currentModelChildren.length - 1 ];\r\n\r\n\t\tif ( lastDomChild && lastDomChild.is( 'softBreak' ) && lastCurrentChild && !lastCurrentChild.is( 'softBreak' ) ) {\r\n\t\t\tmodelFromDomChildren.pop();\r\n\t\t}\r\n\r\n\t\tconst schema = this.editor.model.schema;\r\n\r\n\t\t// Skip situations when common ancestor has any container elements.\r\n\t\tif ( !isSafeForTextMutation( modelFromDomChildren, schema ) || !isSafeForTextMutation( currentModelChildren, schema ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Replace &nbsp; inserted by the browser with normal space. See comment in `_handleTextMutation`.\r\n\t\t// Replace non-texts with any character. This is potentially dangerous but passes in manual tests. The thing is\r\n\t\t// that we need to take care of proper indexes so we cannot simply remove non-text elements from the content.\r\n\t\t// By inserting a character we keep all the real texts on their indexes.\r\n\t\tconst newText = modelFromDomChildren.map( item => item.is( 'text' ) ? item.data : '@' ).join( '' ).replace( /\\u00A0/g, ' ' );\r\n\t\tconst oldText = currentModelChildren.map( item => item.is( 'text' ) ? item.data : '@' ).join( '' ).replace( /\\u00A0/g, ' ' );\r\n\r\n\t\t// Do nothing if mutations created same text.\r\n\t\tif ( oldText === newText ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst diffResult = diff( oldText, newText );\r\n\r\n\t\tconst { firstChangeAt, insertions, deletions } = calculateChanges( diffResult );\r\n\r\n\t\t// Try setting new model selection according to passed view selection.\r\n\t\tlet modelSelectionRange = null;\r\n\r\n\t\tif ( viewSelection ) {\r\n\t\t\tmodelSelectionRange = this.editing.mapper.toModelRange( viewSelection.getFirstRange() );\r\n\t\t}\r\n\r\n\t\tconst insertText = newText.substr( firstChangeAt, insertions );\r\n\t\tconst removeRange = this.editor.model.createRange(\r\n\t\t\tthis.editor.model.createPositionAt( currentModel, firstChangeAt ),\r\n\t\t\tthis.editor.model.createPositionAt( currentModel, firstChangeAt + deletions )\r\n\t\t);\r\n\r\n\t\tthis.editor.execute( 'input', {\r\n\t\t\ttext: insertText,\r\n\t\t\trange: removeRange,\r\n\t\t\tresultRange: modelSelectionRange\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t_handleTextMutation( mutation, viewSelection ) {\r\n\t\tif ( mutation.type != 'text' ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Replace &nbsp; inserted by the browser with normal space.\r\n\t\t// We want only normal spaces in the model and in the view. Renderer and DOM Converter will be then responsible\r\n\t\t// for rendering consecutive spaces using &nbsp;, but the model and the view has to be clear.\r\n\t\t// Other feature may introduce inserting non-breakable space on specific key stroke (for example shift + space).\r\n\t\t// However then it will be handled outside of mutations, like enter key is.\r\n\t\t// The replacing is here because it has to be done before `diff` and `diffToChanges` functions, as they\r\n\t\t// take `newText` and compare it to (cleaned up) view.\r\n\t\t// It could also be done in mutation observer too, however if any outside plugin would like to\r\n\t\t// introduce additional events for mutations, they would get already cleaned up version (this may be good or not).\r\n\t\tconst newText = mutation.newText.replace( /\\u00A0/g, ' ' );\r\n\t\t// To have correct `diffResult`, we also compare view node text data with &nbsp; replaced by space.\r\n\t\tconst oldText = mutation.oldText.replace( /\\u00A0/g, ' ' );\r\n\r\n\t\t// Do nothing if mutations created same text.\r\n\t\tif ( oldText === newText ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst diffResult = diff( oldText, newText );\r\n\r\n\t\tconst { firstChangeAt, insertions, deletions } = calculateChanges( diffResult );\r\n\r\n\t\t// Try setting new model selection according to passed view selection.\r\n\t\tlet modelSelectionRange = null;\r\n\r\n\t\tif ( viewSelection ) {\r\n\t\t\tmodelSelectionRange = this.editing.mapper.toModelRange( viewSelection.getFirstRange() );\r\n\t\t}\r\n\r\n\t\t// Get the position in view and model where the changes will happen.\r\n\t\tconst viewPos = this.editing.view.createPositionAt( mutation.node, firstChangeAt );\r\n\t\tconst modelPos = this.editing.mapper.toModelPosition( viewPos );\r\n\t\tconst removeRange = this.editor.model.createRange( modelPos, modelPos.getShiftedBy( deletions ) );\r\n\t\tconst insertText = newText.substr( firstChangeAt, insertions );\r\n\r\n\t\tthis.editor.execute( 'input', {\r\n\t\t\ttext: insertText,\r\n\t\t\trange: removeRange,\r\n\t\t\tresultRange: modelSelectionRange\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t_handleTextNodeInsertion( mutation ) {\r\n\t\tif ( mutation.type != 'children' ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst change = getSingleTextNodeChange( mutation );\r\n\t\tconst viewPos = this.editing.view.createPositionAt( mutation.node, change.index );\r\n\t\tconst modelPos = this.editing.mapper.toModelPosition( viewPos );\r\n\t\tconst insertedText = change.values[ 0 ].data;\r\n\r\n\t\tthis.editor.execute( 'input', {\r\n\t\t\t// Replace &nbsp; inserted by the browser with normal space.\r\n\t\t\t// See comment in `_handleTextMutation`.\r\n\t\t\t// In this case we don't need to do this before `diff` because we diff whole nodes.\r\n\t\t\t// Just change &nbsp; in case there are some.\r\n\t\t\ttext: insertedText.replace( /\\u00A0/g, ' ' ),\r\n\t\t\trange: this.editor.model.createRange( modelPos )\r\n\t\t} );\r\n\t}\r\n}\r\n\r\n// Returns first common ancestor of all mutations that is either {@link module:engine/view/containerelement~ContainerElement}\r\n// or {@link module:engine/view/rootelement~RootElement}.\r\n//\r\n// @private\r\n// @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\r\n// module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\r\n// @returns {module:engine/view/containerelement~ContainerElement|engine/view/rootelement~RootElement|undefined}\r\nfunction getMutationsContainer( mutations ) {\r\n\tconst lca = mutations\r\n\t\t.map( mutation => mutation.node )\r\n\t\t.reduce( ( commonAncestor, node ) => {\r\n\t\t\treturn commonAncestor.getCommonAncestor( node, { includeSelf: true } );\r\n\t\t} );\r\n\r\n\tif ( !lca ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// We need to look for container and root elements only, so check all LCA's\r\n\t// ancestors (starting from itself).\r\n\treturn lca.getAncestors( { includeSelf: true, parentFirst: true } )\r\n\t\t.find( element => element.is( 'containerElement' ) || element.is( 'rootElement' ) );\r\n}\r\n\r\n// Returns true if provided array contains content that won't be problematic during diffing and text mutation handling.\r\n//\r\n// @param {Array.<module:engine/model/node~Node>} children\r\n// @param {module:engine/model/schema~Schema} schema\r\n// @returns {Boolean}\r\nfunction isSafeForTextMutation( children, schema ) {\r\n\treturn children.every( child => schema.isInline( child ) );\r\n}\r\n\r\n// Calculates first change index and number of characters that should be inserted and deleted starting from that index.\r\n//\r\n// @private\r\n// @param diffResult\r\n// @returns {{insertions: number, deletions: number, firstChangeAt: *}}\r\nfunction calculateChanges( diffResult ) {\r\n\t// Index where the first change happens. Used to set the position from which nodes will be removed and where will be inserted.\r\n\tlet firstChangeAt = null;\r\n\t// Index where the last change happens. Used to properly count how many characters have to be removed and inserted.\r\n\tlet lastChangeAt = null;\r\n\r\n\t// Get `firstChangeAt` and `lastChangeAt`.\r\n\tfor ( let i = 0; i < diffResult.length; i++ ) {\r\n\t\tconst change = diffResult[ i ];\r\n\r\n\t\tif ( change != 'equal' ) {\r\n\t\t\tfirstChangeAt = firstChangeAt === null ? i : firstChangeAt;\r\n\t\t\tlastChangeAt = i;\r\n\t\t}\r\n\t}\r\n\r\n\t// How many characters, starting from `firstChangeAt`, should be removed.\r\n\tlet deletions = 0;\r\n\t// How many characters, starting from `firstChangeAt`, should be inserted.\r\n\tlet insertions = 0;\r\n\r\n\tfor ( let i = firstChangeAt; i <= lastChangeAt; i++ ) {\r\n\t\t// If there is no change (equal) or delete, the character is existing in `oldText`. We count it for removing.\r\n\t\tif ( diffResult[ i ] != 'insert' ) {\r\n\t\t\tdeletions++;\r\n\t\t}\r\n\r\n\t\t// If there is no change (equal) or insert, the character is existing in `newText`. We count it for inserting.\r\n\t\tif ( diffResult[ i ] != 'delete' ) {\r\n\t\t\tinsertions++;\r\n\t\t}\r\n\t}\r\n\r\n\treturn { insertions, deletions, firstChangeAt };\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module typing/utils/injectunsafekeystrokeshandling\r\n */\r\n\r\nimport { getCode } from '@ckeditor/ckeditor5-utils/src/keyboard';\r\nimport env from '@ckeditor/ckeditor5-utils/src/env';\r\n\r\n/**\r\n * Handles keystrokes which are unsafe for typing. This handler's logic is explained\r\n * in https://github.com/ckeditor/ckeditor5-typing/issues/83#issuecomment-398690251.\r\n *\r\n * @param {module:core/editor/editor~Editor} editor The editor instance.\r\n */\r\nexport default function injectUnsafeKeystrokesHandling( editor ) {\r\n\tlet latestCompositionSelection = null;\r\n\r\n\tconst model = editor.model;\r\n\tconst view = editor.editing.view;\r\n\tconst inputCommand = editor.commands.get( 'input' );\r\n\r\n\t// For Android, we want to handle keystrokes on `beforeinput` to be sure that code in `DeleteObserver` already had a chance to be fired.\r\n\tif ( env.isAndroid ) {\r\n\t\tview.document.on( 'beforeinput', ( evt, evtData ) => handleUnsafeKeystroke( evtData ), { priority: 'lowest' } );\r\n\t} else {\r\n\t\tview.document.on( 'keydown', ( evt, evtData ) => handleUnsafeKeystroke( evtData ), { priority: 'lowest' } );\r\n\t}\r\n\r\n\tview.document.on( 'compositionstart', handleCompositionStart, { priority: 'lowest' } );\r\n\r\n\tview.document.on( 'compositionend', () => {\r\n\t\tlatestCompositionSelection = model.createSelection( model.document.selection );\r\n\t}, { priority: 'lowest' } );\r\n\r\n\t// Handles the keydown event. We need to guess whether such keystroke is going to result\r\n\t// in typing. If so, then before character insertion happens, any selected content needs\r\n\t// to be deleted. Otherwise the default browser deletion mechanism would be\r\n\t// triggered, resulting in:\r\n\t//\r\n\t// * Hundreds of mutations which could not be handled.\r\n\t// * But most importantly, loss of control over how the content is being deleted.\r\n\t//\r\n\t// The method is used in a low-priority listener, hence allowing other listeners (e.g. delete or enter features)\r\n\t// to handle the event.\r\n\t//\r\n\t// @param {module:engine/view/observer/keyobserver~KeyEventData} evtData\r\n\tfunction handleUnsafeKeystroke( evtData ) {\r\n\t\tconst doc = model.document;\r\n\t\tconst isComposing = view.document.isComposing;\r\n\t\tconst isSelectionUnchanged = latestCompositionSelection && latestCompositionSelection.isEqual( doc.selection );\r\n\r\n\t\t// Reset stored composition selection.\r\n\t\tlatestCompositionSelection = null;\r\n\r\n\t\t// By relying on the state of the input command we allow disabling the entire input easily\r\n\t\t// by just disabling the input command. We could’ve used here the delete command but that\r\n\t\t// would mean requiring the delete feature which would block loading one without the other.\r\n\t\t// We could also check the editor.isReadOnly property, but that wouldn't allow to block\r\n\t\t// the input without blocking other features.\r\n\t\tif ( !inputCommand.isEnabled ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( isSafeKeystroke( evtData ) || doc.selection.isCollapsed ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// If during composition, deletion should be prevented as it may remove composed sequence (#83).\r\n\t\tif ( isComposing && evtData.keyCode === 229 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// If there is a `keydown` event fired with '229' keycode it might be related\r\n\t\t// to recent composition. Check if selection is the same as upon ending recent composition,\r\n\t\t// if so do not remove selected content as it will remove composed sequence (#83).\r\n\t\tif ( !isComposing && evtData.keyCode === 229 && isSelectionUnchanged ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tdeleteSelectionContent();\r\n\t}\r\n\r\n\t// Handles the `compositionstart` event. It is used only in special cases to remove the contents\r\n\t// of a non-collapsed selection so composition itself does not result in complex mutations.\r\n\t//\r\n\t// The special case mentioned above is a situation in which the `keydown` event is fired after\r\n\t// `compositionstart` event. In such cases {@link #handleKeydown} cannot clear current selection\r\n\t// contents (because it is too late and will break the composition) so the composition handler takes care of it.\r\n\tfunction handleCompositionStart() {\r\n\t\tconst doc = model.document;\r\n\t\tconst isFlatSelection = doc.selection.rangeCount === 1 ? doc.selection.getFirstRange().isFlat : true;\r\n\r\n\t\t// If on `compositionstart` there is a non-collapsed selection which start and end have different parents\r\n\t\t// it means the `handleKeydown()` method did not remove its contents. It happens usually because\r\n\t\t// of different order of events (`compositionstart` before `keydown` - in Safari). In such cases\r\n\t\t// we need to remove selection contents on composition start (#83).\r\n\t\tif ( doc.selection.isCollapsed || isFlatSelection ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tdeleteSelectionContent();\r\n\t}\r\n\r\n\tfunction deleteSelectionContent() {\r\n\t\tconst buffer = inputCommand.buffer;\r\n\r\n\t\tbuffer.lock();\r\n\r\n\t\tmodel.enqueueChange( buffer.batch, () => {\r\n\t\t\tmodel.deleteContent( model.document.selection );\r\n\t\t} );\r\n\r\n\t\tbuffer.unlock();\r\n\t}\r\n}\r\n\r\nconst safeKeycodes = [\r\n\tgetCode( 'arrowUp' ),\r\n\tgetCode( 'arrowRight' ),\r\n\tgetCode( 'arrowDown' ),\r\n\tgetCode( 'arrowLeft' ),\r\n\t9, // Tab\r\n\t16, // Shift\r\n\t17, // Ctrl\r\n\t18, // Alt\r\n\t19, // Pause\r\n\t20, // CapsLock\r\n\t27, // Escape\r\n\t33, // PageUp\r\n\t34, // PageDown\r\n\t35, // Home\r\n\t36, // End,\r\n\t45, // Insert,\r\n\t91, // Windows,\r\n\t93, // Menu key,\r\n\t144, // NumLock\r\n\t145, // ScrollLock,\r\n\t173, // Mute/Unmute\r\n\t174, // Volume up\r\n\t175, // Volume down,\r\n\t176, // Next song,\r\n\t177, // Previous song,\r\n\t178, // Stop,\r\n\t179, // Play/Pause,\r\n\t255 // Display brightness (increase and decrease)\r\n];\r\n\r\n// Function keys.\r\nfor ( let code = 112; code <= 135; code++ ) {\r\n\tsafeKeycodes.push( code );\r\n}\r\n\r\n// Returns `true` if a keystroke should not cause any content change caused by \"typing\".\r\n//\r\n// Note: This implementation is very simple and will need to be refined with time.\r\n//\r\n// @private\r\n// @param {engine.view.observer.keyObserver.KeyEventData} keyData\r\n// @returns {Boolean}\r\nfunction isSafeKeystroke( keyData ) {\r\n\t// Keystrokes which contain Ctrl don't represent typing.\r\n\tif ( keyData.ctrlKey ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn safeKeycodes.includes( keyData.keyCode );\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module typing/utils/utils\r\n */\r\n\r\nimport diff from '@ckeditor/ckeditor5-utils/src/diff';\r\nimport diffToChanges from '@ckeditor/ckeditor5-utils/src/difftochanges';\r\n\r\n/**\r\n * Returns true if container children have mutated or more than a single text node was changed.\r\n *\r\n * @private\r\n * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\r\n * module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\r\n * @returns {Boolean}\r\n */\r\nexport function containerChildrenMutated( mutations ) {\r\n\tif ( mutations.length == 0 ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// Check if there is any mutation of `children` type or any mutation that changes more than one text node.\r\n\tfor ( const mutation of mutations ) {\r\n\t\tif ( mutation.type === 'children' && !getSingleTextNodeChange( mutation ) ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\treturn false;\r\n}\r\n\r\n/**\r\n * Returns change made to a single text node.\r\n *\r\n * @private\r\n * @param {module:engine/view/observer/mutationobserver~MutatedText|\r\n * module:engine/view/observer/mutationobserver~MutatedChildren} mutation\r\n * @returns {Object|undefined} Change object (see {@link module:utils/difftochanges~diffToChanges} output)\r\n * or undefined if more than a single text node was changed.\r\n */\r\nexport function getSingleTextNodeChange( mutation ) {\r\n\t// One new node.\r\n\tif ( mutation.newChildren.length - mutation.oldChildren.length != 1 ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Which is text.\r\n\tconst diffResult = diff( mutation.oldChildren, mutation.newChildren, compareChildNodes );\r\n\tconst changes = diffToChanges( diffResult, mutation.newChildren );\r\n\r\n\t// In case of [ delete, insert, insert ] the previous check will not exit.\r\n\tif ( changes.length > 1 ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst change = changes[ 0 ];\r\n\r\n\t// Which is text.\r\n\tif ( !( !!change.values[ 0 ] && change.values[ 0 ].is( 'text' ) ) ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\treturn change;\r\n}\r\n\r\n/**\r\n * Checks whether two view nodes are identical, which means they are the same object\r\n * or contain exactly same data (in case of text nodes).\r\n *\r\n * @private\r\n * @param {module:engine/view/node~Node} oldChild\r\n * @param {module:engine/view/node~Node} newChild\r\n * @returns {Boolean}\r\n */\r\nexport function compareChildNodes( oldChild, newChild ) {\r\n\tif ( !!oldChild && oldChild.is( 'text' ) && !!newChild && newChild.is( 'text' ) ) {\r\n\t\treturn oldChild.data === newChild.data;\r\n\t} else {\r\n\t\treturn oldChild === newChild;\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module ui/bindings/clickoutsidehandler\r\n */\r\n\r\n/* global document */\r\n\r\n/**\r\n * Handles clicking **outside** of a specified set of elements, then fires an action.\r\n *\r\n * **Note**: Actually, the action is executed upon `mousedown`, not `click`. It prevents\r\n * certain issues when the user keeps holding the mouse button and the UI cannot react\r\n * properly.\r\n *\r\n * @param {Object} options Configuration options.\r\n * @param {module:utils/dom/emittermixin~Emitter} options.emitter The emitter to which this behavior\r\n * should be added.\r\n * @param {Function} options.activator Function returning a `Boolean`, to determine whether the handler is active.\r\n * @param {Array.<HTMLElement>} options.contextElements HTML elements that determine the scope of the\r\n * handler. Clicking any of them or their descendants will **not** fire the callback.\r\n * @param {Function} options.callback An action executed by the handler.\r\n */\r\nexport default function clickOutsideHandler( { emitter, activator, callback, contextElements } ) {\r\n\temitter.listenTo( document, 'mousedown', ( evt, { target } ) => {\r\n\t\tif ( !activator() ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor ( const contextElement of contextElements ) {\r\n\t\t\tif ( contextElement.contains( target ) ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcallback();\r\n\t} );\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module ui/bindings/preventdefault\r\n */\r\n\r\n/**\r\n * A helper which executes a native `Event.preventDefault()` if the target of an event equals the\r\n * {@link module:ui/view~View#element element of the view}. It shortens the definition of a\r\n * {@link module:ui/view~View#template template}.\r\n *\r\n *\t\t// In a class extending View.\r\n *\t\timport preventDefault from '@ckeditor/ckeditor5-ui/src/bindings/preventdefault';\r\n *\r\n *\t\t// ...\r\n *\r\n *\t\tthis.setTemplate( {\r\n *\t\t\ttag: 'div',\r\n *\r\n *\t\t\ton: {\r\n *\t\t\t\t// Prevent the default mousedown action on this view.\r\n *\t\t\t\tmousedown: preventDefault( this )\r\n *\t\t\t}\r\n *\t\t} );\r\n *\r\n * @param {module:ui/view~View} view View instance that defines the template.\r\n * @returns {module:ui/template~TemplateToBinding}\r\n */\r\nexport default function preventDefault( view ) {\r\n\treturn view.bindTemplate.to( evt => {\r\n\t\tif ( evt.target === view.element ) {\r\n\t\t\tevt.preventDefault();\r\n\t\t}\r\n\t} );\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module ui/bindings/submithandler\r\n */\r\n\r\n/**\r\n * A handler useful for {@link module:ui/view~View views} working as HTML forms. It intercepts a native DOM\r\n * `submit` event, prevents the default web browser behavior (navigation and page reload) and\r\n * fires the `submit` event on a view instead. Such a custom event can be then used by any\r\n * {@link module:utils/dom/emittermixin~Emitter emitter}, e.g. to serialize the form data.\r\n *\r\n *\t\timport submitHandler from '@ckeditor/ckeditor5-ui/src/bindings/submithandler';\r\n *\r\n *\t\t// ...\r\n *\r\n *\t\tclass AnyFormView extends View {\r\n *\t\t\tconstructor() {\r\n *\t\t\t\tsuper();\r\n *\r\n *\t\t\t\t// ...\r\n *\r\n *\t\t\t\tsubmitHandler( {\r\n *\t\t\t\t\tview: this\r\n *\t\t\t\t} );\r\n *\t\t\t}\r\n *\t\t}\r\n *\r\n *\t\t// ...\r\n *\r\n *\t\tconst view = new AnyFormView();\r\n *\r\n *\t\t// A sample listener attached by an emitter working with the view.\r\n *\t\tthis.listenTo( view, 'submit', () => {\r\n *\t\t\tsaveTheFormData();\r\n *\t\t\thideTheForm();\r\n *\t\t} );\r\n *\r\n * @param {Object} [options] Configuration options.\r\n * @param {module:ui/view~View} options.view The view which DOM `submit` events should be handled.\r\n */\r\nexport default function submitHandler( { view } ) {\r\n\tview.listenTo( view.element, 'submit', ( evt, domEvt ) => {\r\n\t\tdomEvt.preventDefault();\r\n\t\tview.fire( 'submit' );\r\n\t}, { useCapture: true } );\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module ui/button/buttonview\r\n */\r\n\r\nimport View from '../view';\r\nimport IconView from '../icon/iconview';\r\nimport TooltipView from '../tooltip/tooltipview';\r\n\r\nimport uid from '@ckeditor/ckeditor5-utils/src/uid';\r\nimport { getEnvKeystrokeText } from '@ckeditor/ckeditor5-utils/src/keyboard';\r\n\r\nimport '../../theme/components/button/button.css';\r\n\r\n/**\r\n * The button view class.\r\n *\r\n *\t\tconst view = new ButtonView();\r\n *\r\n *\t\tview.set( {\r\n *\t\t\tlabel: 'A button',\r\n *\t\t\tkeystroke: 'Ctrl+B',\r\n *\t\t\ttooltip: true,\r\n *\t\t\twithText: true\r\n *\t\t} );\r\n *\r\n *\t\tview.render();\r\n *\r\n *\t\tdocument.body.append( view.element );\r\n *\r\n * @extends module:ui/view~View\r\n * @implements module:ui/button/button~Button\r\n */\r\nexport default class ButtonView extends View {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tconstructor( locale ) {\r\n\t\tsuper( locale );\r\n\r\n\t\tconst bind = this.bindTemplate;\r\n\t\tconst ariaLabelUid = uid();\r\n\r\n\t\t// Implement the Button interface.\r\n\t\tthis.set( 'class' );\r\n\t\tthis.set( 'labelStyle' );\r\n\t\tthis.set( 'icon' );\r\n\t\tthis.set( 'isEnabled', true );\r\n\t\tthis.set( 'isOn', false );\r\n\t\tthis.set( 'isVisible', true );\r\n\t\tthis.set( 'isToggleable', false );\r\n\t\tthis.set( 'keystroke' );\r\n\t\tthis.set( 'label' );\r\n\t\tthis.set( 'tabindex', -1 );\r\n\t\tthis.set( 'tooltip' );\r\n\t\tthis.set( 'tooltipPosition', 's' );\r\n\t\tthis.set( 'type', 'button' );\r\n\t\tthis.set( 'withText', false );\r\n\t\tthis.set( 'withKeystroke', false );\r\n\r\n\t\t/**\r\n\t\t * Collection of the child views inside of the button {@link #element}.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:ui/viewcollection~ViewCollection}\r\n\t\t */\r\n\t\tthis.children = this.createCollection();\r\n\r\n\t\t/**\r\n\t\t * Tooltip of the button view. It is configurable using the {@link #tooltip tooltip attribute}.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:ui/tooltip/tooltipview~TooltipView} #tooltipView\r\n\t\t */\r\n\t\tthis.tooltipView = this._createTooltipView();\r\n\r\n\t\t/**\r\n\t\t * Label of the button view. It is configurable using the {@link #label label attribute}.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:ui/view~View} #labelView\r\n\t\t */\r\n\t\tthis.labelView = this._createLabelView( ariaLabelUid );\r\n\r\n\t\t/**\r\n\t\t * The icon view of the button. Will be added to {@link #children} when the\r\n\t\t * {@link #icon icon attribute} is defined.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:ui/icon/iconview~IconView} #iconView\r\n\t\t */\r\n\t\tthis.iconView = new IconView();\r\n\r\n\t\tthis.iconView.extendTemplate( {\r\n\t\t\tattributes: {\r\n\t\t\t\tclass: 'ck-button__icon'\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t/**\r\n\t\t * A view displaying the keystroke of the button next to the {@link #labelView label}.\r\n\t\t * Added to {@link #children} when the {@link #withKeystroke `withKeystroke` attribute}\r\n\t\t * is defined.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:ui/view/view~View} #keystrokeView\r\n\t\t */\r\n\t\tthis.keystrokeView = this._createKeystrokeView();\r\n\r\n\t\t/**\r\n\t\t * Tooltip of the button bound to the template.\r\n\t\t *\r\n\t\t * @see #tooltip\r\n\t\t * @see #_getTooltipString\r\n\t\t * @private\r\n\t\t * @observable\r\n\t\t * @member {Boolean} #_tooltipString\r\n\t\t */\r\n\t\tthis.bind( '_tooltipString' ).to(\r\n\t\t\tthis, 'tooltip',\r\n\t\t\tthis, 'label',\r\n\t\t\tthis, 'keystroke',\r\n\t\t\tthis._getTooltipString.bind( this )\r\n\t\t);\r\n\r\n\t\tthis.setTemplate( {\r\n\t\t\ttag: 'button',\r\n\r\n\t\t\tattributes: {\r\n\t\t\t\tclass: [\r\n\t\t\t\t\t'ck',\r\n\t\t\t\t\t'ck-button',\r\n\t\t\t\t\tbind.to( 'class' ),\r\n\t\t\t\t\tbind.if( 'isEnabled', 'ck-disabled', value => !value ),\r\n\t\t\t\t\tbind.if( 'isVisible', 'ck-hidden', value => !value ),\r\n\t\t\t\t\tbind.to( 'isOn', value => value ? 'ck-on' : 'ck-off' ),\r\n\t\t\t\t\tbind.if( 'withText', 'ck-button_with-text' ),\r\n\t\t\t\t\tbind.if( 'withKeystroke', 'ck-button_with-keystroke' )\r\n\t\t\t\t],\r\n\t\t\t\ttype: bind.to( 'type', value => value ? value : 'button' ),\r\n\t\t\t\ttabindex: bind.to( 'tabindex' ),\r\n\t\t\t\t'aria-labelledby': `ck-editor__aria-label_${ ariaLabelUid }`,\r\n\t\t\t\t'aria-disabled': bind.if( 'isEnabled', true, value => !value ),\r\n\t\t\t\t'aria-pressed': bind.to( 'isOn', value => this.isToggleable ? String( value ) : false )\r\n\t\t\t},\r\n\r\n\t\t\tchildren: this.children,\r\n\r\n\t\t\ton: {\r\n\t\t\t\tmousedown: bind.to( evt => {\r\n\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t} ),\r\n\r\n\t\t\t\tclick: bind.to( evt => {\r\n\t\t\t\t\t// We can't make the button disabled using the disabled attribute, because it won't be focusable.\r\n\t\t\t\t\t// Though, shouldn't this condition be moved to the button controller?\r\n\t\t\t\t\tif ( this.isEnabled ) {\r\n\t\t\t\t\t\tthis.fire( 'execute' );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Prevent the default when button is disabled, to block e.g.\r\n\t\t\t\t\t\t// automatic form submitting. See ckeditor/ckeditor5-link#74.\r\n\t\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t} )\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\trender() {\r\n\t\tsuper.render();\r\n\r\n\t\tif ( this.icon ) {\r\n\t\t\tthis.iconView.bind( 'content' ).to( this, 'icon' );\r\n\t\t\tthis.children.add( this.iconView );\r\n\t\t}\r\n\r\n\t\tthis.children.add( this.tooltipView );\r\n\t\tthis.children.add( this.labelView );\r\n\r\n\t\tif ( this.withKeystroke ) {\r\n\t\t\tthis.children.add( this.keystrokeView );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Focuses the {@link #element} of the button.\r\n\t */\r\n\tfocus() {\r\n\t\tthis.element.focus();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a {@link module:ui/tooltip/tooltipview~TooltipView} instance and binds it with button\r\n\t * attributes.\r\n\t *\r\n\t * @private\r\n\t * @returns {module:ui/tooltip/tooltipview~TooltipView}\r\n\t */\r\n\t_createTooltipView() {\r\n\t\tconst tooltipView = new TooltipView();\r\n\r\n\t\ttooltipView.bind( 'text' ).to( this, '_tooltipString' );\r\n\t\ttooltipView.bind( 'position' ).to( this, 'tooltipPosition' );\r\n\r\n\t\treturn tooltipView;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a label view instance and binds it with button attributes.\r\n\t *\r\n\t * @private\r\n\t * @param {String} ariaLabelUid The aria label UID.\r\n\t * @returns {module:ui/view~View}\r\n\t */\r\n\t_createLabelView( ariaLabelUid ) {\r\n\t\tconst labelView = new View();\r\n\t\tconst bind = this.bindTemplate;\r\n\r\n\t\tlabelView.setTemplate( {\r\n\t\t\ttag: 'span',\r\n\r\n\t\t\tattributes: {\r\n\t\t\t\tclass: [\r\n\t\t\t\t\t'ck',\r\n\t\t\t\t\t'ck-button__label'\r\n\t\t\t\t],\r\n\t\t\t\tstyle: bind.to( 'labelStyle' ),\r\n\t\t\t\tid: `ck-editor__aria-label_${ ariaLabelUid }`\r\n\t\t\t},\r\n\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttext: this.bindTemplate.to( 'label' )\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t} );\r\n\r\n\t\treturn labelView;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a view that displays a keystroke next to a {@link #labelView label }\r\n\t * and binds it with button attributes.\r\n\t *\r\n\t * @private\r\n\t * @returns {module:ui/view~View}\r\n\t */\r\n\t_createKeystrokeView() {\r\n\t\tconst keystrokeView = new View();\r\n\r\n\t\tkeystrokeView.setTemplate( {\r\n\t\t\ttag: 'span',\r\n\r\n\t\t\tattributes: {\r\n\t\t\t\tclass: [\r\n\t\t\t\t\t'ck',\r\n\t\t\t\t\t'ck-button__keystroke'\r\n\t\t\t\t]\r\n\t\t\t},\r\n\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttext: this.bindTemplate.to( 'keystroke', text => getEnvKeystrokeText( text ) )\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t} );\r\n\r\n\t\treturn keystrokeView;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the text for the {@link #tooltipView} from the combination of\r\n\t * {@link #tooltip}, {@link #label} and {@link #keystroke} attributes.\r\n\t *\r\n\t * @private\r\n\t * @see #tooltip\r\n\t * @see #_tooltipString\r\n\t * @param {Boolean|String|Function} tooltip Button tooltip.\r\n\t * @param {String} label Button label.\r\n\t * @param {String} keystroke Button keystroke.\r\n\t * @returns {String}\r\n\t */\r\n\t_getTooltipString( tooltip, label, keystroke ) {\r\n\t\tif ( tooltip ) {\r\n\t\t\tif ( typeof tooltip == 'string' ) {\r\n\t\t\t\treturn tooltip;\r\n\t\t\t} else {\r\n\t\t\t\tif ( keystroke ) {\r\n\t\t\t\t\tkeystroke = getEnvKeystrokeText( keystroke );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( tooltip instanceof Function ) {\r\n\t\t\t\t\treturn tooltip( label, keystroke );\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn `${ label }${ keystroke ? ` (${ keystroke })` : '' }`;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn '';\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module ui/button/switchbuttonview\r\n */\r\n\r\nimport View from '../view';\r\nimport ButtonView from './buttonview';\r\n\r\nimport '../../theme/components/button/switchbutton.css';\r\n\r\n/**\r\n * The switch button view class.\r\n *\r\n *\t\tconst view = new SwitchButtonView();\r\n *\r\n *\t\tview.set( {\r\n *\t\t\twithText: true,\r\n *\t\t\tlabel: 'Switch me!'\r\n *\t\t} );\r\n *\r\n *\t\tview.render();\r\n *\r\n *\t\tdocument.body.append( view.element );\r\n *\r\n * @extends module:ui/button/buttonview~ButtonView\r\n */\r\nexport default class SwitchButtonView extends ButtonView {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tconstructor( locale ) {\r\n\t\tsuper( locale );\r\n\r\n\t\tthis.isToggleable = true;\r\n\r\n\t\t/**\r\n\t\t * The toggle switch of the button.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:ui/view~View} #toggleSwitchView\r\n\t\t */\r\n\t\tthis.toggleSwitchView = this._createToggleView();\r\n\r\n\t\tthis.extendTemplate( {\r\n\t\t\tattributes: {\r\n\t\t\t\tclass: 'ck-switchbutton'\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\trender() {\r\n\t\tsuper.render();\r\n\r\n\t\tthis.children.add( this.toggleSwitchView );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a toggle child view.\r\n\t *\r\n\t * @private\r\n\t * @returns {module:ui/view~View}\r\n\t */\r\n\t_createToggleView() {\r\n\t\tconst toggleSwitchView = new View();\r\n\r\n\t\ttoggleSwitchView.setTemplate( {\r\n\t\t\ttag: 'span',\r\n\r\n\t\t\tattributes: {\r\n\t\t\t\tclass: [\r\n\t\t\t\t\t'ck',\r\n\t\t\t\t\t'ck-button__toggle'\r\n\t\t\t\t]\r\n\t\t\t},\r\n\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttag: 'span',\r\n\r\n\t\t\t\t\tattributes: {\r\n\t\t\t\t\t\tclass: [\r\n\t\t\t\t\t\t\t'ck',\r\n\t\t\t\t\t\t\t'ck-button__toggle__inner'\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t} );\r\n\r\n\t\treturn toggleSwitchView;\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module ui/colorgrid/colorgrid\r\n */\r\n\r\nimport View from '../view';\r\nimport ColorTileView from './colortileview';\r\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\r\nimport FocusCycler from '../focuscycler';\r\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\r\nimport '../../theme/components/colorgrid/colorgrid.css';\r\n\r\n/**\r\n * A grid of {@link module:ui/colorgrid/colortile~ColorTileView color tiles}.\r\n *\r\n * @extends module:ui/view~View\r\n */\r\nexport default class ColorGridView extends View {\r\n\t/**\r\n\t * Creates an instance of a color grid containing {@link module:ui/colorgrid/colortile~ColorTileView tiles}.\r\n\t *\r\n\t * @param {module:utils/locale~Locale} [locale] The localization services instance.\r\n\t * @param {Object} options Component configuration\r\n\t * @param {Array.<module:ui/colorgrid/colorgrid~ColorDefinition>} [options.colorDefinitions] Array with definitions\r\n\t * required to create the {@link module:ui/colorgrid/colortile~ColorTileView tiles}.\r\n\t * @param {Number} options.columns A number of columns to display the tiles.\r\n\t */\r\n\tconstructor( locale, options ) {\r\n\t\tsuper( locale );\r\n\r\n\t\tconst colorDefinitions = options && options.colorDefinitions || [];\r\n\t\tconst viewStyleAttribute = {};\r\n\r\n\t\tif ( options && options.columns ) {\r\n\t\t\tviewStyleAttribute.gridTemplateColumns = `repeat( ${ options.columns }, 1fr)`;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The color of the currently selected color tile in {@link #items}.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @type {String}\r\n\t\t */\r\n\t\tthis.set( 'selectedColor' );\r\n\r\n\t\t/**\r\n\t\t * Collection of the child tile views.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:ui/viewcollection~ViewCollection}\r\n\t\t */\r\n\t\tthis.items = this.createCollection();\r\n\r\n\t\t/**\r\n\t\t * Tracks information about DOM focus in the grid.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:utils/focustracker~FocusTracker}\r\n\t\t */\r\n\t\tthis.focusTracker = new FocusTracker();\r\n\r\n\t\t/**\r\n\t\t * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\r\n\t\t */\r\n\t\tthis.keystrokes = new KeystrokeHandler();\r\n\r\n\t\t/**\r\n\t\t * Helps cycling over focusable {@link #items} in the grid.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @protected\r\n\t\t * @member {module:ui/focuscycler~FocusCycler}\r\n\t\t */\r\n\t\tthis._focusCycler = new FocusCycler( {\r\n\t\t\tfocusables: this.items,\r\n\t\t\tfocusTracker: this.focusTracker,\r\n\t\t\tkeystrokeHandler: this.keystrokes,\r\n\t\t\tactions: {\r\n\t\t\t\t// Navigate grid items backwards using the arrowup key.\r\n\t\t\t\tfocusPrevious: 'arrowleft',\r\n\r\n\t\t\t\t// Navigate grid items forwards using the arrowdown key.\r\n\t\t\t\tfocusNext: 'arrowright'\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tthis.items.on( 'add', ( evt, colorTile ) => {\r\n\t\t\tcolorTile.isOn = colorTile.color === this.selectedColor;\r\n\t\t} );\r\n\r\n\t\tcolorDefinitions.forEach( item => {\r\n\t\t\tconst colorTile = new ColorTileView();\r\n\r\n\t\t\tcolorTile.set( {\r\n\t\t\t\tcolor: item.color,\r\n\t\t\t\tlabel: item.label,\r\n\t\t\t\ttooltip: true,\r\n\t\t\t\thasBorder: item.options.hasBorder\r\n\t\t\t} );\r\n\r\n\t\t\tcolorTile.on( 'execute', () => {\r\n\t\t\t\tthis.fire( 'execute', {\r\n\t\t\t\t\tvalue: item.color,\r\n\t\t\t\t\thasBorder: item.options.hasBorder,\r\n\t\t\t\t\tlabel: item.label\r\n\t\t\t\t} );\r\n\t\t\t} );\r\n\r\n\t\t\tthis.items.add( colorTile );\r\n\t\t} );\r\n\r\n\t\tthis.setTemplate( {\r\n\t\t\ttag: 'div',\r\n\t\t\tchildren: this.items,\r\n\t\t\tattributes: {\r\n\t\t\t\tclass: [\r\n\t\t\t\t\t'ck',\r\n\t\t\t\t\t'ck-color-grid'\r\n\t\t\t\t],\r\n\t\t\t\tstyle: viewStyleAttribute\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tthis.on( 'change:selectedColor', ( evt, name, selectedColor ) => {\r\n\t\t\tfor ( const item of this.items ) {\r\n\t\t\t\titem.isOn = item.color === selectedColor;\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * Focuses the first focusable in {@link #items}.\r\n\t */\r\n\tfocus() {\r\n\t\tif ( this.items.length ) {\r\n\t\t\tthis.items.first.focus();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Focuses the last focusable in {@link #items}.\r\n\t */\r\n\tfocusLast() {\r\n\t\tif ( this.items.length ) {\r\n\t\t\tthis.items.last.focus();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\trender() {\r\n\t\tsuper.render();\r\n\r\n\t\t// Items added before rendering should be known to the #focusTracker.\r\n\t\tfor ( const item of this.items ) {\r\n\t\t\tthis.focusTracker.add( item.element );\r\n\t\t}\r\n\r\n\t\tthis.items.on( 'add', ( evt, item ) => {\r\n\t\t\tthis.focusTracker.add( item.element );\r\n\t\t} );\r\n\r\n\t\tthis.items.on( 'remove', ( evt, item ) => {\r\n\t\t\tthis.focusTracker.remove( item.element );\r\n\t\t} );\r\n\r\n\t\t// Start listening for the keystrokes coming from #element.\r\n\t\tthis.keystrokes.listenTo( this.element );\r\n\t}\r\n}\r\n\r\n/**\r\n * A color definition used to create a {@link module:ui/colorgrid/colortile~ColorTileView}.\r\n *\r\n *\t\t{\r\n *\t\t\tcolor: hsl(0, 0%, 75%),\r\n *\t\t\tlabel: 'Light Grey',\r\n *\t\t\toptions: {\r\n *\t\t\t\thasBorder: true\r\n *\t\t\t}\r\n *\t\t}\r\n *\r\n * @typedef {Object} module:ui/colorgrid/colorgrid~ColorDefinition\r\n * @type Object\r\n *\r\n * @property {String} color String representing a color.\r\n * It is used as value of background-color style in {@link module:ui/colorgrid/colortile~ColorTileView}.\r\n * @property {String} label String used as label for {@link module:ui/colorgrid/colortile~ColorTileView}.\r\n * @property {Object} options Additional options passed to create a {@link module:ui/colorgrid/colortile~ColorTileView}.\r\n * @property {Boolean} options.hasBorder A flag that indicates if special a CSS class should be added\r\n * to {@link module:ui/colorgrid/colortile~ColorTileView}, which renders a border around it.\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module ui/colorgrid/colortile\r\n */\r\n\r\nimport ButtonView from '../button/buttonview';\r\nimport checkIcon from '../../theme/icons/color-tile-check.svg';\r\n\r\n/**\r\n * This class represents a single color tile in the {@link module:ui/colorgrid/colorgrid~ColorGridView}.\r\n *\r\n * @extends module:ui/button/buttonview~ButtonView\r\n */\r\nexport default class ColorTileView extends ButtonView {\r\n\tconstructor( locale ) {\r\n\t\tsuper( locale );\r\n\r\n\t\tconst bind = this.bindTemplate;\r\n\r\n\t\t/**\r\n\t\t * String representing a color shown as tile's background.\r\n\t\t *\r\n\t\t * @type {String}\r\n\t\t */\r\n\t\tthis.set( 'color' );\r\n\r\n\t\t/**\r\n\t\t * A flag that toggles a special CSS class responsible for displaying\r\n\t\t * a border around the button.\r\n\t\t *\r\n\t\t * @type {Boolean}\r\n\t\t */\r\n\t\tthis.set( 'hasBorder' );\r\n\r\n\t\tthis.icon = checkIcon;\r\n\r\n\t\tthis.extendTemplate( {\r\n\t\t\tattributes: {\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tbackgroundColor: bind.to( 'color' )\r\n\t\t\t\t},\r\n\t\t\t\tclass: [\r\n\t\t\t\t\t'ck',\r\n\t\t\t\t\t'ck-color-grid__tile',\r\n\t\t\t\t\tbind.if( 'hasBorder', 'ck-color-table__color-tile_bordered' )\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\trender() {\r\n\t\tsuper.render();\r\n\r\n\t\tthis.iconView.fillColor = 'hsl(0, 0%, 100%)';\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\n/**\r\n * @module ui/colorgrid/utils\r\n */\n/**\r\n * Returns color configuration options as defined in `editor.config.(fontColor|fontBackgroundColor).colors` or\r\n * `editor.config.table.(tableProperties|tableCellProperties).(background|border).colors\r\n * but processed to account for editor localization in the correct language.\r\n *\r\n * Note: The reason behind this method is that there is no way to use {@link module:utils/locale~Locale#t}\r\n * when the user configuration is defined because the editor does not exist yet.\r\n *\r\n * @param {module:utils/locale~Locale} locale The {@link module:core/editor/editor~Editor#locale} instance.\r\n * @param {Array.<module:ui/colorgrid/colorgrid~ColorDefinition>} options\r\n * @returns {Array.<module:ui/colorgrid/colorgrid~ColorDefinition>}.\r\n */\nexport function getLocalizedColorOptions(locale, options) {\n    const t = locale.t;\n    const localizedColorNames = {\n        Black: t('aa'),\n        'Dim grey': t('ab'),\n        Grey: t('ac'),\n        'Light grey': t('ad'),\n        White: t('ae'),\n        Red: t('af'),\n        Orange: t('ag'),\n        Yellow: t('ah'),\n        'Light green': t('ai'),\n        Green: t('aj'),\n        Aquamarine: t('ak'),\n        Turquoise: t('al'),\n        'Light blue': t('am'),\n        Blue: t('an'),\n        Purple: t('ao')\n    };\n    return options.map(colorOption => {\n        const label = localizedColorNames[colorOption.label];\n        if (label && label != colorOption.label) {\n            colorOption.label = label;\n        }\n        return colorOption;\n    });\n}\n/**\r\n * Creates a unified color definition object from color configuration options.\r\n * The object contains the information necessary to both render the UI and initialize the conversion.\r\n *\r\n * @param {module:ui/colorgrid/colorgrid~ColorDefinition} options\r\n * @returns {Array.<module:ui/colorgrid/colorgrid~ColorDefinition>}\r\n */\nexport function normalizeColorOptions(options) {\n    return options.map(normalizeSingleColorDefinition).filter(option => !!option);\n}\n// Creates a normalized color definition from the user-defined configuration.\n//\n// @param {String|module:ui/colorgrid/colorgrid~ColorDefinition}\n// @returns {module:ui/colorgrid/colorgrid~ColorDefinition}\nexport function normalizeSingleColorDefinition(color) {\n    if (typeof color === 'string') {\n        return {\n            model: color.replace(/ /g, ''),\n            label: color,\n            hasBorder: false,\n            view: {\n                name: 'span',\n                styles: { color }\n            }\n        };\n    } else {\n        return {\n            model: color.color.replace(/ /g, ''),\n            label: color.label || color.color,\n            hasBorder: color.hasBorder === undefined ? false : color.hasBorder,\n            view: {\n                name: 'span',\n                styles: { color: `${ color.color }` }\n            }\n        };\n    }\n}","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module ui/componentfactory\r\n */\r\n\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\n\r\n/**\r\n * A helper class implementing the UI component ({@link module:ui/view~View view}) factory.\r\n *\r\n * It allows functions producing specific UI components to be registered under their unique names\r\n * in the factory. A registered component can be then instantiated by providing its name.\r\n * Note that names are case insensitive.\r\n *\r\n *\t\t// The editor provides localization tools for the factory.\r\n *\t\tconst factory = new ComponentFactory( editor );\r\n *\r\n *\t\tfactory.add( 'foo', locale => new FooView( locale ) );\r\n *\t\tfactory.add( 'bar', locale => new BarView( locale ) );\r\n *\r\n *\t\t// An instance of FooView.\r\n *\t\tconst fooInstance = factory.create( 'foo' );\r\n *\r\n *\t\t// Names are case insensitive so this is also allowed:\r\n *\t\tconst barInstance = factory.create( 'Bar' );\r\n *\r\n * The {@link module:core/editor/editor~Editor#locale editor locale} is passed to the factory\r\n * function when {@link module:ui/componentfactory~ComponentFactory#create} is called.\r\n */\r\nexport default class ComponentFactory {\r\n\t/**\r\n\t * Creates an instance of the factory.\r\n\t *\r\n\t * @constructor\r\n\t * @param {module:core/editor/editor~Editor} editor The editor instance.\r\n\t */\r\n\tconstructor( editor ) {\r\n\t\t/**\r\n\t\t * The editor instance that the factory belongs to.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:core/editor/editor~Editor}\r\n\t\t */\r\n\t\tthis.editor = editor;\r\n\r\n\t\t/**\r\n\t\t * Registered component factories.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Map}\r\n\t\t */\r\n\t\tthis._components = new Map();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an iterator of registered component names. Names are returned in lower case.\r\n\t *\r\n\t * @returns {Iterable.<String>}\r\n\t */\r\n\t* names() {\r\n\t\tfor ( const value of this._components.values() ) {\r\n\t\t\tyield value.originalName;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a component factory function that will be used by the\r\n\t * {@link #create create} method and called with the\r\n\t * {@link module:core/editor/editor~Editor#locale editor locale} as an argument,\r\n\t * allowing localization of the {@link module:ui/view~View view}.\r\n\t *\r\n\t * @param {String} name The name of the component.\r\n\t * @param {Function} callback The callback that returns the component.\r\n\t */\r\n\tadd( name, callback ) {\r\n\t\tif ( this.has( name ) ) {\r\n\t\t\t/**\r\n\t\t\t * The item already exists in the component factory.\r\n\t\t\t *\r\n\t\t\t * @error componentfactory-item-exists\r\n\t\t\t * @param {String} name The name of the component.\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'componentfactory-item-exists: The item already exists in the component factory.',\r\n\t\t\t\tthis,\r\n\t\t\t\t{ name }\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tthis._components.set( getNormalized( name ), { callback, originalName: name } );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates an instance of a component registered in the factory under a specific name.\r\n\t *\r\n\t * When called, the {@link module:core/editor/editor~Editor#locale editor locale} is passed to\r\n\t * the previously {@link #add added} factory function, allowing localization of the\r\n\t * {@link module:ui/view~View view}.\r\n\t *\r\n\t * @param {String} name The name of the component.\r\n\t * @returns {module:ui/view~View} The instantiated component view.\r\n\t */\r\n\tcreate( name ) {\r\n\t\tif ( !this.has( name ) ) {\r\n\t\t\t/**\r\n\t\t\t * The required component is not registered in the component factory. Please make sure\r\n\t\t\t * the provided name is correct and the component has been correctly\r\n\t\t\t * {@link #add added} to the factory.\r\n\t\t\t *\r\n\t\t\t * @error componentfactory-item-missing\r\n\t\t\t * @param {String} name The name of the missing component.\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'componentfactory-item-missing: The required component is not registered in the factory.',\r\n\t\t\t\tthis,\r\n\t\t\t\t{ name }\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn this._components.get( getNormalized( name ) ).callback( this.editor.locale );\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if a component of a given name is registered in the factory.\r\n\t *\r\n\t * @param {String} name The name of the component.\r\n\t * @returns {Boolean}\r\n\t */\r\n\thas( name ) {\r\n\t\treturn this._components.has( getNormalized( name ) );\r\n\t}\r\n}\r\n\r\n//\r\n// Ensures that the component name used as the key in the internal map is in lower case.\r\n//\r\n// @private\r\n// @param {String} name\r\n// @returns {String}\r\nfunction getNormalized( name ) {\r\n\treturn String( name ).toLowerCase();\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module ui/dropdown/button/dropdownbuttonview\r\n */\r\n\r\nimport ButtonView from '../../button/buttonview';\r\n\r\nimport dropdownArrowIcon from '../../../theme/icons/dropdown-arrow.svg';\r\nimport IconView from '../../icon/iconview';\r\n\r\n/**\r\n * The default dropdown button view class.\r\n *\r\n *\t\tconst view = new DropdownButtonView();\r\n *\r\n *\t\tview.set( {\r\n *\t\t\tlabel: 'A button',\r\n *\t\t\tkeystroke: 'Ctrl+B',\r\n *\t\t\ttooltip: true\r\n *\t\t} );\r\n *\r\n *\t\tview.render();\r\n *\r\n *\t\tdocument.body.append( view.element );\r\n *\r\n * Also see the {@link module:ui/dropdown/utils~createDropdown `createDropdown()` util}.\r\n *\r\n * @implements module:ui/dropdown/button/dropdownbutton~DropdownButton\r\n * @extends module:ui/button/buttonview~ButtonView\r\n */\r\nexport default class DropdownButtonView extends ButtonView {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tconstructor( locale ) {\r\n\t\tsuper( locale );\r\n\r\n\t\t/**\r\n\t\t * An icon that displays arrow to indicate a dropdown button.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:ui/icon/iconview~IconView}\r\n\t\t */\r\n\t\tthis.arrowView = this._createArrowView();\r\n\r\n\t\tthis.extendTemplate( {\r\n\t\t\tattributes: {\r\n\t\t\t\t'aria-haspopup': true\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// The DropdownButton interface expects the open event upon which will open the dropdown.\r\n\t\tthis.delegate( 'execute' ).to( this, 'open' );\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\trender() {\r\n\t\tsuper.render();\r\n\r\n\t\tthis.children.add( this.arrowView );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a {@link module:ui/icon/iconview~IconView} instance as {@link #arrowView}.\r\n\t *\r\n\t * @private\r\n\t * @returns {module:ui/icon/iconview~IconView}\r\n\t */\r\n\t_createArrowView() {\r\n\t\tconst arrowView = new IconView();\r\n\r\n\t\tarrowView.content = dropdownArrowIcon;\r\n\r\n\t\tarrowView.extendTemplate( {\r\n\t\t\tattributes: {\r\n\t\t\t\tclass: 'ck-dropdown__arrow'\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\treturn arrowView;\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module ui/dropdown/dropdownpanelview\r\n */\r\n\r\nimport View from '../view';\r\n\r\n/**\r\n * The dropdown panel view class.\r\n *\r\n * See {@link module:ui/dropdown/dropdownview~DropdownView} to learn about the common usage.\r\n *\r\n * @extends module:ui/view~View\r\n */\r\nexport default class DropdownPanelView extends View {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tconstructor( locale ) {\r\n\t\tsuper( locale );\r\n\r\n\t\tconst bind = this.bindTemplate;\r\n\r\n\t\t/**\r\n\t\t * Controls whether the panel is visible.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @member {Boolean} #isVisible\r\n\t\t */\r\n\t\tthis.set( 'isVisible', false );\r\n\r\n\t\t/**\r\n\t\t * The position of the panel, relative to the parent.\r\n\t\t *\r\n\t\t * This property is reflected in the CSS class set to {@link #element} that controls\r\n\t\t * the position of the panel.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @default 'se'\r\n\t\t * @member {'se'|'sw'|'ne'|'nw'} #position\r\n\t\t */\r\n\t\tthis.set( 'position', 'se' );\r\n\r\n\t\t/**\r\n\t\t * Collection of the child views in this panel.\r\n\t\t *\r\n\t\t * A common child type is the {@link module:ui/list/listview~ListView} and {@link module:ui/toolbar/toolbarview~ToolbarView}.\r\n\t\t * See {@link module:ui/dropdown/utils~addListToDropdown} and\r\n\t\t * {@link module:ui/dropdown/utils~addToolbarToDropdown} to learn more about child views of dropdowns.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:ui/viewcollection~ViewCollection}\r\n\t\t */\r\n\t\tthis.children = this.createCollection();\r\n\r\n\t\tthis.setTemplate( {\r\n\t\t\ttag: 'div',\r\n\r\n\t\t\tattributes: {\r\n\t\t\t\tclass: [\r\n\t\t\t\t\t'ck',\r\n\t\t\t\t\t'ck-reset',\r\n\t\t\t\t\t'ck-dropdown__panel',\r\n\t\t\t\t\tbind.to( 'position', value => `ck-dropdown__panel_${ value }` ),\r\n\t\t\t\t\tbind.if( 'isVisible', 'ck-dropdown__panel-visible' )\r\n\t\t\t\t]\r\n\t\t\t},\r\n\r\n\t\t\tchildren: this.children,\r\n\r\n\t\t\ton: {\r\n\t\t\t\t// Drag and drop in the panel should not break the selection in the editor.\r\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/228\r\n\t\t\t\tselectstart: bind.to( evt => evt.preventDefault() )\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * Focuses the view element or first item in view collection on opening dropdown's panel.\r\n\t *\r\n\t * See also {@link module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable}.\r\n\t */\r\n\tfocus() {\r\n\t\tif ( this.children.length ) {\r\n\t\t\tthis.children.first.focus();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Focuses the view element or last item in view collection on opening dropdown's panel.\r\n\t *\r\n\t * See also {@link module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable}.\r\n\t */\r\n\tfocusLast() {\r\n\t\tif ( this.children.length ) {\r\n\t\t\tconst lastChild = this.children.last;\r\n\r\n\t\t\tif ( typeof lastChild.focusLast === 'function' ) {\r\n\t\t\t\tlastChild.focusLast();\r\n\t\t\t} else {\r\n\t\t\t\tlastChild.focus();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module ui/dropdown/dropdownview\r\n */\r\n\r\nimport View from '../view';\r\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\r\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\r\n\r\nimport '../../theme/components/dropdown/dropdown.css';\r\n\r\nimport { getOptimalPosition } from '@ckeditor/ckeditor5-utils/src/dom/position';\r\n\r\n/**\r\n * The dropdown view class. It manages the dropdown button and dropdown panel.\r\n *\r\n * In most cases, the easiest way to create a dropdown is by using the {@link module:ui/dropdown/utils~createDropdown}\r\n * util:\r\n *\r\n *\t\tconst dropdown = createDropdown( locale );\r\n *\r\n *\t\t// Configure dropdown's button properties:\r\n *\t\tdropdown.buttonView.set( {\r\n *\t\t\tlabel: 'A dropdown',\r\n *\t\t\twithText: true\r\n *\t\t} );\r\n *\r\n *\t\tdropdown.render();\r\n *\r\n *\t\tdropdown.panelView.element.textContent = 'Content of the panel';\r\n *\r\n *\t\t// Will render a dropdown with a panel containing a \"Content of the panel\" text.\r\n *\t\tdocument.body.appendChild( dropdown.element );\r\n *\r\n * If you want to add a richer content to the dropdown panel, you can use the {@link module:ui/dropdown/utils~addListToDropdown}\r\n * and {@link module:ui/dropdown/utils~addToolbarToDropdown} helpers. See more examples in\r\n * {@link module:ui/dropdown/utils~createDropdown} documentation.\r\n *\r\n * If you want to create a completely custom dropdown, then you can compose it manually:\r\n *\r\n *\t\tconst button = new DropdownButtonView( locale );\r\n *\t\tconst panel = new DropdownPanelView( locale );\r\n *\t\tconst dropdown = new DropdownView( locale, button, panel );\r\n *\r\n *\t\tbutton.set( {\r\n *\t\t\tlabel: 'A dropdown',\r\n *\t\t\twithText: true\r\n *\t\t} );\r\n *\r\n *\t\tdropdown.render();\r\n *\r\n *\t\tpanel.element.textContent = 'Content of the panel';\r\n *\r\n *\t\t// Will render a dropdown with a panel containing a \"Content of the panel\" text.\r\n *\t\tdocument.body.appendChild( dropdown.element );\r\n *\r\n * However, dropdown created this way will contain little behavior. You will need to implement handlers for actions\r\n * such as {@link module:ui/bindings/clickoutsidehandler~clickOutsideHandler clicking outside an open dropdown}\r\n * (which should close it) and support for arrow keys inside the panel. Therefore, unless you really know what\r\n * you do and you really need to do it, it is recommended to use the {@link module:ui/dropdown/utils~createDropdown} helper.\r\n *\r\n * @extends module:ui/view~View\r\n */\r\nexport default class DropdownView extends View {\r\n\t/**\r\n\t * Creates an instance of the dropdown.\r\n\t *\r\n\t * Also see {@link #render}.\r\n\t *\r\n\t * @param {module:utils/locale~Locale} [locale] The localization services instance.\r\n\t * @param {module:ui/dropdown/button/dropdownbutton~DropdownButton} buttonView\r\n\t * @param {module:ui/dropdown/dropdownpanelview~DropdownPanelView} panelView\r\n\t */\r\n\tconstructor( locale, buttonView, panelView ) {\r\n\t\tsuper( locale );\r\n\r\n\t\tconst bind = this.bindTemplate;\r\n\r\n\t\t/**\r\n\t\t * Button of the dropdown view. Clicking the button opens the {@link #panelView}.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:ui/button/buttonview~ButtonView} #buttonView\r\n\t\t */\r\n\t\tthis.buttonView = buttonView;\r\n\r\n\t\t/**\r\n\t\t * Panel of the dropdown. It opens when the {@link #buttonView} is\r\n\t\t * {@link module:ui/button/buttonview~ButtonView#event:execute executed} (i.e. clicked).\r\n\t\t *\r\n\t\t * Child views can be added to the panel's `children` collection:\r\n\t\t *\r\n\t\t *\t\tdropdown.panelView.children.add( childView );\r\n\t\t *\r\n\t\t * See {@link module:ui/dropdown/dropdownpanelview~DropdownPanelView#children} and\r\n\t\t * {@link module:ui/viewcollection~ViewCollection#add}.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:ui/dropdown/dropdownpanelview~DropdownPanelView} #panelView\r\n\t\t */\r\n\t\tthis.panelView = panelView;\r\n\r\n\t\t/**\r\n\t\t * Controls whether the dropdown view is open, i.e. shows or hides the {@link #panelView panel}.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @member {Boolean} #isOpen\r\n\t\t */\r\n\t\tthis.set( 'isOpen', false );\r\n\r\n\t\t/**\r\n\t\t * Controls whether the dropdown is enabled, i.e. it can be clicked and execute an action.\r\n\t\t *\r\n\t\t * See {@link module:ui/button/buttonview~ButtonView#isEnabled}.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @member {Boolean} #isEnabled\r\n\t\t */\r\n\t\tthis.set( 'isEnabled', true );\r\n\r\n\t\t/**\r\n\t\t * (Optional) The additional CSS class set on the dropdown {@link #element}.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @member {String} #class\r\n\t\t */\r\n\t\tthis.set( 'class' );\r\n\r\n\t\t/**\r\n\t\t * (Optional) The `id` attribute of the dropdown (i.e. to pair with a `<label>` element).\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @member {String} #id\r\n\t\t */\r\n\t\tthis.set( 'id' );\r\n\r\n\t\t/**\r\n\t\t * The position of the panel, relative to the dropdown.\r\n\t\t *\r\n\t\t * **Note**: When `'auto'`, the panel will use one of the remaining positions to stay\r\n\t\t * in the viewport, visible to the user. The positions correspond directly to\r\n\t\t * {@link module:ui/dropdown/dropdownview~DropdownView.defaultPanelPositions default panel positions}.\r\n\t\t *\r\n\t\t * **Note**: This value has an impact on the\r\n\t\t * {@link module:ui/dropdown/dropdownpanelview~DropdownPanelView#position} property\r\n\t\t * each time the panel becomes {@link #isOpen open}.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @default 'auto'\r\n\t\t * @member {'auto'|'se'|'sw'|'ne'|'nw'} #panelPosition\r\n\t\t */\r\n\t\tthis.set( 'panelPosition', 'auto' );\r\n\r\n\t\t/**\r\n\t\t * Tracks information about DOM focus in the dropdown.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:utils/focustracker~FocusTracker}\r\n\t\t */\r\n\t\tthis.focusTracker = new FocusTracker();\r\n\r\n\t\t/**\r\n\t\t * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}. It manages\r\n\t\t * keystrokes of the dropdown:\r\n\t\t *\r\n\t\t * * <kbd>▼</kbd> opens the dropdown,\r\n\t\t * * <kbd>◀</kbd> and <kbd>Esc</kbd> closes the dropdown.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\r\n\t\t */\r\n\t\tthis.keystrokes = new KeystrokeHandler();\r\n\r\n\t\tthis.setTemplate( {\r\n\t\t\ttag: 'div',\r\n\r\n\t\t\tattributes: {\r\n\t\t\t\tclass: [\r\n\t\t\t\t\t'ck',\r\n\t\t\t\t\t'ck-dropdown',\r\n\t\t\t\t\tbind.to( 'class' ),\r\n\t\t\t\t\tbind.if( 'isEnabled', 'ck-disabled', value => !value )\r\n\t\t\t\t],\r\n\t\t\t\tid: bind.to( 'id' ),\r\n\t\t\t\t'aria-describedby': bind.to( 'ariaDescribedById' )\r\n\t\t\t},\r\n\r\n\t\t\tchildren: [\r\n\t\t\t\tbuttonView,\r\n\t\t\t\tpanelView\r\n\t\t\t]\r\n\t\t} );\r\n\r\n\t\tbuttonView.extendTemplate( {\r\n\t\t\tattributes: {\r\n\t\t\t\tclass: [\r\n\t\t\t\t\t'ck-dropdown__button'\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t/**\r\n\t\t * A child {@link module:ui/list/listview~ListView list view} of the dropdown located\r\n\t\t * in its {@link module:ui/dropdown/dropdownview~DropdownView#panelView panel}.\r\n\t\t *\r\n\t\t * **Note**: Only supported when dropdown has list view added using {@link module:ui/dropdown/utils~addListToDropdown}.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:ui/list/listview~ListView} #listView\r\n\t\t */\r\n\r\n\t\t/**\r\n\t\t * A child toolbar of the dropdown located in the\r\n\t\t * {@link module:ui/dropdown/dropdownview~DropdownView#panelView panel}.\r\n\t\t *\r\n\t\t * **Note**: Only supported when dropdown has list view added using {@link module:ui/dropdown/utils~addToolbarToDropdown}.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:ui/toolbar/toolbarview~ToolbarView} #toolbarView\r\n\t\t */\r\n\r\n\t\t/**\r\n\t\t * Fired when the toolbar button or list item is executed.\r\n\t\t *\r\n\t\t * For {@link #listView} It fires when a child of some {@link module:ui/list/listitemview~ListItemView}\r\n\t\t * fired `execute`.\r\n\t\t *\r\n\t\t * For {@link #toolbarView} It fires when one of the buttons has been\r\n\t\t * {@link module:ui/button/buttonview~ButtonView#event:execute executed}.\r\n\t\t *\r\n\t\t * **Note**: Only supported when dropdown has list view added using {@link module:ui/dropdown/utils~addListToDropdown}\r\n\t\t * or {@link module:ui/dropdown/utils~addToolbarToDropdown}.\r\n\t\t *\r\n\t\t * @event execute\r\n\t\t */\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\trender() {\r\n\t\tsuper.render();\r\n\r\n\t\t// Toggle the dropdown when its button has been clicked.\r\n\t\tthis.listenTo( this.buttonView, 'open', () => {\r\n\t\t\tthis.isOpen = !this.isOpen;\r\n\t\t} );\r\n\r\n\t\t// Toggle the visibility of the panel when the dropdown becomes open.\r\n\t\tthis.panelView.bind( 'isVisible' ).to( this, 'isOpen' );\r\n\r\n\t\t// Let the dropdown control the position of the panel. The position must\r\n\t\t// be updated every time the dropdown is open.\r\n\t\tthis.on( 'change:isOpen', () => {\r\n\t\t\tif ( !this.isOpen ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// If \"auto\", find the best position of the panel to fit into the viewport.\r\n\t\t\t// Otherwise, simply assign the static position.\r\n\t\t\tif ( this.panelPosition === 'auto' ) {\r\n\t\t\t\tthis.panelView.position = DropdownView._getOptimalPosition( {\r\n\t\t\t\t\telement: this.panelView.element,\r\n\t\t\t\t\ttarget: this.buttonView.element,\r\n\t\t\t\t\tfitInViewport: true,\r\n\t\t\t\t\tpositions: this._panelPositions\r\n\t\t\t\t} ).name;\r\n\t\t\t} else {\r\n\t\t\t\tthis.panelView.position = this.panelPosition;\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Listen for keystrokes coming from within #element.\r\n\t\tthis.keystrokes.listenTo( this.element );\r\n\r\n\t\t// Register #element in the focus tracker.\r\n\t\tthis.focusTracker.add( this.element );\r\n\r\n\t\tconst closeDropdown = ( data, cancel ) => {\r\n\t\t\tif ( this.isOpen ) {\r\n\t\t\t\tthis.buttonView.focus();\r\n\t\t\t\tthis.isOpen = false;\r\n\t\t\t\tcancel();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Open the dropdown panel using the arrow down key, just like with return or space.\r\n\t\tthis.keystrokes.set( 'arrowdown', ( data, cancel ) => {\r\n\t\t\t// Don't open if the dropdown is disabled or already open.\r\n\t\t\tif ( this.buttonView.isEnabled && !this.isOpen ) {\r\n\t\t\t\tthis.isOpen = true;\r\n\t\t\t\tcancel();\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Block the right arrow key (until nested dropdowns are implemented).\r\n\t\tthis.keystrokes.set( 'arrowright', ( data, cancel ) => {\r\n\t\t\tif ( this.isOpen ) {\r\n\t\t\t\tcancel();\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Close the dropdown using the arrow left/escape key.\r\n\t\tthis.keystrokes.set( 'arrowleft', closeDropdown );\r\n\t\tthis.keystrokes.set( 'esc', closeDropdown );\r\n\t}\r\n\r\n\t/**\r\n\t * Focuses the {@link #buttonView}.\r\n\t */\r\n\tfocus() {\r\n\t\tthis.buttonView.focus();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns {@link #panelView panel} positions to be used by the\r\n\t * {@link module:utils/dom/position~getOptimalPosition `getOptimalPosition()`}\r\n\t * utility considering the direction of the language the UI of the editor is displayed in.\r\n\t *\r\n\t * @type {module:utils/dom/position~Options#positions}\r\n\t * @private\r\n\t */\r\n\tget _panelPositions() {\r\n\t\tconst { southEast, southWest, northEast, northWest } = DropdownView.defaultPanelPositions;\r\n\r\n\t\tif ( this.locale.uiLanguageDirection === 'ltr' ) {\r\n\t\t\treturn [ southEast, southWest, northEast, northWest ];\r\n\t\t} else {\r\n\t\t\treturn [ southWest, southEast, northWest, northEast ];\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * A set of positioning functions used by the dropdown view to determine\r\n * the optimal position (i.e. fitting into the browser viewport) of its\r\n * {@link module:ui/dropdown/dropdownview~DropdownView#panelView panel} when\r\n * {@link module:ui/dropdown/dropdownview~DropdownView#panelPosition} is set to 'auto'`.\r\n *\r\n * The available positioning functions are as follow:\r\n *\r\n * **South**\r\n *\r\n * * `southEast`\r\n *\r\n *\t\t[ Button ]\r\n *\t\t+-----------------+\r\n *\t\t|      Panel      |\r\n *\t\t+-----------------+\r\n *\r\n * * `southWest`\r\n *\r\n *\t\t         [ Button ]\r\n *\t\t+-----------------+\r\n *\t\t|      Panel      |\r\n *\t\t+-----------------+\r\n *\r\n * **North**\r\n *\r\n * * `northEast`\r\n *\r\n *\t\t+-----------------+\r\n *\t\t|      Panel      |\r\n *\t\t+-----------------+\r\n *\t\t[ Button ]\r\n *\r\n * * `northWest`\r\n *\r\n *\t\t+-----------------+\r\n *\t\t|      Panel      |\r\n *\t\t+-----------------+\r\n *\t\t         [ Button ]\r\n *\r\n * Positioning functions are compatible with {@link module:utils/dom/position~Position}.\r\n *\r\n * The name that position function returns will be reflected in dropdown panel's class that\r\n * controls its placement. See {@link module:ui/dropdown/dropdownview~DropdownView#panelPosition}\r\n * to learn more.\r\n *\r\n * @member {Object} module:ui/dropdown/dropdownview~DropdownView.defaultPanelPositions\r\n */\r\nDropdownView.defaultPanelPositions = {\r\n\tsouthEast: buttonRect => {\r\n\t\treturn {\r\n\t\t\ttop: buttonRect.bottom,\r\n\t\t\tleft: buttonRect.left,\r\n\t\t\tname: 'se'\r\n\t\t};\r\n\t},\r\n\tsouthWest: ( buttonRect, panelRect ) => {\r\n\t\treturn {\r\n\t\t\ttop: buttonRect.bottom,\r\n\t\t\tleft: buttonRect.left - panelRect.width + buttonRect.width,\r\n\t\t\tname: 'sw'\r\n\t\t};\r\n\t},\r\n\tnorthEast: ( buttonRect, panelRect ) => {\r\n\t\treturn {\r\n\t\t\ttop: buttonRect.top - panelRect.height,\r\n\t\t\tleft: buttonRect.left,\r\n\t\t\tname: 'ne'\r\n\t\t};\r\n\t},\r\n\tnorthWest: ( buttonRect, panelRect ) => {\r\n\t\treturn {\r\n\t\t\ttop: buttonRect.bottom - panelRect.height,\r\n\t\t\tleft: buttonRect.left - panelRect.width + buttonRect.width,\r\n\t\t\tname: 'nw'\r\n\t\t};\r\n\t}\r\n};\r\n\r\n/**\r\n * A function used to calculate the optimal position for the dropdown panel.\r\n *\r\n * @protected\r\n * @member {Function} module:ui/dropdown/dropdownview~DropdownView._getOptimalPosition\r\n */\r\nDropdownView._getOptimalPosition = getOptimalPosition;\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\n/**\r\n * @module ui/dropdown/utils\r\n */\nimport DropdownPanelView from './dropdownpanelview';\nimport DropdownView from './dropdownview';\nimport DropdownButtonView from './button/dropdownbuttonview';\nimport ToolbarView from '../toolbar/toolbarview';\nimport ListView from '../list/listview';\nimport ListItemView from '../list/listitemview';\nimport ListSeparatorView from '../list/listseparatorview';\nimport ButtonView from '../button/buttonview';\nimport SwitchButtonView from '../button/switchbuttonview';\nimport clickOutsideHandler from '../bindings/clickoutsidehandler';\nimport '../../theme/components/dropdown/toolbardropdown.css';\nimport '../../theme/components/dropdown/listdropdown.css';\n/**\r\n * A helper for creating dropdowns. It creates an instance of a {@link module:ui/dropdown/dropdownview~DropdownView dropdown},\r\n * with a {@link module:ui/dropdown/button/dropdownbutton~DropdownButton button},\r\n * {@link module:ui/dropdown/dropdownpanelview~DropdownPanelView panel} and all standard dropdown's behaviors.\r\n *\r\n * # Creating dropdowns\r\n *\r\n * By default, the default {@link module:ui/dropdown/button/dropdownbuttonview~DropdownButtonView} class is used as\r\n * definition of the button:\r\n *\r\n *\t\tconst dropdown = createDropdown( model );\r\n *\r\n *\t\t// Configure dropdown's button properties:\r\n *\t\tdropdown.buttonView.set( {\r\n *\t\t\tlabel: 'A dropdown',\r\n *\t\t\twithText: true\r\n *\t\t} );\r\n *\r\n *\t\tdropdown.render();\r\n *\r\n *\t\t// Will render a dropdown labeled \"A dropdown\" with an empty panel.\r\n *\t\tdocument.body.appendChild( dropdown.element );\r\n *\r\n * You can also provide other button views (they need to implement the\r\n * {@link module:ui/dropdown/button/dropdownbutton~DropdownButton} interface). For instance, you can use\r\n * {@link module:ui/dropdown/button/splitbuttonview~SplitButtonView} to create a dropdown with a split button.\r\n *\r\n *\t\tconst dropdown = createDropdown( model, SplitButtonView );\r\n *\r\n *\t\t// Configure dropdown's button properties:\r\n *\t\tdropdown.buttonView.set( {\r\n *\t\t\tlabel: 'A dropdown',\r\n *\t\t\twithText: true\r\n *\t\t} );\r\n *\r\n *\t\tdropdown.buttonView.on( 'execute', () => {\r\n *\t\t\t// Add the behavior of the \"action part\" of the split button.\r\n *\t\t\t// Split button consists of the \"action part\" and \"arrow part\".\r\n *\t\t\t// The arrow opens the dropdown while the action part can have some other behavior.\r\n * \t\t} );\r\n *\r\n *\t\tdropdown.render();\r\n *\r\n *\t\t// Will render a dropdown labeled \"A dropdown\" with an empty panel.\r\n *\t\tdocument.body.appendChild( dropdown.element );\r\n *\r\n * # Adding content to the dropdown's panel\r\n *\r\n * The content of the panel can be inserted directly into the `dropdown.panelView.element`:\r\n *\r\n *\t\tdropdown.panelView.element.textContent = 'Content of the panel';\r\n *\r\n * However, most of the time you will want to add there either a {@link module:ui/list/listview~ListView list of options}\r\n * or a list of buttons (i.e. a {@link module:ui/toolbar/toolbarview~ToolbarView toolbar}).\r\n * To simplify the task, you can use, respectively, {@link module:ui/dropdown/utils~addListToDropdown} or\r\n * {@link module:ui/dropdown/utils~addToolbarToDropdown} utils.\r\n *\r\n * @param {module:utils/locale~Locale} locale The locale instance.\r\n * @param {Function} ButtonClass The dropdown button view class. Needs to implement the\r\n * {@link module:ui/dropdown/button/dropdownbutton~DropdownButton} interface.\r\n * @returns {module:ui/dropdown/dropdownview~DropdownView} The dropdown view instance.\r\n */\nexport function createDropdown(locale, ButtonClass = DropdownButtonView) {\n    const buttonView = new ButtonClass(locale);\n    const panelView = new DropdownPanelView(locale);\n    const dropdownView = new DropdownView(locale, buttonView, panelView);\n    buttonView.bind('isEnabled').to(dropdownView);\n    if (buttonView instanceof DropdownButtonView) {\n        buttonView.bind('isOn').to(dropdownView, 'isOpen');\n    } else {\n        buttonView.arrowView.bind('isOn').to(dropdownView, 'isOpen');\n    }\n    addDefaultBehavior(dropdownView);\n    return dropdownView;\n}\n/**\r\n * Adds an instance of {@link module:ui/toolbar/toolbarview~ToolbarView} to a dropdown.\r\n *\r\n *\t\tconst buttons = [];\r\n *\r\n *\t\t// Either create a new ButtonView instance or create existing.\r\n *\t\tbuttons.push( new ButtonView() );\r\n *\t\tbuttons.push( editor.ui.componentFactory.get( 'someButton' ) );\r\n *\r\n *\t\tconst dropdown = createDropdown( locale );\r\n *\r\n *\t\taddToolbarToDropdown( dropdown, buttons );\r\n *\r\n *\t\tdropdown.toolbarView.isVertical = true;\r\n *\r\n *\t\t// Will render a vertical button dropdown labeled \"A button dropdown\"\r\n *\t\t// with a button group in the panel containing two buttons.\r\n *\t\tdropdown.render()\r\n *\t\tdocument.body.appendChild( dropdown.element );\r\n *\r\n * See {@link module:ui/dropdown/utils~createDropdown} and {@link module:ui/toolbar/toolbarview~ToolbarView}.\r\n *\r\n * @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView A dropdown instance to which `ToolbarView` will be added.\r\n * @param {Iterable.<module:ui/button/buttonview~ButtonView>} buttons\r\n */\nexport function addToolbarToDropdown(dropdownView, buttons) {\n    const locale = dropdownView.locale;\n    const t = locale.t;\n    const toolbarView = dropdownView.toolbarView = new ToolbarView(locale);\n    toolbarView.set('ariaLabel', t('z'));\n    dropdownView.extendTemplate({ attributes: { class: ['ck-toolbar-dropdown'] } });\n    buttons.map(view => toolbarView.items.add(view));\n    dropdownView.panelView.children.add(toolbarView);\n    toolbarView.items.delegate('execute').to(dropdownView);\n}\n/**\r\n * Adds an instance of {@link module:ui/list/listview~ListView} to a dropdown.\r\n *\r\n *\t\tconst items = new Collection();\r\n *\r\n *\t\titems.add( {\r\n *\t\t\ttype: 'button',\r\n *\t\t\tmodel: new Model( {\r\n *\t\t\t\twithText: true,\r\n *\t\t\t\tlabel: 'First item',\r\n *\t\t\t\tlabelStyle: 'color: red'\r\n *\t\t\t} )\r\n *\t\t} );\r\n *\r\n *\t\titems.add( {\r\n *\t\t\t type: 'button',\r\n *\t\t\t model: new Model( {\r\n *\t\t\t\twithText: true,\r\n *\t\t\t\tlabel: 'Second item',\r\n *\t\t\t\tlabelStyle: 'color: green',\r\n *\t\t\t\tclass: 'foo'\r\n *\t\t\t} )\r\n *\t\t} );\r\n *\r\n *\t\tconst dropdown = createDropdown( locale );\r\n *\r\n *\t\taddListToDropdown( dropdown, items );\r\n *\r\n *\t\t// Will render a dropdown with a list in the panel containing two items.\r\n *\t\tdropdown.render()\r\n *\t\tdocument.body.appendChild( dropdown.element );\r\n *\r\n * The `items` collection passed to this methods controls the presence and attributes of respective\r\n * {@link module:ui/list/listitemview~ListItemView list items}.\r\n *\r\n *\r\n * See {@link module:ui/dropdown/utils~createDropdown} and {@link module:list/list~List}.\r\n *\r\n * @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView A dropdown instance to which `ListVIew` will be added.\r\n * @param {Iterable.<module:ui/dropdown/utils~ListDropdownItemDefinition>} items\r\n * A collection of the list item definitions to populate the list.\r\n */\nexport function addListToDropdown(dropdownView, items) {\n    const locale = dropdownView.locale;\n    const listView = dropdownView.listView = new ListView(locale);\n    listView.items.bindTo(items).using(({type, model}) => {\n        if (type === 'separator') {\n            return new ListSeparatorView(locale);\n        } else if (type === 'button' || type === 'switchbutton') {\n            const listItemView = new ListItemView(locale);\n            let buttonView;\n            if (type === 'button') {\n                buttonView = new ButtonView(locale);\n            } else {\n                buttonView = new SwitchButtonView(locale);\n            }\n            // Bind all model properties to the button view.\n            buttonView.bind(...Object.keys(model)).to(model);\n            buttonView.delegate('execute').to(listItemView);\n            listItemView.children.add(buttonView);\n            return listItemView;\n        }\n    });\n    dropdownView.panelView.children.add(listView);\n    listView.items.delegate('execute').to(dropdownView);\n}\n// Add a set of default behaviors to dropdown view.\n//\n// @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView\nfunction addDefaultBehavior(dropdownView) {\n    closeDropdownOnBlur(dropdownView);\n    closeDropdownOnExecute(dropdownView);\n    focusDropdownContentsOnArrows(dropdownView);\n}\n// Adds a behavior to a dropdownView that closes opened dropdown when user clicks outside the dropdown.\n//\n// @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView\nfunction closeDropdownOnBlur(dropdownView) {\n    dropdownView.on('render', () => {\n        clickOutsideHandler({\n            emitter: dropdownView,\n            activator: () => dropdownView.isOpen,\n            callback: () => {\n                dropdownView.isOpen = false;\n            },\n            contextElements: [dropdownView.element]\n        });\n    });\n}\n// Adds a behavior to a dropdownView that closes the dropdown view on \"execute\" event.\n//\n// @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView\nfunction closeDropdownOnExecute(dropdownView) {\n    // Close the dropdown when one of the list items has been executed.\n    dropdownView.on('execute', evt => {\n        // Toggling a switch button view should not close the dropdown.\n        if (evt.source instanceof SwitchButtonView) {\n            return;\n        }\n        dropdownView.isOpen = false;\n    });\n}\n// Adds a behavior to a dropdownView that focuses the dropdown's panel view contents on keystrokes.\n//\n// @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView\nfunction focusDropdownContentsOnArrows(dropdownView) {\n    // If the dropdown panel is already open, the arrow down key should focus the first child of the #panelView.\n    dropdownView.keystrokes.set('arrowdown', (data, cancel) => {\n        if (dropdownView.isOpen) {\n            dropdownView.panelView.focus();\n            cancel();\n        }\n    });\n    // If the dropdown panel is already open, the arrow up key should focus the last child of the #panelView.\n    dropdownView.keystrokes.set('arrowup', (data, cancel) => {\n        if (dropdownView.isOpen) {\n            dropdownView.panelView.focusLast();\n            cancel();\n        }\n    });\n}    /**\r\n * A definition of the list item used by the {@link module:ui/dropdown/utils~addListToDropdown}\r\n * utility.\r\n *\r\n * @typedef {Object} module:ui/dropdown/utils~ListDropdownItemDefinition\r\n *\r\n * @property {String} type Either `'separator'`, `'button'` or `'switchbutton'`.\r\n * @property {module:ui/model~Model} [model] Model of the item (when **not** `'separator'`).\r\n * Its properties fuel the newly created list item (or its children, depending on the `type`).\r\n */","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module ui/editableui/editableuiview\r\n */\r\n\r\nimport View from '../view';\r\n\r\n/**\r\n * The editable UI view class.\r\n *\r\n * @extends module:ui/view~View\r\n */\r\nexport default class EditableUIView extends View {\r\n\t/**\r\n\t * Creates an instance of EditableUIView class.\r\n\t *\r\n\t * @param {module:utils/locale~Locale} [locale] The locale instance.\r\n\t * @param {module:engine/view/view~View} editingView The editing view instance the editable is related to.\r\n\t * @param {HTMLElement} [editableElement] The editable element. If not specified, this view\r\n\t * should create it. Otherwise, the existing element should be used.\r\n\t */\r\n\tconstructor( locale, editingView, editableElement ) {\r\n\t\tsuper( locale );\r\n\r\n\t\tthis.setTemplate( {\r\n\t\t\ttag: 'div',\r\n\t\t\tattributes: {\r\n\t\t\t\tclass: [\r\n\t\t\t\t\t'ck',\r\n\t\t\t\t\t'ck-content',\r\n\t\t\t\t\t'ck-editor__editable',\r\n\t\t\t\t\t'ck-rounded-corners'\r\n\t\t\t\t],\r\n\t\t\t\tlang: locale.contentLanguage,\r\n\t\t\t\tdir: locale.contentLanguageDirection\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t/**\r\n\t\t * The name of the editable UI view.\r\n\t\t *\r\n\t\t * @member {String} #name\r\n\t\t */\r\n\t\tthis.name = null;\r\n\r\n\t\t/**\r\n\t\t * Controls whether the editable is focused, i.e. the user is typing in it.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @member {Boolean} #isFocused\r\n\t\t */\r\n\t\tthis.set( 'isFocused', false );\r\n\r\n\t\t/**\r\n\t\t * The element which is the main editable element (usually the one with `contentEditable=\"true\"`).\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {HTMLElement} #_editableElement\r\n\t\t */\r\n\t\tthis._editableElement = editableElement;\r\n\r\n\t\t/**\r\n\t\t * Whether an external {@link #_editableElement} was passed into the constructor, which also means\r\n\t\t * the view will not render its {@link #template}.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Boolean} #_hasExternalElement\r\n\t\t */\r\n\t\tthis._hasExternalElement = !!this._editableElement;\r\n\r\n\t\t/**\r\n\t\t * The editing view instance the editable is related to. Editable uses the editing\r\n\t\t * view to dynamically modify its certain DOM attributes after {@link #render rendering}.\r\n\t\t *\r\n\t\t * **Note**: The DOM attributes are performed by the editing view and not UI\r\n\t\t * {@link module:ui/view~View#bindTemplate template bindings} because once rendered,\r\n\t\t * the editable DOM element must remain under the full control of the engine to work properly.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @member {module:engine/view/view~View} #isFocused\r\n\t\t */\r\n\t\tthis._editingView = editingView;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the view by either applying the {@link #template} to the existing\r\n\t * {@link #_editableElement} or assigning {@link #element} as {@link #_editableElement}.\r\n\t */\r\n\trender() {\r\n\t\tsuper.render();\r\n\r\n\t\tif ( this._hasExternalElement ) {\r\n\t\t\tthis.template.apply( this.element = this._editableElement );\r\n\t\t} else {\r\n\t\t\tthis._editableElement = this.element;\r\n\t\t}\r\n\r\n\t\tthis.on( 'change:isFocused', () => this._updateIsFocusedClasses() );\r\n\t\tthis._updateIsFocusedClasses();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tdestroy() {\r\n\t\tif ( this._hasExternalElement ) {\r\n\t\t\tthis.template.revert( this._editableElement );\r\n\t\t}\r\n\r\n\t\tsuper.destroy();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the `ck-focused` and `ck-blurred` CSS classes on the {@link #element} according to\r\n\t * the {@link #isFocused} property value using the {@link #_editingView editing view} API.\r\n\t *\r\n\t * @private\r\n\t */\r\n\t_updateIsFocusedClasses() {\r\n\t\tconst editingView = this._editingView;\r\n\r\n\t\tif ( editingView.isRenderingInProgress ) {\r\n\t\t\tupdateAfterRender( this );\r\n\t\t} else {\r\n\t\t\tupdate( this );\r\n\t\t}\r\n\r\n\t\tfunction update( view ) {\r\n\t\t\teditingView.change( writer => {\r\n\t\t\t\tconst viewRoot = editingView.document.getRoot( view.name );\r\n\r\n\t\t\t\twriter.addClass( view.isFocused ? 'ck-focused' : 'ck-blurred', viewRoot );\r\n\t\t\t\twriter.removeClass( view.isFocused ? 'ck-blurred' : 'ck-focused', viewRoot );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\t// In a case of a multi-root editor, a callback will be attached more than once (one callback for each root).\r\n\t\t// While executing one callback the `isRenderingInProgress` observable is changing what causes executing another\r\n\t\t// callback and render is called inside the already pending render.\r\n\t\t// We need to be sure that callback is executed only when the value has changed from `true` to `false`.\r\n\t\t// See https://github.com/ckeditor/ckeditor5/issues/1676.\r\n\t\tfunction updateAfterRender( view ) {\r\n\t\t\teditingView.once( 'change:isRenderingInProgress', ( evt, name, value ) => {\r\n\t\t\t\tif ( !value ) {\r\n\t\t\t\t\tupdate( view );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tupdateAfterRender( view );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t}\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\n/**\r\n * @module ui/editableui/inline/inlineeditableuiview\r\n */\nimport EditableUIView from '../../editableui/editableuiview';\n/**\r\n * The inline editable UI class implementing an inline {@link module:ui/editableui/editableuiview~EditableUIView}.\r\n *\r\n * @extends module:ui/editableui/editableuiview~EditableUIView\r\n */\nexport default class InlineEditableUIView extends EditableUIView {\n    /**\r\n\t * Creates an instance of the InlineEditableUIView class.\r\n\t *\r\n\t * @param {module:utils/locale~Locale} [locale] The locale instance.\r\n\t * @param {module:engine/view/view~View} editingView The editing view instance the editable is related to.\r\n\t * @param {HTMLElement} [editableElement] The editable element. If not specified, the\r\n\t * {@link module:ui/editableui/editableuiview~EditableUIView}\r\n\t * will create it. Otherwise, the existing element will be used.\r\n\t */\n    constructor(locale, editingView, editableElement) {\n        super(locale, editingView, editableElement);\n        this.extendTemplate({\n            attributes: {\n                role: 'textbox',\n                class: 'ck-editor__editable_inline'\n            }\n        });\n    }\n    /**\r\n\t * @inheritDoc\r\n\t */\n    render() {\n        super.render();\n        const editingView = this._editingView;\n        const t = this.t;\n        editingView.change(writer => {\n            const viewRoot = editingView.document.getRoot(this.name);\n            writer.setAttribute('aria-label', t('p', [this.name]), viewRoot);\n        });\n    }\n}","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module ui/editorui/bodycollection\r\n */\r\n\r\n/* globals document */\r\n\r\nimport Template from '../template';\r\nimport ViewCollection from '../viewcollection';\r\n\r\nimport createElement from '@ckeditor/ckeditor5-utils/src/dom/createelement';\r\n\r\n/**\r\n * This is a special {@link module:ui/viewcollection~ViewCollection} dedicated to elements that are detached\r\n * from the DOM structure of the editor, like panels, icons, etc.\r\n *\r\n * The body collection is available in the {@link module:ui/editorui/editoruiview~EditorUIView#body `editor.ui.view.body`} property.\r\n * Any plugin can add a {@link module:ui/view~View view} to this collection.\r\n * These views will render in a container placed directly in the `<body>` element.\r\n * The editor will detach and destroy this collection when the editor will be {@link module:core/editor/editor~Editor#destroy destroyed}.\r\n *\r\n * If you need to control the life cycle of the body collection on your own, you can create your own instance of this class.\r\n *\r\n * A body collection will render itself automatically in the DOM body element as soon as you call {@link ~BodyCollection#attachToDom}.\r\n * If you create multiple body collections, this class will create a special wrapper element in the DOM to limit the number of\r\n * elements created directly in the body and remove it when the last body collection will be\r\n * {@link ~BodyCollection#detachFromDom detached}.\r\n *\r\n * @extends module:ui/viewcollection~ViewCollection\r\n */\r\nexport default class BodyCollection extends ViewCollection {\r\n\t/**\r\n\t * Attaches the body collection to the DOM body element. You need to execute this method to render the content of\r\n\t * the body collection.\r\n\t */\r\n\tattachToDom() {\r\n\t\t/**\r\n\t\t * The element holding elements of the body region.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @member {HTMLElement} #_bodyCollectionContainer\r\n\t\t */\r\n\t\tthis._bodyCollectionContainer = new Template( {\r\n\t\t\ttag: 'div',\r\n\t\t\tattributes: {\r\n\t\t\t\tclass: [\r\n\t\t\t\t\t'ck',\r\n\t\t\t\t\t'ck-reset_all',\r\n\t\t\t\t\t'ck-body',\r\n\t\t\t\t\t'ck-rounded-corners'\r\n\t\t\t\t],\r\n\t\t\t\tdir: this.locale.uiLanguageDirection\r\n\t\t\t},\r\n\t\t\tchildren: this\r\n\t\t} ).render();\r\n\r\n\t\tlet wrapper = document.querySelector( '.ck-body-wrapper' );\r\n\r\n\t\tif ( !wrapper ) {\r\n\t\t\twrapper = createElement( document, 'div', { class: 'ck-body-wrapper' } );\r\n\t\t\tdocument.body.appendChild( wrapper );\r\n\t\t}\r\n\r\n\t\twrapper.appendChild( this._bodyCollectionContainer );\r\n\t}\r\n\r\n\t/**\r\n\t * Detaches the collection from the DOM structure. Use this method when you do not need to use the body collection\r\n\t * anymore to clean-up the DOM structure.\r\n\t */\r\n\tdetachFromDom() {\r\n\t\tsuper.destroy();\r\n\r\n\t\tif ( this._bodyCollectionContainer ) {\r\n\t\t\tthis._bodyCollectionContainer.remove();\r\n\t\t}\r\n\r\n\t\tconst wrapper = document.querySelector( '.ck-body-wrapper' );\r\n\r\n\t\tif ( wrapper && wrapper.childElementCount == 0 ) {\r\n\t\t\twrapper.remove();\r\n\t\t}\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module ui/editorui/editoruiview\r\n */\r\n\r\nimport View from '../view';\r\nimport BodyCollection from './bodycollection';\r\n\r\nimport '../../theme/components/editorui/editorui.css';\r\n\r\n/**\r\n * The editor UI view class. Base class for the editor main views.\r\n *\r\n * @extends module:ui/view~View\r\n */\r\nexport default class EditorUIView extends View {\r\n\t/**\r\n\t * Creates an instance of the editor UI view class.\r\n\t *\r\n\t * @param {module:utils/locale~Locale} [locale] The locale instance.\r\n\t */\r\n\tconstructor( locale ) {\r\n\t\tsuper( locale );\r\n\r\n\t\t/**\r\n\t\t * Collection of the child views, detached from the DOM\r\n\t\t * structure of the editor, like panels, icons etc.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:ui/viewcollection~ViewCollection} #body\r\n\t\t */\r\n\t\tthis.body = new BodyCollection( locale );\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\trender() {\r\n\t\tsuper.render();\r\n\r\n\t\tthis.body.attachToDom();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tdestroy() {\r\n\t\tthis.body.detachFromDom();\r\n\r\n\t\treturn super.destroy();\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module ui/focuscycler\r\n */\r\n\r\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\r\n\r\n/**\r\n * A utility class that helps cycling over focusable {@link module:ui/view~View views} in a\r\n * {@link module:ui/viewcollection~ViewCollection} when the focus is tracked by the\r\n * {@link module:utils/focustracker~FocusTracker} instance. It helps implementing keyboard\r\n * navigation in HTML forms, toolbars, lists and the like.\r\n *\r\n * To work properly it requires:\r\n * * a collection of focusable (HTML `tabindex` attribute) views that implement the `focus()` method,\r\n * * an associated focus tracker to determine which view is focused.\r\n *\r\n * A simple cycler setup can look like this:\r\n *\r\n *\t\tconst focusables = new ViewCollection();\r\n *\t\tconst focusTracker = new FocusTracker();\r\n *\r\n *\t\t// Add focusable views to the focus tracker.\r\n *\t\tfocusTracker.add( ... );\r\n *\r\n * Then, the cycler can be used manually:\r\n *\r\n *\t\tconst cycler = new FocusCycler( { focusables, focusTracker } );\r\n *\r\n *\t\t// Will focus the first focusable view in #focusables.\r\n *\t\tcycler.focusFirst();\r\n *\r\n *\t\t// Will log the next focusable item in #focusables.\r\n *\t\tconsole.log( cycler.next );\r\n *\r\n * Alternatively, it can work side by side with the {@link module:utils/keystrokehandler~KeystrokeHandler}:\r\n *\r\n *\t\tconst keystrokeHandler = new KeystrokeHandler();\r\n *\r\n *\t\t// Activate the keystroke handler.\r\n *\t\tkeystrokeHandler.listenTo( sourceOfEvents );\r\n *\r\n *\t\tconst cycler = new FocusCycler( {\r\n *\t\t\tfocusables, focusTracker, keystrokeHandler,\r\n *\t\t\tactions: {\r\n *\t\t\t\t// When arrowup of arrowleft is detected by the #keystrokeHandler,\r\n *\t\t\t\t// focusPrevious() will be called on the cycler.\r\n *\t\t\t\tfocusPrevious: [ 'arrowup', 'arrowleft' ],\r\n *\t\t\t}\r\n *\t\t} );\r\n */\r\nexport default class FocusCycler {\r\n\t/**\r\n\t * Creates an instance of the focus cycler utility.\r\n\t *\r\n\t * @param {Object} options Configuration options.\r\n\t * @param {module:utils/collection~Collection|Object} options.focusables\r\n\t * @param {module:utils/focustracker~FocusTracker} options.focusTracker\r\n\t * @param {module:utils/keystrokehandler~KeystrokeHandler} [options.keystrokeHandler]\r\n\t * @param {Object} [options.actions]\r\n\t */\r\n\tconstructor( options ) {\r\n\t\tObject.assign( this, options );\r\n\r\n\t\t/**\r\n\t\t * A {@link module:ui/view~View view} collection that the cycler operates on.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:utils/collection~Collection} #focusables\r\n\t\t */\r\n\r\n\t\t/**\r\n\t\t * A focus tracker instance that the cycler uses to determine the current focus\r\n\t\t * state in {@link #focusables}.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:utils/focustracker~FocusTracker} #focusTracker\r\n\t\t */\r\n\r\n\t\t/**\r\n\t\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}\r\n\t\t * which can respond to certain keystrokes and cycle the focus.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler} #keystrokeHandler\r\n\t\t */\r\n\r\n\t\t/**\r\n\t\t * Actions that the cycler can take when a keystroke is pressed. Requires\r\n\t\t * `options.keystrokeHandler` to be passed and working. When an action is\r\n\t\t * performed, `preventDefault` and `stopPropagation` will be called on the event\r\n\t\t * the keystroke fired in the DOM.\r\n\t\t *\r\n\t\t *\t\tactions: {\r\n\t\t *\t\t\t// Will call #focusPrevious() when arrowleft or arrowup is pressed.\r\n\t\t *\t\t\tfocusPrevious: [ 'arrowleft', 'arrowup' ],\r\n\t\t *\r\n\t\t *\t\t\t// Will call #focusNext() when arrowdown is pressed.\r\n\t\t *\t\t\tfocusNext: 'arrowdown'\r\n\t\t *\t\t}\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Object} #actions\r\n\t\t */\r\n\r\n\t\tif ( options.actions && options.keystrokeHandler ) {\r\n\t\t\tfor ( const methodName in options.actions ) {\r\n\t\t\t\tlet actions = options.actions[ methodName ];\r\n\r\n\t\t\t\tif ( typeof actions == 'string' ) {\r\n\t\t\t\t\tactions = [ actions ];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( const keystroke of actions ) {\r\n\t\t\t\t\toptions.keystrokeHandler.set( keystroke, ( data, cancel ) => {\r\n\t\t\t\t\t\tthis[ methodName ]();\r\n\t\t\t\t\t\tcancel();\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the first focusable view in {@link #focusables}.\r\n\t * Returns `null` if there is none.\r\n\t *\r\n\t * @readonly\r\n\t * @member {module:ui/view~View|null} #first\r\n\t */\r\n\tget first() {\r\n\t\treturn this.focusables.find( isFocusable ) || null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the last focusable view in {@link #focusables}.\r\n\t * Returns `null` if there is none.\r\n\t *\r\n\t * @readonly\r\n\t * @member {module:ui/view~View|null} #last\r\n\t */\r\n\tget last() {\r\n\t\treturn this.focusables.filter( isFocusable ).slice( -1 )[ 0 ] || null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the next focusable view in {@link #focusables} based on {@link #current}.\r\n\t * Returns `null` if there is none.\r\n\t *\r\n\t * @readonly\r\n\t * @member {module:ui/view~View|null} #next\r\n\t */\r\n\tget next() {\r\n\t\treturn this._getFocusableItem( 1 );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the previous focusable view in {@link #focusables} based on {@link #current}.\r\n\t * Returns `null` if there is none.\r\n\t *\r\n\t * @readonly\r\n\t * @member {module:ui/view~View|null} #previous\r\n\t */\r\n\tget previous() {\r\n\t\treturn this._getFocusableItem( -1 );\r\n\t}\r\n\r\n\t/**\r\n\t * An index of the view in the {@link #focusables} which is focused according\r\n\t * to {@link #focusTracker}. Returns `null` when there is no such view.\r\n\t *\r\n\t * @readonly\r\n\t * @member {Number|null} #current\r\n\t */\r\n\tget current() {\r\n\t\tlet index = null;\r\n\r\n\t\t// There's no focused view in the focusables.\r\n\t\tif ( this.focusTracker.focusedElement === null ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tthis.focusables.find( ( view, viewIndex ) => {\r\n\t\t\tconst focused = view.element === this.focusTracker.focusedElement;\r\n\r\n\t\t\tif ( focused ) {\r\n\t\t\t\tindex = viewIndex;\r\n\t\t\t}\r\n\r\n\t\t\treturn focused;\r\n\t\t} );\r\n\r\n\t\treturn index;\r\n\t}\r\n\r\n\t/**\r\n\t * Focuses the {@link #first} item in {@link #focusables}.\r\n\t */\r\n\tfocusFirst() {\r\n\t\tthis._focus( this.first );\r\n\t}\r\n\r\n\t/**\r\n\t * Focuses the {@link #last} item in {@link #focusables}.\r\n\t */\r\n\tfocusLast() {\r\n\t\tthis._focus( this.last );\r\n\t}\r\n\r\n\t/**\r\n\t * Focuses the {@link #next} item in {@link #focusables}.\r\n\t */\r\n\tfocusNext() {\r\n\t\tthis._focus( this.next );\r\n\t}\r\n\r\n\t/**\r\n\t * Focuses the {@link #previous} item in {@link #focusables}.\r\n\t */\r\n\tfocusPrevious() {\r\n\t\tthis._focus( this.previous );\r\n\t}\r\n\r\n\t/**\r\n\t * Focuses the given view if it exists.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:ui/view~View} view\r\n\t */\r\n\t_focus( view ) {\r\n\t\tif ( view ) {\r\n\t\t\tview.focus();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the next or previous focusable view in {@link #focusables} with respect\r\n\t * to {@link #current}.\r\n\t *\r\n\t * @protected\r\n\t * @param {Number} step Either `1` for checking forward from {@link #current} or\r\n\t * `-1` for checking backwards.\r\n\t * @returns {module:ui/view~View|null}\r\n\t */\r\n\t_getFocusableItem( step ) {\r\n\t\t// Cache for speed.\r\n\t\tconst current = this.current;\r\n\t\tconst collectionLength = this.focusables.length;\r\n\r\n\t\tif ( !collectionLength ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\t// Start from the beginning if no view is focused.\r\n\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/206\r\n\t\tif ( current === null ) {\r\n\t\t\treturn this[ step === 1 ? 'first' : 'last' ];\r\n\t\t}\r\n\r\n\t\t// Cycle in both directions.\r\n\t\tlet index = ( current + collectionLength + step ) % collectionLength;\r\n\r\n\t\tdo {\r\n\t\t\tconst view = this.focusables.get( index );\r\n\r\n\t\t\t// TODO: Check if view is visible.\r\n\t\t\tif ( isFocusable( view ) ) {\r\n\t\t\t\treturn view;\r\n\t\t\t}\r\n\r\n\t\t\t// Cycle in both directions.\r\n\t\t\tindex = ( index + collectionLength + step ) % collectionLength;\r\n\t\t} while ( index !== current );\r\n\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\n// Checks whether a view is focusable.\r\n//\r\n// @private\r\n// @param {module:ui/view~View} view A view to be checked.\r\n// @returns {Boolean}\r\nfunction isFocusable( view ) {\r\n\treturn !!( view.focus && global.window.getComputedStyle( view.element ).display != 'none' );\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/* global DOMParser */\r\n\r\n/**\r\n * @module ui/icon/iconview\r\n */\r\n\r\nimport View from '../view';\r\n\r\nimport '../../theme/components/icon/icon.css';\r\n\r\n/**\r\n * The icon view class.\r\n *\r\n * @extends module:ui/view~View\r\n */\r\nexport default class IconView extends View {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tconst bind = this.bindTemplate;\r\n\r\n\t\t/**\r\n\t\t * The SVG source of the icon.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @member {String} #content\r\n\t\t */\r\n\t\tthis.set( 'content', '' );\r\n\r\n\t\t/**\r\n\t\t * This attribute specifies the boundaries to which the\r\n\t\t * icon content should stretch.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @default '0 0 20 20'\r\n\t\t * @member {String} #viewBox\r\n\t\t */\r\n\t\tthis.set( 'viewBox', '0 0 20 20' );\r\n\r\n\t\t/**\r\n\t\t * The fill color of the child `path.ck-icon__fill`.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @default ''\r\n\t\t * @member {String} #fillColor\r\n\t\t */\r\n\t\tthis.set( 'fillColor', '' );\r\n\r\n\t\tthis.setTemplate( {\r\n\t\t\ttag: 'svg',\r\n\t\t\tns: 'http://www.w3.org/2000/svg',\r\n\t\t\tattributes: {\r\n\t\t\t\tclass: [\r\n\t\t\t\t\t'ck',\r\n\t\t\t\t\t'ck-icon'\r\n\t\t\t\t],\r\n\t\t\t\tviewBox: bind.to( 'viewBox' )\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\trender() {\r\n\t\tsuper.render();\r\n\r\n\t\tthis._updateXMLContent();\r\n\t\tthis._colorFillPaths();\r\n\r\n\t\t// This is a hack for lack of innerHTML binding.\r\n\t\t// See: https://github.com/ckeditor/ckeditor5-ui/issues/99.\r\n\t\tthis.on( 'change:content', () => {\r\n\t\t\tthis._updateXMLContent();\r\n\t\t\tthis._colorFillPaths();\r\n\t\t} );\r\n\r\n\t\tthis.on( 'change:fillColor', () => {\r\n\t\t\tthis._colorFillPaths();\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the {@link #element} with the value of {@link #content}.\r\n\t *\r\n\t * @private\r\n\t */\r\n\t_updateXMLContent() {\r\n\t\tif ( this.content ) {\r\n\t\t\tconst parsed = new DOMParser().parseFromString( this.content.trim(), 'image/svg+xml' );\r\n\t\t\tconst svg = parsed.querySelector( 'svg' );\r\n\t\t\tconst viewBox = svg.getAttribute( 'viewBox' );\r\n\r\n\t\t\tif ( viewBox ) {\r\n\t\t\t\tthis.viewBox = viewBox;\r\n\t\t\t}\r\n\r\n\t\t\tthis.element.innerHTML = '';\r\n\r\n\t\t\twhile ( svg.childNodes.length > 0 ) {\r\n\t\t\t\tthis.element.appendChild( svg.childNodes[ 0 ] );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Fills all child `path.ck-icon__fill` with the `#fillColor`.\r\n\t *\r\n\t * @private\r\n\t */\r\n\t_colorFillPaths() {\r\n\t\tif ( this.fillColor ) {\r\n\t\t\tthis.element.querySelectorAll( '.ck-icon__fill' ).forEach( path => {\r\n\t\t\t\tpath.style.fill = this.fillColor;\r\n\t\t\t} );\r\n\t\t}\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module ui/inputtext/inputtextview\r\n */\r\n\r\nimport View from '../view';\r\nimport '../../theme/components/inputtext/inputtext.css';\r\n\r\n/**\r\n * The text input view class.\r\n *\r\n * @extends module:ui/view~View\r\n */\r\nexport default class InputTextView extends View {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tconstructor( locale ) {\r\n\t\tsuper( locale );\r\n\r\n\t\t/**\r\n\t\t * The value of the input.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @member {String} #value\r\n\t\t */\r\n\t\tthis.set( 'value' );\r\n\r\n\t\t/**\r\n\t\t * The `id` attribute of the input (i.e. to pair with a `<label>` element).\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @member {String} #id\r\n\t\t */\r\n\t\tthis.set( 'id' );\r\n\r\n\t\t/**\r\n\t\t * The `placeholder` attribute of the input.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @member {String} #placeholder\r\n\t\t */\r\n\t\tthis.set( 'placeholder' );\r\n\r\n\t\t/**\r\n\t\t * Controls whether the input view is in read-only mode.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @member {Boolean} #isReadOnly\r\n\t\t */\r\n\t\tthis.set( 'isReadOnly', false );\r\n\r\n\t\t/**\r\n\t\t * Set to `true` when the field has some error. Usually controlled via\r\n\t\t * {@link module:ui/labeledinput/labeledinputview~LabeledInputView#errorText}.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @member {Boolean} #hasError\r\n\t\t */\r\n\t\tthis.set( 'hasError', false );\r\n\r\n\t\t/**\r\n\t\t * The `id` of the element describing this field, e.g. when it has\r\n\t\t * some error, it helps screen readers read the error text.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @member {Boolean} #ariaDescribedById\r\n\t\t */\r\n\t\tthis.set( 'ariaDescribedById' );\r\n\r\n\t\tconst bind = this.bindTemplate;\r\n\r\n\t\tthis.setTemplate( {\r\n\t\t\ttag: 'input',\r\n\t\t\tattributes: {\r\n\t\t\t\ttype: 'text',\r\n\t\t\t\tclass: [\r\n\t\t\t\t\t'ck',\r\n\t\t\t\t\t'ck-input',\r\n\t\t\t\t\t'ck-input-text',\r\n\t\t\t\t\tbind.if( 'hasError', 'ck-error' )\r\n\t\t\t\t],\r\n\t\t\t\tid: bind.to( 'id' ),\r\n\t\t\t\tplaceholder: bind.to( 'placeholder' ),\r\n\t\t\t\treadonly: bind.to( 'isReadOnly' ),\r\n\t\t\t\t'aria-invalid': bind.if( 'hasError', true ),\r\n\t\t\t\t'aria-describedby': bind.to( 'ariaDescribedById' )\r\n\t\t\t},\r\n\t\t\ton: {\r\n\t\t\t\tinput: bind.to( 'input' )\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t/**\r\n\t\t * Fired when the user types in the input. Corresponds to the native\r\n\t\t * DOM `input` event.\r\n\t\t *\r\n\t\t * @event input\r\n\t\t */\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\trender() {\r\n\t\tsuper.render();\r\n\r\n\t\tconst setValue = value => {\r\n\t\t\tthis.element.value = ( !value && value !== 0 ) ? '' : value;\r\n\t\t};\r\n\r\n\t\tsetValue( this.value );\r\n\r\n\t\t// Bind `this.value` to the DOM element's value.\r\n\t\t// We cannot use `value` DOM attribute because removing it on Edge does not clear the DOM element's value property.\r\n\t\tthis.on( 'change:value', ( evt, name, value ) => {\r\n\t\t\tsetValue( value );\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the focus to the input and selects the value.\r\n\t */\r\n\tselect() {\r\n\t\tthis.element.select();\r\n\t}\r\n\r\n\t/**\r\n\t * Focuses the input.\r\n\t */\r\n\tfocus() {\r\n\t\tthis.element.focus();\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module ui/label/labelview\r\n */\r\n\r\nimport View from '../view';\r\nimport uid from '@ckeditor/ckeditor5-utils/src/uid';\r\n\r\nimport '../../theme/components/label/label.css';\r\n\r\n/**\r\n * The label view class.\r\n *\r\n * @extends module:ui/view~View\r\n */\r\nexport default class LabelView extends View {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tconstructor( locale ) {\r\n\t\tsuper( locale );\r\n\r\n\t\t/**\r\n\t\t * The text of the label.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @member {String} #text\r\n\t\t */\r\n\t\tthis.set( 'text' );\r\n\r\n\t\t/**\r\n\t\t * The `for` attribute of the label (i.e. to pair with an `<input>` element).\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @member {String} #for\r\n\t\t */\r\n\t\tthis.set( 'for' );\r\n\r\n\t\t/**\r\n\t\t * An unique id of the label. It can be used by other UI components to reference\r\n\t\t * the label, for instance, using the `aria-describedby` DOM attribute.\r\n\t\t *\r\n\t\t * @member {String} #id\r\n\t\t */\r\n\t\tthis.id = `ck-editor__label_${ uid() }`;\r\n\r\n\t\tconst bind = this.bindTemplate;\r\n\r\n\t\tthis.setTemplate( {\r\n\t\t\ttag: 'label',\r\n\t\t\tattributes: {\r\n\t\t\t\tclass: [\r\n\t\t\t\t\t'ck',\r\n\t\t\t\t\t'ck-label'\r\n\t\t\t\t],\r\n\t\t\t\tid: this.id,\r\n\t\t\t\tfor: bind.to( 'for' )\r\n\t\t\t},\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttext: bind.to( 'text' )\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t} );\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module ui/labeledinput/labeledinputview\r\n */\r\n\r\nimport View from '../view';\r\nimport uid from '@ckeditor/ckeditor5-utils/src/uid';\r\nimport LabelView from '../label/labelview';\r\nimport '../../theme/components/labeledinput/labeledinput.css';\r\n\r\n/**\r\n * The labeled input view class.\r\n *\r\n * @extends module:ui/view~View\r\n */\r\nexport default class LabeledInputView extends View {\r\n\t/**\r\n\t * Creates an instance of the labeled input view class.\r\n\t *\r\n\t * @param {module:utils/locale~Locale} locale The locale instance.\r\n\t * @param {Function} InputView Constructor of the input view.\r\n\t */\r\n\tconstructor( locale, InputView ) {\r\n\t\tsuper( locale );\r\n\r\n\t\tconst inputUid = `ck-input-${ uid() }`;\r\n\t\tconst statusUid = `ck-status-${ uid() }`;\r\n\r\n\t\t/**\r\n\t\t * The text of the label.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @member {String} #label\r\n\t\t */\r\n\t\tthis.set( 'label' );\r\n\r\n\t\t/**\r\n\t\t * The value of the input.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @member {String} #value\r\n\t\t */\r\n\t\tthis.set( 'value' );\r\n\r\n\t\t/**\r\n\t\t * Controls whether the component is in read-only mode.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @member {Boolean} #isReadOnly\r\n\t\t */\r\n\t\tthis.set( 'isReadOnly', false );\r\n\r\n\t\t/**\r\n\t\t * The validation error text. When set, it will be displayed\r\n\t\t * next to the {@link #inputView} as a typical validation error message.\r\n\t\t * Set it to `null` to hide the message.\r\n\t\t *\r\n\t\t * **Note:** Setting this property to anything but `null` will automatically\r\n\t\t * make the {@link module:ui/inputtext/inputtextview~InputTextView#hasError `hasError`}\r\n\t\t * of the {@link #inputView} `true`.\r\n\t\t *\r\n\t\t * **Note:** Typing in the {@link #inputView} which fires the\r\n\t\t * {@link module:ui/inputtext/inputtextview~InputTextView#event:input `input` event}\r\n\t\t * resets this property back to `null`, indicating that the input field can be re–validated.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @member {String|null} #errorText\r\n\t\t */\r\n\t\tthis.set( 'errorText', null );\r\n\r\n\t\t/**\r\n\t\t * The additional information text displayed next to the {@link #inputView} which can\r\n\t\t * be used to inform the user about the purpose of the input, provide help or hints.\r\n\t\t *\r\n\t\t * Set it to `null` to hide the message.\r\n\t\t *\r\n\t\t * **Note:** This text will be displayed in the same place as {@link #errorText} but the\r\n\t\t * latter always takes precedence: if the {@link #errorText} is set, it replaces\r\n\t\t * {@link #errorText} for as long as the value of the input is invalid.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @member {String|null} #infoText\r\n\t\t */\r\n\t\tthis.set( 'infoText', null );\r\n\r\n\t\t/**\r\n\t\t * The label view.\r\n\t\t *\r\n\t\t * @member {module:ui/label/labelview~LabelView} #labelView\r\n\t\t */\r\n\t\tthis.labelView = this._createLabelView( inputUid );\r\n\r\n\t\t/**\r\n\t\t * The input view.\r\n\t\t *\r\n\t\t * @member {module:ui/inputtext/inputtextview~InputTextView} #inputView\r\n\t\t */\r\n\t\tthis.inputView = this._createInputView( InputView, inputUid, statusUid );\r\n\r\n\t\t/**\r\n\t\t * The status view for the {@link #inputView}. It displays {@link #errorText} and\r\n\t\t * {@link #infoText}.\r\n\t\t *\r\n\t\t * @member {module:ui/view~View} #statusView\r\n\t\t */\r\n\t\tthis.statusView = this._createStatusView( statusUid );\r\n\r\n\t\t/**\r\n\t\t * The combined status text made of {@link #errorText} and {@link #infoText}.\r\n\t\t * Note that when present, {@link #errorText} always takes precedence in the\r\n\t\t * status.\r\n\t\t *\r\n\t\t * @see #errorText\r\n\t\t * @see #infoText\r\n\t\t * @see #statusView\r\n\t\t * @private\r\n\t\t * @observable\r\n\t\t * @member {String|null} #_statusText\r\n\t\t */\r\n\t\tthis.bind( '_statusText' ).to(\r\n\t\t\tthis, 'errorText',\r\n\t\t\tthis, 'infoText',\r\n\t\t\t( errorText, infoText ) => errorText || infoText\r\n\t\t);\r\n\r\n\t\tconst bind = this.bindTemplate;\r\n\r\n\t\tthis.setTemplate( {\r\n\t\t\ttag: 'div',\r\n\t\t\tattributes: {\r\n\t\t\t\tclass: [\r\n\t\t\t\t\t'ck',\r\n\t\t\t\t\t'ck-labeled-input',\r\n\t\t\t\t\tbind.if( 'isReadOnly', 'ck-disabled' )\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\tchildren: [\r\n\t\t\t\tthis.labelView,\r\n\t\t\t\tthis.inputView,\r\n\t\t\t\tthis.statusView\r\n\t\t\t]\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates label view class instance and bind with view.\r\n\t *\r\n\t * @private\r\n\t * @param {String} id Unique id to set as labelView#for attribute.\r\n\t * @returns {module:ui/label/labelview~LabelView}\r\n\t */\r\n\t_createLabelView( id ) {\r\n\t\tconst labelView = new LabelView( this.locale );\r\n\r\n\t\tlabelView.for = id;\r\n\t\tlabelView.bind( 'text' ).to( this, 'label' );\r\n\r\n\t\treturn labelView;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates input view class instance and bind with view.\r\n\t *\r\n\t * @private\r\n\t * @param {Function} InputView Input view constructor.\r\n\t * @param {String} inputUid Unique id to set as inputView#id attribute.\r\n\t * @param {String} statusUid Unique id of the status for the input's `aria-describedby` attribute.\r\n\t * @returns {module:ui/inputtext/inputtextview~InputTextView}\r\n\t */\r\n\t_createInputView( InputView, inputUid, statusUid ) {\r\n\t\tconst inputView = new InputView( this.locale, statusUid );\r\n\r\n\t\tinputView.id = inputUid;\r\n\t\tinputView.ariaDescribedById = statusUid;\r\n\t\tinputView.bind( 'value' ).to( this );\r\n\t\tinputView.bind( 'isReadOnly' ).to( this );\r\n\t\tinputView.bind( 'hasError' ).to( this, 'errorText', value => !!value );\r\n\r\n\t\tinputView.on( 'input', () => {\r\n\t\t\t// UX: Make the error text disappear and disable the error indicator as the user\r\n\t\t\t// starts fixing the errors.\r\n\t\t\tthis.errorText = null;\r\n\t\t} );\r\n\r\n\t\treturn inputView;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates the status view instance. It displays {@link #errorText} and {@link #infoText}\r\n\t * next to the {@link #inputView}. See {@link #_statusText}.\r\n\t *\r\n\t * @private\r\n\t * @param {String} statusUid Unique id of the status, shared with the input's `aria-describedby` attribute.\r\n\t * @returns {module:ui/view~View}\r\n\t */\r\n\t_createStatusView( statusUid ) {\r\n\t\tconst statusView = new View( this.locale );\r\n\t\tconst bind = this.bindTemplate;\r\n\r\n\t\tstatusView.setTemplate( {\r\n\t\t\ttag: 'div',\r\n\t\t\tattributes: {\r\n\t\t\t\tclass: [\r\n\t\t\t\t\t'ck',\r\n\t\t\t\t\t'ck-labeled-input__status',\r\n\t\t\t\t\tbind.if( 'errorText', 'ck-labeled-input__status_error' ),\r\n\t\t\t\t\tbind.if( '_statusText', 'ck-hidden', value => !value )\r\n\t\t\t\t],\r\n\t\t\t\tid: statusUid,\r\n\t\t\t\trole: bind.if( 'errorText', 'alert' )\r\n\t\t\t},\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttext: bind.to( '_statusText' )\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t} );\r\n\r\n\t\treturn statusView;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the focus to the input and selects the value.\r\n\t */\r\n\tselect() {\r\n\t\tthis.inputView.select();\r\n\t}\r\n\r\n\t/**\r\n\t * Focuses the input.\r\n\t */\r\n\tfocus() {\r\n\t\tthis.inputView.focus();\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module ui/list/listitemview\r\n */\r\n\r\nimport View from '../view';\r\n\r\n/**\r\n * The list item view class.\r\n *\r\n * @extends module:ui/view~View\r\n */\r\nexport default class ListItemView extends View {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tconstructor( locale ) {\r\n\t\tsuper( locale );\r\n\r\n\t\t/**\r\n\t\t * Collection of the child views inside of the list item {@link #element}.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:ui/viewcollection~ViewCollection}\r\n\t\t */\r\n\t\tthis.children = this.createCollection();\r\n\r\n\t\tthis.setTemplate( {\r\n\t\t\ttag: 'li',\r\n\r\n\t\t\tattributes: {\r\n\t\t\t\tclass: [\r\n\t\t\t\t\t'ck',\r\n\t\t\t\t\t'ck-list__item'\r\n\t\t\t\t]\r\n\t\t\t},\r\n\r\n\t\t\tchildren: this.children\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * Focuses the list item.\r\n\t */\r\n\tfocus() {\r\n\t\tthis.children.first.focus();\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module ui/list/listseparatorview\r\n */\r\n\r\nimport View from '../view';\r\n\r\n/**\r\n * The list separator view class.\r\n *\r\n * @extends module:ui/view~View\r\n */\r\nexport default class ListSeparatorView extends View {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tconstructor( locale ) {\r\n\t\tsuper( locale );\r\n\r\n\t\tthis.setTemplate( {\r\n\t\t\ttag: 'li',\r\n\t\t\tattributes: {\r\n\t\t\t\tclass: [\r\n\t\t\t\t\t'ck',\r\n\t\t\t\t\t'ck-list__separator'\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module ui/list/listview\r\n */\r\n\r\nimport View from '../view';\r\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\r\nimport FocusCycler from '../focuscycler';\r\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\r\n\r\nimport '../../theme/components/list/list.css';\r\n\r\n/**\r\n * The list view class.\r\n *\r\n * @extends module:ui/view~View\r\n * @implements module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable\r\n */\r\nexport default class ListView extends View {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\t/**\r\n\t\t * Collection of the child list views.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:ui/viewcollection~ViewCollection}\r\n\t\t */\r\n\t\tthis.items = this.createCollection();\r\n\r\n\t\t/**\r\n\t\t * Tracks information about DOM focus in the list.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:utils/focustracker~FocusTracker}\r\n\t\t */\r\n\t\tthis.focusTracker = new FocusTracker();\r\n\r\n\t\t/**\r\n\t\t * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\r\n\t\t */\r\n\t\tthis.keystrokes = new KeystrokeHandler();\r\n\r\n\t\t/**\r\n\t\t * Helps cycling over focusable {@link #items} in the list.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @protected\r\n\t\t * @member {module:ui/focuscycler~FocusCycler}\r\n\t\t */\r\n\t\tthis._focusCycler = new FocusCycler( {\r\n\t\t\tfocusables: this.items,\r\n\t\t\tfocusTracker: this.focusTracker,\r\n\t\t\tkeystrokeHandler: this.keystrokes,\r\n\t\t\tactions: {\r\n\t\t\t\t// Navigate list items backwards using the arrowup key.\r\n\t\t\t\tfocusPrevious: 'arrowup',\r\n\r\n\t\t\t\t// Navigate toolbar items forwards using the arrowdown key.\r\n\t\t\t\tfocusNext: 'arrowdown'\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tthis.setTemplate( {\r\n\t\t\ttag: 'ul',\r\n\r\n\t\t\tattributes: {\r\n\t\t\t\tclass: [\r\n\t\t\t\t\t'ck',\r\n\t\t\t\t\t'ck-reset',\r\n\t\t\t\t\t'ck-list'\r\n\t\t\t\t]\r\n\t\t\t},\r\n\r\n\t\t\tchildren: this.items\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\trender() {\r\n\t\tsuper.render();\r\n\r\n\t\t// Items added before rendering should be known to the #focusTracker.\r\n\t\tfor ( const item of this.items ) {\r\n\t\t\tthis.focusTracker.add( item.element );\r\n\t\t}\r\n\r\n\t\tthis.items.on( 'add', ( evt, item ) => {\r\n\t\t\tthis.focusTracker.add( item.element );\r\n\t\t} );\r\n\r\n\t\tthis.items.on( 'remove', ( evt, item ) => {\r\n\t\t\tthis.focusTracker.remove( item.element );\r\n\t\t} );\r\n\r\n\t\t// Start listening for the keystrokes coming from #element.\r\n\t\tthis.keystrokes.listenTo( this.element );\r\n\t}\r\n\r\n\t/**\r\n\t * Focuses the first focusable in {@link #items}.\r\n\t */\r\n\tfocus() {\r\n\t\tthis._focusCycler.focusFirst();\r\n\t}\r\n\r\n\t/**\r\n\t * Focuses the last focusable in {@link #items}.\r\n\t */\r\n\tfocusLast() {\r\n\t\tthis._focusCycler.focusLast();\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md.\r\n */\r\n\r\n/**\r\n * @module ui/panel/balloon/balloonpanelview\r\n */\r\n\r\nimport View from '../../view';\r\nimport { getOptimalPosition } from '@ckeditor/ckeditor5-utils/src/dom/position';\r\nimport isRange from '@ckeditor/ckeditor5-utils/src/dom/isrange';\r\nimport toUnit from '@ckeditor/ckeditor5-utils/src/dom/tounit';\r\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\r\nimport { isElement } from 'lodash-es';\r\n\r\nimport '../../../theme/components/panel/balloonpanel.css';\r\n\r\nconst toPx = toUnit( 'px' );\r\nconst defaultLimiterElement = global.document.body;\r\n\r\n/**\r\n * The balloon panel view class.\r\n *\r\n * A floating container which can\r\n * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#pin pin} to any\r\n * {@link module:utils/dom/position~Options#target target} in the DOM and remain in that position\r\n * e.g. when the web page is scrolled.\r\n *\r\n * The balloon panel can be used to display contextual, non-blocking UI like forms, toolbars and\r\n * the like in its {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#content} view\r\n * collection.\r\n *\r\n * There is a number of {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}\r\n * that the balloon can use, automatically switching from one to another when the viewport space becomes\r\n * scarce to keep the balloon visible to the user as long as it is possible. The balloon will also\r\n * accept any custom position set provided by the user compatible with the\r\n * {@link module:utils/dom/position~Options options}.\r\n *\r\n *\t\tconst panel = new BalloonPanelView( locale );\r\n *\t\tconst childView = new ChildView();\r\n *\t\tconst positions = BalloonPanelView.defaultPositions;\r\n *\r\n *\t\tpanel.render();\r\n *\r\n *\t\t// Add a child view to the panel's content collection.\r\n *\t\tpanel.content.add( childView );\r\n *\r\n *\t\t// Start pinning the panel to an element with the \"target\" id DOM.\r\n *\t\t// The balloon will remain pinned until unpin() is called.\r\n *\t\tpanel.pin( {\r\n *\t\t\ttarget: document.querySelector( '#target' ),\r\n *\t\t\tpositions: [\r\n *\t\t\t\tpositions.northArrowSouth,\r\n *\t\t\t\tpositions.southArrowNorth\r\n *\t\t\t]\r\n *\t\t} );\r\n *\r\n * @extends module:ui/view~View\r\n */\r\nexport default class BalloonPanelView extends View {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tconstructor( locale ) {\r\n\t\tsuper( locale );\r\n\r\n\t\tconst bind = this.bindTemplate;\r\n\r\n\t\t/**\r\n\t\t * The absolute top position of the balloon panel in pixels.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @default 0\r\n\t\t * @member {Number} #top\r\n\t\t */\r\n\t\tthis.set( 'top', 0 );\r\n\r\n\t\t/**\r\n\t\t * The absolute left position of the balloon panel in pixels.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @default 0\r\n\t\t * @member {Number} #left\r\n\t\t */\r\n\t\tthis.set( 'left', 0 );\r\n\r\n\t\t/**\r\n\t\t * The balloon panel's current position. The position name is reflected in the CSS class set\r\n\t\t * to the balloon, i.e. `.ck-balloon-panel_arrow_nw` for the \"arrow_nw\" position. The class\r\n\t\t * controls the minor aspects of the balloon's visual appearance like the placement\r\n\t\t * of an {@link #withArrow arrow}. To support a new position, an additional CSS must be created.\r\n\t\t *\r\n\t\t * Default position names correspond with\r\n\t\t * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\r\n\t\t *\r\n\t\t * See the {@link #attachTo} and {@link #pin} methods to learn about custom balloon positions.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @default 'arrow_nw'\r\n\t\t * @member {'arrow_nw'|'arrow_ne'|'arrow_sw'|'arrow_se'} #position\r\n\t\t */\r\n\t\tthis.set( 'position', 'arrow_nw' );\r\n\r\n\t\t/**\r\n\t\t * Controls whether the balloon panel is visible or not.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @default false\r\n\t\t * @member {Boolean} #isVisible\r\n\t\t */\r\n\t\tthis.set( 'isVisible', false );\r\n\r\n\t\t/**\r\n\t\t * Controls whether the balloon panel has an arrow. The presence of the arrow\r\n\t\t * is reflected in the `ck-balloon-panel_with-arrow` CSS class.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @default true\r\n\t\t * @member {Boolean} #withArrow\r\n\t\t */\r\n\t\tthis.set( 'withArrow', true );\r\n\r\n\t\t/**\r\n\t\t * An additional CSS class added to the {@link #element}.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @member {String} #class\r\n\t\t */\r\n\t\tthis.set( 'class' );\r\n\r\n\t\t/**\r\n\t\t * A callback that starts pinning the panel when {@link #isVisible} gets\r\n\t\t * `true`. Used by {@link #pin}.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Function} #_pinWhenIsVisibleCallback\r\n\t\t */\r\n\r\n\t\t/**\r\n\t\t * A collection of the child views that creates the balloon panel contents.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:ui/viewcollection~ViewCollection}\r\n\t\t */\r\n\t\tthis.content = this.createCollection();\r\n\r\n\t\tthis.setTemplate( {\r\n\t\t\ttag: 'div',\r\n\t\t\tattributes: {\r\n\t\t\t\tclass: [\r\n\t\t\t\t\t'ck',\r\n\t\t\t\t\t'ck-balloon-panel',\r\n\t\t\t\t\tbind.to( 'position', value => `ck-balloon-panel_${ value }` ),\r\n\t\t\t\t\tbind.if( 'isVisible', 'ck-balloon-panel_visible' ),\r\n\t\t\t\t\tbind.if( 'withArrow', 'ck-balloon-panel_with-arrow' ),\r\n\t\t\t\t\tbind.to( 'class' )\r\n\t\t\t\t],\r\n\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\ttop: bind.to( 'top', toPx ),\r\n\t\t\t\t\tleft: bind.to( 'left', toPx )\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tchildren: this.content\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * Shows the panel.\r\n\t *\r\n\t * See {@link #isVisible}.\r\n\t */\r\n\tshow() {\r\n\t\tthis.isVisible = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Hides the panel.\r\n\t *\r\n\t * See {@link #isVisible}.\r\n\t */\r\n\thide() {\r\n\t\tthis.isVisible = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Attaches the panel to a specified {@link module:utils/dom/position~Options#target} with a\r\n\t * smart positioning heuristics that chooses from available positions to make sure the panel\r\n\t * is visible to the user i.e. within the limits of the viewport.\r\n\t *\r\n\t * This method accepts configuration {@link module:utils/dom/position~Options options}\r\n\t * to set the `target`, optional `limiter` and `positions` the balloon should choose from.\r\n\t *\r\n\t *\t\tconst panel = new BalloonPanelView( locale );\r\n\t *\t\tconst positions = BalloonPanelView.defaultPositions;\r\n\t *\r\n\t *\t\tpanel.render();\r\n\t *\r\n\t *\t\t// Attach the panel to an element with the \"target\" id DOM.\r\n\t *\t\tpanel.attachTo( {\r\n\t *\t\t\ttarget: document.querySelector( '#target' ),\r\n\t *\t\t\tpositions: [\r\n\t *\t\t\t\tpositions.northArrowSouth,\r\n\t *\t\t\t\tpositions.southArrowNorth\r\n\t *\t\t\t]\r\n\t *\t\t} );\r\n\t *\r\n\t * **Note**: Attaching the panel will also automatically {@link #show} it.\r\n\t *\r\n\t * **Note**: An attached panel will not follow its target when the window is scrolled or resized.\r\n\t * See the {@link #pin} method for a more permanent positioning strategy.\r\n\t *\r\n\t * @param {module:utils/dom/position~Options} options Positioning options compatible with\r\n\t * {@link module:utils/dom/position~getOptimalPosition}. Default `positions` array is\r\n\t * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\r\n\t */\r\n\tattachTo( options ) {\r\n\t\tthis.show();\r\n\r\n\t\tconst defaultPositions = BalloonPanelView.defaultPositions;\r\n\t\tconst positionOptions = Object.assign( {}, {\r\n\t\t\telement: this.element,\r\n\t\t\tpositions: [\r\n\t\t\t\tdefaultPositions.southArrowNorth,\r\n\t\t\t\tdefaultPositions.southArrowNorthMiddleWest,\r\n\t\t\t\tdefaultPositions.southArrowNorthMiddleEast,\r\n\t\t\t\tdefaultPositions.southArrowNorthWest,\r\n\t\t\t\tdefaultPositions.southArrowNorthEast,\r\n\t\t\t\tdefaultPositions.northArrowSouth,\r\n\t\t\t\tdefaultPositions.northArrowSouthMiddleWest,\r\n\t\t\t\tdefaultPositions.northArrowSouthMiddleEast,\r\n\t\t\t\tdefaultPositions.northArrowSouthWest,\r\n\t\t\t\tdefaultPositions.northArrowSouthEast\r\n\t\t\t],\r\n\t\t\tlimiter: defaultLimiterElement,\r\n\t\t\tfitInViewport: true\r\n\t\t}, options );\r\n\r\n\t\tconst optimalPosition = BalloonPanelView._getOptimalPosition( positionOptions );\r\n\r\n\t\t// Usually browsers make some problems with super accurate values like 104.345px\r\n\t\t// so it is better to use int values.\r\n\t\tconst left = parseInt( optimalPosition.left );\r\n\t\tconst top = parseInt( optimalPosition.top );\r\n\t\tconst position = optimalPosition.name;\r\n\r\n\t\tObject.assign( this, { top, left, position } );\r\n\t}\r\n\r\n\t/**\r\n\t * Works the same way as the {@link #attachTo} method except that the position of the panel is\r\n\t * continuously updated when:\r\n\t *\r\n\t * * any ancestor of the {@link module:utils/dom/position~Options#target}\r\n\t * or {@link module:utils/dom/position~Options#limiter} is scrolled,\r\n\t * * the browser window gets resized or scrolled.\r\n\t *\r\n\t * Thanks to that, the panel always sticks to the {@link module:utils/dom/position~Options#target}\r\n\t * and is immune to the changing environment.\r\n\t *\r\n\t *\t\tconst panel = new BalloonPanelView( locale );\r\n\t *\t\tconst positions = BalloonPanelView.defaultPositions;\r\n\t *\r\n\t *\t\tpanel.render();\r\n\t *\r\n\t *\t\t// Pin the panel to an element with the \"target\" id DOM.\r\n\t *\t\tpanel.pin( {\r\n\t *\t\t\ttarget: document.querySelector( '#target' ),\r\n\t *\t\t\tpositions: [\r\n\t *\t\t\t\tpositions.northArrowSouth,\r\n\t *\t\t\t\tpositions.southArrowNorth\r\n\t *\t\t\t]\r\n\t *\t\t} );\r\n\t *\r\n\t * To leave the pinned state, use the {@link #unpin} method.\r\n\t *\r\n\t * **Note**: Pinning the panel will also automatically {@link #show} it.\r\n\t *\r\n\t * @param {module:utils/dom/position~Options} options Positioning options compatible with\r\n\t * {@link module:utils/dom/position~getOptimalPosition}. Default `positions` array is\r\n\t * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\r\n\t */\r\n\tpin( options ) {\r\n\t\tthis.unpin();\r\n\r\n\t\tthis._pinWhenIsVisibleCallback = () => {\r\n\t\t\tif ( this.isVisible ) {\r\n\t\t\t\tthis._startPinning( options );\r\n\t\t\t} else {\r\n\t\t\t\tthis._stopPinning();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis._startPinning( options );\r\n\r\n\t\t// Control the state of the listeners depending on whether the panel is visible\r\n\t\t// or not.\r\n\t\t// TODO: Use on() (https://github.com/ckeditor/ckeditor5-utils/issues/144).\r\n\t\tthis.listenTo( this, 'change:isVisible', this._pinWhenIsVisibleCallback );\r\n\t}\r\n\r\n\t/**\r\n\t * Stops pinning the panel, as set up by {@link #pin}.\r\n\t */\r\n\tunpin() {\r\n\t\tif ( this._pinWhenIsVisibleCallback ) {\r\n\t\t\t// Deactivate listeners attached by pin().\r\n\t\t\tthis._stopPinning();\r\n\r\n\t\t\t// Deactivate the panel pin() control logic.\r\n\t\t\t// TODO: Use off() (https://github.com/ckeditor/ckeditor5-utils/issues/144).\r\n\t\t\tthis.stopListening( this, 'change:isVisible', this._pinWhenIsVisibleCallback );\r\n\r\n\t\t\tthis._pinWhenIsVisibleCallback = null;\r\n\r\n\t\t\tthis.hide();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Starts managing the pinned state of the panel. See {@link #pin}.\r\n\t *\r\n\t * @private\r\n\t * @param {module:utils/dom/position~Options} options Positioning options compatible with\r\n\t * {@link module:utils/dom/position~getOptimalPosition}.\r\n\t */\r\n\t_startPinning( options ) {\r\n\t\tthis.attachTo( options );\r\n\r\n\t\tconst targetElement = getDomElement( options.target );\r\n\t\tconst limiterElement = options.limiter ? getDomElement( options.limiter ) : defaultLimiterElement;\r\n\r\n\t\t// Then we need to listen on scroll event of eny element in the document.\r\n\t\tthis.listenTo( global.document, 'scroll', ( evt, domEvt ) => {\r\n\t\t\tconst scrollTarget = domEvt.target;\r\n\r\n\t\t\t// The position needs to be updated if the positioning target is within the scrolled element.\r\n\t\t\tconst isWithinScrollTarget = targetElement && scrollTarget.contains( targetElement );\r\n\r\n\t\t\t// The position needs to be updated if the positioning limiter is within the scrolled element.\r\n\t\t\tconst isLimiterWithinScrollTarget = limiterElement && scrollTarget.contains( limiterElement );\r\n\r\n\t\t\t// The positioning target and/or limiter can be a Rect, object etc..\r\n\t\t\t// There's no way to optimize the listener then.\r\n\t\t\tif ( isWithinScrollTarget || isLimiterWithinScrollTarget || !targetElement || !limiterElement ) {\r\n\t\t\t\tthis.attachTo( options );\r\n\t\t\t}\r\n\t\t}, { useCapture: true } );\r\n\r\n\t\t// We need to listen on window resize event and update position.\r\n\t\tthis.listenTo( global.window, 'resize', () => {\r\n\t\t\tthis.attachTo( options );\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * Stops managing the pinned state of the panel. See {@link #pin}.\r\n\t *\r\n\t * @private\r\n\t */\r\n\t_stopPinning() {\r\n\t\tthis.stopListening( global.document, 'scroll' );\r\n\t\tthis.stopListening( global.window, 'resize' );\r\n\t}\r\n}\r\n\r\n// Returns the DOM element for given object or null, if there is none,\r\n// e.g. when the passed object is a Rect instance or so.\r\n//\r\n// @private\r\n// @param {*} object\r\n// @returns {HTMLElement|null}\r\nfunction getDomElement( object ) {\r\n\tif ( isElement( object ) ) {\r\n\t\treturn object;\r\n\t}\r\n\r\n\tif ( isRange( object ) ) {\r\n\t\treturn object.commonAncestorContainer;\r\n\t}\r\n\r\n\tif ( typeof object == 'function' ) {\r\n\t\treturn getDomElement( object() );\r\n\t}\r\n\r\n\treturn null;\r\n}\r\n\r\n/**\r\n * A horizontal offset of the arrow tip from the edge of the balloon. Controlled by CSS.\r\n *\r\n *\t\t +-----|---------...\r\n *\t\t |     |\r\n *\t\t |     |\r\n *\t\t |     |\r\n *\t\t |     |\r\n *\t\t +--+  |  +------...\r\n *\t\t     \\ | /\r\n *\t\t      \\|/\r\n *\t    >|-----|<---------------- horizontal offset\r\n *\r\n * @default 30\r\n * @member {Number} module:ui/panel/balloon/balloonpanelview~BalloonPanelView.arrowHorizontalOffset\r\n */\r\nBalloonPanelView.arrowHorizontalOffset = 25;\r\n\r\n/**\r\n * A vertical offset of the arrow from the edge of the balloon. Controlled by CSS.\r\n *\r\n *\t\t +-------------...\r\n *\t\t |\r\n *\t\t |\r\n *\t\t |                      /-- vertical offset\r\n *\t\t |                     V\r\n *\t\t +--+    +-----...    ---------\r\n *\t\t     \\  /              |\r\n *\t\t      \\/               |\r\n *\t\t-------------------------------\r\n *\t\t                       ^\r\n *\r\n * @default 15\r\n * @member {Number} module:ui/panel/balloon/balloonpanelview~BalloonPanelView.arrowVerticalOffset\r\n */\r\nBalloonPanelView.arrowVerticalOffset = 10;\r\n\r\n/**\r\n * Function used to calculate the optimal position for the balloon.\r\n *\r\n * @protected\r\n * @member {Function} module:ui/panel/balloon/balloonpanelview~BalloonPanelView._getOptimalPosition\r\n */\r\nBalloonPanelView._getOptimalPosition = getOptimalPosition;\r\n\r\n/**\r\n * A default set of positioning functions used by the balloon panel view\r\n * when attaching using the {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#attachTo} method.\r\n *\r\n * The available positioning functions are as follows:\r\n *\r\n *\r\n *\r\n * **North west**\r\n *\r\n * * `northWestArrowSouthWest`\r\n *\r\n *\t\t+-----------------+\r\n *\t\t|     Balloon     |\r\n *\t\t+-----------------+\r\n *\t\t V\r\n *\t\t [ Target ]\r\n *\r\n * * `northWestArrowSouthMiddleWest`\r\n *\r\n *\t\t+-----------------+\r\n *\t\t|     Balloon     |\r\n *\t\t+-----------------+\r\n *\t\t    V\r\n *\t\t    [ Target ]\r\n *\r\n * * `northWestArrowSouth`\r\n *\r\n *\t\t+-----------------+\r\n *\t\t|     Balloon     |\r\n *\t\t+-----------------+\r\n *\t\t         V\r\n *\t\t         [ Target ]\r\n *\r\n * * `northWestArrowSouthMiddleEast`\r\n *\r\n *\t\t+-----------------+\r\n *\t\t|     Balloon     |\r\n *\t\t+-----------------+\r\n *\t\t             V\r\n *\t\t             [ Target ]\r\n *\r\n * * `northWestArrowSouthEast`\r\n *\r\n *\t\t+-----------------+\r\n *\t\t|     Balloon     |\r\n *\t\t+-----------------+\r\n *\t\t                 V\r\n *\t\t                 [ Target ]\r\n *\r\n *\r\n *\r\n * **North**\r\n *\r\n * * `northArrowSouthWest`\r\n *\r\n *\t\t    +-----------------+\r\n *\t\t    |     Balloon     |\r\n *\t\t    +-----------------+\r\n *\t\t     V\r\n *\t\t[ Target ]\r\n *\r\n * * `northArrowSouthMiddleWest`\r\n *\r\n *\t\t +-----------------+\r\n *\t\t |     Balloon     |\r\n *\t\t +-----------------+\r\n *\t\t     V\r\n *\t\t[ Target ]\r\n *\r\n * * `northArrowSouth`\r\n *\r\n *\t\t+-----------------+\r\n *\t\t|     Balloon     |\r\n *\t\t+-----------------+\r\n *\t\t         V\r\n *\t\t    [ Target ]\r\n *\r\n * * `northArrowSouthMiddleEast`\r\n *\r\n *\t\t+-----------------+\r\n *\t\t|     Balloon     |\r\n *\t\t+-----------------+\r\n *\t\t             V\r\n *\t\t        [ Target ]\r\n *\r\n * * `northArrowSouthEast`\r\n *\r\n *\t\t+-----------------+\r\n *\t\t|     Balloon     |\r\n *\t\t+-----------------+\r\n *\t\t                V\r\n *\t\t           [ Target ]\r\n *\r\n * **North east**\r\n *\r\n * * `northEastArrowSouthWest`\r\n *\r\n *\t\t        +-----------------+\r\n *\t\t        |     Balloon     |\r\n *\t\t        +-----------------+\r\n *\t\t         V\r\n *\t\t[ Target ]\r\n *\r\n *\r\n * * `northEastArrowSouthMiddleWest`\r\n *\r\n *\t\t     +-----------------+\r\n *\t\t     |     Balloon     |\r\n *\t\t     +-----------------+\r\n *\t\t         V\r\n *\t\t[ Target ]\r\n *\r\n * * `northEastArrowSouth`\r\n *\r\n *\t\t+-----------------+\r\n *\t\t|     Balloon     |\r\n *\t\t+-----------------+\r\n *\t\t         V\r\n *\t\t[ Target ]\r\n *\r\n * * `northEastArrowSouthMiddleEast`\r\n *\r\n *\t\t+-----------------+\r\n *\t\t|     Balloon     |\r\n *\t\t+-----------------+\r\n *\t\t             V\r\n *\t\t    [ Target ]\r\n *\r\n * * `northEastArrowSouthEast`\r\n *\r\n *\t\t+-----------------+\r\n *\t\t|     Balloon     |\r\n *\t\t+-----------------+\r\n *\t\t                 V\r\n *\t\t        [ Target ]\r\n *\r\n *\r\n *\r\n * **South**\r\n *\r\n *\r\n * * `southArrowNorthWest`\r\n *\r\n *\t\t[ Target ]\r\n *\t\t     ^\r\n *\t\t    +-----------------+\r\n *\t\t    |     Balloon     |\r\n *\t\t    +-----------------+\r\n *\r\n * * `southArrowNorthMiddleWest`\r\n *\r\n *\t\t   [ Target ]\r\n *\t\t        ^\r\n *\t\t    +-----------------+\r\n *\t\t    |     Balloon     |\r\n *\t\t    +-----------------+\r\n *\r\n * * `southArrowNorth`\r\n *\r\n *\t\t    [ Target ]\r\n *\t\t         ^\r\n *\t\t+-----------------+\r\n *\t\t|     Balloon     |\r\n *\t\t+-----------------+\r\n *\r\n * * `southArrowNorthMiddleEast`\r\n *\r\n *\t\t            [ Target ]\r\n *\t\t                 ^\r\n *\t\t   +-----------------+\r\n *\t\t   |     Balloon     |\r\n *\t\t   +-----------------+\r\n *\r\n * * `southArrowNorthEast`\r\n *\r\n *\t\t            [ Target ]\r\n *\t\t                 ^\r\n *\t\t+-----------------+\r\n *\t\t|     Balloon     |\r\n *\t\t+-----------------+\r\n *\r\n *\r\n *\r\n * **South west**\r\n *\r\n * * `southWestArrowNorthWest`\r\n *\r\n *\t\t [ Target ]\r\n *\t\t ^\r\n *\t\t+-----------------+\r\n *\t\t|     Balloon     |\r\n *\t\t+-----------------+\r\n *\r\n * * `southWestArrowNorthMiddleWest`\r\n *\r\n *\t\t     [ Target ]\r\n *\t\t     ^\r\n *\t\t +-----------------+\r\n *\t\t |     Balloon     |\r\n *\t\t +-----------------+\r\n *\r\n * * `southWestArrowNorth`\r\n *\r\n *\t\t         [ Target ]\r\n *\t\t         ^\r\n *\t\t+-----------------+\r\n *\t\t|     Balloon     |\r\n *\t\t+-----------------+\r\n *\r\n * * `southWestArrowNorthMiddleEast`\r\n *\r\n *\t\t              [ Target ]\r\n *\t\t              ^\r\n *\t\t+-----------------+\r\n *\t\t|     Balloon     |\r\n *\t\t+-----------------+\r\n *\r\n * * `southWestArrowNorthEast`\r\n *\r\n *\t\t                 [ Target ]\r\n *\t\t                 ^\r\n *\t\t+-----------------+\r\n *\t\t|     Balloon     |\r\n *\t\t+-----------------+\r\n *\r\n *\r\n *\r\n * **South east**\r\n *\r\n * * `southEastArrowNorthWest`\r\n *\r\n *\t\t[ Target ]\r\n *\t\t         ^\r\n *\t\t        +-----------------+\r\n *\t\t        |     Balloon     |\r\n *\t\t        +-----------------+\r\n* * `southEastArrowNorthMiddleWest`\r\n *\r\n *\t\t   [ Target ]\r\n *\t\t            ^\r\n *\t\t        +-----------------+\r\n *\t\t        |     Balloon     |\r\n *\t\t        +-----------------+\r\n *\r\n * * `southEastArrowNorth`\r\n *\r\n *\t\t[ Target ]\r\n *\t\t         ^\r\n *\t\t+-----------------+\r\n *\t\t|     Balloon     |\r\n *\t\t+-----------------+\r\n *\r\n * * `southEastArrowNorthMiddleEast`\r\n *\r\n *\t\t     [ Target ]\r\n *\t\t              ^\r\n *\t\t+-----------------+\r\n *\t\t|     Balloon     |\r\n *\t\t+-----------------+\r\n *\r\n * * `southEastArrowNorthEast`\r\n *\r\n *\t\t        [ Target ]\r\n *\t\t                 ^\r\n *\t\t+-----------------+\r\n *\t\t|     Balloon     |\r\n *\t\t+-----------------+\r\n *\r\n *\r\n * See {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#attachTo}.\r\n *\r\n * Positioning functions must be compatible with {@link module:utils/dom/position~Position}.\r\n *\r\n * The name that the position function returns will be reflected in the balloon panel's class that\r\n * controls the placement of the \"arrow\". See {@link #position} to learn more.\r\n *\r\n * @member {Object} module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions\r\n */\r\nBalloonPanelView.defaultPositions = {\r\n\r\n\t// ------- North west\r\n\r\n\tnorthWestArrowSouthWest: ( targetRect, balloonRect ) => ( {\r\n\t\ttop: getNorthTop( targetRect, balloonRect ),\r\n\t\tleft: targetRect.left - BalloonPanelView.arrowHorizontalOffset,\r\n\t\tname: 'arrow_sw'\r\n\t} ),\r\n\r\n\tnorthWestArrowSouthMiddleWest: ( targetRect, balloonRect ) => ( {\r\n\t\ttop: getNorthTop( targetRect, balloonRect ),\r\n\t\tleft: targetRect.left - ( balloonRect.width * .25 ) - BalloonPanelView.arrowHorizontalOffset,\r\n\t\tname: 'arrow_smw'\r\n\t} ),\r\n\r\n\tnorthWestArrowSouth: ( targetRect, balloonRect ) => ( {\r\n\t\ttop: getNorthTop( targetRect, balloonRect ),\r\n\t\tleft: targetRect.left - balloonRect.width / 2,\r\n\t\tname: 'arrow_s'\r\n\t} ),\r\n\r\n\tnorthWestArrowSouthMiddleEast: ( targetRect, balloonRect ) => ( {\r\n\t\ttop: getNorthTop( targetRect, balloonRect ),\r\n\t\tleft: targetRect.left - ( balloonRect.width * .75 ) + BalloonPanelView.arrowHorizontalOffset,\r\n\t\tname: 'arrow_sme'\r\n\t} ),\r\n\r\n\tnorthWestArrowSouthEast: ( targetRect, balloonRect ) => ( {\r\n\t\ttop: getNorthTop( targetRect, balloonRect ),\r\n\t\tleft: targetRect.left - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\r\n\t\tname: 'arrow_se'\r\n\t} ),\r\n\r\n\t// ------- North\r\n\r\n\tnorthArrowSouthWest: ( targetRect, balloonRect ) => ( {\r\n\t\ttop: getNorthTop( targetRect, balloonRect ),\r\n\t\tleft: targetRect.left + targetRect.width / 2 - BalloonPanelView.arrowHorizontalOffset,\r\n\t\tname: 'arrow_sw'\r\n\t} ),\r\n\r\n\tnorthArrowSouthMiddleWest: ( targetRect, balloonRect ) => ( {\r\n\t\ttop: getNorthTop( targetRect, balloonRect ),\r\n\t\tleft: targetRect.left + targetRect.width / 2 - ( balloonRect.width * .25 ) - BalloonPanelView.arrowHorizontalOffset,\r\n\t\tname: 'arrow_smw'\r\n\t} ),\r\n\r\n\tnorthArrowSouth: ( targetRect, balloonRect ) => ( {\r\n\t\ttop: getNorthTop( targetRect, balloonRect ),\r\n\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width / 2,\r\n\t\tname: 'arrow_s'\r\n\t} ),\r\n\r\n\tnorthArrowSouthMiddleEast: ( targetRect, balloonRect ) => ( {\r\n\t\ttop: getNorthTop( targetRect, balloonRect ),\r\n\t\tleft: targetRect.left + targetRect.width / 2 - ( balloonRect.width * .75 ) + BalloonPanelView.arrowHorizontalOffset,\r\n\t\tname: 'arrow_sme'\r\n\t} ),\r\n\r\n\tnorthArrowSouthEast: ( targetRect, balloonRect ) => ( {\r\n\t\ttop: getNorthTop( targetRect, balloonRect ),\r\n\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\r\n\t\tname: 'arrow_se'\r\n\t} ),\r\n\r\n\t// ------- North east\r\n\r\n\tnorthEastArrowSouthWest: ( targetRect, balloonRect ) => ( {\r\n\t\ttop: getNorthTop( targetRect, balloonRect ),\r\n\t\tleft: targetRect.right - BalloonPanelView.arrowHorizontalOffset,\r\n\t\tname: 'arrow_sw'\r\n\t} ),\r\n\r\n\tnorthEastArrowSouthMiddleWest: ( targetRect, balloonRect ) => ( {\r\n\t\ttop: getNorthTop( targetRect, balloonRect ),\r\n\t\tleft: targetRect.right - ( balloonRect.width * .25 ) - BalloonPanelView.arrowHorizontalOffset,\r\n\t\tname: 'arrow_smw'\r\n\t} ),\r\n\tnorthEastArrowSouth: ( targetRect, balloonRect ) => ( {\r\n\t\ttop: getNorthTop( targetRect, balloonRect ),\r\n\t\tleft: targetRect.right - balloonRect.width / 2,\r\n\t\tname: 'arrow_s'\r\n\t} ),\r\n\r\n\tnorthEastArrowSouthMiddleEast: ( targetRect, balloonRect ) => ( {\r\n\t\ttop: getNorthTop( targetRect, balloonRect ),\r\n\t\tleft: targetRect.right - ( balloonRect.width * .75 ) + BalloonPanelView.arrowHorizontalOffset,\r\n\t\tname: 'arrow_sme'\r\n\t} ),\r\n\r\n\tnorthEastArrowSouthEast: ( targetRect, balloonRect ) => ( {\r\n\t\ttop: getNorthTop( targetRect, balloonRect ),\r\n\t\tleft: targetRect.right - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\r\n\t\tname: 'arrow_se'\r\n\t} ),\r\n\t// ------- South west\r\n\r\n\tsouthWestArrowNorthWest: ( targetRect, balloonRect ) => ( {\r\n\t\ttop: getSouthTop( targetRect, balloonRect ),\r\n\t\tleft: targetRect.left - BalloonPanelView.arrowHorizontalOffset,\r\n\t\tname: 'arrow_nw'\r\n\t} ),\r\n\r\n\tsouthWestArrowNorthMiddleWest: ( targetRect, balloonRect ) => ( {\r\n\t\ttop: getSouthTop( targetRect, balloonRect ),\r\n\t\tleft: targetRect.left - ( balloonRect.width * .25 ) - BalloonPanelView.arrowHorizontalOffset,\r\n\t\tname: 'arrow_nmw'\r\n\t} ),\r\n\r\n\tsouthWestArrowNorth: ( targetRect, balloonRect ) => ( {\r\n\t\ttop: getSouthTop( targetRect, balloonRect ),\r\n\t\tleft: targetRect.left - balloonRect.width / 2,\r\n\t\tname: 'arrow_n'\r\n\t} ),\r\n\r\n\tsouthWestArrowNorthMiddleEast: ( targetRect, balloonRect ) => ( {\r\n\t\ttop: getSouthTop( targetRect, balloonRect ),\r\n\t\tleft: targetRect.left - ( balloonRect.width * .75 ) + BalloonPanelView.arrowHorizontalOffset,\r\n\t\tname: 'arrow_nme'\r\n\t} ),\r\n\r\n\tsouthWestArrowNorthEast: ( targetRect, balloonRect ) => ( {\r\n\t\ttop: getSouthTop( targetRect, balloonRect ),\r\n\t\tleft: targetRect.left - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\r\n\t\tname: 'arrow_ne'\r\n\t} ),\r\n\r\n\t// ------- South\r\n\r\n\tsouthArrowNorthWest: ( targetRect, balloonRect ) => ( {\r\n\t\ttop: getSouthTop( targetRect, balloonRect ),\r\n\t\tleft: targetRect.left + targetRect.width / 2 - BalloonPanelView.arrowHorizontalOffset,\r\n\t\tname: 'arrow_nw'\r\n\t} ),\r\n\tsouthArrowNorthMiddleWest: ( targetRect, balloonRect ) => ( {\r\n\t\ttop: getSouthTop( targetRect, balloonRect ),\r\n\t\tleft: targetRect.left + targetRect.width / 2 - ( balloonRect.width * 0.25 ) - BalloonPanelView.arrowHorizontalOffset,\r\n\t\tname: 'arrow_nmw'\r\n\t} ),\r\n\r\n\tsouthArrowNorth: ( targetRect, balloonRect ) => ( {\r\n\t\ttop: getSouthTop( targetRect, balloonRect ),\r\n\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width / 2,\r\n\t\tname: 'arrow_n'\r\n\t} ),\r\n\r\n\tsouthArrowNorthMiddleEast: ( targetRect, balloonRect ) => ( {\r\n\t\ttop: getSouthTop( targetRect, balloonRect ),\r\n\t\tleft: targetRect.left + targetRect.width / 2 - ( balloonRect.width * 0.75 ) + BalloonPanelView.arrowHorizontalOffset,\r\n\t\tname: 'arrow_nme'\r\n\t} ),\r\n\r\n\tsouthArrowNorthEast: ( targetRect, balloonRect ) => ( {\r\n\t\ttop: getSouthTop( targetRect, balloonRect ),\r\n\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\r\n\t\tname: 'arrow_ne'\r\n\t} ),\r\n\r\n\t// ------- South east\r\n\r\n\tsouthEastArrowNorthWest: ( targetRect, balloonRect ) => ( {\r\n\t\ttop: getSouthTop( targetRect, balloonRect ),\r\n\t\tleft: targetRect.right - BalloonPanelView.arrowHorizontalOffset,\r\n\t\tname: 'arrow_nw'\r\n\t} ),\r\n\r\n\tsouthEastArrowNorthMiddleWest: ( targetRect, balloonRect ) => ( {\r\n\t\ttop: getSouthTop( targetRect, balloonRect ),\r\n\t\tleft: targetRect.right - ( balloonRect.width * .25 ) - BalloonPanelView.arrowHorizontalOffset,\r\n\t\tname: 'arrow_nmw'\r\n\t} ),\r\n\r\n\tsouthEastArrowNorth: ( targetRect, balloonRect ) => ( {\r\n\t\ttop: getSouthTop( targetRect, balloonRect ),\r\n\t\tleft: targetRect.right - balloonRect.width / 2,\r\n\t\tname: 'arrow_n'\r\n\t} ),\r\n\r\n\tsouthEastArrowNorthMiddleEast: ( targetRect, balloonRect ) => ( {\r\n\t\ttop: getSouthTop( targetRect, balloonRect ),\r\n\t\tleft: targetRect.right - ( balloonRect.width * .75 ) + BalloonPanelView.arrowHorizontalOffset,\r\n\t\tname: 'arrow_nme'\r\n\t} ),\r\n\r\n\tsouthEastArrowNorthEast: ( targetRect, balloonRect ) => ( {\r\n\t\ttop: getSouthTop( targetRect, balloonRect ),\r\n\t\tleft: targetRect.right - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\r\n\t\tname: 'arrow_ne'\r\n\t} )\r\n\r\n};\r\n\r\n// Returns the top coordinate for positions starting with `north*`.\r\n//\r\n// @private\r\n// @param {utils/dom/rect~Rect} targetRect A rect of the target.\r\n// @param {utils/dom/rect~Rect} elementRect A rect of the balloon.\r\n// @returns {Number}\r\nfunction getNorthTop( targetRect, balloonRect ) {\r\n\treturn targetRect.top - balloonRect.height - BalloonPanelView.arrowVerticalOffset;\r\n}\r\n\r\n// Returns the top coordinate for positions starting with `south*`.\r\n//\r\n// @private\r\n// @param {utils/dom/rect~Rect} targetRect A rect of the target.\r\n// @param {utils/dom/rect~Rect} elementRect A rect of the balloon.\r\n// @returns {Number}\r\nfunction getSouthTop( targetRect ) {\r\n\treturn targetRect.bottom + BalloonPanelView.arrowVerticalOffset;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\n/**\r\n * @module ui/panel/balloon/contextualballoon\r\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport BalloonPanelView from './balloonpanelview';\nimport View from '../../view';\nimport ButtonView from '../../button/buttonview';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport toUnit from '@ckeditor/ckeditor5-utils/src/dom/tounit';\nimport Rect from '@ckeditor/ckeditor5-utils/src/dom/rect';\nimport prevIcon from '../../../theme/icons/previous-arrow.svg';\nimport nextIcon from '../../../theme/icons/next-arrow.svg';\nimport '../../../theme/components/panel/balloonrotator.css';\nimport '../../../theme/components/panel/fakepanel.css';\nconst toPx = toUnit('px');\n/**\r\n * Provides the common contextual balloon for the editor.\r\n *\r\n * The role of this plugin is to unify the contextual balloons logic, simplify views management and help\r\n * avoid the unnecessary complexity of handling multiple {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView}\r\n * instances in the editor.\r\n *\r\n * This plugin allows for creating single or multiple panel stacks.\r\n *\r\n * Each stack may have multiple views, with the one on the top being visible. When the visible view is removed from the stack,\r\n * the previous view becomes visible.\r\n *\r\n * It might be useful to implement nested navigation in a balloon. For instance, a toolbar view may contain a link button.\r\n * When you click it, a link view (which lets you set the URL) is created and put on top of the toolbar view, so the link panel\r\n * is displayed. When you finish editing the link and close (remove) the link view, the toolbar view is visible again.\r\n *\r\n * However, there are cases when there are multiple independent balloons to be displayed, for instance, if the selection\r\n * is inside two inline comments at the same time. For such cases, you can create two independent panel stacks.\r\n * The contextual balloon plugin will create a navigation bar to let the users switch between these panel stacks using the \"Next\"\r\n * and \"Previous\" buttons.\r\n *\r\n * If there are no views in the current stack, the balloon panel will try to switch to the next stack. If there are no\r\n * panels in any stack, the balloon panel will be hidden.\r\n *\r\n * **Note**: To force the balloon panel to show only one view, even if there are other stacks, use the `singleViewMode=true` option\r\n * when {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon#add adding} a view to a panel.\r\n *\r\n * From the implementation point of view, the contextual ballon plugin is reusing a single\r\n * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView} instance to display multiple contextual balloon\r\n * panels in the editor. It also creates a special {@link module:ui/panel/balloon/contextualballoon~RotatorView rotator view},\r\n * used to manage multiple panel stacks. Rotator view is a child of the balloon panel view and the parent of the specific\r\n * view you want to display. If there is more than one panel stack to be displayed, the rotator view will add a\r\n * navigation bar. If there is only one stack, the rotator view is transparent (it does not add any UI elements).\r\n *\r\n * @extends module:core/plugin~Plugin\r\n */\nexport default class ContextualBalloon extends Plugin {\n    /**\r\n\t * @inheritDoc\r\n\t */\n    static get pluginName() {\n        return 'ContextualBalloon';\n    }\n    /**\r\n\t * @inheritDoc\r\n\t */\n    constructor(editor) {\n        super(editor);\n        /**\r\n\t\t * The {@link module:utils/dom/position~Options#limiter position limiter}\r\n\t\t * for the {@link #view balloon}, used when no `limiter` has been passed into {@link #add}\r\n\t\t * or {@link #updatePosition}.\r\n\t\t *\r\n\t\t * By default, a function that obtains the farthest DOM\r\n\t\t * {@link module:engine/view/rooteditableelement~RootEditableElement}\r\n\t\t * of the {@link module:engine/view/document~Document#selection}.\r\n\t\t *\r\n\t\t * @member {module:utils/dom/position~Options#limiter} #positionLimiter\r\n\t\t */\n        this.positionLimiter = () => {\n            const view = this.editor.editing.view;\n            const viewDocument = view.document;\n            const editableElement = viewDocument.selection.editableElement;\n            if (editableElement) {\n                return view.domConverter.mapViewToDom(editableElement.root);\n            }\n            return null;\n        };\n        /**\r\n\t\t * The currently visible view or `null` when there are no views in any stack.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @observable\r\n\t\t * @member {module:ui/view~View|null} #visibleView\r\n\t\t */\n        this.set('visibleView', null);\n        /**\r\n\t\t * The common balloon panel view.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:ui/panel/balloon/balloonpanelview~BalloonPanelView} #view\r\n\t\t */\n        this.view = new BalloonPanelView(editor.locale);\n        editor.ui.view.body.add(this.view);\n        editor.ui.focusTracker.add(this.view.element);\n        /**\r\n\t\t * The map of views and their stacks.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {Map.<module:ui/view~View,Set>}\r\n\t\t */\n        this._viewToStack = new Map();\n        /**\r\n\t\t * The map of IDs and stacks.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {Map.<String,Set>}\r\n\t\t */\n        this._idToStack = new Map();\n        /**\r\n\t\t * A total number of all stacks in the balloon.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @readonly\r\n\t\t * @observable\r\n\t\t * @member {Number} #_numberOfStacks\r\n\t\t */\n        this.set('_numberOfStacks', 0);\n        /**\r\n\t\t * A flag that controls the single view mode.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @readonly\r\n\t\t * @observable\r\n\t\t * @member {Boolean} #_singleViewMode\r\n\t\t */\n        this.set('_singleViewMode', false);\n        /**\r\n\t\t * Rotator view embedded in the contextual balloon.\r\n\t\t * Displays the currently visible view in the balloon and provides navigation for switching stacks.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {module:ui/panel/balloon/contextualballoon~RotatorView}\r\n\t\t */\n        this._rotatorView = this._createRotatorView();\n        /**\r\n\t\t * Displays fake panels under the balloon panel view when multiple stacks are added to the balloon.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {module:ui/view~View}\r\n\t\t */\n        this._fakePanelsView = this._createFakePanelsView();\n    }\n    /**\r\n\t * Returns `true` when the given view is in one of the stacks. Otherwise returns `false`.\r\n\t *\r\n\t * @param {module:ui/view~View} view\r\n\t * @returns {Boolean}\r\n\t */\n    hasView(view) {\n        return Array.from(this._viewToStack.keys()).includes(view);\n    }\n    /**\r\n\t * Adds a new view to the stack and makes it visible if the current stack is visible\r\n\t * or it is the first view in the balloon.\r\n\t *\r\n\t * @param {Object} data The configuration of the view.\r\n\t * @param {String} [data.stackId='main'] The ID of the stack that the view is added to.\r\n\t * @param {module:ui/view~View} [data.view] The content of the balloon.\r\n\t * @param {module:utils/dom/position~Options} [data.position] Positioning options.\r\n\t * @param {String} [data.balloonClassName] An additional CSS class added to the {@link #view balloon} when visible.\r\n\t * @param {Boolean} [data.withArrow=true] Whether the {@link #view balloon} should be rendered with an arrow.\r\n\t * @param {Boolean} [data.singleViewMode=false] Whether the view should be the only visible view even if other stacks were added.\r\n\t */\n    add(data) {\n        if (this.hasView(data.view)) {\n            /**\r\n\t\t\t * Trying to add configuration of the same view more than once.\r\n\t\t\t *\r\n\t\t\t * @error contextualballoon-add-view-exist\r\n\t\t\t */\n            throw new CKEditorError('contextualballoon-add-view-exist: Cannot add configuration of the same view twice.', [\n                this,\n                data\n            ]);\n        }\n        const stackId = data.stackId || 'main';\n        // If new stack is added, creates it and show view from this stack.\n        if (!this._idToStack.has(stackId)) {\n            this._idToStack.set(stackId, new Map([[\n                    data.view,\n                    data\n                ]]));\n            this._viewToStack.set(data.view, this._idToStack.get(stackId));\n            this._numberOfStacks = this._idToStack.size;\n            if (!this._visibleStack || data.singleViewMode) {\n                this.showStack(stackId);\n            }\n            return;\n        }\n        const stack = this._idToStack.get(stackId);\n        if (data.singleViewMode) {\n            this.showStack(stackId);\n        }\n        // Add new view to the stack.\n        stack.set(data.view, data);\n        this._viewToStack.set(data.view, stack);\n        // And display it if is added to the currently visible stack.\n        if (stack === this._visibleStack) {\n            this._showView(data);\n        }\n    }\n    /**\r\n\t * Removes the given view from the stack. If the removed view was visible,\r\n\t * the view preceding it in the stack will become visible instead.\r\n\t * When there is no view in the stack, the next stack will be displayed.\r\n\t * When there are no more stacks, the balloon will hide.\r\n\t *\r\n\t * @param {module:ui/view~View} view A view to be removed from the balloon.\r\n\t */\n    remove(view) {\n        if (!this.hasView(view)) {\n            /**\r\n\t\t\t * Trying to remove the configuration of the view not defined in the stack.\r\n\t\t\t *\r\n\t\t\t * @error contextualballoon-remove-view-not-exist\r\n\t\t\t */\n            throw new CKEditorError('contextualballoon-remove-view-not-exist: Cannot remove the configuration of a non-existent view.', [\n                this,\n                view\n            ]);\n        }\n        const stack = this._viewToStack.get(view);\n        if (this._singleViewMode && this.visibleView === view) {\n            this._singleViewMode = false;\n        }\n        // When visible view will be removed we need to show a preceding view or next stack\n        // if a view is the only view in the stack.\n        if (this.visibleView === view) {\n            if (stack.size === 1) {\n                if (this._idToStack.size > 1) {\n                    this._showNextStack();\n                } else {\n                    this.view.hide();\n                    this.visibleView = null;\n                    this._rotatorView.hideView();\n                }\n            } else {\n                this._showView(Array.from(stack.values())[stack.size - 2]);\n            }\n        }\n        if (stack.size === 1) {\n            this._idToStack.delete(this._getStackId(stack));\n            this._numberOfStacks = this._idToStack.size;\n        } else {\n            stack.delete(view);\n        }\n        this._viewToStack.delete(view);\n    }\n    /**\r\n\t * Updates the position of the balloon using the position data of the first visible view in the stack.\r\n\t * When new position data is given, the position data of the currently visible view will be updated.\r\n\t *\r\n\t * @param {module:utils/dom/position~Options} [position] position options.\r\n\t */\n    updatePosition(position) {\n        if (position) {\n            this._visibleStack.get(this.visibleView).position = position;\n        }\n        this.view.pin(this._getBalloonPosition());\n        this._fakePanelsView.updatePosition();\n    }\n    /**\r\n\t * Shows the last view from the stack of a given ID.\r\n\t *\r\n\t * @param {String} id\r\n\t */\n    showStack(id) {\n        this.visibleStack = id;\n        const stack = this._idToStack.get(id);\n        if (!stack) {\n            /**\r\n\t\t\t * Trying to show a stack that does not exist.\r\n\t\t\t *\r\n\t\t\t * @error contextualballoon-showstack-stack-not-exist\r\n\t\t\t */\n            throw new CKEditorError('contextualballoon-showstack-stack-not-exist: Cannot show a stack that does not exist.', this);\n        }\n        if (this._visibleStack === stack) {\n            return;\n        }\n        this._showView(Array.from(stack.values()).pop());\n    }\n    /**\r\n\t * Returns the stack of the currently visible view.\r\n\t *\r\n\t * @private\r\n\t * @type {Set}\r\n\t */\n    get _visibleStack() {\n        return this._viewToStack.get(this.visibleView);\n    }\n    /**\r\n\t * Returns the ID of the given stack.\r\n\t *\r\n\t * @private\r\n\t * @param {Set} stack\r\n\t * @returns {String}\r\n\t */\n    _getStackId(stack) {\n        const entry = Array.from(this._idToStack.entries()).find(entry => entry[1] === stack);\n        return entry[0];\n    }\n    /**\r\n\t * Shows the last view from the next stack.\r\n\t *\r\n\t * @private\r\n\t */\n    _showNextStack() {\n        const stacks = Array.from(this._idToStack.values());\n        let nextIndex = stacks.indexOf(this._visibleStack) + 1;\n        if (!stacks[nextIndex]) {\n            nextIndex = 0;\n        }\n        this.showStack(this._getStackId(stacks[nextIndex]));\n    }\n    /**\r\n\t * Shows the last view from the previous stack.\r\n\t *\r\n\t * @private\r\n\t */\n    _showPrevStack() {\n        const stacks = Array.from(this._idToStack.values());\n        let nextIndex = stacks.indexOf(this._visibleStack) - 1;\n        if (!stacks[nextIndex]) {\n            nextIndex = stacks.length - 1;\n        }\n        this.showStack(this._getStackId(stacks[nextIndex]));\n    }\n    /**\r\n\t * Creates a rotator view.\r\n\t *\r\n\t * @private\r\n\t * @returns {module:ui/panel/balloon/contextualballoon~RotatorView}\r\n\t */\n    _createRotatorView() {\n        const view = new RotatorView(this.editor.locale);\n        const t = this.editor.locale.t;\n        this.view.content.add(view);\n        // Hide navigation when there is only a one stack & not in single view mode.\n        view.bind('isNavigationVisible').to(this, '_numberOfStacks', this, '_singleViewMode', (value, isSingleViewMode) => {\n            return !isSingleViewMode && value > 1;\n        });\n        // Update balloon position after toggling navigation.\n        view.on('change:isNavigationVisible', () => this.updatePosition(), { priority: 'low' });\n        // Update stacks counter value.\n        view.bind('counter').to(this, 'visibleView', this, '_numberOfStacks', (visibleView, numberOfStacks) => {\n            if (numberOfStacks < 2) {\n                return '';\n            }\n            const current = Array.from(this._idToStack.values()).indexOf(this._visibleStack) + 1;\n            return t('s', [\n                current,\n                numberOfStacks\n            ]);\n        });\n        view.buttonNextView.on('execute', () => {\n            // When current view has a focus then move focus to the editable before removing it,\n            // otherwise editor will lost focus.\n            if (view.focusTracker.isFocused) {\n                this.editor.editing.view.focus();\n            }\n            this._showNextStack();\n        });\n        view.buttonPrevView.on('execute', () => {\n            // When current view has a focus then move focus to the editable before removing it,\n            // otherwise editor will lost focus.\n            if (view.focusTracker.isFocused) {\n                this.editor.editing.view.focus();\n            }\n            this._showPrevStack();\n        });\n        return view;\n    }\n    /**\r\n\t * @returns {module:ui/view~View}\r\n\t */\n    _createFakePanelsView() {\n        const view = new FakePanelsView(this.editor.locale, this.view);\n        view.bind('numberOfPanels').to(this, '_numberOfStacks', this, '_singleViewMode', (number, isSingleViewMode) => {\n            const showPanels = !isSingleViewMode && number >= 2;\n            return showPanels ? Math.min(number - 1, 2) : 0;\n        });\n        view.listenTo(this.view, 'change:top', () => view.updatePosition());\n        view.listenTo(this.view, 'change:left', () => view.updatePosition());\n        this.editor.ui.view.body.add(view);\n        return view;\n    }\n    /**\r\n\t * Sets the view as the content of the balloon and attaches the balloon using position\r\n\t * options of the first view.\r\n\t *\r\n\t * @private\r\n\t * @param {Object} data Configuration.\r\n\t * @param {module:ui/view~View} [data.view] The view to show in the balloon.\r\n\t * @param {String} [data.balloonClassName=''] Additional class name which will be added to the {@link #view balloon}.\r\n\t * @param {Boolean} [data.withArrow=true] Whether the {@link #view balloon} should be rendered with an arrow.\r\n\t */\n    _showView({view, balloonClassName = '', withArrow = true, singleViewMode = false}) {\n        this.view.class = balloonClassName;\n        this.view.withArrow = withArrow;\n        this._rotatorView.showView(view);\n        this.visibleView = view;\n        this.view.pin(this._getBalloonPosition());\n        this._fakePanelsView.updatePosition();\n        if (singleViewMode) {\n            this._singleViewMode = true;\n        }\n    }\n    /**\r\n\t * Returns position options of the last view in the stack.\r\n\t * This keeps the balloon in the same position when the view is changed.\r\n\t *\r\n\t * @private\r\n\t * @returns {module:utils/dom/position~Options}\r\n\t */\n    _getBalloonPosition() {\n        let position = Array.from(this._visibleStack.values()).pop().position;\n        // Use the default limiter if none has been specified.\n        if (position && !position.limiter) {\n            // Don't modify the original options object.\n            position = Object.assign({}, position, { limiter: this.positionLimiter });\n        }\n        return position;\n    }\n}\n/**\r\n * Rotator view is a helper class for the {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon ContextualBalloon}.\r\n * It is used for displaying the last view from the current stack and providing navigation buttons for switching stacks.\r\n * See the {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon ContextualBalloon} documentation to learn more.\r\n *\r\n * @extends module:ui/view~View\r\n */\nclass RotatorView extends View {\n    /**\r\n\t * @inheritDoc\r\n\t */\n    constructor(locale) {\n        super(locale);\n        const t = locale.t;\n        const bind = this.bindTemplate;\n        /**\r\n\t\t * Defines whether navigation is visible or not.\r\n\t\t *\r\n\t\t * @member {Boolean} #isNavigationVisible\r\n\t\t */\n        this.set('isNavigationVisible', true);\n        /**\r\n\t\t * Used for checking if a view is focused or not.\r\n\t\t *\r\n\t\t * @type {module:utils/focustracker~FocusTracker}\r\n\t\t */\n        this.focusTracker = new FocusTracker();\n        /**\r\n\t\t * Navigation button for switching the stack to the previous one.\r\n\t\t *\r\n\t\t * @type {module:ui/button/buttonview~ButtonView}\r\n\t\t */\n        this.buttonPrevView = this._createButtonView(t('t'), prevIcon);\n        /**\r\n\t\t * Navigation button for switching the stack to the next one.\r\n\t\t *\r\n\t\t * @type {module:ui/button/buttonview~ButtonView}\r\n\t\t */\n        this.buttonNextView = this._createButtonView(t('u'), nextIcon);\n        /**\r\n\t\t * A collection of the child views that creates the rotator content.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @type {module:ui/viewcollection~ViewCollection}\r\n\t\t */\n        this.content = this.createCollection();\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-balloon-rotator'\n                ],\n                'z-index': '-1'\n            },\n            children: [\n                {\n                    tag: 'div',\n                    attributes: {\n                        class: [\n                            'ck-balloon-rotator__navigation',\n                            bind.to('isNavigationVisible', value => value ? '' : 'ck-hidden')\n                        ]\n                    },\n                    children: [\n                        this.buttonPrevView,\n                        {\n                            tag: 'span',\n                            attributes: { class: ['ck-balloon-rotator__counter'] },\n                            children: [{ text: bind.to('counter') }]\n                        },\n                        this.buttonNextView\n                    ]\n                },\n                {\n                    tag: 'div',\n                    attributes: { class: 'ck-balloon-rotator__content' },\n                    children: this.content\n                }\n            ]\n        });\n    }\n    /**\r\n\t * @inheritDoc\r\n\t */\n    render() {\n        super.render();\n        this.focusTracker.add(this.element);\n    }\n    /**\r\n\t * Shows a given view.\r\n\t *\r\n\t * @param {module:ui/view~View} view The view to show.\r\n\t */\n    showView(view) {\n        this.hideView();\n        this.content.add(view);\n    }\n    /**\r\n\t * Hides the currently displayed view.\r\n\t */\n    hideView() {\n        this.content.clear();\n    }\n    /**\r\n\t * Creates a navigation button view.\r\n\t *\r\n\t * @private\r\n\t * @param {String} label The button label.\r\n\t * @param {String} icon The button icon.\r\n\t * @returns {module:ui/button/buttonview~ButtonView}\r\n\t */\n    _createButtonView(label, icon) {\n        const view = new ButtonView(this.locale);\n        view.set({\n            label,\n            icon,\n            tooltip: true\n        });\n        return view;\n    }\n}\n// Displays additional layers under the balloon when multiple stacks are added to the balloon.\n//\n// @private\n// @extends module:ui/view~View\nclass FakePanelsView extends View {\n    // @inheritDoc\n    constructor(locale, balloonPanelView) {\n        super(locale);\n        const bind = this.bindTemplate;\n        // Fake panels top offset.\n        //\n        // @observable\n        // @member {Number} #top\n        this.set('top', 0);\n        // Fake panels left offset.\n        //\n        // @observable\n        // @member {Number} #left\n        this.set('left', 0);\n        // Fake panels height.\n        //\n        // @observable\n        // @member {Number} #height\n        this.set('height', 0);\n        // Fake panels width.\n        //\n        // @observable\n        // @member {Number} #width\n        this.set('width', 0);\n        // Number of rendered fake panels.\n        //\n        // @observable\n        // @member {Number} #numberOfPanels\n        this.set('numberOfPanels', 0);\n        // Collection of the child views which creates fake panel content.\n        //\n        // @readonly\n        // @type {module:ui/viewcollection~ViewCollection}\n        this.content = this.createCollection();\n        // Context.\n        //\n        // @private\n        // @type {module:ui/panel/balloon/balloonpanelview~BalloonPanelView}\n        this._balloonPanelView = balloonPanelView;\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck-fake-panel',\n                    bind.to('numberOfPanels', number => number ? '' : 'ck-hidden')\n                ],\n                style: {\n                    top: bind.to('top', toPx),\n                    left: bind.to('left', toPx),\n                    width: bind.to('width', toPx),\n                    height: bind.to('height', toPx)\n                }\n            },\n            children: this.content\n        });\n        this.on('change:numberOfPanels', (evt, name, next, prev) => {\n            if (next > prev) {\n                this._addPanels(next - prev);\n            } else {\n                this._removePanels(prev - next);\n            }\n            this.updatePosition();\n        });\n    }\n    // @private\n    // @param {Number} number\n    _addPanels(number) {\n        while (number--) {\n            const view = new View();\n            view.setTemplate({ tag: 'div' });\n            this.content.add(view);\n            this.registerChild(view);\n        }\n    }\n    // @private\n    // @param {Number} number\n    _removePanels(number) {\n        while (number--) {\n            const view = this.content.last;\n            this.content.remove(view);\n            this.deregisterChild(view);\n            view.destroy();\n        }\n    }\n    // Updates coordinates of fake panels.\n    updatePosition() {\n        if (this.numberOfPanels) {\n            const {top, left} = this._balloonPanelView;\n            const {width, height} = new Rect(this._balloonPanelView.element);\n            Object.assign(this, {\n                top,\n                left,\n                width,\n                height\n            });\n        }\n    }\n}","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module ui/template\r\n */\r\n\r\n/* global document */\r\n\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\r\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\r\nimport View from './view';\r\nimport ViewCollection from './viewcollection';\r\nimport isNode from '@ckeditor/ckeditor5-utils/src/dom/isnode';\r\nimport { isObject, cloneDeepWith } from 'lodash-es';\r\n\r\nconst xhtmlNs = 'http://www.w3.org/1999/xhtml';\r\n\r\n/**\r\n * A basic Template class. It renders a DOM HTML element or text from a\r\n * {@link module:ui/template~TemplateDefinition definition} and supports element attributes, children,\r\n * bindings to {@link module:utils/observablemixin~Observable observables} and DOM event propagation.\r\n *\r\n * A simple template can look like this:\r\n *\r\n *\t\tconst bind = Template.bind( observable, emitter );\r\n *\r\n *\t\tnew Template( {\r\n *\t\t\ttag: 'p',\r\n *\t\t\tattributes: {\r\n *\t\t\t\tclass: 'foo',\r\n *\t\t\t\tstyle: {\r\n *\t\t\t\t\tbackgroundColor: 'yellow'\r\n *\t\t\t\t}\r\n *\t\t\t},\r\n *\t\t\ton: {\r\n *\t\t\t\tclick: bind.to( 'clicked' )\r\n *\t\t\t},\r\n *\t\t\tchildren: [\r\n *\t\t\t\t'A paragraph.'\r\n *\t\t\t]\r\n *\t\t} ).render();\r\n *\r\n * and it will render the following HTML element:\r\n *\r\n *\t\t<p class=\"foo\" style=\"background-color: yellow;\">A paragraph.</p>\r\n *\r\n * Additionally, the `observable` will always fire `clicked` upon clicking `<p>` in the DOM.\r\n *\r\n * See {@link module:ui/template~TemplateDefinition} to know more about templates and complex\r\n * template definitions.\r\n *\r\n* @mixes module:utils/emittermixin~EmitterMixin\r\n */\r\nexport default class Template {\r\n\t/**\r\n\t * Creates an instance of the {@link ~Template} class.\r\n\t *\r\n\t * @param {module:ui/template~TemplateDefinition} def The definition of the template.\r\n\t */\r\n\tconstructor( def ) {\r\n\t\tObject.assign( this, normalize( clone( def ) ) );\r\n\r\n\t\t/**\r\n\t\t * Indicates whether this particular Template instance has been\r\n\t\t * {@link #render rendered}.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @protected\r\n\t\t * @member {Boolean}\r\n\t\t */\r\n\t\tthis._isRendered = false;\r\n\r\n\t\t/**\r\n\t\t * The tag (`tagName`) of this template, e.g. `div`. It also indicates that the template\r\n\t\t * renders to an HTML element.\r\n\t\t *\r\n\t\t * @member {String} #tag\r\n\t\t */\r\n\r\n\t\t/**\r\n\t\t * The text of the template. It also indicates that the template renders to a DOM text node.\r\n\t\t *\r\n\t\t * @member {Array.<String|module:ui/template~TemplateValueSchema>} #text\r\n\t\t */\r\n\r\n\t\t/**\r\n\t\t * The attributes of the template, e.g. `{ id: [ 'ck-id' ] }`, corresponding with\r\n\t\t * the attributes of an HTML element.\r\n\t\t *\r\n\t\t * **Note**: This property only makes sense when {@link #tag} is defined.\r\n\t\t *\r\n\t\t * @member {Object} #attributes\r\n\t\t */\r\n\r\n\t\t/**\r\n\t\t * The children of the template. They can be either:\r\n\t\t * * independent instances of {@link ~Template} (sub–templates),\r\n\t\t * * native DOM Nodes.\r\n\t\t *\r\n\t\t * **Note**: This property only makes sense when {@link #tag} is defined.\r\n\t\t *\r\n\t\t * @member {Array.<module:ui/template~Template|Node>} #children\r\n\t\t */\r\n\r\n\t\t/**\r\n\t\t * The DOM event listeners of the template.\r\n\t\t *\r\n\t\t * @member {Object} #eventListeners\r\n\t\t */\r\n\r\n\t\t/**\r\n\t\t * The data used by the {@link #revert} method to restore a node to its original state.\r\n\t\t *\r\n\t\t * See: {@link #apply}.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @protected\r\n\t\t * @member {module:ui/template~RenderData}\r\n\t\t */\r\n\t\tthis._revertData = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders a DOM Node (an HTML element or text) out of the template.\r\n\t *\r\n\t *\t\tconst domNode = new Template( { ... } ).render();\r\n\t *\r\n\t * See: {@link #apply}.\r\n\t *\r\n\t * @returns {HTMLElement|Text}\r\n\t */\r\n\trender() {\r\n\t\tconst node = this._renderNode( {\r\n\t\t\tintoFragment: true\r\n\t\t} );\r\n\r\n\t\tthis._isRendered = true;\r\n\r\n\t\treturn node;\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the template to an existing DOM Node, either HTML element or text.\r\n\t *\r\n\t * **Note:** No new DOM nodes will be created. Applying extends:\r\n\t *\r\n\t * {@link module:ui/template~TemplateDefinition attributes},\r\n\t * {@link module:ui/template~TemplateDefinition event listeners}, and\r\n\t * `textContent` of {@link module:ui/template~TemplateDefinition children} only.\r\n\t *\r\n\t * **Note:** Existing `class` and `style` attributes are extended when a template\r\n\t * is applied to an HTML element, while other attributes and `textContent` are overridden.\r\n\t *\r\n\t * **Note:** The process of applying a template can be easily reverted using the\r\n\t * {@link module:ui/template~Template#revert} method.\r\n\t *\r\n\t *\t\tconst element = document.createElement( 'div' );\r\n\t *\t\tconst observable = new Model( { divClass: 'my-div' } );\r\n\t *\t\tconst emitter = Object.create( EmitterMixin );\r\n\t *\t\tconst bind = Template.bind( observable, emitter );\r\n\t *\r\n\t *\t\tnew Template( {\r\n\t *\t\t\tattributes: {\r\n\t *\t\t\t\tid: 'first-div',\r\n\t *\t\t\t\tclass: bind.to( 'divClass' )\r\n\t *\t\t\t},\r\n\t *\t\t\ton: {\r\n\t *\t\t\t\tclick: bind( 'elementClicked' ) // Will be fired by the observable.\r\n\t *\t\t\t},\r\n\t *\t\t\tchildren: [\r\n\t *\t\t\t\t'Div text.'\r\n\t *\t\t\t]\r\n\t *\t\t} ).apply( element );\r\n\t *\r\n\t *\t\tconsole.log( element.outerHTML ); // -> '<div id=\"first-div\" class=\"my-div\"></div>'\r\n\t *\r\n\t * @see module:ui/template~Template#render\r\n\t * @see module:ui/template~Template#revert\r\n\t * @param {Node} node Root node for the template to apply.\r\n\t */\r\n\tapply( node ) {\r\n\t\tthis._revertData = getEmptyRevertData();\r\n\r\n\t\tthis._renderNode( {\r\n\t\t\tnode,\r\n\t\t\tisApplying: true,\r\n\t\t\trevertData: this._revertData\r\n\t\t} );\r\n\r\n\t\treturn node;\r\n\t}\r\n\r\n\t/**\r\n\t * Reverts a template {@link module:ui/template~Template#apply applied} to a DOM node.\r\n\t *\r\n\t * @param {Node} node The root node for the template to revert. In most of the cases, it is the\r\n\t * same node used by {@link module:ui/template~Template#apply}.\r\n\t */\r\n\trevert( node ) {\r\n\t\tif ( !this._revertData ) {\r\n\t\t\t/**\r\n\t\t\t * Attempting to revert a template which has not been applied yet.\r\n\t\t\t *\r\n\t\t\t * @error ui-template-revert-not-applied\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'ui-template-revert-not-applied: Attempting to revert a template which has not been applied yet.',\r\n\t\t\t\t[ this, node ]\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tthis._revertTemplateFromNode( node, this._revertData );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an iterator which traverses the template in search of {@link module:ui/view~View}\r\n\t * instances and returns them one by one.\r\n\t *\r\n\t *\t\tconst viewFoo = new View();\r\n\t *\t\tconst viewBar = new View();\r\n\t *\t\tconst viewBaz = new View();\r\n\t *\t\tconst template = new Template( {\r\n\t *\t\t\ttag: 'div',\r\n\t *\t\t\tchildren: [\r\n\t *\t\t\t\tviewFoo,\r\n\t *\t\t\t\t{\r\n\t *\t\t\t\t\ttag: 'div',\r\n\t *\t\t\t\t\tchildren: [\r\n\t *\t\t\t\t\t\tviewBar\r\n\t *\t\t\t\t\t]\r\n\t *\t\t\t\t},\r\n\t *\t\t\t\tviewBaz\r\n\t *\t\t\t]\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\t// Logs: viewFoo, viewBar, viewBaz\r\n\t *\t\tfor ( const view of template.getViews() ) {\r\n\t *\t\t\tconsole.log( view );\r\n\t *\t\t}\r\n\t *\r\n\t * @returns {Iterable.<module:ui/view~View>}\r\n\t */\r\n\t* getViews() {\r\n\t\tfunction* search( def ) {\r\n\t\t\tif ( def.children ) {\r\n\t\t\t\tfor ( const child of def.children ) {\r\n\t\t\t\t\tif ( isView( child ) ) {\r\n\t\t\t\t\t\tyield child;\r\n\t\t\t\t\t} else if ( isTemplate( child ) ) {\r\n\t\t\t\t\t\tyield* search( child );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tyield* search( this );\r\n\t}\r\n\r\n\t/**\r\n\t * An entry point to the interface which binds DOM nodes to\r\n\t * {@link module:utils/observablemixin~Observable observables}.\r\n\t * There are two types of bindings:\r\n\t *\r\n\t * * HTML element attributes or text `textContent` synchronized with attributes of an\r\n\t * {@link module:utils/observablemixin~Observable}. Learn more about {@link module:ui/template~BindChain#to}\r\n\t * and {@link module:ui/template~BindChain#if}.\r\n\t *\r\n\t *\t\tconst bind = Template.bind( observable, emitter );\r\n\t *\r\n\t *\t\tnew Template( {\r\n\t *\t\t\tattributes: {\r\n\t *\t\t\t\t// Binds the element \"class\" attribute to observable#classAttribute.\r\n\t *\t\t\t\tclass: bind.to( 'classAttribute' )\r\n\t *\t\t\t}\r\n\t *\t\t} ).render();\r\n\t *\r\n\t * * DOM events fired on HTML element propagated through\r\n\t * {@link module:utils/observablemixin~Observable}. Learn more about {@link module:ui/template~BindChain#to}.\r\n\t *\r\n\t *\t\tconst bind = Template.bind( observable, emitter );\r\n\t *\r\n\t *\t\tnew Template( {\r\n\t *\t\t\ton: {\r\n\t *\t\t\t\t// Will be fired by the observable.\r\n\t *\t\t\t\tclick: bind( 'elementClicked' )\r\n\t *\t\t\t}\r\n\t *\t\t} ).render();\r\n\t *\r\n\t * Also see {@link module:ui/view~View#bindTemplate}.\r\n\t *\r\n\t * @param {module:utils/observablemixin~Observable} observable An observable which provides boundable attributes.\r\n\t * @param {module:utils/emittermixin~Emitter} emitter An emitter that listens to observable attribute\r\n\t * changes or DOM Events (depending on the kind of the binding). Usually, a {@link module:ui/view~View} instance.\r\n\t * @returns {module:ui/template~BindChain}\r\n\t */\r\n\tstatic bind( observable, emitter ) {\r\n\t\treturn {\r\n\t\t\tto( eventNameOrFunctionOrAttribute, callback ) {\r\n\t\t\t\treturn new TemplateToBinding( {\r\n\t\t\t\t\teventNameOrFunction: eventNameOrFunctionOrAttribute,\r\n\t\t\t\t\tattribute: eventNameOrFunctionOrAttribute,\r\n\t\t\t\t\tobservable, emitter, callback\r\n\t\t\t\t} );\r\n\t\t\t},\r\n\r\n\t\t\tif( attribute, valueIfTrue, callback ) {\r\n\t\t\t\treturn new TemplateIfBinding( {\r\n\t\t\t\t\tobservable, emitter, attribute, valueIfTrue, callback\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Extends an existing {@link module:ui/template~Template} instance with some additional content\r\n\t * from another {@link module:ui/template~TemplateDefinition}.\r\n\t *\r\n\t *\t\tconst bind = Template.bind( observable, emitter );\r\n\t *\r\n\t *\t\tconst template = new Template( {\r\n\t *\t\t\ttag: 'p',\r\n\t *\t\t\tattributes: {\r\n\t *\t\t\t\tclass: 'a',\r\n\t *\t\t\t\tdata-x: bind.to( 'foo' )\r\n\t *\t\t\t},\r\n\t *\t\t\tchildren: [\r\n\t *\t\t\t\t{\r\n\t *\t\t\t\t\ttag: 'span',\r\n\t *\t\t\t\t\tattributes: {\r\n\t *\t\t\t\t\t\tclass: 'b'\r\n\t *\t\t\t\t\t},\r\n\t *\t\t\t\t\tchildren: [\r\n\t *\t\t\t\t\t\t'Span'\r\n\t *\t\t\t\t\t]\r\n\t *\t\t\t\t}\r\n\t *\t\t\t]\r\n\t *\t\t } );\r\n\t *\r\n\t *\t\t// Instance-level extension.\r\n\t *\t\tTemplate.extend( template, {\r\n\t *\t\t\tattributes: {\r\n\t *\t\t\t\tclass: 'b',\r\n\t *\t\t\t\tdata-x: bind.to( 'bar' )\r\n\t *\t\t\t},\r\n\t *\t\t\tchildren: [\r\n\t *\t\t\t\t{\r\n\t *\t\t\t\t\tattributes: {\r\n\t *\t\t\t\t\t\tclass: 'c'\r\n\t *\t\t\t\t\t}\r\n\t *\t\t\t\t}\r\n\t *\t\t\t]\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\t// Child extension.\r\n\t *\t\tTemplate.extend( template.children[ 0 ], {\r\n\t *\t\t\tattributes: {\r\n\t *\t\t\t\tclass: 'd'\r\n\t *\t\t\t}\r\n\t *\t\t} );\r\n\t *\r\n\t * the `outerHTML` of `template.render()` is:\r\n\t *\r\n\t *\t\t<p class=\"a b\" data-x=\"{ observable.foo } { observable.bar }\">\r\n\t *\t\t\t<span class=\"b c d\">Span</span>\r\n\t *\t\t</p>\r\n\t *\r\n\t * @param {module:ui/template~Template} template An existing template instance to be extended.\r\n\t * @param {module:ui/template~TemplateDefinition} def Additional definition to be applied to a template.\r\n\t */\r\n\tstatic extend( template, def ) {\r\n\t\tif ( template._isRendered ) {\r\n\t\t\t/**\r\n\t\t\t * Extending a template after rendering may not work as expected. To make sure\r\n\t\t\t * the {@link module:ui/template~Template.extend extending} works for an element,\r\n\t\t\t * make sure it happens before {@link #render} is called.\r\n\t\t\t *\r\n\t\t\t * @error template-extend-render\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'template-extend-render: Attempting to extend a template which has already been rendered.',\r\n\t\t\t\t[ this, template ]\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\textendTemplate( template, normalize( clone( def ) ) );\r\n\t}\r\n\r\n\t/**\r\n\t * Renders a DOM Node (either an HTML element or text) out of the template.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:ui/template~RenderData} data Rendering data.\r\n\t */\r\n\t_renderNode( data ) {\r\n\t\tlet isInvalid;\r\n\r\n\t\tif ( data.node ) {\r\n\t\t\t// When applying, a definition cannot have \"tag\" and \"text\" at the same time.\r\n\t\t\tisInvalid = this.tag && this.text;\r\n\t\t} else {\r\n\t\t\t// When rendering, a definition must have either \"tag\" or \"text\": XOR( this.tag, this.text ).\r\n\t\t\tisInvalid = this.tag ? this.text : !this.text;\r\n\t\t}\r\n\r\n\t\tif ( isInvalid ) {\r\n\t\t\t/**\r\n\t\t\t * Node definition cannot have the \"tag\" and \"text\" properties at the same time.\r\n\t\t\t * Node definition must have either \"tag\" or \"text\" when rendering a new Node.\r\n\t\t\t *\r\n\t\t\t * @error ui-template-wrong-syntax\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'ui-template-wrong-syntax: Node definition must have either \"tag\" or \"text\" when rendering a new Node.',\r\n\t\t\t\tthis\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif ( this.text ) {\r\n\t\t\treturn this._renderText( data );\r\n\t\t} else {\r\n\t\t\treturn this._renderElement( data );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Renders an HTML element out of the template.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:ui/template~RenderData} data Rendering data.\r\n\t */\r\n\t_renderElement( data ) {\r\n\t\tlet node = data.node;\r\n\r\n\t\tif ( !node ) {\r\n\t\t\tnode = data.node = document.createElementNS( this.ns || xhtmlNs, this.tag );\r\n\t\t}\r\n\r\n\t\tthis._renderAttributes( data );\r\n\t\tthis._renderElementChildren( data );\r\n\t\tthis._setUpListeners( data );\r\n\r\n\t\treturn node;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders a text node out of {@link module:ui/template~Template#text}.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:ui/template~RenderData} data Rendering data.\r\n\t */\r\n\t_renderText( data ) {\r\n\t\tlet node = data.node;\r\n\r\n\t\t// Save the original textContent to revert it in #revert().\r\n\t\tif ( node ) {\r\n\t\t\tdata.revertData.text = node.textContent;\r\n\t\t} else {\r\n\t\t\tnode = data.node = document.createTextNode( '' );\r\n\t\t}\r\n\r\n\t\t// Check if this Text Node is bound to Observable. Cases:\r\n\t\t//\r\n\t\t//\t\ttext: [ Template.bind( ... ).to( ... ) ]\r\n\t\t//\r\n\t\t//\t\ttext: [\r\n\t\t//\t\t\t'foo',\r\n\t\t//\t\t\tTemplate.bind( ... ).to( ... ),\r\n\t\t//\t\t\t...\r\n\t\t//\t\t]\r\n\t\t//\r\n\t\tif ( hasTemplateBinding( this.text ) ) {\r\n\t\t\tthis._bindToObservable( {\r\n\t\t\t\tschema: this.text,\r\n\t\t\t\tupdater: getTextUpdater( node ),\r\n\t\t\t\tdata\r\n\t\t\t} );\r\n\t\t}\r\n\t\t// Simply set text. Cases:\r\n\t\t//\r\n\t\t//\t\ttext: [ 'all', 'are', 'static' ]\r\n\t\t//\r\n\t\t//\t\ttext: [ 'foo' ]\r\n\t\t//\r\n\t\telse {\r\n\t\t\tnode.textContent = this.text.join( '' );\r\n\t\t}\r\n\r\n\t\treturn node;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders HTML element attributes out of {@link module:ui/template~Template#attributes}.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:ui/template~RenderData} data Rendering data.\r\n\t */\r\n\t_renderAttributes( data ) {\r\n\t\tlet attrName, attrValue, domAttrValue, attrNs;\r\n\r\n\t\tif ( !this.attributes ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst node = data.node;\r\n\t\tconst revertData = data.revertData;\r\n\r\n\t\tfor ( attrName in this.attributes ) {\r\n\t\t\t// Current attribute value in DOM.\r\n\t\t\tdomAttrValue = node.getAttribute( attrName );\r\n\r\n\t\t\t// The value to be set.\r\n\t\t\tattrValue = this.attributes[ attrName ];\r\n\r\n\t\t\t// Save revert data.\r\n\t\t\tif ( revertData ) {\r\n\t\t\t\trevertData.attributes[ attrName ] = domAttrValue;\r\n\t\t\t}\r\n\r\n\t\t\t// Detect custom namespace:\r\n\t\t\t//\r\n\t\t\t//\t\tclass: {\r\n\t\t\t//\t\t\tns: 'abc',\r\n\t\t\t//\t\t\tvalue: Template.bind( ... ).to( ... )\r\n\t\t\t//\t\t}\r\n\t\t\t//\r\n\t\t\tattrNs = ( isObject( attrValue[ 0 ] ) && attrValue[ 0 ].ns ) ? attrValue[ 0 ].ns : null;\r\n\r\n\t\t\t// Activate binding if one is found. Cases:\r\n\t\t\t//\r\n\t\t\t//\t\tclass: [\r\n\t\t\t//\t\t\tTemplate.bind( ... ).to( ... )\r\n\t\t\t//\t\t]\r\n\t\t\t//\r\n\t\t\t//\t\tclass: [\r\n\t\t\t//\t\t\t'bar',\r\n\t\t\t//\t\t\tTemplate.bind( ... ).to( ... ),\r\n\t\t\t//\t\t\t'baz'\r\n\t\t\t//\t\t]\r\n\t\t\t//\r\n\t\t\t//\t\tclass: {\r\n\t\t\t//\t\t\tns: 'abc',\r\n\t\t\t//\t\t\tvalue: Template.bind( ... ).to( ... )\r\n\t\t\t//\t\t}\r\n\t\t\t//\r\n\t\t\tif ( hasTemplateBinding( attrValue ) ) {\r\n\t\t\t\t// Normalize attributes with additional data like namespace:\r\n\t\t\t\t//\r\n\t\t\t\t//\t\tclass: {\r\n\t\t\t\t//\t\t\tns: 'abc',\r\n\t\t\t\t//\t\t\tvalue: [ ... ]\r\n\t\t\t\t//\t\t}\r\n\t\t\t\t//\r\n\t\t\t\tconst valueToBind = attrNs ? attrValue[ 0 ].value : attrValue;\r\n\r\n\t\t\t\t// Extend the original value of attributes like \"style\" and \"class\",\r\n\t\t\t\t// don't override them.\r\n\t\t\t\tif ( revertData && shouldExtend( attrName ) ) {\r\n\t\t\t\t\tvalueToBind.unshift( domAttrValue );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._bindToObservable( {\r\n\t\t\t\t\tschema: valueToBind,\r\n\t\t\t\t\tupdater: getAttributeUpdater( node, attrName, attrNs ),\r\n\t\t\t\t\tdata\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\t// Style attribute could be an Object so it needs to be parsed in a specific way.\r\n\t\t\t//\r\n\t\t\t//\t\tstyle: {\r\n\t\t\t//\t\t\twidth: '100px',\r\n\t\t\t//\t\t\theight: Template.bind( ... ).to( ... )\r\n\t\t\t//\t\t}\r\n\t\t\t//\r\n\t\t\telse if ( attrName == 'style' && typeof attrValue[ 0 ] !== 'string' ) {\r\n\t\t\t\tthis._renderStyleAttribute( attrValue[ 0 ], data );\r\n\t\t\t}\r\n\r\n\t\t\t// Otherwise simply set the static attribute:\r\n\t\t\t//\r\n\t\t\t//\t\tclass: [ 'foo' ]\r\n\t\t\t//\r\n\t\t\t//\t\tclass: [ 'all', 'are', 'static' ]\r\n\t\t\t//\r\n\t\t\t//\t\tclass: [\r\n\t\t\t//\t\t\t{\r\n\t\t\t//\t\t\t\tns: 'abc',\r\n\t\t\t//\t\t\t\tvalue: [ 'foo' ]\r\n\t\t\t//\t\t\t}\r\n\t\t\t//\t\t]\r\n\t\t\t//\r\n\t\t\telse {\r\n\t\t\t\t// Extend the original value of attributes like \"style\" and \"class\",\r\n\t\t\t\t// don't override them.\r\n\t\t\t\tif ( revertData && domAttrValue && shouldExtend( attrName ) ) {\r\n\t\t\t\t\tattrValue.unshift( domAttrValue );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tattrValue = attrValue\r\n\t\t\t\t\t// Retrieve \"values\" from:\r\n\t\t\t\t\t//\r\n\t\t\t\t\t//\t\tclass: [\r\n\t\t\t\t\t//\t\t\t{\r\n\t\t\t\t\t//\t\t\t\tns: 'abc',\r\n\t\t\t\t\t//\t\t\t\tvalue: [ ... ]\r\n\t\t\t\t\t//\t\t\t}\r\n\t\t\t\t\t//\t\t]\r\n\t\t\t\t\t//\r\n\t\t\t\t\t.map( val => val ? ( val.value || val ) : val )\r\n\t\t\t\t\t// Flatten the array.\r\n\t\t\t\t\t.reduce( ( prev, next ) => prev.concat( next ), [] )\r\n\t\t\t\t\t// Convert into string.\r\n\t\t\t\t\t.reduce( arrayValueReducer, '' );\r\n\r\n\t\t\t\tif ( !isFalsy( attrValue ) ) {\r\n\t\t\t\t\tnode.setAttributeNS( attrNs, attrName, attrValue );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the `style` attribute of an HTML element based on\r\n\t * {@link module:ui/template~Template#attributes}.\r\n\t *\r\n\t * A style attribute is an {Object} with static values:\r\n\t *\r\n\t *\t\tattributes: {\r\n\t *\t\t\tstyle: {\r\n\t *\t\t\t\tcolor: 'red'\r\n\t *\t\t\t}\r\n\t *\t\t}\r\n\t *\r\n\t * or values bound to {@link module:ui/model~Model} properties:\r\n\t *\r\n\t *\t\tattributes: {\r\n\t *\t\t\tstyle: {\r\n\t *\t\t\t\tcolor: bind.to( ... )\r\n\t *\t\t\t}\r\n\t *\t\t}\r\n\t *\r\n\t * Note: The `style` attribute is rendered without setting the namespace. It does not seem to be\r\n\t * needed.\r\n\t *\r\n\t * @private\r\n\t * @param {Object} styles Styles located in `attributes.style` of {@link module:ui/template~TemplateDefinition}.\r\n\t * @param {module:ui/template~RenderData} data Rendering data.\r\n\t */\r\n\t_renderStyleAttribute( styles, data ) {\r\n\t\tconst node = data.node;\r\n\r\n\t\tfor ( const styleName in styles ) {\r\n\t\t\tconst styleValue = styles[ styleName ];\r\n\r\n\t\t\t// Cases:\r\n\t\t\t//\r\n\t\t\t//\t\tstyle: {\r\n\t\t\t//\t\t\tcolor: bind.to( 'attribute' )\r\n\t\t\t//\t\t}\r\n\t\t\t//\r\n\t\t\tif ( hasTemplateBinding( styleValue ) ) {\r\n\t\t\t\tthis._bindToObservable( {\r\n\t\t\t\t\tschema: [ styleValue ],\r\n\t\t\t\t\tupdater: getStyleUpdater( node, styleName ),\r\n\t\t\t\t\tdata\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\t// Cases:\r\n\t\t\t//\r\n\t\t\t//\t\tstyle: {\r\n\t\t\t//\t\t\tcolor: 'red'\r\n\t\t\t//\t\t}\r\n\t\t\t//\r\n\t\t\telse {\r\n\t\t\t\tnode.style[ styleName ] = styleValue;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively renders HTML element's children from {@link module:ui/template~Template#children}.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:ui/template~RenderData} data Rendering data.\r\n\t */\r\n\t_renderElementChildren( data ) {\r\n\t\tconst node = data.node;\r\n\t\tconst container = data.intoFragment ? document.createDocumentFragment() : node;\r\n\t\tconst isApplying = data.isApplying;\r\n\t\tlet childIndex = 0;\r\n\r\n\t\tfor ( const child of this.children ) {\r\n\t\t\tif ( isViewCollection( child ) ) {\r\n\t\t\t\tif ( !isApplying ) {\r\n\t\t\t\t\tchild.setParent( node );\r\n\r\n\t\t\t\t\t// Note: ViewCollection renders its children.\r\n\t\t\t\t\tfor ( const view of child ) {\r\n\t\t\t\t\t\tcontainer.appendChild( view.element );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if ( isView( child ) ) {\r\n\t\t\t\tif ( !isApplying ) {\r\n\t\t\t\t\tif ( !child.isRendered ) {\r\n\t\t\t\t\t\tchild.render();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcontainer.appendChild( child.element );\r\n\t\t\t\t}\r\n\t\t\t} else if ( isNode( child ) ) {\r\n\t\t\t\tcontainer.appendChild( child );\r\n\t\t\t} else {\r\n\t\t\t\tif ( isApplying ) {\r\n\t\t\t\t\tconst revertData = data.revertData;\r\n\t\t\t\t\tconst childRevertData = getEmptyRevertData();\r\n\r\n\t\t\t\t\trevertData.children.push( childRevertData );\r\n\r\n\t\t\t\t\tchild._renderNode( {\r\n\t\t\t\t\t\tnode: container.childNodes[ childIndex++ ],\r\n\t\t\t\t\t\tisApplying: true,\r\n\t\t\t\t\t\trevertData: childRevertData\r\n\t\t\t\t\t} );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcontainer.appendChild( child.render() );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( data.intoFragment ) {\r\n\t\t\tnode.appendChild( container );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Activates `on` event listeners from the {@link module:ui/template~TemplateDefinition}\r\n\t * on an HTML element.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:ui/template~RenderData} data Rendering data.\r\n\t */\r\n\t_setUpListeners( data ) {\r\n\t\tif ( !this.eventListeners ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor ( const key in this.eventListeners ) {\r\n\t\t\tconst revertBindings = this.eventListeners[ key ].map( schemaItem => {\r\n\t\t\t\tconst [ domEvtName, domSelector ] = key.split( '@' );\r\n\r\n\t\t\t\treturn schemaItem.activateDomEventListener( domEvtName, domSelector, data );\r\n\t\t\t} );\r\n\r\n\t\t\tif ( data.revertData ) {\r\n\t\t\t\tdata.revertData.bindings.push( revertBindings );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * For a given {@link module:ui/template~TemplateValueSchema} containing {@link module:ui/template~TemplateBinding}\r\n\t * activates the binding and sets its initial value.\r\n\t *\r\n\t * Note: {@link module:ui/template~TemplateValueSchema} can be for HTML element attributes or\r\n\t * text node `textContent`.\r\n\t *\r\n\t * @protected\r\n\t * @param {Object} options Binding options.\r\n\t * @param {module:ui/template~TemplateValueSchema} options.schema\r\n\t * @param {Function} options.updater A function which updates the DOM (like attribute or text).\r\n\t * @param {module:ui/template~RenderData} options.data Rendering data.\r\n\t */\r\n\t_bindToObservable( { schema, updater, data } ) {\r\n\t\tconst revertData = data.revertData;\r\n\r\n\t\t// Set initial values.\r\n\t\tsyncValueSchemaValue( schema, updater, data );\r\n\r\n\t\tconst revertBindings = schema\r\n\t\t\t// Filter \"falsy\" (false, undefined, null, '') value schema components out.\r\n\t\t\t.filter( item => !isFalsy( item ) )\r\n\t\t\t// Filter inactive bindings from schema, like static strings ('foo'), numbers (42), etc.\r\n\t\t\t.filter( item => item.observable )\r\n\t\t\t// Once only the actual binding are left, let the emitter listen to observable change:attribute event.\r\n\t\t\t// TODO: Reduce the number of listeners attached as many bindings may listen\r\n\t\t\t// to the same observable attribute.\r\n\t\t\t.map( templateBinding => templateBinding.activateAttributeListener( schema, updater, data ) );\r\n\r\n\t\tif ( revertData ) {\r\n\t\t\trevertData.bindings.push( revertBindings );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Reverts {@link module:ui/template~RenderData#revertData template data} from a node to\r\n\t * return it to the original state.\r\n\t *\r\n\t * @protected\r\n\t * @param {HTMLElement|Text} node A node to be reverted.\r\n\t * @param {Object} revertData An object that stores information about what changes have been made by\r\n\t * {@link #apply} to the node. See {@link module:ui/template~RenderData#revertData} for more information.\r\n\t */\r\n\t_revertTemplateFromNode( node, revertData ) {\r\n\t\tfor ( const binding of revertData.bindings ) {\r\n\t\t\t// Each binding may consist of several observable+observable#attribute.\r\n\t\t\t// like the following has 2:\r\n\t\t\t//\r\n\t\t\t//\t\tclass: [\r\n\t\t\t//\t\t\t'x',\r\n\t\t\t//\t\t\tbind.to( 'foo' ),\r\n\t\t\t//\t\t\t'y',\r\n\t\t\t//\t\t\tbind.to( 'bar' )\r\n\t\t\t//\t\t]\r\n\t\t\t//\r\n\t\t\tfor ( const revertBinding of binding ) {\r\n\t\t\t\trevertBinding();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( revertData.text ) {\r\n\t\t\tnode.textContent = revertData.text;\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor ( const attrName in revertData.attributes ) {\r\n\t\t\tconst attrValue = revertData.attributes[ attrName ];\r\n\r\n\t\t\t// When the attribute has **not** been set before #apply().\r\n\t\t\tif ( attrValue === null ) {\r\n\t\t\t\tnode.removeAttribute( attrName );\r\n\t\t\t} else {\r\n\t\t\t\tnode.setAttribute( attrName, attrValue );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor ( let i = 0; i < revertData.children.length; ++i ) {\r\n\t\t\tthis._revertTemplateFromNode( node.childNodes[ i ], revertData.children[ i ] );\r\n\t\t}\r\n\t}\r\n}\r\n\r\nmix( Template, EmitterMixin );\r\n\r\n/**\r\n * Describes a binding created by the {@link module:ui/template~Template.bind} interface.\r\n *\r\n * @protected\r\n */\r\nexport class TemplateBinding {\r\n\t/**\r\n\t * Creates an instance of the {@link module:ui/template~TemplateBinding} class.\r\n\t *\r\n\t * @param {module:ui/template~TemplateDefinition} def The definition of the binding.\r\n\t */\r\n\tconstructor( def ) {\r\n\t\tObject.assign( this, def );\r\n\r\n\t\t/**\r\n\t\t * An observable instance of the binding. It either:\r\n\t\t *\r\n\t\t * * provides the attribute with the value,\r\n\t\t * * or passes the event when a corresponding DOM event is fired.\r\n\t\t *\r\n\t\t * @member {module:utils/observablemixin~ObservableMixin} module:ui/template~TemplateBinding#observable\r\n\t\t */\r\n\r\n\t\t/**\r\n\t\t * An {@link module:utils/emittermixin~Emitter} used by the binding to:\r\n\t\t *\r\n\t\t * * listen to the attribute change in the {@link module:ui/template~TemplateBinding#observable},\r\n\t\t * * or listen to the event in the DOM.\r\n\t\t *\r\n\t\t * @member {module:utils/emittermixin~EmitterMixin} module:ui/template~TemplateBinding#emitter\r\n\t\t */\r\n\r\n\t\t/**\r\n\t\t * The name of the {@link module:ui/template~TemplateBinding#observable observed attribute}.\r\n\t\t *\r\n\t\t * @member {String} module:ui/template~TemplateBinding#attribute\r\n\t\t */\r\n\r\n\t\t/**\r\n\t\t * A custom function to process the value of the {@link module:ui/template~TemplateBinding#attribute}.\r\n\t\t *\r\n\t\t * @member {Function} [module:ui/template~TemplateBinding#callback]\r\n\t\t */\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the value of the binding. It is the value of the {@link module:ui/template~TemplateBinding#attribute} in\r\n\t * {@link module:ui/template~TemplateBinding#observable}. The value may be processed by the\r\n\t * {@link module:ui/template~TemplateBinding#callback}, if such has been passed to the binding.\r\n\t *\r\n\t * @param {Node} [node] A native DOM node, passed to the custom {@link module:ui/template~TemplateBinding#callback}.\r\n\t * @returns {*} The value of {@link module:ui/template~TemplateBinding#attribute} in\r\n\t * {@link module:ui/template~TemplateBinding#observable}.\r\n\t */\r\n\tgetValue( node ) {\r\n\t\tconst value = this.observable[ this.attribute ];\r\n\r\n\t\treturn this.callback ? this.callback( value, node ) : value;\r\n\t}\r\n\r\n\t/**\r\n\t * Activates the listener which waits for changes of the {@link module:ui/template~TemplateBinding#attribute} in\r\n\t * {@link module:ui/template~TemplateBinding#observable}, then updates the DOM with the aggregated\r\n\t * value of {@link module:ui/template~TemplateValueSchema}.\r\n\t *\r\n\t * @param {module:ui/template~TemplateValueSchema} schema A full schema to generate an attribute or text in the DOM.\r\n\t * @param {Function} updater A DOM updater function used to update the native DOM attribute or text.\r\n\t * @param {module:ui/template~RenderData} data Rendering data.\r\n\t * @returns {Function} A function to sever the listener binding.\r\n\t */\r\n\tactivateAttributeListener( schema, updater, data ) {\r\n\t\tconst callback = () => syncValueSchemaValue( schema, updater, data );\r\n\r\n\t\tthis.emitter.listenTo( this.observable, 'change:' + this.attribute, callback );\r\n\r\n\t\t// Allows revert of the listener.\r\n\t\treturn () => {\r\n\t\t\tthis.emitter.stopListening( this.observable, 'change:' + this.attribute, callback );\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**\r\n * Describes either:\r\n *\r\n * * a binding to an {@link module:utils/observablemixin~Observable},\r\n * * or a native DOM event binding.\r\n *\r\n * It is created by the {@link module:ui/template~BindChain#to} method.\r\n *\r\n * @protected\r\n */\r\nexport class TemplateToBinding extends TemplateBinding {\r\n\t/**\r\n\t * Activates the listener for the native DOM event, which when fired, is propagated by\r\n\t * the {@link module:ui/template~TemplateBinding#emitter}.\r\n\t *\r\n\t * @param {String} domEvtName The name of the native DOM event.\r\n\t * @param {String} domSelector The selector in the DOM to filter delegated events.\r\n\t * @param {module:ui/template~RenderData} data Rendering data.\r\n\t * @returns {Function} A function to sever the listener binding.\r\n\t */\r\n\tactivateDomEventListener( domEvtName, domSelector, data ) {\r\n\t\tconst callback = ( evt, domEvt ) => {\r\n\t\t\tif ( !domSelector || domEvt.target.matches( domSelector ) ) {\r\n\t\t\t\tif ( typeof this.eventNameOrFunction == 'function' ) {\r\n\t\t\t\t\tthis.eventNameOrFunction( domEvt );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.observable.fire( this.eventNameOrFunction, domEvt );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.emitter.listenTo( data.node, domEvtName, callback );\r\n\r\n\t\t// Allows revert of the listener.\r\n\t\treturn () => {\r\n\t\t\tthis.emitter.stopListening( data.node, domEvtName, callback );\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**\r\n * Describes a binding to {@link module:utils/observablemixin~ObservableMixin} created by the {@link module:ui/template~BindChain#if}\r\n * method.\r\n *\r\n * @protected\r\n */\r\nexport class TemplateIfBinding extends TemplateBinding {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tgetValue( node ) {\r\n\t\tconst value = super.getValue( node );\r\n\r\n\t\treturn isFalsy( value ) ? false : ( this.valueIfTrue || true );\r\n\t}\r\n\r\n\t/**\r\n\t * The value of the DOM attribute or text to be set if the {@link module:ui/template~TemplateBinding#attribute} in\r\n\t * {@link module:ui/template~TemplateBinding#observable} is `true`.\r\n\t *\r\n\t * @member {String} [module:ui/template~TemplateIfBinding#valueIfTrue]\r\n\t */\r\n}\r\n\r\n// Checks whether given {@link module:ui/template~TemplateValueSchema} contains a\r\n// {@link module:ui/template~TemplateBinding}.\r\n//\r\n// @param {module:ui/template~TemplateValueSchema} schema\r\n// @returns {Boolean}\r\nfunction hasTemplateBinding( schema ) {\r\n\tif ( !schema ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// Normalize attributes with additional data like namespace:\r\n\t//\r\n\t//\t\tclass: {\r\n\t//\t\t\tns: 'abc',\r\n\t//\t\t\tvalue: [ ... ]\r\n\t//\t\t}\r\n\t//\r\n\tif ( schema.value ) {\r\n\t\tschema = schema.value;\r\n\t}\r\n\r\n\tif ( Array.isArray( schema ) ) {\r\n\t\treturn schema.some( hasTemplateBinding );\r\n\t} else if ( schema instanceof TemplateBinding ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n}\r\n\r\n// Assembles the value using {@link module:ui/template~TemplateValueSchema} and stores it in a form of\r\n// an Array. Each entry of the Array corresponds to one of {@link module:ui/template~TemplateValueSchema}\r\n// items.\r\n//\r\n// @param {module:ui/template~TemplateValueSchema} schema\r\n// @param {Node} node DOM Node updated when {@link module:utils/observablemixin~ObservableMixin} changes.\r\n// @returns {Array}\r\nfunction getValueSchemaValue( schema, node ) {\r\n\treturn schema.map( schemaItem => {\r\n\t\t// Process {@link module:ui/template~TemplateBinding} bindings.\r\n\t\tif ( schemaItem instanceof TemplateBinding ) {\r\n\t\t\treturn schemaItem.getValue( node );\r\n\t\t}\r\n\r\n\t\t// All static values like strings, numbers, and \"falsy\" values (false, null, undefined, '', etc.) just pass.\r\n\t\treturn schemaItem;\r\n\t} );\r\n}\r\n\r\n// A function executed each time the bound Observable attribute changes, which updates the DOM with a value\r\n// constructed from {@link module:ui/template~TemplateValueSchema}.\r\n//\r\n// @param {module:ui/template~TemplateValueSchema} schema\r\n// @param {Function} updater A function which updates the DOM (like attribute or text).\r\n// @param {Node} node DOM Node updated when {@link module:utils/observablemixin~ObservableMixin} changes.\r\nfunction syncValueSchemaValue( schema, updater, { node } ) {\r\n\tlet value = getValueSchemaValue( schema, node );\r\n\r\n\t// Check if schema is a single Template.bind.if, like:\r\n\t//\r\n\t//\t\tclass: Template.bind.if( 'foo' )\r\n\t//\r\n\tif ( schema.length == 1 && schema[ 0 ] instanceof TemplateIfBinding ) {\r\n\t\tvalue = value[ 0 ];\r\n\t} else {\r\n\t\tvalue = value.reduce( arrayValueReducer, '' );\r\n\t}\r\n\r\n\tif ( isFalsy( value ) ) {\r\n\t\tupdater.remove();\r\n\t} else {\r\n\t\tupdater.set( value );\r\n\t}\r\n}\r\n\r\n// Returns an object consisting of `set` and `remove` functions, which\r\n// can be used in the context of DOM Node to set or reset `textContent`.\r\n// @see module:ui/view~View#_bindToObservable\r\n//\r\n// @param {Node} node DOM Node to be modified.\r\n// @returns {Object}\r\nfunction getTextUpdater( node ) {\r\n\treturn {\r\n\t\tset( value ) {\r\n\t\t\tnode.textContent = value;\r\n\t\t},\r\n\r\n\t\tremove() {\r\n\t\t\tnode.textContent = '';\r\n\t\t}\r\n\t};\r\n}\r\n\r\n// Returns an object consisting of `set` and `remove` functions, which\r\n// can be used in the context of DOM Node to set or reset an attribute.\r\n// @see module:ui/view~View#_bindToObservable\r\n//\r\n// @param {Node} node DOM Node to be modified.\r\n// @param {String} attrName Name of the attribute to be modified.\r\n// @param {String} [ns=null] Namespace to use.\r\n// @returns {Object}\r\nfunction getAttributeUpdater( el, attrName, ns ) {\r\n\treturn {\r\n\t\tset( value ) {\r\n\t\t\tel.setAttributeNS( ns, attrName, value );\r\n\t\t},\r\n\r\n\t\tremove() {\r\n\t\t\tel.removeAttributeNS( ns, attrName );\r\n\t\t}\r\n\t};\r\n}\r\n\r\n// Returns an object consisting of `set` and `remove` functions, which\r\n// can be used in the context of CSSStyleDeclaration to set or remove a style.\r\n// @see module:ui/view~View#_bindToObservable\r\n//\r\n// @param {Node} node DOM Node to be modified.\r\n// @param {String} styleName Name of the style to be modified.\r\n// @returns {Object}\r\nfunction getStyleUpdater( el, styleName ) {\r\n\treturn {\r\n\t\tset( value ) {\r\n\t\t\tel.style[ styleName ] = value;\r\n\t\t},\r\n\r\n\t\tremove() {\r\n\t\t\tel.style[ styleName ] = null;\r\n\t\t}\r\n\t};\r\n}\r\n\r\n// Clones definition of the template.\r\n//\r\n// @param {module:ui/template~TemplateDefinition} def\r\n// @returns {module:ui/template~TemplateDefinition}\r\nfunction clone( def ) {\r\n\tconst clone = cloneDeepWith( def, value => {\r\n\t\t// Don't clone the `Template.bind`* bindings because of the references to Observable\r\n\t\t// and DomEmitterMixin instances inside, which would also be traversed and cloned by greedy\r\n\t\t// cloneDeepWith algorithm. There's no point in cloning Observable/DomEmitterMixins\r\n\t\t// along with the definition.\r\n\t\t//\r\n\t\t// Don't clone Template instances if provided as a child. They're simply #render()ed\r\n\t\t// and nothing should interfere.\r\n\t\t//\r\n\t\t// Also don't clone View instances if provided as a child of the Template. The template\r\n\t\t// instance will be extracted from the View during the normalization and there's no need\r\n\t\t// to clone it.\r\n\t\tif ( value && ( value instanceof TemplateBinding || isTemplate( value ) || isView( value ) || isViewCollection( value ) ) ) {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t} );\r\n\r\n\treturn clone;\r\n}\r\n\r\n// Normalizes given {@link module:ui/template~TemplateDefinition}.\r\n//\r\n// See:\r\n//  * {@link normalizeAttributes}\r\n//  * {@link normalizeListeners}\r\n//  * {@link normalizePlainTextDefinition}\r\n//  * {@link normalizeTextDefinition}\r\n//\r\n// @param {module:ui/template~TemplateDefinition} def\r\n// @returns {module:ui/template~TemplateDefinition} Normalized definition.\r\nfunction normalize( def ) {\r\n\tif ( typeof def == 'string' ) {\r\n\t\tdef = normalizePlainTextDefinition( def );\r\n\t} else if ( def.text ) {\r\n\t\tnormalizeTextDefinition( def );\r\n\t}\r\n\r\n\tif ( def.on ) {\r\n\t\tdef.eventListeners = normalizeListeners( def.on );\r\n\r\n\t\t// Template mixes EmitterMixin, so delete #on to avoid collision.\r\n\t\tdelete def.on;\r\n\t}\r\n\r\n\tif ( !def.text ) {\r\n\t\tif ( def.attributes ) {\r\n\t\t\tnormalizeAttributes( def.attributes );\r\n\t\t}\r\n\r\n\t\tconst children = [];\r\n\r\n\t\tif ( def.children ) {\r\n\t\t\tif ( isViewCollection( def.children ) ) {\r\n\t\t\t\tchildren.push( def.children );\r\n\t\t\t} else {\r\n\t\t\t\tfor ( const child of def.children ) {\r\n\t\t\t\t\tif ( isTemplate( child ) || isView( child ) || isNode( child ) ) {\r\n\t\t\t\t\t\tchildren.push( child );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tchildren.push( new Template( child ) );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdef.children = children;\r\n\t}\r\n\r\n\treturn def;\r\n}\r\n\r\n// Normalizes \"attributes\" section of {@link module:ui/template~TemplateDefinition}.\r\n//\r\n//\t\tattributes: {\r\n//\t\t\ta: 'bar',\r\n//\t\t\tb: {@link module:ui/template~TemplateBinding},\r\n//\t\t\tc: {\r\n//\t\t\t\tvalue: 'bar'\r\n//\t\t\t}\r\n//\t\t}\r\n//\r\n// becomes\r\n//\r\n//\t\tattributes: {\r\n//\t\t\ta: [ 'bar' ],\r\n//\t\t\tb: [ {@link module:ui/template~TemplateBinding} ],\r\n//\t\t\tc: {\r\n//\t\t\t\tvalue: [ 'bar' ]\r\n//\t\t\t}\r\n//\t\t}\r\n//\r\n// @param {Object} attributes\r\nfunction normalizeAttributes( attributes ) {\r\n\tfor ( const a in attributes ) {\r\n\t\tif ( attributes[ a ].value ) {\r\n\t\t\tattributes[ a ].value = [].concat( attributes[ a ].value );\r\n\t\t}\r\n\r\n\t\tarrayify( attributes, a );\r\n\t}\r\n}\r\n\r\n// Normalizes \"on\" section of {@link module:ui/template~TemplateDefinition}.\r\n//\r\n//\t\ton: {\r\n//\t\t\ta: 'bar',\r\n//\t\t\tb: {@link module:ui/template~TemplateBinding},\r\n//\t\t\tc: [ {@link module:ui/template~TemplateBinding}, () => { ... } ]\r\n//\t\t}\r\n//\r\n// becomes\r\n//\r\n//\t\ton: {\r\n//\t\t\ta: [ 'bar' ],\r\n//\t\t\tb: [ {@link module:ui/template~TemplateBinding} ],\r\n//\t\t\tc: [ {@link module:ui/template~TemplateBinding}, () => { ... } ]\r\n//\t\t}\r\n//\r\n// @param {Object} listeners\r\n// @returns {Object} Object containing normalized listeners.\r\nfunction normalizeListeners( listeners ) {\r\n\tfor ( const l in listeners ) {\r\n\t\tarrayify( listeners, l );\r\n\t}\r\n\r\n\treturn listeners;\r\n}\r\n\r\n// Normalizes \"string\" {@link module:ui/template~TemplateDefinition}.\r\n//\r\n//\t\t\"foo\"\r\n//\r\n// becomes\r\n//\r\n//\t\t{ text: [ 'foo' ] },\r\n//\r\n// @param {String} def\r\n// @returns {module:ui/template~TemplateDefinition} Normalized template definition.\r\nfunction normalizePlainTextDefinition( def ) {\r\n\treturn {\r\n\t\ttext: [ def ]\r\n\t};\r\n}\r\n\r\n// Normalizes text {@link module:ui/template~TemplateDefinition}.\r\n//\r\n//\t\tchildren: [\r\n//\t\t\t{ text: 'def' },\r\n//\t\t\t{ text: {@link module:ui/template~TemplateBinding} }\r\n//\t\t]\r\n//\r\n// becomes\r\n//\r\n//\t\tchildren: [\r\n//\t\t\t{ text: [ 'def' ] },\r\n//\t\t\t{ text: [ {@link module:ui/template~TemplateBinding} ] }\r\n//\t\t]\r\n//\r\n// @param {module:ui/template~TemplateDefinition} def\r\nfunction normalizeTextDefinition( def ) {\r\n\tif ( !Array.isArray( def.text ) ) {\r\n\t\tdef.text = [ def.text ];\r\n\t}\r\n}\r\n\r\n// Wraps an entry in Object in an Array, if not already one.\r\n//\r\n//\t\t{\r\n//\t\t\tx: 'y',\r\n//\t\t\ta: [ 'b' ]\r\n//\t\t}\r\n//\r\n// becomes\r\n//\r\n//\t\t{\r\n//\t\t\tx: [ 'y' ],\r\n//\t\t\ta: [ 'b' ]\r\n//\t\t}\r\n//\r\n// @param {Object} obj\r\n// @param {String} key\r\nfunction arrayify( obj, key ) {\r\n\tif ( !Array.isArray( obj[ key ] ) ) {\r\n\t\tobj[ key ] = [ obj[ key ] ];\r\n\t}\r\n}\r\n\r\n// A helper which concatenates the value avoiding unwanted\r\n// leading white spaces.\r\n//\r\n// @param {String} prev\r\n// @param {String} cur\r\n// @returns {String}\r\nfunction arrayValueReducer( prev, cur ) {\r\n\tif ( isFalsy( cur ) ) {\r\n\t\treturn prev;\r\n\t} else if ( isFalsy( prev ) ) {\r\n\t\treturn cur;\r\n\t} else {\r\n\t\treturn `${ prev } ${ cur }`;\r\n\t}\r\n}\r\n\r\n// Extends one object defined in the following format:\r\n//\r\n//\t\t{\r\n//\t\t\tkey1: [Array1],\r\n//\t\t\tkey2: [Array2],\r\n//\t\t\t...\r\n//\t\t\tkeyN: [ArrayN]\r\n//\t\t}\r\n//\r\n// with another object of the same data format.\r\n//\r\n// @param {Object} obj Base object.\r\n// @param {Object} ext Object extending base.\r\n// @returns {String}\r\nfunction extendObjectValueArray( obj, ext ) {\r\n\tfor ( const a in ext ) {\r\n\t\tif ( obj[ a ] ) {\r\n\t\t\tobj[ a ].push( ...ext[ a ] );\r\n\t\t} else {\r\n\t\t\tobj[ a ] = ext[ a ];\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// A helper for {@link module:ui/template~Template#extend}. Recursively extends {@link module:ui/template~Template} instance\r\n// with content from {@link module:ui/template~TemplateDefinition}. See {@link module:ui/template~Template#extend} to learn more.\r\n//\r\n// @param {module:ui/template~Template} def A template instance to be extended.\r\n// @param {module:ui/template~TemplateDefinition} def A definition which is to extend the template instance.\r\n// @param {Object} Error context.\r\nfunction extendTemplate( template, def ) {\r\n\tif ( def.attributes ) {\r\n\t\tif ( !template.attributes ) {\r\n\t\t\ttemplate.attributes = {};\r\n\t\t}\r\n\r\n\t\textendObjectValueArray( template.attributes, def.attributes );\r\n\t}\r\n\r\n\tif ( def.eventListeners ) {\r\n\t\tif ( !template.eventListeners ) {\r\n\t\t\ttemplate.eventListeners = {};\r\n\t\t}\r\n\r\n\t\textendObjectValueArray( template.eventListeners, def.eventListeners );\r\n\t}\r\n\r\n\tif ( def.text ) {\r\n\t\ttemplate.text.push( ...def.text );\r\n\t}\r\n\r\n\tif ( def.children && def.children.length ) {\r\n\t\tif ( template.children.length != def.children.length ) {\r\n\t\t\t/**\r\n\t\t\t * The number of children in extended definition does not match.\r\n\t\t\t *\r\n\t\t\t * @error ui-template-extend-children-mismatch\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'ui-template-extend-children-mismatch: The number of children in extended definition does not match.',\r\n\t\t\t\ttemplate\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tlet childIndex = 0;\r\n\r\n\t\tfor ( const childDef of def.children ) {\r\n\t\t\textendTemplate( template.children[ childIndex++ ], childDef );\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Checks if value is \"falsy\".\r\n// Note: 0 (Number) is not \"falsy\" in this context.\r\n//\r\n// @private\r\n// @param {*} value Value to be checked.\r\nfunction isFalsy( value ) {\r\n\treturn !value && value !== 0;\r\n}\r\n\r\n// Checks if the item is an instance of {@link module:ui/view~View}\r\n//\r\n// @private\r\n// @param {*} value Value to be checked.\r\nfunction isView( item ) {\r\n\treturn item instanceof View;\r\n}\r\n\r\n// Checks if the item is an instance of {@link module:ui/template~Template}\r\n//\r\n// @private\r\n// @param {*} value Value to be checked.\r\nfunction isTemplate( item ) {\r\n\treturn item instanceof Template;\r\n}\r\n\r\n// Checks if the item is an instance of {@link module:ui/viewcollection~ViewCollection}\r\n//\r\n// @private\r\n// @param {*} value Value to be checked.\r\nfunction isViewCollection( item ) {\r\n\treturn item instanceof ViewCollection;\r\n}\r\n\r\n// Creates an empty skeleton for {@link module:ui/template~Template#revert}\r\n// data.\r\n//\r\n// @private\r\nfunction getEmptyRevertData() {\r\n\treturn {\r\n\t\tchildren: [],\r\n\t\tbindings: [],\r\n\t\tattributes: {}\r\n\t};\r\n}\r\n\r\n// Checks whether an attribute should be extended when\r\n// {@link module:ui/template~Template#apply} is called.\r\n//\r\n// @private\r\n// @param {String} attrName Attribute name to check.\r\nfunction shouldExtend( attrName ) {\r\n\treturn attrName == 'class' || attrName == 'style';\r\n}\r\n\r\n/**\r\n * A definition of the {@link module:ui/template~Template}. It describes what kind of\r\n * node a template will render (HTML element or text), attributes of an element, DOM event\r\n * listeners and children.\r\n *\r\n * Also see:\r\n * * {@link module:ui/template~TemplateValueSchema} to learn about HTML element attributes,\r\n * * {@link module:ui/template~TemplateListenerSchema} to learn about DOM event listeners.\r\n *\r\n * A sample definition on an HTML element can look like this:\r\n *\r\n *\t\tnew Template( {\r\n *\t\t\ttag: 'p',\r\n *\t\t\tchildren: [\r\n *\t\t\t\t{\r\n *\t\t\t\t\ttag: 'span',\r\n *\t\t\t\t\tattributes: { ... },\r\n *\t\t\t\t\tchildren: [ ... ],\r\n *\t\t\t\t},\r\n *\t\t\t\t{\r\n *\t\t\t\t\ttext: 'static–text'\r\n *\t\t\t\t},\r\n *\t\t\t\t'also-static–text',\r\n *\t\t\t],\r\n *\t\t\tattributes: {\r\n *\t\t\t\tclass: {@link module:ui/template~TemplateValueSchema},\r\n *\t\t\t\tid: {@link module:ui/template~TemplateValueSchema},\r\n *\t\t\t\tstyle: {@link module:ui/template~TemplateValueSchema}\r\n *\r\n *\t\t\t\t// ...\r\n *\t\t\t},\r\n *\t\t\ton: {\r\n *\t\t\t\t'click': {@link module:ui/template~TemplateListenerSchema}\r\n *\r\n *\t\t\t\t// Document.querySelector format is also accepted.\r\n *\t\t\t\t'keyup@a.some-class': {@link module:ui/template~TemplateListenerSchema}\r\n *\r\n *\t\t\t\t// ...\r\n *\t\t\t}\r\n *\t\t} );\r\n *\r\n * A {@link module:ui/view~View}, another {@link module:ui/template~Template} or a native DOM node\r\n * can also become a child of a template. When a view is passed, its {@link module:ui/view~View#element} is used:\r\n *\r\n *\t\tconst view = new SomeView();\r\n *\t\tconst childTemplate = new Template( { ... } );\r\n *\t\tconst childNode = document.createElement( 'b' );\r\n *\r\n *\t\tnew Template( {\r\n *\t\t\ttag: 'p',\r\n *\r\n *\t\t\tchildren: [\r\n *\t\t\t\t// view#element will be added as a child of this <p>.\r\n *\t\t\t\tview,\r\n *\r\n * \t\t\t\t// The output of childTemplate.render() will be added here.\r\n *\t\t\t\tchildTemplate,\r\n *\r\n *\t\t\t\t// Native DOM nodes are included directly in the rendered output.\r\n *\t\t\t\tchildNode\r\n *\t\t\t]\r\n *\t\t} );\r\n *\r\n * An entire {@link module:ui/viewcollection~ViewCollection} can be used as a child in the definition:\r\n *\r\n *\t\tconst collection = new ViewCollection();\r\n *\t\tcollection.add( someView );\r\n *\r\n *\t\tnew Template( {\r\n *\t\t\ttag: 'p',\r\n *\r\n *\t\t\tchildren: collection\r\n *\t\t} );\r\n *\r\n * @typedef module:ui/template~TemplateDefinition\r\n * @type Object\r\n *\r\n * @property {String} tag See the template {@link module:ui/template~Template#tag} property.\r\n *\r\n * @property {Array.<module:ui/template~TemplateDefinition>} [children]\r\n * See the template {@link module:ui/template~Template#children} property.\r\n *\r\n * @property {Object.<String, module:ui/template~TemplateValueSchema>} [attributes]\r\n * See the template {@link module:ui/template~Template#attributes} property.\r\n *\r\n * @property {String|module:ui/template~TemplateValueSchema|Array.<String|module:ui/template~TemplateValueSchema>} [text]\r\n * See the template {@link module:ui/template~Template#text} property.\r\n *\r\n * @property {Object.<String, module:ui/template~TemplateListenerSchema>} [on]\r\n * See the template {@link module:ui/template~Template#eventListeners} property.\r\n */\r\n\r\n/**\r\n * Describes a value of an HTML element attribute or `textContent`. It allows combining multiple\r\n * data sources like static values and {@link module:utils/observablemixin~Observable} attributes.\r\n *\r\n * Also see:\r\n * * {@link module:ui/template~TemplateDefinition} to learn where to use it,\r\n * * {@link module:ui/template~Template.bind} to learn how to configure\r\n * {@link module:utils/observablemixin~Observable} attribute bindings,\r\n * * {@link module:ui/template~Template#render} to learn how to render a template,\r\n * * {@link module:ui/template~BindChain#to `to()`} and {@link module:ui/template~BindChain#if `if()`}\r\n * methods to learn more about bindings.\r\n *\r\n * Attribute values can be described in many different ways:\r\n *\r\n *\t\t// Bind helper will create bindings to attributes of the observable.\r\n *\t\tconst bind = Template.bind( observable, emitter );\r\n *\r\n *\t\tnew Template( {\r\n *\t\t\ttag: 'p',\r\n *\t\t\tattributes: {\r\n *\t\t\t\t// A plain string schema.\r\n *\t\t\t\t'class': 'static-text',\r\n *\r\n *\t\t\t\t// An object schema, binds to the \"foo\" attribute of the\r\n *\t\t\t\t// observable and follows its value.\r\n *\t\t\t\t'class': bind.to( 'foo' ),\r\n *\r\n *\t\t\t\t// An array schema, combines the above.\r\n *\t\t\t\t'class': [\r\n *\t\t\t\t\t'static-text',\r\n *\t\t\t\t\tbind.to( 'bar', () => { ... } ),\r\n *\r\n * \t\t\t\t\t// Bindings can also be conditional.\r\n *\t\t\t\t\tbind.if( 'baz', 'class-when-baz-is-true' )\r\n *\t\t\t\t],\r\n *\r\n *\t\t\t\t// An array schema, with a custom namespace, e.g. useful for creating SVGs.\r\n *\t\t\t\t'class': {\r\n *\t\t\t\t\tns: 'http://ns.url',\r\n *\t\t\t\t\tvalue: [\r\n *\t\t\t\t\t\tbind.if( 'baz', 'value-when-true' ),\r\n *\t\t\t\t\t\t'static-text'\r\n *\t\t\t\t\t]\r\n *\t\t\t\t},\r\n *\r\n *\t\t\t\t// An object schema, specific for styles.\r\n *\t\t\t\tstyle: {\r\n *\t\t\t\t\tcolor: 'red',\r\n *\t\t\t\t\tbackgroundColor: bind.to( 'qux', () => { ... } )\r\n *\t\t\t\t}\r\n *\t\t\t}\r\n *\t\t} );\r\n *\r\n * Text nodes can also have complex values:\r\n *\r\n *\t\tconst bind = Template.bind( observable, emitter );\r\n *\r\n *\t\t// Will render a \"foo\" text node.\r\n *\t\tnew Template( {\r\n *\t\t\ttext: 'foo'\r\n *\t\t} );\r\n *\r\n *\t\t// Will render a \"static text: {observable.foo}\" text node.\r\n *\t\t// The text of the node will be updated as the \"foo\" attribute changes.\r\n *\t\tnew Template( {\r\n *\t\t\ttext: [\r\n *\t\t\t\t'static text: ',\r\n *\t\t\t\tbind.to( 'foo', () => { ... } )\r\n *\t\t\t]\r\n *\t\t} );\r\n *\r\n * @typedef module:ui/template~TemplateValueSchema\r\n * @type {Object|String|Array}\r\n */\r\n\r\n/**\r\n * Describes an event listener attached to an HTML element. Such listener can propagate DOM events\r\n * through an {@link module:utils/observablemixin~Observable} instance, execute custom callbacks\r\n * or both, if necessary.\r\n *\r\n * Also see:\r\n * * {@link module:ui/template~TemplateDefinition} to learn more about template definitions,\r\n * * {@link module:ui/template~BindChain#to `to()`} method to learn more about bindings.\r\n *\r\n * Check out different ways of attaching event listeners below:\r\n *\r\n *\t\t// Bind helper will propagate events through the observable.\r\n *\t\tconst bind = Template.bind( observable, emitter );\r\n *\r\n *\t\tnew Template( {\r\n *\t\t\ttag: 'p',\r\n *\t\t\ton: {\r\n *\t\t\t\t// An object schema. The observable will fire the \"clicked\" event upon DOM \"click\".\r\n *\t\t\t\tclick: bind.to( 'clicked' )\r\n *\r\n *\t\t\t\t// An object schema. It will work for \"click\" event on \"a.foo\" children only.\r\n *\t\t\t\t'click@a.foo': bind.to( 'clicked' )\r\n *\r\n *\t\t\t\t// An array schema, makes the observable propagate multiple events.\r\n *\t\t\t\tclick: [\r\n *\t\t\t\t\tbind.to( 'clicked' ),\r\n *\t\t\t\t\tbind.to( 'executed' )\r\n *\t\t\t\t],\r\n *\r\n *\t\t\t\t// An array schema with a custom callback.\r\n *\t\t\t\t'click@a.foo': {\r\n *\t\t\t\t\tbind.to( 'clicked' ),\r\n *\t\t\t\t\tbind.to( evt => {\r\n *\t\t\t\t\t\tconsole.log( `${ evt.target } has been clicked!` );\r\n *\t\t\t\t\t} }\r\n *\t\t\t\t}\r\n *\t\t\t}\r\n *\t\t} );\r\n *\r\n * @typedef module:ui/template~TemplateListenerSchema\r\n * @type {Object|String|Array}\r\n */\r\n\r\n/**\r\n * The return value of {@link ~Template.bind `Template.bind()`}. It provides `to()` and `if()`\r\n * methods to create the {@link module:utils/observablemixin~Observable observable} attribute and event bindings.\r\n *\r\n * @interface module:ui/template~BindChain\r\n */\r\n\r\n/**\r\n * Binds an {@link module:utils/observablemixin~Observable observable} to either:\r\n *\r\n * * an HTML element attribute or a text node `textContent`, so it remains in sync with the observable\r\n * attribute as it changes,\r\n * * or an HTML element DOM event, so the DOM events are propagated through an observable.\r\n *\r\n * Some common use cases of `to()` bindings are presented below:\r\n *\r\n *\t\tconst bind = Template.bind( observable, emitter );\r\n *\r\n *\t\tnew Template( {\r\n *\t\t\ttag: 'p',\r\n *\t\t\tattributes: {\r\n *\t\t\t\t// class=\"...\" attribute gets bound to `observable#a`\r\n *\t\t\t\tclass: bind.to( 'a' )\r\n *\t\t\t},\r\n *\t\t\tchildren: [\r\n *\t\t\t\t// <p>...</p> gets bound to observable#b; always `toUpperCase()`.\r\n *\t\t\t\t{\r\n *\t\t\t\t\ttext: bind.to( 'b', ( value, node ) => value.toUpperCase() )\r\n *\t\t\t\t}\r\n *\t\t\t],\r\n *\t\t\ton: {\r\n *\t\t\t\tclick: [\r\n *\t\t\t\t\t// An observable will fire \"clicked\" upon \"click\" in the DOM.\r\n *\t\t\t\t\tbind.to( 'clicked' ),\r\n *\r\n *\t\t\t\t\t// A custom callback will be executed upon \"click\" in the DOM.\r\n *\t\t\t\t\tbind.to( () => {\r\n *\t\t\t\t\t\t...\r\n *\t\t\t\t\t} )\r\n *\t\t\t\t]\r\n *\t\t\t}\r\n *\t\t} ).render();\r\n *\r\n * Learn more about using `to()` in the {@link module:ui/template~TemplateValueSchema} and\r\n * {@link module:ui/template~TemplateListenerSchema}.\r\n *\r\n * @method #to\r\n * @param {String|Function} eventNameOrFunctionOrAttribute An attribute name of\r\n * {@link module:utils/observablemixin~Observable} or a DOM event name or an event callback.\r\n * @param {Function} [callback] Allows for processing of the value. Accepts `Node` and `value` as arguments.\r\n * @returns {module:ui/template~TemplateBinding}\r\n */\r\n\r\n/**\r\n * Binds an {@link module:utils/observablemixin~Observable observable} to an HTML element attribute or a text\r\n * node `textContent` so it remains in sync with the observable attribute as it changes.\r\n *\r\n * Unlike {@link module:ui/template~BindChain#to}, it controls the presence of the attribute or `textContent`\r\n * depending on the \"falseness\" of an {@link module:utils/observablemixin~Observable} attribute.\r\n *\r\n *\t\tconst bind = Template.bind( observable, emitter );\r\n *\r\n *\t\tnew Template( {\r\n *\t\t\ttag: 'input',\r\n *\t\t\tattributes: {\r\n *\t\t\t\t// <input checked> when `observable#a` is not undefined/null/false/''\r\n *\t\t\t\t// <input> when `observable#a` is undefined/null/false\r\n *\t\t\t\tchecked: bind.if( 'a' )\r\n *\t\t\t},\r\n *\t\t\tchildren: [\r\n *\t\t\t\t{\r\n *\t\t\t\t\t// <input>\"b-is-not-set\"</input> when `observable#b` is undefined/null/false/''\r\n *\t\t\t\t\t// <input></input> when `observable#b` is not \"falsy\"\r\n *\t\t\t\t\ttext: bind.if( 'b', 'b-is-not-set', ( value, node ) => !value )\r\n *\t\t\t\t}\r\n *\t\t\t]\r\n *\t\t} ).render();\r\n *\r\n * Learn more about using `if()` in the {@link module:ui/template~TemplateValueSchema}.\r\n *\r\n * @method #if\r\n * @param {String} attribute An attribute name of {@link module:utils/observablemixin~Observable} used in the binding.\r\n * @param {String} [valueIfTrue] Value set when the {@link module:utils/observablemixin~Observable} attribute is not\r\n * undefined/null/false/'' (empty string).\r\n * @param {Function} [callback] Allows for processing of the value. Accepts `Node` and `value` as arguments.\r\n * @returns {module:ui/template~TemplateBinding}\r\n */\r\n\r\n/**\r\n * The {@link module:ui/template~Template#_renderNode} configuration.\r\n *\r\n * @private\r\n * @interface module:ui/template~RenderData\r\n */\r\n\r\n/**\r\n * Tells {@link module:ui/template~Template#_renderNode} to render\r\n * children into `DocumentFragment` first and then append the fragment\r\n * to the parent element. It is a speed optimization.\r\n *\r\n * @member {Boolean} #intoFragment\r\n */\r\n\r\n/**\r\n * A node which is being rendered.\r\n *\r\n * @member {HTMLElement|Text} #node\r\n */\r\n\r\n/**\r\n * Indicates whether the {@module:ui/template~RenderNodeOptions#node} has\r\n * been provided by {@module:ui/template~Template#apply}.\r\n *\r\n * @member {Boolean} #isApplying\r\n */\r\n\r\n/**\r\n * An object storing the data that helps {@module:ui/template~Template#revert}\r\n * bringing back an element to its initial state, i.e. before\r\n * {@module:ui/template~Template#apply} was called.\r\n *\r\n * @member {Object} #revertData\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module ui/toolbar/balloon/balloontoolbar\r\n */\r\n\r\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\r\nimport ContextualBalloon from '../../panel/balloon/contextualballoon';\r\nimport ToolbarView from '../toolbarview';\r\nimport BalloonPanelView from '../../panel/balloon/balloonpanelview.js';\r\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\r\nimport Rect from '@ckeditor/ckeditor5-utils/src/dom/rect';\r\nimport normalizeToolbarConfig from '../normalizetoolbarconfig';\r\nimport { debounce } from 'lodash-es';\r\nimport ResizeObserver from '@ckeditor/ckeditor5-utils/src/dom/resizeobserver';\r\nimport toUnit from '@ckeditor/ckeditor5-utils/src/dom/tounit';\r\n\r\nconst toPx = toUnit( 'px' );\r\n\r\n/**\r\n * The contextual toolbar.\r\n *\r\n * It uses the {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon plugin}.\r\n *\r\n * @extends module:core/plugin~Plugin\r\n */\r\nexport default class BalloonToolbar extends Plugin {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get pluginName() {\r\n\t\treturn 'BalloonToolbar';\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get requires() {\r\n\t\treturn [ ContextualBalloon ];\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tconstructor( editor ) {\r\n\t\tsuper( editor );\r\n\r\n\t\t/**\r\n\t\t * A cached and normalized `config.balloonToolbar` object.\r\n\t\t *\r\n\t\t * @type {module:core/editor/editorconfig~EditorConfig#balloonToolbar}\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis._balloonConfig = normalizeToolbarConfig( editor.config.get( 'balloonToolbar' ) );\r\n\r\n\t\t/**\r\n\t\t * The toolbar view displayed in the balloon.\r\n\t\t *\r\n\t\t * @type {module:ui/toolbar/toolbarview~ToolbarView}\r\n\t\t */\r\n\t\tthis.toolbarView = this._createToolbarView();\r\n\r\n\t\t/**\r\n\t\t * Tracks the focus of the {@link module:core/editor/editorui~EditorUI#getEditableElement editable element}\r\n\t\t * and the {@link #toolbarView}. When both are blurred then the toolbar should hide.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @type {module:utils:focustracker~FocusTracker}\r\n\t\t */\r\n\t\tthis.focusTracker = new FocusTracker();\r\n\r\n\t\t// Wait for the EditorUI#init. EditableElement is not available before.\r\n\t\teditor.ui.once( 'ready', () => {\r\n\t\t\tthis.focusTracker.add( editor.ui.getEditableElement() );\r\n\t\t\tthis.focusTracker.add( this.toolbarView.element );\r\n\t\t} );\r\n\r\n\t\t/**\r\n\t\t * An instance of the resize observer that allows to respond to changes in editable's geometry\r\n\t\t * so the toolbar can stay within its boundaries (and group toolbar items that do not fit).\r\n\t\t *\r\n\t\t * **Note**: Used only when `shouldNotGroupWhenFull` was **not** set in the\r\n\t\t * {@link module:core/editor/editorconfig~EditorConfig#balloonToolbar configuration}.\r\n\t\t *\r\n\t\t * **Note:** Created in {@link #init}.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @member {module:utils/dom/resizeobserver~ResizeObserver}\r\n\t\t */\r\n\t\tthis._resizeObserver = null;\r\n\r\n\t\t/**\r\n\t\t * The contextual balloon plugin instance.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {module:ui/panel/balloon/contextualballoon~ContextualBalloon}\r\n\t\t */\r\n\t\tthis._balloon = editor.plugins.get( ContextualBalloon );\r\n\r\n\t\t/**\r\n\t\t * Fires {@link #event:_selectionChangeDebounced} event using `lodash#debounce`.\r\n\t\t *\r\n\t\t * This function is stored as a plugin property to make possible to cancel\r\n\t\t * trailing debounced invocation on destroy.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {Function}\r\n\t\t */\r\n\t\tthis._fireSelectionChangeDebounced = debounce( () => this.fire( '_selectionChangeDebounced' ), 200 );\r\n\r\n\t\t// The appearance of the BalloonToolbar method is event–driven.\r\n\t\t// It is possible to stop the #show event and this prevent the toolbar from showing up.\r\n\t\tthis.decorate( 'show' );\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tinit() {\r\n\t\tconst editor = this.editor;\r\n\t\tconst selection = editor.model.document.selection;\r\n\r\n\t\t// Show/hide the toolbar on editable focus/blur.\r\n\t\tthis.listenTo( this.focusTracker, 'change:isFocused', ( evt, name, isFocused ) => {\r\n\t\t\tconst isToolbarVisible = this._balloon.visibleView === this.toolbarView;\r\n\r\n\t\t\tif ( !isFocused && isToolbarVisible ) {\r\n\t\t\t\tthis.hide();\r\n\t\t\t} else if ( isFocused ) {\r\n\t\t\t\tthis.show();\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Hide the toolbar when the selection is changed by a direct change or has changed to collapsed.\r\n\t\tthis.listenTo( selection, 'change:range', ( evt, data ) => {\r\n\t\t\tif ( data.directChange || selection.isCollapsed ) {\r\n\t\t\t\tthis.hide();\r\n\t\t\t}\r\n\r\n\t\t\t// Fire internal `_selectionChangeDebounced` event to use it for showing\r\n\t\t\t// the toolbar after the selection stops changing.\r\n\t\t\tthis._fireSelectionChangeDebounced();\r\n\t\t} );\r\n\r\n\t\t// Show the toolbar when the selection stops changing.\r\n\t\tthis.listenTo( this, '_selectionChangeDebounced', () => {\r\n\t\t\tif ( this.editor.editing.view.document.isFocused ) {\r\n\t\t\t\tthis.show();\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tif ( !this._balloonConfig.shouldNotGroupWhenFull ) {\r\n\t\t\tthis.listenTo( editor, 'ready', () => {\r\n\t\t\t\tconst editableElement = editor.ui.view.editable.element;\r\n\r\n\t\t\t\t// Set #toolbarView's max-width on the initialization and update it on the editable resize.\r\n\t\t\t\tthis._resizeObserver = new ResizeObserver( editableElement, () => {\r\n\t\t\t\t\t// The max-width equals 90% of the editable's width for the best user experience.\r\n\t\t\t\t\t// The value keeps the balloon very close to the boundaries of the editable and limits the cases\r\n\t\t\t\t\t// when the balloon juts out from the editable element it belongs to.\r\n\t\t\t\t\tthis.toolbarView.maxWidth = toPx( new Rect( editableElement ).width * .9 );\r\n\t\t\t\t} );\r\n\t\t\t} );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates toolbar components based on given configuration.\r\n\t * This needs to be done when all plugins are ready.\r\n\t *\r\n\t * @inheritDoc\r\n\t */\r\n\tafterInit() {\r\n\t\tconst factory = this.editor.ui.componentFactory;\r\n\r\n\t\tthis.toolbarView.fillFromConfig( this._balloonConfig.items, factory );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates the toolbar view instance.\r\n\t *\r\n\t * @private\r\n\t * @returns {module:ui/toolbar/toolbarview~ToolbarView}\r\n\t */\r\n\t_createToolbarView() {\r\n\t\tconst shouldGroupWhenFull = !this._balloonConfig.shouldNotGroupWhenFull;\r\n\t\tconst toolbarView = new ToolbarView( this.editor.locale, {\r\n\t\t\tshouldGroupWhenFull\r\n\t\t} );\r\n\r\n\t\ttoolbarView.extendTemplate( {\r\n\t\t\tattributes: {\r\n\t\t\t\tclass: [ 'ck-toolbar_floating' ]\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\ttoolbarView.render();\r\n\r\n\t\treturn toolbarView;\r\n\t}\r\n\r\n\t/**\r\n\t * Shows the toolbar and attaches it to the selection.\r\n\t *\r\n\t * Fires {@link #event:show} event which can be stopped to prevent the toolbar from showing up.\r\n\t */\r\n\tshow() {\r\n\t\tconst editor = this.editor;\r\n\r\n\t\t// Do not add the toolbar to the balloon stack twice.\r\n\t\tif ( this._balloon.hasView( this.toolbarView ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Do not show the toolbar when the selection is collapsed.\r\n\t\tif ( editor.model.document.selection.isCollapsed ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Don not show the toolbar when all components inside are disabled\r\n\t\t// see https://github.com/ckeditor/ckeditor5-ui/issues/269.\r\n\t\tif ( Array.from( this.toolbarView.items ).every( item => item.isEnabled !== undefined && !item.isEnabled ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Update the toolbar position when the editor ui should be refreshed.\r\n\t\tthis.listenTo( this.editor.ui, 'update', () => {\r\n\t\t\tthis._balloon.updatePosition( this._getBalloonPositionData() );\r\n\t\t} );\r\n\r\n\t\t// Add the toolbar to the common editor contextual balloon.\r\n\t\tthis._balloon.add( {\r\n\t\t\tview: this.toolbarView,\r\n\t\t\tposition: this._getBalloonPositionData(),\r\n\t\t\tballoonClassName: 'ck-toolbar-container'\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * Hides the toolbar.\r\n\t */\r\n\thide() {\r\n\t\tif ( this._balloon.hasView( this.toolbarView ) ) {\r\n\t\t\tthis.stopListening( this.editor.ui, 'update' );\r\n\t\t\tthis._balloon.remove( this.toolbarView );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns positioning options for the {@link #_balloon}. They control the way balloon is attached\r\n\t * to the selection.\r\n\t *\r\n\t * @private\r\n\t * @returns {module:utils/dom/position~Options}\r\n\t */\r\n\t_getBalloonPositionData() {\r\n\t\tconst editor = this.editor;\r\n\t\tconst view = editor.editing.view;\r\n\t\tconst viewDocument = view.document;\r\n\t\tconst viewSelection = viewDocument.selection;\r\n\r\n\t\t// Get direction of the selection.\r\n\t\tconst isBackward = viewDocument.selection.isBackward;\r\n\r\n\t\treturn {\r\n\t\t\t// Because the target for BalloonPanelView is a Rect (not DOMRange), it's geometry will stay fixed\r\n\t\t\t// as the window scrolls. To let the BalloonPanelView follow such Rect, is must be continuously\r\n\t\t\t// computed and hence, the target is defined as a function instead of a static value.\r\n\t\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/195\r\n\t\t\ttarget: () => {\r\n\t\t\t\tconst range = isBackward ? viewSelection.getFirstRange() : viewSelection.getLastRange();\r\n\t\t\t\tconst rangeRects = Rect.getDomRangeRects( view.domConverter.viewRangeToDom( range ) );\r\n\r\n\t\t\t\t// Select the proper range rect depending on the direction of the selection.\r\n\t\t\t\tif ( isBackward ) {\r\n\t\t\t\t\treturn rangeRects[ 0 ];\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Ditch the zero-width \"orphan\" rect in the next line for the forward selection if there's\r\n\t\t\t\t\t// another one preceding it. It is not rendered as a selection by the web browser anyway.\r\n\t\t\t\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/308\r\n\t\t\t\t\tif ( rangeRects.length > 1 && rangeRects[ rangeRects.length - 1 ].width === 0 ) {\r\n\t\t\t\t\t\trangeRects.pop();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn rangeRects[ rangeRects.length - 1 ];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tpositions: getBalloonPositions( isBackward )\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tdestroy() {\r\n\t\tsuper.destroy();\r\n\r\n\t\tthis.stopListening();\r\n\t\tthis._fireSelectionChangeDebounced.cancel();\r\n\t\tthis.toolbarView.destroy();\r\n\t\tthis.focusTracker.destroy();\r\n\r\n\t\tif ( this._resizeObserver ) {\r\n\t\t\tthis._resizeObserver.destroy();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * This event is fired just before the toolbar shows up. Stopping this event will prevent this.\r\n\t *\r\n\t * @event show\r\n\t */\r\n\r\n\t/**\r\n\t * This is internal plugin event which is fired 200 ms after model selection last change.\r\n\t * This is to makes easy test debounced action without need to use `setTimeout`.\r\n\t *\r\n\t * @protected\r\n\t * @event _selectionChangeDebounced\r\n\t */\r\n}\r\n\r\n// Returns toolbar positions for the given direction of the selection.\r\n//\r\n// @private\r\n// @param {Boolean} isBackward\r\n// @returns {Array.<module:utils/dom/position~Position>}\r\nfunction getBalloonPositions( isBackward ) {\r\n\tconst defaultPositions = BalloonPanelView.defaultPositions;\r\n\r\n\treturn isBackward ? [\r\n\t\tdefaultPositions.northWestArrowSouth,\r\n\t\tdefaultPositions.northWestArrowSouthWest,\r\n\t\tdefaultPositions.northWestArrowSouthEast,\r\n\t\tdefaultPositions.northWestArrowSouthMiddleEast,\r\n\t\tdefaultPositions.northWestArrowSouthMiddleWest,\r\n\t\tdefaultPositions.southWestArrowNorth,\r\n\t\tdefaultPositions.southWestArrowNorthWest,\r\n\t\tdefaultPositions.southWestArrowNorthEast,\r\n\t\tdefaultPositions.southWestArrowNorthMiddleWest,\r\n\t\tdefaultPositions.southWestArrowNorthMiddleEast\r\n\t] : [\r\n\t\tdefaultPositions.southEastArrowNorth,\r\n\t\tdefaultPositions.southEastArrowNorthEast,\r\n\t\tdefaultPositions.southEastArrowNorthWest,\r\n\t\tdefaultPositions.southEastArrowNorthMiddleEast,\r\n\t\tdefaultPositions.southEastArrowNorthMiddleWest,\r\n\t\tdefaultPositions.northEastArrowSouth,\r\n\t\tdefaultPositions.northEastArrowSouthEast,\r\n\t\tdefaultPositions.northEastArrowSouthWest,\r\n\t\tdefaultPositions.northEastArrowSouthMiddleEast,\r\n\t\tdefaultPositions.northEastArrowSouthMiddleWest\r\n\t];\r\n}\r\n\r\n/**\r\n * Contextual toolbar configuration. Used by the {@link module:ui/toolbar/balloon/balloontoolbar~BalloonToolbar}\r\n * feature.\r\n *\r\n * ## Configuring toolbar items\r\n *\r\n *\t\tconst config = {\r\n *\t\t\tballoonToolbar: [ 'bold', 'italic', 'undo', 'redo' ]\r\n *\t\t};\r\n *\r\n * You can also use `'|'` to create a separator between groups of items:\r\n *\r\n *\t\tconst config = {\r\n *\t\t\tballoonToolbar: [ 'bold', 'italic', | 'undo', 'redo' ]\r\n *\t\t};\r\n *\r\n * Read also about configuring the main editor toolbar in {@link module:core/editor/editorconfig~EditorConfig#toolbar}.\r\n *\r\n * ## Configuring items grouping\r\n *\r\n * You can prevent automatic items grouping by setting the `shouldNotGroupWhenFull` option:\r\n *\r\n *\t\tconst config = {\r\n *\t\t\tballoonToolbar: {\r\n *\t\t\t\titems: [ 'bold', 'italic', 'undo', 'redo' ]\r\n *\t\t\t},\r\n *\t\t\tshouldNotGroupWhenFull: true\r\n *\t\t};\r\n *\r\n * @member {Array.<String>|Object} module:core/editor/editorconfig~EditorConfig#balloonToolbar\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module ui/toolbar/enabletoolbarkeyboardfocus\r\n */\r\n\r\n/**\r\n * Enables focus/blur toolbar navigation using `Alt+F10` and `Esc` keystrokes.\r\n *\r\n * @param {Object} options Options of the utility.\r\n * @param {*} options.origin A view to which the focus will return when `Esc` is pressed and\r\n * `options.toolbar` is focused.\r\n * @param {module:utils/keystrokehandler~KeystrokeHandler} options.originKeystrokeHandler A keystroke\r\n * handler to register `Alt+F10` keystroke.\r\n * @param {module:utils/focustracker~FocusTracker} options.originFocusTracker A focus tracker\r\n * for `options.origin`.\r\n * @param {module:ui/toolbar/toolbarview~ToolbarView} options.toolbar A toolbar which is to gain\r\n * focus when `Alt+F10` is pressed.\r\n * @param {Function} [options.beforeFocus] A callback executed before the `options.toolbar` gains focus\r\n * upon the `Alt+F10` keystroke.\r\n * @param {Function} [options.afterBlur] A callback executed after `options.toolbar` loses focus upon\r\n * `Esc` keystroke but before the focus goes back to `options.origin`.\r\n */\r\nexport default function enableToolbarKeyboardFocus( {\r\n\torigin,\r\n\toriginKeystrokeHandler,\r\n\toriginFocusTracker,\r\n\ttoolbar,\r\n\tbeforeFocus,\r\n\tafterBlur\r\n} ) {\r\n\t// Because toolbar items can get focus, the overall state of the toolbar must\r\n\t// also be tracked.\r\n\toriginFocusTracker.add( toolbar.element );\r\n\r\n\t// Focus the toolbar on the keystroke, if not already focused.\r\n\toriginKeystrokeHandler.set( 'Alt+F10', ( data, cancel ) => {\r\n\t\tif ( originFocusTracker.isFocused && !toolbar.focusTracker.isFocused ) {\r\n\t\t\tif ( beforeFocus ) {\r\n\t\t\t\tbeforeFocus();\r\n\t\t\t}\r\n\r\n\t\t\ttoolbar.focus();\r\n\r\n\t\t\tcancel();\r\n\t\t}\r\n\t} );\r\n\r\n\t// Blur the toolbar and bring the focus back to origin.\r\n\ttoolbar.keystrokes.set( 'Esc', ( data, cancel ) => {\r\n\t\tif ( toolbar.focusTracker.isFocused ) {\r\n\t\t\torigin.focus();\r\n\r\n\t\t\tif ( afterBlur ) {\r\n\t\t\t\tafterBlur();\r\n\t\t\t}\r\n\r\n\t\t\tcancel();\r\n\t\t}\r\n\t} );\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module ui/toolbar/normalizetoolbarconfig\r\n */\r\n\r\n/**\r\n * Normalizes the toolbar configuration (`config.toolbar`), which:\r\n *\r\n * * may be defined as an `Array`:\r\n *\r\n * \t\ttoolbar: [ 'heading', 'bold', 'italic', 'link', ... ]\r\n *\r\n * * or an `Object`:\r\n *\r\n *\t\ttoolbar: {\r\n *\t\t\titems: [ 'heading', 'bold', 'italic', 'link', ... ],\r\n *\t\t\t...\r\n *\t\t}\r\n *\r\n * * or may not be defined at all (`undefined`)\r\n *\r\n * and returns it in the object form.\r\n *\r\n * @param {Array|Object|undefined} config The value of `config.toolbar`.\r\n * @returns {Object} A normalized toolbar config object.\r\n */\r\nexport default function normalizeToolbarConfig( config ) {\r\n\tif ( Array.isArray( config ) ) {\r\n\t\treturn {\r\n\t\t\titems: config\r\n\t\t};\r\n\t}\r\n\r\n\tif ( !config ) {\r\n\t\treturn {\r\n\t\t\titems: []\r\n\t\t};\r\n\t}\r\n\r\n\treturn Object.assign( {\r\n\t\titems: []\r\n\t}, config );\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module ui/toolbar/toolbarseparatorview\r\n */\r\n\r\nimport View from '../view';\r\n\r\n/**\r\n * The toolbar separator view class.\r\n *\r\n * @extends module:ui/view~View\r\n */\r\nexport default class ToolbarSeparatorView extends View {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tconstructor( locale ) {\r\n\t\tsuper( locale );\r\n\r\n\t\tthis.setTemplate( {\r\n\t\t\ttag: 'span',\r\n\t\t\tattributes: {\r\n\t\t\t\tclass: [\r\n\t\t\t\t\t'ck',\r\n\t\t\t\t\t'ck-toolbar__separator'\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\n/**\r\n * @module ui/toolbar/toolbarview\r\n */\n/* globals console */\nimport View from '../view';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport FocusCycler from '../focuscycler';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\nimport ToolbarSeparatorView from './toolbarseparatorview';\nimport ResizeObserver from '@ckeditor/ckeditor5-utils/src/dom/resizeobserver';\nimport preventDefault from '../bindings/preventdefault.js';\nimport Rect from '@ckeditor/ckeditor5-utils/src/dom/rect';\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\nimport {\n    createDropdown,\n    addToolbarToDropdown\n} from '../dropdown/utils';\nimport { attachLinkToDocumentation } from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport verticalDotsIcon from '@ckeditor/ckeditor5-core/theme/icons/three-vertical-dots.svg';\nimport '../../theme/components/toolbar/toolbar.css';\n/**\r\n * The toolbar view class.\r\n *\r\n * @extends module:ui/view~View\r\n * @implements module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable\r\n */\nexport default class ToolbarView extends View {\n    /**\r\n\t * Creates an instance of the {@link module:ui/toolbar/toolbarview~ToolbarView} class.\r\n\t *\r\n\t * Also see {@link #render}.\r\n\t *\r\n\t * @param {module:utils/locale~Locale} locale The localization services instance.\r\n\t * @param {module:ui/toolbar/toolbarview~ToolbarOptions} [options] Configuration options of the toolbar.\r\n\t */\n    constructor(locale, options) {\n        super(locale);\n        const bind = this.bindTemplate;\n        const t = this.t;\n        /**\r\n\t\t * A reference to the options object passed to the constructor.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:ui/toolbar/toolbarview~ToolbarOptions}\r\n\t\t */\n        this.options = options || {};\n        /**\r\n\t\t * Label used by assistive technologies to describe this toolbar element.\r\n\t\t *\r\n\t\t * @default 'Editor toolbar'\r\n\t\t * @member {String} #ariaLabel\r\n\t\t */\n        this.set('ariaLabel', t('x'));\n        /**\r\n\t\t * The maximum width of the toolbar element.\r\n\t\t *\r\n\t\t * **Note**: When set to a specific value (e.g. `'200px'`), the value will affect the behavior of the\r\n\t\t * {@link module:ui/toolbar/toolbarview~ToolbarOptions#shouldGroupWhenFull}\r\n\t\t * option by changing the number of {@link #items} that will be displayed in the toolbar at a time.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @default 'auto'\r\n\t\t * @member {String} #maxWidth\r\n\t\t */\n        this.set('maxWidth', 'auto');\n        /**\r\n\t\t * A collection of toolbar items (buttons, dropdowns, etc.).\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:ui/viewcollection~ViewCollection}\r\n\t\t */\n        this.items = this.createCollection();\n        /**\r\n\t\t * Tracks information about the DOM focus in the toolbar.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:utils/focustracker~FocusTracker}\r\n\t\t */\n        this.focusTracker = new FocusTracker();\n        /**\r\n\t\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}\r\n\t\t * to handle keyboard navigation in the toolbar.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\r\n\t\t */\n        this.keystrokes = new KeystrokeHandler();\n        /**\r\n\t\t * An additional CSS class added to the {@link #element}.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @member {String} #class\r\n\t\t */\n        this.set('class');\n        /**\r\n\t\t * When set true, makes the toolbar look compact with {@link #element}.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @default false\r\n\t\t * @member {String} #isCompact\r\n\t\t */\n        this.set('isCompact', false);\n        /**\r\n\t\t * A (child) view containing {@link #items toolbar items}.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:ui/toolbar/toolbarview~ItemsView}\r\n\t\t */\n        this.itemsView = new ItemsView(locale);\n        /**\r\n\t\t * A top–level collection aggregating building blocks of the toolbar.\r\n\t\t *\r\n\t\t *\t┌───────────────── ToolbarView ─────────────────┐\r\n\t\t *\t| ┌──────────────── #children ────────────────┐ |\r\n\t\t *\t| |   ┌──────────── #itemsView ───────────┐   | |\r\n\t\t *\t| |   | [ item1 ] [ item2 ] ... [ itemN ] |   | |\r\n\t\t *\t| |   └──────────────────────────────────-┘   | |\r\n\t\t *\t| └───────────────────────────────────────────┘ |\r\n\t\t *\t└───────────────────────────────────────────────┘\r\n\t\t *\r\n\t\t * By default, it contains the {@link #itemsView} but it can be extended with additional\r\n\t\t * UI elements when necessary.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:ui/viewcollection~ViewCollection}\r\n\t\t */\n        this.children = this.createCollection();\n        this.children.add(this.itemsView);\n        /**\r\n\t\t * A collection of {@link #items} that take part in the focus cycling\r\n\t\t * (i.e. navigation using the keyboard). Usually, it contains a subset of {@link #items} with\r\n\t\t * some optional UI elements that also belong to the toolbar and should be focusable\r\n\t\t * by the user.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:ui/viewcollection~ViewCollection}\r\n\t\t */\n        this.focusables = this.createCollection();\n        /**\r\n\t\t * Controls the orientation of toolbar items. Only available when\r\n\t\t * {@link module:ui/toolbar/toolbarview~ToolbarOptions#shouldGroupWhenFull dynamic items grouping}\r\n\t\t * is **disabled**.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @member {Boolean} #isVertical\r\n\t\t */\n        /**\r\n\t\t * Helps cycling over {@link #focusables focusable items} in the toolbar.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @protected\r\n\t\t * @member {module:ui/focuscycler~FocusCycler}\r\n\t\t */\n        this._focusCycler = new FocusCycler({\n            focusables: this.focusables,\n            focusTracker: this.focusTracker,\n            keystrokeHandler: this.keystrokes,\n            actions: {\n                // Navigate toolbar items backwards using the arrow[left,up] keys.\n                focusPrevious: [\n                    'arrowleft',\n                    'arrowup'\n                ],\n                // Navigate toolbar items forwards using the arrow[right,down] keys.\n                focusNext: [\n                    'arrowright',\n                    'arrowdown'\n                ]\n            }\n        });\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-toolbar',\n                    bind.to('class'),\n                    bind.if('isCompact', 'ck-toolbar_compact')\n                ],\n                role: 'toolbar',\n                'aria-label': bind.to('ariaLabel'),\n                style: { maxWidth: bind.to('maxWidth') }\n            },\n            children: this.children,\n            on: {\n                // https://github.com/ckeditor/ckeditor5-ui/issues/206\n                mousedown: preventDefault(this)\n            }\n        });\n        /**\r\n\t\t * An instance of the active toolbar behavior that shapes its look and functionality.\r\n\t\t *\r\n\t\t * See {@link module:ui/toolbar/toolbarview~ToolbarBehavior} to learn more.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @readonly\r\n\t\t * @member {module:ui/toolbar/toolbarview~ToolbarBehavior}\r\n\t\t */\n        this._behavior = this.options.shouldGroupWhenFull ? new DynamicGrouping(this) : new StaticLayout(this);\n    }\n    /**\r\n\t * @inheritDoc\r\n\t */\n    render() {\n        super.render();\n        // Children added before rendering should be known to the #focusTracker.\n        for (const item of this.items) {\n            this.focusTracker.add(item.element);\n        }\n        this.items.on('add', (evt, item) => {\n            this.focusTracker.add(item.element);\n        });\n        this.items.on('remove', (evt, item) => {\n            this.focusTracker.remove(item.element);\n        });\n        // Start listening for the keystrokes coming from #element.\n        this.keystrokes.listenTo(this.element);\n        this._behavior.render(this);\n    }\n    /**\r\n\t * @inheritDoc\r\n\t */\n    destroy() {\n        this._behavior.destroy();\n        return super.destroy();\n    }\n    /**\r\n\t * Focuses the first focusable in {@link #focusables}.\r\n\t */\n    focus() {\n        this._focusCycler.focusFirst();\n    }\n    /**\r\n\t * Focuses the last focusable in {@link #focusables}.\r\n\t */\n    focusLast() {\n        this._focusCycler.focusLast();\n    }\n    /**\r\n\t * A utility that expands the plain toolbar configuration into\r\n\t * {@link module:ui/toolbar/toolbarview~ToolbarView#items} using a given component factory.\r\n\t *\r\n\t * @param {Array.<String>} config The toolbar items configuration.\r\n\t * @param {module:ui/componentfactory~ComponentFactory} factory A factory producing toolbar items.\r\n\t */\n    fillFromConfig(config, factory) {\n        config.map(name => {\n            if (name == '|') {\n                this.items.add(new ToolbarSeparatorView());\n            } else if (factory.has(name)) {\n                this.items.add(factory.create(name));\n            } else {\n                /**\r\n\t\t\t\t * There was a problem processing the configuration of the toolbar. The item with the given\r\n\t\t\t\t * name does not exist so it was omitted when rendering the toolbar.\r\n\t\t\t\t *\r\n\t\t\t\t * This warning usually shows up when the {@link module:core/plugin~Plugin} which is supposed\r\n\t\t\t\t * to provide a toolbar item has not been loaded or there is a typo in the configuration.\r\n\t\t\t\t *\r\n\t\t\t\t * Make sure the plugin responsible for this toolbar item is loaded and the toolbar configuration\r\n\t\t\t\t * is correct, e.g. {@link module:basic-styles/bold~Bold} is loaded for the `'bold'` toolbar item.\r\n\t\t\t\t *\r\n\t\t\t\t * You can use the following snippet to retrieve all available toolbar items:\r\n\t\t\t\t *\r\n\t\t\t\t *\t\tArray.from( editor.ui.componentFactory.names() );\r\n\t\t\t\t *\r\n\t\t\t\t * @error toolbarview-item-unavailable\r\n\t\t\t\t * @param {String} name The name of the component.\r\n\t\t\t\t */\n                console.warn(attachLinkToDocumentation('toolbarview-item-unavailable: The requested toolbar item is unavailable.'), { name });\n            }\n        });\n    }\n}\n/**\r\n * An inner block of the {@link module:ui/toolbar/toolbarview~ToolbarView} hosting its\r\n * {@link module:ui/toolbar/toolbarview~ToolbarView#items}.\r\n *\r\n * @private\r\n * @extends module:ui/view~View\r\n */\nclass ItemsView extends View {\n    /**\r\n\t * @inheritDoc\r\n\t */\n    constructor(locale) {\n        super(locale);\n        /**\r\n\t\t * A collection of items (buttons, dropdowns, etc.).\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:ui/viewcollection~ViewCollection}\r\n\t\t */\n        this.children = this.createCollection();\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-toolbar__items'\n                ]\n            },\n            children: this.children\n        });\n    }\n}\n/**\r\n * A toolbar behavior that makes it static and unresponsive to the changes of the environment.\r\n * At the same time, it also makes it possible to display a toolbar with a vertical layout\r\n * using the {@link module:ui/toolbar/toolbarview~ToolbarView#isVertical} property.\r\n *\r\n * @private\r\n * @implements module:ui/toolbar/toolbarview~ToolbarBehavior\r\n */\nclass StaticLayout {\n    /**\r\n\t * Creates an instance of the {@link module:ui/toolbar/toolbarview~StaticLayout} toolbar\r\n\t * behavior.\r\n\t *\r\n\t * @param {module:ui/toolbar/toolbarview~ToolbarView} view An instance of the toolbar that this behavior\r\n\t * is added to.\r\n\t */\n    constructor(view) {\n        const bind = view.bindTemplate;\n        // Static toolbar can be vertical when needed.\n        view.set('isVertical', false);\n        // 1:1 pass–through binding, all ToolbarView#items are visible.\n        view.itemsView.children.bindTo(view.items).using(item => item);\n        // 1:1 pass–through binding, all ToolbarView#items are focusable.\n        view.focusables.bindTo(view.items).using(item => item);\n        view.extendTemplate({\n            attributes: {\n                class: [// When vertical, the toolbar has an additional CSS class.\n                    bind.if('isVertical', 'ck-toolbar_vertical')]\n            }\n        });\n    }\n    /**\r\n\t * @inheritDoc\r\n\t */\n    render() {\n    }\n    /**\r\n\t * @inheritDoc\r\n\t */\n    destroy() {\n    }\n}\n/**\r\n * A toolbar behavior that makes the items respond to changes in the geometry.\r\n *\r\n * In a nutshell, it groups {@link module:ui/toolbar/toolbarview~ToolbarView#items}\r\n * that do not fit visually into a single row of the toolbar (due to limited space).\r\n * Items that do not fit are aggregated in a dropdown displayed at the end of the toolbar.\r\n *\r\n *\t┌──────────────────────────────────────── ToolbarView ──────────────────────────────────────────┐\r\n *\t| ┌─────────────────────────────────────── #children ─────────────────────────────────────────┐ |\r\n *\t| |   ┌─────── #itemsView ────────┐ ┌──────────────────────┐ ┌── #groupedItemsDropdown ───┐   | |\r\n *\t| |   |       #ungroupedItems     | | ToolbarSeparatorView | |        #groupedItems       |   | |\r\n *\t| |   └──────────────────────────-┘ └──────────────────────┘ └────────────────────────────┘   | |\r\n *\t| |                                  \\---------- only when toolbar items overflow --------/    | |\r\n *\t| └───────────────────────────────────────────────────────────────────────────────────────────┘ |\r\n *\t└───────────────────────────────────────────────────────────────────────────────────────────────┘\r\n *\r\n * @private\r\n * @implements module:ui/toolbar/toolbarview~ToolbarBehavior\r\n */\nclass DynamicGrouping {\n    /**\r\n\t * Creates an instance of the {@link module:ui/toolbar/toolbarview~DynamicGrouping} toolbar\r\n\t * behavior.\r\n\t *\r\n\t * @param {module:ui/toolbar/toolbarview~ToolbarView} view An instance of the toolbar that this behavior\r\n\t * is added to.\r\n\t */\n    constructor(view) {\n        /**\r\n\t\t * A collection of toolbar children.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:ui/viewcollection~ViewCollection}\r\n\t\t */\n        this.viewChildren = view.children;\n        /**\r\n\t\t * A collection of focusable toolbar elements.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:ui/viewcollection~ViewCollection}\r\n\t\t */\n        this.viewFocusables = view.focusables;\n        /**\r\n\t\t * A view containing toolbar items.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:ui/toolbar/toolbarview~ItemsView}\r\n\t\t */\n        this.viewItemsView = view.itemsView;\n        /**\r\n\t\t * Toolbar focus tracker.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:utils/focustracker~FocusTracker}\r\n\t\t */\n        this.viewFocusTracker = view.focusTracker;\n        /**\r\n\t\t * Toolbar locale.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:utils/locale~Locale}\r\n\t\t */\n        this.viewLocale = view.locale;\n        /**\r\n\t\t * Toolbar element.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {HTMLElement} #viewElement\r\n\t\t */\n        /**\r\n\t\t * A subset of toolbar {@link module:ui/toolbar/toolbarview~ToolbarView#items}.\r\n\t\t * Aggregates items that fit into a single row of the toolbar and were not {@link #groupedItems grouped}\r\n\t\t * into a {@link #groupedItemsDropdown dropdown}. Items of this collection are displayed in the\r\n\t\t * {@link module:ui/toolbar/toolbarview~ToolbarView#itemsView}.\r\n\t\t *\r\n\t\t * When none of the {@link module:ui/toolbar/toolbarview~ToolbarView#items} were grouped, it\r\n\t\t * matches the {@link module:ui/toolbar/toolbarview~ToolbarView#items} collection in size and order.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:ui/viewcollection~ViewCollection}\r\n\t\t */\n        this.ungroupedItems = view.createCollection();\n        /**\r\n\t\t * A subset of toolbar {@link module:ui/toolbar/toolbarview~ToolbarView#items}.\r\n\t\t * A collection of the toolbar items that do not fit into a single row of the toolbar.\r\n\t\t * Grouped items are displayed in a dedicated {@link #groupedItemsDropdown dropdown}.\r\n\t\t *\r\n\t\t * When none of the {@link module:ui/toolbar/toolbarview~ToolbarView#items} were grouped,\r\n\t\t * this collection is empty.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:ui/viewcollection~ViewCollection}\r\n\t\t */\n        this.groupedItems = view.createCollection();\n        /**\r\n\t\t * The dropdown that aggregates {@link #groupedItems grouped items} that do not fit into a single\r\n\t\t * row of the toolbar. It is displayed on demand as the last of\r\n\t\t * {@link module:ui/toolbar/toolbarview~ToolbarView#children toolbar children} and offers another\r\n\t\t * (nested) toolbar which displays items that would normally overflow.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:ui/dropdown/dropdownview~DropdownView}\r\n\t\t */\n        this.groupedItemsDropdown = this._createGroupedItemsDropdown();\n        /**\r\n\t\t * An instance of the resize observer that helps dynamically determine the geometry of the toolbar\r\n\t\t * and manage items that do not fit into a single row.\r\n\t\t *\r\n\t\t * **Note:** Created in {@link #_enableGroupingOnResize}.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:utils/dom/resizeobserver~ResizeObserver}\r\n\t\t */\n        this.resizeObserver = null;\n        /**\r\n\t\t * A cached value of the horizontal padding style used by {@link #_updateGrouping}\r\n\t\t * to manage the {@link module:ui/toolbar/toolbarview~ToolbarView#items} that do not fit into\r\n\t\t * a single toolbar line. This value can be reused between updates because it is unlikely that\r\n\t\t * the padding will change and re–using `Window.getComputedStyle()` is expensive.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Number}\r\n\t\t */\n        this.cachedPadding = null;\n        // Only those items that were not grouped are visible to the user.\n        view.itemsView.children.bindTo(this.ungroupedItems).using(item => item);\n        // Make sure all #items visible in the main space of the toolbar are \"focuscycleable\".\n        this.ungroupedItems.on('add', this._updateFocusCycleableItems.bind(this));\n        this.ungroupedItems.on('remove', this._updateFocusCycleableItems.bind(this));\n        // Make sure the #groupedItemsDropdown is also included in cycling when it appears.\n        view.children.on('add', this._updateFocusCycleableItems.bind(this));\n        view.children.on('remove', this._updateFocusCycleableItems.bind(this));\n        // ToolbarView#items is dynamic. When an item is added, it should be automatically\n        // represented in either grouped or ungrouped items at the right index.\n        // In other words #items == concat( #ungroupedItems, #groupedItems )\n        // (in length and order).\n        view.items.on('add', (evt, item, index) => {\n            if (index > this.ungroupedItems.length) {\n                this.groupedItems.add(item, index - this.ungroupedItems.length);\n            } else {\n                this.ungroupedItems.add(item, index);\n            }\n            // When a new ungrouped item joins in and lands in #ungroupedItems, there's a chance it causes\n            // the toolbar to overflow.\n            this._updateGrouping();\n        });\n        // When an item is removed from ToolbarView#items, it should be automatically\n        // removed from either grouped or ungrouped items.\n        view.items.on('remove', (evt, item, index) => {\n            if (index > this.ungroupedItems.length) {\n                this.groupedItems.remove(item);\n            } else {\n                this.ungroupedItems.remove(item);\n            }\n            // Whether removed from grouped or ungrouped items, there is a chance\n            // some new space is available and we could do some ungrouping.\n            this._updateGrouping();\n        });\n        view.extendTemplate({\n            attributes: {\n                class: [// To group items dynamically, the toolbar needs a dedicated CSS class.\n                    'ck-toolbar_grouping']\n            }\n        });\n    }\n    /**\r\n\t * Enables dynamic items grouping based on the dimensions of the toolbar.\r\n\t *\r\n\t * @param {module:ui/toolbar/toolbarview~ToolbarView} view An instance of the toolbar that this behavior\r\n\t * is added to.\r\n\t */\n    render(view) {\n        this.viewElement = view.element;\n        this._enableGroupingOnResize();\n        this._enableGroupingOnMaxWidthChange(view);\n    }\n    /**\r\n\t * Cleans up the internals used by this behavior.\r\n\t */\n    destroy() {\n        // The dropdown may not be in ToolbarView#children at the moment of toolbar destruction\n        // so let's make sure it's actually destroyed along with the toolbar.\n        this.groupedItemsDropdown.destroy();\n        this.resizeObserver.destroy();\n    }\n    /**\r\n\t * When called, it will check if any of the {@link #ungroupedItems} do not fit into a single row of the toolbar,\r\n\t * and it will move them to the {@link #groupedItems} when it happens.\r\n\t *\r\n\t * At the same time, it will also check if there is enough space in the toolbar for the first of the\r\n\t * {@link #groupedItems} to be returned back to {@link #ungroupedItems} and still fit into a single row\r\n\t * without the toolbar wrapping.\r\n\t *\r\n\t * @protected\r\n\t */\n    _updateGrouping() {\n        // Do no grouping–related geometry analysis when the toolbar is detached from visible DOM,\n        // for instance before #render(), or after render but without a parent or a parent detached\n        // from DOM. DOMRects won't work anyway and there will be tons of warning in the console and\n        // nothing else.\n        if (!this.viewElement.ownerDocument.body.contains(this.viewElement)) {\n            return;\n        }\n        let wereItemsGrouped;\n        // Group #items as long as some wrap to the next row. This will happen, for instance,\n        // when the toolbar is getting narrow and there is not enough space to display all items in\n        // a single row.\n        while (this._areItemsOverflowing) {\n            this._groupLastItem();\n            wereItemsGrouped = true;\n        }\n        // If none were grouped now but there were some items already grouped before,\n        // then, what the hell, maybe let's see if some of them can be ungrouped. This happens when,\n        // for instance, the toolbar is stretching and there's more space in it than before.\n        if (!wereItemsGrouped && this.groupedItems.length) {\n            // Ungroup items as long as none are overflowing or there are none to ungroup left.\n            while (this.groupedItems.length && !this._areItemsOverflowing) {\n                this._ungroupFirstItem();\n            }\n            // If the ungrouping ended up with some item wrapping to the next row,\n            // put it back to the group toolbar (\"undo the last ungroup\"). We don't know whether\n            // an item will wrap or not until we ungroup it (that's a DOM/CSS thing) so this\n            // clean–up is vital for the algorithm.\n            if (this._areItemsOverflowing) {\n                this._groupLastItem();\n            }\n        }\n    }\n    /**\r\n\t * Returns `true` when {@link module:ui/toolbar/toolbarview~ToolbarView#element} children visually overflow,\r\n\t * for instance if the toolbar is narrower than its members. Returns `false` otherwise.\r\n\t *\r\n\t * @private\r\n\t * @type {Boolean}\r\n\t */\n    get _areItemsOverflowing() {\n        // An empty toolbar cannot overflow.\n        if (!this.ungroupedItems.length) {\n            return false;\n        }\n        const element = this.viewElement;\n        const uiLanguageDirection = this.viewLocale.uiLanguageDirection;\n        const lastChildRect = new Rect(element.lastChild);\n        const toolbarRect = new Rect(element);\n        if (!this.cachedPadding) {\n            const computedStyle = global.window.getComputedStyle(element);\n            const paddingProperty = uiLanguageDirection === 'ltr' ? 'paddingRight' : 'paddingLeft';\n            // parseInt() is essential because of quirky floating point numbers logic and DOM.\n            // If the padding turned out too big because of that, the grouped items dropdown would\n            // always look (from the Rect perspective) like it overflows (while it's not).\n            this.cachedPadding = Number.parseInt(computedStyle[paddingProperty]);\n        }\n        if (uiLanguageDirection === 'ltr') {\n            return lastChildRect.right > toolbarRect.right - this.cachedPadding;\n        } else {\n            return lastChildRect.left < toolbarRect.left + this.cachedPadding;\n        }\n    }\n    /**\r\n\t * Enables the functionality that prevents {@link #ungroupedItems} from overflowing (wrapping to the next row)\r\n\t * upon resize when there is little space available. Instead, the toolbar items are moved to the\r\n\t * {@link #groupedItems} collection and displayed in a dropdown at the end of the row (which has its own nested toolbar).\r\n\t *\r\n\t * When called, the toolbar will automatically analyze the location of its {@link #ungroupedItems} and \"group\"\r\n\t * them in the dropdown if necessary. It will also observe the browser window for size changes in\r\n\t * the future and respond to them by grouping more items or reverting already grouped back, depending\r\n\t * on the visual space available.\r\n\t *\r\n\t * @private\r\n\t */\n    _enableGroupingOnResize() {\n        let previousWidth;\n        // TODO: Consider debounce.\n        this.resizeObserver = new ResizeObserver(this.viewElement, entry => {\n            if (!previousWidth || previousWidth !== entry.contentRect.width) {\n                this._updateGrouping();\n                previousWidth = entry.contentRect.width;\n            }\n        });\n        this._updateGrouping();\n    }\n    /**\r\n\t * Enables the grouping functionality, just like {@link #_enableGroupingOnResize} but the difference is that\r\n\t * it listens to the changes of {@link module:ui/toolbar/toolbarview~ToolbarView#maxWidth} instead.\r\n\t *\r\n\t * @private\r\n\t */\n    _enableGroupingOnMaxWidthChange(view) {\n        view.on('change:maxWidth', () => {\n            this._updateGrouping();\n        });\n    }\n    /**\r\n\t * When called, it will remove the last item from {@link #ungroupedItems} and move it back\r\n\t * to the {@link #groupedItems} collection.\r\n\t *\r\n\t * The opposite of {@link #_ungroupFirstItem}.\r\n\t *\r\n\t * @private\r\n\t */\n    _groupLastItem() {\n        if (!this.groupedItems.length) {\n            this.viewChildren.add(new ToolbarSeparatorView());\n            this.viewChildren.add(this.groupedItemsDropdown);\n            this.viewFocusTracker.add(this.groupedItemsDropdown.element);\n        }\n        this.groupedItems.add(this.ungroupedItems.remove(this.ungroupedItems.last), 0);\n    }\n    /**\r\n\t * Moves the very first item belonging to {@link #groupedItems} back\r\n\t * to the {@link #ungroupedItems} collection.\r\n\t *\r\n\t * The opposite of {@link #_groupLastItem}.\r\n\t *\r\n\t * @private\r\n\t */\n    _ungroupFirstItem() {\n        this.ungroupedItems.add(this.groupedItems.remove(this.groupedItems.first));\n        if (!this.groupedItems.length) {\n            this.viewChildren.remove(this.groupedItemsDropdown);\n            this.viewChildren.remove(this.viewChildren.last);\n            this.viewFocusTracker.remove(this.groupedItemsDropdown.element);\n        }\n    }\n    /**\r\n\t * Creates the {@link #groupedItemsDropdown} that hosts the members of the {@link #groupedItems}\r\n\t * collection when there is not enough space in the toolbar to display all items in a single row.\r\n\t *\r\n\t * @private\r\n\t * @returns {module:ui/dropdown/dropdownview~DropdownView}\r\n\t */\n    _createGroupedItemsDropdown() {\n        const locale = this.viewLocale;\n        const t = locale.t;\n        const dropdown = createDropdown(locale);\n        dropdown.class = 'ck-toolbar__grouped-dropdown';\n        // Make sure the dropdown never sticks out to the left/right. It should be under the main toolbar.\n        // (https://github.com/ckeditor/ckeditor5/issues/5608)\n        dropdown.panelPosition = locale.uiLanguageDirection === 'ltr' ? 'sw' : 'se';\n        addToolbarToDropdown(dropdown, []);\n        dropdown.buttonView.set({\n            label: t('y'),\n            tooltip: true,\n            icon: verticalDotsIcon\n        });\n        // 1:1 pass–through binding.\n        dropdown.toolbarView.items.bindTo(this.groupedItems).using(item => item);\n        return dropdown;\n    }\n    /**\r\n\t * Updates the {@link module:ui/toolbar/toolbarview~ToolbarView#focusables focus–cycleable items}\r\n\t * collection so it represents the up–to–date state of the UI from the perspective of the user.\r\n\t *\r\n\t * For instance, the {@link #groupedItemsDropdown} can show up and hide but when it is visible,\r\n\t * it must be subject to focus cycling in the toolbar.\r\n\t *\r\n\t * See the {@link module:ui/toolbar/toolbarview~ToolbarView#focusables collection} documentation\r\n\t * to learn more about the purpose of this method.\r\n\t *\r\n\t * @private\r\n\t */\n    _updateFocusCycleableItems() {\n        this.viewFocusables.clear();\n        this.ungroupedItems.map(item => {\n            this.viewFocusables.add(item);\n        });\n        if (this.groupedItems.length) {\n            this.viewFocusables.add(this.groupedItemsDropdown);\n        }\n    }\n}    /**\r\n * Options passed to the {@link module:ui/toolbar/toolbarview~ToolbarView#constructor} of the toolbar.\r\n *\r\n * @interface module:ui/toolbar/toolbarview~ToolbarOptions\r\n */\n     /**\r\n * When set to `true`, the toolbar will automatically group {@link module:ui/toolbar/toolbarview~ToolbarView#items} that\r\n * would normally wrap to the next line when there is not enough space to display them in a single row, for\r\n * instance, if the parent container of the toolbar is narrow.\r\n *\r\n * Also see: {@link module:ui/toolbar/toolbarview~ToolbarView#maxWidth}.\r\n *\r\n * @member {Boolean} module:ui/toolbar/toolbarview~ToolbarOptions#shouldGroupWhenFull\r\n */\n     /**\r\n * A class interface defining the behavior of the {@link module:ui/toolbar/toolbarview~ToolbarView}.\r\n *\r\n * Toolbar behaviors extend its look and functionality and have an impact on the\r\n * {@link module:ui/toolbar/toolbarview~ToolbarView#element} template or\r\n * {@link module:ui/toolbar/toolbarview~ToolbarView#render rendering}. They can be enabled\r\n * conditionally, e.g. depending on the configuration of the toolbar.\r\n *\r\n * @private\r\n * @interface module:ui/toolbar/toolbarview~ToolbarBehavior\r\n */\n     /**\r\n * Creates a new toolbar behavior instance.\r\n *\r\n * The instance is created in the {@link module:ui/toolbar/toolbarview~ToolbarView#constructor} of the toolbar.\r\n * This is the right place to extend the {@link module:ui/toolbar/toolbarview~ToolbarView#template} of\r\n * the toolbar, define extra toolbar properties, etc.\r\n *\r\n * @method #constructor\r\n * @param {module:ui/toolbar/toolbarview~ToolbarView} view An instance of the toolbar that this behavior is added to.\r\n */\n     /**\r\n * A method called after the toolbar has been {@link module:ui/toolbar/toolbarview~ToolbarView#render rendered}.\r\n * It can be used to, for example, customize the behavior of the toolbar when its {@link module:ui/toolbar/toolbarview~ToolbarView#element}\r\n * is available.\r\n *\r\n * @readonly\r\n * @member {Function} #render\r\n * @param {module:ui/toolbar/toolbarview~ToolbarView} view An instance of the toolbar being rendered.\r\n */\n     /**\r\n * A method called after the toolbar has been {@link module:ui/toolbar/toolbarview~ToolbarView#destroy destroyed}.\r\n * It allows cleaning up after the toolbar behavior, for instance, this is the right place to detach\r\n * event listeners, free up references, etc.\r\n *\r\n * @readonly\r\n * @member {Function} #destroy\r\n */","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module ui/tooltip/tooltipview\r\n */\r\n\r\nimport View from '../view';\r\n\r\nimport '../../theme/components/tooltip/tooltip.css';\r\n\r\n/**\r\n * The tooltip view class.\r\n *\r\n * @extends module:ui/view~View\r\n */\r\nexport default class TooltipView extends View {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tconstructor( locale ) {\r\n\t\tsuper( locale );\r\n\r\n\t\t/**\r\n\t\t * The text of the tooltip visible to the user.\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @member {String} #text\r\n\t\t */\r\n\t\tthis.set( 'text', '' );\r\n\r\n\t\t/**\r\n\t\t * The position of the tooltip (south or north).\r\n\t\t *\r\n\t\t *\t\t+-----------+\r\n\t\t *\t\t|   north   |\r\n\t\t *\t\t+-----------+\r\n\t\t *\t\t      V\r\n\t\t *\t\t  [element]\r\n\t\t *\r\n\t\t *\t\t  [element]\r\n\t\t *\t\t      ^\r\n\t\t *\t\t+-----------+\r\n\t\t *\t\t|   south   |\r\n\t\t *\t\t+-----------+\r\n\t\t *\r\n\t\t * @observable\r\n\t\t * @default 's'\r\n\t\t * @member {'s'|'n'} #position\r\n\t\t */\r\n\t\tthis.set( 'position', 's' );\r\n\r\n\t\tconst bind = this.bindTemplate;\r\n\r\n\t\tthis.setTemplate( {\r\n\t\t\ttag: 'span',\r\n\t\t\tattributes: {\r\n\t\t\t\tclass: [\r\n\t\t\t\t\t'ck',\r\n\t\t\t\t\t'ck-tooltip',\r\n\t\t\t\t\tbind.to( 'position', position => 'ck-tooltip_' + position ),\r\n\t\t\t\t\tbind.if( 'text', 'ck-hidden', value => !value.trim() )\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttag: 'span',\r\n\r\n\t\t\t\t\tattributes: {\r\n\t\t\t\t\t\tclass: [\r\n\t\t\t\t\t\t\t'ck',\r\n\t\t\t\t\t\t\t'ck-tooltip__text'\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tchildren: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttext: bind.to( 'text' )\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t} );\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module ui/view\r\n */\r\n\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\nimport ViewCollection from './viewcollection';\r\nimport Template from './template';\r\nimport DomEmitterMixin from '@ckeditor/ckeditor5-utils/src/dom/emittermixin';\r\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\r\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\r\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\r\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\r\n\r\nimport '../theme/globals/globals.css';\r\n\r\n/**\r\n * The basic view class, which represents an HTML element created out of a\r\n * {@link module:ui/view~View#template}. Views are building blocks of the user interface and handle\r\n * interaction\r\n *\r\n * Views {@link module:ui/view~View#registerChild aggregate} children in\r\n * {@link module:ui/view~View#createCollection collections} and manage the life cycle of DOM\r\n * listeners e.g. by handling rendering and destruction.\r\n *\r\n * See the {@link module:ui/template~TemplateDefinition} syntax to learn more about shaping view\r\n * elements, attributes and listeners.\r\n *\r\n *\t\tclass SampleView extends View {\r\n *\t\t\tconstructor( locale ) {\r\n *\t\t\t\tsuper( locale );\r\n *\r\n *\t\t\t\tconst bind = this.bindTemplate;\r\n *\r\n *\t\t\t\t// Views define their interface (state) using observable attributes.\r\n *\t\t\t\tthis.set( 'elementClass', 'bar' );\r\n *\r\n *\t\t\t\tthis.setTemplate( {\r\n *\t\t\t\t\ttag: 'p',\r\n *\r\n *\t\t\t\t\t// The element of the view can be defined with its children.\r\n *\t\t\t\t\tchildren: [\r\n *\t\t\t\t\t\t'Hello',\r\n *\t\t\t\t\t\t{\r\n *\t\t\t\t\t\t\ttag: 'b',\r\n *\t\t\t\t\t\t\tchildren: [ 'world!' ]\r\n *\t\t\t\t\t\t}\r\n *\t\t\t\t\t],\r\n *\t\t\t\t\tattributes: {\r\n *\t\t\t\t\t\tclass: [\r\n *\t\t\t\t\t\t\t'foo',\r\n *\r\n *\t\t\t\t\t\t\t// Observable attributes control the state of the view in DOM.\r\n *\t\t\t\t\t\t\tbind.to( 'elementClass' )\r\n *\t\t\t\t\t\t]\r\n *\t\t\t\t\t},\r\n *\t\t\t\t\ton: {\r\n *\t\t\t\t\t\t// Views listen to DOM events and propagate them.\r\n *\t\t\t\t\t\tclick: bind.to( 'clicked' )\r\n *\t\t\t\t\t}\r\n *\t\t\t\t} );\r\n *\t\t\t}\r\n *\t\t}\r\n *\r\n *\t\tconst view = new SampleView( locale );\r\n *\r\n *\t\tview.render();\r\n *\r\n *\t\t// Append <p class=\"foo bar\">Hello<b>world</b></p> to the <body>\r\n *\t\tdocument.body.appendChild( view.element );\r\n *\r\n *\t\t// Change the class attribute to <p class=\"foo baz\">Hello<b>world</b></p>\r\n *\t\tview.elementClass = 'baz';\r\n *\r\n *\t\t// Respond to the \"click\" event in DOM by executing a custom action.\r\n *\t\tview.on( 'clicked', () => {\r\n *\t\t\tconsole.log( 'The view has been clicked!' );\r\n *\t\t} );\r\n *\r\n * @mixes module:utils/observablemixin~ObservableMixin\r\n */\r\nexport default class View {\r\n\t/**\r\n\t * Creates an instance of the {@link module:ui/view~View} class.\r\n\t *\r\n\t * Also see {@link #render}.\r\n\t *\r\n\t * @param {module:utils/locale~Locale} [locale] The localization services instance.\r\n\t */\r\n\tconstructor( locale ) {\r\n\t\t/**\r\n\t\t * An HTML element of the view. `null` until {@link #render rendered}\r\n\t\t * from the {@link #template}.\r\n\t\t *\r\n\t\t *\t\tclass SampleView extends View {\r\n\t\t *\t\t\tconstructor() {\r\n\t\t *\t\t\t\tsuper();\r\n\t\t *\r\n\t\t *\t\t\t\t// A template instance the #element will be created from.\r\n\t\t *\t\t\t\tthis.setTemplate( {\r\n\t\t *\t\t\t\t\ttag: 'p'\r\n\t\t *\r\n\t\t *\t\t\t\t\t// ...\r\n\t\t *\t\t\t\t} );\r\n\t\t *\t\t\t}\r\n\t\t *\t\t}\r\n\t\t *\r\n\t\t *\t\tconst view = new SampleView();\r\n\t\t *\r\n\t\t *\t\t// Renders the #template.\r\n\t\t *\t\tview.render();\r\n\t\t *\r\n\t\t *\t\t// Append the HTML element of the view to <body>.\r\n\t\t *\t\tdocument.body.appendChild( view.element );\r\n\t\t *\r\n\t\t * **Note**: The element of the view can also be assigned directly:\r\n\t\t *\r\n\t\t *\t\tview.element = document.querySelector( '#my-container' );\r\n\t\t *\r\n\t\t * @member {HTMLElement}\r\n\t\t */\r\n\t\tthis.element = null;\r\n\r\n\t\t/**\r\n\t\t * Set `true` when the view has already been {@link module:ui/view~View#render rendered}.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Boolean} #isRendered\r\n\t\t */\r\n\t\tthis.isRendered = false;\r\n\r\n\t\t/**\r\n\t\t * A set of tools to localize the user interface.\r\n\t\t *\r\n\t\t * Also see {@link module:core/editor/editor~Editor#locale}.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {module:utils/locale~Locale}\r\n\t\t */\r\n\t\tthis.locale = locale;\r\n\r\n\t\t/**\r\n\t\t * Shorthand for {@link module:utils/locale~Locale#t}.\r\n\t\t *\r\n\t\t * Note: If {@link #locale} instance hasn't been passed to the view this method may not\r\n\t\t * be available.\r\n\t\t *\r\n\t\t * @see module:utils/locale~Locale#t\r\n\t\t * @method\r\n\t\t */\r\n\t\tthis.t = locale && locale.t;\r\n\r\n\t\t/**\r\n\t\t * Collections registered with {@link #createCollection}.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @member {Set.<module:ui/viewcollection~ViewCollection>}\r\n\t\t */\r\n\t\tthis._viewCollections = new Collection();\r\n\r\n\t\t/**\r\n\t\t * A collection of view instances, which have been added directly\r\n\t\t * into the {@link module:ui/template~Template#children}.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @member {module:ui/viewcollection~ViewCollection}\r\n\t\t */\r\n\t\tthis._unboundChildren = this.createCollection();\r\n\r\n\t\t// Pass parent locale to its children.\r\n\t\tthis._viewCollections.on( 'add', ( evt, collection ) => {\r\n\t\t\tcollection.locale = locale;\r\n\t\t} );\r\n\r\n\t\t/**\r\n\t\t * Template of this view. It provides the {@link #element} representing\r\n\t\t * the view in DOM, which is {@link #render rendered}.\r\n\t\t *\r\n\t\t * @member {module:ui/template~Template} #template\r\n\t\t */\r\n\r\n\t\t/**\r\n\t\t * Cached {@link module:ui/template~BindChain bind chain} object created by the\r\n\t\t * {@link #template}. See {@link #bindTemplate}.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Object} #_bindTemplate\r\n\t\t */\r\n\r\n\t\tthis.decorate( 'render' );\r\n\t}\r\n\r\n\t/**\r\n\t * Shorthand for {@link module:ui/template~Template.bind}, a binding\r\n\t * {@link module:ui/template~BindChain interface} pre–configured for the view instance.\r\n\t *\r\n\t * It provides {@link module:ui/template~BindChain#to `to()`} and\r\n\t * {@link module:ui/template~BindChain#if `if()`} methods that initialize bindings with\r\n\t * observable attributes and attach DOM listeners.\r\n\t *\r\n\t *\t\tclass SampleView extends View {\r\n\t *\t\t\tconstructor( locale ) {\r\n\t *\t\t\t\tsuper( locale );\r\n\t *\r\n\t *\t\t\t\tconst bind = this.bindTemplate;\r\n\t *\r\n\t *\t\t\t\t// These {@link module:utils/observablemixin~Observable observable} attributes will control\r\n\t *\t\t\t\t// the state of the view in DOM.\r\n\t *\t\t\t\tthis.set( {\r\n\t *\t\t\t\t\telementClass: 'foo',\r\n\t *\t\t\t\t \tisEnabled: true\r\n\t *\t\t\t\t } );\r\n\t *\r\n\t *\t\t\t\tthis.setTemplate( {\r\n\t *\t\t\t\t\ttag: 'p',\r\n\t *\r\n\t *\t\t\t\t\tattributes: {\r\n\t *\t\t\t\t\t\t// The class HTML attribute will follow elementClass\r\n\t *\t\t\t\t\t\t// and isEnabled view attributes.\r\n\t *\t\t\t\t\t\tclass: [\r\n\t *\t\t\t\t\t\t\tbind.to( 'elementClass' )\r\n\t *\t\t\t\t\t\t\tbind.if( 'isEnabled', 'present-when-enabled' )\r\n\t *\t\t\t\t\t\t]\r\n\t *\t\t\t\t\t},\r\n\t *\r\n\t *\t\t\t\t\ton: {\r\n\t *\t\t\t\t\t\t// The view will fire the \"clicked\" event upon clicking <p> in DOM.\r\n\t *\t\t\t\t\t\tclick: bind.to( 'clicked' )\r\n\t *\t\t\t\t\t}\r\n\t *\t\t\t\t} );\r\n\t *\t\t\t}\r\n\t *\t\t}\r\n\t *\r\n\t * @method #bindTemplate\r\n\t */\r\n\tget bindTemplate() {\r\n\t\tif ( this._bindTemplate ) {\r\n\t\t\treturn this._bindTemplate;\r\n\t\t}\r\n\r\n\t\treturn ( this._bindTemplate = Template.bind( this, this ) );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new collection of views, which can be used as\r\n\t * {@link module:ui/template~Template#children} of this view.\r\n\t *\r\n\t *\t\tclass SampleView extends View {\r\n\t *\t\t\tconstructor( locale ) {\r\n\t *\t\t\t\tsuper( locale );\r\n\t *\r\n\t *\t\t\t\tthis.items = this.createCollection();\r\n \t *\r\n\t *\t\t\t\tthis.setTemplate( {\r\n\t *\t\t\t\t\ttag: 'p',\r\n\t *\r\n\t *\t\t\t\t\t// `items` collection will render here.\r\n\t *\t\t\t\t\tchildren: this.items\r\n\t *\t\t\t\t} );\r\n\t *\t\t\t}\r\n\t *\t\t}\r\n\t *\r\n\t *\t\tconst view = new SampleView( locale );\r\n\t *\t\tconst child = new ChildView( locale );\r\n\t *\r\n\t *\t\tview.render();\r\n\t *\r\n\t *\t\t// It will append <p></p> to the <body>.\r\n\t *\t\tdocument.body.appendChild( view.element );\r\n\t *\r\n\t *\t\t// From now on the child is nested under its parent, which is also reflected in DOM.\r\n\t *\t\t// <p><child#element></p>\r\n\t *\t\tview.items.add( child );\r\n\t *\r\n\t * @returns {module:ui/viewcollection~ViewCollection} A new collection of view instances.\r\n\t */\r\n\tcreateCollection() {\r\n\t\tconst collection = new ViewCollection();\r\n\r\n\t\tthis._viewCollections.add( collection );\r\n\r\n\t\treturn collection;\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a new child view under the view instance. Once registered, a child\r\n\t * view is managed by its parent, including {@link #render rendering}\r\n\t * and {@link #destroy destruction}.\r\n\t *\r\n\t * To revert this, use {@link #deregisterChild}.\r\n\t *\r\n\t *\t\tclass SampleView extends View {\r\n\t *\t\t\tconstructor( locale ) {\r\n\t *\t\t\t\tsuper( locale );\r\n\t *\r\n\t *\t\t\t\tthis.childA = new SomeChildView( locale );\r\n\t *\t\t\t\tthis.childB = new SomeChildView( locale );\r\n\t *\r\n\t *\t\t\t\tthis.setTemplate( { tag: 'p' } );\r\n\t *\r\n\t *\t\t\t\t// Register the children.\r\n\t *\t\t\t\tthis.registerChild( [ this.childA, this.childB ] );\r\n\t *\t\t\t}\r\n\t *\r\n\t *\t\t\trender() {\r\n\t *\t\t\t\tsuper.render();\r\n\t *\r\n\t *\t\t\t\tthis.element.appendChild( this.childA.element );\r\n\t *\t\t\t\tthis.element.appendChild( this.childB.element );\r\n\t *\t\t\t}\r\n\t *\t\t}\r\n\t *\r\n\t *\t\tconst view = new SampleView( locale );\r\n\t *\r\n\t *\t\tview.render();\r\n\t *\r\n\t *\t\t// Will append <p><childA#element><b></b><childB#element></p>.\r\n\t *\t\tdocument.body.appendChild( view.element );\r\n\t *\r\n\t * **Note**: There's no need to add child views if they're already referenced in the\r\n\t * {@link #template}:\r\n\t *\r\n\t *\t\tclass SampleView extends View {\r\n\t *\t\t\tconstructor( locale ) {\r\n\t *\t\t\t\tsuper( locale );\r\n\t *\r\n\t *\t\t\t\tthis.childA = new SomeChildView( locale );\r\n\t *\t\t\t\tthis.childB = new SomeChildView( locale );\r\n\t *\r\n\t *\t\t\t\tthis.setTemplate( {\r\n\t *\t\t\t\t\ttag: 'p',\r\n\t *\r\n \t *\t\t\t\t\t// These children will be added automatically. There's no\r\n \t *\t\t\t\t\t// need to call {@link #registerChild} for any of them.\r\n\t *\t\t\t\t\tchildren: [ this.childA, this.childB ]\r\n\t *\t\t\t\t} );\r\n\t *\t\t\t}\r\n\t *\r\n\t *\t\t\t// ...\r\n\t *\t\t}\r\n\t *\r\n\t * @param {module:ui/view~View|Iterable.<module:ui/view~View>} children Children views to be registered.\r\n\t */\r\n\tregisterChild( children ) {\r\n\t\tif ( !isIterable( children ) ) {\r\n\t\t\tchildren = [ children ];\r\n\t\t}\r\n\r\n\t\tfor ( const child of children ) {\r\n\t\t\tthis._unboundChildren.add( child );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The opposite of {@link #registerChild}. Removes a child view from this view instance.\r\n\t * Once removed, the child is no longer managed by its parent, e.g. it can safely\r\n\t * become a child of another parent view.\r\n\t *\r\n\t * @see #registerChild\r\n\t * @param {module:ui/view~View|Iterable.<module:ui/view~View>} children Child views to be removed.\r\n\t */\r\n\tderegisterChild( children ) {\r\n\t\tif ( !isIterable( children ) ) {\r\n\t\t\tchildren = [ children ];\r\n\t\t}\r\n\r\n\t\tfor ( const child of children ) {\r\n\t\t\tthis._unboundChildren.remove( child );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the {@link #template} of the view with with given definition.\r\n\t *\r\n\t * A shorthand for:\r\n\t *\r\n\t *\t\tview.setTemplate( definition );\r\n\t *\r\n\t * @param {module:ui/template~TemplateDefinition} definition Definition of view's template.\r\n\t */\r\n\tsetTemplate( definition ) {\r\n\t\tthis.template = new Template( definition );\r\n\t}\r\n\r\n\t/**\r\n\t * {@link module:ui/template~Template.extend Extends} the {@link #template} of the view with\r\n\t * with given definition.\r\n\t *\r\n\t * A shorthand for:\r\n\t *\r\n\t *\t\tTemplate.extend( view.template, definition );\r\n\t *\r\n\t * **Note**: Is requires the {@link #template} to be already set. See {@link #setTemplate}.\r\n\t *\r\n\t * @param {module:ui/template~TemplateDefinition} definition Definition which\r\n\t * extends the {@link #template}.\r\n\t */\r\n\textendTemplate( definition ) {\r\n\t\tTemplate.extend( this.template, definition );\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively renders the view.\r\n\t *\r\n\t * Once the view is rendered:\r\n\t * * the {@link #element} becomes an HTML element out of {@link #template},\r\n\t * * the {@link #isRendered} flag is set `true`.\r\n\t *\r\n\t * **Note**: The children of the view:\r\n\t * * defined directly in the {@link #template}\r\n\t * * residing in collections created by the {@link #createCollection} method,\r\n\t * * and added by {@link #registerChild}\r\n\t * are also rendered in the process.\r\n\t *\r\n\t * In general, `render()` method is the right place to keep the code which refers to the\r\n\t * {@link #element} and should be executed at the very beginning of the view's life cycle.\r\n\t *\r\n\t * It is possible to {@link module:ui/template~Template.extend} the {@link #template} before\r\n\t * the view is rendered. To allow an early customization of the view (e.g. by its parent),\r\n\t * such references should be done in `render()`.\r\n\t *\r\n\t *\t\tclass SampleView extends View {\r\n\t *\t\t\tconstructor() {\r\n\t *\t\t\t\tthis.setTemplate( {\r\n\t *\t\t\t\t\t// ...\r\n\t *\t\t\t\t} );\r\n\t *\t\t\t},\r\n\t *\r\n\t *\t\t\trender() {\r\n\t *\t\t\t\t// View#element becomes available.\r\n\t *\t\t\t\tsuper.render();\r\n\t *\r\n\t *\t\t\t\t// The \"scroll\" listener depends on #element.\r\n\t *\t\t\t\tthis.listenTo( window, 'scroll', () => {\r\n\t *\t\t\t\t\t// A reference to #element would render the #template and make it non-extendable.\r\n\t *\t\t\t\t\tif ( window.scrollY > 0 ) {\r\n\t *\t\t\t\t\t\tthis.element.scrollLeft = 100;\r\n\t *\t\t\t\t\t} else {\r\n\t *\t\t\t\t\t\tthis.element.scrollLeft = 0;\r\n\t *\t\t\t\t\t}\r\n\t *\t\t\t\t} );\r\n\t *\t\t\t}\r\n\t *\t\t}\r\n\t *\r\n\t *\t\tconst view = new SampleView();\r\n\t *\r\n\t *\t\t// Let's customize the view before it gets rendered.\r\n\t *\t\tview.extendTemplate( {\r\n\t *\t\t\tattributes: {\r\n\t *\t\t\t\tclass: [\r\n\t *\t\t\t\t\t'additional-class'\r\n\t *\t\t\t\t]\r\n\t *\t\t\t}\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\t// Late rendering allows customization of the view.\r\n\t *\t\tview.render();\r\n\t */\r\n\trender() {\r\n\t\tif ( this.isRendered ) {\r\n\t\t\t/**\r\n\t\t\t * This View has already been rendered.\r\n\t\t\t *\r\n\t\t\t * @error ui-view-render-rendered\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'ui-view-render-already-rendered: This View has already been rendered.',\r\n\t\t\t\tthis\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\t// Render #element of the view.\r\n\t\tif ( this.template ) {\r\n\t\t\tthis.element = this.template.render();\r\n\r\n\t\t\t// Auto–register view children from #template.\r\n\t\t\tthis.registerChild( this.template.getViews() );\r\n\t\t}\r\n\r\n\t\tthis.isRendered = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively destroys the view instance and child views added by {@link #registerChild} and\r\n\t * residing in collections created by the {@link #createCollection}.\r\n\t *\r\n\t * Destruction disables all event listeners:\r\n\t * * created on the view, e.g. `view.on( 'event', () => {} )`,\r\n\t * * defined in the {@link #template} for DOM events.\r\n\t */\r\n\tdestroy() {\r\n\t\tthis.stopListening();\r\n\r\n\t\tthis._viewCollections.map( c => c.destroy() );\r\n\r\n\t\t// Template isn't obligatory for views.\r\n\t\tif ( this.template && this.template._revertData ) {\r\n\t\t\tthis.template.revert( this.element );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Event fired by the {@link #render} method. Actual rendering is executed as a listener to\r\n\t * this event with the default priority.\r\n\t *\r\n\t * See {@link module:utils/observablemixin~ObservableMixin#decorate} for more information and samples.\r\n\t *\r\n\t * @event render\r\n\t */\r\n}\r\n\r\nmix( View, DomEmitterMixin );\r\nmix( View, ObservableMixin );\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module ui/viewcollection\r\n */\r\n\r\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\r\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\r\n\r\n/**\r\n * Collects {@link module:ui/view~View} instances.\r\n *\r\n *\t\tconst parentView = new ParentView( locale );\r\n *\t\tconst collection = new ViewCollection( locale );\r\n *\r\n *\t\tcollection.setParent( parentView.element );\r\n *\r\n *\t\tconst viewA = new ChildView( locale );\r\n *\t\tconst viewB = new ChildView( locale );\r\n *\r\n * View collection renders and manages view {@link module:ui/view~View#element elements}:\r\n *\r\n *\t\tcollection.add( viewA );\r\n *\t\tcollection.add( viewB );\r\n *\r\n *\t\tconsole.log( parentView.element.firsChild ); // -> viewA.element\r\n *\t\tconsole.log( parentView.element.lastChild ); // -> viewB.element\r\n *\r\n * It {@link module:ui/viewcollection~ViewCollection#delegate propagates} DOM events too:\r\n *\r\n *\t\t// Delegate #click and #keydown events from viewA and viewB to the parentView.\r\n *\t\tcollection.delegate( 'click' ).to( parentView );\r\n *\r\n *\t\tparentView.on( 'click', ( evt ) => {\r\n *\t\t\tconsole.log( `${ evt.source } has been clicked.` );\r\n *\t\t} );\r\n *\r\n *\t\t// This event will be delegated to the parentView.\r\n *\t\tviewB.fire( 'click' );\r\n *\r\n * **Note**: A view collection can be used directly in the {@link module:ui/template~TemplateDefinition definition}\r\n * of a {@link module:ui/template~Template template}.\r\n *\r\n * @extends module:utils/collection~Collection\r\n * @mixes module:utils/observablemixin~ObservableMixin\r\n */\r\nexport default class ViewCollection extends Collection {\r\n\t/**\r\n\t * Creates a new instance of the {@link module:ui/viewcollection~ViewCollection}.\r\n\t *\r\n\t * @param {module:utils/locale~Locale} [locale] The {@link module:core/editor/editor~Editor editor's locale} instance.\r\n\t */\r\n\tconstructor( locale ) {\r\n\t\tsuper( {\r\n\t\t\t// An #id Number attribute should be legal and not break the `ViewCollection` instance.\r\n\t\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/93\r\n\t\t\tidProperty: 'viewUid'\r\n\t\t} );\r\n\r\n\t\t// Handle {@link module:ui/view~View#element} in DOM when a new view is added to the collection.\r\n\t\tthis.on( 'add', ( evt, view, index ) => {\r\n\t\t\tif ( !view.isRendered ) {\r\n\t\t\t\tview.render();\r\n\t\t\t}\r\n\r\n\t\t\tif ( view.element && this._parentElement ) {\r\n\t\t\t\tthis._parentElement.insertBefore( view.element, this._parentElement.children[ index ] );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Handle {@link module:ui/view~View#element} in DOM when a view is removed from the collection.\r\n\t\tthis.on( 'remove', ( evt, view ) => {\r\n\t\t\tif ( view.element && this._parentElement ) {\r\n\t\t\t\tview.element.remove();\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t/**\r\n\t\t * The {@link module:core/editor/editor~Editor#locale editor's locale} instance.\r\n\t\t * See the view {@link module:ui/view~View#locale locale} property.\r\n\t\t *\r\n\t\t * @member {module:utils/locale~Locale}\r\n\t\t */\r\n\t\tthis.locale = locale;\r\n\r\n\t\t/**\r\n\t\t * A parent element within which child views are rendered and managed in DOM.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @member {HTMLElement}\r\n\t\t */\r\n\t\tthis._parentElement = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys the view collection along with child views.\r\n\t * See the view {@link module:ui/view~View#destroy} method.\r\n\t */\r\n\tdestroy() {\r\n\t\tthis.map( view => view.destroy() );\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the parent HTML element of this collection. When parent is set, {@link #add adding} and\r\n\t * {@link #remove removing} views in the collection synchronizes their\r\n\t * {@link module:ui/view~View#element elements} in the parent element.\r\n\t *\r\n\t * @param {HTMLElement} element A new parent element.\r\n\t */\r\n\tsetParent( elementOrDocFragment ) {\r\n\t\tthis._parentElement = elementOrDocFragment;\r\n\t}\r\n\r\n\t/**\r\n\t * Delegates selected events coming from within views in the collection to any\r\n\t * {@link module:utils/emittermixin~Emitter}.\r\n\t *\r\n\t * For the following views and collection:\r\n\t *\r\n\t *\t\tconst viewA = new View();\r\n\t *\t\tconst viewB = new View();\r\n\t *\t\tconst viewC = new View();\r\n\t *\r\n\t *\t\tconst views = parentView.createCollection();\r\n\t *\r\n\t *\t\tviews.delegate( 'eventX' ).to( viewB );\r\n\t *\t\tviews.delegate( 'eventX', 'eventY' ).to( viewC );\r\n\t *\r\n\t *\t\tviews.add( viewA );\r\n\t *\r\n\t * the `eventX` is delegated (fired by) `viewB` and `viewC` along with `customData`:\r\n\t *\r\n\t *\t\tviewA.fire( 'eventX', customData );\r\n\t *\r\n\t * and `eventY` is delegated (fired by) `viewC` along with `customData`:\r\n\t *\r\n\t *\t\tviewA.fire( 'eventY', customData );\r\n\t *\r\n\t * See {@link module:utils/emittermixin~Emitter#delegate}.\r\n\t *\r\n\t * @param {...String} events {@link module:ui/view~View} event names to be delegated to another\r\n\t * {@link module:utils/emittermixin~Emitter}.\r\n\t * @returns {Object}\r\n\t * @returns {Function} return.to A function which accepts the destination of\r\n\t * {@link module:utils/emittermixin~Emitter#delegate delegated} events.\r\n\t */\r\n\tdelegate( ...events ) {\r\n\t\tif ( !events.length || !isStringArray( events ) ) {\r\n\t\t\t/**\r\n\t\t\t * All event names must be strings.\r\n\t\t\t *\r\n\t\t\t * @error ui-viewcollection-delegate-wrong-events\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'ui-viewcollection-delegate-wrong-events: All event names must be strings.',\r\n\t\t\t\tthis\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\t/**\r\n\t\t\t * Selects destination for {@link module:utils/emittermixin~Emitter#delegate} events.\r\n\t\t\t *\r\n\t\t\t * @memberOf module:ui/viewcollection~ViewCollection#delegate\r\n\t\t\t * @function module:ui/viewcollection~ViewCollection#delegate.to\r\n\t\t\t * @param {module:utils/emittermixin~Emitter} dest An `Emitter` instance which is\r\n\t\t\t * the destination for delegated events.\r\n\t\t\t */\r\n\t\t\tto: dest => {\r\n\t\t\t\t// Activate delegating on existing views in this collection.\r\n\t\t\t\tfor ( const view of this ) {\r\n\t\t\t\t\tfor ( const evtName of events ) {\r\n\t\t\t\t\t\tview.delegate( evtName ).to( dest );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Activate delegating on future views in this collection.\r\n\t\t\t\tthis.on( 'add', ( evt, view ) => {\r\n\t\t\t\t\tfor ( const evtName of events ) {\r\n\t\t\t\t\t\tview.delegate( evtName ).to( dest );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\r\n\t\t\t\t// Deactivate delegating when view is removed from this collection.\r\n\t\t\t\tthis.on( 'remove', ( evt, view ) => {\r\n\t\t\t\t\tfor ( const evtName of events ) {\r\n\t\t\t\t\t\tview.stopDelegating( evtName, dest );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a child view from the collection. If the {@link #setParent parent element} of the\r\n\t * collection has been set, the {@link module:ui/view~View#element element} of the view is also removed\r\n\t * in DOM, reflecting the order of the collection.\r\n\t *\r\n\t * See the {@link #add} method.\r\n\t *\r\n\t * @method #remove\r\n\t * @param {module:ui/view~View|Number|String} subject The view to remove, its id or index in the collection.\r\n\t * @returns {Object} The removed view.\r\n\t */\r\n}\r\n\r\n// Check if all entries of the array are of `String` type.\r\n//\r\n// @private\r\n// @param {Array} arr An array to be checked.\r\n// @returns {Boolean}\r\nfunction isStringArray( arr ) {\r\n\treturn arr.every( a => typeof a == 'string' );\r\n}\r\n","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./button.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./switchbutton.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./colorgrid.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./dropdown.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./listdropdown.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./toolbardropdown.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./editorui.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./icon.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./inputtext.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./label.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./labeledinput.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./list.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./balloonpanel.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./balloonrotator.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./fakepanel.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./toolbar.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./tooltip.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","var api = require(\"!../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../postcss-loader/src/index.js??ref--5-1!./globals.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path class=\\\"ck-icon__fill\\\" d=\\\"M16.935 5.328a2 2 0 0 1 0 2.829l-7.778 7.778a2 2 0 0 1-2.829 0L3.5 13.107a1.999 1.999 0 1 1 2.828-2.829l.707.707a1 1 0 0 0 1.414 0l5.658-5.657a2 2 0 0 1 2.828 0z\\\"/><path d=\\\"M14.814 6.035L8.448 12.4a1 1 0 0 1-1.414 0l-1.413-1.415A1 1 0 1 0 4.207 12.4l2.829 2.829a1 1 0 0 0 1.414 0l7.778-7.778a1 1 0 1 0-1.414-1.415z\\\"/></svg>\"","export default \"<svg viewBox=\\\"0 0 10 10\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M.941 4.523a.75.75 0 1 1 1.06-1.06l3.006 3.005 3.005-3.005a.75.75 0 1 1 1.06 1.06l-3.549 3.55a.75.75 0 0 1-1.168-.136L.941 4.523z\\\"/></svg>\"","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M8.537 14.813a.888.888 0 1 1-1.254-1.255L10.84 10 7.283 6.442a.888.888 0 1 1 1.254-1.255L12.74 9.39a.888.888 0 0 1-.16 1.382l-4.043 4.042z\\\"/></svg>\"","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M11.463 5.187a.888.888 0 1 1 1.254 1.255L9.16 10l3.557 3.557a.888.888 0 1 1-1.254 1.255L7.26 10.61a.888.888 0 0 1 .16-1.382l4.043-4.042z\\\"/></svg>\"","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module undo/basecommand\r\n */\r\n\r\nimport Command from '@ckeditor/ckeditor5-core/src/command';\r\nimport { transformSets } from '@ckeditor/ckeditor5-engine/src/model/operation/transform';\r\n\r\n/**\r\n * Base class for undo feature commands: {@link module:undo/undocommand~UndoCommand} and {@link module:undo/redocommand~RedoCommand}.\r\n *\r\n * @protected\r\n * @extends module:core/command~Command\r\n */\r\nexport default class BaseCommand extends Command {\r\n\tconstructor( editor ) {\r\n\t\tsuper( editor );\r\n\r\n\t\t/**\r\n\t\t * Stack of items stored by the command. These are pairs of:\r\n\t\t *\r\n\t\t * * {@link module:engine/model/batch~Batch batch} saved by the command,\r\n\t\t * * {@link module:engine/model/selection~Selection selection} state at the moment of saving the batch.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @member {Array} #_stack\r\n\t\t */\r\n\t\tthis._stack = [];\r\n\r\n\t\t/**\r\n\t\t * Stores all batches that were created by this command.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @member {WeakSet.<module:engine/model/batch~Batch>} #_createdBatches\r\n\t\t */\r\n\t\tthis._createdBatches = new WeakSet();\r\n\r\n\t\t// Refresh state, so the command is inactive right after initialization.\r\n\t\tthis.refresh();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\trefresh() {\r\n\t\tthis.isEnabled = this._stack.length > 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Stores a batch in the command, together with the selection state of the {@link module:engine/model/document~Document document}\r\n\t * created by the editor which this command is registered to.\r\n\t *\r\n\t * @param {module:engine/model/batch~Batch} batch The batch to add.\r\n\t */\r\n\taddBatch( batch ) {\r\n\t\tconst docSelection = this.editor.model.document.selection;\r\n\r\n\t\tconst selection = {\r\n\t\t\tranges: docSelection.hasOwnRange ? Array.from( docSelection.getRanges() ) : [],\r\n\t\t\tisBackward: docSelection.isBackward\r\n\t\t};\r\n\r\n\t\tthis._stack.push( { batch, selection } );\r\n\t\tthis.refresh();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all items from the stack.\r\n\t */\r\n\tclearStack() {\r\n\t\tthis._stack = [];\r\n\t\tthis.refresh();\r\n\t}\r\n\r\n\t/**\r\n\t * Restores the {@link module:engine/model/document~Document#selection document selection} state after a batch was undone.\r\n\t *\r\n\t * @protected\r\n\t * @param {Array.<module:engine/model/range~Range>} ranges Ranges to be restored.\r\n\t * @param {Boolean} isBackward A flag describing whether the restored range was selected forward or backward.\r\n\t * @param {Array.<module:engine/model/operation/operation~Operation>} operations Operations which has been applied\r\n\t * since selection has been stored.\r\n\t */\r\n\t_restoreSelection( ranges, isBackward, operations ) {\r\n\t\tconst model = this.editor.model;\r\n\t\tconst document = model.document;\r\n\r\n\t\t// This will keep the transformed selection ranges.\r\n\t\tconst selectionRanges = [];\r\n\r\n\t\t// Transform all ranges from the restored selection.\r\n\t\tfor ( const range of ranges ) {\r\n\t\t\tconst transformed = transformSelectionRange( range, operations );\r\n\r\n\t\t\t// For each `range` from `ranges`, we take only one transformed range.\r\n\t\t\t// This is because we want to prevent situation where single-range selection\r\n\t\t\t// got transformed to multi-range selection. We will take the first range that\r\n\t\t\t// is not in the graveyard.\r\n\t\t\tconst newRange = transformed.find(\r\n\t\t\t\trange => range.start.root != document.graveyard\r\n\t\t\t);\r\n\r\n\t\t\t// `transformedRange` might be `undefined` if transformed range ended up in graveyard.\r\n\t\t\tif ( newRange ) {\r\n\t\t\t\tselectionRanges.push( newRange );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// `selectionRanges` may be empty if all ranges ended up in graveyard. If that is the case, do not restore selection.\r\n\t\tif ( selectionRanges.length ) {\r\n\t\t\tmodel.change( writer => {\r\n\t\t\t\twriter.setSelection( selectionRanges, { backward: isBackward } );\r\n\t\t\t} );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Undoes a batch by reversing that batch, transforming reversed batch and finally applying it.\r\n\t * This is a helper method for {@link #execute}.\r\n\t *\r\n\t * @protected\r\n\t * @param {module:engine/model/batch~Batch} batchToUndo The batch to be undone.\r\n\t * @param {module:engine/model/batch~Batch} undoingBatch The batch that will contain undoing changes.\r\n\t */\r\n\t_undo( batchToUndo, undoingBatch ) {\r\n\t\tconst model = this.editor.model;\r\n\t\tconst document = model.document;\r\n\r\n\t\t// All changes done by the command execution will be saved as one batch.\r\n\t\tthis._createdBatches.add( undoingBatch );\r\n\r\n\t\tconst operationsToUndo = batchToUndo.operations.slice().filter( operation => operation.isDocumentOperation );\r\n\t\toperationsToUndo.reverse();\r\n\r\n\t\t// We will process each operation from `batchToUndo`, in reverse order. If there were operations A, B and C in undone batch,\r\n\t\t// we need to revert them in reverse order, so first C' (reversed C), then B', then A'.\r\n\t\tfor ( const operationToUndo of operationsToUndo ) {\r\n\t\t\tconst nextBaseVersion = operationToUndo.baseVersion + 1;\r\n\t\t\tconst historyOperations = Array.from( document.history.getOperations( nextBaseVersion ) );\r\n\r\n\t\t\tconst transformedSets = transformSets(\r\n\t\t\t\t[ operationToUndo.getReversed() ],\r\n\t\t\t\thistoryOperations,\r\n\t\t\t\t{\r\n\t\t\t\t\tuseRelations: true,\r\n\t\t\t\t\tdocument: this.editor.model.document,\r\n\t\t\t\t\tpadWithNoOps: false,\r\n\t\t\t\t\tforceWeakRemove: true\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\tconst reversedOperations = transformedSets.operationsA;\r\n\r\n\t\t\t// After reversed operation has been transformed by all history operations, apply it.\r\n\t\t\tfor ( const operation of reversedOperations ) {\r\n\t\t\t\t// Before applying, add the operation to the `undoingBatch`.\r\n\t\t\t\tundoingBatch.addOperation( operation );\r\n\t\t\t\tmodel.applyOperation( operation );\r\n\r\n\t\t\t\tdocument.history.setOperationAsUndone( operationToUndo, operation );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Transforms given range `range` by given `operations`.\r\n// Returns an array containing one or more ranges, which are result of the transformation.\r\nfunction transformSelectionRange( range, operations ) {\r\n\tconst transformed = range.getTransformedByOperations( operations );\r\n\r\n\t// After `range` got transformed, we have an array of ranges. Some of those\r\n\t// ranges may be \"touching\" -- they can be next to each other and could be merged.\r\n\t// First, we have to sort those ranges to assure that they are in order.\r\n\ttransformed.sort( ( a, b ) => a.start.isBefore( b.start ) ? -1 : 1 );\r\n\r\n\t// Then, we check if two consecutive ranges are touching.\r\n\tfor ( let i = 1; i < transformed.length; i++ ) {\r\n\t\tconst a = transformed[ i - 1 ];\r\n\t\tconst b = transformed[ i ];\r\n\r\n\t\tif ( a.end.isTouching( b.start ) ) {\r\n\t\t\t// And join them together if they are.\r\n\t\t\ta.end = b.end;\r\n\t\t\ttransformed.splice( i, 1 );\r\n\t\t\ti--;\r\n\t\t}\r\n\t}\r\n\r\n\treturn transformed;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module undo/redocommand\r\n */\r\n\r\nimport BaseCommand from './basecommand';\r\n\r\n/**\r\n * The redo command stores {@link module:engine/model/batch~Batch batches} that were used to undo a batch by\r\n * {@link module:undo/undocommand~UndoCommand}. It is able to redo a previously undone batch by reversing the undoing\r\n * batches created by `UndoCommand`. The reversed batch is transformed by all the batches from\r\n * {@link module:engine/model/document~Document#history history} that happened after the reversed undo batch.\r\n *\r\n * The redo command also takes care of restoring the {@link module:engine/model/document~Document#selection document selection}.\r\n *\r\n * @extends module:undo/basecommand~BaseCommand\r\n */\r\nexport default class RedoCommand extends BaseCommand {\r\n\t/**\r\n\t * Executes the command. This method reverts the last {@link module:engine/model/batch~Batch batch} added to\r\n\t * the command's stack, applies the reverted and transformed version on the\r\n\t * {@link module:engine/model/document~Document document} and removes the batch from the stack.\r\n\t * Then, it restores the {@link module:engine/model/document~Document#selection document selection}.\r\n\t *\r\n\t * @fires execute\r\n\t */\r\n\texecute() {\r\n\t\tconst item = this._stack.pop();\r\n\t\tconst redoingBatch = this.editor.model.createBatch( 'transparent' );\r\n\r\n\t\t// All changes have to be done in one `enqueueChange` callback so other listeners will not step between consecutive\r\n\t\t// operations, or won't do changes to the document before selection is properly restored.\r\n\t\tthis.editor.model.enqueueChange( redoingBatch, () => {\r\n\t\t\tconst lastOperation = item.batch.operations[ item.batch.operations.length - 1 ];\r\n\t\t\tconst nextBaseVersion = lastOperation.baseVersion + 1;\r\n\t\t\tconst operations = this.editor.model.document.history.getOperations( nextBaseVersion );\r\n\r\n\t\t\tthis._restoreSelection( item.selection.ranges, item.selection.isBackward, operations );\r\n\t\t\tthis._undo( item.batch, redoingBatch );\r\n\t\t} );\r\n\r\n\t\tthis.refresh();\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module undo/undo\r\n */\r\n\r\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\r\nimport UndoEditing from './undoediting';\r\nimport UndoUI from './undoui';\r\n\r\n/**\r\n * The undo feature.\r\n *\r\n * This is a \"glue\" plugin which loads the {@link module:undo/undoediting~UndoEditing undo editing feature}\r\n * and {@link module:undo/undoui~UndoUI undo UI feature}.\r\n *\r\n * Below is the explanation of the undo mechanism working together with {@link module:engine/model/history~History History}:\r\n *\r\n * Whenever a {@link module:engine/model/operation/operation~Operation operation} is applied to the\r\n * {@link module:engine/model/document~Document document}, it is saved to `History` as is.\r\n * The {@link module:engine/model/batch~Batch batch} that owns that operation is also saved, in\r\n * {@link module:undo/undocommand~UndoCommand}, together with the selection that was present in the document before the\r\n * operation was applied. A batch is saved instead of the operation because changes are undone batch-by-batch, not operation-by-operation\r\n * and a batch is seen as one undo step.\r\n *\r\n * After some changes happen to the document, the `History` and `UndoCommand` stack can be represented as follows:\r\n *\r\n *\t\t    History                            Undo stack\r\n *\t\t==============             ==================================\r\n *\t\t[operation A1]                         [batch A]\r\n *\t\t[operation B1]                         [batch B]\r\n *\t\t[operation B2]                         [batch C]\r\n *\t\t[operation C1]\r\n *\t\t[operation C2]\r\n *\t\t[operation B3]\r\n *\t\t[operation C3]\r\n *\r\n * Where operations starting with the same letter are from same batch.\r\n *\r\n * Undoing a batch means that a set of operations which will reverse the effects of that batch needs to be generated.\r\n * For example, if a batch added several letters, undoing the batch should remove them. It is important to apply undoing\r\n * operations in the reversed order, so if a batch has operation `X`, `Y`, `Z`, reversed operations `Zr`, `Yr` and `Xr`\r\n * need to be applied. Otherwise reversed operation `Xr` would operate on a wrong document state, because operation `X`\r\n * does not know that operations `Y` and `Z` happened.\r\n *\r\n * After operations from an undone batch got {@link module:engine/model/operation/operation~Operation#getReversed reversed},\r\n * one needs to make sure if they are ready to be applied. In the scenario above, operation `C3` is the last operation and `C3r`\r\n * bases on up-to-date document state, so it can be applied to the document.\r\n *\r\n *\t\t     History                             Undo stack\r\n *\t\t=================             ==================================\r\n *\t\t[ operation A1  ]                      [  batch A  ]\r\n *\t\t[ operation B1  ]                      [  batch B  ]\r\n *\t\t[ operation B2  ]             [   processing undoing batch C   ]\r\n *\t\t[ operation C1  ]\r\n *\t\t[ operation C2  ]\r\n *\t\t[ operation B3  ]\r\n *\t\t[ operation C3  ]\r\n *\t\t[ operation C3r ]\r\n *\r\n * Next is operation `C2`, reversed to `C2r`. `C2r` bases on `C2`, so it bases on the wrong document state. It needs to be\r\n * transformed by operations from history that happened after it, so it \"knows\" about them. Let us assume that `C2' = C2r * B3 * C3 * C3r`,\r\n * where `*` means \"transformed by\". Rest of operations from that batch are processed in the same fashion.\r\n *\r\n *\t\t     History                             Undo stack                                      Redo stack\r\n *\t\t=================             ==================================             ==================================\r\n *\t\t[ operation A1  ]                      [  batch A  ]                                    [ batch Cr ]\r\n *\t\t[ operation B1  ]                      [  batch B  ]\r\n *\t\t[ operation B2  ]\r\n *\t\t[ operation C1  ]\r\n *\t\t[ operation C2  ]\r\n *\t\t[ operation B3  ]\r\n *\t\t[ operation C3  ]\r\n *\t\t[ operation C3r ]\r\n *\t\t[ operation C2' ]\r\n *\t\t[ operation C1' ]\r\n *\r\n * Selective undo works on the same basis, however, instead of undoing the last batch in the undo stack, any batch can be undone.\r\n * The same algorithm applies: operations from a batch (i.e. `A1`) are reversed and then transformed by operations stored in history.\r\n *\r\n * Redo also is very similar to undo. It has its own stack that is filled with undoing (reversed batches). Operations from\r\n * batch that is re-done are reversed-back, transformed in proper order and applied to the document.\r\n *\r\n *\t\t     History                             Undo stack                                      Redo stack\r\n *\t\t=================             ==================================             ==================================\r\n *\t\t[ operation A1  ]                      [  batch A  ]\r\n *\t\t[ operation B1  ]                      [  batch B  ]\r\n *\t\t[ operation B2  ]                      [ batch Crr ]\r\n *\t\t[ operation C1  ]\r\n *\t\t[ operation C2  ]\r\n *\t\t[ operation B3  ]\r\n *\t\t[ operation C3  ]\r\n *\t\t[ operation C3r ]\r\n *\t\t[ operation C2' ]\r\n *\t\t[ operation C1' ]\r\n *\t\t[ operation C1'r]\r\n *\t\t[ operation C2'r]\r\n *\t\t[ operation C3rr]\r\n *\r\n * @extends module:core/plugin~Plugin\r\n */\r\nexport default class Undo extends Plugin {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get requires() {\r\n\t\treturn [ UndoEditing, UndoUI ];\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get pluginName() {\r\n\t\treturn 'Undo';\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module undo/undocommand\r\n */\r\n\r\nimport BaseCommand from './basecommand';\r\n\r\n/**\r\n * The undo command stores {@link module:engine/model/batch~Batch batches} applied to the\r\n * {@link module:engine/model/document~Document document} and is able to undo a batch by reversing it and transforming by\r\n * batches from {@link module:engine/model/document~Document#history history} that happened after the reversed batch.\r\n *\r\n * The undo command also takes care of restoring the {@link module:engine/model/document~Document#selection document selection}.\r\n *\r\n * @extends module:undo/basecommand~BaseCommand\r\n */\r\nexport default class UndoCommand extends BaseCommand {\r\n\t/**\r\n\t * Executes the command. This method reverts a {@link module:engine/model/batch~Batch batch} added to the command's stack, transforms\r\n\t * and applies the reverted version on the {@link module:engine/model/document~Document document} and removes the batch from the stack.\r\n\t * Then, it restores the {@link module:engine/model/document~Document#selection document selection}.\r\n\t *\r\n\t * @fires execute\r\n\t * @fires revert\r\n\t * @param {module:engine/model/batch~Batch} [batch] A batch that should be undone. If not set, the last added batch will be undone.\r\n\t */\r\n\texecute( batch = null ) {\r\n\t\t// If batch is not given, set `batchIndex` to the last index in command stack.\r\n\t\tconst batchIndex = batch ? this._stack.findIndex( a => a.batch == batch ) : this._stack.length - 1;\r\n\r\n\t\tconst item = this._stack.splice( batchIndex, 1 )[ 0 ];\r\n\t\tconst undoingBatch = this.editor.model.createBatch( 'transparent' );\r\n\r\n\t\t// All changes has to be done in one `enqueueChange` callback so other listeners will not\r\n\t\t// step between consecutive operations, or won't do changes to the document before selection is properly restored.\r\n\t\tthis.editor.model.enqueueChange( undoingBatch, () => {\r\n\t\t\tthis._undo( item.batch, undoingBatch );\r\n\r\n\t\t\tconst operations = this.editor.model.document.history.getOperations( item.batch.baseVersion );\r\n\t\t\tthis._restoreSelection( item.selection.ranges, item.selection.isBackward, operations );\r\n\r\n\t\t\tthis.fire( 'revert', item.batch, undoingBatch );\r\n\t\t} );\r\n\r\n\t\tthis.refresh();\r\n\t}\r\n}\r\n\r\n/**\r\n * Fired when execution of the command reverts some batch.\r\n *\r\n * @event revert\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module undo/undoediting\r\n */\r\n\r\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\r\nimport UndoCommand from './undocommand';\r\nimport RedoCommand from './redocommand';\r\n\r\n/**\r\n * The undo engine feature.\r\n *\r\n * It introduces the `'undo'` and `'redo'` commands to the editor.\r\n *\r\n * @extends module:core/plugin~Plugin\r\n */\r\nexport default class UndoEditing extends Plugin {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstatic get pluginName() {\r\n\t\treturn 'UndoEditing';\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tconstructor( editor ) {\r\n\t\tsuper( editor );\r\n\r\n\t\t/**\r\n\t\t * The command that manages undo {@link module:engine/model/batch~Batch batches} stack (history).\r\n\t\t * Created and registered during the {@link #init feature initialization}.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {module:undo/undocommand~UndoCommand} #_undoCommand\r\n\t\t */\r\n\r\n\t\t/**\r\n\t\t * The command that manages redo {@link module:engine/model/batch~Batch batches} stack (history).\r\n\t\t * Created and registered during the {@link #init feature initialization}.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {module:undo/undocommand~UndoCommand} #_redoCommand\r\n\t\t */\r\n\r\n\t\t/**\r\n\t\t * Keeps track of which batches were registered in undo.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {WeakSet.<module:engine/model/batch~Batch>}\r\n\t\t */\r\n\t\tthis._batchRegistry = new WeakSet();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tinit() {\r\n\t\tconst editor = this.editor;\r\n\r\n\t\t// Create commands.\r\n\t\tthis._undoCommand = new UndoCommand( editor );\r\n\t\tthis._redoCommand = new RedoCommand( editor );\r\n\r\n\t\t// Register command to the editor.\r\n\t\teditor.commands.add( 'undo', this._undoCommand );\r\n\t\teditor.commands.add( 'redo', this._redoCommand );\r\n\r\n\t\tthis.listenTo( editor.model, 'applyOperation', ( evt, args ) => {\r\n\t\t\tconst operation = args[ 0 ];\r\n\r\n\t\t\t// Do not register batch if the operation is not a document operation.\r\n\t\t\t// This prevents from creating empty undo steps, where all operations where non-document operations.\r\n\t\t\t// Non-document operations creates and alters content in detached tree fragments (for example, document fragments).\r\n\t\t\t// Most of time this is preparing data before it is inserted into actual tree (for example during copy & paste).\r\n\t\t\t// Such operations should not be reversed.\r\n\t\t\tif ( !operation.isDocumentOperation ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst batch = operation.batch;\r\n\r\n\t\t\tconst isRedoBatch = this._redoCommand._createdBatches.has( batch );\r\n\t\t\tconst isUndoBatch = this._undoCommand._createdBatches.has( batch );\r\n\t\t\tconst isRegisteredBatch = this._batchRegistry.has( batch );\r\n\r\n\t\t\t// If changes are not a part of a batch or this is not a new batch, omit those changes.\r\n\t\t\tif ( isRegisteredBatch || ( batch.type == 'transparent' && !isRedoBatch && !isUndoBatch ) ) {\r\n\t\t\t\treturn;\r\n\t\t\t} else {\r\n\t\t\t\tif ( isRedoBatch ) {\r\n\t\t\t\t\t// If this batch comes from `redoCommand`, add it to `undoCommand` stack.\r\n\t\t\t\t\tthis._undoCommand.addBatch( batch );\r\n\t\t\t\t} else if ( !isUndoBatch ) {\r\n\t\t\t\t\t// A default batch - these are new changes in the document, not introduced by undo feature.\r\n\t\t\t\t\t// Add them to `undoCommand` stack and clear `redoCommand` stack.\r\n\t\t\t\t\tthis._undoCommand.addBatch( batch );\r\n\t\t\t\t\tthis._redoCommand.clearStack();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Add the batch to the registry so it will not be processed again.\r\n\t\t\tthis._batchRegistry.add( batch );\r\n\t\t}, { priority: 'highest' } );\r\n\r\n\t\tthis.listenTo( this._undoCommand, 'revert', ( evt, undoneBatch, undoingBatch ) => {\r\n\t\t\tthis._redoCommand.addBatch( undoingBatch );\r\n\t\t} );\r\n\r\n\t\teditor.keystrokes.set( 'CTRL+Z', 'undo' );\r\n\t\teditor.keystrokes.set( 'CTRL+Y', 'redo' );\r\n\t\teditor.keystrokes.set( 'CTRL+SHIFT+Z', 'redo' );\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\n/**\r\n * @module undo/undoui\r\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport undoIcon from '../theme/icons/undo.svg';\nimport redoIcon from '../theme/icons/redo.svg';\n/**\r\n * The undo UI feature. It introduces the `'undo'` and `'redo'` buttons to the editor.\r\n *\r\n * @extends module:core/plugin~Plugin\r\n */\nexport default class UndoUI extends Plugin {\n    /**\r\n\t * @inheritDoc\r\n\t */\n    init() {\n        const editor = this.editor;\n        const locale = editor.locale;\n        const t = editor.t;\n        const localizedUndoIcon = locale.uiLanguageDirection == 'ltr' ? undoIcon : redoIcon;\n        const localizedRedoIcon = locale.uiLanguageDirection == 'ltr' ? redoIcon : undoIcon;\n        this._addButton('undo', t('v'), 'CTRL+Z', localizedUndoIcon);\n        this._addButton('redo', t('w'), 'CTRL+Y', localizedRedoIcon);\n    }\n    /**\r\n\t * Creates a button for the specified command.\r\n\t *\r\n\t * @private\r\n\t * @param {String} name Command name.\r\n\t * @param {String} label Button label.\r\n\t * @param {String} keystroke Command keystroke.\r\n\t * @param {String} Icon Source of the icon.\r\n\t */\n    _addButton(name, label, keystroke, Icon) {\n        const editor = this.editor;\n        editor.ui.componentFactory.add(name, locale => {\n            const command = editor.commands.get(name);\n            const view = new ButtonView(locale);\n            view.set({\n                label,\n                icon: Icon,\n                keystroke,\n                tooltip: true\n            });\n            view.bind('isEnabled').to(command, 'isEnabled');\n            this.listenTo(view, 'execute', () => {\n                editor.execute(name);\n                editor.editing.view.focus();\n            });\n            return view;\n        });\n    }\n}","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M14.958 9.367l-2.189 1.837a.75.75 0 0 0 .965 1.149l3.788-3.18a.747.747 0 0 0 .21-.284.75.75 0 0 0-.17-.945L13.77 4.762a.75.75 0 1 0-.964 1.15l2.331 1.955H6.22A.75.75 0 0 0 6 7.9a4 4 0 1 0 1.477 7.718l-.344-1.489A2.5 2.5 0 1 1 6.039 9.4l-.008-.032h8.927z\\\"/></svg>\"","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M5.042 9.367l2.189 1.837a.75.75 0 0 1-.965 1.149l-3.788-3.18a.747.747 0 0 1-.21-.284.75.75 0 0 1 .17-.945L6.23 4.762a.75.75 0 1 1 .964 1.15L4.863 7.866h8.917A.75.75 0 0 1 14 7.9a4 4 0 1 1-1.477 7.718l.344-1.489a2.5 2.5 0 1 0 1.094-4.73l.008-.032H5.042z\\\"/></svg>\"","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/ckeditorerror\r\n */\r\n\r\n/**\r\n * URL to the documentation with error codes.\r\n */\r\nexport const DOCUMENTATION_URL =\r\n\t'https://ckeditor.com/docs/ckeditor5/latest/framework/guides/support/error-codes.html';\r\n\r\n/**\r\n * The CKEditor error class.\r\n *\r\n * You should throw `CKEditorError` when:\r\n *\r\n * * An unexpected situation occurred and the editor (most probably) will not work properly. Such exception will be handled\r\n * by the {@link module:watchdog/watchdog~Watchdog watchdog} (if it is integrated),\r\n * * If the editor is incorrectly integrated or the editor API is used in the wrong way. This way you will give\r\n * feedback to the developer as soon as possible. Keep in mind that for common integration issues which should not\r\n * stop editor initialization (like missing upload adapter, wrong name of a toolbar component) we use `console.warn()` with\r\n * {@link module:utils/ckeditorerror~attachLinkToDocumentation `attachLinkToDocumentation()`}\r\n * to improve developers experience and let them see the working editor as soon as possible.\r\n *\r\n *\t\t/**\r\n *\t\t * Error thrown when a plugin cannot be loaded due to JavaScript errors, lack of plugins with a given name, etc.\r\n *\t\t *\r\n *\t\t * @error plugin-load\r\n *\t\t * @param pluginName The name of the plugin that could not be loaded.\r\n *\t\t * @param moduleName The name of the module which tried to load this plugin.\r\n *\t\t * /\r\n *\t\tthrow new CKEditorError( 'plugin-load: It was not possible to load the \"{$pluginName}\" plugin in module \"{$moduleName}', {\r\n *\t\t\tpluginName: 'foo',\r\n *\t\t\tmoduleName: 'bar'\r\n *\t\t} );\r\n *\r\n * @extends Error\r\n */\r\nexport default class CKEditorError extends Error {\r\n\t/**\r\n\t * Creates an instance of the CKEditorError class.\r\n\t *\r\n\t * @param {String} message The error message in an `error-name: Error message.` format.\r\n\t * During the minification process the \"Error message\" part will be removed to limit the code size\r\n\t * and a link to this error documentation will be added to the `message`.\r\n\t * @param {Object|null} context A context of the error by which the {@link module:watchdog/watchdog~Watchdog watchdog}\r\n\t * is able to determine which editor crashed. It should be an editor instance or a property connected to it. It can be also\r\n\t * a `null` value if the editor should not be restarted in case of the error (e.g. during the editor initialization).\r\n\t * The error context should be checked using the `areConnectedThroughProperties( editor, context )` utility\r\n\t * to check if the object works as the context.\r\n\t * @param {Object} [data] Additional data describing the error. A stringified version of this object\r\n\t * will be appended to the error message, so the data are quickly visible in the console. The original\r\n\t * data object will also be later available under the {@link #data} property.\r\n\t */\r\n\tconstructor( message, context, data ) {\r\n\t\tmessage = attachLinkToDocumentation( message );\r\n\r\n\t\tif ( data ) {\r\n\t\t\tmessage += ' ' + JSON.stringify( data );\r\n\t\t}\r\n\r\n\t\tsuper( message );\r\n\r\n\t\t/**\r\n\t\t * @type {String}\r\n\t\t */\r\n\t\tthis.name = 'CKEditorError';\r\n\r\n\t\t/**\r\n\t\t * A context of the error by which the Watchdog is able to determine which editor crashed.\r\n\t\t *\r\n\t\t * @type {Object|null}\r\n\t\t */\r\n\t\tthis.context = context;\r\n\r\n\t\t/**\r\n\t\t * The additional error data passed to the constructor. Undefined if none was passed.\r\n\t\t *\r\n\t\t * @type {Object|undefined}\r\n\t\t */\r\n\t\tthis.data = data;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the error is of the `CKEditorError` type.\r\n\t */\r\n\tis( type ) {\r\n\t\treturn type === 'CKEditorError';\r\n\t}\r\n\r\n\t/**\r\n\t * A utility that ensures the the thrown error is a {@link module:utils/ckeditorerror~CKEditorError} one.\r\n\t * It is useful when combined with the {@link module:watchdog/watchdog~Watchdog} feature, which can restart the editor in case\r\n\t * of a {@link module:utils/ckeditorerror~CKEditorError} error.\r\n\t *\r\n\t * @param {Error} err An error.\r\n\t * @param {Object} context An object connected through properties with the editor instance. This context will be used\r\n\t * by the watchdog to verify which editor should be restarted.\r\n\t */\r\n\tstatic rethrowUnexpectedError( err, context ) {\r\n\t\tif ( err.is && err.is( 'CKEditorError' ) ) {\r\n\t\t\tthrow err;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * An unexpected error occurred inside the CKEditor 5 codebase. This error will look like the original one\r\n\t\t * to make the debugging easier.\r\n\t\t *\r\n\t\t * This error is only useful when the editor is initialized using the {@link module:watchdog/watchdog~Watchdog} feature.\r\n\t\t * In case of such error (or any {@link module:utils/ckeditorerror~CKEditorError} error) the watchdog should restart the editor.\r\n\t\t *\r\n\t\t * @error unexpected-error\r\n\t\t */\r\n\t\tconst error = new CKEditorError( err.message, context );\r\n\r\n\t\t// Restore the original stack trace to make the error look like the original one.\r\n\t\t// See https://github.com/ckeditor/ckeditor5/issues/5595 for more details.\r\n\t\terror.stack = err.stack;\r\n\r\n\t\tthrow error;\r\n\t}\r\n}\r\n\r\n/**\r\n * Attaches the link to the documentation at the end of the error message. Use whenever you log a warning or error on the\r\n * console. It is also used by {@link module:utils/ckeditorerror~CKEditorError}.\r\n *\r\n *\t\t /**\r\n *\t\t  * There was a problem processing the configuration of the toolbar. The item with the given\r\n *\t\t  * name does not exist so it was omitted when rendering the toolbar.\r\n *\t\t  *\r\n *\t\t  * @error toolbarview-item-unavailable\r\n *\t\t  * @param {String} name The name of the component.\r\n *\t\t  * /\r\n *\t\t console.warn( attachLinkToDocumentation(\r\n *\t\t \t'toolbarview-item-unavailable: The requested toolbar item is unavailable.' ), { name } );\r\n *\r\n * @param {String} message Message to be logged.\r\n * @returns {String}\r\n */\r\nexport function attachLinkToDocumentation( message ) {\r\n\tconst matchedErrorName = message.match( /^([^:]+):/ );\r\n\r\n\tif ( !matchedErrorName ) {\r\n\t\treturn message;\r\n\t}\r\n\r\n\treturn message + ` Read more: ${ DOCUMENTATION_URL }#error-${ matchedErrorName[ 1 ] }\\n`;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/collection\r\n */\r\n\r\nimport EmitterMixin from './emittermixin';\r\nimport CKEditorError from './ckeditorerror';\r\nimport uid from './uid';\r\nimport mix from './mix';\r\n\r\n/**\r\n * Collections are ordered sets of objects. Items in the collection can be retrieved by their indexes\r\n * in the collection (like in an array) or by their ids.\r\n *\r\n * If an object without an `id` property is being added to the collection, the `id` property will be generated\r\n * automatically. Note that the automatically generated id is unique only within this single collection instance.\r\n *\r\n * By default an item in the collection is identified by its `id` property. The name of the identifier can be\r\n * configured through the constructor of the collection.\r\n *\r\n * @mixes module:utils/emittermixin~EmitterMixin\r\n */\r\nexport default class Collection {\r\n\t/**\r\n\t * Creates a new Collection instance.\r\n\t *\r\n\t * @param {Object} [options={}] The options object.\r\n\t * @param {String} [options.idProperty='id'] The name of the property which is considered to identify an item.\r\n\t */\r\n\tconstructor( options = {} ) {\r\n\t\t/**\r\n\t\t * The internal list of items in the collection.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Object[]}\r\n\t\t */\r\n\t\tthis._items = [];\r\n\r\n\t\t/**\r\n\t\t * The internal map of items in the collection.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Map}\r\n\t\t */\r\n\t\tthis._itemMap = new Map();\r\n\r\n\t\t/**\r\n\t\t * The name of the property which is considered to identify an item.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {String}\r\n\t\t */\r\n\t\tthis._idProperty = options.idProperty || 'id';\r\n\r\n\t\t/**\r\n\t\t * A helper mapping external items of a bound collection ({@link #bindTo})\r\n\t\t * and actual items of this collection. It provides information\r\n\t\t * necessary to properly remove items bound to another collection.\r\n\t\t *\r\n\t\t * See {@link #_bindToInternalToExternalMap}.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @member {WeakMap}\r\n\t\t */\r\n\t\tthis._bindToExternalToInternalMap = new WeakMap();\r\n\r\n\t\t/**\r\n\t\t * A helper mapping items of this collection to external items of a bound collection\r\n\t\t * ({@link #bindTo}). It provides information necessary to manage the bindings, e.g.\r\n\t\t * to avoid loops in two–way bindings.\r\n\t\t *\r\n\t\t * See {@link #_bindToExternalToInternalMap}.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @member {WeakMap}\r\n\t\t */\r\n\t\tthis._bindToInternalToExternalMap = new WeakMap();\r\n\r\n\t\t/**\r\n\t\t * Stores indexes of skipped items from bound external collection.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Array}\r\n\t\t */\r\n\t\tthis._skippedIndexesFromExternal = [];\r\n\r\n\t\t/**\r\n\t\t * A collection instance this collection is bound to as a result\r\n\t\t * of calling {@link #bindTo} method.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @member {module:utils/collection~Collection} #_bindToCollection\r\n\t\t */\r\n\t}\r\n\r\n\t/**\r\n\t * The number of items available in the collection.\r\n\t *\r\n\t * @member {Number} #length\r\n\t */\r\n\tget length() {\r\n\t\treturn this._items.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the first item from the collection or null when collection is empty.\r\n\t *\r\n\t * @returns {Object|null} The first item or `null` if collection is empty.\r\n\t */\r\n\tget first() {\r\n\t\treturn this._items[ 0 ] || null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the last item from the collection or null when collection is empty.\r\n\t *\r\n\t * @returns {Object|null} The last item or `null` if collection is empty.\r\n\t */\r\n\tget last() {\r\n\t\treturn this._items[ this.length - 1 ] || null;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an item into the collection.\r\n\t *\r\n\t * If the item does not have an id, then it will be automatically generated and set on the item.\r\n\t *\r\n\t * @chainable\r\n\t * @param {Object} item\r\n\t * @param {Number} [index] The position of the item in the collection. The item\r\n\t * is pushed to the collection when `index` not specified.\r\n\t * @fires add\r\n\t */\r\n\tadd( item, index ) {\r\n\t\tlet itemId;\r\n\t\tconst idProperty = this._idProperty;\r\n\r\n\t\tif ( ( idProperty in item ) ) {\r\n\t\t\titemId = item[ idProperty ];\r\n\r\n\t\t\tif ( typeof itemId != 'string' ) {\r\n\t\t\t\t/**\r\n\t\t\t\t * This item's id should be a string.\r\n\t\t\t\t *\r\n\t\t\t\t * @error collection-add-invalid-id\r\n\t\t\t\t */\r\n\t\t\t\tthrow new CKEditorError( 'collection-add-invalid-id', this );\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.get( itemId ) ) {\r\n\t\t\t\t/**\r\n\t\t\t\t * This item already exists in the collection.\r\n\t\t\t\t *\r\n\t\t\t\t * @error collection-add-item-already-exists\r\n\t\t\t\t */\r\n\t\t\t\tthrow new CKEditorError( 'collection-add-item-already-exists', this );\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\titem[ idProperty ] = itemId = uid();\r\n\t\t}\r\n\r\n\t\t// TODO: Use ES6 default function argument.\r\n\t\tif ( index === undefined ) {\r\n\t\t\tindex = this._items.length;\r\n\t\t} else if ( index > this._items.length || index < 0 ) {\r\n\t\t\t/**\r\n\t\t\t * The index number has invalid value.\r\n\t\t\t *\r\n\t\t\t * @error collection-add-item-bad-index\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'collection-add-item-invalid-index', this );\r\n\t\t}\r\n\r\n\t\tthis._items.splice( index, 0, item );\r\n\r\n\t\tthis._itemMap.set( itemId, item );\r\n\r\n\t\tthis.fire( 'add', item, index );\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets item by its id or index.\r\n\t *\r\n\t * @param {String|Number} idOrIndex The item id or index in the collection.\r\n\t * @returns {Object|null} The requested item or `null` if such item does not exist.\r\n\t */\r\n\tget( idOrIndex ) {\r\n\t\tlet item;\r\n\r\n\t\tif ( typeof idOrIndex == 'string' ) {\r\n\t\t\titem = this._itemMap.get( idOrIndex );\r\n\t\t} else if ( typeof idOrIndex == 'number' ) {\r\n\t\t\titem = this._items[ idOrIndex ];\r\n\t\t} else {\r\n\t\t\t/**\r\n\t\t\t * Index or id must be given.\r\n\t\t\t *\r\n\t\t\t * @error collection-get-invalid-arg\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'collection-get-invalid-arg: Index or id must be given.', this );\r\n\t\t}\r\n\r\n\t\treturn item || null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a boolean indicating whether the collection contains an item.\r\n\t *\r\n\t * @param {Object|String} itemOrId The item or its id in the collection.\r\n\t * @returns {Boolean} `true` if the collection contains the item, `false` otherwise.\r\n\t */\r\n\thas( itemOrId ) {\r\n\t\tif ( typeof itemOrId == 'string' ) {\r\n\t\t\treturn this._itemMap.has( itemOrId );\r\n\t\t} else { // Object\r\n\t\t\tconst idProperty = this._idProperty;\r\n\t\t\tconst id = itemOrId[ idProperty ];\r\n\r\n\t\t\treturn this._itemMap.has( id );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Gets index of item in the collection.\r\n\t * When item is not defined in the collection then index will be equal -1.\r\n\t *\r\n\t * @param {Object|String} itemOrId The item or its id in the collection.\r\n\t * @returns {Number} Index of given item.\r\n\t */\r\n\tgetIndex( itemOrId ) {\r\n\t\tlet item;\r\n\r\n\t\tif ( typeof itemOrId == 'string' ) {\r\n\t\t\titem = this._itemMap.get( itemOrId );\r\n\t\t} else {\r\n\t\t\titem = itemOrId;\r\n\t\t}\r\n\r\n\t\treturn this._items.indexOf( item );\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an item from the collection.\r\n\t *\r\n\t * @param {Object|Number|String} subject The item to remove, its id or index in the collection.\r\n\t * @returns {Object} The removed item.\r\n\t * @fires remove\r\n\t */\r\n\tremove( subject ) {\r\n\t\tlet index, id, item;\r\n\t\tlet itemDoesNotExist = false;\r\n\t\tconst idProperty = this._idProperty;\r\n\r\n\t\tif ( typeof subject == 'string' ) {\r\n\t\t\tid = subject;\r\n\t\t\titem = this._itemMap.get( id );\r\n\t\t\titemDoesNotExist = !item;\r\n\r\n\t\t\tif ( item ) {\r\n\t\t\t\tindex = this._items.indexOf( item );\r\n\t\t\t}\r\n\t\t} else if ( typeof subject == 'number' ) {\r\n\t\t\tindex = subject;\r\n\t\t\titem = this._items[ index ];\r\n\t\t\titemDoesNotExist = !item;\r\n\r\n\t\t\tif ( item ) {\r\n\t\t\t\tid = item[ idProperty ];\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\titem = subject;\r\n\t\t\tid = item[ idProperty ];\r\n\t\t\tindex = this._items.indexOf( item );\r\n\t\t\titemDoesNotExist = ( index == -1 || !this._itemMap.get( id ) );\r\n\t\t}\r\n\r\n\t\tif ( itemDoesNotExist ) {\r\n\t\t\t/**\r\n\t\t\t * Item not found.\r\n\t\t\t *\r\n\t\t\t * @error collection-remove-404\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'collection-remove-404: Item not found.', this );\r\n\t\t}\r\n\r\n\t\tthis._items.splice( index, 1 );\r\n\t\tthis._itemMap.delete( id );\r\n\r\n\t\tconst externalItem = this._bindToInternalToExternalMap.get( item );\r\n\t\tthis._bindToInternalToExternalMap.delete( item );\r\n\t\tthis._bindToExternalToInternalMap.delete( externalItem );\r\n\r\n\t\tthis.fire( 'remove', item, index );\r\n\r\n\t\treturn item;\r\n\t}\r\n\r\n\t/**\r\n\t * Executes the callback for each item in the collection and composes an array or values returned by this callback.\r\n\t *\r\n\t * @param {Function} callback\r\n\t * @param {Object} callback.item\r\n\t * @param {Number} callback.index\r\n\t * @param {Object} ctx Context in which the `callback` will be called.\r\n\t * @returns {Array} The result of mapping.\r\n\t */\r\n\tmap( callback, ctx ) {\r\n\t\treturn this._items.map( callback, ctx );\r\n\t}\r\n\r\n\t/**\r\n\t * Finds the first item in the collection for which the `callback` returns a true value.\r\n\t *\r\n\t * @param {Function} callback\r\n\t * @param {Object} callback.item\r\n\t * @param {Number} callback.index\r\n\t * @param {Object} ctx Context in which the `callback` will be called.\r\n\t * @returns {Object} The item for which `callback` returned a true value.\r\n\t */\r\n\tfind( callback, ctx ) {\r\n\t\treturn this._items.find( callback, ctx );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array with items for which the `callback` returned a true value.\r\n\t *\r\n\t * @param {Function} callback\r\n\t * @param {Object} callback.item\r\n\t * @param {Number} callback.index\r\n\t * @param {Object} ctx Context in which the `callback` will be called.\r\n\t * @returns {Object[]} The array with matching items.\r\n\t */\r\n\tfilter( callback, ctx ) {\r\n\t\treturn this._items.filter( callback, ctx );\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all items from the collection and destroys the binding created using\r\n\t * {@link #bindTo}.\r\n\t */\r\n\tclear() {\r\n\t\tif ( this._bindToCollection ) {\r\n\t\t\tthis.stopListening( this._bindToCollection );\r\n\t\t\tthis._bindToCollection = null;\r\n\t\t}\r\n\r\n\t\twhile ( this.length ) {\r\n\t\t\tthis.remove( 0 );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Binds and synchronizes the collection with another one.\r\n\t *\r\n\t * The binding can be a simple factory:\r\n\t *\r\n\t *\t\tclass FactoryClass {\r\n\t *\t\t\tconstructor( data ) {\r\n\t *\t\t\t\tthis.label = data.label;\r\n\t *\t\t\t}\r\n\t *\t\t}\r\n\t *\r\n\t *\t\tconst source = new Collection( { idProperty: 'label' } );\r\n\t *\t\tconst target = new Collection();\r\n\t *\r\n\t *\t\ttarget.bindTo( source ).as( FactoryClass );\r\n\t *\r\n\t *\t\tsource.add( { label: 'foo' } );\r\n\t *\t\tsource.add( { label: 'bar' } );\r\n\t *\r\n\t *\t\tconsole.log( target.length ); // 2\r\n\t *\t\tconsole.log( target.get( 1 ).label ); // 'bar'\r\n\t *\r\n\t *\t\tsource.remove( 0 );\r\n\t *\t\tconsole.log( target.length ); // 1\r\n\t *\t\tconsole.log( target.get( 0 ).label ); // 'bar'\r\n\t *\r\n\t * or the factory driven by a custom callback:\r\n\t *\r\n\t *\t\tclass FooClass {\r\n\t *\t\t\tconstructor( data ) {\r\n\t *\t\t\t\tthis.label = data.label;\r\n\t *\t\t\t}\r\n\t *\t\t}\r\n\t *\r\n\t *\t\tclass BarClass {\r\n\t *\t\t\tconstructor( data ) {\r\n\t *\t\t\t\tthis.label = data.label;\r\n\t *\t\t\t}\r\n\t *\t\t}\r\n\t *\r\n\t *\t\tconst source = new Collection( { idProperty: 'label' } );\r\n\t *\t\tconst target = new Collection();\r\n\t *\r\n\t *\t\ttarget.bindTo( source ).using( ( item ) => {\r\n\t *\t\t\tif ( item.label == 'foo' ) {\r\n\t *\t\t\t\treturn new FooClass( item );\r\n\t *\t\t\t} else {\r\n\t *\t\t\t\treturn new BarClass( item );\r\n\t *\t\t\t}\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\tsource.add( { label: 'foo' } );\r\n\t *\t\tsource.add( { label: 'bar' } );\r\n\t *\r\n\t *\t\tconsole.log( target.length ); // 2\r\n\t *\t\tconsole.log( target.get( 0 ) instanceof FooClass ); // true\r\n\t *\t\tconsole.log( target.get( 1 ) instanceof BarClass ); // true\r\n\t *\r\n\t * or the factory out of property name:\r\n\t *\r\n\t *\t\tconst source = new Collection( { idProperty: 'label' } );\r\n\t *\t\tconst target = new Collection();\r\n\t *\r\n\t *\t\ttarget.bindTo( source ).using( 'label' );\r\n\t *\r\n\t *\t\tsource.add( { label: { value: 'foo' } } );\r\n\t *\t\tsource.add( { label: { value: 'bar' } } );\r\n\t *\r\n\t *\t\tconsole.log( target.length ); // 2\r\n\t *\t\tconsole.log( target.get( 0 ).value ); // 'foo'\r\n\t *\t\tconsole.log( target.get( 1 ).value ); // 'bar'\r\n\t *\r\n\t * It's possible to skip specified items by returning falsy value:\r\n\t *\r\n\t *\t\tconst source = new Collection();\r\n\t *\t\tconst target = new Collection();\r\n\t *\r\n\t *\t\ttarget.bindTo( source ).using( item => {\r\n\t *\t\t\tif ( item.hidden ) {\r\n\t *\t\t\t\treturn null;\r\n\t *\t\t\t}\r\n\t *\r\n\t *\t\t\treturn item;\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\tsource.add( { hidden: true } );\r\n\t *\t\tsource.add( { hidden: false } );\r\n\t *\r\n\t *\t\tconsole.log( source.length ); // 2\r\n\t *\t\tconsole.log( target.length ); // 1\r\n\t *\r\n\t * **Note**: {@link #clear} can be used to break the binding.\r\n\t *\r\n\t * @param {module:utils/collection~Collection} externalCollection A collection to be bound.\r\n\t * @returns {Object}\r\n\t * @returns {module:utils/collection~CollectionBindToChain} The binding chain object.\r\n\t */\r\n\tbindTo( externalCollection ) {\r\n\t\tif ( this._bindToCollection ) {\r\n\t\t\t/**\r\n\t\t\t * The collection cannot be bound more than once.\r\n\t\t\t *\r\n\t\t\t * @error collection-bind-to-rebind\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'collection-bind-to-rebind: The collection cannot be bound more than once.', this );\r\n\t\t}\r\n\r\n\t\tthis._bindToCollection = externalCollection;\r\n\r\n\t\treturn {\r\n\t\t\tas: Class => {\r\n\t\t\t\tthis._setUpBindToBinding( item => new Class( item ) );\r\n\t\t\t},\r\n\r\n\t\t\tusing: callbackOrProperty => {\r\n\t\t\t\tif ( typeof callbackOrProperty == 'function' ) {\r\n\t\t\t\t\tthis._setUpBindToBinding( item => callbackOrProperty( item ) );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._setUpBindToBinding( item => item[ callbackOrProperty ] );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Finalizes and activates a binding initiated by {#bindTo}.\r\n\t *\r\n\t * @protected\r\n\t * @param {Function} factory A function which produces collection items.\r\n\t */\r\n\t_setUpBindToBinding( factory ) {\r\n\t\tconst externalCollection = this._bindToCollection;\r\n\r\n\t\t// Adds the item to the collection once a change has been done to the external collection.\r\n\t\t//\r\n\t\t// @private\r\n\t\tconst addItem = ( evt, externalItem, index ) => {\r\n\t\t\tconst isExternalBoundToThis = externalCollection._bindToCollection == this;\r\n\t\t\tconst externalItemBound = externalCollection._bindToInternalToExternalMap.get( externalItem );\r\n\r\n\t\t\t// If an external collection is bound to this collection, which makes it a 2–way binding,\r\n\t\t\t// and the particular external collection item is already bound, don't add it here.\r\n\t\t\t// The external item has been created **out of this collection's item** and (re)adding it will\r\n\t\t\t// cause a loop.\r\n\t\t\tif ( isExternalBoundToThis && externalItemBound ) {\r\n\t\t\t\tthis._bindToExternalToInternalMap.set( externalItem, externalItemBound );\r\n\t\t\t\tthis._bindToInternalToExternalMap.set( externalItemBound, externalItem );\r\n\t\t\t} else {\r\n\t\t\t\tconst item = factory( externalItem );\r\n\r\n\t\t\t\t// When there is no item we need to remember skipped index first and then we can skip this item.\r\n\t\t\t\tif ( !item ) {\r\n\t\t\t\t\tthis._skippedIndexesFromExternal.push( index );\r\n\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Lets try to put item at the same index as index in external collection\r\n\t\t\t\t// but when there are a skipped items in one or both collections we need to recalculate this index.\r\n\t\t\t\tlet finalIndex = index;\r\n\r\n\t\t\t\t// When we try to insert item after some skipped items from external collection we need\r\n\t\t\t\t// to include this skipped items and decrease index.\r\n\t\t\t\t//\r\n\t\t\t\t// For the following example:\r\n\t\t\t\t// external -> [ 'A', 'B - skipped for internal', 'C - skipped for internal' ]\r\n\t\t\t\t// internal -> [ A ]\r\n\t\t\t\t//\r\n\t\t\t\t// Another item is been added at the end of external collection:\r\n\t\t\t\t// external.add( 'D' )\r\n\t\t\t\t// external -> [ 'A', 'B - skipped for internal', 'C - skipped for internal', 'D' ]\r\n\t\t\t\t//\r\n\t\t\t\t// We can't just add 'D' to internal at the same index as index in external because\r\n\t\t\t\t// this will produce empty indexes what is invalid:\r\n\t\t\t\t// internal -> [ 'A', empty, empty, 'D' ]\r\n\t\t\t\t//\r\n\t\t\t\t// So we need to include skipped items and decrease index\r\n\t\t\t\t// internal -> [ 'A', 'D' ]\r\n\t\t\t\tfor ( const skipped of this._skippedIndexesFromExternal ) {\r\n\t\t\t\t\tif ( index > skipped ) {\r\n\t\t\t\t\t\tfinalIndex--;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// We need to take into consideration that external collection could skip some items from\r\n\t\t\t\t// internal collection.\r\n\t\t\t\t//\r\n\t\t\t\t// For the following example:\r\n\t\t\t\t// internal -> [ 'A', 'B - skipped for external', 'C - skipped for external' ]\r\n\t\t\t\t// external -> [ A ]\r\n\t\t\t\t//\r\n\t\t\t\t// Another item is been added at the end of external collection:\r\n\t\t\t\t// external.add( 'D' )\r\n\t\t\t\t// external -> [ 'A', 'D' ]\r\n\t\t\t\t//\r\n\t\t\t\t// We need to include skipped items and place new item after them:\r\n\t\t\t\t// internal -> [ 'A', 'B - skipped for external', 'C - skipped for external', 'D' ]\r\n\t\t\t\tfor ( const skipped of externalCollection._skippedIndexesFromExternal ) {\r\n\t\t\t\t\tif ( finalIndex >= skipped ) {\r\n\t\t\t\t\t\tfinalIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._bindToExternalToInternalMap.set( externalItem, item );\r\n\t\t\t\tthis._bindToInternalToExternalMap.set( item, externalItem );\r\n\t\t\t\tthis.add( item, finalIndex );\r\n\r\n\t\t\t\t// After adding new element to internal collection we need update indexes\r\n\t\t\t\t// of skipped items in external collection.\r\n\t\t\t\tfor ( let i = 0; i < externalCollection._skippedIndexesFromExternal.length; i++ ) {\r\n\t\t\t\t\tif ( finalIndex <= externalCollection._skippedIndexesFromExternal[ i ] ) {\r\n\t\t\t\t\t\texternalCollection._skippedIndexesFromExternal[ i ]++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Load the initial content of the collection.\r\n\t\tfor ( const externalItem of externalCollection ) {\r\n\t\t\taddItem( null, externalItem, externalCollection.getIndex( externalItem ) );\r\n\t\t}\r\n\r\n\t\t// Synchronize the with collection as new items are added.\r\n\t\tthis.listenTo( externalCollection, 'add', addItem );\r\n\r\n\t\t// Synchronize the with collection as new items are removed.\r\n\t\tthis.listenTo( externalCollection, 'remove', ( evt, externalItem, index ) => {\r\n\t\t\tconst item = this._bindToExternalToInternalMap.get( externalItem );\r\n\r\n\t\t\tif ( item ) {\r\n\t\t\t\tthis.remove( item );\r\n\t\t\t}\r\n\r\n\t\t\t// After removing element from external collection we need update/remove indexes\r\n\t\t\t// of skipped items in internal collection.\r\n\t\t\tthis._skippedIndexesFromExternal = this._skippedIndexesFromExternal.reduce( ( result, skipped ) => {\r\n\t\t\t\tif ( index < skipped ) {\r\n\t\t\t\t\tresult.push( skipped - 1 );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( index > skipped ) {\r\n\t\t\t\t\tresult.push( skipped );\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn result;\r\n\t\t\t}, [] );\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * Iterable interface.\r\n\t *\r\n\t * @returns {Iterable.<*>}\r\n\t */\r\n\t[ Symbol.iterator ]() {\r\n\t\treturn this._items[ Symbol.iterator ]();\r\n\t}\r\n\r\n\t/**\r\n\t * Fired when an item is added to the collection.\r\n\t *\r\n\t * @event add\r\n\t * @param {Object} item The added item.\r\n\t */\r\n\r\n\t/**\r\n\t * Fired when an item is removed from the collection.\r\n\t *\r\n\t * @event remove\r\n\t * @param {Object} item The removed item.\r\n\t * @param {Number} index Index from which item was removed.\r\n\t */\r\n}\r\n\r\nmix( Collection, EmitterMixin );\r\n\r\n/**\r\n * An object returned by the {@link module:utils/collection~Collection#bindTo `bindTo()`} method\r\n * providing functions that specify the type of the binding.\r\n *\r\n * See the {@link module:utils/collection~Collection#bindTo `bindTo()`} documentation for examples.\r\n *\r\n * @interface module:utils/collection~CollectionBindToChain\r\n */\r\n\r\n/**\r\n * Creates a callback or a property binding.\r\n *\r\n * @method #using\r\n * @param {Function|String} callbackOrProperty  When the function is passed, it should return\r\n * the collection items. When the string is provided, the property value is used to create the bound collection items.\r\n */\r\n\r\n/**\r\n * Creates the class factory binding in which items of the source collection are passed to\r\n * the constructor of the specified class.\r\n *\r\n * @method #as\r\n * @param {Function} Class The class constructor used to create instances in the factory.\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/comparearrays\r\n */\r\n\r\n/**\r\n * Compares how given arrays relate to each other. One array can be: same as another array, prefix of another array\r\n * or completely different. If arrays are different, first index at which they differ is returned. Otherwise,\r\n * a flag specifying the relation is returned. Flags are negative numbers, so whenever a number >= 0 is returned\r\n * it means that arrays differ.\r\n *\r\n *\t\tcompareArrays( [ 0, 2 ], [ 0, 2 ] );\t\t// 'same'\r\n *\t\tcompareArrays( [ 0, 2 ], [ 0, 2, 1 ] );\t\t// 'prefix'\r\n *\t\tcompareArrays( [ 0, 2 ], [ 0 ] );\t\t\t// 'extension'\r\n *\t\tcompareArrays( [ 0, 2 ], [ 1, 2 ] );\t\t// 0\r\n *\t\tcompareArrays( [ 0, 2 ], [ 0, 1 ] );\t\t// 1\r\n *\r\n * @param {Array} a Array that is compared.\r\n * @param {Array} b Array to compare with.\r\n * @returns {module:utils/comparearrays~ArrayRelation} How array `a` is related to `b`.\r\n */\r\nexport default function compareArrays( a, b ) {\r\n\tconst minLen = Math.min( a.length, b.length );\r\n\r\n\tfor ( let i = 0; i < minLen; i++ ) {\r\n\t\tif ( a[ i ] != b[ i ] ) {\r\n\t\t\t// The arrays are different.\r\n\t\t\treturn i;\r\n\t\t}\r\n\t}\r\n\r\n\t// Both arrays were same at all points.\r\n\tif ( a.length == b.length ) {\r\n\t\t// If their length is also same, they are the same.\r\n\t\treturn 'same';\r\n\t} else if ( a.length < b.length ) {\r\n\t\t// Compared array is shorter so it is a prefix of the other array.\r\n\t\treturn 'prefix';\r\n\t} else {\r\n\t\t// Compared array is longer so it is an extension of the other array.\r\n\t\treturn 'extension';\r\n\t}\r\n}\r\n\r\n/**\r\n * @typedef {'extension'|'same'|'prefix'} module:utils/comparearrays~ArrayRelation\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/config\r\n */\r\n\r\nimport { isPlainObject, isElement, cloneDeepWith } from 'lodash-es';\r\n\r\n/**\r\n * Handles a configuration dictionary.\r\n */\r\nexport default class Config {\r\n\t/**\r\n\t * Creates an instance of the {@link ~Config} class.\r\n\t *\r\n\t * @param {Object} [configurations] The initial configurations to be set. Usually, provided by the user.\r\n\t * @param {Object} [defaultConfigurations] The default configurations. Usually, provided by the system.\r\n\t */\r\n\tconstructor( configurations, defaultConfigurations ) {\r\n\t\t/**\r\n\t\t * Store for the whole configuration.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Object}\r\n\t\t */\r\n\t\tthis._config = {};\r\n\r\n\t\t// Set default configuration.\r\n\t\tif ( defaultConfigurations ) {\r\n\t\t\t// Clone the configuration to make sure that the properties will not be shared\r\n\t\t\t// between editors and make the watchdog feature work correctly.\r\n\t\t\tthis.define( cloneConfig( defaultConfigurations ) );\r\n\t\t}\r\n\r\n\t\t// Set initial configuration.\r\n\t\tif ( configurations ) {\r\n\t\t\tthis._setObjectToTarget( this._config, configurations );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set configuration values.\r\n\t *\r\n\t * It accepts both a name/value pair or an object, which properties and values will be used to set\r\n\t * configurations.\r\n\t *\r\n\t * It also accepts setting a \"deep configuration\" by using dots in the name. For example, `'resize.width'` sets\r\n\t * the value for the `width` configuration in the `resize` subset.\r\n\t *\r\n\t *\t\tconfig.set( 'width', 500 );\r\n\t *\t\tconfig.set( 'toolbar.collapsed', true );\r\n\t *\r\n\t *\t\t// Equivalent to:\r\n\t *\t\tconfig.set( {\r\n\t *\t\t\twidth: 500\r\n\t *\t\t\ttoolbar: {\r\n\t *\t\t\t\tcollapsed: true\r\n\t *\t\t\t}\r\n\t *\t\t} );\r\n\t *\r\n\t * Passing an object as the value will amend the configuration, not replace it.\r\n\t *\r\n\t *\t\tconfig.set( 'toolbar', {\r\n\t *\t\t\tcollapsed: true,\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\tconfig.set( 'toolbar', {\r\n\t *\t\t\tcolor: 'red',\r\n\t *\t\t} );\r\n\t *\r\n\t *\t\tconfig.get( 'toolbar.collapsed' ); // true\r\n\t *\t\tconfig.get( 'toolbar.color' ); // 'red'\r\n\t *\r\n\t * @param {String|Object} name The configuration name or an object from which take properties as\r\n\t * configuration entries. Configuration names are case-sensitive.\r\n\t * @param {*} value The configuration value. Used if a name is passed.\r\n\t */\r\n\tset( name, value ) {\r\n\t\tthis._setToTarget( this._config, name, value );\r\n\t}\r\n\r\n\t/**\r\n\t * Does exactly the same as {@link #set} with one exception – passed configuration extends\r\n\t * existing one, but does not overwrite already defined values.\r\n\t *\r\n\t * This method is supposed to be called by plugin developers to setup plugin's configurations. It would be\r\n\t * rarely used for other needs.\r\n\t *\r\n\t * @param {String|Object} name The configuration name or an object from which take properties as\r\n\t * configuration entries. Configuration names are case-sensitive.\r\n\t * @param {*} value The configuration value. Used if a name is passed.\r\n\t */\r\n\tdefine( name, value ) {\r\n\t\tconst isDefine = true;\r\n\r\n\t\tthis._setToTarget( this._config, name, value, isDefine );\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the value for a configuration entry.\r\n\t *\r\n\t *\t\tconfig.get( 'name' );\r\n\t *\r\n\t * Deep configurations can be retrieved by separating each part with a dot.\r\n\t *\r\n\t *\t\tconfig.get( 'toolbar.collapsed' );\r\n\t *\r\n\t * @param {String} name The configuration name. Configuration names are case-sensitive.\r\n\t * @returns {*} The configuration value or `undefined` if the configuration entry was not found.\r\n\t */\r\n\tget( name ) {\r\n\t\treturn this._getFromSource( this._config, name );\r\n\t}\r\n\r\n\t/**\r\n\t * Iterates over all top level configuration names.\r\n\t *\r\n\t * @returns {Iterable.<String>}\r\n\t */\r\n\t* names() {\r\n\t\tfor ( const name of Object.keys( this._config ) ) {\r\n\t\t\tyield name;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Saves passed configuration to the specified target (nested object).\r\n\t *\r\n\t * @private\r\n\t * @param {Object} target Nested config object.\r\n\t * @param {String|Object} name The configuration name or an object from which take properties as\r\n\t * configuration entries. Configuration names are case-sensitive.\r\n\t * @param {*} value The configuration value. Used if a name is passed.\r\n\t * @param {Boolean} [isDefine=false] Define if passed configuration should overwrite existing one.\r\n\t */\r\n\t_setToTarget( target, name, value, isDefine = false ) {\r\n\t\t// In case of an object, iterate through it and call `_setToTarget` again for each property.\r\n\t\tif ( isPlainObject( name ) ) {\r\n\t\t\tthis._setObjectToTarget( target, name, isDefine );\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// The configuration name should be split into parts if it has dots. E.g. `resize.width` -> [`resize`, `width`].\r\n\t\tconst parts = name.split( '.' );\r\n\r\n\t\t// Take the name of the configuration out of the parts. E.g. `resize.width` -> `width`.\r\n\t\tname = parts.pop();\r\n\r\n\t\t// Iterate over parts to check if currently stored configuration has proper structure.\r\n\t\tfor ( const part of parts ) {\r\n\t\t\t// If there is no object for specified part then create one.\r\n\t\t\tif ( !isPlainObject( target[ part ] ) ) {\r\n\t\t\t\ttarget[ part ] = {};\r\n\t\t\t}\r\n\r\n\t\t\t// Nested object becomes a target.\r\n\t\t\ttarget = target[ part ];\r\n\t\t}\r\n\r\n\t\t// In case of value is an object.\r\n\t\tif ( isPlainObject( value ) ) {\r\n\t\t\t// We take care of proper config structure.\r\n\t\t\tif ( !isPlainObject( target[ name ] ) ) {\r\n\t\t\t\ttarget[ name ] = {};\r\n\t\t\t}\r\n\r\n\t\t\ttarget = target[ name ];\r\n\r\n\t\t\t// And iterate through this object calling `_setToTarget` again for each property.\r\n\t\t\tthis._setObjectToTarget( target, value, isDefine );\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Do nothing if we are defining configuration for non empty name.\r\n\t\tif ( isDefine && typeof target[ name ] != 'undefined' ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttarget[ name ] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Get specified configuration from specified source (nested object).\r\n\t *\r\n\t * @private\r\n\t * @param {Object} source level of nested object.\r\n\t * @param {String} name The configuration name. Configuration names are case-sensitive.\r\n\t * @returns {*} The configuration value or `undefined` if the configuration entry was not found.\r\n\t */\r\n\t_getFromSource( source, name ) {\r\n\t\t// The configuration name should be split into parts if it has dots. E.g. `resize.width` -> [`resize`, `width`].\r\n\t\tconst parts = name.split( '.' );\r\n\r\n\t\t// Take the name of the configuration out of the parts. E.g. `resize.width` -> `width`.\r\n\t\tname = parts.pop();\r\n\r\n\t\t// Iterate over parts to check if currently stored configuration has proper structure.\r\n\t\tfor ( const part of parts ) {\r\n\t\t\tif ( !isPlainObject( source[ part ] ) ) {\r\n\t\t\t\tsource = null;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t// Nested object becomes a source.\r\n\t\t\tsource = source[ part ];\r\n\t\t}\r\n\r\n\t\t// Always returns undefined for non existing configuration.\r\n\t\treturn source ? cloneConfig( source[ name ] ) : undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Iterates through passed object and calls {@link #_setToTarget} method with object key and value for each property.\r\n\t *\r\n\t * @private\r\n\t * @param {Object} target Nested config object.\r\n\t * @param {Object} configuration Configuration data set\r\n\t * @param {Boolean} [isDefine] Defines if passed configuration is default configuration or not.\r\n\t */\r\n\t_setObjectToTarget( target, configuration, isDefine ) {\r\n\t\tObject.keys( configuration ).forEach( key => {\r\n\t\t\tthis._setToTarget( target, key, configuration[ key ], isDefine );\r\n\t\t} );\r\n\t}\r\n}\r\n\r\n// Clones configuration object or value.\r\n// @param {*} source Source configuration\r\n// @returns {*} Cloned configuration value.\r\nfunction cloneConfig( source ) {\r\n\treturn cloneDeepWith( source, leaveDOMReferences );\r\n}\r\n\r\n// A customized function for cloneDeepWith.\r\n// It will leave references to DOM Elements instead of cloning them.\r\n//\r\n// @param {*} value\r\n// @returns {Element|undefined}\r\nfunction leaveDOMReferences( value ) {\r\n\treturn isElement( value ) ? value : undefined;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/count\r\n */\r\n\r\n/**\r\n * Returns the number of items return by the iterator.\r\n *\r\n *\t\tcount( [ 1, 2, 3, 4, 5 ] ); // 5;\r\n *\r\n * @param {Iterable.<*>} iterator Any iterator.\r\n * @returns {Number} Number of items returned by that iterator.\r\n */\r\nexport default function count( iterator ) {\r\n\tlet count = 0;\r\n\r\n\tfor ( const _ of iterator ) { // eslint-disable-line no-unused-vars\r\n\t\tcount++;\r\n\t}\r\n\r\n\treturn count;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/diff\r\n */\r\n\r\nimport fastDiff from '../src/fastdiff';\r\n\r\n// The following code is based on the \"O(NP) Sequence Comparison Algorithm\"\r\n// by Sun Wu, Udi Manber, Gene Myers, Webb Miller.\r\n\r\n/**\r\n * Calculates the difference between two arrays or strings producing an array containing a list of changes\r\n * necessary to transform input into output.\r\n *\r\n *\t\tdiff( 'aba', 'acca' ); // [ 'equal', 'insert', 'insert', 'delete', 'equal' ]\r\n *\r\n * This function is based on the \"O(NP) Sequence Comparison Algorithm\" by Sun Wu, Udi Manber, Gene Myers, Webb Miller.\r\n * Unfortunately, while it gives the most precise results, its to complex for longer strings/arrow (above 200 items).\r\n * Therefore, `diff()` automatically switches to {@link module:utils/fastdiff~fastDiff `fastDiff()`} when detecting\r\n * such a scenario. The return formats of both functions are identical.\r\n *\r\n * @param {Array|String} a Input array or string.\r\n * @param {Array|String} b Output array or string.\r\n * @param {Function} [cmp] Optional function used to compare array values, by default === is used.\r\n * @returns {Array} Array of changes.\r\n */\r\nexport default function diff( a, b, cmp ) {\r\n\t// Set the comparator function.\r\n\tcmp = cmp || function( a, b ) {\r\n\t\treturn a === b;\r\n\t};\r\n\r\n\tconst aLength = a.length;\r\n\tconst bLength = b.length;\r\n\r\n\t// Perform `fastDiff` for longer strings/arrays (see #269).\r\n\tif ( aLength > 200 || bLength > 200 || aLength + bLength > 300 ) {\r\n\t\treturn diff.fastDiff( a, b, cmp, true );\r\n\t}\r\n\r\n\t// Temporary action type statics.\r\n\tlet _insert, _delete;\r\n\r\n\t// Swapped the arrays to use the shorter one as the first one.\r\n\tif ( bLength < aLength ) {\r\n\t\tconst tmp = a;\r\n\r\n\t\ta = b;\r\n\t\tb = tmp;\r\n\r\n\t\t// We swap the action types as well.\r\n\t\t_insert = 'delete';\r\n\t\t_delete = 'insert';\r\n\t} else {\r\n\t\t_insert = 'insert';\r\n\t\t_delete = 'delete';\r\n\t}\r\n\r\n\tconst m = a.length;\r\n\tconst n = b.length;\r\n\tconst delta = n - m;\r\n\r\n\t// Edit scripts, for each diagonal.\r\n\tconst es = {};\r\n\t// Furthest points, the furthest y we can get on each diagonal.\r\n\tconst fp = {};\r\n\r\n\tfunction snake( k ) {\r\n\t\t// We use -1 as an alternative below to handle initial values ( instead of filling the fp with -1 first ).\r\n\t\t// Furthest points (y) on the diagonal below k.\r\n\t\tconst y1 = ( fp[ k - 1 ] !== undefined ? fp[ k - 1 ] : -1 ) + 1;\r\n\t\t// Furthest points (y) on the diagonal above k.\r\n\t\tconst y2 = fp[ k + 1 ] !== undefined ? fp[ k + 1 ] : -1;\r\n\t\t// The way we should go to get further.\r\n\t\tconst dir = y1 > y2 ? -1 : 1;\r\n\r\n\t\t// Clone previous changes array (if any).\r\n\t\tif ( es[ k + dir ] ) {\r\n\t\t\tes[ k ] = es[ k + dir ].slice( 0 );\r\n\t\t}\r\n\r\n\t\t// Create changes array.\r\n\t\tif ( !es[ k ] ) {\r\n\t\t\tes[ k ] = [];\r\n\t\t}\r\n\r\n\t\t// Push the action.\r\n\t\tes[ k ].push( y1 > y2 ? _insert : _delete );\r\n\r\n\t\t// Set the beginning coordinates.\r\n\t\tlet y = Math.max( y1, y2 );\r\n\t\tlet x = y - k;\r\n\r\n\t\t// Traverse the diagonal as long as the values match.\r\n\t\twhile ( x < m && y < n && cmp( a[ x ], b[ y ] ) ) {\r\n\t\t\tx++;\r\n\t\t\ty++;\r\n\t\t\t// Push no change action.\r\n\t\t\tes[ k ].push( 'equal' );\r\n\t\t}\r\n\r\n\t\treturn y;\r\n\t}\r\n\r\n\tlet p = 0;\r\n\tlet k;\r\n\r\n\t// Traverse the graph until we reach the end of the longer string.\r\n\tdo {\r\n\t\t// Updates furthest points and edit scripts for diagonals below delta.\r\n\t\tfor ( k = -p; k < delta; k++ ) {\r\n\t\t\tfp[ k ] = snake( k );\r\n\t\t}\r\n\r\n\t\t// Updates furthest points and edit scripts for diagonals above delta.\r\n\t\tfor ( k = delta + p; k > delta; k-- ) {\r\n\t\t\tfp[ k ] = snake( k );\r\n\t\t}\r\n\r\n\t\t// Updates furthest point and edit script for the delta diagonal.\r\n\t\t// note that the delta diagonal is the one which goes through the sink (m, n).\r\n\t\tfp[ delta ] = snake( delta );\r\n\r\n\t\tp++;\r\n\t} while ( fp[ delta ] !== n );\r\n\r\n\t// Return the final list of edit changes.\r\n\t// We remove the first item that represents the action for the injected nulls.\r\n\treturn es[ delta ].slice( 1 );\r\n}\r\n\r\n// Store the API in static property to easily overwrite it in tests.\r\n// Too bad dependency injection does not work in Webpack + ES 6 (const) + Babel.\r\ndiff.fastDiff = fastDiff;\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/difftochanges\r\n */\r\n\r\n/**\r\n * Creates a set of changes which need to be applied to the input in order to transform\r\n * it into the output. This function can be used with strings or arrays.\r\n *\r\n *\t\tconst input = Array.from( 'abc' );\r\n *\t\tconst output = Array.from( 'xaby' );\r\n *\t\tconst changes = diffToChanges( diff( input, output ), output );\r\n *\r\n *\t\tchanges.forEach( change => {\r\n *\t\t\tif ( change.type == 'insert' ) {\r\n *\t\t\t\tinput.splice( change.index, 0, ...change.values );\r\n *\t\t\t} else if ( change.type == 'delete' ) {\r\n *\t\t\t\tinput.splice( change.index, change.howMany );\r\n *\t\t\t}\r\n *\t\t} );\r\n *\r\n *\t\tinput.join( '' ) == output.join( '' ); // -> true\r\n *\r\n * @param {Array.<'equal'|'insert'|'delete'>} diff Result of {@link module:utils/diff~diff}.\r\n * @param {String|Array} output The string or array which was passed as diff's output.\r\n * @returns {Array.<Object>} Set of changes (insert or delete) which need to be applied to the input\r\n * in order to transform it into the output.\r\n */\r\nexport default function diffToChanges( diff, output ) {\r\n\tconst changes = [];\r\n\tlet index = 0;\r\n\tlet lastOperation;\r\n\r\n\tdiff.forEach( change => {\r\n\t\tif ( change == 'equal' ) {\r\n\t\t\tpushLast();\r\n\r\n\t\t\tindex++;\r\n\t\t} else if ( change == 'insert' ) {\r\n\t\t\tif ( isContinuationOf( 'insert' ) ) {\r\n\t\t\t\tlastOperation.values.push( output[ index ] );\r\n\t\t\t} else {\r\n\t\t\t\tpushLast();\r\n\r\n\t\t\t\tlastOperation = {\r\n\t\t\t\t\ttype: 'insert',\r\n\t\t\t\t\tindex,\r\n\t\t\t\t\tvalues: [ output[ index ] ]\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tindex++;\r\n\t\t} else /* if ( change == 'delete' ) */ {\r\n\t\t\tif ( isContinuationOf( 'delete' ) ) {\r\n\t\t\t\tlastOperation.howMany++;\r\n\t\t\t} else {\r\n\t\t\t\tpushLast();\r\n\r\n\t\t\t\tlastOperation = {\r\n\t\t\t\t\ttype: 'delete',\r\n\t\t\t\t\tindex,\r\n\t\t\t\t\thowMany: 1\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\r\n\tpushLast();\r\n\r\n\treturn changes;\r\n\r\n\tfunction pushLast() {\r\n\t\tif ( lastOperation ) {\r\n\t\t\tchanges.push( lastOperation );\r\n\t\t\tlastOperation = null;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction isContinuationOf( expected ) {\r\n\t\treturn lastOperation && lastOperation.type == expected;\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/dom/createelement\r\n */\r\n\r\nimport isIterable from '../isiterable';\r\nimport { isString } from 'lodash-es';\r\n\r\n/**\r\n * Creates element with attributes and children.\r\n *\r\n *\t\tcreateElement( document, 'p' ); // <p>\r\n *\t\tcreateElement( document, 'p', { class: 'foo' } ); // <p class=\"foo\">\r\n *\t\tcreateElement( document, 'p', null, 'foo' ); // <p>foo</p>\r\n *\t\tcreateElement( document, 'p', null, [ 'foo', createElement( document, 'img' ) ] ); // <p>foo<img></p>\r\n *\r\n * @param {Document} doc Document used to create element.\r\n * @param {String} name Name of the element.\r\n * @param {Object} [attributes] Object keys will become attributes keys and object values will became attributes values.\r\n * @param {Node|String|Array.<Node|String>} [children] Child or array of children. Strings will be automatically turned\r\n * into Text nodes.\r\n * @returns {Element} Created element.\r\n */\r\nexport default function createElement( doc, name, attributes = {}, children = [] ) {\r\n\tconst namespace = attributes && attributes.xmlns;\r\n\tconst element = namespace ? doc.createElementNS( namespace, name ) : doc.createElement( name );\r\n\r\n\tfor ( const key in attributes ) {\r\n\t\telement.setAttribute( key, attributes[ key ] );\r\n\t}\r\n\r\n\tif ( isString( children ) || !isIterable( children ) ) {\r\n\t\tchildren = [ children ];\r\n\t}\r\n\r\n\tfor ( let child of children ) {\r\n\t\tif ( isString( child ) ) {\r\n\t\t\tchild = doc.createTextNode( child );\r\n\t\t}\r\n\r\n\t\telement.appendChild( child );\r\n\t}\r\n\r\n\treturn element;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/dom/emittermixin\r\n */\r\n\r\nimport { default as EmitterMixin, _getEmitterListenedTo, _setEmitterId } from '../emittermixin';\r\nimport uid from '../uid';\r\nimport isNode from './isnode';\r\nimport isWindow from './iswindow';\r\nimport { extend } from 'lodash-es';\r\n\r\n/**\r\n * Mixin that injects the DOM events API into its host. It provides the API\r\n * compatible with {@link module:utils/emittermixin~EmitterMixin}.\r\n *\r\n * DOM emitter mixin is by default available in the {@link module:ui/view~View} class,\r\n * but it can also be mixed into any other class:\r\n *\r\n *\t\timport mix from '../utils/mix.js';\r\n *\t\timport DomEmitterMixin from '../utils/dom/emittermixin.js';\r\n *\r\n *\t\tclass SomeView {}\r\n *\t\tmix( SomeView, DomEmitterMixin );\r\n *\r\n *\t\tconst view = new SomeView();\r\n *\t\tview.listenTo( domElement, ( evt, domEvt ) => {\r\n *\t\t\tconsole.log( evt, domEvt );\r\n *\t\t} );\r\n *\r\n * @mixin EmitterMixin\r\n * @mixes module:utils/emittermixin~EmitterMixin\r\n * @implements module:utils/dom/emittermixin~Emitter\r\n */\r\nconst DomEmitterMixin = extend( {}, EmitterMixin, {\r\n\t/**\r\n\t * Registers a callback function to be executed when an event is fired in a specific Emitter or DOM Node.\r\n\t * It is backwards compatible with {@link module:utils/emittermixin~EmitterMixin#listenTo}.\r\n\t *\r\n\t * @param {module:utils/emittermixin~Emitter|Node} emitter The object that fires the event.\r\n\t * @param {String} event The name of the event.\r\n\t * @param {Function} callback The function to be called on event.\r\n\t * @param {Object} [options={}] Additional options.\r\n\t * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\r\n\t * the priority value the sooner the callback will be fired. Events having the same priority are called in the\r\n\t * order they were added.\r\n\t * @param {Boolean} [options.useCapture=false] Indicates that events of this type will be dispatched to the registered\r\n\t * listener before being dispatched to any EventTarget beneath it in the DOM tree.\r\n\t */\r\n\tlistenTo( emitter, ...rest ) {\r\n\t\t// Check if emitter is an instance of DOM Node. If so, replace the argument with\r\n\t\t// corresponding ProxyEmitter (or create one if not existing).\r\n\t\tif ( isNode( emitter ) || isWindow( emitter ) ) {\r\n\t\t\tconst proxy = this._getProxyEmitter( emitter ) || new ProxyEmitter( emitter );\r\n\r\n\t\t\tproxy.attach( ...rest );\r\n\r\n\t\t\temitter = proxy;\r\n\t\t}\r\n\r\n\t\t// Execute parent class method with Emitter (or ProxyEmitter) instance.\r\n\t\tEmitterMixin.listenTo.call( this, emitter, ...rest );\r\n\t},\r\n\r\n\t/**\r\n\t * Stops listening for events. It can be used at different levels:\r\n\t * It is backwards compatible with {@link module:utils/emittermixin~EmitterMixin#listenTo}.\r\n\t *\r\n\t * * To stop listening to a specific callback.\r\n\t * * To stop listening to a specific event.\r\n\t * * To stop listening to all events fired by a specific object.\r\n\t * * To stop listening to all events fired by all object.\r\n\t *\r\n\t * @param {module:utils/emittermixin~Emitter|Node} [emitter] The object to stop listening to. If omitted, stops it for all objects.\r\n\t * @param {String} [event] (Requires the `emitter`) The name of the event to stop listening to. If omitted, stops it\r\n\t * for all events from `emitter`.\r\n\t * @param {Function} [callback] (Requires the `event`) The function to be removed from the call list for the given\r\n\t * `event`.\r\n\t */\r\n\tstopListening( emitter, event, callback ) {\r\n\t\t// Check if emitter is an instance of DOM Node. If so, replace the argument with corresponding ProxyEmitter.\r\n\t\tif ( isNode( emitter ) || isWindow( emitter ) ) {\r\n\t\t\tconst proxy = this._getProxyEmitter( emitter );\r\n\r\n\t\t\t// Element has no listeners.\r\n\t\t\tif ( !proxy ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\temitter = proxy;\r\n\t\t}\r\n\r\n\t\t// Execute parent class method with Emitter (or ProxyEmitter) instance.\r\n\t\tEmitterMixin.stopListening.call( this, emitter, event, callback );\r\n\r\n\t\tif ( emitter instanceof ProxyEmitter ) {\r\n\t\t\temitter.detach( event );\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Retrieves ProxyEmitter instance for given DOM Node residing in this Host.\r\n\t *\r\n\t * @private\r\n\t * @param {Node} node DOM Node of the ProxyEmitter.\r\n\t * @returns {module:utils/dom/emittermixin~ProxyEmitter} ProxyEmitter instance or null.\r\n\t */\r\n\t_getProxyEmitter( node ) {\r\n\t\treturn _getEmitterListenedTo( this, getNodeUID( node ) );\r\n\t}\r\n} );\r\n\r\nexport default DomEmitterMixin;\r\n\r\n/**\r\n * Creates a ProxyEmitter instance. Such an instance is a bridge between a DOM Node firing events\r\n * and any Host listening to them. It is backwards compatible with {@link module:utils/emittermixin~EmitterMixin#on}.\r\n *\r\n *                                  listenTo( click, ... )\r\n *                    +-----------------------------------------+\r\n *                    |              stopListening( ... )       |\r\n *     +----------------------------+                           |             addEventListener( click, ... )\r\n *     | Host                       |                           |   +---------------------------------------------+\r\n *     +----------------------------+                           |   |       removeEventListener( click, ... )     |\r\n *     | _listeningTo: {            |                +----------v-------------+                                   |\r\n *     |   UID: {                   |                | ProxyEmitter           |                                   |\r\n *     |     emitter: ProxyEmitter, |                +------------------------+                      +------------v----------+\r\n *     |     callbacks: {           |                | events: {              |                      | Node (HTMLElement)    |\r\n *     |       click: [ callbacks ] |                |   click: [ callbacks ] |                      +-----------------------+\r\n *     |     }                      |                | },                     |                      | data-ck-expando: UID  |\r\n *     |   }                        |                | _domNode: Node,        |                      +-----------------------+\r\n *     | }                          |                | _domListeners: {},     |                                   |\r\n *     | +------------------------+ |                | _emitterId: UID        |                                   |\r\n *     | | DomEmitterMixin        | |                +--------------^---------+                                   |\r\n *     | +------------------------+ |                           |   |                                             |\r\n *     +--------------^-------------+                           |   +---------------------------------------------+\r\n *                    |                                         |                  click (DOM Event)\r\n *                    +-----------------------------------------+\r\n *                                fire( click, DOM Event )\r\n *\r\n * @mixes module:utils/emittermixin~EmitterMixin\r\n * @implements module:utils/dom/emittermixin~Emitter\r\n * @private\r\n */\r\nclass ProxyEmitter {\r\n\t/**\r\n\t * @param {Node} node DOM Node that fires events.\r\n\t * @returns {Object} ProxyEmitter instance bound to the DOM Node.\r\n\t */\r\n\tconstructor( node ) {\r\n\t\t// Set emitter ID to match DOM Node \"expando\" property.\r\n\t\t_setEmitterId( this, getNodeUID( node ) );\r\n\r\n\t\t// Remember the DOM Node this ProxyEmitter is bound to.\r\n\t\tthis._domNode = node;\r\n\t}\r\n}\r\n\r\nextend( ProxyEmitter.prototype, EmitterMixin, {\r\n\t/**\r\n\t * Collection of native DOM listeners.\r\n\t *\r\n\t * @private\r\n\t * @member {Object} module:utils/dom/emittermixin~ProxyEmitter#_domListeners\r\n\t */\r\n\r\n\t/**\r\n\t * Registers a callback function to be executed when an event is fired.\r\n\t *\r\n\t * It attaches a native DOM listener to the DOM Node. When fired,\r\n\t * a corresponding Emitter event will also fire with DOM Event object as an argument.\r\n\t *\r\n\t * @method module:utils/dom/emittermixin~ProxyEmitter#attach\r\n\t * @param {String} event The name of the event.\r\n\t * @param {Function} callback The function to be called on event.\r\n\t * @param {Object} [options={}] Additional options.\r\n\t * @param {Boolean} [options.useCapture=false] Indicates that events of this type will be dispatched to the registered\r\n\t * listener before being dispatched to any EventTarget beneath it in the DOM tree.\r\n\t */\r\n\tattach( event, callback, options = {} ) {\r\n\t\t// If the DOM Listener for given event already exist it is pointless\r\n\t\t// to attach another one.\r\n\t\tif ( this._domListeners && this._domListeners[ event ] ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst domListener = this._createDomListener( event, !!options.useCapture );\r\n\r\n\t\t// Attach the native DOM listener to DOM Node.\r\n\t\tthis._domNode.addEventListener( event, domListener, !!options.useCapture );\r\n\r\n\t\tif ( !this._domListeners ) {\r\n\t\t\tthis._domListeners = {};\r\n\t\t}\r\n\r\n\t\t// Store the native DOM listener in this ProxyEmitter. It will be helpful\r\n\t\t// when stopping listening to the event.\r\n\t\tthis._domListeners[ event ] = domListener;\r\n\t},\r\n\r\n\t/**\r\n\t * Stops executing the callback on the given event.\r\n\t *\r\n\t * @method module:utils/dom/emittermixin~ProxyEmitter#detach\r\n\t * @param {String} event The name of the event.\r\n\t */\r\n\tdetach( event ) {\r\n\t\tlet events;\r\n\r\n\t\t// Remove native DOM listeners which are orphans. If no callbacks\r\n\t\t// are awaiting given event, detach native DOM listener from DOM Node.\r\n\t\t// See: {@link attach}.\r\n\r\n\t\tif ( this._domListeners[ event ] && ( !( events = this._events[ event ] ) || !events.callbacks.length ) ) {\r\n\t\t\tthis._domListeners[ event ].removeListener();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Creates a native DOM listener callback. When the native DOM event\r\n\t * is fired it will fire corresponding event on this ProxyEmitter.\r\n\t * Note: A native DOM Event is passed as an argument.\r\n\t *\r\n\t * @private\r\n\t * @method module:utils/dom/emittermixin~ProxyEmitter#_createDomListener\r\n\t * @param {String} event The name of the event.\r\n\t * @param {Boolean} useCapture Indicates whether the listener was created for capturing event.\r\n\t * @returns {Function} The DOM listener callback.\r\n\t */\r\n\t_createDomListener( event, useCapture ) {\r\n\t\tconst domListener = domEvt => {\r\n\t\t\tthis.fire( event, domEvt );\r\n\t\t};\r\n\r\n\t\t// Supply the DOM listener callback with a function that will help\r\n\t\t// detach it from the DOM Node, when it is no longer necessary.\r\n\t\t// See: {@link detach}.\r\n\t\tdomListener.removeListener = () => {\r\n\t\t\tthis._domNode.removeEventListener( event, domListener, useCapture );\r\n\t\t\tdelete this._domListeners[ event ];\r\n\t\t};\r\n\r\n\t\treturn domListener;\r\n\t}\r\n} );\r\n\r\n// Gets an unique DOM Node identifier. The identifier will be set if not defined.\r\n//\r\n// @private\r\n// @param {Node} node\r\n// @returns {String} UID for given DOM Node.\r\nfunction getNodeUID( node ) {\r\n\treturn node[ 'data-ck-expando' ] || ( node[ 'data-ck-expando' ] = uid() );\r\n}\r\n\r\n/**\r\n * Interface representing classes which mix in {@link module:utils/dom/emittermixin~EmitterMixin}.\r\n *\r\n * @interface Emitter\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/* globals Node */\r\n\r\n/**\r\n * @module utils/dom/getancestors\r\n */\r\n\r\n/**\r\n * Returns all ancestors of given DOM node, starting from the top-most (root). Includes the given node itself. If the\r\n * node is a part of `DocumentFragment` that `DocumentFragment` will be returned. In contrary, if the node is\r\n * appended to a `Document`, that `Document` will not be returned (algorithms operating on DOM tree care for `Document#documentElement`\r\n * at most, which will be returned).\r\n *\r\n * @param {Node} node DOM node.\r\n * @returns {Array.<Node|DocumentFragment>} Array of given `node` parents.\r\n */\r\nexport default function getAncestors( node ) {\r\n\tconst nodes = [];\r\n\r\n\t// We are interested in `Node`s `DocumentFragment`s only.\r\n\twhile ( node && node.nodeType != Node.DOCUMENT_NODE ) {\r\n\t\tnodes.unshift( node );\r\n\t\tnode = node.parentNode;\r\n\t}\r\n\r\n\treturn nodes;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/dom/getborderwidths\r\n */\r\n\r\n/**\r\n * Returns an object containing CSS border widths of a specified HTML element.\r\n *\r\n * @param {HTMLElement} element An element which has CSS borders.\r\n * @returns {Object} An object containing `top`, `left`, `right` and `bottom` properties\r\n * with numerical values of the `border-[top,left,right,bottom]-width` CSS styles.\r\n */\r\nexport default function getBorderWidths( element ) {\r\n\t// Call getComputedStyle on the window the element document belongs to.\r\n\tconst style = element.ownerDocument.defaultView.getComputedStyle( element );\r\n\r\n\treturn {\r\n\t\ttop: parseInt( style.borderTopWidth, 10 ),\r\n\t\tright: parseInt( style.borderRightWidth, 10 ),\r\n\t\tbottom: parseInt( style.borderBottomWidth, 10 ),\r\n\t\tleft: parseInt( style.borderLeftWidth, 10 )\r\n\t};\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/dom/getcommonancestor\r\n */\r\n\r\nimport getAncestors from './getancestors';\r\n\r\n/**\r\n * Searches and returns the lowest common ancestor of two given nodes.\r\n *\r\n * @param {Node} nodeA First node.\r\n * @param {Node} nodeB Second node.\r\n * @returns {Node|DocumentFragment|Document|null} Lowest common ancestor of both nodes or `null` if nodes do not have a common ancestor.\r\n */\r\nexport default function getCommonAncestor( nodeA, nodeB ) {\r\n\tconst ancestorsA = getAncestors( nodeA );\r\n\tconst ancestorsB = getAncestors( nodeB );\r\n\r\n\tlet i = 0;\r\n\r\n\t// It does not matter which array is shorter.\r\n\twhile ( ancestorsA[ i ] == ancestorsB[ i ] && ancestorsA[ i ] ) {\r\n\t\ti++;\r\n\t}\r\n\r\n\treturn i === 0 ? null : ancestorsA[ i - 1 ];\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/* globals HTMLTextAreaElement */\r\n\r\n/**\r\n * @module utils/dom/getdatafromelement\r\n */\r\n\r\n/**\r\n * Gets data from a given source element.\r\n *\r\n * @param {HTMLElement} el The element from which the data will be retrieved.\r\n * @returns {String} The data string.\r\n */\r\nexport default function getDataFromElement( el ) {\r\n\tif ( el instanceof HTMLTextAreaElement ) {\r\n\t\treturn el.value;\r\n\t}\r\n\r\n\treturn el.innerHTML;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/dom/getpositionedancestor\r\n */\r\n\r\nimport global from './global';\r\n\r\n/**\r\n * For a given element, returns the nearest ancestor element which CSS position is not \"static\".\r\n *\r\n * @param {HTMLElement} element The native DOM element to be checked.\r\n * @returns {HTMLElement|null}\r\n */\r\nexport default function getPositionedAncestor( element ) {\r\n\twhile ( element && element.tagName.toLowerCase() != 'html' ) {\r\n\t\tif ( global.window.getComputedStyle( element ).position != 'static' ) {\r\n\t\t\treturn element;\r\n\t\t}\r\n\r\n\t\telement = element.parentElement;\r\n\t}\r\n\r\n\treturn null;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/* globals window, document */\r\n\r\n/**\r\n * @module utils/dom/global\r\n */\r\n\r\n/**\r\n * A helper (module) giving an access to the global DOM objects such as `window` and\r\n * `document`. Accessing these objects using this helper allows easy and bulletproof\r\n * testing, i.e. stubbing native properties:\r\n *\r\n *\t\timport global from 'ckeditor5/utils/dom/global.js';\r\n *\r\n *\t\t// This stub will work for any code using global module.\r\n *\t\ttestUtils.sinon.stub( global, 'window', {\r\n *\t\t\tinnerWidth: 10000\r\n *\t\t} );\r\n *\r\n *\t\tconsole.log( global.window.innerWidth );\r\n */\r\nexport default { window, document };\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/dom/indexof\r\n */\r\n\r\n/**\r\n * Returns index of the node in the parent element.\r\n *\r\n * @param {Node} node Node which index is tested.\r\n * @returns {Number} Index of the node in the parent element. Returns 0 if node has no parent.\r\n */\r\nexport default function indexOf( node ) {\r\n\tlet index = 0;\r\n\r\n\twhile ( node.previousSibling ) {\r\n\t\tnode = node.previousSibling;\r\n\t\tindex++;\r\n\t}\r\n\r\n\treturn index;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/dom/insertat\r\n */\r\n\r\n/**\r\n * Inserts node to the parent at given index.\r\n *\r\n * @param {Element} parentElement Parent element.\r\n * @param {Number} index Insertions index.\r\n * @param {Node} nodeToInsert Node to insert.\r\n */\r\nexport default function insertAt( parentElement, index, nodeToInsert ) {\r\n\tparentElement.insertBefore( nodeToInsert, parentElement.childNodes[ index ] || null );\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/dom/isnode\r\n */\r\n\r\n/**\r\n * Checks if the object is a native DOM Node.\r\n *\r\n * @param {*} obj\r\n * @returns {Boolean}\r\n */\r\nexport default function isNode( obj ) {\r\n\tif ( obj ) {\r\n\t\tif ( obj.defaultView ) {\r\n\t\t\treturn obj instanceof obj.defaultView.Document;\r\n\t\t} else if ( obj.ownerDocument && obj.ownerDocument.defaultView ) {\r\n\t\t\treturn obj instanceof obj.ownerDocument.defaultView.Node;\r\n\t\t}\r\n\t}\r\n\r\n\treturn false;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/dom/isrange\r\n */\r\n\r\n/**\r\n * Checks if the object is a native DOM Range.\r\n *\r\n * @param {*} obj\r\n * @returns {Boolean}\r\n */\r\nexport default function isRange( obj ) {\r\n\treturn Object.prototype.toString.apply( obj ) == '[object Range]';\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/dom/istext\r\n */\r\n\r\n/**\r\n * Checks if the object is a native DOM Text node.\r\n *\r\n * @param {*} obj\r\n * @returns {Boolean}\r\n */\r\nexport default function isText( obj ) {\r\n\treturn Object.prototype.toString.call( obj ) == '[object Text]';\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/dom/iswindow\r\n */\r\n\r\n/**\r\n * Checks if the object is a native DOM Window.\r\n *\r\n * @param {*} obj\r\n * @returns {Boolean}\r\n */\r\nexport default function isWindow( obj ) {\r\n\tconst stringifiedObject = Object.prototype.toString.apply( obj );\r\n\r\n\t// Returns `true` for the `window` object in browser environments.\r\n\tif ( stringifiedObject == '[object Window]' ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Returns `true` for the `window` object in the Electron environment.\r\n\tif ( stringifiedObject == '[object global]' ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/dom/position\r\n */\r\n\r\nimport global from './global';\r\nimport Rect from './rect';\r\nimport getPositionedAncestor from './getpositionedancestor';\r\nimport getBorderWidths from './getborderwidths';\r\nimport { isFunction } from 'lodash-es';\r\n\r\n/**\r\n * Calculates the `position: absolute` coordinates of a given element so it can be positioned with respect to the\r\n * target in the visually most efficient way, taking various restrictions like viewport or limiter geometry\r\n * into consideration.\r\n *\r\n *\t\t// The element which is to be positioned.\r\n *\t\tconst element = document.body.querySelector( '#toolbar' );\r\n *\r\n *\t\t// A target to which the element is positioned relatively.\r\n *\t\tconst target = document.body.querySelector( '#container' );\r\n *\r\n *\t\t// Finding the optimal coordinates for the positioning.\r\n *\t\tconst { left, top, name } = getOptimalPosition( {\r\n *\t\t\telement: element,\r\n *\t\t\ttarget: target,\r\n *\r\n * \t\t\t// The algorithm will chose among these positions to meet the requirements such\r\n * \t\t\t// as \"limiter\" element or \"fitInViewport\", set below. The positions are considered\r\n * \t\t\t// in the order of the array.\r\n *\t\t\tpositions: [\r\n *\t\t\t\t//\r\n *\t\t\t \t//\t[ Target ]\r\n *\t\t\t\t//\t+-----------------+\r\n *\t\t\t\t//\t|     Element     |\r\n *\t\t\t\t//\t+-----------------+\r\n *\t\t\t\t//\r\n *\t\t\t\ttargetRect => ( {\r\n *\t\t\t\t\ttop: targetRect.bottom,\r\n *\t\t\t\t\tleft: targetRect.left,\r\n *\t\t\t\t\tname: 'mySouthEastPosition'\r\n *\t\t\t\t} ),\r\n *\r\n *\t\t\t\t//\r\n *\t\t\t\t//\t+-----------------+\r\n *\t\t\t\t//\t|     Element     |\r\n *\t\t\t\t//\t+-----------------+\r\n *\t\t\t\t//\t[ Target ]\r\n *\t\t\t\t//\r\n *\t\t\t\t( targetRect, elementRect ) => ( {\r\n *\t\t\t\t\ttop: targetRect.top - elementRect.height,\r\n *\t\t\t\t\tleft: targetRect.left,\r\n *\t\t\t\t\tname: 'myNorthEastPosition'\r\n *\t\t\t\t} )\r\n *\t\t\t],\r\n *\r\n *\t\t\t// Find a position such guarantees the element remains within visible boundaries of <body>.\r\n *\t\t\tlimiter: document.body,\r\n *\r\n *\t\t\t// Find a position such guarantees the element remains within visible boundaries of the browser viewport.\r\n *\t\t\tfitInViewport: true\r\n *\t\t} );\r\n *\r\n *\t\t// The best position which fits into document.body and the viewport. May be useful\r\n *\t\t// to set proper class on the `element`.\r\n *\t\tconsole.log( name ); // -> \"myNorthEastPosition\"\r\n *\r\n *\t\t// Using the absolute coordinates which has been found to position the element\r\n *\t\t// as in the diagram depicting the \"myNorthEastPosition\" position.\r\n *\t\telement.style.top = top;\r\n *\t\telement.style.left = left;\r\n *\r\n * @param {module:utils/dom/position~Options} options Positioning options object.\r\n * @returns {module:utils/dom/position~Position}\r\n */\r\nexport function getOptimalPosition( { element, target, positions, limiter, fitInViewport } ) {\r\n\t// If the {@link module:utils/dom/position~Options#target} is a function, use what it returns.\r\n\t// https://github.com/ckeditor/ckeditor5-utils/issues/157\r\n\tif ( isFunction( target ) ) {\r\n\t\ttarget = target();\r\n\t}\r\n\r\n\t// If the {@link module:utils/dom/position~Options#limiter} is a function, use what it returns.\r\n\t// https://github.com/ckeditor/ckeditor5-ui/issues/260\r\n\tif ( isFunction( limiter ) ) {\r\n\t\tlimiter = limiter();\r\n\t}\r\n\r\n\tconst positionedElementAncestor = getPositionedAncestor( element.parentElement );\r\n\tconst elementRect = new Rect( element );\r\n\tconst targetRect = new Rect( target );\r\n\r\n\tlet bestPosition;\r\n\tlet name;\r\n\r\n\t// If there are no limits, just grab the very first position and be done with that drama.\r\n\tif ( !limiter && !fitInViewport ) {\r\n\t\t[ name, bestPosition ] = getPosition( positions[ 0 ], targetRect, elementRect );\r\n\t} else {\r\n\t\tconst limiterRect = limiter && new Rect( limiter ).getVisible();\r\n\t\tconst viewportRect = fitInViewport && new Rect( global.window );\r\n\r\n\t\t[ name, bestPosition ] =\r\n\t\t\tgetBestPosition( positions, targetRect, elementRect, limiterRect, viewportRect ) ||\r\n\t\t\t// If there's no best position found, i.e. when all intersections have no area because\r\n\t\t\t// rects have no width or height, then just use the first available position.\r\n\t\t\tgetPosition( positions[ 0 ], targetRect, elementRect );\r\n\t}\r\n\r\n\tlet { left, top } = getAbsoluteRectCoordinates( bestPosition );\r\n\r\n\tif ( positionedElementAncestor ) {\r\n\t\tconst ancestorPosition = getAbsoluteRectCoordinates( new Rect( positionedElementAncestor ) );\r\n\t\tconst ancestorBorderWidths = getBorderWidths( positionedElementAncestor );\r\n\r\n\t\t// (https://github.com/ckeditor/ckeditor5-ui-default/issues/126)\r\n\t\t// If there's some positioned ancestor of the panel, then its `Rect` must be taken into\r\n\t\t// consideration. `Rect` is always relative to the viewport while `position: absolute` works\r\n\t\t// with respect to that positioned ancestor.\r\n\t\tleft -= ancestorPosition.left;\r\n\t\ttop -= ancestorPosition.top;\r\n\r\n\t\t// (https://github.com/ckeditor/ckeditor5-utils/issues/139)\r\n\t\t// If there's some positioned ancestor of the panel, not only its position must be taken into\r\n\t\t// consideration (see above) but also its internal scrolls. Scroll have an impact here because `Rect`\r\n\t\t// is relative to the viewport (it doesn't care about scrolling), while `position: absolute`\r\n\t\t// must compensate that scrolling.\r\n\t\tleft += positionedElementAncestor.scrollLeft;\r\n\t\ttop += positionedElementAncestor.scrollTop;\r\n\r\n\t\t// (https://github.com/ckeditor/ckeditor5-utils/issues/139)\r\n\t\t// If there's some positioned ancestor of the panel, then its `Rect` includes its CSS `borderWidth`\r\n\t\t// while `position: absolute` positioning does not consider it.\r\n\t\t// E.g. `{ position: absolute, top: 0, left: 0 }` means upper left corner of the element,\r\n\t\t// not upper-left corner of its border.\r\n\t\tleft -= ancestorBorderWidths.left;\r\n\t\ttop -= ancestorBorderWidths.top;\r\n\t}\r\n\r\n\treturn { left, top, name };\r\n}\r\n\r\n// For given position function, returns a corresponding `Rect` instance.\r\n//\r\n// @private\r\n// @param {Function} position A function returning {@link module:utils/dom/position~Position}.\r\n// @param {utils/dom/rect~Rect} targetRect A rect of the target.\r\n// @param {utils/dom/rect~Rect} elementRect A rect of positioned element.\r\n// @returns {Array} An array containing position name and its Rect.\r\nfunction getPosition( position, targetRect, elementRect ) {\r\n\tconst { left, top, name } = position( targetRect, elementRect );\r\n\r\n\treturn [ name, elementRect.clone().moveTo( left, top ) ];\r\n}\r\n\r\n// For a given array of positioning functions, returns such that provides the best\r\n// fit of the `elementRect` into the `limiterRect` and `viewportRect`.\r\n//\r\n// @private\r\n// @param {module:utils/dom/position~Options#positions} positions Functions returning\r\n// {@link module:utils/dom/position~Position} to be checked, in the order of preference.\r\n// @param {utils/dom/rect~Rect} targetRect A rect of the {@link module:utils/dom/position~Options#target}.\r\n// @param {utils/dom/rect~Rect} elementRect A rect of positioned {@link module:utils/dom/position~Options#element}.\r\n// @param {utils/dom/rect~Rect} limiterRect A rect of the {@link module:utils/dom/position~Options#limiter}.\r\n// @param {utils/dom/rect~Rect} viewportRect A rect of the viewport.\r\n// @returns {Array} An array containing the name of the position and it's rect.\r\nfunction getBestPosition( positions, targetRect, elementRect, limiterRect, viewportRect ) {\r\n\tlet maxLimiterIntersectArea = 0;\r\n\tlet maxViewportIntersectArea = 0;\r\n\tlet bestPositionRect;\r\n\tlet bestPositionName;\r\n\r\n\t// This is when element is fully visible.\r\n\tconst elementRectArea = elementRect.getArea();\r\n\r\n\tpositions.some( position => {\r\n\t\tconst [ positionName, positionRect ] = getPosition( position, targetRect, elementRect );\r\n\t\tlet limiterIntersectArea;\r\n\t\tlet viewportIntersectArea;\r\n\r\n\t\tif ( limiterRect ) {\r\n\t\t\tif ( viewportRect ) {\r\n\t\t\t\t// Consider only the part of the limiter which is visible in the viewport. So the limiter is getting limited.\r\n\t\t\t\tconst limiterViewportIntersectRect = limiterRect.getIntersection( viewportRect );\r\n\r\n\t\t\t\tif ( limiterViewportIntersectRect ) {\r\n\t\t\t\t\t// If the limiter is within the viewport, then check the intersection between that part of the\r\n\t\t\t\t\t// limiter and actual position.\r\n\t\t\t\t\tlimiterIntersectArea = limiterViewportIntersectRect.getIntersectionArea( positionRect );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlimiterIntersectArea = 0;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tlimiterIntersectArea = limiterRect.getIntersectionArea( positionRect );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( viewportRect ) {\r\n\t\t\tviewportIntersectArea = viewportRect.getIntersectionArea( positionRect );\r\n\t\t}\r\n\r\n\t\t// The only criterion: intersection with the viewport.\r\n\t\tif ( viewportRect && !limiterRect ) {\r\n\t\t\tif ( viewportIntersectArea > maxViewportIntersectArea ) {\r\n\t\t\t\tsetBestPosition();\r\n\t\t\t}\r\n\t\t}\r\n\t\t// The only criterion: intersection with the limiter.\r\n\t\telse if ( !viewportRect && limiterRect ) {\r\n\t\t\tif ( limiterIntersectArea > maxLimiterIntersectArea ) {\r\n\t\t\t\tsetBestPosition();\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Two criteria: intersection with the viewport and the limiter visible in the viewport.\r\n\t\telse {\r\n\t\t\tif ( viewportIntersectArea > maxViewportIntersectArea && limiterIntersectArea >= maxLimiterIntersectArea ) {\r\n\t\t\t\tsetBestPosition();\r\n\t\t\t} else if ( viewportIntersectArea >= maxViewportIntersectArea && limiterIntersectArea > maxLimiterIntersectArea ) {\r\n\t\t\t\tsetBestPosition();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction setBestPosition() {\r\n\t\t\tmaxViewportIntersectArea = viewportIntersectArea;\r\n\t\t\tmaxLimiterIntersectArea = limiterIntersectArea;\r\n\t\t\tbestPositionRect = positionRect;\r\n\t\t\tbestPositionName = positionName;\r\n\t\t}\r\n\r\n\t\t// If a such position is found that element is fully container by the limiter then, obviously,\r\n\t\t// there will be no better one, so finishing.\r\n\t\treturn limiterIntersectArea === elementRectArea;\r\n\t} );\r\n\r\n\treturn bestPositionRect ? [ bestPositionName, bestPositionRect ] : null;\r\n}\r\n\r\n// DOMRect (also Rect) works in a scroll–independent geometry but `position: absolute` doesn't.\r\n// This function converts Rect to `position: absolute` coordinates.\r\n//\r\n// @private\r\n// @param {utils/dom/rect~Rect} rect A rect to be converted.\r\n// @returns {Object} Object containing `left` and `top` properties, in absolute coordinates.\r\nfunction getAbsoluteRectCoordinates( { left, top } ) {\r\n\tconst { scrollX, scrollY } = global.window;\r\n\r\n\treturn {\r\n\t\tleft: left + scrollX,\r\n\t\ttop: top + scrollY\r\n\t};\r\n}\r\n\r\n/**\r\n * The `getOptimalPosition` helper options.\r\n *\r\n * @interface module:utils/dom/position~Options\r\n */\r\n\r\n/**\r\n * Element that is to be positioned.\r\n *\r\n * @member {HTMLElement} #element\r\n */\r\n\r\n/**\r\n * Target with respect to which the `element` is to be positioned.\r\n *\r\n * @member {HTMLElement|Range|ClientRect|Rect|Function} #target\r\n */\r\n\r\n/**\r\n * An array of functions which return {@link module:utils/dom/position~Position} relative\r\n * to the `target`, in the order of preference.\r\n *\r\n * @member {Array.<Function>} #positions\r\n */\r\n\r\n/**\r\n * When set, the algorithm will chose position which fits the most in the\r\n * limiter's bounding rect.\r\n *\r\n * @member {HTMLElement|Range|ClientRect|Rect|Function} #limiter\r\n */\r\n\r\n/**\r\n * When set, the algorithm will chose such a position which fits `element`\r\n * the most inside visible viewport.\r\n *\r\n * @member {Boolean} #fitInViewport\r\n */\r\n\r\n/**\r\n * An object describing a position in `position: absolute` coordinate\r\n * system, along with position name.\r\n *\r\n * @typedef {Object} module:utils/dom/position~Position\r\n *\r\n * @property {Number} top Top position offset.\r\n * @property {Number} left Left position offset.\r\n * @property {String} name Name of the position.\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/dom/rect\r\n */\r\n\r\nimport isRange from './isrange';\r\nimport isWindow from './iswindow';\r\nimport getBorderWidths from './getborderwidths';\r\nimport isText from './istext';\r\nimport { isElement } from 'lodash-es';\r\n\r\nconst rectProperties = [ 'top', 'right', 'bottom', 'left', 'width', 'height' ];\r\n\r\n/**\r\n * A helper class representing a `ClientRect` object, e.g. value returned by\r\n * the native `object.getBoundingClientRect()` method. Provides a set of methods\r\n * to manipulate the rect and compare it against other rect instances.\r\n */\r\nexport default class Rect {\r\n\t/**\r\n\t * Creates an instance of rect.\r\n\t *\r\n\t *\t\t// Rect of an HTMLElement.\r\n\t *\t\tconst rectA = new Rect( document.body );\r\n\t *\r\n\t *\t\t// Rect of a DOM Range.\r\n\t *\t\tconst rectB = new Rect( document.getSelection().getRangeAt( 0 ) );\r\n\t *\r\n\t *\t\t// Rect of a window (web browser viewport).\r\n\t *\t\tconst rectC = new Rect( window );\r\n\t *\r\n\t *\t\t// Rect out of an object.\r\n\t *\t\tconst rectD = new Rect( { top: 0, right: 10, bottom: 10, left: 0, width: 10, height: 10 } );\r\n\t *\r\n\t *\t\t// Rect out of another Rect instance.\r\n\t *\t\tconst rectE = new Rect( rectD );\r\n\t *\r\n\t *\t\t// Rect out of a ClientRect.\r\n\t *\t\tconst rectF = new Rect( document.body.getClientRects().item( 0 ) );\r\n\t *\r\n\t * **Note**: By default a rect of an HTML element includes its CSS borders and scrollbars (if any)\r\n\t * ant the rect of a `window` includes scrollbars too. Use {@link #excludeScrollbarsAndBorders}\r\n\t * to get the inner part of the rect.\r\n\t *\r\n\t * @param {HTMLElement|Range|Window|ClientRect|module:utils/dom/rect~Rect|Object} source A source object to create the rect.\r\n\t */\r\n\tconstructor( source ) {\r\n\t\tconst isSourceRange = isRange( source );\r\n\r\n\t\t/**\r\n\t\t * The object this rect is for.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @readonly\r\n\t\t * @member {HTMLElement|Range|ClientRect|module:utils/dom/rect~Rect|Object} #_source\r\n\t\t */\r\n\t\tObject.defineProperty( this, '_source', {\r\n\t\t\t// If the source is a Rect instance, copy it's #_source.\r\n\t\t\tvalue: source._source || source,\r\n\t\t\twritable: true,\r\n\t\t\tenumerable: false\r\n\t\t} );\r\n\r\n\t\tif ( isElement( source ) || isSourceRange ) {\r\n\t\t\t// The `Rect` class depends on `getBoundingClientRect` and `getClientRects` DOM methods. If the source\r\n\t\t\t// of a rect in an HTML element or a DOM range but it does not belong to any rendered DOM tree, these methods\r\n\t\t\t// will fail to obtain the geometry and the rect instance makes little sense to the features using it.\r\n\t\t\t// To get rid of this warning make sure the source passed to the constructor is a descendant of `window.document.body`.\r\n\t\t\t// @if CK_DEBUG // const sourceNode = isSourceRange ? source.startContainer : source;\r\n\t\t\t// @if CK_DEBUG // if ( !sourceNode.ownerDocument || !sourceNode.ownerDocument.body.contains( sourceNode ) ) {\r\n\t\t\t// @if CK_DEBUG // \tconsole.warn(\r\n\t\t\t// @if CK_DEBUG // \t\t'rect-source-not-in-dom: The source of this rect does not belong to any rendered DOM tree.',\r\n\t\t\t// @if CK_DEBUG // \t\t{ source } );\r\n\t\t\t// @if CK_DEBUG // }\r\n\r\n\t\t\tif ( isSourceRange ) {\r\n\t\t\t\tcopyRectProperties( this, Rect.getDomRangeRects( source )[ 0 ] );\r\n\t\t\t} else {\r\n\t\t\t\tcopyRectProperties( this, source.getBoundingClientRect() );\r\n\t\t\t}\r\n\t\t} else if ( isWindow( source ) ) {\r\n\t\t\tconst { innerWidth, innerHeight } = source;\r\n\r\n\t\t\tcopyRectProperties( this, {\r\n\t\t\t\ttop: 0,\r\n\t\t\t\tright: innerWidth,\r\n\t\t\t\tbottom: innerHeight,\r\n\t\t\t\tleft: 0,\r\n\t\t\t\twidth: innerWidth,\r\n\t\t\t\theight: innerHeight\r\n\t\t\t} );\r\n\t\t} else {\r\n\t\t\tcopyRectProperties( this, source );\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The \"top\" value of the rect.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Number} #top\r\n\t\t */\r\n\r\n\t\t/**\r\n\t\t * The \"right\" value of the rect.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Number} #right\r\n\t\t */\r\n\r\n\t\t/**\r\n\t\t * The \"bottom\" value of the rect.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Number} #bottom\r\n\t\t */\r\n\r\n\t\t/**\r\n\t\t * The \"left\" value of the rect.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Number} #left\r\n\t\t */\r\n\r\n\t\t/**\r\n\t\t * The \"width\" value of the rect.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Number} #width\r\n\t\t */\r\n\r\n\t\t/**\r\n\t\t * The \"height\" value of the rect.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Number} #height\r\n\t\t */\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a clone of the rect.\r\n\t *\r\n\t * @returns {module:utils/dom/rect~Rect} A cloned rect.\r\n\t */\r\n\tclone() {\r\n\t\treturn new Rect( this );\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the rect so that its upper–left corner lands in desired `[ x, y ]` location.\r\n\t *\r\n\t * @param {Number} x Desired horizontal location.\r\n\t * @param {Number} y Desired vertical location.\r\n\t * @returns {module:utils/dom/rect~Rect} A rect which has been moved.\r\n\t */\r\n\tmoveTo( x, y ) {\r\n\t\tthis.top = y;\r\n\t\tthis.right = x + this.width;\r\n\t\tthis.bottom = y + this.height;\r\n\t\tthis.left = x;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the rect in–place by a dedicated offset.\r\n\t *\r\n\t * @param {Number} x A horizontal offset.\r\n\t * @param {Number} y A vertical offset\r\n\t * @returns {module:utils/dom/rect~Rect} A rect which has been moved.\r\n\t */\r\n\tmoveBy( x, y ) {\r\n\t\tthis.top += y;\r\n\t\tthis.right += x;\r\n\t\tthis.left += x;\r\n\t\tthis.bottom += y;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new rect a a result of intersection with another rect.\r\n\t *\r\n\t * @param {module:utils/dom/rect~Rect} anotherRect\r\n\t * @returns {module:utils/dom/rect~Rect}\r\n\t */\r\n\tgetIntersection( anotherRect ) {\r\n\t\tconst rect = {\r\n\t\t\ttop: Math.max( this.top, anotherRect.top ),\r\n\t\t\tright: Math.min( this.right, anotherRect.right ),\r\n\t\t\tbottom: Math.min( this.bottom, anotherRect.bottom ),\r\n\t\t\tleft: Math.max( this.left, anotherRect.left )\r\n\t\t};\r\n\r\n\t\trect.width = rect.right - rect.left;\r\n\t\trect.height = rect.bottom - rect.top;\r\n\r\n\t\tif ( rect.width < 0 || rect.height < 0 ) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn new Rect( rect );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the area of intersection with another rect.\r\n\t *\r\n\t * @param {module:utils/dom/rect~Rect} anotherRect [description]\r\n\t * @returns {Number} Area of intersection.\r\n\t */\r\n\tgetIntersectionArea( anotherRect ) {\r\n\t\tconst rect = this.getIntersection( anotherRect );\r\n\r\n\t\tif ( rect ) {\r\n\t\t\treturn rect.getArea();\r\n\t\t} else {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the area of the rect.\r\n\t *\r\n\t * @returns {Number}\r\n\t */\r\n\tgetArea() {\r\n\t\treturn this.width * this.height;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new rect, a part of the original rect, which is actually visible to the user,\r\n\t * e.g. an original rect cropped by parent element rects which have `overflow` set in CSS\r\n\t * other than `\"visible\"`.\r\n\t *\r\n\t * If there's no such visible rect, which is when the rect is limited by one or many of\r\n\t * the ancestors, `null` is returned.\r\n\t *\r\n\t * @returns {module:utils/dom/rect~Rect|null} A visible rect instance or `null`, if there's none.\r\n\t */\r\n\tgetVisible() {\r\n\t\tconst source = this._source;\r\n\t\tlet visibleRect = this.clone();\r\n\r\n\t\t// There's no ancestor to crop <body> with the overflow.\r\n\t\tif ( !isBody( source ) ) {\r\n\t\t\tlet parent = source.parentNode || source.commonAncestorContainer;\r\n\r\n\t\t\t// Check the ancestors all the way up to the <body>.\r\n\t\t\twhile ( parent && !isBody( parent ) ) {\r\n\t\t\t\tconst parentRect = new Rect( parent );\r\n\t\t\t\tconst intersectionRect = visibleRect.getIntersection( parentRect );\r\n\r\n\t\t\t\tif ( intersectionRect ) {\r\n\t\t\t\t\tif ( intersectionRect.getArea() < visibleRect.getArea() ) {\r\n\t\t\t\t\t\t// Reduce the visible rect to the intersection.\r\n\t\t\t\t\t\tvisibleRect = intersectionRect;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// There's no intersection, the rect is completely invisible.\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparent = parent.parentNode;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn visibleRect;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if all property values ({@link #top}, {@link #left}, {@link #right},\r\n\t * {@link #bottom}, {@link #width} and {@link #height}) are the equal in both rect\r\n\t * instances.\r\n\t *\r\n\t * @param {module:utils/dom/rect~Rect} rect A rect instance to compare with.\r\n\t * @returns {Boolean} `true` when Rects are equal. `false` otherwise.\r\n\t */\r\n\tisEqual( anotherRect ) {\r\n\t\tfor ( const prop of rectProperties ) {\r\n\t\t\tif ( this[ prop ] !== anotherRect[ prop ] ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether a rect fully contains another rect instance.\r\n\t *\r\n\t * @param {module:utils/dom/rect~Rect} anotherRect\r\n\t * @returns {Boolean} `true` if contains, `false` otherwise.\r\n\t */\r\n\tcontains( anotherRect ) {\r\n\t\tconst intersectRect = this.getIntersection( anotherRect );\r\n\r\n\t\treturn !!( intersectRect && intersectRect.isEqual( anotherRect ) );\r\n\t}\r\n\r\n\t/**\r\n\t * Excludes scrollbars and CSS borders from the rect.\r\n\t *\r\n\t * * Borders are removed when {@link #_source} is an HTML element.\r\n\t * * Scrollbars are excluded from HTML elements and the `window`.\r\n\t *\r\n\t * @returns {module:utils/dom/rect~Rect} A rect which has been updated.\r\n\t */\r\n\texcludeScrollbarsAndBorders() {\r\n\t\tconst source = this._source;\r\n\t\tlet scrollBarWidth, scrollBarHeight, direction;\r\n\r\n\t\tif ( isWindow( source ) ) {\r\n\t\t\tscrollBarWidth = source.innerWidth - source.document.documentElement.clientWidth;\r\n\t\t\tscrollBarHeight = source.innerHeight - source.document.documentElement.clientHeight;\r\n\t\t\tdirection = source.getComputedStyle( source.document.documentElement ).direction;\r\n\t\t} else {\r\n\t\t\tconst borderWidths = getBorderWidths( this._source );\r\n\r\n\t\t\tscrollBarWidth = source.offsetWidth - source.clientWidth - borderWidths.left - borderWidths.right;\r\n\t\t\tscrollBarHeight = source.offsetHeight - source.clientHeight - borderWidths.top - borderWidths.bottom;\r\n\t\t\tdirection = source.ownerDocument.defaultView.getComputedStyle( source ).direction;\r\n\r\n\t\t\tthis.left += borderWidths.left;\r\n\t\t\tthis.top += borderWidths.top;\r\n\t\t\tthis.right -= borderWidths.right;\r\n\t\t\tthis.bottom -= borderWidths.bottom;\r\n\t\t\tthis.width = this.right - this.left;\r\n\t\t\tthis.height = this.bottom - this.top;\r\n\t\t}\r\n\r\n\t\tthis.width -= scrollBarWidth;\r\n\r\n\t\tif ( direction === 'ltr' ) {\r\n\t\t\tthis.right -= scrollBarWidth;\r\n\t\t} else {\r\n\t\t\tthis.left += scrollBarWidth;\r\n\t\t}\r\n\r\n\t\tthis.height -= scrollBarHeight;\r\n\t\tthis.bottom -= scrollBarHeight;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of rects of the given native DOM Range.\r\n\t *\r\n\t * @param {Range} range A native DOM range.\r\n\t * @returns {Array.<module:utils/dom/rect~Rect>} DOM Range rects.\r\n\t */\r\n\tstatic getDomRangeRects( range ) {\r\n\t\tconst rects = [];\r\n\t\t// Safari does not iterate over ClientRectList using for...of loop.\r\n\t\tconst clientRects = Array.from( range.getClientRects() );\r\n\r\n\t\tif ( clientRects.length ) {\r\n\t\t\tfor ( const rect of clientRects ) {\r\n\t\t\t\trects.push( new Rect( rect ) );\r\n\t\t\t}\r\n\t\t}\r\n\t\t// If there's no client rects for the Range, use parent container's bounding rect\r\n\t\t// instead and adjust rect's width to simulate the actual geometry of such range.\r\n\t\t// https://github.com/ckeditor/ckeditor5-utils/issues/153\r\n\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/317\r\n\t\telse {\r\n\t\t\tlet startContainer = range.startContainer;\r\n\r\n\t\t\tif ( isText( startContainer ) ) {\r\n\t\t\t\tstartContainer = startContainer.parentNode;\r\n\t\t\t}\r\n\r\n\t\t\tconst rect = new Rect( startContainer.getBoundingClientRect() );\r\n\t\t\trect.right = rect.left;\r\n\t\t\trect.width = 0;\r\n\r\n\t\t\trects.push( rect );\r\n\t\t}\r\n\r\n\t\treturn rects;\r\n\t}\r\n}\r\n\r\n// Acquires all the rect properties from the passed source.\r\n//\r\n// @private\r\n// @param {module:utils/dom/rect~Rect} rect\r\n// @param {ClientRect|module:utils/dom/rect~Rect|Object} source\r\nfunction copyRectProperties( rect, source ) {\r\n\tfor ( const p of rectProperties ) {\r\n\t\trect[ p ] = source[ p ];\r\n\t}\r\n}\r\n\r\n// Checks if provided object is a <body> HTML element.\r\n//\r\n// @private\r\n// @param {HTMLElement|Range} elementOrRange\r\n// @returns {Boolean}\r\nfunction isBody( elementOrRange ) {\r\n\tif ( !isElement( elementOrRange ) ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn elementOrRange === elementOrRange.ownerDocument.body;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/dom/remove\r\n */\r\n\r\n/**\r\n * Removes given node from parent.\r\n *\r\n * @param {Node} node Node to remove.\r\n */\r\nexport default function remove( node ) {\r\n\tconst parent = node.parentNode;\r\n\r\n\tif ( parent ) {\r\n\t\tparent.removeChild( node );\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/dom/resizeobserver\r\n */\r\n\r\n/* globals setTimeout, clearTimeout */\r\n\r\nimport mix from '../mix';\r\nimport global from './global';\r\nimport Rect from './rect';\r\nimport DomEmitterMixin from './emittermixin';\r\n\r\nconst RESIZE_CHECK_INTERVAL = 100;\r\n\r\n/**\r\n * A helper class which instances allow performing custom actions when native DOM elements are resized.\r\n *\r\n *\t\tconst editableElement = editor.editing.view.getDomRoot();\r\n *\r\n *\t\tconst observer = new ResizeObserver( editableElement, entry => {\r\n *\t\t\tconsole.log( 'The editable element has been resized in DOM.' );\r\n *\t\t\tconsole.log( entry.target ); // -> editableElement\r\n *\t\t\tconsole.log( entry.contentRect.width ); // -> e.g. '423px'\r\n *\t\t} );\r\n *\r\n * By default, it uses the [native DOM resize observer](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver)\r\n * under the hood and in browsers that do not support the native API yet, a polyfilled observer is\r\n * used instead.\r\n */\r\nexport default class ResizeObserver {\r\n\t/**\r\n\t * Creates an instance of the `ResizeObserver` class.\r\n\t *\r\n\t * @param {HTMLElement} element A DOM element that is to be observed for resizing. Note that\r\n\t * the element must be visible (i.e. not detached from DOM) for the observer to work.\r\n\t * @param {Function} callback A function called when the observed element was resized. It passes\r\n\t * the [`ResizeObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry)\r\n\t * object with information about the resize event.\r\n\t */\r\n\tconstructor( element, callback ) {\r\n\t\t// **Note**: For the maximum performance, this class ensures only a single instance of the native\r\n\t\t// (or polyfilled) observer is used no matter how many instances of this class were created.\r\n\t\tif ( !ResizeObserver._observerInstance ) {\r\n\t\t\tResizeObserver._createObserver();\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The element observer by this observer.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @private\r\n\t\t * @member {HTMLElement}\r\n\t\t */\r\n\t\tthis._element = element;\r\n\r\n\t\t/**\r\n\t\t * The callback executed each time {@link #_element} is resized.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @private\r\n\t\t * @member {Function}\r\n\t\t */\r\n\t\tthis._callback = callback;\r\n\r\n\t\tResizeObserver._addElementCallback( element, callback );\r\n\t\tResizeObserver._observerInstance.observe( element );\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys the observer which disables the `callback` passed to the {@link #constructor}.\r\n\t */\r\n\tdestroy() {\r\n\t\tResizeObserver._deleteElementCallback( this._element, this._callback );\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a new resize callback for the DOM element.\r\n\t *\r\n\t * @private\r\n\t * @static\r\n\t * @param {HTMLElement} element\r\n\t * @param {Function} callback\r\n\t */\r\n\tstatic _addElementCallback( element, callback ) {\r\n\t\tif ( !ResizeObserver._elementCallbacks ) {\r\n\t\t\tResizeObserver._elementCallbacks = new Map();\r\n\t\t}\r\n\r\n\t\tlet callbacks = ResizeObserver._elementCallbacks.get( element );\r\n\r\n\t\tif ( !callbacks ) {\r\n\t\t\tcallbacks = new Set();\r\n\t\t\tResizeObserver._elementCallbacks.set( element, callbacks );\r\n\t\t}\r\n\r\n\t\tcallbacks.add( callback );\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a resize callback from the DOM element. If no callbacks are left\r\n\t * for the element, it removes the element from the native observer.\r\n\t *\r\n\t * @private\r\n\t * @static\r\n\t * @param {HTMLElement} element\r\n\t * @param {Function} callback\r\n\t */\r\n\tstatic _deleteElementCallback( element, callback ) {\r\n\t\tconst callbacks = ResizeObserver._getElementCallbacks( element );\r\n\r\n\t\t// Remove the element callback. Check if exist first in case someone\r\n\t\t// called destroy() twice.\r\n\t\tif ( callbacks ) {\r\n\t\t\tcallbacks.delete( callback );\r\n\r\n\t\t\t// If no callbacks left for the element, also remove the element.\r\n\t\t\tif ( !callbacks.size ) {\r\n\t\t\t\tResizeObserver._elementCallbacks.delete( element );\r\n\t\t\t\tResizeObserver._observerInstance.unobserve( element );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( ResizeObserver._elementCallbacks && !ResizeObserver._elementCallbacks.size ) {\r\n\t\t\tResizeObserver._observerInstance = null;\r\n\t\t\tResizeObserver._elementCallbacks = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns are registered resize callbacks for the DOM element.\r\n\t *\r\n\t * @private\r\n\t * @static\r\n\t * @param {HTMLElement} element\r\n\t * @returns {Set.<HTMLElement>|null}\r\n\t */\r\n\tstatic _getElementCallbacks( element ) {\r\n\t\tif ( !ResizeObserver._elementCallbacks ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn ResizeObserver._elementCallbacks.get( element );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates the single native observer shared across all `ResizeObserver` instances.\r\n\t * If the browser does not support the native API, it creates a polyfill.\r\n\t *\r\n\t * @private\r\n\t * @static\r\n\t */\r\n\tstatic _createObserver() {\r\n\t\tlet ObserverConstructor;\r\n\r\n\t\t// TODO: One day, the `ResizeObserver` API will be supported in all modern web browsers.\r\n\t\t// When it happens, this module will no longer make sense and should be removed and\r\n\t\t// the native implementation should be used across the project to save bytes.\r\n\t\t// Check out https://caniuse.com/#feat=resizeobserver.\r\n\t\tif ( typeof global.window.ResizeObserver === 'function' ) {\r\n\t\t\tObserverConstructor = global.window.ResizeObserver;\r\n\t\t} else {\r\n\t\t\tObserverConstructor = ResizeObserverPolyfill;\r\n\t\t}\r\n\r\n\t\tResizeObserver._observerInstance = new ObserverConstructor( entries => {\r\n\t\t\tfor ( const entry of entries ) {\r\n\t\t\t\tconst callbacks = ResizeObserver._getElementCallbacks( entry.target );\r\n\r\n\t\t\t\tif ( callbacks ) {\r\n\t\t\t\t\tfor ( const callback of callbacks ) {\r\n\t\t\t\t\t\tcallback( entry );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n}\r\n\r\n/**\r\n * The single native observer instance (or polyfill in browsers that do not support the API)\r\n * shared across all {@link module:utils/dom/resizeobserver~ResizeObserver} instances.\r\n *\r\n * @static\r\n * @protected\r\n * @readonly\r\n * @property {Object|null} module:utils/dom/resizeobserver~ResizeObserver#_observerInstance\r\n */\r\nResizeObserver._observerInstance = null;\r\n\r\n/**\r\n * A mapping of native DOM elements and their callbacks shared across all\r\n * {@link module:utils/dom/resizeobserver~ResizeObserver} instances.\r\n *\r\n * @static\r\n * @private\r\n * @readonly\r\n * @property {Map.<HTMLElement,Set>|null} module:utils/dom/resizeobserver~ResizeObserver#_elementCallbacks\r\n */\r\nResizeObserver._elementCallbacks = null;\r\n\r\n/**\r\n * A polyfill class for the native [`ResizeObserver`](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver).\r\n *\r\n * @private\r\n * @mixes module:utils/domemittermixin~DomEmitterMixin\r\n */\r\nclass ResizeObserverPolyfill {\r\n\t/**\r\n\t * Creates an instance of the {@link module:utils/dom/resizeobserver~ResizeObserverPolyfill} class.\r\n\t *\r\n\t * It synchronously reacts to resize of the window to check if observed elements' geometry changed.\r\n\t *\r\n\t * Additionally, the polyfilled observer uses a timeout to check if observed elements' geometry has changed\r\n\t * in some other way (dynamic layouts, scrollbars showing up, etc.), so its response can also be asynchronous.\r\n\t *\r\n\t * @param {Function} callback A function called when any observed element was resized. Refer to the\r\n\t * native [`ResizeObserver`](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver) API to\r\n\t * learn more.\r\n\t */\r\n\tconstructor( callback ) {\r\n\t\t/**\r\n\t\t * A function called when any observed {@link #_elements element} was resized.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @protected\r\n\t\t * @member {Function}\r\n\t\t */\r\n\t\tthis._callback = callback;\r\n\r\n\t\t/**\r\n\t\t * DOM elements currently observed by the observer instance.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @protected\r\n\t\t * @member {Set}\r\n\t\t */\r\n\t\tthis._elements = new Set();\r\n\r\n\t\t/**\r\n\t\t * Cached DOM {@link #_elements elements} bounding rects to compare to upon the next check.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @protected\r\n\t\t * @member {Map.<HTMLElement,module:utils/dom/rect~Rect>}\r\n\t\t */\r\n\t\tthis._previousRects = new Map();\r\n\r\n\t\t/**\r\n\t\t * An UID of the current timeout upon which the observed elements rects\r\n\t\t * will be compared to the {@link #_previousRects previous rects} from the past.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @protected\r\n\t\t * @member {Map.<HTMLElement,module:utils/dom/rect~Rect>}\r\n\t\t */\r\n\t\tthis._periodicCheckTimeout = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Starts observing a DOM element.\r\n\t *\r\n\t * Learn more in the\r\n\t * [native method documentation](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/observe).\r\n\t *\r\n\t * @param {HTMLElement} element\r\n\t */\r\n\tobserve( element ) {\r\n\t\tthis._elements.add( element );\r\n\r\n\t\tthis._checkElementRectsAndExecuteCallback();\r\n\r\n\t\tif ( this._elements.size === 1 ) {\r\n\t\t\tthis._startPeriodicCheck();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Stops observing a DOM element.\r\n\t *\r\n\t * Learn more in the\r\n\t * [native method documentation](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/unobserve).\r\n\t *\r\n\t * @param {HTMLElement} element\r\n\t */\r\n\tunobserve( element ) {\r\n\t\tthis._elements.delete( element );\r\n\t\tthis._previousRects.delete( element );\r\n\r\n\t\tif ( !this._elements.size ) {\r\n\t\t\tthis._stopPeriodicCheck();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * When called, the observer calls the {@link #_callback resize callback} for all observed\r\n\t * {@link #_elements elements} but also starts checking periodically for changes in the elements' geometry.\r\n\t * If some are detected, {@link #_callback resize callback} is called for relevant elements that were resized.\r\n\t *\r\n\t * @protected\r\n\t */\r\n\t_startPeriodicCheck() {\r\n\t\tconst periodicCheck = () => {\r\n\t\t\tthis._checkElementRectsAndExecuteCallback();\r\n\t\t\tthis._periodicCheckTimeout = setTimeout( periodicCheck, RESIZE_CHECK_INTERVAL );\r\n\t\t};\r\n\r\n\t\tthis.listenTo( global.window, 'resize', () => {\r\n\t\t\tthis._checkElementRectsAndExecuteCallback();\r\n\t\t} );\r\n\r\n\t\tthis._periodicCheckTimeout = setTimeout( periodicCheck, RESIZE_CHECK_INTERVAL );\r\n\t}\r\n\r\n\t/**\r\n\t * Stops checking for changes in all observed {@link #_elements elements} geometry.\r\n\t *\r\n\t * @protected\r\n\t */\r\n\t_stopPeriodicCheck() {\r\n\t\tclearTimeout( this._periodicCheckTimeout );\r\n\t\tthis.stopListening();\r\n\t\tthis._previousRects.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the geometry of any of the {@link #_elements element} has changed. If so, executes\r\n\t * the {@link #_callback resize callback} with element geometry data.\r\n\t *\r\n\t * @protected\r\n\t */\r\n\t_checkElementRectsAndExecuteCallback() {\r\n\t\tconst entries = [];\r\n\r\n\t\tfor ( const element of this._elements ) {\r\n\t\t\tif ( this._hasRectChanged( element ) ) {\r\n\t\t\t\tentries.push( {\r\n\t\t\t\t\ttarget: element,\r\n\t\t\t\t\tcontentRect: this._previousRects.get( element )\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( entries.length ) {\r\n\t\t\tthis._callback( entries );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Compares the DOM element geometry to the {@link #_previousRects cached geometry} from the past.\r\n\t * Returns `true` if geometry has changed or the element is checked for the first time.\r\n\t *\r\n\t * @protected\r\n\t * @param {HTMLElement} element\r\n\t * @returns {Boolean}\r\n\t */\r\n\t_hasRectChanged( element ) {\r\n\t\tif ( !element.ownerDocument.body.contains( element ) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst currentRect = new Rect( element );\r\n\t\tconst previousRect = this._previousRects.get( element );\r\n\r\n\t\t// The first check should always yield true despite no Previous rect to compare to.\r\n\t\t// The native ResizeObserver does that and... that makes sense. Sort of.\r\n\t\tconst hasChanged = !previousRect || !previousRect.isEqual( currentRect );\r\n\r\n\t\tthis._previousRects.set( element, currentRect );\r\n\r\n\t\treturn hasChanged;\r\n\t}\r\n}\r\n\r\nmix( ResizeObserverPolyfill, DomEmitterMixin );\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/dom/scroll\r\n */\r\n\r\nimport isRange from './isrange';\r\nimport Rect from './rect';\r\nimport isText from './istext';\r\n\r\nconst utils = {};\r\n\r\n/**\r\n * Makes any page `HTMLElement` or `Range` (`target`) visible inside the browser viewport.\r\n * This helper will scroll all `target` ancestors and the web browser viewport to reveal the target to\r\n * the user. If the `target` is already visible, nothing will happen.\r\n *\r\n * @param {HTMLElement|Range} options.target A target, which supposed to become visible to the user.\r\n * @param {Number} [options.viewportOffset] An offset from the edge of the viewport (in pixels)\r\n * the `target` will be moved by when the viewport is scrolled. It enhances the user experience\r\n * by keeping the `target` some distance from the edge of the viewport and thus making it easier to\r\n * read or edit by the user.\r\n */\r\nexport function scrollViewportToShowTarget( { target, viewportOffset = 0 } ) {\r\n\tconst targetWindow = getWindow( target );\r\n\tlet currentWindow = targetWindow;\r\n\tlet currentFrame = null;\r\n\r\n\t// Iterate over all windows, starting from target's parent window up to window#top.\r\n\twhile ( currentWindow ) {\r\n\t\tlet firstAncestorToScroll;\r\n\r\n\t\t// Let's scroll target's ancestors first to reveal it. Then, once the ancestor scrolls\r\n\t\t// settled down, the algorithm can eventually scroll the viewport of the current window.\r\n\t\t//\r\n\t\t// Note: If the current window is target's **original** window (e.g. the first one),\r\n\t\t// start scrolling the closest parent of the target. If not, scroll the closest parent\r\n\t\t// of an iframe that resides in the current window.\r\n\t\tif ( currentWindow == targetWindow ) {\r\n\t\t\tfirstAncestorToScroll = getParentElement( target );\r\n\t\t} else {\r\n\t\t\tfirstAncestorToScroll = getParentElement( currentFrame );\r\n\t\t}\r\n\r\n\t\t// Scroll the target's ancestors first. Once done, scrolling the viewport is easy.\r\n\t\tscrollAncestorsToShowRect( firstAncestorToScroll, () => {\r\n\t\t\t// Note: If the target does not belong to the current window **directly**,\r\n\t\t\t// i.e. it resides in an iframe belonging to the window, obtain the target's rect\r\n\t\t\t// in the coordinates of the current window. By default, a Rect returns geometry\r\n\t\t\t// relative to the current window's viewport. To make it work in a parent window,\r\n\t\t\t// it must be shifted.\r\n\t\t\treturn getRectRelativeToWindow( target, currentWindow );\r\n\t\t} );\r\n\r\n\t\t// Obtain the rect of the target after it has been scrolled within its ancestors.\r\n\t\t// It's time to scroll the viewport.\r\n\t\tconst targetRect = getRectRelativeToWindow( target, currentWindow );\r\n\r\n\t\tscrollWindowToShowRect( currentWindow, targetRect, viewportOffset );\r\n\r\n\t\tif ( currentWindow.parent != currentWindow ) {\r\n\t\t\t// Keep the reference to the <iframe> element the \"previous current window\" was\r\n\t\t\t// rendered within. It will be useful to re–calculate the rect of the target\r\n\t\t\t// in the parent window's relative geometry. The target's rect must be shifted\r\n\t\t\t// by it's iframe's position.\r\n\t\t\tcurrentFrame = currentWindow.frameElement;\r\n\t\t\tcurrentWindow = currentWindow.parent;\r\n\r\n\t\t\t// If the current window has some parent but frameElement is inaccessible, then they have\r\n\t\t\t// different domains/ports and, due to security reasons, accessing and scrolling\r\n\t\t\t// the parent window won't be possible.\r\n\t\t\t// See https://github.com/ckeditor/ckeditor5/issues/930.\r\n\t\t\tif ( !currentFrame ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tcurrentWindow = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Makes any page `HTMLElement` or `Range` (target) visible within its scrollable ancestors,\r\n * e.g. if they have `overflow: scroll` CSS style.\r\n *\r\n * @param {HTMLElement|Range} target A target, which supposed to become visible to the user.\r\n */\r\nexport function scrollAncestorsToShowTarget( target ) {\r\n\tconst targetParent = getParentElement( target );\r\n\r\n\tscrollAncestorsToShowRect( targetParent, () => {\r\n\t\treturn new Rect( target );\r\n\t} );\r\n}\r\n\r\n// TODO: Using a property value shorthand in the top of the file\r\n// causes JSDoc to throw errors. See https://github.com/cksource/docs-builder/issues/75.\r\nObject.assign( utils, {\r\n\tscrollViewportToShowTarget,\r\n\tscrollAncestorsToShowTarget\r\n} );\r\n\r\n// Makes a given rect visible within its parent window.\r\n//\r\n// Note: Avoid the situation where the caret is still in the viewport, but totally\r\n// at the edge of it. In such situation, if it moved beyond the viewport in the next\r\n// action e.g. after paste, the scrolling would move it to the viewportOffset level\r\n// and it all would look like the caret visually moved up/down:\r\n//\r\n// 1.\r\n//\t\t| foo[]\r\n//\t\t|                                    <--- N px of space below the caret\r\n//\t\t+---------------------------------...\r\n//\r\n// 2. *paste*\r\n// 3.\r\n//\t\t|\r\n//\t\t|\r\n//\t\t+-foo-----------------------------...\r\n//\t\t  bar[]                              <--- caret below viewport, scrolling...\r\n//\r\n// 4. *scrolling*\r\n// 5.\r\n//\t\t|\r\n//\t\t| foo\r\n//\t\t| bar[]                              <--- caret precisely at the edge\r\n//\t\t+---------------------------------...\r\n//\r\n// To prevent this, this method checks the rects moved by the viewportOffset to cover\r\n// the upper/lower edge of the viewport. It makes sure if the action repeats, there's\r\n// no twitching – it's a purely visual improvement:\r\n//\r\n// 5. (after fix)\r\n//\t\t|\r\n//\t\t| foo\r\n//\t\t| bar[]\r\n//\t\t|                                    <--- N px of space below the caret\r\n//\t\t+---------------------------------...\r\n//\r\n// @private\r\n// @param {Window} window A window which is scrolled to reveal the rect.\r\n// @param {module:utils/dom/rect~Rect} rect A rect which is to be revealed.\r\n// @param {Number} viewportOffset See scrollViewportToShowTarget.\r\nfunction scrollWindowToShowRect( window, rect, viewportOffset ) {\r\n\tconst targetShiftedDownRect = rect.clone().moveBy( 0, viewportOffset );\r\n\tconst targetShiftedUpRect = rect.clone().moveBy( 0, -viewportOffset );\r\n\tconst viewportRect = new Rect( window ).excludeScrollbarsAndBorders();\r\n\r\n\tconst rects = [ targetShiftedUpRect, targetShiftedDownRect ];\r\n\r\n\tif ( !rects.every( rect => viewportRect.contains( rect ) ) ) {\r\n\t\tlet { scrollX, scrollY } = window;\r\n\r\n\t\tif ( isAbove( targetShiftedUpRect, viewportRect ) ) {\r\n\t\t\tscrollY -= viewportRect.top - rect.top + viewportOffset;\r\n\t\t} else if ( isBelow( targetShiftedDownRect, viewportRect ) ) {\r\n\t\t\tscrollY += rect.bottom - viewportRect.bottom + viewportOffset;\r\n\t\t}\r\n\r\n\t\t// TODO: Web browsers scroll natively to place the target in the middle\r\n\t\t// of the viewport. It's not a very popular case, though.\r\n\t\tif ( isLeftOf( rect, viewportRect ) ) {\r\n\t\t\tscrollX -= viewportRect.left - rect.left + viewportOffset;\r\n\t\t} else if ( isRightOf( rect, viewportRect ) ) {\r\n\t\t\tscrollX += rect.right - viewportRect.right + viewportOffset;\r\n\t\t}\r\n\r\n\t\twindow.scrollTo( scrollX, scrollY );\r\n\t}\r\n}\r\n\r\n// Recursively scrolls element ancestors to visually reveal a rect.\r\n//\r\n// @private\r\n// @param {HTMLElement} A parent The first ancestors to start scrolling.\r\n// @param {Function} getRect A function which returns the Rect, which is to be revealed.\r\nfunction scrollAncestorsToShowRect( parent, getRect ) {\r\n\tconst parentWindow = getWindow( parent );\r\n\tlet parentRect, targetRect;\r\n\r\n\twhile ( parent != parentWindow.document.body ) {\r\n\t\ttargetRect = getRect();\r\n\t\tparentRect = new Rect( parent ).excludeScrollbarsAndBorders();\r\n\r\n\t\tif ( !parentRect.contains( targetRect ) ) {\r\n\t\t\tif ( isAbove( targetRect, parentRect ) ) {\r\n\t\t\t\tparent.scrollTop -= parentRect.top - targetRect.top;\r\n\t\t\t} else if ( isBelow( targetRect, parentRect ) ) {\r\n\t\t\t\tparent.scrollTop += targetRect.bottom - parentRect.bottom;\r\n\t\t\t}\r\n\r\n\t\t\tif ( isLeftOf( targetRect, parentRect ) ) {\r\n\t\t\t\tparent.scrollLeft -= parentRect.left - targetRect.left;\r\n\t\t\t} else if ( isRightOf( targetRect, parentRect ) ) {\r\n\t\t\t\tparent.scrollLeft += targetRect.right - parentRect.right;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tparent = parent.parentNode;\r\n\t}\r\n}\r\n\r\n// Determines if a given `Rect` extends beyond the bottom edge of the second `Rect`.\r\n//\r\n// @private\r\n// @param {module:utils/dom/rect~Rect} firstRect\r\n// @param {module:utils/dom/rect~Rect} secondRect\r\nfunction isBelow( firstRect, secondRect ) {\r\n\treturn firstRect.bottom > secondRect.bottom;\r\n}\r\n\r\n// Determines if a given `Rect` extends beyond the top edge of the second `Rect`.\r\n//\r\n// @private\r\n// @param {module:utils/dom/rect~Rect} firstRect\r\n// @param {module:utils/dom/rect~Rect} secondRect\r\nfunction isAbove( firstRect, secondRect ) {\r\n\treturn firstRect.top < secondRect.top;\r\n}\r\n\r\n// Determines if a given `Rect` extends beyond the left edge of the second `Rect`.\r\n//\r\n// @private\r\n// @param {module:utils/dom/rect~Rect} firstRect\r\n// @param {module:utils/dom/rect~Rect} secondRect\r\nfunction isLeftOf( firstRect, secondRect ) {\r\n\treturn firstRect.left < secondRect.left;\r\n}\r\n\r\n// Determines if a given `Rect` extends beyond the right edge of the second `Rect`.\r\n//\r\n// @private\r\n// @param {module:utils/dom/rect~Rect} firstRect\r\n// @param {module:utils/dom/rect~Rect} secondRect\r\nfunction isRightOf( firstRect, secondRect ) {\r\n\treturn firstRect.right > secondRect.right;\r\n}\r\n\r\n// Returns the closest window of an element or range.\r\n//\r\n// @private\r\n// @param {HTMLElement|Range} firstRect\r\n// @returns {Window}\r\nfunction getWindow( elementOrRange ) {\r\n\tif ( isRange( elementOrRange ) ) {\r\n\t\treturn elementOrRange.startContainer.ownerDocument.defaultView;\r\n\t} else {\r\n\t\treturn elementOrRange.ownerDocument.defaultView;\r\n\t}\r\n}\r\n\r\n// Returns the closest parent of an element or DOM range.\r\n//\r\n// @private\r\n// @param {HTMLElement|Range} firstRect\r\n// @returns {HTMLelement}\r\nfunction getParentElement( elementOrRange ) {\r\n\tif ( isRange( elementOrRange ) ) {\r\n\t\tlet parent = elementOrRange.commonAncestorContainer;\r\n\r\n\t\t// If a Range is attached to the Text, use the closest element ancestor.\r\n\t\tif ( isText( parent ) ) {\r\n\t\t\tparent = parent.parentNode;\r\n\t\t}\r\n\r\n\t\treturn parent;\r\n\t} else {\r\n\t\treturn elementOrRange.parentNode;\r\n\t}\r\n}\r\n\r\n// Returns the rect of an element or range residing in an iframe.\r\n// The result rect is relative to the geometry of the passed window instance.\r\n//\r\n// @private\r\n// @param {HTMLElement|Range} target Element or range which rect should be returned.\r\n// @param {Window} relativeWindow A window the rect should be relative to.\r\n// @returns {module:utils/dom/rect~Rect}\r\nfunction getRectRelativeToWindow( target, relativeWindow ) {\r\n\tconst targetWindow = getWindow( target );\r\n\tconst rect = new Rect( target );\r\n\r\n\tif ( targetWindow === relativeWindow ) {\r\n\t\treturn rect;\r\n\t} else {\r\n\t\tlet currentWindow = targetWindow;\r\n\r\n\t\twhile ( currentWindow != relativeWindow ) {\r\n\t\t\tconst frame = currentWindow.frameElement;\r\n\t\t\tconst frameRect = new Rect( frame ).excludeScrollbarsAndBorders();\r\n\r\n\t\t\trect.moveBy( frameRect.left, frameRect.top );\r\n\r\n\t\t\tcurrentWindow = currentWindow.parent;\r\n\t\t}\r\n\t}\r\n\r\n\treturn rect;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/dom/setdatainelement\r\n */\r\n\r\n/* globals HTMLTextAreaElement */\r\n\r\n/**\r\n * Sets data in a given element.\r\n *\r\n * @param {HTMLElement} el The element in which the data will be set.\r\n * @param {String} data The data string.\r\n */\r\nexport default function setDataInElement( el, data ) {\r\n\tif ( el instanceof HTMLTextAreaElement ) {\r\n\t\tel.value = data;\r\n\t}\r\n\r\n\tel.innerHTML = data;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/dom/tounit\r\n */\r\n\r\n/**\r\n * Returns a helper function, which adds a desired trailing\r\n * `unit` to the passed value.\r\n *\r\n * @param {String} unit An unit like \"px\" or \"em\".\r\n * @returns {module:utils/dom/tounit~helper}\r\n */\r\nexport default function toUnit( unit ) {\r\n\t/**\r\n\t * A function, which adds a pre–defined trailing `unit`\r\n\t * to the passed `value`.\r\n\t *\r\n\t * @function helper\r\n \t * @param {*} value A value to be given the unit.\r\n \t * @returns {String} A value with the trailing unit.\r\n\t */\r\n\treturn value => value + unit;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/emittermixin\r\n */\r\n\r\nimport EventInfo from './eventinfo';\r\nimport uid from './uid';\r\nimport priorities from './priorities';\r\n\r\n// To check if component is loaded more than once.\r\nimport './version';\r\nimport CKEditorError from './ckeditorerror';\r\n\r\nconst _listeningTo = Symbol( 'listeningTo' );\r\nconst _emitterId = Symbol( 'emitterId' );\r\n\r\n/**\r\n * Mixin that injects the {@link ~Emitter events API} into its host.\r\n *\r\n * @mixin EmitterMixin\r\n * @implements module:utils/emittermixin~Emitter\r\n */\r\nconst EmitterMixin = {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\ton( event, callback, options = {} ) {\r\n\t\tthis.listenTo( this, event, callback, options );\r\n\t},\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tonce( event, callback, options ) {\r\n\t\tlet wasFired = false;\r\n\r\n\t\tconst onceCallback = function( event, ...args ) {\r\n\t\t\t// Ensure the callback is called only once even if the callback itself leads to re-firing the event\r\n\t\t\t// (which would call the callback again).\r\n\t\t\tif ( !wasFired ) {\r\n\t\t\t\twasFired = true;\r\n\r\n\t\t\t\t// Go off() at the first call.\r\n\t\t\t\tevent.off();\r\n\r\n\t\t\t\t// Go with the original callback.\r\n\t\t\t\tcallback.call( this, event, ...args );\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Make a similar on() call, simply replacing the callback.\r\n\t\tthis.listenTo( this, event, onceCallback, options );\r\n\t},\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\toff( event, callback ) {\r\n\t\tthis.stopListening( this, event, callback );\r\n\t},\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tlistenTo( emitter, event, callback, options = {} ) {\r\n\t\tlet emitterInfo, eventCallbacks;\r\n\r\n\t\t// _listeningTo contains a list of emitters that this object is listening to.\r\n\t\t// This list has the following format:\r\n\t\t//\r\n\t\t// _listeningTo: {\r\n\t\t//     emitterId: {\r\n\t\t//         emitter: emitter,\r\n\t\t//         callbacks: {\r\n\t\t//             event1: [ callback1, callback2, ... ]\r\n\t\t//             ....\r\n\t\t//         }\r\n\t\t//     },\r\n\t\t//     ...\r\n\t\t// }\r\n\r\n\t\tif ( !this[ _listeningTo ] ) {\r\n\t\t\tthis[ _listeningTo ] = {};\r\n\t\t}\r\n\r\n\t\tconst emitters = this[ _listeningTo ];\r\n\r\n\t\tif ( !_getEmitterId( emitter ) ) {\r\n\t\t\t_setEmitterId( emitter );\r\n\t\t}\r\n\r\n\t\tconst emitterId = _getEmitterId( emitter );\r\n\r\n\t\tif ( !( emitterInfo = emitters[ emitterId ] ) ) {\r\n\t\t\temitterInfo = emitters[ emitterId ] = {\r\n\t\t\t\temitter,\r\n\t\t\t\tcallbacks: {}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tif ( !( eventCallbacks = emitterInfo.callbacks[ event ] ) ) {\r\n\t\t\teventCallbacks = emitterInfo.callbacks[ event ] = [];\r\n\t\t}\r\n\r\n\t\teventCallbacks.push( callback );\r\n\r\n\t\t// Finally register the callback to the event.\r\n\t\tcreateEventNamespace( emitter, event );\r\n\t\tconst lists = getCallbacksListsForNamespace( emitter, event );\r\n\t\tconst priority = priorities.get( options.priority );\r\n\r\n\t\tconst callbackDefinition = {\r\n\t\t\tcallback,\r\n\t\t\tpriority\r\n\t\t};\r\n\r\n\t\t// Add the callback to all callbacks list.\r\n\t\tfor ( const callbacks of lists ) {\r\n\t\t\t// Add the callback to the list in the right priority position.\r\n\t\t\tlet added = false;\r\n\r\n\t\t\tfor ( let i = 0; i < callbacks.length; i++ ) {\r\n\t\t\t\tif ( callbacks[ i ].priority < priority ) {\r\n\t\t\t\t\tcallbacks.splice( i, 0, callbackDefinition );\r\n\t\t\t\t\tadded = true;\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Add at the end, if right place was not found.\r\n\t\t\tif ( !added ) {\r\n\t\t\t\tcallbacks.push( callbackDefinition );\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstopListening( emitter, event, callback ) {\r\n\t\tconst emitters = this[ _listeningTo ];\r\n\t\tlet emitterId = emitter && _getEmitterId( emitter );\r\n\t\tconst emitterInfo = emitters && emitterId && emitters[ emitterId ];\r\n\t\tconst eventCallbacks = emitterInfo && event && emitterInfo.callbacks[ event ];\r\n\r\n\t\t// Stop if nothing has been listened.\r\n\t\tif ( !emitters || ( emitter && !emitterInfo ) || ( event && !eventCallbacks ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// All params provided. off() that single callback.\r\n\t\tif ( callback ) {\r\n\t\t\tremoveCallback( emitter, event, callback );\r\n\t\t}\r\n\t\t// Only `emitter` and `event` provided. off() all callbacks for that event.\r\n\t\telse if ( eventCallbacks ) {\r\n\t\t\twhile ( ( callback = eventCallbacks.pop() ) ) {\r\n\t\t\t\tremoveCallback( emitter, event, callback );\r\n\t\t\t}\r\n\r\n\t\t\tdelete emitterInfo.callbacks[ event ];\r\n\t\t}\r\n\t\t// Only `emitter` provided. off() all events for that emitter.\r\n\t\telse if ( emitterInfo ) {\r\n\t\t\tfor ( event in emitterInfo.callbacks ) {\r\n\t\t\t\tthis.stopListening( emitter, event );\r\n\t\t\t}\r\n\t\t\tdelete emitters[ emitterId ];\r\n\t\t}\r\n\t\t// No params provided. off() all emitters.\r\n\t\telse {\r\n\t\t\tfor ( emitterId in emitters ) {\r\n\t\t\t\tthis.stopListening( emitters[ emitterId ].emitter );\r\n\t\t\t}\r\n\t\t\tdelete this[ _listeningTo ];\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tfire( eventOrInfo, ...args ) {\r\n\t\ttry {\r\n\t\t\tconst eventInfo = eventOrInfo instanceof EventInfo ? eventOrInfo : new EventInfo( this, eventOrInfo );\r\n\t\t\tconst event = eventInfo.name;\r\n\t\t\tlet callbacks = getCallbacksForEvent( this, event );\r\n\r\n\t\t\t// Record that the event passed this emitter on its path.\r\n\t\t\teventInfo.path.push( this );\r\n\r\n\t\t\t// Handle event listener callbacks first.\r\n\t\t\tif ( callbacks ) {\r\n\t\t\t\t// Arguments passed to each callback.\r\n\t\t\t\tconst callbackArgs = [ eventInfo, ...args ];\r\n\r\n\t\t\t\t// Copying callbacks array is the easiest and most secure way of preventing infinite loops, when event callbacks\r\n\t\t\t\t// are added while processing other callbacks. Previous solution involved adding counters (unique ids) but\r\n\t\t\t\t// failed if callbacks were added to the queue before currently processed callback.\r\n\t\t\t\t// If this proves to be too inefficient, another method is to change `.on()` so callbacks are stored if same\r\n\t\t\t\t// event is currently processed. Then, `.fire()` at the end, would have to add all stored events.\r\n\t\t\t\tcallbacks = Array.from( callbacks );\r\n\r\n\t\t\t\tfor ( let i = 0; i < callbacks.length; i++ ) {\r\n\t\t\t\t\tcallbacks[ i ].callback.apply( this, callbackArgs );\r\n\r\n\t\t\t\t\t// Remove the callback from future requests if off() has been called.\r\n\t\t\t\t\tif ( eventInfo.off.called ) {\r\n\t\t\t\t\t\t// Remove the called mark for the next calls.\r\n\t\t\t\t\t\tdelete eventInfo.off.called;\r\n\r\n\t\t\t\t\t\tremoveCallback( this, event, callbacks[ i ].callback );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Do not execute next callbacks if stop() was called.\r\n\t\t\t\t\tif ( eventInfo.stop.called ) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Delegate event to other emitters if needed.\r\n\t\t\tif ( this._delegations ) {\r\n\t\t\t\tconst destinations = this._delegations.get( event );\r\n\t\t\t\tconst passAllDestinations = this._delegations.get( '*' );\r\n\r\n\t\t\t\tif ( destinations ) {\r\n\t\t\t\t\tfireDelegatedEvents( destinations, eventInfo, args );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( passAllDestinations ) {\r\n\t\t\t\t\tfireDelegatedEvents( passAllDestinations, eventInfo, args );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn eventInfo.return;\r\n\t\t} catch ( err ) {\r\n\t\t\t// @if CK_DEBUG // throw err;\r\n\t\t\t/* istanbul ignore next */\r\n\t\t\tCKEditorError.rethrowUnexpectedError( err, this );\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tdelegate( ...events ) {\r\n\t\treturn {\r\n\t\t\tto: ( emitter, nameOrFunction ) => {\r\n\t\t\t\tif ( !this._delegations ) {\r\n\t\t\t\t\tthis._delegations = new Map();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Originally there was a for..of loop which unfortunately caused an error in Babel that didn't allow\r\n\t\t\t\t// build an application. See: https://github.com/ckeditor/ckeditor5-react/issues/40.\r\n\t\t\t\tevents.forEach( eventName => {\r\n\t\t\t\t\tconst destinations = this._delegations.get( eventName );\r\n\r\n\t\t\t\t\tif ( !destinations ) {\r\n\t\t\t\t\t\tthis._delegations.set( eventName, new Map( [ [ emitter, nameOrFunction ] ] ) );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdestinations.set( emitter, nameOrFunction );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t};\r\n\t},\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tstopDelegating( event, emitter ) {\r\n\t\tif ( !this._delegations ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( !event ) {\r\n\t\t\tthis._delegations.clear();\r\n\t\t} else if ( !emitter ) {\r\n\t\t\tthis._delegations.delete( event );\r\n\t\t} else {\r\n\t\t\tconst destinations = this._delegations.get( event );\r\n\r\n\t\t\tif ( destinations ) {\r\n\t\t\t\tdestinations.delete( emitter );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\nexport default EmitterMixin;\r\n\r\n/**\r\n * Emitter/listener interface.\r\n *\r\n * Can be easily implemented by a class by mixing the {@link module:utils/emittermixin~EmitterMixin} mixin.\r\n *\r\n * @interface Emitter\r\n */\r\n\r\n/**\r\n * Registers a callback function to be executed when an event is fired.\r\n *\r\n * Shorthand for {@link #listenTo `this.listenTo( this, event, callback, options )`} (it makes the emitter\r\n * listen on itself).\r\n *\r\n * @method #on\r\n * @param {String} event The name of the event.\r\n * @param {Function} callback The function to be called on event.\r\n * @param {Object} [options={}] Additional options.\r\n * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\r\n * the priority value the sooner the callback will be fired. Events having the same priority are called in the\r\n * order they were added.\r\n */\r\n\r\n/**\r\n * Registers a callback function to be executed on the next time the event is fired only. This is similar to\r\n * calling {@link #on} followed by {@link #off} in the callback.\r\n *\r\n * @method #once\r\n * @param {String} event The name of the event.\r\n * @param {Function} callback The function to be called on event.\r\n * @param {Object} [options={}] Additional options.\r\n * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\r\n * the priority value the sooner the callback will be fired. Events having the same priority are called in the\r\n * order they were added.\r\n */\r\n\r\n/**\r\n * Stops executing the callback on the given event.\r\n * Shorthand for {@link #stopListening `this.stopListening( this, event, callback )`}.\r\n *\r\n * @method #off\r\n * @param {String} event The name of the event.\r\n * @param {Function} callback The function to stop being called.\r\n */\r\n\r\n/**\r\n * Registers a callback function to be executed when an event is fired in a specific (emitter) object.\r\n *\r\n * Events can be grouped in namespaces using `:`.\r\n * When namespaced event is fired, it additionally fires all callbacks for that namespace.\r\n *\r\n *\t\t// myEmitter.on( ... ) is a shorthand for myEmitter.listenTo( myEmitter, ... ).\r\n *\t\tmyEmitter.on( 'myGroup', genericCallback );\r\n *\t\tmyEmitter.on( 'myGroup:myEvent', specificCallback );\r\n *\r\n *\t\t// genericCallback is fired.\r\n *\t\tmyEmitter.fire( 'myGroup' );\r\n *\t\t// both genericCallback and specificCallback are fired.\r\n *\t\tmyEmitter.fire( 'myGroup:myEvent' );\r\n *\t\t// genericCallback is fired even though there are no callbacks for \"foo\".\r\n *\t\tmyEmitter.fire( 'myGroup:foo' );\r\n *\r\n * An event callback can {@link module:utils/eventinfo~EventInfo#stop stop the event} and\r\n * set the {@link module:utils/eventinfo~EventInfo#return return value} of the {@link #fire} method.\r\n *\r\n * @method #listenTo\r\n * @param {module:utils/emittermixin~Emitter} emitter The object that fires the event.\r\n * @param {String} event The name of the event.\r\n * @param {Function} callback The function to be called on event.\r\n * @param {Object} [options={}] Additional options.\r\n * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\r\n * the priority value the sooner the callback will be fired. Events having the same priority are called in the\r\n * order they were added.\r\n */\r\n\r\n/**\r\n * Stops listening for events. It can be used at different levels:\r\n *\r\n * * To stop listening to a specific callback.\r\n * * To stop listening to a specific event.\r\n * * To stop listening to all events fired by a specific object.\r\n * * To stop listening to all events fired by all objects.\r\n *\r\n * @method #stopListening\r\n * @param {module:utils/emittermixin~Emitter} [emitter] The object to stop listening to. If omitted, stops it for all objects.\r\n * @param {String} [event] (Requires the `emitter`) The name of the event to stop listening to. If omitted, stops it\r\n * for all events from `emitter`.\r\n * @param {Function} [callback] (Requires the `event`) The function to be removed from the call list for the given\r\n * `event`.\r\n */\r\n\r\n/**\r\n * Fires an event, executing all callbacks registered for it.\r\n *\r\n * The first parameter passed to callbacks is an {@link module:utils/eventinfo~EventInfo} object,\r\n * followed by the optional `args` provided in the `fire()` method call.\r\n *\r\n * @method #fire\r\n * @param {String|module:utils/eventinfo~EventInfo} eventOrInfo The name of the event or `EventInfo` object if event is delegated.\r\n * @param {...*} [args] Additional arguments to be passed to the callbacks.\r\n * @returns {*} By default the method returns `undefined`. However, the return value can be changed by listeners\r\n * through modification of the {@link module:utils/eventinfo~EventInfo#return `evt.return`}'s property (the event info\r\n * is the first param of every callback).\r\n */\r\n\r\n/**\r\n * Delegates selected events to another {@link module:utils/emittermixin~Emitter}. For instance:\r\n *\r\n *\t\temitterA.delegate( 'eventX' ).to( emitterB );\r\n *\t\temitterA.delegate( 'eventX', 'eventY' ).to( emitterC );\r\n *\r\n * then `eventX` is delegated (fired by) `emitterB` and `emitterC` along with `data`:\r\n *\r\n *\t\temitterA.fire( 'eventX', data );\r\n *\r\n * and `eventY` is delegated (fired by) `emitterC` along with `data`:\r\n *\r\n *\t\temitterA.fire( 'eventY', data );\r\n *\r\n * @method #delegate\r\n * @param {...String} events Event names that will be delegated to another emitter.\r\n * @returns {module:utils/emittermixin~EmitterMixinDelegateChain}\r\n */\r\n\r\n/**\r\n * Stops delegating events. It can be used at different levels:\r\n *\r\n * * To stop delegating all events.\r\n * * To stop delegating a specific event to all emitters.\r\n * * To stop delegating a specific event to a specific emitter.\r\n *\r\n * @method #stopDelegating\r\n * @param {String} [event] The name of the event to stop delegating. If omitted, stops it all delegations.\r\n * @param {module:utils/emittermixin~Emitter} [emitter] (requires `event`) The object to stop delegating a particular event to.\r\n * If omitted, stops delegation of `event` to all emitters.\r\n */\r\n\r\n/**\r\n * Checks if `listeningEmitter` listens to an emitter with given `listenedToEmitterId` and if so, returns that emitter.\r\n * If not, returns `null`.\r\n *\r\n * @protected\r\n * @param {module:utils/emittermixin~Emitter} listeningEmitter An emitter that listens.\r\n * @param {String} listenedToEmitterId Unique emitter id of emitter listened to.\r\n * @returns {module:utils/emittermixin~Emitter|null}\r\n */\r\nexport function _getEmitterListenedTo( listeningEmitter, listenedToEmitterId ) {\r\n\tif ( listeningEmitter[ _listeningTo ] && listeningEmitter[ _listeningTo ][ listenedToEmitterId ] ) {\r\n\t\treturn listeningEmitter[ _listeningTo ][ listenedToEmitterId ].emitter;\r\n\t}\r\n\r\n\treturn null;\r\n}\r\n\r\n/**\r\n * Sets emitter's unique id.\r\n *\r\n * **Note:** `_emitterId` can be set only once.\r\n *\r\n * @protected\r\n * @param {module:utils/emittermixin~Emitter} emitter An emitter for which id will be set.\r\n * @param {String} [id] Unique id to set. If not passed, random unique id will be set.\r\n */\r\nexport function _setEmitterId( emitter, id ) {\r\n\tif ( !emitter[ _emitterId ] ) {\r\n\t\temitter[ _emitterId ] = id || uid();\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns emitter's unique id.\r\n *\r\n * @protected\r\n * @param {module:utils/emittermixin~Emitter} emitter An emitter which id will be returned.\r\n */\r\nexport function _getEmitterId( emitter ) {\r\n\treturn emitter[ _emitterId ];\r\n}\r\n\r\n// Gets the internal `_events` property of the given object.\r\n// `_events` property store all lists with callbacks for registered event names.\r\n// If there were no events registered on the object, empty `_events` object is created.\r\nfunction getEvents( source ) {\r\n\tif ( !source._events ) {\r\n\t\tObject.defineProperty( source, '_events', {\r\n\t\t\tvalue: {}\r\n\t\t} );\r\n\t}\r\n\r\n\treturn source._events;\r\n}\r\n\r\n// Creates event node for generic-specific events relation architecture.\r\nfunction makeEventNode() {\r\n\treturn {\r\n\t\tcallbacks: [],\r\n\t\tchildEvents: []\r\n\t};\r\n}\r\n\r\n// Creates an architecture for generic-specific events relation.\r\n// If needed, creates all events for given eventName, i.e. if the first registered event\r\n// is foo:bar:abc, it will create foo:bar:abc, foo:bar and foo event and tie them together.\r\n// It also copies callbacks from more generic events to more specific events when\r\n// specific events are created.\r\nfunction createEventNamespace( source, eventName ) {\r\n\tconst events = getEvents( source );\r\n\r\n\t// First, check if the event we want to add to the structure already exists.\r\n\tif ( events[ eventName ] ) {\r\n\t\t// If it exists, we don't have to do anything.\r\n\t\treturn;\r\n\t}\r\n\r\n\t// In other case, we have to create the structure for the event.\r\n\t// Note, that we might need to create intermediate events too.\r\n\t// I.e. if foo:bar:abc is being registered and we only have foo in the structure,\r\n\t// we need to also register foo:bar.\r\n\r\n\t// Currently processed event name.\r\n\tlet name = eventName;\r\n\t// Name of the event that is a child event for currently processed event.\r\n\tlet childEventName = null;\r\n\r\n\t// Array containing all newly created specific events.\r\n\tconst newEventNodes = [];\r\n\r\n\t// While loop can't check for ':' index because we have to handle generic events too.\r\n\t// In each loop, we truncate event name, going from the most specific name to the generic one.\r\n\t// I.e. foo:bar:abc -> foo:bar -> foo.\r\n\twhile ( name !== '' ) {\r\n\t\tif ( events[ name ] ) {\r\n\t\t\t// If the currently processed event name is already registered, we can be sure\r\n\t\t\t// that it already has all the structure created, so we can break the loop here\r\n\t\t\t// as no more events need to be registered.\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\t// If this event is not yet registered, create a new object for it.\r\n\t\tevents[ name ] = makeEventNode();\r\n\t\t// Add it to the array with newly created events.\r\n\t\tnewEventNodes.push( events[ name ] );\r\n\r\n\t\t// Add previously processed event name as a child of this event.\r\n\t\tif ( childEventName ) {\r\n\t\t\tevents[ name ].childEvents.push( childEventName );\r\n\t\t}\r\n\r\n\t\tchildEventName = name;\r\n\t\t// If `.lastIndexOf()` returns -1, `.substr()` will return '' which will break the loop.\r\n\t\tname = name.substr( 0, name.lastIndexOf( ':' ) );\r\n\t}\r\n\r\n\tif ( name !== '' ) {\r\n\t\t// If name is not empty, we found an already registered event that was a parent of the\r\n\t\t// event we wanted to register.\r\n\r\n\t\t// Copy that event's callbacks to newly registered events.\r\n\t\tfor ( const node of newEventNodes ) {\r\n\t\t\tnode.callbacks = events[ name ].callbacks.slice();\r\n\t\t}\r\n\r\n\t\t// Add last newly created event to the already registered event.\r\n\t\tevents[ name ].childEvents.push( childEventName );\r\n\t}\r\n}\r\n\r\n// Gets an array containing callbacks list for a given event and it's more specific events.\r\n// I.e. if given event is foo:bar and there is also foo:bar:abc event registered, this will\r\n// return callback list of foo:bar and foo:bar:abc (but not foo).\r\nfunction getCallbacksListsForNamespace( source, eventName ) {\r\n\tconst eventNode = getEvents( source )[ eventName ];\r\n\r\n\tif ( !eventNode ) {\r\n\t\treturn [];\r\n\t}\r\n\r\n\tlet callbacksLists = [ eventNode.callbacks ];\r\n\r\n\tfor ( let i = 0; i < eventNode.childEvents.length; i++ ) {\r\n\t\tconst childCallbacksLists = getCallbacksListsForNamespace( source, eventNode.childEvents[ i ] );\r\n\r\n\t\tcallbacksLists = callbacksLists.concat( childCallbacksLists );\r\n\t}\r\n\r\n\treturn callbacksLists;\r\n}\r\n\r\n// Get the list of callbacks for a given event, but only if there any callbacks have been registered.\r\n// If there are no callbacks registered for given event, it checks if this is a specific event and looks\r\n// for callbacks for it's more generic version.\r\nfunction getCallbacksForEvent( source, eventName ) {\r\n\tlet event;\r\n\r\n\tif ( !source._events || !( event = source._events[ eventName ] ) || !event.callbacks.length ) {\r\n\t\t// There are no callbacks registered for specified eventName.\r\n\t\t// But this could be a specific-type event that is in a namespace.\r\n\t\tif ( eventName.indexOf( ':' ) > -1 ) {\r\n\t\t\t// If the eventName is specific, try to find callback lists for more generic event.\r\n\t\t\treturn getCallbacksForEvent( source, eventName.substr( 0, eventName.lastIndexOf( ':' ) ) );\r\n\t\t} else {\r\n\t\t\t// If this is a top-level generic event, return null;\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\treturn event.callbacks;\r\n}\r\n\r\n// Fires delegated events for given map of destinations.\r\n//\r\n// @private\r\n// * @param {Map.<utils.Emitter>} destinations A map containing\r\n// `[ {@link module:utils/emittermixin~Emitter}, \"event name\" ]` pair destinations.\r\n// * @param {utils.EventInfo} eventInfo The original event info object.\r\n// * @param {Array.<*>} fireArgs Arguments the original event was fired with.\r\nfunction fireDelegatedEvents( destinations, eventInfo, fireArgs ) {\r\n\tfor ( let [ emitter, name ] of destinations ) {\r\n\t\tif ( !name ) {\r\n\t\t\tname = eventInfo.name;\r\n\t\t} else if ( typeof name == 'function' ) {\r\n\t\t\tname = name( eventInfo.name );\r\n\t\t}\r\n\r\n\t\tconst delegatedInfo = new EventInfo( eventInfo.source, name );\r\n\r\n\t\tdelegatedInfo.path = [ ...eventInfo.path ];\r\n\r\n\t\temitter.fire( delegatedInfo, ...fireArgs );\r\n\t}\r\n}\r\n\r\n// Removes callback from emitter for given event.\r\n//\r\n// @param {module:utils/emittermixin~Emitter} emitter\r\n// @param {String} event\r\n// @param {Function} callback\r\nfunction removeCallback( emitter, event, callback ) {\r\n\tconst lists = getCallbacksListsForNamespace( emitter, event );\r\n\r\n\tfor ( const callbacks of lists ) {\r\n\t\tfor ( let i = 0; i < callbacks.length; i++ ) {\r\n\t\t\tif ( callbacks[ i ].callback == callback ) {\r\n\t\t\t\t// Remove the callback from the list (fixing the next index).\r\n\t\t\t\tcallbacks.splice( i, 1 );\r\n\t\t\t\ti--;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * The return value of {@link ~EmitterMixin#delegate}.\r\n *\r\n * @interface module:utils/emittermixin~EmitterMixinDelegateChain\r\n */\r\n\r\n/**\r\n * Selects destination for {@link module:utils/emittermixin~EmitterMixin#delegate} events.\r\n *\r\n * @method #to\r\n * @param {module:utils/emittermixin~Emitter} emitter An `EmitterMixin` instance which is the destination for delegated events.\r\n * @param {String|Function} [nameOrFunction] A custom event name or function which converts the original name string.\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/* globals navigator:false */\r\n\r\n/**\r\n * @module utils/env\r\n */\r\n\r\nconst userAgent = navigator.userAgent.toLowerCase();\r\n\r\n/**\r\n * A namespace containing environment and browser information.\r\n *\r\n * @namespace\r\n */\r\nconst env = {\r\n\t/**\r\n\t * Indicates that the application is running on Macintosh.\r\n\t *\r\n\t * @static\r\n\t * @type {Boolean}\r\n\t */\r\n\tisMac: isMac( userAgent ),\r\n\r\n\t/**\r\n\t * Indicates that the application is running in Microsoft Edge.\r\n\t *\r\n\t * @static\r\n\t * @type {Boolean}\r\n\t */\r\n\tisEdge: isEdge( userAgent ),\r\n\r\n\t/**\r\n\t * Indicates that the application is running in Firefox (Gecko).\r\n\t *\r\n\t * @static\r\n\t * @type {Boolean}\r\n\t */\r\n\tisGecko: isGecko( userAgent ),\r\n\r\n\t/**\r\n\t * Indicates that the application is running in Safari.\r\n\t *\r\n\t * @static\r\n\t * @type {Boolean}\r\n\t */\r\n\tisSafari: isSafari( userAgent ),\r\n\r\n\t/**\r\n\t * Indicates that the application is running on Android mobile device.\r\n\t *\r\n\t * @static\r\n\t * @type {Boolean}\r\n\t */\r\n\tisAndroid: isAndroid( userAgent ),\r\n\r\n\t/**\r\n\t * Environment features information.\r\n\t *\r\n\t * @memberOf module:utils/env~env\r\n\t * @namespace\r\n\t */\r\n\tfeatures: {\r\n\t\t/**\r\n\t\t * Indicates that the environment supports ES2018 Unicode property escapes — like `\\p{P}` or `\\p{L}`.\r\n\t\t * More information about unicode properties might be found\r\n\t\t * [in Unicode Standard Annex #44](https://www.unicode.org/reports/tr44/#GC_Values_Table).\r\n\t\t *\r\n\t\t * @type {Boolean}\r\n\t\t */\r\n\t\tisRegExpUnicodePropertySupported: isRegExpUnicodePropertySupported()\r\n\t}\r\n};\r\n\r\nexport default env;\r\n\r\n/**\r\n * Checks if User Agent represented by the string is running on Macintosh.\r\n *\r\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\r\n * @returns {Boolean} Whether User Agent is running on Macintosh or not.\r\n */\r\nexport function isMac( userAgent ) {\r\n\treturn userAgent.indexOf( 'macintosh' ) > -1;\r\n}\r\n\r\n/**\r\n * Checks if User Agent represented by the string is Microsoft Edge.\r\n *\r\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\r\n * @returns {Boolean} Whether User Agent is Edge or not.\r\n */\r\nexport function isEdge( userAgent ) {\r\n\treturn !!userAgent.match( /edge\\/(\\d+.?\\d*)/ );\r\n}\r\n\r\n/**\r\n * Checks if User Agent represented by the string is Firefox (Gecko).\r\n *\r\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\r\n * @returns {Boolean} Whether User Agent is Firefox or not.\r\n */\r\nexport function isGecko( userAgent ) {\r\n\treturn !!userAgent.match( /gecko\\/\\d+/ );\r\n}\r\n\r\n/**\r\n * Checks if User Agent represented by the string is Safari.\r\n *\r\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\r\n * @returns {Boolean} Whether User Agent is Safari or not.\r\n */\r\nexport function isSafari( userAgent ) {\r\n\treturn userAgent.indexOf( ' applewebkit/' ) > -1 && userAgent.indexOf( 'chrome' ) === -1;\r\n}\r\n\r\n/**\r\n * Checks if User Agent represented by the string is Android mobile device.\r\n *\r\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\r\n * @returns {Boolean} Whether User Agent is Safari or not.\r\n */\r\nexport function isAndroid( userAgent ) {\r\n\treturn userAgent.indexOf( 'android' ) > -1;\r\n}\r\n\r\n/**\r\n * Checks if the current environment supports ES2018 Unicode properties like `\\p{P}` or `\\p{L}`.\r\n * More information about unicode properties might be found\r\n * [in Unicode Standard Annex #44](https://www.unicode.org/reports/tr44/#GC_Values_Table).\r\n *\r\n * @returns {Boolean}\r\n */\r\nexport function isRegExpUnicodePropertySupported() {\r\n\tlet isSupported = false;\r\n\r\n\t// Feature detection for Unicode properties. Added in ES2018. Currently Firefox and Edge do not support it.\r\n\t// See https://github.com/ckeditor/ckeditor5-mention/issues/44#issuecomment-487002174.\r\n\r\n\ttry {\r\n\t\t// Usage of regular expression literal cause error during build (ckeditor/ckeditor5-dev#534).\r\n\t\tisSupported = 'ć'.search( new RegExp( '[\\\\p{L}]', 'u' ) ) === 0;\r\n\t} catch ( error ) {\r\n\t\t// Firefox throws a SyntaxError when the group is unsupported.\r\n\t}\r\n\r\n\treturn isSupported;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/eventinfo\r\n */\r\n\r\nimport spy from './spy';\r\n\r\n/**\r\n * The event object passed to event callbacks. It is used to provide information about the event as well as a tool to\r\n * manipulate it.\r\n */\r\nexport default class EventInfo {\r\n\t/**\r\n\t * @param {Object} source The emitter.\r\n\t * @param {String} name The event name.\r\n\t */\r\n\tconstructor( source, name ) {\r\n\t\t/**\r\n\t\t * The object that fired the event.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Object}\r\n\t\t */\r\n\t\tthis.source = source;\r\n\r\n\t\t/**\r\n\t\t * The event name.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {String}\r\n\t\t */\r\n\t\tthis.name = name;\r\n\r\n\t\t/**\r\n\t\t * Path this event has followed. See {@link module:utils/emittermixin~EmitterMixin#delegate}.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {Array.<Object>}\r\n\t\t */\r\n\t\tthis.path = [];\r\n\r\n\t\t// The following methods are defined in the constructor because they must be re-created per instance.\r\n\r\n\t\t/**\r\n\t\t * Stops the event emitter to call further callbacks for this event interaction.\r\n\t\t *\r\n\t\t * @method #stop\r\n\t\t */\r\n\t\tthis.stop = spy();\r\n\r\n\t\t/**\r\n\t\t * Removes the current callback from future interactions of this event.\r\n\t\t *\r\n\t\t * @method #off\r\n\t\t */\r\n\t\tthis.off = spy();\r\n\r\n\t\t/**\r\n\t\t * The value which will be returned by {@link module:utils/emittermixin~EmitterMixin#fire}.\r\n\t\t *\r\n\t\t * It's `undefined` by default and can be changed by an event listener:\r\n\t\t *\r\n\t\t *\t\tdataController.fire( 'getSelectedContent', ( evt ) => {\r\n\t\t *\t\t\t// This listener will make `dataController.fire( 'getSelectedContent' )`\r\n\t\t *\t\t\t// always return an empty DocumentFragment.\r\n\t\t *\t\t\tevt.return = new DocumentFragment();\r\n\t\t *\r\n\t\t *\t\t\t// Make sure no other listeners are executed.\r\n\t\t *\t\t\tevt.stop();\r\n\t\t *\t\t} );\r\n\t\t *\r\n\t\t * @member #return\r\n\t\t */\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/fastdiff\r\n */\r\n\r\n/**\r\n * Finds positions of the first and last change in the given string/array and generates a set of changes:\r\n *\r\n *\t\tfastDiff( '12a', '12xyza' );\r\n *\t\t// [ { index: 2, type: 'insert', values: [ 'x', 'y', 'z' ] } ]\r\n *\r\n *\t\tfastDiff( '12a', '12aa' );\r\n *\t\t// [ { index: 3, type: 'insert', values: [ 'a' ] } ]\r\n *\r\n *\t\tfastDiff( '12xyza', '12a' );\r\n *\t\t// [ { index: 2, type: 'delete', howMany: 3 } ]\r\n *\r\n *\t\tfastDiff( [ '1', '2', 'a', 'a' ], [ '1', '2', 'a' ] );\r\n *\t\t// [ { index: 3, type: 'delete', howMany: 1 } ]\r\n *\r\n *\t\tfastDiff( [ '1', '2', 'a', 'b', 'c', '3' ], [ '2', 'a', 'b' ] );\r\n *\t\t// [ { index: 0, type: 'insert', values: [ '2', 'a', 'b' ] }, { index: 3, type: 'delete', howMany: 6 } ]\r\n *\r\n * Passed arrays can contain any type of data, however to compare them correctly custom comparator function\r\n * should be passed as a third parameter:\r\n *\r\n *\t\tfastDiff( [ { value: 1 }, { value: 2 } ], [ { value: 1 }, { value: 3 } ], ( a, b ) => {\r\n *\t\t\treturn a.value === b.value;\r\n *\t\t} );\r\n *\t\t// [ { index: 1, type: 'insert', values: [ { value: 3 } ] }, { index: 2, type: 'delete', howMany: 1 } ]\r\n *\r\n * The resulted set of changes can be applied to the input in order to transform it into the output, for example:\r\n *\r\n *\t\tlet input = '12abc3';\r\n *\t\tconst output = '2ab';\r\n *\t\tconst changes = fastDiff( input, output );\r\n *\r\n *\t\tchanges.forEach( change => {\r\n *\t\t\tif ( change.type == 'insert' ) {\r\n *\t\t\t\tinput = input.substring( 0, change.index ) + change.values.join( '' ) + input.substring( change.index );\r\n *\t\t\t} else if ( change.type == 'delete' ) {\r\n *\t\t\t\tinput = input.substring( 0, change.index ) + input.substring( change.index + change.howMany );\r\n *\t\t\t}\r\n *\t\t} );\r\n *\r\n *\t\t// input equals output now\r\n *\r\n * or in case of arrays:\r\n *\r\n *\t\tlet input = [ '1', '2', 'a', 'b', 'c', '3' ];\r\n *\t\tconst output = [ '2', 'a', 'b' ];\r\n *\t\tconst changes = fastDiff( input, output );\r\n *\r\n *\t\tchanges.forEach( change => {\r\n *\t\t\tif ( change.type == 'insert' ) {\r\n *\t\t\t\tinput = input.slice( 0, change.index ).concat( change.values, input.slice( change.index ) );\r\n *\t\t\t} else if ( change.type == 'delete' ) {\r\n *\t\t\t\tinput = input.slice( 0, change.index ).concat( input.slice( change.index + change.howMany ) );\r\n *\t\t\t}\r\n *\t\t} );\r\n *\r\n *\t\t// input equals output now\r\n *\r\n * By passing `true` as the fourth parameter (`atomicChanges`) the output of this function will become compatible with\r\n * the {@link module:utils/diff~diff `diff()`} function:\r\n *\r\n *\t\tfastDiff( '12a', '12xyza' );\r\n *\t\t// [ 'equal', 'equal', 'insert', 'insert', 'insert', 'equal' ]\r\n *\r\n * The default output format of this function is compatible with the output format of\r\n * {@link module:utils/difftochanges~diffToChanges `diffToChanges()`}. The `diffToChanges()` input format is, in turn,\r\n * compatible with the output of {@link module:utils/diff~diff `diff()`}:\r\n *\r\n *\t\tconst a = '1234';\r\n *\t\tconst b = '12xyz34';\r\n *\r\n *\t\t// Both calls will return the same results (grouped changes format).\r\n *\t\tfastDiff( a, b );\r\n *\t\tdiffToChanges( diff( a, b ) );\r\n *\r\n *\t\t// Again, both calls will return the same results (atomic changes format).\r\n *\t\tfastDiff( a, b, null, true );\r\n *\t\tdiff( a, b );\r\n *\r\n *\r\n * @param {Array|String} a Input array or string.\r\n * @param {Array|String} b Input array or string.\r\n * @param {Function} [cmp] Optional function used to compare array values, by default `===` (strict equal operator) is used.\r\n * @param {Boolean} [atomicChanges=false] Whether an array of `inset|delete|equal` operations should\r\n * be returned instead of changes set. This makes this function compatible with {@link module:utils/diff~diff `diff()`}.\r\n * @returns {Array} Array of changes.\r\n */\r\nexport default function fastDiff( a, b, cmp, atomicChanges = false ) {\r\n\t// Set the comparator function.\r\n\tcmp = cmp || function( a, b ) {\r\n\t\treturn a === b;\r\n\t};\r\n\r\n\t// Transform text or any iterable into arrays for easier, consistent processing.\r\n\tif ( !Array.isArray( a ) ) {\r\n\t\ta = Array.from( a );\r\n\t}\r\n\r\n\tif ( !Array.isArray( b ) ) {\r\n\t\tb = Array.from( b );\r\n\t}\r\n\r\n\t// Find first and last change.\r\n\tconst changeIndexes = findChangeBoundaryIndexes( a, b, cmp );\r\n\r\n\t// Transform into changes array.\r\n\treturn atomicChanges ? changeIndexesToAtomicChanges( changeIndexes, b.length ) : changeIndexesToChanges( b, changeIndexes );\r\n}\r\n\r\n// Finds position of the first and last change in the given arrays. For example:\r\n//\r\n//\t\tconst indexes = findChangeBoundaryIndexes( [ '1', '2', '3', '4' ], [ '1', '3', '4', '2', '4' ] );\r\n//\t\tconsole.log( indexes ); // { firstIndex: 1, lastIndexOld: 3, lastIndexNew: 4 }\r\n//\r\n// The above indexes means that in the first array the modified part is `1[23]4` and in the second array it is `1[342]4`.\r\n// Based on such indexes, array with `insert`/`delete` operations which allows transforming first value into the second one\r\n// can be generated.\r\n//\r\n// @param {Array} arr1\r\n// @param {Array} arr2\r\n// @param {Function} cmp Comparator function.\r\n// @returns {Object}\r\n// @returns {Number} return.firstIndex Index of the first change in both values (always the same for both).\r\n// @returns {Number} result.lastIndexOld Index of the last common value in `arr1`.\r\n// @returns {Number} result.lastIndexNew Index of the last common value in `arr2`.\r\nfunction findChangeBoundaryIndexes( arr1, arr2, cmp ) {\r\n\t// Find the first difference between passed values.\r\n\tconst firstIndex = findFirstDifferenceIndex( arr1, arr2, cmp );\r\n\r\n\t// If arrays are equal return -1 indexes object.\r\n\tif ( firstIndex === -1 ) {\r\n\t\treturn { firstIndex: -1, lastIndexOld: -1, lastIndexNew: -1 };\r\n\t}\r\n\r\n\t// Remove the common part of each value and reverse them to make it simpler to find the last difference between them.\r\n\tconst oldArrayReversed = cutAndReverse( arr1, firstIndex );\r\n\tconst newArrayReversed = cutAndReverse( arr2, firstIndex );\r\n\r\n\t// Find the first difference between reversed values.\r\n\t// It should be treated as \"how many elements from the end the last difference occurred\".\r\n\t//\r\n\t// For example:\r\n\t//\r\n\t// \t\t\t\tinitial\t->\tafter cut\t-> reversed:\r\n\t// oldValue:\t'321ba'\t->\t'21ba'\t\t-> 'ab12'\r\n\t// newValue:\t'31xba'\t->\t'1xba'\t\t-> 'abx1'\r\n\t// lastIndex:\t\t\t\t\t\t\t-> 2\r\n\t//\r\n\t// So the last change occurred two characters from the end of the arrays.\r\n\tconst lastIndex = findFirstDifferenceIndex( oldArrayReversed, newArrayReversed, cmp );\r\n\r\n\t// Use `lastIndex` to calculate proper offset, starting from the beginning (`lastIndex` kind of starts from the end).\r\n\tconst lastIndexOld = arr1.length - lastIndex;\r\n\tconst lastIndexNew = arr2.length - lastIndex;\r\n\r\n\treturn { firstIndex, lastIndexOld, lastIndexNew };\r\n}\r\n\r\n// Returns a first index on which given arrays differ. If both arrays are the same, -1 is returned.\r\n//\r\n// @param {Array} arr1\r\n// @param {Array} arr2\r\n// @param {Function} cmp Comparator function.\r\n// @returns {Number}\r\nfunction findFirstDifferenceIndex( arr1, arr2, cmp ) {\r\n\tfor ( let i = 0; i < Math.max( arr1.length, arr2.length ); i++ ) {\r\n\t\tif ( arr1[ i ] === undefined || arr2[ i ] === undefined || !cmp( arr1[ i ], arr2[ i ] ) ) {\r\n\t\t\treturn i;\r\n\t\t}\r\n\t}\r\n\r\n\treturn -1; // Return -1 if arrays are equal.\r\n}\r\n\r\n// Returns a copy of the given array with `howMany` elements removed starting from the beginning and in reversed order.\r\n//\r\n// @param {Array} arr Array to be processed.\r\n// @param {Number} howMany How many elements from array beginning to remove.\r\n// @returns {Array} Shortened and reversed array.\r\nfunction cutAndReverse( arr, howMany ) {\r\n\treturn arr.slice( howMany ).reverse();\r\n}\r\n\r\n// Generates changes array based on change indexes from `findChangeBoundaryIndexes` function. This function will\r\n// generate array with 0 (no changes), 1 (deletion or insertion) or 2 records (insertion and deletion).\r\n//\r\n// @param {Array} newArray New array for which change indexes were calculated.\r\n// @param {Object} changeIndexes Change indexes object from `findChangeBoundaryIndexes` function.\r\n// @returns {Array.<Object>} Array of changes compatible with {@link module:utils/difftochanges~diffToChanges} format.\r\nfunction changeIndexesToChanges( newArray, changeIndexes ) {\r\n\tconst result = [];\r\n\tconst { firstIndex, lastIndexOld, lastIndexNew } = changeIndexes;\r\n\r\n\t// Order operations as 'insert', 'delete' array to keep compatibility with {@link module:utils/difftochanges~diffToChanges}\r\n\t// in most cases. However, 'diffToChanges' does not stick to any order so in some cases\r\n\t// (for example replacing '12345' with 'abcd') it will generate 'delete', 'insert' order.\r\n\tif ( lastIndexNew - firstIndex > 0 ) {\r\n\t\tresult.push( {\r\n\t\t\tindex: firstIndex,\r\n\t\t\ttype: 'insert',\r\n\t\t\tvalues: newArray.slice( firstIndex, lastIndexNew )\r\n\t\t} );\r\n\t}\r\n\r\n\tif ( lastIndexOld - firstIndex > 0 ) {\r\n\t\tresult.push( {\r\n\t\t\tindex: firstIndex + ( lastIndexNew - firstIndex ), // Increase index of what was inserted.\r\n\t\t\ttype: 'delete',\r\n\t\t\thowMany: lastIndexOld - firstIndex\r\n\t\t} );\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\n// Generates array with set `equal|insert|delete` operations based on change indexes from `findChangeBoundaryIndexes` function.\r\n//\r\n// @param {Object} changeIndexes Change indexes object from `findChangeBoundaryIndexes` function.\r\n// @param {Number} newLength Length of the new array on which `findChangeBoundaryIndexes` calculated change indexes.\r\n// @returns {Array.<String>} Array of changes compatible with {@link module:utils/diff~diff} format.\r\nfunction changeIndexesToAtomicChanges( changeIndexes, newLength ) {\r\n\tconst { firstIndex, lastIndexOld, lastIndexNew } = changeIndexes;\r\n\r\n\t// No changes.\r\n\tif ( firstIndex === -1 ) {\r\n\t\treturn Array( newLength ).fill( 'equal' );\r\n\t}\r\n\r\n\tlet result = [];\r\n\tif ( firstIndex > 0 ) {\r\n\t\tresult = result.concat( Array( firstIndex ).fill( 'equal' ) );\r\n\t}\r\n\r\n\tif ( lastIndexNew - firstIndex > 0 ) {\r\n\t\tresult = result.concat( Array( lastIndexNew - firstIndex ).fill( 'insert' ) );\r\n\t}\r\n\r\n\tif ( lastIndexOld - firstIndex > 0 ) {\r\n\t\tresult = result.concat( Array( lastIndexOld - firstIndex ).fill( 'delete' ) );\r\n\t}\r\n\r\n\tif ( lastIndexNew < newLength ) {\r\n\t\tresult = result.concat( Array( newLength - lastIndexNew ).fill( 'equal' ) );\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/first\r\n */\r\n\r\n/**\r\n * Returns first item of the given `iterable`.\r\n *\r\n * @param {Iterable.<*>} iterable\r\n * @returns {*}\r\n */\r\nexport default function first( iterable ) {\r\n\tconst iteratorItem = iterable.next();\r\n\r\n\tif ( iteratorItem.done ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn iteratorItem.value;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/* global setTimeout, clearTimeout */\r\n\r\n/**\r\n * @module utils/focustracker\r\n */\r\n\r\nimport DomEmitterMixin from './dom/emittermixin';\r\nimport ObservableMixin from './observablemixin';\r\nimport CKEditorError from './ckeditorerror';\r\nimport mix from './mix';\r\n\r\n/**\r\n * Allows observing a group of `HTMLElement`s whether at least one of them is focused.\r\n *\r\n * Used by the {@link module:core/editor/editor~Editor} in order to track whether the focus is still within the application,\r\n * or were used outside of its UI.\r\n *\r\n * **Note** `focus` and `blur` listeners use event capturing, so it is only needed to register wrapper `HTMLElement`\r\n * which contain other `focusable` elements. But note that this wrapper element has to be focusable too\r\n * (have e.g. `tabindex=\"-1\"`).\r\n *\r\n * @mixes module:utils/dom/emittermixin~EmitterMixin\r\n * @mixes module:utils/observablemixin~ObservableMixin\r\n */\r\nexport default class FocusTracker {\r\n\tconstructor() {\r\n\t\t/**\r\n\t\t * True when one of the registered elements is focused.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @observable\r\n\t\t * @member {Boolean} #isFocused\r\n\t\t */\r\n\t\tthis.set( 'isFocused', false );\r\n\r\n\t\t/**\r\n\t\t * The currently focused element.\r\n\t\t *\r\n\t\t * While {@link #isFocused `isFocused`} remains `true`, the focus can\r\n\t\t * move between different UI elements. This property tracks those\r\n\t\t * elements and tells which one is currently focused.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @observable\r\n\t\t * @member {HTMLElement|null}\r\n\t\t */\r\n\t\tthis.set( 'focusedElement', null );\r\n\r\n\t\t/**\r\n\t\t * List of registered elements.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Set.<HTMLElement>}\r\n\t\t */\r\n\t\tthis._elements = new Set();\r\n\r\n\t\t/**\r\n\t\t * Event loop timeout.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {Number}\r\n\t\t */\r\n\t\tthis._nextEventLoopTimeout = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Starts tracking the specified element.\r\n\t *\r\n\t * @param {HTMLElement} element\r\n\t */\r\n\tadd( element ) {\r\n\t\tif ( this._elements.has( element ) ) {\r\n\t\t\tthrow new CKEditorError( 'focusTracker-add-element-already-exist', this );\r\n\t\t}\r\n\r\n\t\tthis.listenTo( element, 'focus', () => this._focus( element ), { useCapture: true } );\r\n\t\tthis.listenTo( element, 'blur', () => this._blur(), { useCapture: true } );\r\n\t\tthis._elements.add( element );\r\n\t}\r\n\r\n\t/**\r\n\t * Stops tracking the specified element and stops listening on this element.\r\n\t *\r\n\t * @param {HTMLElement} element\r\n\t */\r\n\tremove( element ) {\r\n\t\tif ( element === this.focusedElement ) {\r\n\t\t\tthis._blur( element );\r\n\t\t}\r\n\r\n\t\tif ( this._elements.has( element ) ) {\r\n\t\t\tthis.stopListening( element );\r\n\t\t\tthis._elements.delete( element );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys the focus tracker by:\r\n\t * - Disabling all event listeners attached to tracked elements.\r\n\t * - Removing all tracked elements that were previously added.\r\n\t */\r\n\tdestroy() {\r\n\t\tthis.stopListening();\r\n\t}\r\n\r\n\t/**\r\n\t * Stores currently focused element and set {#isFocused} as `true`.\r\n\t *\r\n\t * @private\r\n\t * @param {HTMLElement} element Element which has been focused.\r\n\t */\r\n\t_focus( element ) {\r\n\t\tclearTimeout( this._nextEventLoopTimeout );\r\n\r\n\t\tthis.focusedElement = element;\r\n\t\tthis.isFocused = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Clears currently focused element and set {@link #isFocused} as `false`.\r\n\t * This method uses `setTimeout` to change order of fires `blur` and `focus` events.\r\n\t *\r\n\t * @private\r\n\t * @fires blur\r\n\t */\r\n\t_blur() {\r\n\t\tclearTimeout( this._nextEventLoopTimeout );\r\n\r\n\t\tthis._nextEventLoopTimeout = setTimeout( () => {\r\n\t\t\tthis.focusedElement = null;\r\n\t\t\tthis.isFocused = false;\r\n\t\t}, 0 );\r\n\t}\r\n\r\n\t/**\r\n\t * @event focus\r\n\t */\r\n\r\n\t/**\r\n\t * @event blur\r\n\t */\r\n}\r\n\r\nmix( FocusTracker, DomEmitterMixin );\r\nmix( FocusTracker, ObservableMixin );\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/isiterable\r\n */\r\n\r\n/**\r\n * Checks if value implements iterator interface.\r\n *\r\n * @param {*} value The value to check.\r\n * @returns {Boolean} True if value implements iterator interface.\r\n */\r\nexport default function isIterable( value ) {\r\n\treturn !!( value && value[ Symbol.iterator ] );\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * Set of utils related to keyboard support.\r\n *\r\n * @module utils/keyboard\r\n */\r\n\r\nimport CKEditorError from './ckeditorerror';\r\nimport env from './env';\r\n\r\nconst macGlyphsToModifiers = {\r\n\t'⌘': 'ctrl',\r\n\t'⇧': 'shift',\r\n\t'⌥': 'alt'\r\n};\r\n\r\nconst modifiersToMacGlyphs = {\r\n\t'ctrl': '⌘',\r\n\t'shift': '⇧',\r\n\t'alt': '⌥'\r\n};\r\n\r\n/**\r\n * Object with `keyName => keyCode` pairs for a set of known keys.\r\n *\r\n * Contains:\r\n *\r\n * * `a-z`,\r\n * * `0-9`,\r\n * * `f1-f12`,\r\n * * `arrow(left|up|right|bottom)`,\r\n * * `backspace`, `delete`, `enter`, `esc`, `tab`,\r\n * * `ctrl`, `cmd`, `shift`, `alt`.\r\n */\r\nexport const keyCodes = generateKnownKeyCodes();\r\n\r\n/**\r\n * Converts a key name or a {@link module:utils/keyboard~KeystrokeInfo keystroke info} into a key code.\r\n *\r\n * Note: Key names are matched with {@link module:utils/keyboard~keyCodes} in a case-insensitive way.\r\n *\r\n * @param {String|module:utils/keyboard~KeystrokeInfo} Key name (see {@link module:utils/keyboard~keyCodes})\r\n * or a keystroke data object.\r\n * @returns {Number} Key or keystroke code.\r\n */\r\nexport function getCode( key ) {\r\n\tlet keyCode;\r\n\r\n\tif ( typeof key == 'string' ) {\r\n\t\tkeyCode = keyCodes[ key.toLowerCase() ];\r\n\r\n\t\tif ( !keyCode ) {\r\n\t\t\t/**\r\n\t\t\t * Unknown key name. Only key names contained by the {@link module:utils/keyboard~keyCodes} can be used.\r\n\t\t\t *\r\n\t\t\t * @errror keyboard-unknown-key\r\n\t\t\t * @param {String} key\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'keyboard-unknown-key: Unknown key name.',\r\n\t\t\t\tnull, { key }\r\n\t\t\t);\r\n\t\t}\r\n\t} else {\r\n\t\tkeyCode = key.keyCode +\r\n\t\t\t( key.altKey ? keyCodes.alt : 0 ) +\r\n\t\t\t( key.ctrlKey ? keyCodes.ctrl : 0 ) +\r\n\t\t\t( key.shiftKey ? keyCodes.shift : 0 );\r\n\t}\r\n\r\n\treturn keyCode;\r\n}\r\n\r\n/**\r\n * Parses keystroke and returns a keystroke code that will match the code returned by\r\n * link {@link module:utils/keyboard.getCode} for a corresponding {@link module:utils/keyboard~KeystrokeInfo keystroke info}.\r\n *\r\n * The keystroke can be passed in two formats:\r\n *\r\n * * as a single string – e.g. `ctrl + A`,\r\n * * as an array of {@link module:utils/keyboard~keyCodes known key names} and key codes – e.g.:\r\n *   * `[ 'ctrl', 32 ]` (ctrl + space),\r\n *   * `[ 'ctrl', 'a' ]` (ctrl + A).\r\n *\r\n * Note: Key names are matched with {@link module:utils/keyboard~keyCodes} in a case-insensitive way.\r\n *\r\n * Note: Only keystrokes with a single non-modifier key are supported (e.g. `ctrl+A` is OK, but `ctrl+A+B` is not).\r\n *\r\n * @param {String|Array.<Number|String>} keystroke Keystroke definition.\r\n * @returns {Number} Keystroke code.\r\n */\r\nexport function parseKeystroke( keystroke ) {\r\n\tif ( typeof keystroke == 'string' ) {\r\n\t\tkeystroke = splitKeystrokeText( keystroke );\r\n\t}\r\n\r\n\treturn keystroke\r\n\t\t.map( key => ( typeof key == 'string' ) ? getCode( key ) : key )\r\n\t\t.reduce( ( key, sum ) => sum + key, 0 );\r\n}\r\n\r\n/**\r\n * It translates any keystroke string text like `\"CTRL+A\"` to an\r\n * environment–specific keystroke, i.e. `\"⌘A\"` on Mac OSX.\r\n *\r\n * @param {String} keystroke Keystroke text.\r\n * @returns {String} Keystroke text specific for the environment.\r\n */\r\nexport function getEnvKeystrokeText( keystroke ) {\r\n\tif ( !env.isMac ) {\r\n\t\treturn keystroke;\r\n\t}\r\n\r\n\treturn splitKeystrokeText( keystroke )\r\n\t\t// Replace modifiers (e.g. \"ctrl\") with Mac glyphs (e.g. \"⌘\") first.\r\n\t\t.map( key => modifiersToMacGlyphs[ key.toLowerCase() ] || key )\r\n\r\n\t\t// Decide whether to put \"+\" between keys in the keystroke or not.\r\n\t\t.reduce( ( value, key ) => {\r\n\t\t\tif ( value.slice( -1 ) in macGlyphsToModifiers ) {\r\n\t\t\t\treturn value + key;\r\n\t\t\t} else {\r\n\t\t\t\treturn value + '+' + key;\r\n\t\t\t}\r\n\t\t} );\r\n}\r\n\r\nfunction generateKnownKeyCodes() {\r\n\tconst keyCodes = {\r\n\t\tarrowleft: 37,\r\n\t\tarrowup: 38,\r\n\t\tarrowright: 39,\r\n\t\tarrowdown: 40,\r\n\t\tbackspace: 8,\r\n\t\tdelete: 46,\r\n\t\tenter: 13,\r\n\t\tspace: 32,\r\n\t\tesc: 27,\r\n\t\ttab: 9,\r\n\r\n\t\t// The idea about these numbers is that they do not collide with any real key codes, so we can use them\r\n\t\t// like bit masks.\r\n\t\tctrl: 0x110000,\r\n\t\t// Has the same code as ctrl, because their behaviour should be unified across the editor.\r\n\t\t// See http://ckeditor.github.io/editor-recommendations/general-policies#ctrl-vs-cmd\r\n\t\tcmd: 0x110000,\r\n\t\tshift: 0x220000,\r\n\t\talt: 0x440000\r\n\t};\r\n\r\n\t// a-z\r\n\tfor ( let code = 65; code <= 90; code++ ) {\r\n\t\tconst letter = String.fromCharCode( code );\r\n\r\n\t\tkeyCodes[ letter.toLowerCase() ] = code;\r\n\t}\r\n\r\n\t// 0-9\r\n\tfor ( let code = 48; code <= 57; code++ ) {\r\n\t\tkeyCodes[ code - 48 ] = code;\r\n\t}\r\n\r\n\t// F1-F12\r\n\tfor ( let code = 112; code <= 123; code++ ) {\r\n\t\tkeyCodes[ 'f' + ( code - 111 ) ] = code;\r\n\t}\r\n\r\n\treturn keyCodes;\r\n}\r\n\r\nfunction splitKeystrokeText( keystroke ) {\r\n\treturn keystroke.split( /\\s*\\+\\s*/ );\r\n}\r\n\r\n/**\r\n * Information about a keystroke.\r\n *\r\n * @interface module:utils/keyboard~KeystrokeInfo\r\n */\r\n\r\n/**\r\n * The [key code](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode).\r\n *\r\n * @member {Number} module:utils/keyboard~KeystrokeInfo#keyCode\r\n */\r\n\r\n/**\r\n * Whether the <kbd>Alt</kbd> modifier was pressed.\r\n *\r\n * @member {Bolean} module:utils/keyboard~KeystrokeInfo#altKey\r\n */\r\n\r\n/**\r\n * Whether the <kbd>Ctrl</kbd> or <kbd>Cmd</kbd> modifier was pressed.\r\n *\r\n * @member {Bolean} module:utils/keyboard~KeystrokeInfo#ctrlKey\r\n */\r\n\r\n/**\r\n * Whether the <kbd>Shift</kbd> modifier was pressed.\r\n *\r\n * @member {Bolean} module:utils/keyboard~KeystrokeInfo#shiftKey\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/keystrokehandler\r\n */\r\n\r\nimport DomEmitterMixin from './dom/emittermixin';\r\nimport { getCode, parseKeystroke } from './keyboard';\r\n\r\n/**\r\n * Keystroke handler allows registering callbacks for given keystrokes.\r\n *\r\n * The most frequent use of this class is through the {@link module:core/editor/editor~Editor#keystrokes `editor.keystrokes`}\r\n * property. It allows listening to keystrokes executed in the editing view:\r\n *\r\n *\t\teditor.keystrokes.set( 'Ctrl+A', ( keyEvtData, cancel ) => {\r\n *\t\t\tconsole.log( 'Ctrl+A has been pressed' );\r\n *\t\t\tcancel();\r\n *\t\t} );\r\n *\r\n * However, this utility class can be used in various part of the UI. For instance, a certain {@link module:ui/view~View}\r\n * can use it like this:\r\n *\r\n *\t\tclass MyView extends View {\r\n *\t\t\tconstructor() {\r\n *\t\t\t\tthis.keystrokes = new KeystrokeHandler();\r\n *\r\n * \t\t\t\tthis.keystrokes.set( 'tab', handleTabKey );\r\n *\t\t\t}\r\n *\r\n *\t\t\trender() {\r\n *\t\t\t\tsuper.render();\r\n *\r\n *\t\t\t\tthis.keystrokes.listenTo( this.element );\r\n *\t\t\t}\r\n *\t\t}\r\n *\r\n * That keystroke handler will listen to `keydown` events fired in this view's main element.\r\n *\r\n */\r\nexport default class KeystrokeHandler {\r\n\t/**\r\n\t * Creates an instance of the keystroke handler.\r\n\t */\r\n\tconstructor() {\r\n\t\t/**\r\n\t\t * Listener used to listen to events for easier keystroke handler destruction.\r\n\t\t *\r\n\t\t * @protected\r\n\t\t * @member {module:utils/dom/emittermixin~Emitter}\r\n\t\t */\r\n\t\tthis._listener = Object.create( DomEmitterMixin );\r\n\t}\r\n\r\n\t/**\r\n\t * Starts listening for `keydown` events from a given emitter.\r\n\t *\r\n\t * @param {module:utils/emittermixin~Emitter} emitter\r\n\t */\r\n\tlistenTo( emitter ) {\r\n\t\t// The #_listener works here as a kind of dispatcher. It groups the events coming from the same\r\n\t\t// keystroke so the listeners can be attached to them with different priorities.\r\n\t\t//\r\n\t\t// E.g. all the keystrokes with the `keyCode` of 42 coming from the `emitter` are propagated\r\n\t\t// as a `_keydown:42` event by the `_listener`. If there's a callback created by the `set`\r\n\t\t// method for this 42 keystroke, it listens to the `_listener#_keydown:42` event only and interacts\r\n\t\t// only with other listeners of this particular event, thus making it possible to prioritize\r\n\t\t// the listeners and safely cancel execution, when needed. Instead of duplicating the Emitter logic,\r\n\t\t// the KeystrokeHandler re–uses it to do its job.\r\n\t\tthis._listener.listenTo( emitter, 'keydown', ( evt, keyEvtData ) => {\r\n\t\t\tthis._listener.fire( '_keydown:' + getCode( keyEvtData ), keyEvtData );\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a handler for the specified keystroke.\r\n\t *\r\n\t * @param {String|Array.<String|Number>} keystroke Keystroke defined in a format accepted by\r\n\t * the {@link module:utils/keyboard~parseKeystroke} function.\r\n\t * @param {Function} callback A function called with the\r\n\t * {@link module:engine/view/observer/keyobserver~KeyEventData key event data} object and\r\n\t * a helper funcion to call both `preventDefault()` and `stopPropagation()` on the underlying event.\r\n\t * @param {Object} [options={}] Additional options.\r\n\t * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of the keystroke\r\n\t * callback. The higher the priority value the sooner the callback will be executed. Keystrokes having the same priority\r\n\t * are called in the order they were added.\r\n\t */\r\n\tset( keystroke, callback, options = {} ) {\r\n\t\tconst keyCode = parseKeystroke( keystroke );\r\n\t\tconst priority = options.priority;\r\n\r\n\t\t// Execute the passed callback on KeystrokeHandler#_keydown.\r\n\t\t// TODO: https://github.com/ckeditor/ckeditor5-utils/issues/144\r\n\t\tthis._listener.listenTo( this._listener, '_keydown:' + keyCode, ( evt, keyEvtData ) => {\r\n\t\t\tcallback( keyEvtData, () => {\r\n\t\t\t\t// Stop the event in the DOM: no listener in the web page\r\n\t\t\t\t// will be triggered by this event.\r\n\t\t\t\tkeyEvtData.preventDefault();\r\n\t\t\t\tkeyEvtData.stopPropagation();\r\n\r\n\t\t\t\t// Stop the event in the KeystrokeHandler: no more callbacks\r\n\t\t\t\t// will be executed for this keystroke.\r\n\t\t\t\tevt.stop();\r\n\t\t\t} );\r\n\r\n\t\t\t// Mark this keystroke as handled by the callback. See: #press.\r\n\t\t\tevt.return = true;\r\n\t\t}, { priority } );\r\n\t}\r\n\r\n\t/**\r\n\t * Triggers a keystroke handler for a specified key combination, if such a keystroke was {@link #set defined}.\r\n\t *\r\n\t * @param {module:engine/view/observer/keyobserver~KeyEventData} keyEvtData Key event data.\r\n\t * @returns {Boolean} Whether the keystroke was handled.\r\n\t */\r\n\tpress( keyEvtData ) {\r\n\t\treturn !!this._listener.fire( '_keydown:' + getCode( keyEvtData ), keyEvtData );\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys the keystroke handler.\r\n\t */\r\n\tdestroy() {\r\n\t\tthis._listener.stopListening();\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/locale\r\n */\r\n\r\n/* globals console */\r\n\r\nimport { translate } from './translation-service';\r\n\r\nconst RTL_LANGUAGE_CODES = [ 'ar', 'fa', 'he', 'ku', 'ug' ];\r\n\r\n/**\r\n * Represents the localization services.\r\n */\r\nexport default class Locale {\r\n\t/**\r\n\t * Creates a new instance of the Locale class. Learn more about\r\n\t * {@glink features/ui-language configuring language of the editor}.\r\n\t *\r\n\t * @param {Object} [options] Locale configuration.\r\n\t * @param {String} [options.uiLanguage='en'] The editor UI language code in the\r\n\t * [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format. See {@link #uiLanguage}.\r\n\t * @param {String} [options.contentLanguage] The editor content language code in the\r\n\t * [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format. If not specified, the same as `options.language`.\r\n\t * See {@link #contentLanguage}.\r\n\t */\r\n\tconstructor( options = {} ) {\r\n\t\t/**\r\n\t\t * The editor UI language code in the [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format.\r\n\t\t *\r\n\t\t * If the {@link #contentLanguage content language} was not specified in the `Locale` constructor,\r\n\t\t * it also defines the language of the content.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {String}\r\n\t\t */\r\n\t\tthis.uiLanguage = options.uiLanguage || 'en';\r\n\r\n\t\t/**\r\n\t\t * The editor content language code in the [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format.\r\n\t\t *\r\n\t\t * Usually the same as {@link #uiLanguage editor language}, it can be customized by passing an optional\r\n\t\t * argument to the `Locale` constructor.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {String}\r\n\t\t */\r\n\t\tthis.contentLanguage = options.contentLanguage || this.uiLanguage;\r\n\r\n\t\t/**\r\n\t\t * Text direction of the {@link #uiLanguage editor UI language}. Either `'ltr'` or `'rtl'`.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {String}\r\n\t\t */\r\n\t\tthis.uiLanguageDirection = getLanguageDirection( this.uiLanguage );\r\n\r\n\t\t/**\r\n\t\t * Text direction of the {@link #contentLanguage editor content language}.\r\n\t\t *\r\n\t\t * If the content language was passed directly to the `Locale` constructor, this property represents the\r\n\t\t * direction of that language.\r\n\t\t *\r\n\t\t * If the {@link #contentLanguage editor content language} was derived from the {@link #uiLanguage editor language},\r\n\t\t * the content language direction is the same as the {@link #uiLanguageDirection UI language direction}.\r\n\t\t *\r\n\t\t * The value is either `'ltr'` or `'rtl'`.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {String}\r\n\t\t */\r\n\t\tthis.contentLanguageDirection = getLanguageDirection( this.contentLanguage );\r\n\r\n\t\t/**\r\n\t\t * Translates the given string to the {@link #uiLanguage}. This method is also available in\r\n\t\t * {@link module:core/editor/editor~Editor#t} and {@link module:ui/view~View#t}.\r\n\t\t *\r\n\t\t * The strings may contain placeholders (`%<index>`) for values which are passed as the second argument.\r\n\t\t * `<index>` is the index in the `values` array.\r\n\t\t *\r\n\t\t *\t\teditor.t( 'Created file \"%0\" in %1ms.', [ fileName, timeTaken ] );\r\n\t\t *\r\n\t\t * This method's context is statically bound to Locale instance,\r\n\t\t * so it can be called as a function:\r\n\t\t *\r\n\t\t *\t\tconst t = this.t;\r\n\t\t *\t\tt( 'Label' );\r\n\t\t *\r\n\t\t * @method #t\r\n\t\t * @param {String} str The string to translate.\r\n\t\t * @param {String[]} [values] Values that should be used to interpolate the string.\r\n\t\t */\r\n\t\tthis.t = ( ...args ) => this._t( ...args );\r\n\t}\r\n\r\n\t/**\r\n\t * The editor UI language code in the [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format.\r\n\t *\r\n\t * **Note**: This property has been deprecated. Please use {@link #uiLanguage} and {@link #contentLanguage}\r\n\t * properties instead.\r\n\t *\r\n\t * @deprecated\r\n\t * @member {String}\r\n\t */\r\n\tget language() {\r\n\t\t/**\r\n\t\t * The {@link module:utils/locale~Locale#language `Locale#language`} property has been deprecated and will\r\n\t\t * be removed in the near future. Please use {@link #uiLanguage} and {@link #contentLanguage} properties instead.\r\n\t\t *\r\n\t\t * @error locale-deprecated-language-property\r\n\t\t */\r\n\t\tconsole.warn(\r\n\t\t\t'locale-deprecated-language-property: ' +\r\n\t\t\t'The Locale#language property has been deprecated and will be removed in the near future. ' +\r\n\t\t\t'Please use #uiLanguage and #contentLanguage properties instead.' );\r\n\r\n\t\treturn this.uiLanguage;\r\n\t}\r\n\r\n\t/**\r\n\t * Base for the {@link #t} method.\r\n\t *\r\n\t * @private\r\n\t */\r\n\t_t( str, values ) {\r\n\t\tlet translatedString = translate( this.uiLanguage, str );\r\n\r\n\t\tif ( values ) {\r\n\t\t\ttranslatedString = translatedString.replace( /%(\\d+)/g, ( match, index ) => {\r\n\t\t\t\treturn ( index < values.length ) ? values[ index ] : match;\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\treturn translatedString;\r\n\t}\r\n}\r\n\r\n// Helps determine whether a language is LTR or RTL.\r\n//\r\n// @param {String} language The ISO 639-1 language code.\r\n// @returns {String} 'ltr' or 'rtl\r\nfunction getLanguageDirection( languageCode ) {\r\n\treturn RTL_LANGUAGE_CODES.includes( languageCode ) ? 'rtl' : 'ltr';\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/mix\r\n */\r\n\r\n/**\r\n * Copies enumerable properties and symbols from the objects given as 2nd+ parameters to the\r\n * prototype of first object (a constructor).\r\n *\r\n *\t\tclass Editor {\r\n *\t\t\t...\r\n *\t\t}\r\n *\r\n *\t\tconst SomeMixin = {\r\n *\t\t\ta() {\r\n *\t\t\t\treturn 'a';\r\n *\t\t\t}\r\n *\t\t};\r\n *\r\n *\t\tmix( Editor, SomeMixin, ... );\r\n *\r\n *\t\tnew Editor().a(); // -> 'a'\r\n *\r\n * Note: Properties which already exist in the base class will not be overriden.\r\n *\r\n * @param {Function} [baseClass] Class which prototype will be extended.\r\n * @param {Object} [...mixins] Objects from which to get properties.\r\n */\r\nexport default function mix( baseClass, ...mixins ) {\r\n\tmixins.forEach( mixin => {\r\n\t\tObject.getOwnPropertyNames( mixin ).concat( Object.getOwnPropertySymbols( mixin ) )\r\n\t\t\t.forEach( key => {\r\n\t\t\t\tif ( key in baseClass.prototype ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst sourceDescriptor = Object.getOwnPropertyDescriptor( mixin, key );\r\n\t\t\t\tsourceDescriptor.enumerable = false;\r\n\r\n\t\t\t\tObject.defineProperty( baseClass.prototype, key, sourceDescriptor );\r\n\t\t\t} );\r\n\t} );\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/objecttomap\r\n */\r\n\r\n/**\r\n * Transforms object to map.\r\n *\r\n *\t\tconst map = objectToMap( { 'foo': 1, 'bar': 2 } );\r\n *\t\tmap.get( 'foo' ); // 1\r\n *\r\n * **Note**: For mixed data (`Object` or `Iterable`) there's a dedicated {@link module:utils/tomap~toMap} function.\r\n *\r\n * @param {Object} obj Object to transform.\r\n * @returns {Map} Map created from object.\r\n */\r\nexport default function objectToMap( obj ) {\r\n\tconst map = new Map();\r\n\r\n\tfor ( const key in obj ) {\r\n\t\tmap.set( key, obj[ key ] );\r\n\t}\r\n\r\n\treturn map;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/observablemixin\r\n */\r\n\r\nimport EmitterMixin from './emittermixin';\r\nimport CKEditorError from './ckeditorerror';\r\nimport { extend, isObject } from 'lodash-es';\r\n\r\nconst observablePropertiesSymbol = Symbol( 'observableProperties' );\r\nconst boundObservablesSymbol = Symbol( 'boundObservables' );\r\nconst boundPropertiesSymbol = Symbol( 'boundProperties' );\r\n\r\n/**\r\n * Mixin that injects the \"observable properties\" and data binding functionality described in the\r\n * {@link ~Observable} interface.\r\n *\r\n * Read more about the concept of observables in the:\r\n * * {@glink framework/guides/architecture/core-editor-architecture#event-system-and-observables \"Event system and observables\"}\r\n * section of the {@glink framework/guides/architecture/core-editor-architecture \"Core editor architecture\"} guide,\r\n * * {@glink framework/guides/deep-dive/observables \"Observables\" deep dive} guide.\r\n *\r\n * @mixin ObservableMixin\r\n * @mixes module:utils/emittermixin~EmitterMixin\r\n * @implements module:utils/observablemixin~Observable\r\n */\r\nconst ObservableMixin = {\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tset( name, value ) {\r\n\t\t// If the first parameter is an Object, iterate over its properties.\r\n\t\tif ( isObject( name ) ) {\r\n\t\t\tObject.keys( name ).forEach( property => {\r\n\t\t\t\tthis.set( property, name[ property ] );\r\n\t\t\t}, this );\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tinitObservable( this );\r\n\r\n\t\tconst properties = this[ observablePropertiesSymbol ];\r\n\r\n\t\tif ( ( name in this ) && !properties.has( name ) ) {\r\n\t\t\t/**\r\n\t\t\t * Cannot override an existing property.\r\n\t\t\t *\r\n\t\t\t * This error is thrown when trying to {@link ~Observable#set set} an property with\r\n\t\t\t * a name of an already existing property. For example:\r\n\t\t\t *\r\n\t\t\t *\t\tlet observable = new Model();\r\n\t\t\t *\t\tobservable.property = 1;\r\n\t\t\t *\t\tobservable.set( 'property', 2 );\t\t\t// throws\r\n\t\t\t *\r\n\t\t\t *\t\tobservable.set( 'property', 1 );\r\n\t\t\t *\t\tobservable.set( 'property', 2 );\t\t\t// ok, because this is an existing property.\r\n\t\t\t *\r\n\t\t\t * @error observable-set-cannot-override\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'observable-set-cannot-override: Cannot override an existing property.', this );\r\n\t\t}\r\n\r\n\t\tObject.defineProperty( this, name, {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: true,\r\n\r\n\t\t\tget() {\r\n\t\t\t\treturn properties.get( name );\r\n\t\t\t},\r\n\r\n\t\t\tset( value ) {\r\n\t\t\t\tconst oldValue = properties.get( name );\r\n\r\n\t\t\t\t// Fire `set` event before the new value will be set to make it possible\r\n\t\t\t\t// to override observable property without affecting `change` event.\r\n\t\t\t\t// See https://github.com/ckeditor/ckeditor5-utils/issues/171.\r\n\t\t\t\tlet newValue = this.fire( 'set:' + name, name, value, oldValue );\r\n\r\n\t\t\t\tif ( newValue === undefined ) {\r\n\t\t\t\t\tnewValue = value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Allow undefined as an initial value like A.define( 'x', undefined ) (#132).\r\n\t\t\t\t// Note: When properties map has no such own property, then its value is undefined.\r\n\t\t\t\tif ( oldValue !== newValue || !properties.has( name ) ) {\r\n\t\t\t\t\tproperties.set( name, newValue );\r\n\t\t\t\t\tthis.fire( 'change:' + name, name, newValue, oldValue );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tthis[ name ] = value;\r\n\t},\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tbind( ...bindProperties ) {\r\n\t\tif ( !bindProperties.length || !isStringArray( bindProperties ) ) {\r\n\t\t\t/**\r\n\t\t\t * All properties must be strings.\r\n\t\t\t *\r\n\t\t\t * @error observable-bind-wrong-properties\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'observable-bind-wrong-properties: All properties must be strings.', this );\r\n\t\t}\r\n\r\n\t\tif ( ( new Set( bindProperties ) ).size !== bindProperties.length ) {\r\n\t\t\t/**\r\n\t\t\t * Properties must be unique.\r\n\t\t\t *\r\n\t\t\t * @error observable-bind-duplicate-properties\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'observable-bind-duplicate-properties: Properties must be unique.', this );\r\n\t\t}\r\n\r\n\t\tinitObservable( this );\r\n\r\n\t\tconst boundProperties = this[ boundPropertiesSymbol ];\r\n\r\n\t\tbindProperties.forEach( propertyName => {\r\n\t\t\tif ( boundProperties.has( propertyName ) ) {\r\n\t\t\t\t/**\r\n\t\t\t\t * Cannot bind the same property more than once.\r\n\t\t\t\t *\r\n\t\t\t\t * @error observable-bind-rebind\r\n\t\t\t\t */\r\n\t\t\t\tthrow new CKEditorError( 'observable-bind-rebind: Cannot bind the same property more than once.', this );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tconst bindings = new Map();\r\n\r\n\t\t// @typedef {Object} Binding\r\n\t\t// @property {Array} property Property which is bound.\r\n\t\t// @property {Array} to Array of observable–property components of the binding (`{ observable: ..., property: .. }`).\r\n\t\t// @property {Array} callback A function which processes `to` components.\r\n\t\tbindProperties.forEach( a => {\r\n\t\t\tconst binding = { property: a, to: [] };\r\n\r\n\t\t\tboundProperties.set( a, binding );\r\n\t\t\tbindings.set( a, binding );\r\n\t\t} );\r\n\r\n\t\t// @typedef {Object} BindChain\r\n\t\t// @property {Function} to See {@link ~ObservableMixin#_bindTo}.\r\n\t\t// @property {Function} toMany See {@link ~ObservableMixin#_bindToMany}.\r\n\t\t// @property {module:utils/observablemixin~Observable} _observable The observable which initializes the binding.\r\n\t\t// @property {Array} _bindProperties Array of `_observable` properties to be bound.\r\n\t\t// @property {Array} _to Array of `to()` observable–properties (`{ observable: toObservable, properties: ...toProperties }`).\r\n\t\t// @property {Map} _bindings Stores bindings to be kept in\r\n\t\t// {@link ~ObservableMixin#_boundProperties}/{@link ~ObservableMixin#_boundObservables}\r\n\t\t// initiated in this binding chain.\r\n\t\treturn {\r\n\t\t\tto: bindTo,\r\n\t\t\ttoMany: bindToMany,\r\n\r\n\t\t\t_observable: this,\r\n\t\t\t_bindProperties: bindProperties,\r\n\t\t\t_to: [],\r\n\t\t\t_bindings: bindings\r\n\t\t};\r\n\t},\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tunbind( ...unbindProperties ) {\r\n\t\t// Nothing to do here if not inited yet.\r\n\t\tif ( !( observablePropertiesSymbol in this ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst boundProperties = this[ boundPropertiesSymbol ];\r\n\t\tconst boundObservables = this[ boundObservablesSymbol ];\r\n\r\n\t\tif ( unbindProperties.length ) {\r\n\t\t\tif ( !isStringArray( unbindProperties ) ) {\r\n\t\t\t\t/**\r\n\t\t\t\t * Properties must be strings.\r\n\t\t\t\t *\r\n\t\t\t\t * @error observable-unbind-wrong-properties\r\n\t\t\t\t */\r\n\t\t\t\tthrow new CKEditorError( 'observable-unbind-wrong-properties: Properties must be strings.', this );\r\n\t\t\t}\r\n\r\n\t\t\tunbindProperties.forEach( propertyName => {\r\n\t\t\t\tconst binding = boundProperties.get( propertyName );\r\n\r\n\t\t\t\t// Nothing to do if the binding is not defined\r\n\t\t\t\tif ( !binding ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet toObservable, toProperty, toProperties, toPropertyBindings;\r\n\r\n\t\t\t\tbinding.to.forEach( to => {\r\n\t\t\t\t\t// TODO: ES6 destructuring.\r\n\t\t\t\t\ttoObservable = to[ 0 ];\r\n\t\t\t\t\ttoProperty = to[ 1 ];\r\n\t\t\t\t\ttoProperties = boundObservables.get( toObservable );\r\n\t\t\t\t\ttoPropertyBindings = toProperties[ toProperty ];\r\n\r\n\t\t\t\t\ttoPropertyBindings.delete( binding );\r\n\r\n\t\t\t\t\tif ( !toPropertyBindings.size ) {\r\n\t\t\t\t\t\tdelete toProperties[ toProperty ];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( !Object.keys( toProperties ).length ) {\r\n\t\t\t\t\t\tboundObservables.delete( toObservable );\r\n\t\t\t\t\t\tthis.stopListening( toObservable, 'change' );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tboundProperties.delete( propertyName );\r\n\t\t\t} );\r\n\t\t} else {\r\n\t\t\tboundObservables.forEach( ( bindings, boundObservable ) => {\r\n\t\t\t\tthis.stopListening( boundObservable, 'change' );\r\n\t\t\t} );\r\n\r\n\t\t\tboundObservables.clear();\r\n\t\t\tboundProperties.clear();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tdecorate( methodName ) {\r\n\t\tconst originalMethod = this[ methodName ];\r\n\r\n\t\tif ( !originalMethod ) {\r\n\t\t\t/**\r\n\t\t\t * Cannot decorate an undefined method.\r\n\t\t\t *\r\n\t\t\t * @error observablemixin-cannot-decorate-undefined\r\n\t\t\t * @param {Object} object The object which method should be decorated.\r\n\t\t\t * @param {String} methodName Name of the method which does not exist.\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError(\r\n\t\t\t\t'observablemixin-cannot-decorate-undefined: Cannot decorate an undefined method.',\r\n\t\t\t\tthis,\r\n\t\t\t\t{ object: this, methodName }\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tthis.on( methodName, ( evt, args ) => {\r\n\t\t\tevt.return = originalMethod.apply( this, args );\r\n\t\t} );\r\n\r\n\t\tthis[ methodName ] = function( ...args ) {\r\n\t\t\treturn this.fire( methodName, args );\r\n\t\t};\r\n\t}\r\n};\r\n\r\nextend( ObservableMixin, EmitterMixin );\r\n\r\nexport default ObservableMixin;\r\n\r\n// Init symbol properties needed to for the observable mechanism to work.\r\n//\r\n// @private\r\n// @param {module:utils/observablemixin~ObservableMixin} observable\r\nfunction initObservable( observable ) {\r\n\t// Do nothing if already inited.\r\n\tif ( observablePropertiesSymbol in observable ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// The internal hash containing the observable's state.\r\n\t//\r\n\t// @private\r\n\t// @type {Map}\r\n\tObject.defineProperty( observable, observablePropertiesSymbol, {\r\n\t\tvalue: new Map()\r\n\t} );\r\n\r\n\t// Map containing bindings to external observables. It shares the binding objects\r\n\t// (`{ observable: A, property: 'a', to: ... }`) with {@link module:utils/observablemixin~ObservableMixin#_boundProperties} and\r\n\t// it is used to observe external observables to update own properties accordingly.\r\n\t// See {@link module:utils/observablemixin~ObservableMixin#bind}.\r\n\t//\r\n\t//\t\tA.bind( 'a', 'b', 'c' ).to( B, 'x', 'y', 'x' );\r\n\t//\t\tconsole.log( A._boundObservables );\r\n\t//\r\n\t//\t\t\tMap( {\r\n\t//\t\t\t\tB: {\r\n\t//\t\t\t\t\tx: Set( [\r\n\t//\t\t\t\t\t\t{ observable: A, property: 'a', to: [ [ B, 'x' ] ] },\r\n\t//\t\t\t\t\t\t{ observable: A, property: 'c', to: [ [ B, 'x' ] ] }\r\n\t//\t\t\t\t\t] ),\r\n\t//\t\t\t\t\ty: Set( [\r\n\t//\t\t\t\t\t\t{ observable: A, property: 'b', to: [ [ B, 'y' ] ] },\r\n\t//\t\t\t\t\t] )\r\n\t//\t\t\t\t}\r\n\t//\t\t\t} )\r\n\t//\r\n\t//\t\tA.bind( 'd' ).to( B, 'z' ).to( C, 'w' ).as( callback );\r\n\t//\t\tconsole.log( A._boundObservables );\r\n\t//\r\n\t//\t\t\tMap( {\r\n\t//\t\t\t\tB: {\r\n\t//\t\t\t\t\tx: Set( [\r\n\t//\t\t\t\t\t\t{ observable: A, property: 'a', to: [ [ B, 'x' ] ] },\r\n\t//\t\t\t\t\t\t{ observable: A, property: 'c', to: [ [ B, 'x' ] ] }\r\n\t//\t\t\t\t\t] ),\r\n\t//\t\t\t\t\ty: Set( [\r\n\t//\t\t\t\t\t\t{ observable: A, property: 'b', to: [ [ B, 'y' ] ] },\r\n\t//\t\t\t\t\t] ),\r\n\t//\t\t\t\t\tz: Set( [\r\n\t//\t\t\t\t\t\t{ observable: A, property: 'd', to: [ [ B, 'z' ], [ C, 'w' ] ], callback: callback }\r\n\t//\t\t\t\t\t] )\r\n\t//\t\t\t\t},\r\n\t//\t\t\t\tC: {\r\n\t//\t\t\t\t\tw: Set( [\r\n\t//\t\t\t\t\t\t{ observable: A, property: 'd', to: [ [ B, 'z' ], [ C, 'w' ] ], callback: callback }\r\n\t//\t\t\t\t\t] )\r\n\t//\t\t\t\t}\r\n\t//\t\t\t} )\r\n\t//\r\n\t// @private\r\n\t// @type {Map}\r\n\tObject.defineProperty( observable, boundObservablesSymbol, {\r\n\t\tvalue: new Map()\r\n\t} );\r\n\r\n\t// Object that stores which properties of this observable are bound and how. It shares\r\n\t// the binding objects (`{ observable: A, property: 'a', to: ... }`) with\r\n\t// {@link module:utils/observablemixin~ObservableMixin#_boundObservables}. This data structure is\r\n\t// a reverse of {@link module:utils/observablemixin~ObservableMixin#_boundObservables} and it is helpful for\r\n\t// {@link module:utils/observablemixin~ObservableMixin#unbind}.\r\n\t//\r\n\t// See {@link module:utils/observablemixin~ObservableMixin#bind}.\r\n\t//\r\n\t//\t\tA.bind( 'a', 'b', 'c' ).to( B, 'x', 'y', 'x' );\r\n\t//\t\tconsole.log( A._boundProperties );\r\n\t//\r\n\t//\t\t\tMap( {\r\n\t//\t\t\t\ta: { observable: A, property: 'a', to: [ [ B, 'x' ] ] },\r\n\t//\t\t\t\tb: { observable: A, property: 'b', to: [ [ B, 'y' ] ] },\r\n\t//\t\t\t\tc: { observable: A, property: 'c', to: [ [ B, 'x' ] ] }\r\n\t//\t\t\t} )\r\n\t//\r\n\t//\t\tA.bind( 'd' ).to( B, 'z' ).to( C, 'w' ).as( callback );\r\n\t//\t\tconsole.log( A._boundProperties );\r\n\t//\r\n\t//\t\t\tMap( {\r\n\t//\t\t\t\ta: { observable: A, property: 'a', to: [ [ B, 'x' ] ] },\r\n\t//\t\t\t\tb: { observable: A, property: 'b', to: [ [ B, 'y' ] ] },\r\n\t//\t\t\t\tc: { observable: A, property: 'c', to: [ [ B, 'x' ] ] },\r\n\t//\t\t\t\td: { observable: A, property: 'd', to: [ [ B, 'z' ], [ C, 'w' ] ], callback: callback }\r\n\t//\t\t\t} )\r\n\t//\r\n\t// @private\r\n\t// @type {Map}\r\n\tObject.defineProperty( observable, boundPropertiesSymbol, {\r\n\t\tvalue: new Map()\r\n\t} );\r\n}\r\n\r\n// A chaining for {@link module:utils/observablemixin~ObservableMixin#bind} providing `.to()` interface.\r\n//\r\n// @private\r\n// @param {...[Observable|String|Function]} args Arguments of the `.to( args )` binding.\r\nfunction bindTo( ...args ) {\r\n\tconst parsedArgs = parseBindToArgs( ...args );\r\n\tconst bindingsKeys = Array.from( this._bindings.keys() );\r\n\tconst numberOfBindings = bindingsKeys.length;\r\n\r\n\t// Eliminate A.bind( 'x' ).to( B, C )\r\n\tif ( !parsedArgs.callback && parsedArgs.to.length > 1 ) {\r\n\t\t/**\r\n\t\t * Binding multiple observables only possible with callback.\r\n\t\t *\r\n\t\t * @error observable-bind-no-callback\r\n\t\t */\r\n\t\tthrow new CKEditorError(\r\n\t\t\t'observable-bind-to-no-callback: Binding multiple observables only possible with callback.',\r\n\t\t\tthis\r\n\t\t);\r\n\t}\r\n\r\n\t// Eliminate A.bind( 'x', 'y' ).to( B, callback )\r\n\tif ( numberOfBindings > 1 && parsedArgs.callback ) {\r\n\t\t/**\r\n\t\t * Cannot bind multiple properties and use a callback in one binding.\r\n\t\t *\r\n\t\t * @error observable-bind-to-extra-callback\r\n\t\t */\r\n\t\tthrow new CKEditorError(\r\n\t\t\t'observable-bind-to-extra-callback: Cannot bind multiple properties and use a callback in one binding.',\r\n\t\t\tthis\r\n\t\t);\r\n\t}\r\n\r\n\tparsedArgs.to.forEach( to => {\r\n\t\t// Eliminate A.bind( 'x', 'y' ).to( B, 'a' )\r\n\t\tif ( to.properties.length && to.properties.length !== numberOfBindings ) {\r\n\t\t\t/**\r\n\t\t\t * The number of properties must match.\r\n\t\t\t *\r\n\t\t\t * @error observable-bind-to-properties-length\r\n\t\t\t */\r\n\t\t\tthrow new CKEditorError( 'observable-bind-to-properties-length: The number of properties must match.', this );\r\n\t\t}\r\n\r\n\t\t// When no to.properties specified, observing source properties instead i.e.\r\n\t\t// A.bind( 'x', 'y' ).to( B ) -> Observe B.x and B.y\r\n\t\tif ( !to.properties.length ) {\r\n\t\t\tto.properties = this._bindProperties;\r\n\t\t}\r\n\t} );\r\n\r\n\tthis._to = parsedArgs.to;\r\n\r\n\t// Fill {@link BindChain#_bindings} with callback. When the callback is set there's only one binding.\r\n\tif ( parsedArgs.callback ) {\r\n\t\tthis._bindings.get( bindingsKeys[ 0 ] ).callback = parsedArgs.callback;\r\n\t}\r\n\r\n\tattachBindToListeners( this._observable, this._to );\r\n\r\n\t// Update observable._boundProperties and observable._boundObservables.\r\n\tupdateBindToBound( this );\r\n\r\n\t// Set initial values of bound properties.\r\n\tthis._bindProperties.forEach( propertyName => {\r\n\t\tupdateBoundObservableProperty( this._observable, propertyName );\r\n\t} );\r\n}\r\n\r\n// Binds to an attribute in a set of iterable observables.\r\n//\r\n// @private\r\n// @param {Array.<Observable>} observables\r\n// @param {String} attribute\r\n// @param {Function} callback\r\nfunction bindToMany( observables, attribute, callback ) {\r\n\tif ( this._bindings.size > 1 ) {\r\n\t\t/**\r\n\t\t * Binding one attribute to many observables only possible with one attribute.\r\n\t\t *\r\n\t\t * @error observable-bind-to-many-not-one-binding\r\n\t\t */\r\n\t\tthrow new CKEditorError( 'observable-bind-to-many-not-one-binding: Cannot bind multiple properties with toMany().', this );\r\n\t}\r\n\r\n\tthis.to(\r\n\t\t// Bind to #attribute of each observable...\r\n\t\t...getBindingTargets( observables, attribute ),\r\n\t\t// ...using given callback to parse attribute values.\r\n\t\tcallback\r\n\t);\r\n}\r\n\r\n// Returns an array of binding components for\r\n// {@link Observable#bind} from a set of iterable observables.\r\n//\r\n// @param {Array.<Observable>} observables\r\n// @param {String} attribute\r\n// @returns {Array.<String|Observable>}\r\nfunction getBindingTargets( observables, attribute ) {\r\n\tconst observableAndAttributePairs = observables.map( observable => [ observable, attribute ] );\r\n\r\n\t// Merge pairs to one-dimension array of observables and attributes.\r\n\treturn Array.prototype.concat.apply( [], observableAndAttributePairs );\r\n}\r\n\r\n// Check if all entries of the array are of `String` type.\r\n//\r\n// @private\r\n// @param {Array} arr An array to be checked.\r\n// @returns {Boolean}\r\nfunction isStringArray( arr ) {\r\n\treturn arr.every( a => typeof a == 'string' );\r\n}\r\n\r\n// Parses and validates {@link Observable#bind}`.to( args )` arguments and returns\r\n// an object with a parsed structure. For example\r\n//\r\n//\t\tA.bind( 'x' ).to( B, 'a', C, 'b', call );\r\n//\r\n// becomes\r\n//\r\n//\t\t{\r\n//\t\t\tto: [\r\n//\t\t\t\t{ observable: B, properties: [ 'a' ] },\r\n//\t\t\t\t{ observable: C, properties: [ 'b' ] },\r\n//\t\t\t],\r\n//\t\t\tcallback: call\r\n// \t\t}\r\n//\r\n// @private\r\n// @param {...*} args Arguments of {@link Observable#bind}`.to( args )`.\r\n// @returns {Object}\r\nfunction parseBindToArgs( ...args ) {\r\n\t// Eliminate A.bind( 'x' ).to()\r\n\tif ( !args.length ) {\r\n\t\t/**\r\n\t\t * Invalid argument syntax in `to()`.\r\n\t\t *\r\n\t\t * @error observable-bind-to-parse-error\r\n\t\t */\r\n\t\tthrow new CKEditorError( 'observable-bind-to-parse-error: Invalid argument syntax in `to()`.', null );\r\n\t}\r\n\r\n\tconst parsed = { to: [] };\r\n\tlet lastObservable;\r\n\r\n\tif ( typeof args[ args.length - 1 ] == 'function' ) {\r\n\t\tparsed.callback = args.pop();\r\n\t}\r\n\r\n\targs.forEach( a => {\r\n\t\tif ( typeof a == 'string' ) {\r\n\t\t\tlastObservable.properties.push( a );\r\n\t\t} else if ( typeof a == 'object' ) {\r\n\t\t\tlastObservable = { observable: a, properties: [] };\r\n\t\t\tparsed.to.push( lastObservable );\r\n\t\t} else {\r\n\t\t\tthrow new CKEditorError( 'observable-bind-to-parse-error: Invalid argument syntax in `to()`.', null );\r\n\t\t}\r\n\t} );\r\n\r\n\treturn parsed;\r\n}\r\n\r\n// Synchronizes {@link module:utils/observablemixin#_boundObservables} with {@link Binding}.\r\n//\r\n// @private\r\n// @param {Binding} binding A binding to store in {@link Observable#_boundObservables}.\r\n// @param {Observable} toObservable A observable, which is a new component of `binding`.\r\n// @param {String} toPropertyName A name of `toObservable`'s property, a new component of the `binding`.\r\nfunction updateBoundObservables( observable, binding, toObservable, toPropertyName ) {\r\n\tconst boundObservables = observable[ boundObservablesSymbol ];\r\n\tconst bindingsToObservable = boundObservables.get( toObservable );\r\n\tconst bindings = bindingsToObservable || {};\r\n\r\n\tif ( !bindings[ toPropertyName ] ) {\r\n\t\tbindings[ toPropertyName ] = new Set();\r\n\t}\r\n\r\n\t// Pass the binding to a corresponding Set in `observable._boundObservables`.\r\n\tbindings[ toPropertyName ].add( binding );\r\n\r\n\tif ( !bindingsToObservable ) {\r\n\t\tboundObservables.set( toObservable, bindings );\r\n\t}\r\n}\r\n\r\n// Synchronizes {@link Observable#_boundProperties} and {@link Observable#_boundObservables}\r\n// with {@link BindChain}.\r\n//\r\n// Assuming the following binding being created\r\n//\r\n// \t\tA.bind( 'a', 'b' ).to( B, 'x', 'y' );\r\n//\r\n// the following bindings were initialized by {@link Observable#bind} in {@link BindChain#_bindings}:\r\n//\r\n// \t\t{\r\n// \t\t\ta: { observable: A, property: 'a', to: [] },\r\n// \t\t\tb: { observable: A, property: 'b', to: [] },\r\n// \t\t}\r\n//\r\n// Iterate over all bindings in this chain and fill their `to` properties with\r\n// corresponding to( ... ) arguments (components of the binding), so\r\n//\r\n// \t\t{\r\n// \t\t\ta: { observable: A, property: 'a', to: [ B, 'x' ] },\r\n// \t\t\tb: { observable: A, property: 'b', to: [ B, 'y' ] },\r\n// \t\t}\r\n//\r\n// Then update the structure of {@link Observable#_boundObservables} with updated\r\n// binding, so it becomes:\r\n//\r\n// \t\tMap( {\r\n// \t\t\tB: {\r\n// \t\t\t\tx: Set( [\r\n// \t\t\t\t\t{ observable: A, property: 'a', to: [ [ B, 'x' ] ] }\r\n// \t\t\t\t] ),\r\n// \t\t\t\ty: Set( [\r\n// \t\t\t\t\t{ observable: A, property: 'b', to: [ [ B, 'y' ] ] },\r\n// \t\t\t\t] )\r\n//\t\t\t}\r\n// \t\t} )\r\n//\r\n// @private\r\n// @param {BindChain} chain The binding initialized by {@link Observable#bind}.\r\nfunction updateBindToBound( chain ) {\r\n\tlet toProperty;\r\n\r\n\tchain._bindings.forEach( ( binding, propertyName ) => {\r\n\t\t// Note: For a binding without a callback, this will run only once\r\n\t\t// like in A.bind( 'x', 'y' ).to( B, 'a', 'b' )\r\n\t\t// TODO: ES6 destructuring.\r\n\t\tchain._to.forEach( to => {\r\n\t\t\ttoProperty = to.properties[ binding.callback ? 0 : chain._bindProperties.indexOf( propertyName ) ];\r\n\r\n\t\t\tbinding.to.push( [ to.observable, toProperty ] );\r\n\t\t\tupdateBoundObservables( chain._observable, binding, to.observable, toProperty );\r\n\t\t} );\r\n\t} );\r\n}\r\n\r\n// Updates an property of a {@link Observable} with a value\r\n// determined by an entry in {@link Observable#_boundProperties}.\r\n//\r\n// @private\r\n// @param {Observable} observable A observable which property is to be updated.\r\n// @param {String} propertyName An property to be updated.\r\nfunction updateBoundObservableProperty( observable, propertyName ) {\r\n\tconst boundProperties = observable[ boundPropertiesSymbol ];\r\n\tconst binding = boundProperties.get( propertyName );\r\n\tlet propertyValue;\r\n\r\n\t// When a binding with callback is created like\r\n\t//\r\n\t// \t\tA.bind( 'a' ).to( B, 'b', C, 'c', callback );\r\n\t//\r\n\t// collect B.b and C.c, then pass them to callback to set A.a.\r\n\tif ( binding.callback ) {\r\n\t\tpropertyValue = binding.callback.apply( observable, binding.to.map( to => to[ 0 ][ to[ 1 ] ] ) );\r\n\t} else {\r\n\t\tpropertyValue = binding.to[ 0 ];\r\n\t\tpropertyValue = propertyValue[ 0 ][ propertyValue[ 1 ] ];\r\n\t}\r\n\r\n\tif ( observable.hasOwnProperty( propertyName ) ) {\r\n\t\tobservable[ propertyName ] = propertyValue;\r\n\t} else {\r\n\t\tobservable.set( propertyName, propertyValue );\r\n\t}\r\n}\r\n\r\n// Starts listening to changes in {@link BindChain._to} observables to update\r\n// {@link BindChain._observable} {@link BindChain._bindProperties}. Also sets the\r\n// initial state of {@link BindChain._observable}.\r\n//\r\n// @private\r\n// @param {BindChain} chain The chain initialized by {@link Observable#bind}.\r\nfunction attachBindToListeners( observable, toBindings ) {\r\n\ttoBindings.forEach( to => {\r\n\t\tconst boundObservables = observable[ boundObservablesSymbol ];\r\n\t\tlet bindings;\r\n\r\n\t\t// If there's already a chain between the observables (`observable` listens to\r\n\t\t// `to.observable`), there's no need to create another `change` event listener.\r\n\t\tif ( !boundObservables.get( to.observable ) ) {\r\n\t\t\tobservable.listenTo( to.observable, 'change', ( evt, propertyName ) => {\r\n\t\t\t\tbindings = boundObservables.get( to.observable )[ propertyName ];\r\n\r\n\t\t\t\t// Note: to.observable will fire for any property change, react\r\n\t\t\t\t// to changes of properties which are bound only.\r\n\t\t\t\tif ( bindings ) {\r\n\t\t\t\t\tbindings.forEach( binding => {\r\n\t\t\t\t\t\tupdateBoundObservableProperty( observable, binding.property );\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t}\r\n\t} );\r\n}\r\n\r\n/**\r\n * Interface which adds \"observable properties\" and data binding functionality.\r\n *\r\n * Can be easily implemented by a class by mixing the {@link module:utils/observablemixin~ObservableMixin} mixin.\r\n *\r\n * Read more about the usage of this interface in the:\r\n * * {@glink framework/guides/architecture/core-editor-architecture#event-system-and-observables \"Event system and observables\"}\r\n * section of the {@glink framework/guides/architecture/core-editor-architecture \"Core editor architecture\"} guide,\r\n * * {@glink framework/guides/deep-dive/observables \"Observables\" deep dive} guide.\r\n *\r\n * @interface Observable\r\n * @extends module:utils/emittermixin~Emitter\r\n */\r\n\r\n/**\r\n * Fired when a property changed value.\r\n *\r\n *\t\tobservable.set( 'prop', 1 );\r\n *\r\n *\t\tobservable.on( 'change:prop', ( evt, propertyName, newValue, oldValue ) => {\r\n *\t\t\tconsole.log( `${ propertyName } has changed from ${ oldValue } to ${ newValue }` );\r\n *\t\t} );\r\n *\r\n *\t\tobservable.prop = 2; // -> 'prop has changed from 1 to 2'\r\n *\r\n * @event change:{property}\r\n * @param {String} name The property name.\r\n * @param {*} value The new property value.\r\n * @param {*} oldValue The previous property value.\r\n */\r\n\r\n/**\r\n * Fired when a property value is going to be set but is not set yet (before the `change` event is fired).\r\n *\r\n * You can control the final value of the property by using\r\n * the {@link module:utils/eventinfo~EventInfo#return event's `return` property}.\r\n *\r\n *\t\tobservable.set( 'prop', 1 );\r\n *\r\n *\t\tobservable.on( 'set:prop', ( evt, propertyName, newValue, oldValue ) => {\r\n *\t\t\tconsole.log( `Value is going to be changed from ${ oldValue } to ${ newValue }` );\r\n *\t\t\tconsole.log( `Current property value is ${ observable[ propertyName ] }` );\r\n *\r\n *\t\t\t// Let's override the value.\r\n *\t\t\tevt.return = 3;\r\n *\t\t} );\r\n *\r\n *\t\tobservable.on( 'change:prop', ( evt, propertyName, newValue, oldValue ) => {\r\n *\t\t\tconsole.log( `Value has changed from ${ oldValue } to ${ newValue }` );\r\n *\t\t} );\r\n *\r\n *\t\tobservable.prop = 2; // -> 'Value is going to be changed from 1 to 2'\r\n *\t\t                     // -> 'Current property value is 1'\r\n *\t\t                     // -> 'Value has changed from 1 to 3'\r\n *\r\n * **Note:** Event is fired even when the new value is the same as the old value.\r\n *\r\n * @event set:{property}\r\n * @param {String} name The property name.\r\n * @param {*} value The new property value.\r\n * @param {*} oldValue The previous property value.\r\n */\r\n\r\n/**\r\n * Creates and sets the value of an observable property of this object. Such an property becomes a part\r\n * of the state and is be observable.\r\n *\r\n * It accepts also a single object literal containing key/value pairs with properties to be set.\r\n *\r\n * This method throws the `observable-set-cannot-override` error if the observable instance already\r\n * have a property with the given property name. This prevents from mistakenly overriding existing\r\n * properties and methods, but means that `foo.set( 'bar', 1 )` may be slightly slower than `foo.bar = 1`.\r\n *\r\n * @method #set\r\n * @param {String|Object} name The property's name or object with `name=>value` pairs.\r\n * @param {*} [value] The property's value (if `name` was passed in the first parameter).\r\n */\r\n\r\n/**\r\n * Binds {@link #set observable properties} to other objects implementing the\r\n * {@link module:utils/observablemixin~Observable} interface.\r\n *\r\n * Read more in the {@glink framework/guides/deep-dive/observables#property-bindings dedicated guide}\r\n * covering the topic of property bindings with some additional examples.\r\n *\r\n * Consider two objects: a `button` and an associated `command` (both `Observable`).\r\n *\r\n * A simple property binding could be as follows:\r\n *\r\n *\t\tbutton.bind( 'isEnabled' ).to( command, 'isEnabled' );\r\n *\r\n * or even shorter:\r\n *\r\n *\t\tbutton.bind( 'isEnabled' ).to( command );\r\n *\r\n * which works in the following way:\r\n *\r\n * * `button.isEnabled` **instantly equals** `command.isEnabled`,\r\n * * whenever `command.isEnabled` changes, `button.isEnabled` will immediately reflect its value.\r\n *\r\n * **Note**: To release the binding, use {@link module:utils/observablemixin~Observable#unbind}.\r\n *\r\n * You can also \"rename\" the property in the binding by specifying the new name in the `to()` chain:\r\n *\r\n *\t\tbutton.bind( 'isEnabled' ).to( command, 'isWorking' );\r\n *\r\n * It is possible to bind more than one property at a time to shorten the code:\r\n *\r\n *\t\tbutton.bind( 'isEnabled', 'value' ).to( command );\r\n *\r\n * which corresponds to:\r\n *\r\n *\t\tbutton.bind( 'isEnabled' ).to( command );\r\n *\t\tbutton.bind( 'value' ).to( command );\r\n *\r\n * The binding can include more than one observable, combining multiple data sources in a custom callback:\r\n *\r\n *\t\tbutton.bind( 'isEnabled' ).to( command, 'isEnabled', ui, 'isVisible',\r\n *\t\t\t( isCommandEnabled, isUIVisible ) => isCommandEnabled && isUIVisible );\r\n *\r\n * It is also possible to bind to the same property in an array of observables.\r\n * To bind a `button` to multiple commands (also `Observables`) so that each and every one of them\r\n * must be enabled for the button to become enabled, use the following code:\r\n *\r\n *\t\tbutton.bind( 'isEnabled' ).toMany( [ commandA, commandB, commandC ], 'isEnabled',\r\n *\t\t\t( isAEnabled, isBEnabled, isCEnabled ) => isAEnabled && isBEnabled && isCEnabled );\r\n *\r\n * @method #bind\r\n * @param {...String} bindProperties Observable properties that will be bound to other observable(s).\r\n * @returns {Object} The bind chain with the `to()` and `toMany()` methods.\r\n */\r\n\r\n/**\r\n * Removes the binding created with {@link #bind}.\r\n *\r\n *\t\t// Removes the binding for the 'a' property.\r\n *\t\tA.unbind( 'a' );\r\n *\r\n *\t\t// Removes bindings for all properties.\r\n *\t\tA.unbind();\r\n *\r\n * @method #unbind\r\n * @param {...String} [unbindProperties] Observable properties to be unbound. All the bindings will\r\n * be released if no properties are provided.\r\n */\r\n\r\n/**\r\n * Turns the given methods of this object into event-based ones. This means that the new method will fire an event\r\n * (named after the method) and the original action will be plugged as a listener to that event.\r\n *\r\n * Read more in the {@glink framework/guides/deep-dive/observables#decorating-object-methods dedicated guide}\r\n * covering the topic of decorating methods with some additional examples.\r\n *\r\n * Decorating the method does not change its behavior (it only adds an event),\r\n * but it allows to modify it later on by listening to the method's event.\r\n *\r\n * For example, to cancel the method execution the event can be {@link module:utils/eventinfo~EventInfo#stop stopped}:\r\n *\r\n *\t\tclass Foo {\r\n *\t\t\tconstructor() {\r\n *\t\t\t\tthis.decorate( 'method' );\r\n *\t\t\t}\r\n *\r\n *\t\t\tmethod() {\r\n *\t\t\t\tconsole.log( 'called!' );\r\n *\t\t\t}\r\n *\t\t}\r\n *\r\n *\t\tconst foo = new Foo();\r\n *\t\tfoo.on( 'method', ( evt ) => {\r\n *\t\t\tevt.stop();\r\n *\t\t}, { priority: 'high' } );\r\n *\r\n *\t\tfoo.method(); // Nothing is logged.\r\n *\r\n *\r\n * **Note**: The high {@link module:utils/priorities~PriorityString priority} listener\r\n * has been used to execute this particular callback before the one which calls the original method\r\n * (which uses the \"normal\" priority).\r\n *\r\n * It is also possible to change the returned value:\r\n *\r\n *\t\tfoo.on( 'method', ( evt ) => {\r\n *\t\t\tevt.return = 'Foo!';\r\n *\t\t} );\r\n *\r\n *\t\tfoo.method(); // -> 'Foo'\r\n *\r\n * Finally, it is possible to access and modify the arguments the method is called with:\r\n *\r\n *\t\tmethod( a, b ) {\r\n *\t\t\tconsole.log( `${ a }, ${ b }`  );\r\n *\t\t}\r\n *\r\n *\t\t// ...\r\n *\r\n *\t\tfoo.on( 'method', ( evt, args ) => {\r\n *\t\t\targs[ 0 ] = 3;\r\n *\r\n *\t\t\tconsole.log( args[ 1 ] ); // -> 2\r\n *\t\t}, { priority: 'high' } );\r\n *\r\n *\t\tfoo.method( 1, 2 ); // -> '3, 2'\r\n *\r\n * @method #decorate\r\n * @param {String} methodName Name of the method to decorate.\r\n */\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/priorities\r\n */\r\n\r\n/**\r\n * String representing a priority value.\r\n *\r\n * @typedef {'highest'|'high'|'normal'|'low'|'lowest'} module:utils/priorities~PriorityString\r\n */\r\n\r\n/**\r\n * Provides group of constants to use instead of hardcoding numeric priority values.\r\n *\r\n * @namespace\r\n */\r\nconst priorities = {\r\n\t/**\r\n\t * Converts a string with priority name to it's numeric value. If `Number` is given, it just returns it.\r\n\t *\r\n\t * @static\r\n\t * @param {module:utils/priorities~PriorityString|Number} priority Priority to convert.\r\n\t * @returns {Number} Converted priority.\r\n\t */\r\n\tget( priority ) {\r\n\t\tif ( typeof priority != 'number' ) {\r\n\t\t\treturn this[ priority ] || this.normal;\r\n\t\t} else {\r\n\t\t\treturn priority;\r\n\t\t}\r\n\t},\r\n\r\n\thighest: 100000,\r\n\thigh: 1000,\r\n\tnormal: 0,\r\n\tlow: -1000,\r\n\tlowest: -100000\r\n};\r\n\r\nexport default priorities;\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/spy\r\n */\r\n\r\n/**\r\n * Creates a spy function (ala Sinon.js) that can be used to inspect call to it.\r\n *\r\n * The following are the present features:\r\n *\r\n * * spy.called: property set to `true` if the function has been called at least once.\r\n *\r\n * @returns {Function} The spy function.\r\n */\r\nfunction spy() {\r\n\treturn function spy() {\r\n\t\tspy.called = true;\r\n\t};\r\n}\r\n\r\nexport default spy;\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/tomap\r\n */\r\n\r\nimport objectToMap from './objecttomap';\r\nimport isIterable from './isiterable';\r\n\r\n/**\r\n * Transforms object or iterable to map. Iterable needs to be in the format acceptable by the `Map` constructor.\r\n *\r\n *\t\tmap = toMap( { 'foo': 1, 'bar': 2 } );\r\n *\t\tmap = toMap( [ [ 'foo', 1 ], [ 'bar', 2 ] ] );\r\n *\t\tmap = toMap( anotherMap );\r\n *\r\n * @param {Object|Iterable} data Object or iterable to transform.\r\n * @returns {Map} Map created from data.\r\n */\r\nexport default function toMap( data ) {\r\n\tif ( isIterable( data ) ) {\r\n\t\treturn new Map( data );\r\n\t} else {\r\n\t\treturn objectToMap( data );\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/* globals window */\r\n\r\n/**\r\n * @module utils/translation-service\r\n */\r\n\r\n/* istanbul ignore else */\r\nif ( !window.CKEDITOR_TRANSLATIONS ) {\r\n\twindow.CKEDITOR_TRANSLATIONS = {};\r\n}\r\n\r\n/**\r\n * Adds translations to existing ones.\r\n * These translations will later be available for the {@link module:utils/translation-service~translate `translate()`} function.\r\n *\r\n *\t\tadd( 'pl', {\r\n *\t\t\t'OK': 'OK',\r\n *\t\t\t'Cancel [context: reject]': 'Anuluj'\r\n *\t\t} );\r\n *\r\n * If you cannot import this function from this module (e.g. because you use a CKEditor 5 build), then you can\r\n * still add translations by extending the global `window.CKEDITOR_TRANSLATIONS` object by using a function like\r\n * the one below:\r\n *\r\n *\t\tfunction addTranslations( language, translations ) {\r\n *\t\t\tif ( !window.CKEDITOR_TRANSLATIONS ) {\r\n *\t\t\t\twindow.CKEDITOR_TRANSLATIONS = {};\r\n *\t\t\t}\r\n *\r\n *\t\t\tconst dictionary = window.CKEDITOR_TRANSLATIONS[ language ] || ( window.CKEDITOR_TRANSLATIONS[ language ] = {} );\r\n *\r\n *\t\t\t// Extend the dictionary for the given language.\r\n *\t\t\tObject.assign( dictionary, translations );\r\n *\t\t}\r\n *\r\n * @param {String} language Target language.\r\n * @param {Object.<String, String>} translations Translations which will be added to the dictionary.\r\n */\r\nexport function add( language, translations ) {\r\n\tconst dictionary = window.CKEDITOR_TRANSLATIONS[ language ] || ( window.CKEDITOR_TRANSLATIONS[ language ] = {} );\r\n\r\n\tObject.assign( dictionary, translations );\r\n}\r\n\r\n/**\r\n * Translates string if the translation of the string was previously added to the dictionary.\r\n * See {@link module:utils/translation-service Translation Service}.\r\n * This happens in a multi-language mode were translation modules are created by the bundler.\r\n *\r\n * When no translation is defined in the dictionary or the dictionary doesn't exist this function returns\r\n * the original string without the `'[context: ]'` (happens in development and single-language modes).\r\n *\r\n * In a single-language mode (when values passed to `t()` were replaced with target language strings) the dictionary\r\n * is left empty, so this function will return the original strings always.\r\n *\r\n *\t\ttranslate( 'pl', 'Cancel [context: reject]' );\r\n *\r\n * @param {String} language Target language.\r\n * @param {String} translationKey String that will be translated.\r\n * @returns {String} Translated sentence.\r\n */\r\nexport function translate( language, translationKey ) {\r\n\tconst numberOfLanguages = getNumberOfLanguages();\r\n\r\n\tif ( numberOfLanguages === 1 ) {\r\n\t\t// Override the language to the only supported one.\r\n\t\t// This can't be done in the `Locale` class, because the translations comes after the `Locale` class initialization.\r\n\t\tlanguage = Object.keys( window.CKEDITOR_TRANSLATIONS )[ 0 ];\r\n\t}\r\n\r\n\tif ( numberOfLanguages === 0 || !hasTranslation( language, translationKey ) ) {\r\n\t\treturn translationKey.replace( / \\[context: [^\\]]+\\]$/, '' );\r\n\t}\r\n\r\n\tconst dictionary = window.CKEDITOR_TRANSLATIONS[ language ];\r\n\r\n\t// In case of missing translations we still need to cut off the `[context: ]` parts.\r\n\treturn dictionary[ translationKey ].replace( / \\[context: [^\\]]+\\]$/, '' );\r\n}\r\n\r\n/**\r\n * Clears dictionaries for test purposes.\r\n *\r\n * @protected\r\n */\r\nexport function _clear() {\r\n\twindow.CKEDITOR_TRANSLATIONS = {};\r\n}\r\n\r\n// Checks whether the dictionary exists and translation in that dictionary exists.\r\nfunction hasTranslation( language, translationKey ) {\r\n\treturn (\r\n\t\t( language in window.CKEDITOR_TRANSLATIONS ) &&\r\n\t\t( translationKey in window.CKEDITOR_TRANSLATIONS[ language ] )\r\n\t);\r\n}\r\n\r\nfunction getNumberOfLanguages() {\r\n\treturn Object.keys( window.CKEDITOR_TRANSLATIONS ).length;\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/uid\r\n */\r\n\r\n// A hash table of hex numbers to avoid using toString() in uid() which is costly.\r\n// [ '00', '01', '02', ..., 'fe', 'ff' ]\r\nconst HEX_NUMBERS = new Array( 256 ).fill()\r\n\t.map( ( val, index ) => ( '0' + ( index ).toString( 16 ) ).slice( -2 ) );\r\n\r\n/**\r\n * Returns a unique id. The id starts with an \"e\" character and a randomly generated string of\r\n * 32 alphanumeric characters.\r\n *\r\n * **Note**: The characters the unique id is built from correspond to the hex number notation\r\n * (from \"0\" to \"9\", from \"a\" to \"f\"). In other words, each id corresponds to an \"e\" followed\r\n * by 16 8-bit numbers next to each other.\r\n *\r\n * @returns {String} An unique id string.\r\n */\r\nexport default function uid() {\r\n\t// Let's create some positive random 32bit integers first.\r\n\t//\r\n\t// 1. Math.random() is a float between 0 and 1.\r\n\t// 2. 0x100000000 is 2^32 = 4294967296.\r\n\t// 3. >>> 0 enforces integer (in JS all numbers are floating point).\r\n\t//\r\n\t// For instance:\r\n\t//\t\tMath.random() * 0x100000000 = 3366450031.853859\r\n\t// but\r\n\t//\t\tMath.random() * 0x100000000 >>> 0 = 3366450031.\r\n\tconst r1 = Math.random() * 0x100000000 >>> 0;\r\n\tconst r2 = Math.random() * 0x100000000 >>> 0;\r\n\tconst r3 = Math.random() * 0x100000000 >>> 0;\r\n\tconst r4 = Math.random() * 0x100000000 >>> 0;\r\n\r\n\t// Make sure that id does not start with number.\r\n\treturn 'e' +\r\n\t\tHEX_NUMBERS[ r1 >> 0 & 0xFF ] +\r\n\t\tHEX_NUMBERS[ r1 >> 8 & 0xFF ] +\r\n\t\tHEX_NUMBERS[ r1 >> 16 & 0xFF ] +\r\n\t\tHEX_NUMBERS[ r1 >> 24 & 0xFF ] +\r\n\t\tHEX_NUMBERS[ r2 >> 0 & 0xFF ] +\r\n\t\tHEX_NUMBERS[ r2 >> 8 & 0xFF ] +\r\n\t\tHEX_NUMBERS[ r2 >> 16 & 0xFF ] +\r\n\t\tHEX_NUMBERS[ r2 >> 24 & 0xFF ] +\r\n\t\tHEX_NUMBERS[ r3 >> 0 & 0xFF ] +\r\n\t\tHEX_NUMBERS[ r3 >> 8 & 0xFF ] +\r\n\t\tHEX_NUMBERS[ r3 >> 16 & 0xFF ] +\r\n\t\tHEX_NUMBERS[ r3 >> 24 & 0xFF ] +\r\n\t\tHEX_NUMBERS[ r4 >> 0 & 0xFF ] +\r\n\t\tHEX_NUMBERS[ r4 >> 8 & 0xFF ] +\r\n\t\tHEX_NUMBERS[ r4 >> 16 & 0xFF ] +\r\n\t\tHEX_NUMBERS[ r4 >> 24 & 0xFF ];\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * Set of utils to handle unicode characters.\r\n *\r\n * @module utils/unicode\r\n */\r\n\r\n/**\r\n * Checks whether given `character` is a combining mark.\r\n *\r\n * @param {String} character Character to check.\r\n * @returns {Boolean}\r\n */\r\nexport function isCombiningMark( character ) {\r\n\treturn !!character && character.length == 1 && /[\\u0300-\\u036f\\u1ab0-\\u1aff\\u1dc0-\\u1dff\\u20d0-\\u20ff\\ufe20-\\ufe2f]/.test( character );\r\n}\r\n\r\n/**\r\n * Checks whether given `character` is a high half of surrogate pair.\r\n *\r\n * Using UTF-16 terminology, a surrogate pair denotes UTF-16 character using two UTF-8 characters. The surrogate pair\r\n * consist of high surrogate pair character followed by low surrogate pair character.\r\n *\r\n * @param {String} character Character to check.\r\n * @returns {Boolean}\r\n */\r\nexport function isHighSurrogateHalf( character ) {\r\n\treturn !!character && character.length == 1 && /[\\ud800-\\udbff]/.test( character );\r\n}\r\n\r\n/**\r\n * Checks whether given `character` is a low half of surrogate pair.\r\n *\r\n * Using UTF-16 terminology, a surrogate pair denotes UTF-16 character using two UTF-8 characters. The surrogate pair\r\n * consist of high surrogate pair character followed by low surrogate pair character.\r\n *\r\n * @param {String} character Character to check.\r\n * @returns {Boolean}\r\n */\r\nexport function isLowSurrogateHalf( character ) {\r\n\treturn !!character && character.length == 1 && /[\\udc00-\\udfff]/.test( character );\r\n}\r\n\r\n/**\r\n * Checks whether given offset in a string is inside a surrogate pair (between two surrogate halves).\r\n *\r\n * @param {String} string String to check.\r\n * @param {Number} offset Offset to check.\r\n * @returns {Boolean}\r\n */\r\nexport function isInsideSurrogatePair( string, offset ) {\r\n\treturn isHighSurrogateHalf( string.charAt( offset - 1 ) ) && isLowSurrogateHalf( string.charAt( offset ) );\r\n}\r\n\r\n/**\r\n * Checks whether given offset in a string is between base character and combining mark or between two combining marks.\r\n *\r\n * @param {String} string String to check.\r\n * @param {Number} offset Offset to check.\r\n * @returns {Boolean}\r\n */\r\nexport function isInsideCombinedSymbol( string, offset ) {\r\n\treturn isCombiningMark( string.charAt( offset ) );\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n/**\r\n * @module utils/version\r\n */\r\n\r\n/* globals window, global */\r\n\r\nimport CKEditorError from './ckeditorerror';\r\n\r\nconst version = '18.0.0';\r\n\r\n/* istanbul ignore next */\r\nconst windowOrGlobal = typeof window === 'object' ? window : global;\r\n\r\n/* istanbul ignore next */\r\nif ( windowOrGlobal.CKEDITOR_VERSION ) {\r\n\t/**\r\n\t * This error is thrown when due to a mistake in how CKEditor 5 was installed or initialized, some\r\n\t * of its modules were duplicated (evaluated and executed twice). Module duplication leads to inevitable runtime\r\n\t * errors.\r\n\t *\r\n\t * There are many situations in which some modules can be loaded twice. In the worst case scenario,\r\n\t * you may need to check your project for each of these issues and fix them all.\r\n\t *\r\n\t * # Trying to add a plugin to an existing build\r\n\t *\r\n\t * If you import an existing CKEditor 5 build and a plugin like this:\r\n\t *\r\n\t *\t\timport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\t *\t\timport Highlight from '@ckeditor/ckeditor5-highlight/src/highlight';\r\n\t *\r\n\t * Then your project loads some CKEditor 5 packages twice. How does it happen?\r\n\t *\r\n\t * The build package contains a file which is already compiled with webpack. This means\r\n\t * that it contains all the necessary code from e.g. `@ckeditor/ckeditor5-engine` and `@ckeditor/ckeditor5-utils`.\r\n\t *\r\n\t * However, the `Highlight` plugin imports some of the modules from these packages, too. If you ask webpack to\r\n\t * build such a project, you will end up with the modules being included (and run) twice &mdash; first, because they are\r\n\t * included inside the build package, and second, because they are required by the `Highlight` plugin.\r\n\t *\r\n\t * Therefore, **you must never add plugins to an existing build** unless your plugin has no dependencies.\r\n\t *\r\n\t * Adding plugins to a build is done by taking the source version of this build (so, before it was built with webpack)\r\n\t * and adding plugins there. In this situation, webpack will know that it only needs to load each plugin once.\r\n\t *\r\n\t * Read more in the {@glink builds/guides/integration/installing-plugins \"Installing plugins\"} guide.\r\n\t *\r\n\t * # Confused an editor build with an editor implementation\r\n\t *\r\n\t * This scenario is very similar to the previous one, but has a different origin.\r\n\t *\r\n\t * Let's assume that you wanted to use CKEditor 5 from source, as explained in the\r\n\t * {@glink builds/guides/integration/advanced-setup#scenario-2-building-from-source \"Building from source\"} section\r\n\t * or in the {@glink framework/guides/quick-start \"Quick start\"} guide of CKEditor 5 Framework.\r\n\t *\r\n\t * The correct way to do so is to import an editor and plugins and run them together like this:\r\n\t *\r\n\t *\t\timport ClassicEditor from '@ckeditor/ckeditor5-editor-classic/src/classiceditor';\r\n\t *\t\timport Essentials from '@ckeditor/ckeditor5-essentials/src/essentials';\r\n\t *\t\timport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\r\n\t *\t\timport Bold from '@ckeditor/ckeditor5-basic-styles/src/bold';\r\n\t *\t\timport Italic from '@ckeditor/ckeditor5-basic-styles/src/italic';\r\n\t *\r\n\t *\t\tClassicEditor\r\n\t *\t\t\t.create( document.querySelector( '#editor' ), {\r\n\t *\t\t\t\tplugins: [ Essentials, Paragraph, Bold, Italic ],\r\n\t *\t\t\t\ttoolbar: [ 'bold', 'italic' ]\r\n\t *\t\t\t} )\r\n\t *\t\t\t.then( editor => {\r\n\t *\t\t\t\tconsole.log( 'Editor was initialized', editor );\r\n\t *\t\t\t} )\r\n\t *\t\t\t.catch( error => {\r\n\t *\t\t\t\tconsole.error( error.stack );\r\n\t *\t\t\t} );\r\n\t *\r\n\t * However, you might have mistakenly imported a build instead of the source `ClassicEditor`. In this case\r\n\t * your imports will look like this:\r\n\t *\r\n\t *\t\timport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\t *\t\timport Essentials from '@ckeditor/ckeditor5-essentials/src/essentials';\r\n\t *\t\timport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\r\n\t *\t\timport Bold from '@ckeditor/ckeditor5-basic-styles/src/bold';\r\n\t *\t\timport Italic from '@ckeditor/ckeditor5-basic-styles/src/italic';\r\n\t *\r\n\t * This creates the same situation as in the previous section because you use a build together with source plugins.\r\n\t *\r\n\t * Remember: `@ckeditor/ckeditor5-build-*` packages contain editor builds and `@ckeditor/ckeditor5-editor-*` contain source editors.\r\n\t *\r\n\t * # Loading two or more builds on one page\r\n\t *\r\n\t * If you use CKEditor 5 builds, you might have loaded two (or more) `ckeditor.js` files on one web page.\r\n\t * Check your web page for duplicated `<script>` elements or make sure your page builder/bundler includes CKEditor only once.\r\n\t *\r\n\t * If you want to use two different types of editors at once, see the\r\n\t * {@glink builds/guides/integration/advanced-setup#scenario-3-using-two-different-editors \"Using two different editors\"}\r\n\t * section.\r\n\t *\r\n\t * # Using outdated packages\r\n\t *\r\n\t * Building CKEditor 5 from source requires using multiple npm packages. These packages have their dependencies\r\n\t * to other packages. If you use the latest version of, for example, `@ckeditor/ckeditor5-editor-classic` with\r\n\t * an outdated version of `@ckeditor/ckeditor5-image`, npm or yarn will need to install two different versions of\r\n\t * `@ckeditor/ckeditor5-core` because `@ckeditor/ckeditor5-editor-classic` and `@ckeditor/ckeditor5-image` may require\r\n\t * different versions of the core package.\r\n\t *\r\n\t * The solution to this issue is to update all packages to their latest version. We recommend\r\n\t * using tools like [`node-check-updates`](https://www.npmjs.com/package/npm-check-updates) which simplify this process.\r\n\t *\r\n\t * # Conflicting version of dependencies\r\n\t *\r\n\t * This is a special case of the previous scenario. If you use CKEditor 5 with some third-party plugins,\r\n\t * it may happen that even if you use the latest versions of the official packages and the latest version of\r\n\t * these third-party packages, there will be a conflict between some of their dependencies.\r\n\t *\r\n\t * Such a problem can be resolved by either downgrading CKEditor 5 packages (which we do not recommend) or\r\n\t * asking the author of the third-party package to upgrade its depdendencies (or forking their project and doing this yourself).\r\n\t *\r\n\t * # Packages were duplicated in `node_modules`\r\n\t *\r\n\t * In some situations, especially when calling `npm install` multiple times, it may happen\r\n\t * that npm will not correctly \"deduplicate\" packages.\r\n\t *\r\n\t * Normally, npm deduplicates all packages so, for example, `@ckeditor/ckeditor5-core` is installed only once in `node_modules/`.\r\n\t * However, it is known to fail to do so from time to time.\r\n\t *\r\n\t * We recommend checking if any of the steps listed below help:\r\n\t *\r\n\t * * `rm -rf node_modules && npm install` to make sure you have a clean `node_modules/` directory. This step\r\n\t * is known to help in most cases.\r\n\t * * If you use `yarn.lock` or `package-lock.json`, remove it before `npm install`.\r\n\t * * Check whether all CKEditor 5 packages are up to date and reinstall them\r\n\t * if you changed anything (`rm -rf node_modules && npm install`).\r\n\t *\r\n\t * If all packages are correct and compatible with each other, the steps above are known to help. If not, you may\r\n\t * try to check with `npm ls` how many times packages like `@ckeditor/ckeditor5-core`, `@ckeditor/ckeditor5-engine` and\r\n\t *`@ckeditor/ckeditor5-utils` are installed. If more than once, verify which package causes that.\r\n\t *\r\n\t * @error ckeditor-duplicated-modules\r\n\t */\r\n\tthrow new CKEditorError(\r\n\t\t'ckeditor-duplicated-modules: Some CKEditor 5 modules are duplicated.',\r\n\t\tnull\r\n\t);\r\n} else {\r\n\twindowOrGlobal.CKEDITOR_VERSION = version;\r\n}\r\n","import getNative from './_getNative.js';\r\nimport root from './_root.js';\r\n\r\n/* Built-in method references that are verified to be native. */\r\nvar DataView = getNative(root, 'DataView');\r\n\r\nexport default DataView;\r\n","import hashClear from './_hashClear.js';\r\nimport hashDelete from './_hashDelete.js';\r\nimport hashGet from './_hashGet.js';\r\nimport hashHas from './_hashHas.js';\r\nimport hashSet from './_hashSet.js';\r\n\r\n/**\r\n * Creates a hash object.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {Array} [entries] The key-value pairs to cache.\r\n */\r\nfunction Hash(entries) {\r\n  var index = -1,\r\n      length = entries == null ? 0 : entries.length;\r\n\r\n  this.clear();\r\n  while (++index < length) {\r\n    var entry = entries[index];\r\n    this.set(entry[0], entry[1]);\r\n  }\r\n}\r\n\r\n// Add methods to `Hash`.\r\nHash.prototype.clear = hashClear;\r\nHash.prototype['delete'] = hashDelete;\r\nHash.prototype.get = hashGet;\r\nHash.prototype.has = hashHas;\r\nHash.prototype.set = hashSet;\r\n\r\nexport default Hash;\r\n","import baseCreate from './_baseCreate.js';\r\nimport baseLodash from './_baseLodash.js';\r\n\r\n/** Used as references for the maximum length and index of an array. */\r\nvar MAX_ARRAY_LENGTH = 4294967295;\r\n\r\n/**\r\n * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {*} value The value to wrap.\r\n */\r\nfunction LazyWrapper(value) {\r\n  this.__wrapped__ = value;\r\n  this.__actions__ = [];\r\n  this.__dir__ = 1;\r\n  this.__filtered__ = false;\r\n  this.__iteratees__ = [];\r\n  this.__takeCount__ = MAX_ARRAY_LENGTH;\r\n  this.__views__ = [];\r\n}\r\n\r\n// Ensure `LazyWrapper` is an instance of `baseLodash`.\r\nLazyWrapper.prototype = baseCreate(baseLodash.prototype);\r\nLazyWrapper.prototype.constructor = LazyWrapper;\r\n\r\nexport default LazyWrapper;\r\n","import listCacheClear from './_listCacheClear.js';\r\nimport listCacheDelete from './_listCacheDelete.js';\r\nimport listCacheGet from './_listCacheGet.js';\r\nimport listCacheHas from './_listCacheHas.js';\r\nimport listCacheSet from './_listCacheSet.js';\r\n\r\n/**\r\n * Creates an list cache object.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {Array} [entries] The key-value pairs to cache.\r\n */\r\nfunction ListCache(entries) {\r\n  var index = -1,\r\n      length = entries == null ? 0 : entries.length;\r\n\r\n  this.clear();\r\n  while (++index < length) {\r\n    var entry = entries[index];\r\n    this.set(entry[0], entry[1]);\r\n  }\r\n}\r\n\r\n// Add methods to `ListCache`.\r\nListCache.prototype.clear = listCacheClear;\r\nListCache.prototype['delete'] = listCacheDelete;\r\nListCache.prototype.get = listCacheGet;\r\nListCache.prototype.has = listCacheHas;\r\nListCache.prototype.set = listCacheSet;\r\n\r\nexport default ListCache;\r\n","import baseCreate from './_baseCreate.js';\r\nimport baseLodash from './_baseLodash.js';\r\n\r\n/**\r\n * The base constructor for creating `lodash` wrapper objects.\r\n *\r\n * @private\r\n * @param {*} value The value to wrap.\r\n * @param {boolean} [chainAll] Enable explicit method chain sequences.\r\n */\r\nfunction LodashWrapper(value, chainAll) {\r\n  this.__wrapped__ = value;\r\n  this.__actions__ = [];\r\n  this.__chain__ = !!chainAll;\r\n  this.__index__ = 0;\r\n  this.__values__ = undefined;\r\n}\r\n\r\nLodashWrapper.prototype = baseCreate(baseLodash.prototype);\r\nLodashWrapper.prototype.constructor = LodashWrapper;\r\n\r\nexport default LodashWrapper;\r\n","import getNative from './_getNative.js';\r\nimport root from './_root.js';\r\n\r\n/* Built-in method references that are verified to be native. */\r\nvar Map = getNative(root, 'Map');\r\n\r\nexport default Map;\r\n","import mapCacheClear from './_mapCacheClear.js';\r\nimport mapCacheDelete from './_mapCacheDelete.js';\r\nimport mapCacheGet from './_mapCacheGet.js';\r\nimport mapCacheHas from './_mapCacheHas.js';\r\nimport mapCacheSet from './_mapCacheSet.js';\r\n\r\n/**\r\n * Creates a map cache object to store key-value pairs.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {Array} [entries] The key-value pairs to cache.\r\n */\r\nfunction MapCache(entries) {\r\n  var index = -1,\r\n      length = entries == null ? 0 : entries.length;\r\n\r\n  this.clear();\r\n  while (++index < length) {\r\n    var entry = entries[index];\r\n    this.set(entry[0], entry[1]);\r\n  }\r\n}\r\n\r\n// Add methods to `MapCache`.\r\nMapCache.prototype.clear = mapCacheClear;\r\nMapCache.prototype['delete'] = mapCacheDelete;\r\nMapCache.prototype.get = mapCacheGet;\r\nMapCache.prototype.has = mapCacheHas;\r\nMapCache.prototype.set = mapCacheSet;\r\n\r\nexport default MapCache;\r\n","import getNative from './_getNative.js';\r\nimport root from './_root.js';\r\n\r\n/* Built-in method references that are verified to be native. */\r\nvar Promise = getNative(root, 'Promise');\r\n\r\nexport default Promise;\r\n","import getNative from './_getNative.js';\r\nimport root from './_root.js';\r\n\r\n/* Built-in method references that are verified to be native. */\r\nvar Set = getNative(root, 'Set');\r\n\r\nexport default Set;\r\n","import MapCache from './_MapCache.js';\r\nimport setCacheAdd from './_setCacheAdd.js';\r\nimport setCacheHas from './_setCacheHas.js';\r\n\r\n/**\r\n *\r\n * Creates an array cache object to store unique values.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {Array} [values] The values to cache.\r\n */\r\nfunction SetCache(values) {\r\n  var index = -1,\r\n      length = values == null ? 0 : values.length;\r\n\r\n  this.__data__ = new MapCache;\r\n  while (++index < length) {\r\n    this.add(values[index]);\r\n  }\r\n}\r\n\r\n// Add methods to `SetCache`.\r\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\r\nSetCache.prototype.has = setCacheHas;\r\n\r\nexport default SetCache;\r\n","import ListCache from './_ListCache.js';\r\nimport stackClear from './_stackClear.js';\r\nimport stackDelete from './_stackDelete.js';\r\nimport stackGet from './_stackGet.js';\r\nimport stackHas from './_stackHas.js';\r\nimport stackSet from './_stackSet.js';\r\n\r\n/**\r\n * Creates a stack cache object to store key-value pairs.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {Array} [entries] The key-value pairs to cache.\r\n */\r\nfunction Stack(entries) {\r\n  var data = this.__data__ = new ListCache(entries);\r\n  this.size = data.size;\r\n}\r\n\r\n// Add methods to `Stack`.\r\nStack.prototype.clear = stackClear;\r\nStack.prototype['delete'] = stackDelete;\r\nStack.prototype.get = stackGet;\r\nStack.prototype.has = stackHas;\r\nStack.prototype.set = stackSet;\r\n\r\nexport default Stack;\r\n","import root from './_root.js';\r\n\r\n/** Built-in value references. */\r\nvar Symbol = root.Symbol;\r\n\r\nexport default Symbol;\r\n","import root from './_root.js';\r\n\r\n/** Built-in value references. */\r\nvar Uint8Array = root.Uint8Array;\r\n\r\nexport default Uint8Array;\r\n","import getNative from './_getNative.js';\r\nimport root from './_root.js';\r\n\r\n/* Built-in method references that are verified to be native. */\r\nvar WeakMap = getNative(root, 'WeakMap');\r\n\r\nexport default WeakMap;\r\n","/**\r\n * A faster alternative to `Function#apply`, this function invokes `func`\r\n * with the `this` binding of `thisArg` and the arguments of `args`.\r\n *\r\n * @private\r\n * @param {Function} func The function to invoke.\r\n * @param {*} thisArg The `this` binding of `func`.\r\n * @param {Array} args The arguments to invoke `func` with.\r\n * @returns {*} Returns the result of `func`.\r\n */\r\nfunction apply(func, thisArg, args) {\r\n  switch (args.length) {\r\n    case 0: return func.call(thisArg);\r\n    case 1: return func.call(thisArg, args[0]);\r\n    case 2: return func.call(thisArg, args[0], args[1]);\r\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\r\n  }\r\n  return func.apply(thisArg, args);\r\n}\r\n\r\nexport default apply;\r\n","/**\r\n * A specialized version of `baseAggregator` for arrays.\r\n *\r\n * @private\r\n * @param {Array} [array] The array to iterate over.\r\n * @param {Function} setter The function to set `accumulator` values.\r\n * @param {Function} iteratee The iteratee to transform keys.\r\n * @param {Object} accumulator The initial aggregated object.\r\n * @returns {Function} Returns `accumulator`.\r\n */\r\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\r\n  var index = -1,\r\n      length = array == null ? 0 : array.length;\r\n\r\n  while (++index < length) {\r\n    var value = array[index];\r\n    setter(accumulator, value, iteratee(value), array);\r\n  }\r\n  return accumulator;\r\n}\r\n\r\nexport default arrayAggregator;\r\n","/**\r\n * A specialized version of `_.forEach` for arrays without support for\r\n * iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array} [array] The array to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @returns {Array} Returns `array`.\r\n */\r\nfunction arrayEach(array, iteratee) {\r\n  var index = -1,\r\n      length = array == null ? 0 : array.length;\r\n\r\n  while (++index < length) {\r\n    if (iteratee(array[index], index, array) === false) {\r\n      break;\r\n    }\r\n  }\r\n  return array;\r\n}\r\n\r\nexport default arrayEach;\r\n","/**\r\n * A specialized version of `_.forEachRight` for arrays without support for\r\n * iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array} [array] The array to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @returns {Array} Returns `array`.\r\n */\r\nfunction arrayEachRight(array, iteratee) {\r\n  var length = array == null ? 0 : array.length;\r\n\r\n  while (length--) {\r\n    if (iteratee(array[length], length, array) === false) {\r\n      break;\r\n    }\r\n  }\r\n  return array;\r\n}\r\n\r\nexport default arrayEachRight;\r\n","/**\r\n * A specialized version of `_.every` for arrays without support for\r\n * iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array} [array] The array to iterate over.\r\n * @param {Function} predicate The function invoked per iteration.\r\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\r\n *  else `false`.\r\n */\r\nfunction arrayEvery(array, predicate) {\r\n  var index = -1,\r\n      length = array == null ? 0 : array.length;\r\n\r\n  while (++index < length) {\r\n    if (!predicate(array[index], index, array)) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nexport default arrayEvery;\r\n","/**\r\n * A specialized version of `_.filter` for arrays without support for\r\n * iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array} [array] The array to iterate over.\r\n * @param {Function} predicate The function invoked per iteration.\r\n * @returns {Array} Returns the new filtered array.\r\n */\r\nfunction arrayFilter(array, predicate) {\r\n  var index = -1,\r\n      length = array == null ? 0 : array.length,\r\n      resIndex = 0,\r\n      result = [];\r\n\r\n  while (++index < length) {\r\n    var value = array[index];\r\n    if (predicate(value, index, array)) {\r\n      result[resIndex++] = value;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default arrayFilter;\r\n","import baseIndexOf from './_baseIndexOf.js';\r\n\r\n/**\r\n * A specialized version of `_.includes` for arrays without support for\r\n * specifying an index to search from.\r\n *\r\n * @private\r\n * @param {Array} [array] The array to inspect.\r\n * @param {*} target The value to search for.\r\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\r\n */\r\nfunction arrayIncludes(array, value) {\r\n  var length = array == null ? 0 : array.length;\r\n  return !!length && baseIndexOf(array, value, 0) > -1;\r\n}\r\n\r\nexport default arrayIncludes;\r\n","/**\r\n * This function is like `arrayIncludes` except that it accepts a comparator.\r\n *\r\n * @private\r\n * @param {Array} [array] The array to inspect.\r\n * @param {*} target The value to search for.\r\n * @param {Function} comparator The comparator invoked per element.\r\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\r\n */\r\nfunction arrayIncludesWith(array, value, comparator) {\r\n  var index = -1,\r\n      length = array == null ? 0 : array.length;\r\n\r\n  while (++index < length) {\r\n    if (comparator(value, array[index])) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nexport default arrayIncludesWith;\r\n","import baseTimes from './_baseTimes.js';\r\nimport isArguments from './isArguments.js';\r\nimport isArray from './isArray.js';\r\nimport isBuffer from './isBuffer.js';\r\nimport isIndex from './_isIndex.js';\r\nimport isTypedArray from './isTypedArray.js';\r\n\r\n/** Used for built-in method references. */\r\nvar objectProto = Object.prototype;\r\n\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n/**\r\n * Creates an array of the enumerable property names of the array-like `value`.\r\n *\r\n * @private\r\n * @param {*} value The value to query.\r\n * @param {boolean} inherited Specify returning inherited property names.\r\n * @returns {Array} Returns the array of property names.\r\n */\r\nfunction arrayLikeKeys(value, inherited) {\r\n  var isArr = isArray(value),\r\n      isArg = !isArr && isArguments(value),\r\n      isBuff = !isArr && !isArg && isBuffer(value),\r\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\r\n      skipIndexes = isArr || isArg || isBuff || isType,\r\n      result = skipIndexes ? baseTimes(value.length, String) : [],\r\n      length = result.length;\r\n\r\n  for (var key in value) {\r\n    if ((inherited || hasOwnProperty.call(value, key)) &&\r\n        !(skipIndexes && (\r\n           // Safari 9 has enumerable `arguments.length` in strict mode.\r\n           key == 'length' ||\r\n           // Node.js 0.10 has enumerable non-index properties on buffers.\r\n           (isBuff && (key == 'offset' || key == 'parent')) ||\r\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\r\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\r\n           // Skip index properties.\r\n           isIndex(key, length)\r\n        ))) {\r\n      result.push(key);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default arrayLikeKeys;\r\n","/**\r\n * A specialized version of `_.map` for arrays without support for iteratee\r\n * shorthands.\r\n *\r\n * @private\r\n * @param {Array} [array] The array to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @returns {Array} Returns the new mapped array.\r\n */\r\nfunction arrayMap(array, iteratee) {\r\n  var index = -1,\r\n      length = array == null ? 0 : array.length,\r\n      result = Array(length);\r\n\r\n  while (++index < length) {\r\n    result[index] = iteratee(array[index], index, array);\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default arrayMap;\r\n","/**\r\n * Appends the elements of `values` to `array`.\r\n *\r\n * @private\r\n * @param {Array} array The array to modify.\r\n * @param {Array} values The values to append.\r\n * @returns {Array} Returns `array`.\r\n */\r\nfunction arrayPush(array, values) {\r\n  var index = -1,\r\n      length = values.length,\r\n      offset = array.length;\r\n\r\n  while (++index < length) {\r\n    array[offset + index] = values[index];\r\n  }\r\n  return array;\r\n}\r\n\r\nexport default arrayPush;\r\n","/**\r\n * A specialized version of `_.reduce` for arrays without support for\r\n * iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array} [array] The array to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @param {*} [accumulator] The initial value.\r\n * @param {boolean} [initAccum] Specify using the first element of `array` as\r\n *  the initial value.\r\n * @returns {*} Returns the accumulated value.\r\n */\r\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\r\n  var index = -1,\r\n      length = array == null ? 0 : array.length;\r\n\r\n  if (initAccum && length) {\r\n    accumulator = array[++index];\r\n  }\r\n  while (++index < length) {\r\n    accumulator = iteratee(accumulator, array[index], index, array);\r\n  }\r\n  return accumulator;\r\n}\r\n\r\nexport default arrayReduce;\r\n","/**\r\n * A specialized version of `_.reduceRight` for arrays without support for\r\n * iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array} [array] The array to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @param {*} [accumulator] The initial value.\r\n * @param {boolean} [initAccum] Specify using the last element of `array` as\r\n *  the initial value.\r\n * @returns {*} Returns the accumulated value.\r\n */\r\nfunction arrayReduceRight(array, iteratee, accumulator, initAccum) {\r\n  var length = array == null ? 0 : array.length;\r\n  if (initAccum && length) {\r\n    accumulator = array[--length];\r\n  }\r\n  while (length--) {\r\n    accumulator = iteratee(accumulator, array[length], length, array);\r\n  }\r\n  return accumulator;\r\n}\r\n\r\nexport default arrayReduceRight;\r\n","import baseRandom from './_baseRandom.js';\r\n\r\n/**\r\n * A specialized version of `_.sample` for arrays.\r\n *\r\n * @private\r\n * @param {Array} array The array to sample.\r\n * @returns {*} Returns the random element.\r\n */\r\nfunction arraySample(array) {\r\n  var length = array.length;\r\n  return length ? array[baseRandom(0, length - 1)] : undefined;\r\n}\r\n\r\nexport default arraySample;\r\n","import baseClamp from './_baseClamp.js';\r\nimport copyArray from './_copyArray.js';\r\nimport shuffleSelf from './_shuffleSelf.js';\r\n\r\n/**\r\n * A specialized version of `_.sampleSize` for arrays.\r\n *\r\n * @private\r\n * @param {Array} array The array to sample.\r\n * @param {number} n The number of elements to sample.\r\n * @returns {Array} Returns the random elements.\r\n */\r\nfunction arraySampleSize(array, n) {\r\n  return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\r\n}\r\n\r\nexport default arraySampleSize;\r\n","import copyArray from './_copyArray.js';\r\nimport shuffleSelf from './_shuffleSelf.js';\r\n\r\n/**\r\n * A specialized version of `_.shuffle` for arrays.\r\n *\r\n * @private\r\n * @param {Array} array The array to shuffle.\r\n * @returns {Array} Returns the new shuffled array.\r\n */\r\nfunction arrayShuffle(array) {\r\n  return shuffleSelf(copyArray(array));\r\n}\r\n\r\nexport default arrayShuffle;\r\n","/**\r\n * A specialized version of `_.some` for arrays without support for iteratee\r\n * shorthands.\r\n *\r\n * @private\r\n * @param {Array} [array] The array to iterate over.\r\n * @param {Function} predicate The function invoked per iteration.\r\n * @returns {boolean} Returns `true` if any element passes the predicate check,\r\n *  else `false`.\r\n */\r\nfunction arraySome(array, predicate) {\r\n  var index = -1,\r\n      length = array == null ? 0 : array.length;\r\n\r\n  while (++index < length) {\r\n    if (predicate(array[index], index, array)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nexport default arraySome;\r\n","import baseProperty from './_baseProperty.js';\r\n\r\n/**\r\n * Gets the size of an ASCII `string`.\r\n *\r\n * @private\r\n * @param {string} string The string inspect.\r\n * @returns {number} Returns the string size.\r\n */\r\nvar asciiSize = baseProperty('length');\r\n\r\nexport default asciiSize;\r\n","/**\r\n * Converts an ASCII `string` to an array.\r\n *\r\n * @private\r\n * @param {string} string The string to convert.\r\n * @returns {Array} Returns the converted array.\r\n */\r\nfunction asciiToArray(string) {\r\n  return string.split('');\r\n}\r\n\r\nexport default asciiToArray;\r\n","/** Used to match words composed of alphanumeric characters. */\r\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\r\n\r\n/**\r\n * Splits an ASCII `string` into an array of its words.\r\n *\r\n * @private\r\n * @param {string} The string to inspect.\r\n * @returns {Array} Returns the words of `string`.\r\n */\r\nfunction asciiWords(string) {\r\n  return string.match(reAsciiWord) || [];\r\n}\r\n\r\nexport default asciiWords;\r\n","import baseAssignValue from './_baseAssignValue.js';\r\nimport eq from './eq.js';\r\n\r\n/**\r\n * This function is like `assignValue` except that it doesn't assign\r\n * `undefined` values.\r\n *\r\n * @private\r\n * @param {Object} object The object to modify.\r\n * @param {string} key The key of the property to assign.\r\n * @param {*} value The value to assign.\r\n */\r\nfunction assignMergeValue(object, key, value) {\r\n  if ((value !== undefined && !eq(object[key], value)) ||\r\n      (value === undefined && !(key in object))) {\r\n    baseAssignValue(object, key, value);\r\n  }\r\n}\r\n\r\nexport default assignMergeValue;\r\n","import baseAssignValue from './_baseAssignValue.js';\r\nimport eq from './eq.js';\r\n\r\n/** Used for built-in method references. */\r\nvar objectProto = Object.prototype;\r\n\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n/**\r\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\r\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n * for equality comparisons.\r\n *\r\n * @private\r\n * @param {Object} object The object to modify.\r\n * @param {string} key The key of the property to assign.\r\n * @param {*} value The value to assign.\r\n */\r\nfunction assignValue(object, key, value) {\r\n  var objValue = object[key];\r\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\r\n      (value === undefined && !(key in object))) {\r\n    baseAssignValue(object, key, value);\r\n  }\r\n}\r\n\r\nexport default assignValue;\r\n","import eq from './eq.js';\r\n\r\n/**\r\n * Gets the index at which the `key` is found in `array` of key-value pairs.\r\n *\r\n * @private\r\n * @param {Array} array The array to inspect.\r\n * @param {*} key The key to search for.\r\n * @returns {number} Returns the index of the matched value, else `-1`.\r\n */\r\nfunction assocIndexOf(array, key) {\r\n  var length = array.length;\r\n  while (length--) {\r\n    if (eq(array[length][0], key)) {\r\n      return length;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\nexport default assocIndexOf;\r\n","import baseEach from './_baseEach.js';\r\n\r\n/**\r\n * Aggregates elements of `collection` on `accumulator` with keys transformed\r\n * by `iteratee` and values set by `setter`.\r\n *\r\n * @private\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} setter The function to set `accumulator` values.\r\n * @param {Function} iteratee The iteratee to transform keys.\r\n * @param {Object} accumulator The initial aggregated object.\r\n * @returns {Function} Returns `accumulator`.\r\n */\r\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\r\n  baseEach(collection, function(value, key, collection) {\r\n    setter(accumulator, value, iteratee(value), collection);\r\n  });\r\n  return accumulator;\r\n}\r\n\r\nexport default baseAggregator;\r\n","import copyObject from './_copyObject.js';\r\nimport keys from './keys.js';\r\n\r\n/**\r\n * The base implementation of `_.assign` without support for multiple sources\r\n * or `customizer` functions.\r\n *\r\n * @private\r\n * @param {Object} object The destination object.\r\n * @param {Object} source The source object.\r\n * @returns {Object} Returns `object`.\r\n */\r\nfunction baseAssign(object, source) {\r\n  return object && copyObject(source, keys(source), object);\r\n}\r\n\r\nexport default baseAssign;\r\n","import copyObject from './_copyObject.js';\r\nimport keysIn from './keysIn.js';\r\n\r\n/**\r\n * The base implementation of `_.assignIn` without support for multiple sources\r\n * or `customizer` functions.\r\n *\r\n * @private\r\n * @param {Object} object The destination object.\r\n * @param {Object} source The source object.\r\n * @returns {Object} Returns `object`.\r\n */\r\nfunction baseAssignIn(object, source) {\r\n  return object && copyObject(source, keysIn(source), object);\r\n}\r\n\r\nexport default baseAssignIn;\r\n","import defineProperty from './_defineProperty.js';\r\n\r\n/**\r\n * The base implementation of `assignValue` and `assignMergeValue` without\r\n * value checks.\r\n *\r\n * @private\r\n * @param {Object} object The object to modify.\r\n * @param {string} key The key of the property to assign.\r\n * @param {*} value The value to assign.\r\n */\r\nfunction baseAssignValue(object, key, value) {\r\n  if (key == '__proto__' && defineProperty) {\r\n    defineProperty(object, key, {\r\n      'configurable': true,\r\n      'enumerable': true,\r\n      'value': value,\r\n      'writable': true\r\n    });\r\n  } else {\r\n    object[key] = value;\r\n  }\r\n}\r\n\r\nexport default baseAssignValue;\r\n","import get from './get.js';\r\n\r\n/**\r\n * The base implementation of `_.at` without support for individual paths.\r\n *\r\n * @private\r\n * @param {Object} object The object to iterate over.\r\n * @param {string[]} paths The property paths to pick.\r\n * @returns {Array} Returns the picked elements.\r\n */\r\nfunction baseAt(object, paths) {\r\n  var index = -1,\r\n      length = paths.length,\r\n      result = Array(length),\r\n      skip = object == null;\r\n\r\n  while (++index < length) {\r\n    result[index] = skip ? undefined : get(object, paths[index]);\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default baseAt;\r\n","/**\r\n * The base implementation of `_.clamp` which doesn't coerce arguments.\r\n *\r\n * @private\r\n * @param {number} number The number to clamp.\r\n * @param {number} [lower] The lower bound.\r\n * @param {number} upper The upper bound.\r\n * @returns {number} Returns the clamped number.\r\n */\r\nfunction baseClamp(number, lower, upper) {\r\n  if (number === number) {\r\n    if (upper !== undefined) {\r\n      number = number <= upper ? number : upper;\r\n    }\r\n    if (lower !== undefined) {\r\n      number = number >= lower ? number : lower;\r\n    }\r\n  }\r\n  return number;\r\n}\r\n\r\nexport default baseClamp;\r\n","import Stack from './_Stack.js';\r\nimport arrayEach from './_arrayEach.js';\r\nimport assignValue from './_assignValue.js';\r\nimport baseAssign from './_baseAssign.js';\r\nimport baseAssignIn from './_baseAssignIn.js';\r\nimport cloneBuffer from './_cloneBuffer.js';\r\nimport copyArray from './_copyArray.js';\r\nimport copySymbols from './_copySymbols.js';\r\nimport copySymbolsIn from './_copySymbolsIn.js';\r\nimport getAllKeys from './_getAllKeys.js';\r\nimport getAllKeysIn from './_getAllKeysIn.js';\r\nimport getTag from './_getTag.js';\r\nimport initCloneArray from './_initCloneArray.js';\r\nimport initCloneByTag from './_initCloneByTag.js';\r\nimport initCloneObject from './_initCloneObject.js';\r\nimport isArray from './isArray.js';\r\nimport isBuffer from './isBuffer.js';\r\nimport isMap from './isMap.js';\r\nimport isObject from './isObject.js';\r\nimport isSet from './isSet.js';\r\nimport keys from './keys.js';\r\n\r\n/** Used to compose bitmasks for cloning. */\r\nvar CLONE_DEEP_FLAG = 1,\r\n    CLONE_FLAT_FLAG = 2,\r\n    CLONE_SYMBOLS_FLAG = 4;\r\n\r\n/** `Object#toString` result references. */\r\nvar argsTag = '[object Arguments]',\r\n    arrayTag = '[object Array]',\r\n    boolTag = '[object Boolean]',\r\n    dateTag = '[object Date]',\r\n    errorTag = '[object Error]',\r\n    funcTag = '[object Function]',\r\n    genTag = '[object GeneratorFunction]',\r\n    mapTag = '[object Map]',\r\n    numberTag = '[object Number]',\r\n    objectTag = '[object Object]',\r\n    regexpTag = '[object RegExp]',\r\n    setTag = '[object Set]',\r\n    stringTag = '[object String]',\r\n    symbolTag = '[object Symbol]',\r\n    weakMapTag = '[object WeakMap]';\r\n\r\nvar arrayBufferTag = '[object ArrayBuffer]',\r\n    dataViewTag = '[object DataView]',\r\n    float32Tag = '[object Float32Array]',\r\n    float64Tag = '[object Float64Array]',\r\n    int8Tag = '[object Int8Array]',\r\n    int16Tag = '[object Int16Array]',\r\n    int32Tag = '[object Int32Array]',\r\n    uint8Tag = '[object Uint8Array]',\r\n    uint8ClampedTag = '[object Uint8ClampedArray]',\r\n    uint16Tag = '[object Uint16Array]',\r\n    uint32Tag = '[object Uint32Array]';\r\n\r\n/** Used to identify `toStringTag` values supported by `_.clone`. */\r\nvar cloneableTags = {};\r\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\r\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\r\ncloneableTags[boolTag] = cloneableTags[dateTag] =\r\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\r\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\r\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\r\ncloneableTags[numberTag] = cloneableTags[objectTag] =\r\ncloneableTags[regexpTag] = cloneableTags[setTag] =\r\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\r\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\r\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\r\ncloneableTags[errorTag] = cloneableTags[funcTag] =\r\ncloneableTags[weakMapTag] = false;\r\n\r\n/**\r\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\r\n * traversed objects.\r\n *\r\n * @private\r\n * @param {*} value The value to clone.\r\n * @param {boolean} bitmask The bitmask flags.\r\n *  1 - Deep clone\r\n *  2 - Flatten inherited properties\r\n *  4 - Clone symbols\r\n * @param {Function} [customizer] The function to customize cloning.\r\n * @param {string} [key] The key of `value`.\r\n * @param {Object} [object] The parent object of `value`.\r\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\r\n * @returns {*} Returns the cloned value.\r\n */\r\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\r\n  var result,\r\n      isDeep = bitmask & CLONE_DEEP_FLAG,\r\n      isFlat = bitmask & CLONE_FLAT_FLAG,\r\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\r\n\r\n  if (customizer) {\r\n    result = object ? customizer(value, key, object, stack) : customizer(value);\r\n  }\r\n  if (result !== undefined) {\r\n    return result;\r\n  }\r\n  if (!isObject(value)) {\r\n    return value;\r\n  }\r\n  var isArr = isArray(value);\r\n  if (isArr) {\r\n    result = initCloneArray(value);\r\n    if (!isDeep) {\r\n      return copyArray(value, result);\r\n    }\r\n  } else {\r\n    var tag = getTag(value),\r\n        isFunc = tag == funcTag || tag == genTag;\r\n\r\n    if (isBuffer(value)) {\r\n      return cloneBuffer(value, isDeep);\r\n    }\r\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\r\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\r\n      if (!isDeep) {\r\n        return isFlat\r\n          ? copySymbolsIn(value, baseAssignIn(result, value))\r\n          : copySymbols(value, baseAssign(result, value));\r\n      }\r\n    } else {\r\n      if (!cloneableTags[tag]) {\r\n        return object ? value : {};\r\n      }\r\n      result = initCloneByTag(value, tag, isDeep);\r\n    }\r\n  }\r\n  // Check for circular references and return its corresponding clone.\r\n  stack || (stack = new Stack);\r\n  var stacked = stack.get(value);\r\n  if (stacked) {\r\n    return stacked;\r\n  }\r\n  stack.set(value, result);\r\n\r\n  if (isSet(value)) {\r\n    value.forEach(function(subValue) {\r\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\r\n    });\r\n  } else if (isMap(value)) {\r\n    value.forEach(function(subValue, key) {\r\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\r\n    });\r\n  }\r\n\r\n  var keysFunc = isFull\r\n    ? (isFlat ? getAllKeysIn : getAllKeys)\r\n    : (isFlat ? keysIn : keys);\r\n\r\n  var props = isArr ? undefined : keysFunc(value);\r\n  arrayEach(props || value, function(subValue, key) {\r\n    if (props) {\r\n      key = subValue;\r\n      subValue = value[key];\r\n    }\r\n    // Recursively populate clone (susceptible to call stack limits).\r\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\r\n  });\r\n  return result;\r\n}\r\n\r\nexport default baseClone;\r\n","import baseConformsTo from './_baseConformsTo.js';\r\nimport keys from './keys.js';\r\n\r\n/**\r\n * The base implementation of `_.conforms` which doesn't clone `source`.\r\n *\r\n * @private\r\n * @param {Object} source The object of property predicates to conform to.\r\n * @returns {Function} Returns the new spec function.\r\n */\r\nfunction baseConforms(source) {\r\n  var props = keys(source);\r\n  return function(object) {\r\n    return baseConformsTo(object, source, props);\r\n  };\r\n}\r\n\r\nexport default baseConforms;\r\n","/**\r\n * The base implementation of `_.conformsTo` which accepts `props` to check.\r\n *\r\n * @private\r\n * @param {Object} object The object to inspect.\r\n * @param {Object} source The object of property predicates to conform to.\r\n * @returns {boolean} Returns `true` if `object` conforms, else `false`.\r\n */\r\nfunction baseConformsTo(object, source, props) {\r\n  var length = props.length;\r\n  if (object == null) {\r\n    return !length;\r\n  }\r\n  object = Object(object);\r\n  while (length--) {\r\n    var key = props[length],\r\n        predicate = source[key],\r\n        value = object[key];\r\n\r\n    if ((value === undefined && !(key in object)) || !predicate(value)) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nexport default baseConformsTo;\r\n","import isObject from './isObject.js';\r\n\r\n/** Built-in value references. */\r\nvar objectCreate = Object.create;\r\n\r\n/**\r\n * The base implementation of `_.create` without support for assigning\r\n * properties to the created object.\r\n *\r\n * @private\r\n * @param {Object} proto The object to inherit from.\r\n * @returns {Object} Returns the new object.\r\n */\r\nvar baseCreate = (function() {\r\n  function object() {}\r\n  return function(proto) {\r\n    if (!isObject(proto)) {\r\n      return {};\r\n    }\r\n    if (objectCreate) {\r\n      return objectCreate(proto);\r\n    }\r\n    object.prototype = proto;\r\n    var result = new object;\r\n    object.prototype = undefined;\r\n    return result;\r\n  };\r\n}());\r\n\r\nexport default baseCreate;\r\n","/** Error message constants. */\r\nvar FUNC_ERROR_TEXT = 'Expected a function';\r\n\r\n/**\r\n * The base implementation of `_.delay` and `_.defer` which accepts `args`\r\n * to provide to `func`.\r\n *\r\n * @private\r\n * @param {Function} func The function to delay.\r\n * @param {number} wait The number of milliseconds to delay invocation.\r\n * @param {Array} args The arguments to provide to `func`.\r\n * @returns {number|Object} Returns the timer id or timeout object.\r\n */\r\nfunction baseDelay(func, wait, args) {\r\n  if (typeof func != 'function') {\r\n    throw new TypeError(FUNC_ERROR_TEXT);\r\n  }\r\n  return setTimeout(function() { func.apply(undefined, args); }, wait);\r\n}\r\n\r\nexport default baseDelay;\r\n","import SetCache from './_SetCache.js';\r\nimport arrayIncludes from './_arrayIncludes.js';\r\nimport arrayIncludesWith from './_arrayIncludesWith.js';\r\nimport arrayMap from './_arrayMap.js';\r\nimport baseUnary from './_baseUnary.js';\r\nimport cacheHas from './_cacheHas.js';\r\n\r\n/** Used as the size to enable large array optimizations. */\r\nvar LARGE_ARRAY_SIZE = 200;\r\n\r\n/**\r\n * The base implementation of methods like `_.difference` without support\r\n * for excluding multiple arrays or iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array} array The array to inspect.\r\n * @param {Array} values The values to exclude.\r\n * @param {Function} [iteratee] The iteratee invoked per element.\r\n * @param {Function} [comparator] The comparator invoked per element.\r\n * @returns {Array} Returns the new array of filtered values.\r\n */\r\nfunction baseDifference(array, values, iteratee, comparator) {\r\n  var index = -1,\r\n      includes = arrayIncludes,\r\n      isCommon = true,\r\n      length = array.length,\r\n      result = [],\r\n      valuesLength = values.length;\r\n\r\n  if (!length) {\r\n    return result;\r\n  }\r\n  if (iteratee) {\r\n    values = arrayMap(values, baseUnary(iteratee));\r\n  }\r\n  if (comparator) {\r\n    includes = arrayIncludesWith;\r\n    isCommon = false;\r\n  }\r\n  else if (values.length >= LARGE_ARRAY_SIZE) {\r\n    includes = cacheHas;\r\n    isCommon = false;\r\n    values = new SetCache(values);\r\n  }\r\n  outer:\r\n  while (++index < length) {\r\n    var value = array[index],\r\n        computed = iteratee == null ? value : iteratee(value);\r\n\r\n    value = (comparator || value !== 0) ? value : 0;\r\n    if (isCommon && computed === computed) {\r\n      var valuesIndex = valuesLength;\r\n      while (valuesIndex--) {\r\n        if (values[valuesIndex] === computed) {\r\n          continue outer;\r\n        }\r\n      }\r\n      result.push(value);\r\n    }\r\n    else if (!includes(values, computed, comparator)) {\r\n      result.push(value);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default baseDifference;\r\n","import baseForOwn from './_baseForOwn.js';\r\nimport createBaseEach from './_createBaseEach.js';\r\n\r\n/**\r\n * The base implementation of `_.forEach` without support for iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @returns {Array|Object} Returns `collection`.\r\n */\r\nvar baseEach = createBaseEach(baseForOwn);\r\n\r\nexport default baseEach;\r\n","import baseForOwnRight from './_baseForOwnRight.js';\r\nimport createBaseEach from './_createBaseEach.js';\r\n\r\n/**\r\n * The base implementation of `_.forEachRight` without support for iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @returns {Array|Object} Returns `collection`.\r\n */\r\nvar baseEachRight = createBaseEach(baseForOwnRight, true);\r\n\r\nexport default baseEachRight;\r\n","import baseEach from './_baseEach.js';\r\n\r\n/**\r\n * The base implementation of `_.every` without support for iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} predicate The function invoked per iteration.\r\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\r\n *  else `false`\r\n */\r\nfunction baseEvery(collection, predicate) {\r\n  var result = true;\r\n  baseEach(collection, function(value, index, collection) {\r\n    result = !!predicate(value, index, collection);\r\n    return result;\r\n  });\r\n  return result;\r\n}\r\n\r\nexport default baseEvery;\r\n","import isSymbol from './isSymbol.js';\r\n\r\n/**\r\n * The base implementation of methods like `_.max` and `_.min` which accepts a\r\n * `comparator` to determine the extremum value.\r\n *\r\n * @private\r\n * @param {Array} array The array to iterate over.\r\n * @param {Function} iteratee The iteratee invoked per iteration.\r\n * @param {Function} comparator The comparator used to compare values.\r\n * @returns {*} Returns the extremum value.\r\n */\r\nfunction baseExtremum(array, iteratee, comparator) {\r\n  var index = -1,\r\n      length = array.length;\r\n\r\n  while (++index < length) {\r\n    var value = array[index],\r\n        current = iteratee(value);\r\n\r\n    if (current != null && (computed === undefined\r\n          ? (current === current && !isSymbol(current))\r\n          : comparator(current, computed)\r\n        )) {\r\n      var computed = current,\r\n          result = value;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default baseExtremum;\r\n","import toInteger from './toInteger.js';\r\nimport toLength from './toLength.js';\r\n\r\n/**\r\n * The base implementation of `_.fill` without an iteratee call guard.\r\n *\r\n * @private\r\n * @param {Array} array The array to fill.\r\n * @param {*} value The value to fill `array` with.\r\n * @param {number} [start=0] The start position.\r\n * @param {number} [end=array.length] The end position.\r\n * @returns {Array} Returns `array`.\r\n */\r\nfunction baseFill(array, value, start, end) {\r\n  var length = array.length;\r\n\r\n  start = toInteger(start);\r\n  if (start < 0) {\r\n    start = -start > length ? 0 : (length + start);\r\n  }\r\n  end = (end === undefined || end > length) ? length : toInteger(end);\r\n  if (end < 0) {\r\n    end += length;\r\n  }\r\n  end = start > end ? 0 : toLength(end);\r\n  while (start < end) {\r\n    array[start++] = value;\r\n  }\r\n  return array;\r\n}\r\n\r\nexport default baseFill;\r\n","import baseEach from './_baseEach.js';\r\n\r\n/**\r\n * The base implementation of `_.filter` without support for iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} predicate The function invoked per iteration.\r\n * @returns {Array} Returns the new filtered array.\r\n */\r\nfunction baseFilter(collection, predicate) {\r\n  var result = [];\r\n  baseEach(collection, function(value, index, collection) {\r\n    if (predicate(value, index, collection)) {\r\n      result.push(value);\r\n    }\r\n  });\r\n  return result;\r\n}\r\n\r\nexport default baseFilter;\r\n","/**\r\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\r\n * support for iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array} array The array to inspect.\r\n * @param {Function} predicate The function invoked per iteration.\r\n * @param {number} fromIndex The index to search from.\r\n * @param {boolean} [fromRight] Specify iterating from right to left.\r\n * @returns {number} Returns the index of the matched value, else `-1`.\r\n */\r\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\r\n  var length = array.length,\r\n      index = fromIndex + (fromRight ? 1 : -1);\r\n\r\n  while ((fromRight ? index-- : ++index < length)) {\r\n    if (predicate(array[index], index, array)) {\r\n      return index;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\nexport default baseFindIndex;\r\n","/**\r\n * The base implementation of methods like `_.findKey` and `_.findLastKey`,\r\n * without support for iteratee shorthands, which iterates over `collection`\r\n * using `eachFunc`.\r\n *\r\n * @private\r\n * @param {Array|Object} collection The collection to inspect.\r\n * @param {Function} predicate The function invoked per iteration.\r\n * @param {Function} eachFunc The function to iterate over `collection`.\r\n * @returns {*} Returns the found element or its key, else `undefined`.\r\n */\r\nfunction baseFindKey(collection, predicate, eachFunc) {\r\n  var result;\r\n  eachFunc(collection, function(value, key, collection) {\r\n    if (predicate(value, key, collection)) {\r\n      result = key;\r\n      return false;\r\n    }\r\n  });\r\n  return result;\r\n}\r\n\r\nexport default baseFindKey;\r\n","import arrayPush from './_arrayPush.js';\r\nimport isFlattenable from './_isFlattenable.js';\r\n\r\n/**\r\n * The base implementation of `_.flatten` with support for restricting flattening.\r\n *\r\n * @private\r\n * @param {Array} array The array to flatten.\r\n * @param {number} depth The maximum recursion depth.\r\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\r\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\r\n * @param {Array} [result=[]] The initial result value.\r\n * @returns {Array} Returns the new flattened array.\r\n */\r\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\r\n  var index = -1,\r\n      length = array.length;\r\n\r\n  predicate || (predicate = isFlattenable);\r\n  result || (result = []);\r\n\r\n  while (++index < length) {\r\n    var value = array[index];\r\n    if (depth > 0 && predicate(value)) {\r\n      if (depth > 1) {\r\n        // Recursively flatten arrays (susceptible to call stack limits).\r\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\r\n      } else {\r\n        arrayPush(result, value);\r\n      }\r\n    } else if (!isStrict) {\r\n      result[result.length] = value;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default baseFlatten;\r\n","import createBaseFor from './_createBaseFor.js';\r\n\r\n/**\r\n * The base implementation of `baseForOwn` which iterates over `object`\r\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\r\n * Iteratee functions may exit iteration early by explicitly returning `false`.\r\n *\r\n * @private\r\n * @param {Object} object The object to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @param {Function} keysFunc The function to get the keys of `object`.\r\n * @returns {Object} Returns `object`.\r\n */\r\nvar baseFor = createBaseFor();\r\n\r\nexport default baseFor;\r\n","import baseFor from './_baseFor.js';\r\nimport keys from './keys.js';\r\n\r\n/**\r\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Object} object The object to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @returns {Object} Returns `object`.\r\n */\r\nfunction baseForOwn(object, iteratee) {\r\n  return object && baseFor(object, iteratee, keys);\r\n}\r\n\r\nexport default baseForOwn;\r\n","import baseForRight from './_baseForRight.js';\r\nimport keys from './keys.js';\r\n\r\n/**\r\n * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Object} object The object to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @returns {Object} Returns `object`.\r\n */\r\nfunction baseForOwnRight(object, iteratee) {\r\n  return object && baseForRight(object, iteratee, keys);\r\n}\r\n\r\nexport default baseForOwnRight;\r\n","import createBaseFor from './_createBaseFor.js';\r\n\r\n/**\r\n * This function is like `baseFor` except that it iterates over properties\r\n * in the opposite order.\r\n *\r\n * @private\r\n * @param {Object} object The object to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @param {Function} keysFunc The function to get the keys of `object`.\r\n * @returns {Object} Returns `object`.\r\n */\r\nvar baseForRight = createBaseFor(true);\r\n\r\nexport default baseForRight;\r\n","import arrayFilter from './_arrayFilter.js';\r\nimport isFunction from './isFunction.js';\r\n\r\n/**\r\n * The base implementation of `_.functions` which creates an array of\r\n * `object` function property names filtered from `props`.\r\n *\r\n * @private\r\n * @param {Object} object The object to inspect.\r\n * @param {Array} props The property names to filter.\r\n * @returns {Array} Returns the function names.\r\n */\r\nfunction baseFunctions(object, props) {\r\n  return arrayFilter(props, function(key) {\r\n    return isFunction(object[key]);\r\n  });\r\n}\r\n\r\nexport default baseFunctions;\r\n","import castPath from './_castPath.js';\r\nimport toKey from './_toKey.js';\r\n\r\n/**\r\n * The base implementation of `_.get` without support for default values.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @param {Array|string} path The path of the property to get.\r\n * @returns {*} Returns the resolved value.\r\n */\r\nfunction baseGet(object, path) {\r\n  path = castPath(path, object);\r\n\r\n  var index = 0,\r\n      length = path.length;\r\n\r\n  while (object != null && index < length) {\r\n    object = object[toKey(path[index++])];\r\n  }\r\n  return (index && index == length) ? object : undefined;\r\n}\r\n\r\nexport default baseGet;\r\n","import arrayPush from './_arrayPush.js';\r\nimport isArray from './isArray.js';\r\n\r\n/**\r\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\r\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\r\n * symbols of `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @param {Function} keysFunc The function to get the keys of `object`.\r\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\r\n * @returns {Array} Returns the array of property names and symbols.\r\n */\r\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\r\n  var result = keysFunc(object);\r\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\r\n}\r\n\r\nexport default baseGetAllKeys;\r\n","import Symbol from './_Symbol.js';\r\nimport getRawTag from './_getRawTag.js';\r\nimport objectToString from './_objectToString.js';\r\n\r\n/** `Object#toString` result references. */\r\nvar nullTag = '[object Null]',\r\n    undefinedTag = '[object Undefined]';\r\n\r\n/** Built-in value references. */\r\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\r\n\r\n/**\r\n * The base implementation of `getTag` without fallbacks for buggy environments.\r\n *\r\n * @private\r\n * @param {*} value The value to query.\r\n * @returns {string} Returns the `toStringTag`.\r\n */\r\nfunction baseGetTag(value) {\r\n  if (value == null) {\r\n    return value === undefined ? undefinedTag : nullTag;\r\n  }\r\n  return (symToStringTag && symToStringTag in Object(value))\r\n    ? getRawTag(value)\r\n    : objectToString(value);\r\n}\r\n\r\nexport default baseGetTag;\r\n","/**\r\n * The base implementation of `_.gt` which doesn't coerce arguments.\r\n *\r\n * @private\r\n * @param {*} value The value to compare.\r\n * @param {*} other The other value to compare.\r\n * @returns {boolean} Returns `true` if `value` is greater than `other`,\r\n *  else `false`.\r\n */\r\nfunction baseGt(value, other) {\r\n  return value > other;\r\n}\r\n\r\nexport default baseGt;\r\n","/** Used for built-in method references. */\r\nvar objectProto = Object.prototype;\r\n\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n/**\r\n * The base implementation of `_.has` without support for deep paths.\r\n *\r\n * @private\r\n * @param {Object} [object] The object to query.\r\n * @param {Array|string} key The key to check.\r\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\r\n */\r\nfunction baseHas(object, key) {\r\n  return object != null && hasOwnProperty.call(object, key);\r\n}\r\n\r\nexport default baseHas;\r\n","/**\r\n * The base implementation of `_.hasIn` without support for deep paths.\r\n *\r\n * @private\r\n * @param {Object} [object] The object to query.\r\n * @param {Array|string} key The key to check.\r\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\r\n */\r\nfunction baseHasIn(object, key) {\r\n  return object != null && key in Object(object);\r\n}\r\n\r\nexport default baseHasIn;\r\n","/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMax = Math.max,\r\n    nativeMin = Math.min;\r\n\r\n/**\r\n * The base implementation of `_.inRange` which doesn't coerce arguments.\r\n *\r\n * @private\r\n * @param {number} number The number to check.\r\n * @param {number} start The start of the range.\r\n * @param {number} end The end of the range.\r\n * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\r\n */\r\nfunction baseInRange(number, start, end) {\r\n  return number >= nativeMin(start, end) && number < nativeMax(start, end);\r\n}\r\n\r\nexport default baseInRange;\r\n","import baseFindIndex from './_baseFindIndex.js';\r\nimport baseIsNaN from './_baseIsNaN.js';\r\nimport strictIndexOf from './_strictIndexOf.js';\r\n\r\n/**\r\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\r\n *\r\n * @private\r\n * @param {Array} array The array to inspect.\r\n * @param {*} value The value to search for.\r\n * @param {number} fromIndex The index to search from.\r\n * @returns {number} Returns the index of the matched value, else `-1`.\r\n */\r\nfunction baseIndexOf(array, value, fromIndex) {\r\n  return value === value\r\n    ? strictIndexOf(array, value, fromIndex)\r\n    : baseFindIndex(array, baseIsNaN, fromIndex);\r\n}\r\n\r\nexport default baseIndexOf;\r\n","/**\r\n * This function is like `baseIndexOf` except that it accepts a comparator.\r\n *\r\n * @private\r\n * @param {Array} array The array to inspect.\r\n * @param {*} value The value to search for.\r\n * @param {number} fromIndex The index to search from.\r\n * @param {Function} comparator The comparator invoked per element.\r\n * @returns {number} Returns the index of the matched value, else `-1`.\r\n */\r\nfunction baseIndexOfWith(array, value, fromIndex, comparator) {\r\n  var index = fromIndex - 1,\r\n      length = array.length;\r\n\r\n  while (++index < length) {\r\n    if (comparator(array[index], value)) {\r\n      return index;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\nexport default baseIndexOfWith;\r\n","import SetCache from './_SetCache.js';\r\nimport arrayIncludes from './_arrayIncludes.js';\r\nimport arrayIncludesWith from './_arrayIncludesWith.js';\r\nimport arrayMap from './_arrayMap.js';\r\nimport baseUnary from './_baseUnary.js';\r\nimport cacheHas from './_cacheHas.js';\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMin = Math.min;\r\n\r\n/**\r\n * The base implementation of methods like `_.intersection`, without support\r\n * for iteratee shorthands, that accepts an array of arrays to inspect.\r\n *\r\n * @private\r\n * @param {Array} arrays The arrays to inspect.\r\n * @param {Function} [iteratee] The iteratee invoked per element.\r\n * @param {Function} [comparator] The comparator invoked per element.\r\n * @returns {Array} Returns the new array of shared values.\r\n */\r\nfunction baseIntersection(arrays, iteratee, comparator) {\r\n  var includes = comparator ? arrayIncludesWith : arrayIncludes,\r\n      length = arrays[0].length,\r\n      othLength = arrays.length,\r\n      othIndex = othLength,\r\n      caches = Array(othLength),\r\n      maxLength = Infinity,\r\n      result = [];\r\n\r\n  while (othIndex--) {\r\n    var array = arrays[othIndex];\r\n    if (othIndex && iteratee) {\r\n      array = arrayMap(array, baseUnary(iteratee));\r\n    }\r\n    maxLength = nativeMin(array.length, maxLength);\r\n    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\r\n      ? new SetCache(othIndex && array)\r\n      : undefined;\r\n  }\r\n  array = arrays[0];\r\n\r\n  var index = -1,\r\n      seen = caches[0];\r\n\r\n  outer:\r\n  while (++index < length && result.length < maxLength) {\r\n    var value = array[index],\r\n        computed = iteratee ? iteratee(value) : value;\r\n\r\n    value = (comparator || value !== 0) ? value : 0;\r\n    if (!(seen\r\n          ? cacheHas(seen, computed)\r\n          : includes(result, computed, comparator)\r\n        )) {\r\n      othIndex = othLength;\r\n      while (--othIndex) {\r\n        var cache = caches[othIndex];\r\n        if (!(cache\r\n              ? cacheHas(cache, computed)\r\n              : includes(arrays[othIndex], computed, comparator))\r\n            ) {\r\n          continue outer;\r\n        }\r\n      }\r\n      if (seen) {\r\n        seen.push(computed);\r\n      }\r\n      result.push(value);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default baseIntersection;\r\n","import baseForOwn from './_baseForOwn.js';\r\n\r\n/**\r\n * The base implementation of `_.invert` and `_.invertBy` which inverts\r\n * `object` with values transformed by `iteratee` and set by `setter`.\r\n *\r\n * @private\r\n * @param {Object} object The object to iterate over.\r\n * @param {Function} setter The function to set `accumulator` values.\r\n * @param {Function} iteratee The iteratee to transform values.\r\n * @param {Object} accumulator The initial inverted object.\r\n * @returns {Function} Returns `accumulator`.\r\n */\r\nfunction baseInverter(object, setter, iteratee, accumulator) {\r\n  baseForOwn(object, function(value, key, object) {\r\n    setter(accumulator, iteratee(value), key, object);\r\n  });\r\n  return accumulator;\r\n}\r\n\r\nexport default baseInverter;\r\n","import apply from './_apply.js';\r\nimport castPath from './_castPath.js';\r\nimport last from './last.js';\r\nimport parent from './_parent.js';\r\nimport toKey from './_toKey.js';\r\n\r\n/**\r\n * The base implementation of `_.invoke` without support for individual\r\n * method arguments.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @param {Array|string} path The path of the method to invoke.\r\n * @param {Array} args The arguments to invoke the method with.\r\n * @returns {*} Returns the result of the invoked method.\r\n */\r\nfunction baseInvoke(object, path, args) {\r\n  path = castPath(path, object);\r\n  object = parent(object, path);\r\n  var func = object == null ? object : object[toKey(last(path))];\r\n  return func == null ? undefined : apply(func, object, args);\r\n}\r\n\r\nexport default baseInvoke;\r\n","import baseGetTag from './_baseGetTag.js';\r\nimport isObjectLike from './isObjectLike.js';\r\n\r\n/** `Object#toString` result references. */\r\nvar argsTag = '[object Arguments]';\r\n\r\n/**\r\n * The base implementation of `_.isArguments`.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\r\n */\r\nfunction baseIsArguments(value) {\r\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\r\n}\r\n\r\nexport default baseIsArguments;\r\n","import baseGetTag from './_baseGetTag.js';\r\nimport isObjectLike from './isObjectLike.js';\r\n\r\nvar arrayBufferTag = '[object ArrayBuffer]';\r\n\r\n/**\r\n * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\r\n */\r\nfunction baseIsArrayBuffer(value) {\r\n  return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\r\n}\r\n\r\nexport default baseIsArrayBuffer;\r\n","import baseGetTag from './_baseGetTag.js';\r\nimport isObjectLike from './isObjectLike.js';\r\n\r\n/** `Object#toString` result references. */\r\nvar dateTag = '[object Date]';\r\n\r\n/**\r\n * The base implementation of `_.isDate` without Node.js optimizations.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\r\n */\r\nfunction baseIsDate(value) {\r\n  return isObjectLike(value) && baseGetTag(value) == dateTag;\r\n}\r\n\r\nexport default baseIsDate;\r\n","import baseIsEqualDeep from './_baseIsEqualDeep.js';\r\nimport isObjectLike from './isObjectLike.js';\r\n\r\n/**\r\n * The base implementation of `_.isEqual` which supports partial comparisons\r\n * and tracks traversed objects.\r\n *\r\n * @private\r\n * @param {*} value The value to compare.\r\n * @param {*} other The other value to compare.\r\n * @param {boolean} bitmask The bitmask flags.\r\n *  1 - Unordered comparison\r\n *  2 - Partial comparison\r\n * @param {Function} [customizer] The function to customize comparisons.\r\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\r\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\r\n */\r\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\r\n  if (value === other) {\r\n    return true;\r\n  }\r\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\r\n    return value !== value && other !== other;\r\n  }\r\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\r\n}\r\n\r\nexport default baseIsEqual;\r\n","import Stack from './_Stack.js';\r\nimport equalArrays from './_equalArrays.js';\r\nimport equalByTag from './_equalByTag.js';\r\nimport equalObjects from './_equalObjects.js';\r\nimport getTag from './_getTag.js';\r\nimport isArray from './isArray.js';\r\nimport isBuffer from './isBuffer.js';\r\nimport isTypedArray from './isTypedArray.js';\r\n\r\n/** Used to compose bitmasks for value comparisons. */\r\nvar COMPARE_PARTIAL_FLAG = 1;\r\n\r\n/** `Object#toString` result references. */\r\nvar argsTag = '[object Arguments]',\r\n    arrayTag = '[object Array]',\r\n    objectTag = '[object Object]';\r\n\r\n/** Used for built-in method references. */\r\nvar objectProto = Object.prototype;\r\n\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n/**\r\n * A specialized version of `baseIsEqual` for arrays and objects which performs\r\n * deep comparisons and tracks traversed objects enabling objects with circular\r\n * references to be compared.\r\n *\r\n * @private\r\n * @param {Object} object The object to compare.\r\n * @param {Object} other The other object to compare.\r\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\r\n * @param {Function} customizer The function to customize comparisons.\r\n * @param {Function} equalFunc The function to determine equivalents of values.\r\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\r\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\r\n */\r\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\r\n  var objIsArr = isArray(object),\r\n      othIsArr = isArray(other),\r\n      objTag = objIsArr ? arrayTag : getTag(object),\r\n      othTag = othIsArr ? arrayTag : getTag(other);\r\n\r\n  objTag = objTag == argsTag ? objectTag : objTag;\r\n  othTag = othTag == argsTag ? objectTag : othTag;\r\n\r\n  var objIsObj = objTag == objectTag,\r\n      othIsObj = othTag == objectTag,\r\n      isSameTag = objTag == othTag;\r\n\r\n  if (isSameTag && isBuffer(object)) {\r\n    if (!isBuffer(other)) {\r\n      return false;\r\n    }\r\n    objIsArr = true;\r\n    objIsObj = false;\r\n  }\r\n  if (isSameTag && !objIsObj) {\r\n    stack || (stack = new Stack);\r\n    return (objIsArr || isTypedArray(object))\r\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\r\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\r\n  }\r\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\r\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\r\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\r\n\r\n    if (objIsWrapped || othIsWrapped) {\r\n      var objUnwrapped = objIsWrapped ? object.value() : object,\r\n          othUnwrapped = othIsWrapped ? other.value() : other;\r\n\r\n      stack || (stack = new Stack);\r\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\r\n    }\r\n  }\r\n  if (!isSameTag) {\r\n    return false;\r\n  }\r\n  stack || (stack = new Stack);\r\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\r\n}\r\n\r\nexport default baseIsEqualDeep;\r\n","import getTag from './_getTag.js';\r\nimport isObjectLike from './isObjectLike.js';\r\n\r\n/** `Object#toString` result references. */\r\nvar mapTag = '[object Map]';\r\n\r\n/**\r\n * The base implementation of `_.isMap` without Node.js optimizations.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\r\n */\r\nfunction baseIsMap(value) {\r\n  return isObjectLike(value) && getTag(value) == mapTag;\r\n}\r\n\r\nexport default baseIsMap;\r\n","import Stack from './_Stack.js';\r\nimport baseIsEqual from './_baseIsEqual.js';\r\n\r\n/** Used to compose bitmasks for value comparisons. */\r\nvar COMPARE_PARTIAL_FLAG = 1,\r\n    COMPARE_UNORDERED_FLAG = 2;\r\n\r\n/**\r\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Object} object The object to inspect.\r\n * @param {Object} source The object of property values to match.\r\n * @param {Array} matchData The property names, values, and compare flags to match.\r\n * @param {Function} [customizer] The function to customize comparisons.\r\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\r\n */\r\nfunction baseIsMatch(object, source, matchData, customizer) {\r\n  var index = matchData.length,\r\n      length = index,\r\n      noCustomizer = !customizer;\r\n\r\n  if (object == null) {\r\n    return !length;\r\n  }\r\n  object = Object(object);\r\n  while (index--) {\r\n    var data = matchData[index];\r\n    if ((noCustomizer && data[2])\r\n          ? data[1] !== object[data[0]]\r\n          : !(data[0] in object)\r\n        ) {\r\n      return false;\r\n    }\r\n  }\r\n  while (++index < length) {\r\n    data = matchData[index];\r\n    var key = data[0],\r\n        objValue = object[key],\r\n        srcValue = data[1];\r\n\r\n    if (noCustomizer && data[2]) {\r\n      if (objValue === undefined && !(key in object)) {\r\n        return false;\r\n      }\r\n    } else {\r\n      var stack = new Stack;\r\n      if (customizer) {\r\n        var result = customizer(objValue, srcValue, key, object, source, stack);\r\n      }\r\n      if (!(result === undefined\r\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\r\n            : result\r\n          )) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nexport default baseIsMatch;\r\n","/**\r\n * The base implementation of `_.isNaN` without support for number objects.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\r\n */\r\nfunction baseIsNaN(value) {\r\n  return value !== value;\r\n}\r\n\r\nexport default baseIsNaN;\r\n","import isFunction from './isFunction.js';\r\nimport isMasked from './_isMasked.js';\r\nimport isObject from './isObject.js';\r\nimport toSource from './_toSource.js';\r\n\r\n/**\r\n * Used to match `RegExp`\r\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\r\n */\r\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\r\n\r\n/** Used to detect host constructors (Safari). */\r\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\r\n\r\n/** Used for built-in method references. */\r\nvar funcProto = Function.prototype,\r\n    objectProto = Object.prototype;\r\n\r\n/** Used to resolve the decompiled source of functions. */\r\nvar funcToString = funcProto.toString;\r\n\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n/** Used to detect if a method is native. */\r\nvar reIsNative = RegExp('^' +\r\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\r\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\r\n);\r\n\r\n/**\r\n * The base implementation of `_.isNative` without bad shim checks.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a native function,\r\n *  else `false`.\r\n */\r\nfunction baseIsNative(value) {\r\n  if (!isObject(value) || isMasked(value)) {\r\n    return false;\r\n  }\r\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\r\n  return pattern.test(toSource(value));\r\n}\r\n\r\nexport default baseIsNative;\r\n","import baseGetTag from './_baseGetTag.js';\r\nimport isObjectLike from './isObjectLike.js';\r\n\r\n/** `Object#toString` result references. */\r\nvar regexpTag = '[object RegExp]';\r\n\r\n/**\r\n * The base implementation of `_.isRegExp` without Node.js optimizations.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\r\n */\r\nfunction baseIsRegExp(value) {\r\n  return isObjectLike(value) && baseGetTag(value) == regexpTag;\r\n}\r\n\r\nexport default baseIsRegExp;\r\n","import getTag from './_getTag.js';\r\nimport isObjectLike from './isObjectLike.js';\r\n\r\n/** `Object#toString` result references. */\r\nvar setTag = '[object Set]';\r\n\r\n/**\r\n * The base implementation of `_.isSet` without Node.js optimizations.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\r\n */\r\nfunction baseIsSet(value) {\r\n  return isObjectLike(value) && getTag(value) == setTag;\r\n}\r\n\r\nexport default baseIsSet;\r\n","import baseGetTag from './_baseGetTag.js';\r\nimport isLength from './isLength.js';\r\nimport isObjectLike from './isObjectLike.js';\r\n\r\n/** `Object#toString` result references. */\r\nvar argsTag = '[object Arguments]',\r\n    arrayTag = '[object Array]',\r\n    boolTag = '[object Boolean]',\r\n    dateTag = '[object Date]',\r\n    errorTag = '[object Error]',\r\n    funcTag = '[object Function]',\r\n    mapTag = '[object Map]',\r\n    numberTag = '[object Number]',\r\n    objectTag = '[object Object]',\r\n    regexpTag = '[object RegExp]',\r\n    setTag = '[object Set]',\r\n    stringTag = '[object String]',\r\n    weakMapTag = '[object WeakMap]';\r\n\r\nvar arrayBufferTag = '[object ArrayBuffer]',\r\n    dataViewTag = '[object DataView]',\r\n    float32Tag = '[object Float32Array]',\r\n    float64Tag = '[object Float64Array]',\r\n    int8Tag = '[object Int8Array]',\r\n    int16Tag = '[object Int16Array]',\r\n    int32Tag = '[object Int32Array]',\r\n    uint8Tag = '[object Uint8Array]',\r\n    uint8ClampedTag = '[object Uint8ClampedArray]',\r\n    uint16Tag = '[object Uint16Array]',\r\n    uint32Tag = '[object Uint32Array]';\r\n\r\n/** Used to identify `toStringTag` values of typed arrays. */\r\nvar typedArrayTags = {};\r\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\r\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\r\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\r\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\r\ntypedArrayTags[uint32Tag] = true;\r\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\r\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\r\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\r\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\r\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\r\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\r\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\r\ntypedArrayTags[weakMapTag] = false;\r\n\r\n/**\r\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\r\n */\r\nfunction baseIsTypedArray(value) {\r\n  return isObjectLike(value) &&\r\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\r\n}\r\n\r\nexport default baseIsTypedArray;\r\n","import baseMatches from './_baseMatches.js';\r\nimport baseMatchesProperty from './_baseMatchesProperty.js';\r\nimport identity from './identity.js';\r\nimport isArray from './isArray.js';\r\nimport property from './property.js';\r\n\r\n/**\r\n * The base implementation of `_.iteratee`.\r\n *\r\n * @private\r\n * @param {*} [value=_.identity] The value to convert to an iteratee.\r\n * @returns {Function} Returns the iteratee.\r\n */\r\nfunction baseIteratee(value) {\r\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\r\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\r\n  if (typeof value == 'function') {\r\n    return value;\r\n  }\r\n  if (value == null) {\r\n    return identity;\r\n  }\r\n  if (typeof value == 'object') {\r\n    return isArray(value)\r\n      ? baseMatchesProperty(value[0], value[1])\r\n      : baseMatches(value);\r\n  }\r\n  return property(value);\r\n}\r\n\r\nexport default baseIteratee;\r\n","import isPrototype from './_isPrototype.js';\r\nimport nativeKeys from './_nativeKeys.js';\r\n\r\n/** Used for built-in method references. */\r\nvar objectProto = Object.prototype;\r\n\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n/**\r\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the array of property names.\r\n */\r\nfunction baseKeys(object) {\r\n  if (!isPrototype(object)) {\r\n    return nativeKeys(object);\r\n  }\r\n  var result = [];\r\n  for (var key in Object(object)) {\r\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\r\n      result.push(key);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default baseKeys;\r\n","import isObject from './isObject.js';\r\nimport isPrototype from './_isPrototype.js';\r\nimport nativeKeysIn from './_nativeKeysIn.js';\r\n\r\n/** Used for built-in method references. */\r\nvar objectProto = Object.prototype;\r\n\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n/**\r\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the array of property names.\r\n */\r\nfunction baseKeysIn(object) {\r\n  if (!isObject(object)) {\r\n    return nativeKeysIn(object);\r\n  }\r\n  var isProto = isPrototype(object),\r\n      result = [];\r\n\r\n  for (var key in object) {\r\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\r\n      result.push(key);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default baseKeysIn;\r\n","/**\r\n * The function whose prototype chain sequence wrappers inherit from.\r\n *\r\n * @private\r\n */\r\nfunction baseLodash() {\r\n  // No operation performed.\r\n}\r\n\r\nexport default baseLodash;\r\n","/**\r\n * The base implementation of `_.lt` which doesn't coerce arguments.\r\n *\r\n * @private\r\n * @param {*} value The value to compare.\r\n * @param {*} other The other value to compare.\r\n * @returns {boolean} Returns `true` if `value` is less than `other`,\r\n *  else `false`.\r\n */\r\nfunction baseLt(value, other) {\r\n  return value < other;\r\n}\r\n\r\nexport default baseLt;\r\n","import baseEach from './_baseEach.js';\r\nimport isArrayLike from './isArrayLike.js';\r\n\r\n/**\r\n * The base implementation of `_.map` without support for iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @returns {Array} Returns the new mapped array.\r\n */\r\nfunction baseMap(collection, iteratee) {\r\n  var index = -1,\r\n      result = isArrayLike(collection) ? Array(collection.length) : [];\r\n\r\n  baseEach(collection, function(value, key, collection) {\r\n    result[++index] = iteratee(value, key, collection);\r\n  });\r\n  return result;\r\n}\r\n\r\nexport default baseMap;\r\n","import baseIsMatch from './_baseIsMatch.js';\r\nimport getMatchData from './_getMatchData.js';\r\nimport matchesStrictComparable from './_matchesStrictComparable.js';\r\n\r\n/**\r\n * The base implementation of `_.matches` which doesn't clone `source`.\r\n *\r\n * @private\r\n * @param {Object} source The object of property values to match.\r\n * @returns {Function} Returns the new spec function.\r\n */\r\nfunction baseMatches(source) {\r\n  var matchData = getMatchData(source);\r\n  if (matchData.length == 1 && matchData[0][2]) {\r\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\r\n  }\r\n  return function(object) {\r\n    return object === source || baseIsMatch(object, source, matchData);\r\n  };\r\n}\r\n\r\nexport default baseMatches;\r\n","import baseIsEqual from './_baseIsEqual.js';\r\nimport get from './get.js';\r\nimport hasIn from './hasIn.js';\r\nimport isKey from './_isKey.js';\r\nimport isStrictComparable from './_isStrictComparable.js';\r\nimport matchesStrictComparable from './_matchesStrictComparable.js';\r\nimport toKey from './_toKey.js';\r\n\r\n/** Used to compose bitmasks for value comparisons. */\r\nvar COMPARE_PARTIAL_FLAG = 1,\r\n    COMPARE_UNORDERED_FLAG = 2;\r\n\r\n/**\r\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\r\n *\r\n * @private\r\n * @param {string} path The path of the property to get.\r\n * @param {*} srcValue The value to match.\r\n * @returns {Function} Returns the new spec function.\r\n */\r\nfunction baseMatchesProperty(path, srcValue) {\r\n  if (isKey(path) && isStrictComparable(srcValue)) {\r\n    return matchesStrictComparable(toKey(path), srcValue);\r\n  }\r\n  return function(object) {\r\n    var objValue = get(object, path);\r\n    return (objValue === undefined && objValue === srcValue)\r\n      ? hasIn(object, path)\r\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\r\n  };\r\n}\r\n\r\nexport default baseMatchesProperty;\r\n","import baseSum from './_baseSum.js';\r\n\r\n/** Used as references for various `Number` constants. */\r\nvar NAN = 0 / 0;\r\n\r\n/**\r\n * The base implementation of `_.mean` and `_.meanBy` without support for\r\n * iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array} array The array to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @returns {number} Returns the mean.\r\n */\r\nfunction baseMean(array, iteratee) {\r\n  var length = array == null ? 0 : array.length;\r\n  return length ? (baseSum(array, iteratee) / length) : NAN;\r\n}\r\n\r\nexport default baseMean;\r\n","import Stack from './_Stack.js';\r\nimport assignMergeValue from './_assignMergeValue.js';\r\nimport baseFor from './_baseFor.js';\r\nimport baseMergeDeep from './_baseMergeDeep.js';\r\nimport isObject from './isObject.js';\r\nimport keysIn from './keysIn.js';\r\nimport safeGet from './_safeGet.js';\r\n\r\n/**\r\n * The base implementation of `_.merge` without support for multiple sources.\r\n *\r\n * @private\r\n * @param {Object} object The destination object.\r\n * @param {Object} source The source object.\r\n * @param {number} srcIndex The index of `source`.\r\n * @param {Function} [customizer] The function to customize merged values.\r\n * @param {Object} [stack] Tracks traversed source values and their merged\r\n *  counterparts.\r\n */\r\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\r\n  if (object === source) {\r\n    return;\r\n  }\r\n  baseFor(source, function(srcValue, key) {\r\n    stack || (stack = new Stack);\r\n    if (isObject(srcValue)) {\r\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\r\n    }\r\n    else {\r\n      var newValue = customizer\r\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\r\n        : undefined;\r\n\r\n      if (newValue === undefined) {\r\n        newValue = srcValue;\r\n      }\r\n      assignMergeValue(object, key, newValue);\r\n    }\r\n  }, keysIn);\r\n}\r\n\r\nexport default baseMerge;\r\n","import assignMergeValue from './_assignMergeValue.js';\r\nimport cloneBuffer from './_cloneBuffer.js';\r\nimport cloneTypedArray from './_cloneTypedArray.js';\r\nimport copyArray from './_copyArray.js';\r\nimport initCloneObject from './_initCloneObject.js';\r\nimport isArguments from './isArguments.js';\r\nimport isArray from './isArray.js';\r\nimport isArrayLikeObject from './isArrayLikeObject.js';\r\nimport isBuffer from './isBuffer.js';\r\nimport isFunction from './isFunction.js';\r\nimport isObject from './isObject.js';\r\nimport isPlainObject from './isPlainObject.js';\r\nimport isTypedArray from './isTypedArray.js';\r\nimport safeGet from './_safeGet.js';\r\nimport toPlainObject from './toPlainObject.js';\r\n\r\n/**\r\n * A specialized version of `baseMerge` for arrays and objects which performs\r\n * deep merges and tracks traversed objects enabling objects with circular\r\n * references to be merged.\r\n *\r\n * @private\r\n * @param {Object} object The destination object.\r\n * @param {Object} source The source object.\r\n * @param {string} key The key of the value to merge.\r\n * @param {number} srcIndex The index of `source`.\r\n * @param {Function} mergeFunc The function to merge values.\r\n * @param {Function} [customizer] The function to customize assigned values.\r\n * @param {Object} [stack] Tracks traversed source values and their merged\r\n *  counterparts.\r\n */\r\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\r\n  var objValue = safeGet(object, key),\r\n      srcValue = safeGet(source, key),\r\n      stacked = stack.get(srcValue);\r\n\r\n  if (stacked) {\r\n    assignMergeValue(object, key, stacked);\r\n    return;\r\n  }\r\n  var newValue = customizer\r\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\r\n    : undefined;\r\n\r\n  var isCommon = newValue === undefined;\r\n\r\n  if (isCommon) {\r\n    var isArr = isArray(srcValue),\r\n        isBuff = !isArr && isBuffer(srcValue),\r\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\r\n\r\n    newValue = srcValue;\r\n    if (isArr || isBuff || isTyped) {\r\n      if (isArray(objValue)) {\r\n        newValue = objValue;\r\n      }\r\n      else if (isArrayLikeObject(objValue)) {\r\n        newValue = copyArray(objValue);\r\n      }\r\n      else if (isBuff) {\r\n        isCommon = false;\r\n        newValue = cloneBuffer(srcValue, true);\r\n      }\r\n      else if (isTyped) {\r\n        isCommon = false;\r\n        newValue = cloneTypedArray(srcValue, true);\r\n      }\r\n      else {\r\n        newValue = [];\r\n      }\r\n    }\r\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\r\n      newValue = objValue;\r\n      if (isArguments(objValue)) {\r\n        newValue = toPlainObject(objValue);\r\n      }\r\n      else if (!isObject(objValue) || isFunction(objValue)) {\r\n        newValue = initCloneObject(srcValue);\r\n      }\r\n    }\r\n    else {\r\n      isCommon = false;\r\n    }\r\n  }\r\n  if (isCommon) {\r\n    // Recursively merge objects and arrays (susceptible to call stack limits).\r\n    stack.set(srcValue, newValue);\r\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\r\n    stack['delete'](srcValue);\r\n  }\r\n  assignMergeValue(object, key, newValue);\r\n}\r\n\r\nexport default baseMergeDeep;\r\n","import isIndex from './_isIndex.js';\r\n\r\n/**\r\n * The base implementation of `_.nth` which doesn't coerce arguments.\r\n *\r\n * @private\r\n * @param {Array} array The array to query.\r\n * @param {number} n The index of the element to return.\r\n * @returns {*} Returns the nth element of `array`.\r\n */\r\nfunction baseNth(array, n) {\r\n  var length = array.length;\r\n  if (!length) {\r\n    return;\r\n  }\r\n  n += n < 0 ? length : 0;\r\n  return isIndex(n, length) ? array[n] : undefined;\r\n}\r\n\r\nexport default baseNth;\r\n","import arrayMap from './_arrayMap.js';\r\nimport baseIteratee from './_baseIteratee.js';\r\nimport baseMap from './_baseMap.js';\r\nimport baseSortBy from './_baseSortBy.js';\r\nimport baseUnary from './_baseUnary.js';\r\nimport compareMultiple from './_compareMultiple.js';\r\nimport identity from './identity.js';\r\n\r\n/**\r\n * The base implementation of `_.orderBy` without param guards.\r\n *\r\n * @private\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\r\n * @param {string[]} orders The sort orders of `iteratees`.\r\n * @returns {Array} Returns the new sorted array.\r\n */\r\nfunction baseOrderBy(collection, iteratees, orders) {\r\n  var index = -1;\r\n  iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(baseIteratee));\r\n\r\n  var result = baseMap(collection, function(value, key, collection) {\r\n    var criteria = arrayMap(iteratees, function(iteratee) {\r\n      return iteratee(value);\r\n    });\r\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\r\n  });\r\n\r\n  return baseSortBy(result, function(object, other) {\r\n    return compareMultiple(object, other, orders);\r\n  });\r\n}\r\n\r\nexport default baseOrderBy;\r\n","import basePickBy from './_basePickBy.js';\r\nimport hasIn from './hasIn.js';\r\n\r\n/**\r\n * The base implementation of `_.pick` without support for individual\r\n * property identifiers.\r\n *\r\n * @private\r\n * @param {Object} object The source object.\r\n * @param {string[]} paths The property paths to pick.\r\n * @returns {Object} Returns the new object.\r\n */\r\nfunction basePick(object, paths) {\r\n  return basePickBy(object, paths, function(value, path) {\r\n    return hasIn(object, path);\r\n  });\r\n}\r\n\r\nexport default basePick;\r\n","import baseGet from './_baseGet.js';\r\nimport baseSet from './_baseSet.js';\r\nimport castPath from './_castPath.js';\r\n\r\n/**\r\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Object} object The source object.\r\n * @param {string[]} paths The property paths to pick.\r\n * @param {Function} predicate The function invoked per property.\r\n * @returns {Object} Returns the new object.\r\n */\r\nfunction basePickBy(object, paths, predicate) {\r\n  var index = -1,\r\n      length = paths.length,\r\n      result = {};\r\n\r\n  while (++index < length) {\r\n    var path = paths[index],\r\n        value = baseGet(object, path);\r\n\r\n    if (predicate(value, path)) {\r\n      baseSet(result, castPath(path, object), value);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default basePickBy;\r\n","/**\r\n * The base implementation of `_.property` without support for deep paths.\r\n *\r\n * @private\r\n * @param {string} key The key of the property to get.\r\n * @returns {Function} Returns the new accessor function.\r\n */\r\nfunction baseProperty(key) {\r\n  return function(object) {\r\n    return object == null ? undefined : object[key];\r\n  };\r\n}\r\n\r\nexport default baseProperty;\r\n","import baseGet from './_baseGet.js';\r\n\r\n/**\r\n * A specialized version of `baseProperty` which supports deep paths.\r\n *\r\n * @private\r\n * @param {Array|string} path The path of the property to get.\r\n * @returns {Function} Returns the new accessor function.\r\n */\r\nfunction basePropertyDeep(path) {\r\n  return function(object) {\r\n    return baseGet(object, path);\r\n  };\r\n}\r\n\r\nexport default basePropertyDeep;\r\n","/**\r\n * The base implementation of `_.propertyOf` without support for deep paths.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @returns {Function} Returns the new accessor function.\r\n */\r\nfunction basePropertyOf(object) {\r\n  return function(key) {\r\n    return object == null ? undefined : object[key];\r\n  };\r\n}\r\n\r\nexport default basePropertyOf;\r\n","import arrayMap from './_arrayMap.js';\r\nimport baseIndexOf from './_baseIndexOf.js';\r\nimport baseIndexOfWith from './_baseIndexOfWith.js';\r\nimport baseUnary from './_baseUnary.js';\r\nimport copyArray from './_copyArray.js';\r\n\r\n/** Used for built-in method references. */\r\nvar arrayProto = Array.prototype;\r\n\r\n/** Built-in value references. */\r\nvar splice = arrayProto.splice;\r\n\r\n/**\r\n * The base implementation of `_.pullAllBy` without support for iteratee\r\n * shorthands.\r\n *\r\n * @private\r\n * @param {Array} array The array to modify.\r\n * @param {Array} values The values to remove.\r\n * @param {Function} [iteratee] The iteratee invoked per element.\r\n * @param {Function} [comparator] The comparator invoked per element.\r\n * @returns {Array} Returns `array`.\r\n */\r\nfunction basePullAll(array, values, iteratee, comparator) {\r\n  var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\r\n      index = -1,\r\n      length = values.length,\r\n      seen = array;\r\n\r\n  if (array === values) {\r\n    values = copyArray(values);\r\n  }\r\n  if (iteratee) {\r\n    seen = arrayMap(array, baseUnary(iteratee));\r\n  }\r\n  while (++index < length) {\r\n    var fromIndex = 0,\r\n        value = values[index],\r\n        computed = iteratee ? iteratee(value) : value;\r\n\r\n    while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\r\n      if (seen !== array) {\r\n        splice.call(seen, fromIndex, 1);\r\n      }\r\n      splice.call(array, fromIndex, 1);\r\n    }\r\n  }\r\n  return array;\r\n}\r\n\r\nexport default basePullAll;\r\n","import baseUnset from './_baseUnset.js';\r\nimport isIndex from './_isIndex.js';\r\n\r\n/** Used for built-in method references. */\r\nvar arrayProto = Array.prototype;\r\n\r\n/** Built-in value references. */\r\nvar splice = arrayProto.splice;\r\n\r\n/**\r\n * The base implementation of `_.pullAt` without support for individual\r\n * indexes or capturing the removed elements.\r\n *\r\n * @private\r\n * @param {Array} array The array to modify.\r\n * @param {number[]} indexes The indexes of elements to remove.\r\n * @returns {Array} Returns `array`.\r\n */\r\nfunction basePullAt(array, indexes) {\r\n  var length = array ? indexes.length : 0,\r\n      lastIndex = length - 1;\r\n\r\n  while (length--) {\r\n    var index = indexes[length];\r\n    if (length == lastIndex || index !== previous) {\r\n      var previous = index;\r\n      if (isIndex(index)) {\r\n        splice.call(array, index, 1);\r\n      } else {\r\n        baseUnset(array, index);\r\n      }\r\n    }\r\n  }\r\n  return array;\r\n}\r\n\r\nexport default basePullAt;\r\n","/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeFloor = Math.floor,\r\n    nativeRandom = Math.random;\r\n\r\n/**\r\n * The base implementation of `_.random` without support for returning\r\n * floating-point numbers.\r\n *\r\n * @private\r\n * @param {number} lower The lower bound.\r\n * @param {number} upper The upper bound.\r\n * @returns {number} Returns the random number.\r\n */\r\nfunction baseRandom(lower, upper) {\r\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\r\n}\r\n\r\nexport default baseRandom;\r\n","/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeCeil = Math.ceil,\r\n    nativeMax = Math.max;\r\n\r\n/**\r\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\r\n * coerce arguments.\r\n *\r\n * @private\r\n * @param {number} start The start of the range.\r\n * @param {number} end The end of the range.\r\n * @param {number} step The value to increment or decrement by.\r\n * @param {boolean} [fromRight] Specify iterating from right to left.\r\n * @returns {Array} Returns the range of numbers.\r\n */\r\nfunction baseRange(start, end, step, fromRight) {\r\n  var index = -1,\r\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\r\n      result = Array(length);\r\n\r\n  while (length--) {\r\n    result[fromRight ? length : ++index] = start;\r\n    start += step;\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default baseRange;\r\n","/**\r\n * The base implementation of `_.reduce` and `_.reduceRight`, without support\r\n * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\r\n *\r\n * @private\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @param {*} accumulator The initial value.\r\n * @param {boolean} initAccum Specify using the first or last element of\r\n *  `collection` as the initial value.\r\n * @param {Function} eachFunc The function to iterate over `collection`.\r\n * @returns {*} Returns the accumulated value.\r\n */\r\nfunction baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\r\n  eachFunc(collection, function(value, index, collection) {\r\n    accumulator = initAccum\r\n      ? (initAccum = false, value)\r\n      : iteratee(accumulator, value, index, collection);\r\n  });\r\n  return accumulator;\r\n}\r\n\r\nexport default baseReduce;\r\n","/** Used as references for various `Number` constants. */\r\nvar MAX_SAFE_INTEGER = 9007199254740991;\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeFloor = Math.floor;\r\n\r\n/**\r\n * The base implementation of `_.repeat` which doesn't coerce arguments.\r\n *\r\n * @private\r\n * @param {string} string The string to repeat.\r\n * @param {number} n The number of times to repeat the string.\r\n * @returns {string} Returns the repeated string.\r\n */\r\nfunction baseRepeat(string, n) {\r\n  var result = '';\r\n  if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\r\n    return result;\r\n  }\r\n  // Leverage the exponentiation by squaring algorithm for a faster repeat.\r\n  // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\r\n  do {\r\n    if (n % 2) {\r\n      result += string;\r\n    }\r\n    n = nativeFloor(n / 2);\r\n    if (n) {\r\n      string += string;\r\n    }\r\n  } while (n);\r\n\r\n  return result;\r\n}\r\n\r\nexport default baseRepeat;\r\n","import identity from './identity.js';\r\nimport overRest from './_overRest.js';\r\nimport setToString from './_setToString.js';\r\n\r\n/**\r\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\r\n *\r\n * @private\r\n * @param {Function} func The function to apply a rest parameter to.\r\n * @param {number} [start=func.length-1] The start position of the rest parameter.\r\n * @returns {Function} Returns the new function.\r\n */\r\nfunction baseRest(func, start) {\r\n  return setToString(overRest(func, start, identity), func + '');\r\n}\r\n\r\nexport default baseRest;\r\n","import arraySample from './_arraySample.js';\r\nimport values from './values.js';\r\n\r\n/**\r\n * The base implementation of `_.sample`.\r\n *\r\n * @private\r\n * @param {Array|Object} collection The collection to sample.\r\n * @returns {*} Returns the random element.\r\n */\r\nfunction baseSample(collection) {\r\n  return arraySample(values(collection));\r\n}\r\n\r\nexport default baseSample;\r\n","import baseClamp from './_baseClamp.js';\r\nimport shuffleSelf from './_shuffleSelf.js';\r\nimport values from './values.js';\r\n\r\n/**\r\n * The base implementation of `_.sampleSize` without param guards.\r\n *\r\n * @private\r\n * @param {Array|Object} collection The collection to sample.\r\n * @param {number} n The number of elements to sample.\r\n * @returns {Array} Returns the random elements.\r\n */\r\nfunction baseSampleSize(collection, n) {\r\n  var array = values(collection);\r\n  return shuffleSelf(array, baseClamp(n, 0, array.length));\r\n}\r\n\r\nexport default baseSampleSize;\r\n","import assignValue from './_assignValue.js';\r\nimport castPath from './_castPath.js';\r\nimport isIndex from './_isIndex.js';\r\nimport isObject from './isObject.js';\r\nimport toKey from './_toKey.js';\r\n\r\n/**\r\n * The base implementation of `_.set`.\r\n *\r\n * @private\r\n * @param {Object} object The object to modify.\r\n * @param {Array|string} path The path of the property to set.\r\n * @param {*} value The value to set.\r\n * @param {Function} [customizer] The function to customize path creation.\r\n * @returns {Object} Returns `object`.\r\n */\r\nfunction baseSet(object, path, value, customizer) {\r\n  if (!isObject(object)) {\r\n    return object;\r\n  }\r\n  path = castPath(path, object);\r\n\r\n  var index = -1,\r\n      length = path.length,\r\n      lastIndex = length - 1,\r\n      nested = object;\r\n\r\n  while (nested != null && ++index < length) {\r\n    var key = toKey(path[index]),\r\n        newValue = value;\r\n\r\n    if (index != lastIndex) {\r\n      var objValue = nested[key];\r\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\r\n      if (newValue === undefined) {\r\n        newValue = isObject(objValue)\r\n          ? objValue\r\n          : (isIndex(path[index + 1]) ? [] : {});\r\n      }\r\n    }\r\n    assignValue(nested, key, newValue);\r\n    nested = nested[key];\r\n  }\r\n  return object;\r\n}\r\n\r\nexport default baseSet;\r\n","import identity from './identity.js';\r\nimport metaMap from './_metaMap.js';\r\n\r\n/**\r\n * The base implementation of `setData` without support for hot loop shorting.\r\n *\r\n * @private\r\n * @param {Function} func The function to associate metadata with.\r\n * @param {*} data The metadata.\r\n * @returns {Function} Returns `func`.\r\n */\r\nvar baseSetData = !metaMap ? identity : function(func, data) {\r\n  metaMap.set(func, data);\r\n  return func;\r\n};\r\n\r\nexport default baseSetData;\r\n","import constant from './constant.js';\r\nimport defineProperty from './_defineProperty.js';\r\nimport identity from './identity.js';\r\n\r\n/**\r\n * The base implementation of `setToString` without support for hot loop shorting.\r\n *\r\n * @private\r\n * @param {Function} func The function to modify.\r\n * @param {Function} string The `toString` result.\r\n * @returns {Function} Returns `func`.\r\n */\r\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\r\n  return defineProperty(func, 'toString', {\r\n    'configurable': true,\r\n    'enumerable': false,\r\n    'value': constant(string),\r\n    'writable': true\r\n  });\r\n};\r\n\r\nexport default baseSetToString;\r\n","import shuffleSelf from './_shuffleSelf.js';\r\nimport values from './values.js';\r\n\r\n/**\r\n * The base implementation of `_.shuffle`.\r\n *\r\n * @private\r\n * @param {Array|Object} collection The collection to shuffle.\r\n * @returns {Array} Returns the new shuffled array.\r\n */\r\nfunction baseShuffle(collection) {\r\n  return shuffleSelf(values(collection));\r\n}\r\n\r\nexport default baseShuffle;\r\n","/**\r\n * The base implementation of `_.slice` without an iteratee call guard.\r\n *\r\n * @private\r\n * @param {Array} array The array to slice.\r\n * @param {number} [start=0] The start position.\r\n * @param {number} [end=array.length] The end position.\r\n * @returns {Array} Returns the slice of `array`.\r\n */\r\nfunction baseSlice(array, start, end) {\r\n  var index = -1,\r\n      length = array.length;\r\n\r\n  if (start < 0) {\r\n    start = -start > length ? 0 : (length + start);\r\n  }\r\n  end = end > length ? length : end;\r\n  if (end < 0) {\r\n    end += length;\r\n  }\r\n  length = start > end ? 0 : ((end - start) >>> 0);\r\n  start >>>= 0;\r\n\r\n  var result = Array(length);\r\n  while (++index < length) {\r\n    result[index] = array[index + start];\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default baseSlice;\r\n","import baseEach from './_baseEach.js';\r\n\r\n/**\r\n * The base implementation of `_.some` without support for iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} predicate The function invoked per iteration.\r\n * @returns {boolean} Returns `true` if any element passes the predicate check,\r\n *  else `false`.\r\n */\r\nfunction baseSome(collection, predicate) {\r\n  var result;\r\n\r\n  baseEach(collection, function(value, index, collection) {\r\n    result = predicate(value, index, collection);\r\n    return !result;\r\n  });\r\n  return !!result;\r\n}\r\n\r\nexport default baseSome;\r\n","/**\r\n * The base implementation of `_.sortBy` which uses `comparer` to define the\r\n * sort order of `array` and replaces criteria objects with their corresponding\r\n * values.\r\n *\r\n * @private\r\n * @param {Array} array The array to sort.\r\n * @param {Function} comparer The function to define sort order.\r\n * @returns {Array} Returns `array`.\r\n */\r\nfunction baseSortBy(array, comparer) {\r\n  var length = array.length;\r\n\r\n  array.sort(comparer);\r\n  while (length--) {\r\n    array[length] = array[length].value;\r\n  }\r\n  return array;\r\n}\r\n\r\nexport default baseSortBy;\r\n","import baseSortedIndexBy from './_baseSortedIndexBy.js';\r\nimport identity from './identity.js';\r\nimport isSymbol from './isSymbol.js';\r\n\r\n/** Used as references for the maximum length and index of an array. */\r\nvar MAX_ARRAY_LENGTH = 4294967295,\r\n    HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\r\n\r\n/**\r\n * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\r\n * performs a binary search of `array` to determine the index at which `value`\r\n * should be inserted into `array` in order to maintain its sort order.\r\n *\r\n * @private\r\n * @param {Array} array The sorted array to inspect.\r\n * @param {*} value The value to evaluate.\r\n * @param {boolean} [retHighest] Specify returning the highest qualified index.\r\n * @returns {number} Returns the index at which `value` should be inserted\r\n *  into `array`.\r\n */\r\nfunction baseSortedIndex(array, value, retHighest) {\r\n  var low = 0,\r\n      high = array == null ? low : array.length;\r\n\r\n  if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\r\n    while (low < high) {\r\n      var mid = (low + high) >>> 1,\r\n          computed = array[mid];\r\n\r\n      if (computed !== null && !isSymbol(computed) &&\r\n          (retHighest ? (computed <= value) : (computed < value))) {\r\n        low = mid + 1;\r\n      } else {\r\n        high = mid;\r\n      }\r\n    }\r\n    return high;\r\n  }\r\n  return baseSortedIndexBy(array, value, identity, retHighest);\r\n}\r\n\r\nexport default baseSortedIndex;\r\n","import isSymbol from './isSymbol.js';\r\n\r\n/** Used as references for the maximum length and index of an array. */\r\nvar MAX_ARRAY_LENGTH = 4294967295,\r\n    MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1;\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeFloor = Math.floor,\r\n    nativeMin = Math.min;\r\n\r\n/**\r\n * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\r\n * which invokes `iteratee` for `value` and each element of `array` to compute\r\n * their sort ranking. The iteratee is invoked with one argument; (value).\r\n *\r\n * @private\r\n * @param {Array} array The sorted array to inspect.\r\n * @param {*} value The value to evaluate.\r\n * @param {Function} iteratee The iteratee invoked per element.\r\n * @param {boolean} [retHighest] Specify returning the highest qualified index.\r\n * @returns {number} Returns the index at which `value` should be inserted\r\n *  into `array`.\r\n */\r\nfunction baseSortedIndexBy(array, value, iteratee, retHighest) {\r\n  value = iteratee(value);\r\n\r\n  var low = 0,\r\n      high = array == null ? 0 : array.length,\r\n      valIsNaN = value !== value,\r\n      valIsNull = value === null,\r\n      valIsSymbol = isSymbol(value),\r\n      valIsUndefined = value === undefined;\r\n\r\n  while (low < high) {\r\n    var mid = nativeFloor((low + high) / 2),\r\n        computed = iteratee(array[mid]),\r\n        othIsDefined = computed !== undefined,\r\n        othIsNull = computed === null,\r\n        othIsReflexive = computed === computed,\r\n        othIsSymbol = isSymbol(computed);\r\n\r\n    if (valIsNaN) {\r\n      var setLow = retHighest || othIsReflexive;\r\n    } else if (valIsUndefined) {\r\n      setLow = othIsReflexive && (retHighest || othIsDefined);\r\n    } else if (valIsNull) {\r\n      setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\r\n    } else if (valIsSymbol) {\r\n      setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\r\n    } else if (othIsNull || othIsSymbol) {\r\n      setLow = false;\r\n    } else {\r\n      setLow = retHighest ? (computed <= value) : (computed < value);\r\n    }\r\n    if (setLow) {\r\n      low = mid + 1;\r\n    } else {\r\n      high = mid;\r\n    }\r\n  }\r\n  return nativeMin(high, MAX_ARRAY_INDEX);\r\n}\r\n\r\nexport default baseSortedIndexBy;\r\n","import eq from './eq.js';\r\n\r\n/**\r\n * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\r\n * support for iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array} array The array to inspect.\r\n * @param {Function} [iteratee] The iteratee invoked per element.\r\n * @returns {Array} Returns the new duplicate free array.\r\n */\r\nfunction baseSortedUniq(array, iteratee) {\r\n  var index = -1,\r\n      length = array.length,\r\n      resIndex = 0,\r\n      result = [];\r\n\r\n  while (++index < length) {\r\n    var value = array[index],\r\n        computed = iteratee ? iteratee(value) : value;\r\n\r\n    if (!index || !eq(computed, seen)) {\r\n      var seen = computed;\r\n      result[resIndex++] = value === 0 ? 0 : value;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default baseSortedUniq;\r\n","/**\r\n * The base implementation of `_.sum` and `_.sumBy` without support for\r\n * iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array} array The array to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @returns {number} Returns the sum.\r\n */\r\nfunction baseSum(array, iteratee) {\r\n  var result,\r\n      index = -1,\r\n      length = array.length;\r\n\r\n  while (++index < length) {\r\n    var current = iteratee(array[index]);\r\n    if (current !== undefined) {\r\n      result = result === undefined ? current : (result + current);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default baseSum;\r\n","/**\r\n * The base implementation of `_.times` without support for iteratee shorthands\r\n * or max array length checks.\r\n *\r\n * @private\r\n * @param {number} n The number of times to invoke `iteratee`.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @returns {Array} Returns the array of results.\r\n */\r\nfunction baseTimes(n, iteratee) {\r\n  var index = -1,\r\n      result = Array(n);\r\n\r\n  while (++index < n) {\r\n    result[index] = iteratee(index);\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default baseTimes;\r\n","import isSymbol from './isSymbol.js';\r\n\r\n/** Used as references for various `Number` constants. */\r\nvar NAN = 0 / 0;\r\n\r\n/**\r\n * The base implementation of `_.toNumber` which doesn't ensure correct\r\n * conversions of binary, hexadecimal, or octal string values.\r\n *\r\n * @private\r\n * @param {*} value The value to process.\r\n * @returns {number} Returns the number.\r\n */\r\nfunction baseToNumber(value) {\r\n  if (typeof value == 'number') {\r\n    return value;\r\n  }\r\n  if (isSymbol(value)) {\r\n    return NAN;\r\n  }\r\n  return +value;\r\n}\r\n\r\nexport default baseToNumber;\r\n","import arrayMap from './_arrayMap.js';\r\n\r\n/**\r\n * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\r\n * of key-value pairs for `object` corresponding to the property names of `props`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @param {Array} props The property names to get values for.\r\n * @returns {Object} Returns the key-value pairs.\r\n */\r\nfunction baseToPairs(object, props) {\r\n  return arrayMap(props, function(key) {\r\n    return [key, object[key]];\r\n  });\r\n}\r\n\r\nexport default baseToPairs;\r\n","import Symbol from './_Symbol.js';\r\nimport arrayMap from './_arrayMap.js';\r\nimport isArray from './isArray.js';\r\nimport isSymbol from './isSymbol.js';\r\n\r\n/** Used as references for various `Number` constants. */\r\nvar INFINITY = 1 / 0;\r\n\r\n/** Used to convert symbols to primitives and strings. */\r\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\r\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\r\n\r\n/**\r\n * The base implementation of `_.toString` which doesn't convert nullish\r\n * values to empty strings.\r\n *\r\n * @private\r\n * @param {*} value The value to process.\r\n * @returns {string} Returns the string.\r\n */\r\nfunction baseToString(value) {\r\n  // Exit early for strings to avoid a performance hit in some environments.\r\n  if (typeof value == 'string') {\r\n    return value;\r\n  }\r\n  if (isArray(value)) {\r\n    // Recursively convert values (susceptible to call stack limits).\r\n    return arrayMap(value, baseToString) + '';\r\n  }\r\n  if (isSymbol(value)) {\r\n    return symbolToString ? symbolToString.call(value) : '';\r\n  }\r\n  var result = (value + '');\r\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\r\n}\r\n\r\nexport default baseToString;\r\n","/**\r\n * The base implementation of `_.unary` without support for storing metadata.\r\n *\r\n * @private\r\n * @param {Function} func The function to cap arguments for.\r\n * @returns {Function} Returns the new capped function.\r\n */\r\nfunction baseUnary(func) {\r\n  return function(value) {\r\n    return func(value);\r\n  };\r\n}\r\n\r\nexport default baseUnary;\r\n","import SetCache from './_SetCache.js';\r\nimport arrayIncludes from './_arrayIncludes.js';\r\nimport arrayIncludesWith from './_arrayIncludesWith.js';\r\nimport cacheHas from './_cacheHas.js';\r\nimport createSet from './_createSet.js';\r\nimport setToArray from './_setToArray.js';\r\n\r\n/** Used as the size to enable large array optimizations. */\r\nvar LARGE_ARRAY_SIZE = 200;\r\n\r\n/**\r\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array} array The array to inspect.\r\n * @param {Function} [iteratee] The iteratee invoked per element.\r\n * @param {Function} [comparator] The comparator invoked per element.\r\n * @returns {Array} Returns the new duplicate free array.\r\n */\r\nfunction baseUniq(array, iteratee, comparator) {\r\n  var index = -1,\r\n      includes = arrayIncludes,\r\n      length = array.length,\r\n      isCommon = true,\r\n      result = [],\r\n      seen = result;\r\n\r\n  if (comparator) {\r\n    isCommon = false;\r\n    includes = arrayIncludesWith;\r\n  }\r\n  else if (length >= LARGE_ARRAY_SIZE) {\r\n    var set = iteratee ? null : createSet(array);\r\n    if (set) {\r\n      return setToArray(set);\r\n    }\r\n    isCommon = false;\r\n    includes = cacheHas;\r\n    seen = new SetCache;\r\n  }\r\n  else {\r\n    seen = iteratee ? [] : result;\r\n  }\r\n  outer:\r\n  while (++index < length) {\r\n    var value = array[index],\r\n        computed = iteratee ? iteratee(value) : value;\r\n\r\n    value = (comparator || value !== 0) ? value : 0;\r\n    if (isCommon && computed === computed) {\r\n      var seenIndex = seen.length;\r\n      while (seenIndex--) {\r\n        if (seen[seenIndex] === computed) {\r\n          continue outer;\r\n        }\r\n      }\r\n      if (iteratee) {\r\n        seen.push(computed);\r\n      }\r\n      result.push(value);\r\n    }\r\n    else if (!includes(seen, computed, comparator)) {\r\n      if (seen !== result) {\r\n        seen.push(computed);\r\n      }\r\n      result.push(value);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default baseUniq;\r\n","import castPath from './_castPath.js';\r\nimport last from './last.js';\r\nimport parent from './_parent.js';\r\nimport toKey from './_toKey.js';\r\n\r\n/**\r\n * The base implementation of `_.unset`.\r\n *\r\n * @private\r\n * @param {Object} object The object to modify.\r\n * @param {Array|string} path The property path to unset.\r\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\r\n */\r\nfunction baseUnset(object, path) {\r\n  path = castPath(path, object);\r\n  object = parent(object, path);\r\n  return object == null || delete object[toKey(last(path))];\r\n}\r\n\r\nexport default baseUnset;\r\n","import baseGet from './_baseGet.js';\r\nimport baseSet from './_baseSet.js';\r\n\r\n/**\r\n * The base implementation of `_.update`.\r\n *\r\n * @private\r\n * @param {Object} object The object to modify.\r\n * @param {Array|string} path The path of the property to update.\r\n * @param {Function} updater The function to produce the updated value.\r\n * @param {Function} [customizer] The function to customize path creation.\r\n * @returns {Object} Returns `object`.\r\n */\r\nfunction baseUpdate(object, path, updater, customizer) {\r\n  return baseSet(object, path, updater(baseGet(object, path)), customizer);\r\n}\r\n\r\nexport default baseUpdate;\r\n","import arrayMap from './_arrayMap.js';\r\n\r\n/**\r\n * The base implementation of `_.values` and `_.valuesIn` which creates an\r\n * array of `object` property values corresponding to the property names\r\n * of `props`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @param {Array} props The property names to get values for.\r\n * @returns {Object} Returns the array of property values.\r\n */\r\nfunction baseValues(object, props) {\r\n  return arrayMap(props, function(key) {\r\n    return object[key];\r\n  });\r\n}\r\n\r\nexport default baseValues;\r\n","import baseSlice from './_baseSlice.js';\r\n\r\n/**\r\n * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\r\n * without support for iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array} array The array to query.\r\n * @param {Function} predicate The function invoked per iteration.\r\n * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\r\n * @param {boolean} [fromRight] Specify iterating from right to left.\r\n * @returns {Array} Returns the slice of `array`.\r\n */\r\nfunction baseWhile(array, predicate, isDrop, fromRight) {\r\n  var length = array.length,\r\n      index = fromRight ? length : -1;\r\n\r\n  while ((fromRight ? index-- : ++index < length) &&\r\n    predicate(array[index], index, array)) {}\r\n\r\n  return isDrop\r\n    ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\r\n    : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\r\n}\r\n\r\nexport default baseWhile;\r\n","import LazyWrapper from './_LazyWrapper.js';\r\nimport arrayPush from './_arrayPush.js';\r\nimport arrayReduce from './_arrayReduce.js';\r\n\r\n/**\r\n * The base implementation of `wrapperValue` which returns the result of\r\n * performing a sequence of actions on the unwrapped `value`, where each\r\n * successive action is supplied the return value of the previous.\r\n *\r\n * @private\r\n * @param {*} value The unwrapped value.\r\n * @param {Array} actions Actions to perform to resolve the unwrapped value.\r\n * @returns {*} Returns the resolved value.\r\n */\r\nfunction baseWrapperValue(value, actions) {\r\n  var result = value;\r\n  if (result instanceof LazyWrapper) {\r\n    result = result.value();\r\n  }\r\n  return arrayReduce(actions, function(result, action) {\r\n    return action.func.apply(action.thisArg, arrayPush([result], action.args));\r\n  }, result);\r\n}\r\n\r\nexport default baseWrapperValue;\r\n","import baseDifference from './_baseDifference.js';\r\nimport baseFlatten from './_baseFlatten.js';\r\nimport baseUniq from './_baseUniq.js';\r\n\r\n/**\r\n * The base implementation of methods like `_.xor`, without support for\r\n * iteratee shorthands, that accepts an array of arrays to inspect.\r\n *\r\n * @private\r\n * @param {Array} arrays The arrays to inspect.\r\n * @param {Function} [iteratee] The iteratee invoked per element.\r\n * @param {Function} [comparator] The comparator invoked per element.\r\n * @returns {Array} Returns the new array of values.\r\n */\r\nfunction baseXor(arrays, iteratee, comparator) {\r\n  var length = arrays.length;\r\n  if (length < 2) {\r\n    return length ? baseUniq(arrays[0]) : [];\r\n  }\r\n  var index = -1,\r\n      result = Array(length);\r\n\r\n  while (++index < length) {\r\n    var array = arrays[index],\r\n        othIndex = -1;\r\n\r\n    while (++othIndex < length) {\r\n      if (othIndex != index) {\r\n        result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\r\n      }\r\n    }\r\n  }\r\n  return baseUniq(baseFlatten(result, 1), iteratee, comparator);\r\n}\r\n\r\nexport default baseXor;\r\n","/**\r\n * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\r\n *\r\n * @private\r\n * @param {Array} props The property identifiers.\r\n * @param {Array} values The property values.\r\n * @param {Function} assignFunc The function to assign values.\r\n * @returns {Object} Returns the new object.\r\n */\r\nfunction baseZipObject(props, values, assignFunc) {\r\n  var index = -1,\r\n      length = props.length,\r\n      valsLength = values.length,\r\n      result = {};\r\n\r\n  while (++index < length) {\r\n    var value = index < valsLength ? values[index] : undefined;\r\n    assignFunc(result, props[index], value);\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default baseZipObject;\r\n","/**\r\n * Checks if a `cache` value for `key` exists.\r\n *\r\n * @private\r\n * @param {Object} cache The cache to query.\r\n * @param {string} key The key of the entry to check.\r\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\r\n */\r\nfunction cacheHas(cache, key) {\r\n  return cache.has(key);\r\n}\r\n\r\nexport default cacheHas;\r\n","import isArrayLikeObject from './isArrayLikeObject.js';\r\n\r\n/**\r\n * Casts `value` to an empty array if it's not an array like object.\r\n *\r\n * @private\r\n * @param {*} value The value to inspect.\r\n * @returns {Array|Object} Returns the cast array-like object.\r\n */\r\nfunction castArrayLikeObject(value) {\r\n  return isArrayLikeObject(value) ? value : [];\r\n}\r\n\r\nexport default castArrayLikeObject;\r\n","import identity from './identity.js';\r\n\r\n/**\r\n * Casts `value` to `identity` if it's not a function.\r\n *\r\n * @private\r\n * @param {*} value The value to inspect.\r\n * @returns {Function} Returns cast function.\r\n */\r\nfunction castFunction(value) {\r\n  return typeof value == 'function' ? value : identity;\r\n}\r\n\r\nexport default castFunction;\r\n","import isArray from './isArray.js';\r\nimport isKey from './_isKey.js';\r\nimport stringToPath from './_stringToPath.js';\r\nimport toString from './toString.js';\r\n\r\n/**\r\n * Casts `value` to a path array if it's not one.\r\n *\r\n * @private\r\n * @param {*} value The value to inspect.\r\n * @param {Object} [object] The object to query keys on.\r\n * @returns {Array} Returns the cast property path array.\r\n */\r\nfunction castPath(value, object) {\r\n  if (isArray(value)) {\r\n    return value;\r\n  }\r\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\r\n}\r\n\r\nexport default castPath;\r\n","import baseRest from './_baseRest.js';\r\n\r\n/**\r\n * A `baseRest` alias which can be replaced with `identity` by module\r\n * replacement plugins.\r\n *\r\n * @private\r\n * @type {Function}\r\n * @param {Function} func The function to apply a rest parameter to.\r\n * @returns {Function} Returns the new function.\r\n */\r\nvar castRest = baseRest;\r\n\r\nexport default castRest;\r\n","import baseSlice from './_baseSlice.js';\r\n\r\n/**\r\n * Casts `array` to a slice if it's needed.\r\n *\r\n * @private\r\n * @param {Array} array The array to inspect.\r\n * @param {number} start The start position.\r\n * @param {number} [end=array.length] The end position.\r\n * @returns {Array} Returns the cast slice.\r\n */\r\nfunction castSlice(array, start, end) {\r\n  var length = array.length;\r\n  end = end === undefined ? length : end;\r\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\r\n}\r\n\r\nexport default castSlice;\r\n","import baseIndexOf from './_baseIndexOf.js';\r\n\r\n/**\r\n * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\r\n * that is not found in the character symbols.\r\n *\r\n * @private\r\n * @param {Array} strSymbols The string symbols to inspect.\r\n * @param {Array} chrSymbols The character symbols to find.\r\n * @returns {number} Returns the index of the last unmatched string symbol.\r\n */\r\nfunction charsEndIndex(strSymbols, chrSymbols) {\r\n  var index = strSymbols.length;\r\n\r\n  while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\r\n  return index;\r\n}\r\n\r\nexport default charsEndIndex;\r\n","import baseIndexOf from './_baseIndexOf.js';\r\n\r\n/**\r\n * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\r\n * that is not found in the character symbols.\r\n *\r\n * @private\r\n * @param {Array} strSymbols The string symbols to inspect.\r\n * @param {Array} chrSymbols The character symbols to find.\r\n * @returns {number} Returns the index of the first unmatched string symbol.\r\n */\r\nfunction charsStartIndex(strSymbols, chrSymbols) {\r\n  var index = -1,\r\n      length = strSymbols.length;\r\n\r\n  while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\r\n  return index;\r\n}\r\n\r\nexport default charsStartIndex;\r\n","import Uint8Array from './_Uint8Array.js';\r\n\r\n/**\r\n * Creates a clone of `arrayBuffer`.\r\n *\r\n * @private\r\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\r\n * @returns {ArrayBuffer} Returns the cloned array buffer.\r\n */\r\nfunction cloneArrayBuffer(arrayBuffer) {\r\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\r\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\r\n  return result;\r\n}\r\n\r\nexport default cloneArrayBuffer;\r\n","import root from './_root.js';\r\n\r\n/** Detect free variable `exports`. */\r\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\r\n\r\n/** Detect free variable `module`. */\r\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\r\n\r\n/** Detect the popular CommonJS extension `module.exports`. */\r\nvar moduleExports = freeModule && freeModule.exports === freeExports;\r\n\r\n/** Built-in value references. */\r\nvar Buffer = moduleExports ? root.Buffer : undefined,\r\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\r\n\r\n/**\r\n * Creates a clone of  `buffer`.\r\n *\r\n * @private\r\n * @param {Buffer} buffer The buffer to clone.\r\n * @param {boolean} [isDeep] Specify a deep clone.\r\n * @returns {Buffer} Returns the cloned buffer.\r\n */\r\nfunction cloneBuffer(buffer, isDeep) {\r\n  if (isDeep) {\r\n    return buffer.slice();\r\n  }\r\n  var length = buffer.length,\r\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\r\n\r\n  buffer.copy(result);\r\n  return result;\r\n}\r\n\r\nexport default cloneBuffer;\r\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\r\n\r\n/**\r\n * Creates a clone of `dataView`.\r\n *\r\n * @private\r\n * @param {Object} dataView The data view to clone.\r\n * @param {boolean} [isDeep] Specify a deep clone.\r\n * @returns {Object} Returns the cloned data view.\r\n */\r\nfunction cloneDataView(dataView, isDeep) {\r\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\r\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\r\n}\r\n\r\nexport default cloneDataView;\r\n","/** Used to match `RegExp` flags from their coerced string values. */\r\nvar reFlags = /\\w*$/;\r\n\r\n/**\r\n * Creates a clone of `regexp`.\r\n *\r\n * @private\r\n * @param {Object} regexp The regexp to clone.\r\n * @returns {Object} Returns the cloned regexp.\r\n */\r\nfunction cloneRegExp(regexp) {\r\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\r\n  result.lastIndex = regexp.lastIndex;\r\n  return result;\r\n}\r\n\r\nexport default cloneRegExp;\r\n","import Symbol from './_Symbol.js';\r\n\r\n/** Used to convert symbols to primitives and strings. */\r\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\r\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\r\n\r\n/**\r\n * Creates a clone of the `symbol` object.\r\n *\r\n * @private\r\n * @param {Object} symbol The symbol object to clone.\r\n * @returns {Object} Returns the cloned symbol object.\r\n */\r\nfunction cloneSymbol(symbol) {\r\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\r\n}\r\n\r\nexport default cloneSymbol;\r\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\r\n\r\n/**\r\n * Creates a clone of `typedArray`.\r\n *\r\n * @private\r\n * @param {Object} typedArray The typed array to clone.\r\n * @param {boolean} [isDeep] Specify a deep clone.\r\n * @returns {Object} Returns the cloned typed array.\r\n */\r\nfunction cloneTypedArray(typedArray, isDeep) {\r\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\r\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\r\n}\r\n\r\nexport default cloneTypedArray;\r\n","import isSymbol from './isSymbol.js';\r\n\r\n/**\r\n * Compares values to sort them in ascending order.\r\n *\r\n * @private\r\n * @param {*} value The value to compare.\r\n * @param {*} other The other value to compare.\r\n * @returns {number} Returns the sort order indicator for `value`.\r\n */\r\nfunction compareAscending(value, other) {\r\n  if (value !== other) {\r\n    var valIsDefined = value !== undefined,\r\n        valIsNull = value === null,\r\n        valIsReflexive = value === value,\r\n        valIsSymbol = isSymbol(value);\r\n\r\n    var othIsDefined = other !== undefined,\r\n        othIsNull = other === null,\r\n        othIsReflexive = other === other,\r\n        othIsSymbol = isSymbol(other);\r\n\r\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\r\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\r\n        (valIsNull && othIsDefined && othIsReflexive) ||\r\n        (!valIsDefined && othIsReflexive) ||\r\n        !valIsReflexive) {\r\n      return 1;\r\n    }\r\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\r\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\r\n        (othIsNull && valIsDefined && valIsReflexive) ||\r\n        (!othIsDefined && valIsReflexive) ||\r\n        !othIsReflexive) {\r\n      return -1;\r\n    }\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport default compareAscending;\r\n","import compareAscending from './_compareAscending.js';\r\n\r\n/**\r\n * Used by `_.orderBy` to compare multiple properties of a value to another\r\n * and stable sort them.\r\n *\r\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\r\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\r\n * of corresponding values.\r\n *\r\n * @private\r\n * @param {Object} object The object to compare.\r\n * @param {Object} other The other object to compare.\r\n * @param {boolean[]|string[]} orders The order to sort by for each property.\r\n * @returns {number} Returns the sort order indicator for `object`.\r\n */\r\nfunction compareMultiple(object, other, orders) {\r\n  var index = -1,\r\n      objCriteria = object.criteria,\r\n      othCriteria = other.criteria,\r\n      length = objCriteria.length,\r\n      ordersLength = orders.length;\r\n\r\n  while (++index < length) {\r\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\r\n    if (result) {\r\n      if (index >= ordersLength) {\r\n        return result;\r\n      }\r\n      var order = orders[index];\r\n      return result * (order == 'desc' ? -1 : 1);\r\n    }\r\n  }\r\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\r\n  // that causes it, under certain circumstances, to provide the same value for\r\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\r\n  // for more details.\r\n  //\r\n  // This also ensures a stable sort in V8 and other engines.\r\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\r\n  return object.index - other.index;\r\n}\r\n\r\nexport default compareMultiple;\r\n","/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMax = Math.max;\r\n\r\n/**\r\n * Creates an array that is the composition of partially applied arguments,\r\n * placeholders, and provided arguments into a single array of arguments.\r\n *\r\n * @private\r\n * @param {Array} args The provided arguments.\r\n * @param {Array} partials The arguments to prepend to those provided.\r\n * @param {Array} holders The `partials` placeholder indexes.\r\n * @params {boolean} [isCurried] Specify composing for a curried function.\r\n * @returns {Array} Returns the new array of composed arguments.\r\n */\r\nfunction composeArgs(args, partials, holders, isCurried) {\r\n  var argsIndex = -1,\r\n      argsLength = args.length,\r\n      holdersLength = holders.length,\r\n      leftIndex = -1,\r\n      leftLength = partials.length,\r\n      rangeLength = nativeMax(argsLength - holdersLength, 0),\r\n      result = Array(leftLength + rangeLength),\r\n      isUncurried = !isCurried;\r\n\r\n  while (++leftIndex < leftLength) {\r\n    result[leftIndex] = partials[leftIndex];\r\n  }\r\n  while (++argsIndex < holdersLength) {\r\n    if (isUncurried || argsIndex < argsLength) {\r\n      result[holders[argsIndex]] = args[argsIndex];\r\n    }\r\n  }\r\n  while (rangeLength--) {\r\n    result[leftIndex++] = args[argsIndex++];\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default composeArgs;\r\n","/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMax = Math.max;\r\n\r\n/**\r\n * This function is like `composeArgs` except that the arguments composition\r\n * is tailored for `_.partialRight`.\r\n *\r\n * @private\r\n * @param {Array} args The provided arguments.\r\n * @param {Array} partials The arguments to append to those provided.\r\n * @param {Array} holders The `partials` placeholder indexes.\r\n * @params {boolean} [isCurried] Specify composing for a curried function.\r\n * @returns {Array} Returns the new array of composed arguments.\r\n */\r\nfunction composeArgsRight(args, partials, holders, isCurried) {\r\n  var argsIndex = -1,\r\n      argsLength = args.length,\r\n      holdersIndex = -1,\r\n      holdersLength = holders.length,\r\n      rightIndex = -1,\r\n      rightLength = partials.length,\r\n      rangeLength = nativeMax(argsLength - holdersLength, 0),\r\n      result = Array(rangeLength + rightLength),\r\n      isUncurried = !isCurried;\r\n\r\n  while (++argsIndex < rangeLength) {\r\n    result[argsIndex] = args[argsIndex];\r\n  }\r\n  var offset = argsIndex;\r\n  while (++rightIndex < rightLength) {\r\n    result[offset + rightIndex] = partials[rightIndex];\r\n  }\r\n  while (++holdersIndex < holdersLength) {\r\n    if (isUncurried || argsIndex < argsLength) {\r\n      result[offset + holders[holdersIndex]] = args[argsIndex++];\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default composeArgsRight;\r\n","/**\r\n * Copies the values of `source` to `array`.\r\n *\r\n * @private\r\n * @param {Array} source The array to copy values from.\r\n * @param {Array} [array=[]] The array to copy values to.\r\n * @returns {Array} Returns `array`.\r\n */\r\nfunction copyArray(source, array) {\r\n  var index = -1,\r\n      length = source.length;\r\n\r\n  array || (array = Array(length));\r\n  while (++index < length) {\r\n    array[index] = source[index];\r\n  }\r\n  return array;\r\n}\r\n\r\nexport default copyArray;\r\n","import assignValue from './_assignValue.js';\r\nimport baseAssignValue from './_baseAssignValue.js';\r\n\r\n/**\r\n * Copies properties of `source` to `object`.\r\n *\r\n * @private\r\n * @param {Object} source The object to copy properties from.\r\n * @param {Array} props The property identifiers to copy.\r\n * @param {Object} [object={}] The object to copy properties to.\r\n * @param {Function} [customizer] The function to customize copied values.\r\n * @returns {Object} Returns `object`.\r\n */\r\nfunction copyObject(source, props, object, customizer) {\r\n  var isNew = !object;\r\n  object || (object = {});\r\n\r\n  var index = -1,\r\n      length = props.length;\r\n\r\n  while (++index < length) {\r\n    var key = props[index];\r\n\r\n    var newValue = customizer\r\n      ? customizer(object[key], source[key], key, object, source)\r\n      : undefined;\r\n\r\n    if (newValue === undefined) {\r\n      newValue = source[key];\r\n    }\r\n    if (isNew) {\r\n      baseAssignValue(object, key, newValue);\r\n    } else {\r\n      assignValue(object, key, newValue);\r\n    }\r\n  }\r\n  return object;\r\n}\r\n\r\nexport default copyObject;\r\n","import copyObject from './_copyObject.js';\r\nimport getSymbols from './_getSymbols.js';\r\n\r\n/**\r\n * Copies own symbols of `source` to `object`.\r\n *\r\n * @private\r\n * @param {Object} source The object to copy symbols from.\r\n * @param {Object} [object={}] The object to copy symbols to.\r\n * @returns {Object} Returns `object`.\r\n */\r\nfunction copySymbols(source, object) {\r\n  return copyObject(source, getSymbols(source), object);\r\n}\r\n\r\nexport default copySymbols;\r\n","import copyObject from './_copyObject.js';\r\nimport getSymbolsIn from './_getSymbolsIn.js';\r\n\r\n/**\r\n * Copies own and inherited symbols of `source` to `object`.\r\n *\r\n * @private\r\n * @param {Object} source The object to copy symbols from.\r\n * @param {Object} [object={}] The object to copy symbols to.\r\n * @returns {Object} Returns `object`.\r\n */\r\nfunction copySymbolsIn(source, object) {\r\n  return copyObject(source, getSymbolsIn(source), object);\r\n}\r\n\r\nexport default copySymbolsIn;\r\n","import root from './_root.js';\r\n\r\n/** Used to detect overreaching core-js shims. */\r\nvar coreJsData = root['__core-js_shared__'];\r\n\r\nexport default coreJsData;\r\n","/**\r\n * Gets the number of `placeholder` occurrences in `array`.\r\n *\r\n * @private\r\n * @param {Array} array The array to inspect.\r\n * @param {*} placeholder The placeholder to search for.\r\n * @returns {number} Returns the placeholder count.\r\n */\r\nfunction countHolders(array, placeholder) {\r\n  var length = array.length,\r\n      result = 0;\r\n\r\n  while (length--) {\r\n    if (array[length] === placeholder) {\r\n      ++result;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default countHolders;\r\n","import arrayAggregator from './_arrayAggregator.js';\r\nimport baseAggregator from './_baseAggregator.js';\r\nimport baseIteratee from './_baseIteratee.js';\r\nimport isArray from './isArray.js';\r\n\r\n/**\r\n * Creates a function like `_.groupBy`.\r\n *\r\n * @private\r\n * @param {Function} setter The function to set accumulator values.\r\n * @param {Function} [initializer] The accumulator object initializer.\r\n * @returns {Function} Returns the new aggregator function.\r\n */\r\nfunction createAggregator(setter, initializer) {\r\n  return function(collection, iteratee) {\r\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\r\n        accumulator = initializer ? initializer() : {};\r\n\r\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\r\n  };\r\n}\r\n\r\nexport default createAggregator;\r\n","import baseRest from './_baseRest.js';\r\nimport isIterateeCall from './_isIterateeCall.js';\r\n\r\n/**\r\n * Creates a function like `_.assign`.\r\n *\r\n * @private\r\n * @param {Function} assigner The function to assign values.\r\n * @returns {Function} Returns the new assigner function.\r\n */\r\nfunction createAssigner(assigner) {\r\n  return baseRest(function(object, sources) {\r\n    var index = -1,\r\n        length = sources.length,\r\n        customizer = length > 1 ? sources[length - 1] : undefined,\r\n        guard = length > 2 ? sources[2] : undefined;\r\n\r\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\r\n      ? (length--, customizer)\r\n      : undefined;\r\n\r\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\r\n      customizer = length < 3 ? undefined : customizer;\r\n      length = 1;\r\n    }\r\n    object = Object(object);\r\n    while (++index < length) {\r\n      var source = sources[index];\r\n      if (source) {\r\n        assigner(object, source, index, customizer);\r\n      }\r\n    }\r\n    return object;\r\n  });\r\n}\r\n\r\nexport default createAssigner;\r\n","import isArrayLike from './isArrayLike.js';\r\n\r\n/**\r\n * Creates a `baseEach` or `baseEachRight` function.\r\n *\r\n * @private\r\n * @param {Function} eachFunc The function to iterate over a collection.\r\n * @param {boolean} [fromRight] Specify iterating from right to left.\r\n * @returns {Function} Returns the new base function.\r\n */\r\nfunction createBaseEach(eachFunc, fromRight) {\r\n  return function(collection, iteratee) {\r\n    if (collection == null) {\r\n      return collection;\r\n    }\r\n    if (!isArrayLike(collection)) {\r\n      return eachFunc(collection, iteratee);\r\n    }\r\n    var length = collection.length,\r\n        index = fromRight ? length : -1,\r\n        iterable = Object(collection);\r\n\r\n    while ((fromRight ? index-- : ++index < length)) {\r\n      if (iteratee(iterable[index], index, iterable) === false) {\r\n        break;\r\n      }\r\n    }\r\n    return collection;\r\n  };\r\n}\r\n\r\nexport default createBaseEach;\r\n","/**\r\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\r\n *\r\n * @private\r\n * @param {boolean} [fromRight] Specify iterating from right to left.\r\n * @returns {Function} Returns the new base function.\r\n */\r\nfunction createBaseFor(fromRight) {\r\n  return function(object, iteratee, keysFunc) {\r\n    var index = -1,\r\n        iterable = Object(object),\r\n        props = keysFunc(object),\r\n        length = props.length;\r\n\r\n    while (length--) {\r\n      var key = props[fromRight ? length : ++index];\r\n      if (iteratee(iterable[key], key, iterable) === false) {\r\n        break;\r\n      }\r\n    }\r\n    return object;\r\n  };\r\n}\r\n\r\nexport default createBaseFor;\r\n","import createCtor from './_createCtor.js';\r\nimport root from './_root.js';\r\n\r\n/** Used to compose bitmasks for function metadata. */\r\nvar WRAP_BIND_FLAG = 1;\r\n\r\n/**\r\n * Creates a function that wraps `func` to invoke it with the optional `this`\r\n * binding of `thisArg`.\r\n *\r\n * @private\r\n * @param {Function} func The function to wrap.\r\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\r\n * @param {*} [thisArg] The `this` binding of `func`.\r\n * @returns {Function} Returns the new wrapped function.\r\n */\r\nfunction createBind(func, bitmask, thisArg) {\r\n  var isBind = bitmask & WRAP_BIND_FLAG,\r\n      Ctor = createCtor(func);\r\n\r\n  function wrapper() {\r\n    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\r\n    return fn.apply(isBind ? thisArg : this, arguments);\r\n  }\r\n  return wrapper;\r\n}\r\n\r\nexport default createBind;\r\n","import castSlice from './_castSlice.js';\r\nimport hasUnicode from './_hasUnicode.js';\r\nimport stringToArray from './_stringToArray.js';\r\nimport toString from './toString.js';\r\n\r\n/**\r\n * Creates a function like `_.lowerFirst`.\r\n *\r\n * @private\r\n * @param {string} methodName The name of the `String` case method to use.\r\n * @returns {Function} Returns the new case function.\r\n */\r\nfunction createCaseFirst(methodName) {\r\n  return function(string) {\r\n    string = toString(string);\r\n\r\n    var strSymbols = hasUnicode(string)\r\n      ? stringToArray(string)\r\n      : undefined;\r\n\r\n    var chr = strSymbols\r\n      ? strSymbols[0]\r\n      : string.charAt(0);\r\n\r\n    var trailing = strSymbols\r\n      ? castSlice(strSymbols, 1).join('')\r\n      : string.slice(1);\r\n\r\n    return chr[methodName]() + trailing;\r\n  };\r\n}\r\n\r\nexport default createCaseFirst;\r\n","import arrayReduce from './_arrayReduce.js';\r\nimport deburr from './deburr.js';\r\nimport words from './words.js';\r\n\r\n/** Used to compose unicode capture groups. */\r\nvar rsApos = \"['\\u2019]\";\r\n\r\n/** Used to match apostrophes. */\r\nvar reApos = RegExp(rsApos, 'g');\r\n\r\n/**\r\n * Creates a function like `_.camelCase`.\r\n *\r\n * @private\r\n * @param {Function} callback The function to combine each word.\r\n * @returns {Function} Returns the new compounder function.\r\n */\r\nfunction createCompounder(callback) {\r\n  return function(string) {\r\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\r\n  };\r\n}\r\n\r\nexport default createCompounder;\r\n","import baseCreate from './_baseCreate.js';\r\nimport isObject from './isObject.js';\r\n\r\n/**\r\n * Creates a function that produces an instance of `Ctor` regardless of\r\n * whether it was invoked as part of a `new` expression or by `call` or `apply`.\r\n *\r\n * @private\r\n * @param {Function} Ctor The constructor to wrap.\r\n * @returns {Function} Returns the new wrapped function.\r\n */\r\nfunction createCtor(Ctor) {\r\n  return function() {\r\n    // Use a `switch` statement to work with class constructors. See\r\n    // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\r\n    // for more details.\r\n    var args = arguments;\r\n    switch (args.length) {\r\n      case 0: return new Ctor;\r\n      case 1: return new Ctor(args[0]);\r\n      case 2: return new Ctor(args[0], args[1]);\r\n      case 3: return new Ctor(args[0], args[1], args[2]);\r\n      case 4: return new Ctor(args[0], args[1], args[2], args[3]);\r\n      case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\r\n      case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\r\n      case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\r\n    }\r\n    var thisBinding = baseCreate(Ctor.prototype),\r\n        result = Ctor.apply(thisBinding, args);\r\n\r\n    // Mimic the constructor's `return` behavior.\r\n    // See https://es5.github.io/#x13.2.2 for more details.\r\n    return isObject(result) ? result : thisBinding;\r\n  };\r\n}\r\n\r\nexport default createCtor;\r\n","import apply from './_apply.js';\r\nimport createCtor from './_createCtor.js';\r\nimport createHybrid from './_createHybrid.js';\r\nimport createRecurry from './_createRecurry.js';\r\nimport getHolder from './_getHolder.js';\r\nimport replaceHolders from './_replaceHolders.js';\r\nimport root from './_root.js';\r\n\r\n/**\r\n * Creates a function that wraps `func` to enable currying.\r\n *\r\n * @private\r\n * @param {Function} func The function to wrap.\r\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\r\n * @param {number} arity The arity of `func`.\r\n * @returns {Function} Returns the new wrapped function.\r\n */\r\nfunction createCurry(func, bitmask, arity) {\r\n  var Ctor = createCtor(func);\r\n\r\n  function wrapper() {\r\n    var length = arguments.length,\r\n        args = Array(length),\r\n        index = length,\r\n        placeholder = getHolder(wrapper);\r\n\r\n    while (index--) {\r\n      args[index] = arguments[index];\r\n    }\r\n    var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\r\n      ? []\r\n      : replaceHolders(args, placeholder);\r\n\r\n    length -= holders.length;\r\n    if (length < arity) {\r\n      return createRecurry(\r\n        func, bitmask, createHybrid, wrapper.placeholder, undefined,\r\n        args, holders, undefined, undefined, arity - length);\r\n    }\r\n    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\r\n    return apply(fn, this, args);\r\n  }\r\n  return wrapper;\r\n}\r\n\r\nexport default createCurry;\r\n","import baseIteratee from './_baseIteratee.js';\r\nimport isArrayLike from './isArrayLike.js';\r\nimport keys from './keys.js';\r\n\r\n/**\r\n * Creates a `_.find` or `_.findLast` function.\r\n *\r\n * @private\r\n * @param {Function} findIndexFunc The function to find the collection index.\r\n * @returns {Function} Returns the new find function.\r\n */\r\nfunction createFind(findIndexFunc) {\r\n  return function(collection, predicate, fromIndex) {\r\n    var iterable = Object(collection);\r\n    if (!isArrayLike(collection)) {\r\n      var iteratee = baseIteratee(predicate, 3);\r\n      collection = keys(collection);\r\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\r\n    }\r\n    var index = findIndexFunc(collection, predicate, fromIndex);\r\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\r\n  };\r\n}\r\n\r\nexport default createFind;\r\n","import LodashWrapper from './_LodashWrapper.js';\r\nimport flatRest from './_flatRest.js';\r\nimport getData from './_getData.js';\r\nimport getFuncName from './_getFuncName.js';\r\nimport isArray from './isArray.js';\r\nimport isLaziable from './_isLaziable.js';\r\n\r\n/** Error message constants. */\r\nvar FUNC_ERROR_TEXT = 'Expected a function';\r\n\r\n/** Used to compose bitmasks for function metadata. */\r\nvar WRAP_CURRY_FLAG = 8,\r\n    WRAP_PARTIAL_FLAG = 32,\r\n    WRAP_ARY_FLAG = 128,\r\n    WRAP_REARG_FLAG = 256;\r\n\r\n/**\r\n * Creates a `_.flow` or `_.flowRight` function.\r\n *\r\n * @private\r\n * @param {boolean} [fromRight] Specify iterating from right to left.\r\n * @returns {Function} Returns the new flow function.\r\n */\r\nfunction createFlow(fromRight) {\r\n  return flatRest(function(funcs) {\r\n    var length = funcs.length,\r\n        index = length,\r\n        prereq = LodashWrapper.prototype.thru;\r\n\r\n    if (fromRight) {\r\n      funcs.reverse();\r\n    }\r\n    while (index--) {\r\n      var func = funcs[index];\r\n      if (typeof func != 'function') {\r\n        throw new TypeError(FUNC_ERROR_TEXT);\r\n      }\r\n      if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\r\n        var wrapper = new LodashWrapper([], true);\r\n      }\r\n    }\r\n    index = wrapper ? index : length;\r\n    while (++index < length) {\r\n      func = funcs[index];\r\n\r\n      var funcName = getFuncName(func),\r\n          data = funcName == 'wrapper' ? getData(func) : undefined;\r\n\r\n      if (data && isLaziable(data[0]) &&\r\n            data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\r\n            !data[4].length && data[9] == 1\r\n          ) {\r\n        wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\r\n      } else {\r\n        wrapper = (func.length == 1 && isLaziable(func))\r\n          ? wrapper[funcName]()\r\n          : wrapper.thru(func);\r\n      }\r\n    }\r\n    return function() {\r\n      var args = arguments,\r\n          value = args[0];\r\n\r\n      if (wrapper && args.length == 1 && isArray(value)) {\r\n        return wrapper.plant(value).value();\r\n      }\r\n      var index = 0,\r\n          result = length ? funcs[index].apply(this, args) : value;\r\n\r\n      while (++index < length) {\r\n        result = funcs[index].call(this, result);\r\n      }\r\n      return result;\r\n    };\r\n  });\r\n}\r\n\r\nexport default createFlow;\r\n","import composeArgs from './_composeArgs.js';\r\nimport composeArgsRight from './_composeArgsRight.js';\r\nimport countHolders from './_countHolders.js';\r\nimport createCtor from './_createCtor.js';\r\nimport createRecurry from './_createRecurry.js';\r\nimport getHolder from './_getHolder.js';\r\nimport reorder from './_reorder.js';\r\nimport replaceHolders from './_replaceHolders.js';\r\nimport root from './_root.js';\r\n\r\n/** Used to compose bitmasks for function metadata. */\r\nvar WRAP_BIND_FLAG = 1,\r\n    WRAP_BIND_KEY_FLAG = 2,\r\n    WRAP_CURRY_FLAG = 8,\r\n    WRAP_CURRY_RIGHT_FLAG = 16,\r\n    WRAP_ARY_FLAG = 128,\r\n    WRAP_FLIP_FLAG = 512;\r\n\r\n/**\r\n * Creates a function that wraps `func` to invoke it with optional `this`\r\n * binding of `thisArg`, partial application, and currying.\r\n *\r\n * @private\r\n * @param {Function|string} func The function or method name to wrap.\r\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\r\n * @param {*} [thisArg] The `this` binding of `func`.\r\n * @param {Array} [partials] The arguments to prepend to those provided to\r\n *  the new function.\r\n * @param {Array} [holders] The `partials` placeholder indexes.\r\n * @param {Array} [partialsRight] The arguments to append to those provided\r\n *  to the new function.\r\n * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\r\n * @param {Array} [argPos] The argument positions of the new function.\r\n * @param {number} [ary] The arity cap of `func`.\r\n * @param {number} [arity] The arity of `func`.\r\n * @returns {Function} Returns the new wrapped function.\r\n */\r\nfunction createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\r\n  var isAry = bitmask & WRAP_ARY_FLAG,\r\n      isBind = bitmask & WRAP_BIND_FLAG,\r\n      isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\r\n      isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\r\n      isFlip = bitmask & WRAP_FLIP_FLAG,\r\n      Ctor = isBindKey ? undefined : createCtor(func);\r\n\r\n  function wrapper() {\r\n    var length = arguments.length,\r\n        args = Array(length),\r\n        index = length;\r\n\r\n    while (index--) {\r\n      args[index] = arguments[index];\r\n    }\r\n    if (isCurried) {\r\n      var placeholder = getHolder(wrapper),\r\n          holdersCount = countHolders(args, placeholder);\r\n    }\r\n    if (partials) {\r\n      args = composeArgs(args, partials, holders, isCurried);\r\n    }\r\n    if (partialsRight) {\r\n      args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\r\n    }\r\n    length -= holdersCount;\r\n    if (isCurried && length < arity) {\r\n      var newHolders = replaceHolders(args, placeholder);\r\n      return createRecurry(\r\n        func, bitmask, createHybrid, wrapper.placeholder, thisArg,\r\n        args, newHolders, argPos, ary, arity - length\r\n      );\r\n    }\r\n    var thisBinding = isBind ? thisArg : this,\r\n        fn = isBindKey ? thisBinding[func] : func;\r\n\r\n    length = args.length;\r\n    if (argPos) {\r\n      args = reorder(args, argPos);\r\n    } else if (isFlip && length > 1) {\r\n      args.reverse();\r\n    }\r\n    if (isAry && ary < length) {\r\n      args.length = ary;\r\n    }\r\n    if (this && this !== root && this instanceof wrapper) {\r\n      fn = Ctor || createCtor(fn);\r\n    }\r\n    return fn.apply(thisBinding, args);\r\n  }\r\n  return wrapper;\r\n}\r\n\r\nexport default createHybrid;\r\n","import baseInverter from './_baseInverter.js';\r\n\r\n/**\r\n * Creates a function like `_.invertBy`.\r\n *\r\n * @private\r\n * @param {Function} setter The function to set accumulator values.\r\n * @param {Function} toIteratee The function to resolve iteratees.\r\n * @returns {Function} Returns the new inverter function.\r\n */\r\nfunction createInverter(setter, toIteratee) {\r\n  return function(object, iteratee) {\r\n    return baseInverter(object, setter, toIteratee(iteratee), {});\r\n  };\r\n}\r\n\r\nexport default createInverter;\r\n","import baseToNumber from './_baseToNumber.js';\r\nimport baseToString from './_baseToString.js';\r\n\r\n/**\r\n * Creates a function that performs a mathematical operation on two values.\r\n *\r\n * @private\r\n * @param {Function} operator The function to perform the operation.\r\n * @param {number} [defaultValue] The value used for `undefined` arguments.\r\n * @returns {Function} Returns the new mathematical operation function.\r\n */\r\nfunction createMathOperation(operator, defaultValue) {\r\n  return function(value, other) {\r\n    var result;\r\n    if (value === undefined && other === undefined) {\r\n      return defaultValue;\r\n    }\r\n    if (value !== undefined) {\r\n      result = value;\r\n    }\r\n    if (other !== undefined) {\r\n      if (result === undefined) {\r\n        return other;\r\n      }\r\n      if (typeof value == 'string' || typeof other == 'string') {\r\n        value = baseToString(value);\r\n        other = baseToString(other);\r\n      } else {\r\n        value = baseToNumber(value);\r\n        other = baseToNumber(other);\r\n      }\r\n      result = operator(value, other);\r\n    }\r\n    return result;\r\n  };\r\n}\r\n\r\nexport default createMathOperation;\r\n","import apply from './_apply.js';\r\nimport arrayMap from './_arrayMap.js';\r\nimport baseIteratee from './_baseIteratee.js';\r\nimport baseRest from './_baseRest.js';\r\nimport baseUnary from './_baseUnary.js';\r\nimport flatRest from './_flatRest.js';\r\n\r\n/**\r\n * Creates a function like `_.over`.\r\n *\r\n * @private\r\n * @param {Function} arrayFunc The function to iterate over iteratees.\r\n * @returns {Function} Returns the new over function.\r\n */\r\nfunction createOver(arrayFunc) {\r\n  return flatRest(function(iteratees) {\r\n    iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\r\n    return baseRest(function(args) {\r\n      var thisArg = this;\r\n      return arrayFunc(iteratees, function(iteratee) {\r\n        return apply(iteratee, thisArg, args);\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\nexport default createOver;\r\n","import baseRepeat from './_baseRepeat.js';\r\nimport baseToString from './_baseToString.js';\r\nimport castSlice from './_castSlice.js';\r\nimport hasUnicode from './_hasUnicode.js';\r\nimport stringSize from './_stringSize.js';\r\nimport stringToArray from './_stringToArray.js';\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeCeil = Math.ceil;\r\n\r\n/**\r\n * Creates the padding for `string` based on `length`. The `chars` string\r\n * is truncated if the number of characters exceeds `length`.\r\n *\r\n * @private\r\n * @param {number} length The padding length.\r\n * @param {string} [chars=' '] The string used as padding.\r\n * @returns {string} Returns the padding for `string`.\r\n */\r\nfunction createPadding(length, chars) {\r\n  chars = chars === undefined ? ' ' : baseToString(chars);\r\n\r\n  var charsLength = chars.length;\r\n  if (charsLength < 2) {\r\n    return charsLength ? baseRepeat(chars, length) : chars;\r\n  }\r\n  var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\r\n  return hasUnicode(chars)\r\n    ? castSlice(stringToArray(result), 0, length).join('')\r\n    : result.slice(0, length);\r\n}\r\n\r\nexport default createPadding;\r\n","import apply from './_apply.js';\r\nimport createCtor from './_createCtor.js';\r\nimport root from './_root.js';\r\n\r\n/** Used to compose bitmasks for function metadata. */\r\nvar WRAP_BIND_FLAG = 1;\r\n\r\n/**\r\n * Creates a function that wraps `func` to invoke it with the `this` binding\r\n * of `thisArg` and `partials` prepended to the arguments it receives.\r\n *\r\n * @private\r\n * @param {Function} func The function to wrap.\r\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\r\n * @param {*} thisArg The `this` binding of `func`.\r\n * @param {Array} partials The arguments to prepend to those provided to\r\n *  the new function.\r\n * @returns {Function} Returns the new wrapped function.\r\n */\r\nfunction createPartial(func, bitmask, thisArg, partials) {\r\n  var isBind = bitmask & WRAP_BIND_FLAG,\r\n      Ctor = createCtor(func);\r\n\r\n  function wrapper() {\r\n    var argsIndex = -1,\r\n        argsLength = arguments.length,\r\n        leftIndex = -1,\r\n        leftLength = partials.length,\r\n        args = Array(leftLength + argsLength),\r\n        fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\r\n\r\n    while (++leftIndex < leftLength) {\r\n      args[leftIndex] = partials[leftIndex];\r\n    }\r\n    while (argsLength--) {\r\n      args[leftIndex++] = arguments[++argsIndex];\r\n    }\r\n    return apply(fn, isBind ? thisArg : this, args);\r\n  }\r\n  return wrapper;\r\n}\r\n\r\nexport default createPartial;\r\n","import baseRange from './_baseRange.js';\r\nimport isIterateeCall from './_isIterateeCall.js';\r\nimport toFinite from './toFinite.js';\r\n\r\n/**\r\n * Creates a `_.range` or `_.rangeRight` function.\r\n *\r\n * @private\r\n * @param {boolean} [fromRight] Specify iterating from right to left.\r\n * @returns {Function} Returns the new range function.\r\n */\r\nfunction createRange(fromRight) {\r\n  return function(start, end, step) {\r\n    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\r\n      end = step = undefined;\r\n    }\r\n    // Ensure the sign of `-0` is preserved.\r\n    start = toFinite(start);\r\n    if (end === undefined) {\r\n      end = start;\r\n      start = 0;\r\n    } else {\r\n      end = toFinite(end);\r\n    }\r\n    step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\r\n    return baseRange(start, end, step, fromRight);\r\n  };\r\n}\r\n\r\nexport default createRange;\r\n","import isLaziable from './_isLaziable.js';\r\nimport setData from './_setData.js';\r\nimport setWrapToString from './_setWrapToString.js';\r\n\r\n/** Used to compose bitmasks for function metadata. */\r\nvar WRAP_BIND_FLAG = 1,\r\n    WRAP_BIND_KEY_FLAG = 2,\r\n    WRAP_CURRY_BOUND_FLAG = 4,\r\n    WRAP_CURRY_FLAG = 8,\r\n    WRAP_PARTIAL_FLAG = 32,\r\n    WRAP_PARTIAL_RIGHT_FLAG = 64;\r\n\r\n/**\r\n * Creates a function that wraps `func` to continue currying.\r\n *\r\n * @private\r\n * @param {Function} func The function to wrap.\r\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\r\n * @param {Function} wrapFunc The function to create the `func` wrapper.\r\n * @param {*} placeholder The placeholder value.\r\n * @param {*} [thisArg] The `this` binding of `func`.\r\n * @param {Array} [partials] The arguments to prepend to those provided to\r\n *  the new function.\r\n * @param {Array} [holders] The `partials` placeholder indexes.\r\n * @param {Array} [argPos] The argument positions of the new function.\r\n * @param {number} [ary] The arity cap of `func`.\r\n * @param {number} [arity] The arity of `func`.\r\n * @returns {Function} Returns the new wrapped function.\r\n */\r\nfunction createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\r\n  var isCurry = bitmask & WRAP_CURRY_FLAG,\r\n      newHolders = isCurry ? holders : undefined,\r\n      newHoldersRight = isCurry ? undefined : holders,\r\n      newPartials = isCurry ? partials : undefined,\r\n      newPartialsRight = isCurry ? undefined : partials;\r\n\r\n  bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\r\n  bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\r\n\r\n  if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\r\n    bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\r\n  }\r\n  var newData = [\r\n    func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\r\n    newHoldersRight, argPos, ary, arity\r\n  ];\r\n\r\n  var result = wrapFunc.apply(undefined, newData);\r\n  if (isLaziable(func)) {\r\n    setData(result, newData);\r\n  }\r\n  result.placeholder = placeholder;\r\n  return setWrapToString(result, func, bitmask);\r\n}\r\n\r\nexport default createRecurry;\r\n","import toNumber from './toNumber.js';\r\n\r\n/**\r\n * Creates a function that performs a relational operation on two values.\r\n *\r\n * @private\r\n * @param {Function} operator The function to perform the operation.\r\n * @returns {Function} Returns the new relational operation function.\r\n */\r\nfunction createRelationalOperation(operator) {\r\n  return function(value, other) {\r\n    if (!(typeof value == 'string' && typeof other == 'string')) {\r\n      value = toNumber(value);\r\n      other = toNumber(other);\r\n    }\r\n    return operator(value, other);\r\n  };\r\n}\r\n\r\nexport default createRelationalOperation;\r\n","import root from './_root.js';\r\nimport toInteger from './toInteger.js';\r\nimport toNumber from './toNumber.js';\r\nimport toString from './toString.js';\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeIsFinite = root.isFinite,\r\n    nativeMin = Math.min;\r\n\r\n/**\r\n * Creates a function like `_.round`.\r\n *\r\n * @private\r\n * @param {string} methodName The name of the `Math` method to use when rounding.\r\n * @returns {Function} Returns the new round function.\r\n */\r\nfunction createRound(methodName) {\r\n  var func = Math[methodName];\r\n  return function(number, precision) {\r\n    number = toNumber(number);\r\n    precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\r\n    if (precision && nativeIsFinite(number)) {\r\n      // Shift with exponential notation to avoid floating-point issues.\r\n      // See [MDN](https://mdn.io/round#Examples) for more details.\r\n      var pair = (toString(number) + 'e').split('e'),\r\n          value = func(pair[0] + 'e' + (+pair[1] + precision));\r\n\r\n      pair = (toString(value) + 'e').split('e');\r\n      return +(pair[0] + 'e' + (+pair[1] - precision));\r\n    }\r\n    return func(number);\r\n  };\r\n}\r\n\r\nexport default createRound;\r\n","import Set from './_Set.js';\r\nimport noop from './noop.js';\r\nimport setToArray from './_setToArray.js';\r\n\r\n/** Used as references for various `Number` constants. */\r\nvar INFINITY = 1 / 0;\r\n\r\n/**\r\n * Creates a set object of `values`.\r\n *\r\n * @private\r\n * @param {Array} values The values to add to the set.\r\n * @returns {Object} Returns the new set.\r\n */\r\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\r\n  return new Set(values);\r\n};\r\n\r\nexport default createSet;\r\n","import baseToPairs from './_baseToPairs.js';\r\nimport getTag from './_getTag.js';\r\nimport mapToArray from './_mapToArray.js';\r\nimport setToPairs from './_setToPairs.js';\r\n\r\n/** `Object#toString` result references. */\r\nvar mapTag = '[object Map]',\r\n    setTag = '[object Set]';\r\n\r\n/**\r\n * Creates a `_.toPairs` or `_.toPairsIn` function.\r\n *\r\n * @private\r\n * @param {Function} keysFunc The function to get the keys of a given object.\r\n * @returns {Function} Returns the new pairs function.\r\n */\r\nfunction createToPairs(keysFunc) {\r\n  return function(object) {\r\n    var tag = getTag(object);\r\n    if (tag == mapTag) {\r\n      return mapToArray(object);\r\n    }\r\n    if (tag == setTag) {\r\n      return setToPairs(object);\r\n    }\r\n    return baseToPairs(object, keysFunc(object));\r\n  };\r\n}\r\n\r\nexport default createToPairs;\r\n","import baseSetData from './_baseSetData.js';\r\nimport createBind from './_createBind.js';\r\nimport createCurry from './_createCurry.js';\r\nimport createHybrid from './_createHybrid.js';\r\nimport createPartial from './_createPartial.js';\r\nimport getData from './_getData.js';\r\nimport mergeData from './_mergeData.js';\r\nimport setData from './_setData.js';\r\nimport setWrapToString from './_setWrapToString.js';\r\nimport toInteger from './toInteger.js';\r\n\r\n/** Error message constants. */\r\nvar FUNC_ERROR_TEXT = 'Expected a function';\r\n\r\n/** Used to compose bitmasks for function metadata. */\r\nvar WRAP_BIND_FLAG = 1,\r\n    WRAP_BIND_KEY_FLAG = 2,\r\n    WRAP_CURRY_FLAG = 8,\r\n    WRAP_CURRY_RIGHT_FLAG = 16,\r\n    WRAP_PARTIAL_FLAG = 32,\r\n    WRAP_PARTIAL_RIGHT_FLAG = 64;\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMax = Math.max;\r\n\r\n/**\r\n * Creates a function that either curries or invokes `func` with optional\r\n * `this` binding and partially applied arguments.\r\n *\r\n * @private\r\n * @param {Function|string} func The function or method name to wrap.\r\n * @param {number} bitmask The bitmask flags.\r\n *    1 - `_.bind`\r\n *    2 - `_.bindKey`\r\n *    4 - `_.curry` or `_.curryRight` of a bound function\r\n *    8 - `_.curry`\r\n *   16 - `_.curryRight`\r\n *   32 - `_.partial`\r\n *   64 - `_.partialRight`\r\n *  128 - `_.rearg`\r\n *  256 - `_.ary`\r\n *  512 - `_.flip`\r\n * @param {*} [thisArg] The `this` binding of `func`.\r\n * @param {Array} [partials] The arguments to be partially applied.\r\n * @param {Array} [holders] The `partials` placeholder indexes.\r\n * @param {Array} [argPos] The argument positions of the new function.\r\n * @param {number} [ary] The arity cap of `func`.\r\n * @param {number} [arity] The arity of `func`.\r\n * @returns {Function} Returns the new wrapped function.\r\n */\r\nfunction createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\r\n  var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\r\n  if (!isBindKey && typeof func != 'function') {\r\n    throw new TypeError(FUNC_ERROR_TEXT);\r\n  }\r\n  var length = partials ? partials.length : 0;\r\n  if (!length) {\r\n    bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\r\n    partials = holders = undefined;\r\n  }\r\n  ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\r\n  arity = arity === undefined ? arity : toInteger(arity);\r\n  length -= holders ? holders.length : 0;\r\n\r\n  if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\r\n    var partialsRight = partials,\r\n        holdersRight = holders;\r\n\r\n    partials = holders = undefined;\r\n  }\r\n  var data = isBindKey ? undefined : getData(func);\r\n\r\n  var newData = [\r\n    func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\r\n    argPos, ary, arity\r\n  ];\r\n\r\n  if (data) {\r\n    mergeData(newData, data);\r\n  }\r\n  func = newData[0];\r\n  bitmask = newData[1];\r\n  thisArg = newData[2];\r\n  partials = newData[3];\r\n  holders = newData[4];\r\n  arity = newData[9] = newData[9] === undefined\r\n    ? (isBindKey ? 0 : func.length)\r\n    : nativeMax(newData[9] - length, 0);\r\n\r\n  if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\r\n    bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\r\n  }\r\n  if (!bitmask || bitmask == WRAP_BIND_FLAG) {\r\n    var result = createBind(func, bitmask, thisArg);\r\n  } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\r\n    result = createCurry(func, bitmask, arity);\r\n  } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\r\n    result = createPartial(func, bitmask, thisArg, partials);\r\n  } else {\r\n    result = createHybrid.apply(undefined, newData);\r\n  }\r\n  var setter = data ? baseSetData : setData;\r\n  return setWrapToString(setter(result, newData), func, bitmask);\r\n}\r\n\r\nexport default createWrap;\r\n","import eq from './eq.js';\r\n\r\n/** Used for built-in method references. */\r\nvar objectProto = Object.prototype;\r\n\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n/**\r\n * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\r\n * of source objects to the destination object for all destination properties\r\n * that resolve to `undefined`.\r\n *\r\n * @private\r\n * @param {*} objValue The destination value.\r\n * @param {*} srcValue The source value.\r\n * @param {string} key The key of the property to assign.\r\n * @param {Object} object The parent object of `objValue`.\r\n * @returns {*} Returns the value to assign.\r\n */\r\nfunction customDefaultsAssignIn(objValue, srcValue, key, object) {\r\n  if (objValue === undefined ||\r\n      (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\r\n    return srcValue;\r\n  }\r\n  return objValue;\r\n}\r\n\r\nexport default customDefaultsAssignIn;\r\n","import baseMerge from './_baseMerge.js';\r\nimport isObject from './isObject.js';\r\n\r\n/**\r\n * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\r\n * objects into destination objects that are passed thru.\r\n *\r\n * @private\r\n * @param {*} objValue The destination value.\r\n * @param {*} srcValue The source value.\r\n * @param {string} key The key of the property to merge.\r\n * @param {Object} object The parent object of `objValue`.\r\n * @param {Object} source The parent object of `srcValue`.\r\n * @param {Object} [stack] Tracks traversed source values and their merged\r\n *  counterparts.\r\n * @returns {*} Returns the value to assign.\r\n */\r\nfunction customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\r\n  if (isObject(objValue) && isObject(srcValue)) {\r\n    // Recursively merge objects and arrays (susceptible to call stack limits).\r\n    stack.set(srcValue, objValue);\r\n    baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\r\n    stack['delete'](srcValue);\r\n  }\r\n  return objValue;\r\n}\r\n\r\nexport default customDefaultsMerge;\r\n","import isPlainObject from './isPlainObject.js';\r\n\r\n/**\r\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\r\n * objects.\r\n *\r\n * @private\r\n * @param {*} value The value to inspect.\r\n * @param {string} key The key of the property to inspect.\r\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\r\n */\r\nfunction customOmitClone(value) {\r\n  return isPlainObject(value) ? undefined : value;\r\n}\r\n\r\nexport default customOmitClone;\r\n","import basePropertyOf from './_basePropertyOf.js';\r\n\r\n/** Used to map Latin Unicode letters to basic Latin letters. */\r\nvar deburredLetters = {\r\n  // Latin-1 Supplement block.\r\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\r\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\r\n  '\\xc7': 'C',  '\\xe7': 'c',\r\n  '\\xd0': 'D',  '\\xf0': 'd',\r\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\r\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\r\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\r\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\r\n  '\\xd1': 'N',  '\\xf1': 'n',\r\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\r\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\r\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\r\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\r\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\r\n  '\\xc6': 'Ae', '\\xe6': 'ae',\r\n  '\\xde': 'Th', '\\xfe': 'th',\r\n  '\\xdf': 'ss',\r\n  // Latin Extended-A block.\r\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\r\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\r\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\r\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\r\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\r\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\r\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\r\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\r\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\r\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\r\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\r\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\r\n  '\\u0134': 'J',  '\\u0135': 'j',\r\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\r\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\r\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\r\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\r\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\r\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\r\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\r\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\r\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\r\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\r\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\r\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\r\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\r\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\r\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\r\n  '\\u0174': 'W',  '\\u0175': 'w',\r\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\r\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\r\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\r\n  '\\u0132': 'IJ', '\\u0133': 'ij',\r\n  '\\u0152': 'Oe', '\\u0153': 'oe',\r\n  '\\u0149': \"'n\", '\\u017f': 's'\r\n};\r\n\r\n/**\r\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\r\n * letters to basic Latin letters.\r\n *\r\n * @private\r\n * @param {string} letter The matched letter to deburr.\r\n * @returns {string} Returns the deburred letter.\r\n */\r\nvar deburrLetter = basePropertyOf(deburredLetters);\r\n\r\nexport default deburrLetter;\r\n","import getNative from './_getNative.js';\r\n\r\nvar defineProperty = (function() {\r\n  try {\r\n    var func = getNative(Object, 'defineProperty');\r\n    func({}, '', {});\r\n    return func;\r\n  } catch (e) {}\r\n}());\r\n\r\nexport default defineProperty;\r\n","import SetCache from './_SetCache.js';\r\nimport arraySome from './_arraySome.js';\r\nimport cacheHas from './_cacheHas.js';\r\n\r\n/** Used to compose bitmasks for value comparisons. */\r\nvar COMPARE_PARTIAL_FLAG = 1,\r\n    COMPARE_UNORDERED_FLAG = 2;\r\n\r\n/**\r\n * A specialized version of `baseIsEqualDeep` for arrays with support for\r\n * partial deep comparisons.\r\n *\r\n * @private\r\n * @param {Array} array The array to compare.\r\n * @param {Array} other The other array to compare.\r\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\r\n * @param {Function} customizer The function to customize comparisons.\r\n * @param {Function} equalFunc The function to determine equivalents of values.\r\n * @param {Object} stack Tracks traversed `array` and `other` objects.\r\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\r\n */\r\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\r\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\r\n      arrLength = array.length,\r\n      othLength = other.length;\r\n\r\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\r\n    return false;\r\n  }\r\n  // Assume cyclic values are equal.\r\n  var stacked = stack.get(array);\r\n  if (stacked && stack.get(other)) {\r\n    return stacked == other;\r\n  }\r\n  var index = -1,\r\n      result = true,\r\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\r\n\r\n  stack.set(array, other);\r\n  stack.set(other, array);\r\n\r\n  // Ignore non-index properties.\r\n  while (++index < arrLength) {\r\n    var arrValue = array[index],\r\n        othValue = other[index];\r\n\r\n    if (customizer) {\r\n      var compared = isPartial\r\n        ? customizer(othValue, arrValue, index, other, array, stack)\r\n        : customizer(arrValue, othValue, index, array, other, stack);\r\n    }\r\n    if (compared !== undefined) {\r\n      if (compared) {\r\n        continue;\r\n      }\r\n      result = false;\r\n      break;\r\n    }\r\n    // Recursively compare arrays (susceptible to call stack limits).\r\n    if (seen) {\r\n      if (!arraySome(other, function(othValue, othIndex) {\r\n            if (!cacheHas(seen, othIndex) &&\r\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\r\n              return seen.push(othIndex);\r\n            }\r\n          })) {\r\n        result = false;\r\n        break;\r\n      }\r\n    } else if (!(\r\n          arrValue === othValue ||\r\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\r\n        )) {\r\n      result = false;\r\n      break;\r\n    }\r\n  }\r\n  stack['delete'](array);\r\n  stack['delete'](other);\r\n  return result;\r\n}\r\n\r\nexport default equalArrays;\r\n","import Symbol from './_Symbol.js';\r\nimport Uint8Array from './_Uint8Array.js';\r\nimport eq from './eq.js';\r\nimport equalArrays from './_equalArrays.js';\r\nimport mapToArray from './_mapToArray.js';\r\nimport setToArray from './_setToArray.js';\r\n\r\n/** Used to compose bitmasks for value comparisons. */\r\nvar COMPARE_PARTIAL_FLAG = 1,\r\n    COMPARE_UNORDERED_FLAG = 2;\r\n\r\n/** `Object#toString` result references. */\r\nvar boolTag = '[object Boolean]',\r\n    dateTag = '[object Date]',\r\n    errorTag = '[object Error]',\r\n    mapTag = '[object Map]',\r\n    numberTag = '[object Number]',\r\n    regexpTag = '[object RegExp]',\r\n    setTag = '[object Set]',\r\n    stringTag = '[object String]',\r\n    symbolTag = '[object Symbol]';\r\n\r\nvar arrayBufferTag = '[object ArrayBuffer]',\r\n    dataViewTag = '[object DataView]';\r\n\r\n/** Used to convert symbols to primitives and strings. */\r\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\r\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\r\n\r\n/**\r\n * A specialized version of `baseIsEqualDeep` for comparing objects of\r\n * the same `toStringTag`.\r\n *\r\n * **Note:** This function only supports comparing values with tags of\r\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\r\n *\r\n * @private\r\n * @param {Object} object The object to compare.\r\n * @param {Object} other The other object to compare.\r\n * @param {string} tag The `toStringTag` of the objects to compare.\r\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\r\n * @param {Function} customizer The function to customize comparisons.\r\n * @param {Function} equalFunc The function to determine equivalents of values.\r\n * @param {Object} stack Tracks traversed `object` and `other` objects.\r\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\r\n */\r\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\r\n  switch (tag) {\r\n    case dataViewTag:\r\n      if ((object.byteLength != other.byteLength) ||\r\n          (object.byteOffset != other.byteOffset)) {\r\n        return false;\r\n      }\r\n      object = object.buffer;\r\n      other = other.buffer;\r\n\r\n    case arrayBufferTag:\r\n      if ((object.byteLength != other.byteLength) ||\r\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\r\n        return false;\r\n      }\r\n      return true;\r\n\r\n    case boolTag:\r\n    case dateTag:\r\n    case numberTag:\r\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\r\n      // Invalid dates are coerced to `NaN`.\r\n      return eq(+object, +other);\r\n\r\n    case errorTag:\r\n      return object.name == other.name && object.message == other.message;\r\n\r\n    case regexpTag:\r\n    case stringTag:\r\n      // Coerce regexes to strings and treat strings, primitives and objects,\r\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\r\n      // for more details.\r\n      return object == (other + '');\r\n\r\n    case mapTag:\r\n      var convert = mapToArray;\r\n\r\n    case setTag:\r\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\r\n      convert || (convert = setToArray);\r\n\r\n      if (object.size != other.size && !isPartial) {\r\n        return false;\r\n      }\r\n      // Assume cyclic values are equal.\r\n      var stacked = stack.get(object);\r\n      if (stacked) {\r\n        return stacked == other;\r\n      }\r\n      bitmask |= COMPARE_UNORDERED_FLAG;\r\n\r\n      // Recursively compare objects (susceptible to call stack limits).\r\n      stack.set(object, other);\r\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\r\n      stack['delete'](object);\r\n      return result;\r\n\r\n    case symbolTag:\r\n      if (symbolValueOf) {\r\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\r\n      }\r\n  }\r\n  return false;\r\n}\r\n\r\nexport default equalByTag;\r\n","import getAllKeys from './_getAllKeys.js';\r\n\r\n/** Used to compose bitmasks for value comparisons. */\r\nvar COMPARE_PARTIAL_FLAG = 1;\r\n\r\n/** Used for built-in method references. */\r\nvar objectProto = Object.prototype;\r\n\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n/**\r\n * A specialized version of `baseIsEqualDeep` for objects with support for\r\n * partial deep comparisons.\r\n *\r\n * @private\r\n * @param {Object} object The object to compare.\r\n * @param {Object} other The other object to compare.\r\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\r\n * @param {Function} customizer The function to customize comparisons.\r\n * @param {Function} equalFunc The function to determine equivalents of values.\r\n * @param {Object} stack Tracks traversed `object` and `other` objects.\r\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\r\n */\r\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\r\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\r\n      objProps = getAllKeys(object),\r\n      objLength = objProps.length,\r\n      othProps = getAllKeys(other),\r\n      othLength = othProps.length;\r\n\r\n  if (objLength != othLength && !isPartial) {\r\n    return false;\r\n  }\r\n  var index = objLength;\r\n  while (index--) {\r\n    var key = objProps[index];\r\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\r\n      return false;\r\n    }\r\n  }\r\n  // Assume cyclic values are equal.\r\n  var stacked = stack.get(object);\r\n  if (stacked && stack.get(other)) {\r\n    return stacked == other;\r\n  }\r\n  var result = true;\r\n  stack.set(object, other);\r\n  stack.set(other, object);\r\n\r\n  var skipCtor = isPartial;\r\n  while (++index < objLength) {\r\n    key = objProps[index];\r\n    var objValue = object[key],\r\n        othValue = other[key];\r\n\r\n    if (customizer) {\r\n      var compared = isPartial\r\n        ? customizer(othValue, objValue, key, other, object, stack)\r\n        : customizer(objValue, othValue, key, object, other, stack);\r\n    }\r\n    // Recursively compare objects (susceptible to call stack limits).\r\n    if (!(compared === undefined\r\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\r\n          : compared\r\n        )) {\r\n      result = false;\r\n      break;\r\n    }\r\n    skipCtor || (skipCtor = key == 'constructor');\r\n  }\r\n  if (result && !skipCtor) {\r\n    var objCtor = object.constructor,\r\n        othCtor = other.constructor;\r\n\r\n    // Non `Object` object instances with different constructors are not equal.\r\n    if (objCtor != othCtor &&\r\n        ('constructor' in object && 'constructor' in other) &&\r\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\r\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\r\n      result = false;\r\n    }\r\n  }\r\n  stack['delete'](object);\r\n  stack['delete'](other);\r\n  return result;\r\n}\r\n\r\nexport default equalObjects;\r\n","import basePropertyOf from './_basePropertyOf.js';\r\n\r\n/** Used to map characters to HTML entities. */\r\nvar htmlEscapes = {\r\n  '&': '&amp;',\r\n  '<': '&lt;',\r\n  '>': '&gt;',\r\n  '\"': '&quot;',\r\n  \"'\": '&#39;'\r\n};\r\n\r\n/**\r\n * Used by `_.escape` to convert characters to HTML entities.\r\n *\r\n * @private\r\n * @param {string} chr The matched character to escape.\r\n * @returns {string} Returns the escaped character.\r\n */\r\nvar escapeHtmlChar = basePropertyOf(htmlEscapes);\r\n\r\nexport default escapeHtmlChar;\r\n","/** Used to escape characters for inclusion in compiled string literals. */\r\nvar stringEscapes = {\r\n  '\\\\': '\\\\',\r\n  \"'\": \"'\",\r\n  '\\n': 'n',\r\n  '\\r': 'r',\r\n  '\\u2028': 'u2028',\r\n  '\\u2029': 'u2029'\r\n};\r\n\r\n/**\r\n * Used by `_.template` to escape characters for inclusion in compiled string literals.\r\n *\r\n * @private\r\n * @param {string} chr The matched character to escape.\r\n * @returns {string} Returns the escaped character.\r\n */\r\nfunction escapeStringChar(chr) {\r\n  return '\\\\' + stringEscapes[chr];\r\n}\r\n\r\nexport default escapeStringChar;\r\n","import flatten from './flatten.js';\r\nimport overRest from './_overRest.js';\r\nimport setToString from './_setToString.js';\r\n\r\n/**\r\n * A specialized version of `baseRest` which flattens the rest array.\r\n *\r\n * @private\r\n * @param {Function} func The function to apply a rest parameter to.\r\n * @returns {Function} Returns the new function.\r\n */\r\nfunction flatRest(func) {\r\n  return setToString(overRest(func, undefined, flatten), func + '');\r\n}\r\n\r\nexport default flatRest;\r\n","/** Detect free variable `global` from Node.js. */\r\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\r\n\r\nexport default freeGlobal;\r\n","import baseGetAllKeys from './_baseGetAllKeys.js';\r\nimport getSymbols from './_getSymbols.js';\r\nimport keys from './keys.js';\r\n\r\n/**\r\n * Creates an array of own enumerable property names and symbols of `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the array of property names and symbols.\r\n */\r\nfunction getAllKeys(object) {\r\n  return baseGetAllKeys(object, keys, getSymbols);\r\n}\r\n\r\nexport default getAllKeys;\r\n","import baseGetAllKeys from './_baseGetAllKeys.js';\r\nimport getSymbolsIn from './_getSymbolsIn.js';\r\nimport keysIn from './keysIn.js';\r\n\r\n/**\r\n * Creates an array of own and inherited enumerable property names and\r\n * symbols of `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the array of property names and symbols.\r\n */\r\nfunction getAllKeysIn(object) {\r\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\r\n}\r\n\r\nexport default getAllKeysIn;\r\n","import metaMap from './_metaMap.js';\r\nimport noop from './noop.js';\r\n\r\n/**\r\n * Gets metadata for `func`.\r\n *\r\n * @private\r\n * @param {Function} func The function to query.\r\n * @returns {*} Returns the metadata for `func`.\r\n */\r\nvar getData = !metaMap ? noop : function(func) {\r\n  return metaMap.get(func);\r\n};\r\n\r\nexport default getData;\r\n","import realNames from './_realNames.js';\r\n\r\n/** Used for built-in method references. */\r\nvar objectProto = Object.prototype;\r\n\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n/**\r\n * Gets the name of `func`.\r\n *\r\n * @private\r\n * @param {Function} func The function to query.\r\n * @returns {string} Returns the function name.\r\n */\r\nfunction getFuncName(func) {\r\n  var result = (func.name + ''),\r\n      array = realNames[result],\r\n      length = hasOwnProperty.call(realNames, result) ? array.length : 0;\r\n\r\n  while (length--) {\r\n    var data = array[length],\r\n        otherFunc = data.func;\r\n    if (otherFunc == null || otherFunc == func) {\r\n      return data.name;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default getFuncName;\r\n","/**\r\n * Gets the argument placeholder value for `func`.\r\n *\r\n * @private\r\n * @param {Function} func The function to inspect.\r\n * @returns {*} Returns the placeholder value.\r\n */\r\nfunction getHolder(func) {\r\n  var object = func;\r\n  return object.placeholder;\r\n}\r\n\r\nexport default getHolder;\r\n","import isKeyable from './_isKeyable.js';\r\n\r\n/**\r\n * Gets the data for `map`.\r\n *\r\n * @private\r\n * @param {Object} map The map to query.\r\n * @param {string} key The reference key.\r\n * @returns {*} Returns the map data.\r\n */\r\nfunction getMapData(map, key) {\r\n  var data = map.__data__;\r\n  return isKeyable(key)\r\n    ? data[typeof key == 'string' ? 'string' : 'hash']\r\n    : data.map;\r\n}\r\n\r\nexport default getMapData;\r\n","import isStrictComparable from './_isStrictComparable.js';\r\nimport keys from './keys.js';\r\n\r\n/**\r\n * Gets the property names, values, and compare flags of `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the match data of `object`.\r\n */\r\nfunction getMatchData(object) {\r\n  var result = keys(object),\r\n      length = result.length;\r\n\r\n  while (length--) {\r\n    var key = result[length],\r\n        value = object[key];\r\n\r\n    result[length] = [key, value, isStrictComparable(value)];\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default getMatchData;\r\n","import baseIsNative from './_baseIsNative.js';\r\nimport getValue from './_getValue.js';\r\n\r\n/**\r\n * Gets the native function at `key` of `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @param {string} key The key of the method to get.\r\n * @returns {*} Returns the function if it's native, else `undefined`.\r\n */\r\nfunction getNative(object, key) {\r\n  var value = getValue(object, key);\r\n  return baseIsNative(value) ? value : undefined;\r\n}\r\n\r\nexport default getNative;\r\n","import overArg from './_overArg.js';\r\n\r\n/** Built-in value references. */\r\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\r\n\r\nexport default getPrototype;\r\n","import Symbol from './_Symbol.js';\r\n\r\n/** Used for built-in method references. */\r\nvar objectProto = Object.prototype;\r\n\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n/**\r\n * Used to resolve the\r\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\r\n * of values.\r\n */\r\nvar nativeObjectToString = objectProto.toString;\r\n\r\n/** Built-in value references. */\r\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\r\n\r\n/**\r\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\r\n *\r\n * @private\r\n * @param {*} value The value to query.\r\n * @returns {string} Returns the raw `toStringTag`.\r\n */\r\nfunction getRawTag(value) {\r\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\r\n      tag = value[symToStringTag];\r\n\r\n  try {\r\n    value[symToStringTag] = undefined;\r\n    var unmasked = true;\r\n  } catch (e) {}\r\n\r\n  var result = nativeObjectToString.call(value);\r\n  if (unmasked) {\r\n    if (isOwn) {\r\n      value[symToStringTag] = tag;\r\n    } else {\r\n      delete value[symToStringTag];\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default getRawTag;\r\n","import arrayFilter from './_arrayFilter.js';\r\nimport stubArray from './stubArray.js';\r\n\r\n/** Used for built-in method references. */\r\nvar objectProto = Object.prototype;\r\n\r\n/** Built-in value references. */\r\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\r\n\r\n/**\r\n * Creates an array of the own enumerable symbols of `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the array of symbols.\r\n */\r\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\r\n  if (object == null) {\r\n    return [];\r\n  }\r\n  object = Object(object);\r\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\r\n    return propertyIsEnumerable.call(object, symbol);\r\n  });\r\n};\r\n\r\nexport default getSymbols;\r\n","import arrayPush from './_arrayPush.js';\r\nimport getPrototype from './_getPrototype.js';\r\nimport getSymbols from './_getSymbols.js';\r\nimport stubArray from './stubArray.js';\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\r\n\r\n/**\r\n * Creates an array of the own and inherited enumerable symbols of `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the array of symbols.\r\n */\r\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\r\n  var result = [];\r\n  while (object) {\r\n    arrayPush(result, getSymbols(object));\r\n    object = getPrototype(object);\r\n  }\r\n  return result;\r\n};\r\n\r\nexport default getSymbolsIn;\r\n","import DataView from './_DataView.js';\r\nimport Map from './_Map.js';\r\nimport Promise from './_Promise.js';\r\nimport Set from './_Set.js';\r\nimport WeakMap from './_WeakMap.js';\r\nimport baseGetTag from './_baseGetTag.js';\r\nimport toSource from './_toSource.js';\r\n\r\n/** `Object#toString` result references. */\r\nvar mapTag = '[object Map]',\r\n    objectTag = '[object Object]',\r\n    promiseTag = '[object Promise]',\r\n    setTag = '[object Set]',\r\n    weakMapTag = '[object WeakMap]';\r\n\r\nvar dataViewTag = '[object DataView]';\r\n\r\n/** Used to detect maps, sets, and weakmaps. */\r\nvar dataViewCtorString = toSource(DataView),\r\n    mapCtorString = toSource(Map),\r\n    promiseCtorString = toSource(Promise),\r\n    setCtorString = toSource(Set),\r\n    weakMapCtorString = toSource(WeakMap);\r\n\r\n/**\r\n * Gets the `toStringTag` of `value`.\r\n *\r\n * @private\r\n * @param {*} value The value to query.\r\n * @returns {string} Returns the `toStringTag`.\r\n */\r\nvar getTag = baseGetTag;\r\n\r\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\r\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\r\n    (Map && getTag(new Map) != mapTag) ||\r\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\r\n    (Set && getTag(new Set) != setTag) ||\r\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\r\n  getTag = function(value) {\r\n    var result = baseGetTag(value),\r\n        Ctor = result == objectTag ? value.constructor : undefined,\r\n        ctorString = Ctor ? toSource(Ctor) : '';\r\n\r\n    if (ctorString) {\r\n      switch (ctorString) {\r\n        case dataViewCtorString: return dataViewTag;\r\n        case mapCtorString: return mapTag;\r\n        case promiseCtorString: return promiseTag;\r\n        case setCtorString: return setTag;\r\n        case weakMapCtorString: return weakMapTag;\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n}\r\n\r\nexport default getTag;\r\n","/**\r\n * Gets the value at `key` of `object`.\r\n *\r\n * @private\r\n * @param {Object} [object] The object to query.\r\n * @param {string} key The key of the property to get.\r\n * @returns {*} Returns the property value.\r\n */\r\nfunction getValue(object, key) {\r\n  return object == null ? undefined : object[key];\r\n}\r\n\r\nexport default getValue;\r\n","/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMax = Math.max,\r\n    nativeMin = Math.min;\r\n\r\n/**\r\n * Gets the view, applying any `transforms` to the `start` and `end` positions.\r\n *\r\n * @private\r\n * @param {number} start The start of the view.\r\n * @param {number} end The end of the view.\r\n * @param {Array} transforms The transformations to apply to the view.\r\n * @returns {Object} Returns an object containing the `start` and `end`\r\n *  positions of the view.\r\n */\r\nfunction getView(start, end, transforms) {\r\n  var index = -1,\r\n      length = transforms.length;\r\n\r\n  while (++index < length) {\r\n    var data = transforms[index],\r\n        size = data.size;\r\n\r\n    switch (data.type) {\r\n      case 'drop':      start += size; break;\r\n      case 'dropRight': end -= size; break;\r\n      case 'take':      end = nativeMin(end, start + size); break;\r\n      case 'takeRight': start = nativeMax(start, end - size); break;\r\n    }\r\n  }\r\n  return { 'start': start, 'end': end };\r\n}\r\n\r\nexport default getView;\r\n","/** Used to match wrap detail comments. */\r\nvar reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\r\n    reSplitDetails = /,? & /;\r\n\r\n/**\r\n * Extracts wrapper details from the `source` body comment.\r\n *\r\n * @private\r\n * @param {string} source The source to inspect.\r\n * @returns {Array} Returns the wrapper details.\r\n */\r\nfunction getWrapDetails(source) {\r\n  var match = source.match(reWrapDetails);\r\n  return match ? match[1].split(reSplitDetails) : [];\r\n}\r\n\r\nexport default getWrapDetails;\r\n","import castPath from './_castPath.js';\r\nimport isArguments from './isArguments.js';\r\nimport isArray from './isArray.js';\r\nimport isIndex from './_isIndex.js';\r\nimport isLength from './isLength.js';\r\nimport toKey from './_toKey.js';\r\n\r\n/**\r\n * Checks if `path` exists on `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @param {Array|string} path The path to check.\r\n * @param {Function} hasFunc The function to check properties.\r\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\r\n */\r\nfunction hasPath(object, path, hasFunc) {\r\n  path = castPath(path, object);\r\n\r\n  var index = -1,\r\n      length = path.length,\r\n      result = false;\r\n\r\n  while (++index < length) {\r\n    var key = toKey(path[index]);\r\n    if (!(result = object != null && hasFunc(object, key))) {\r\n      break;\r\n    }\r\n    object = object[key];\r\n  }\r\n  if (result || ++index != length) {\r\n    return result;\r\n  }\r\n  length = object == null ? 0 : object.length;\r\n  return !!length && isLength(length) && isIndex(key, length) &&\r\n    (isArray(object) || isArguments(object));\r\n}\r\n\r\nexport default hasPath;\r\n","/** Used to compose unicode character classes. */\r\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\r\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\r\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\r\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\r\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\r\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\r\n\r\n/** Used to compose unicode capture groups. */\r\nvar rsZWJ = '\\\\u200d';\r\n\r\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\r\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\r\n\r\n/**\r\n * Checks if `string` contains Unicode symbols.\r\n *\r\n * @private\r\n * @param {string} string The string to inspect.\r\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\r\n */\r\nfunction hasUnicode(string) {\r\n  return reHasUnicode.test(string);\r\n}\r\n\r\nexport default hasUnicode;\r\n","/** Used to detect strings that need a more robust regexp to match words. */\r\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\r\n\r\n/**\r\n * Checks if `string` contains a word composed of Unicode symbols.\r\n *\r\n * @private\r\n * @param {string} string The string to inspect.\r\n * @returns {boolean} Returns `true` if a word is found, else `false`.\r\n */\r\nfunction hasUnicodeWord(string) {\r\n  return reHasUnicodeWord.test(string);\r\n}\r\n\r\nexport default hasUnicodeWord;\r\n","import nativeCreate from './_nativeCreate.js';\r\n\r\n/**\r\n * Removes all key-value entries from the hash.\r\n *\r\n * @private\r\n * @name clear\r\n * @memberOf Hash\r\n */\r\nfunction hashClear() {\r\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\r\n  this.size = 0;\r\n}\r\n\r\nexport default hashClear;\r\n","/**\r\n * Removes `key` and its value from the hash.\r\n *\r\n * @private\r\n * @name delete\r\n * @memberOf Hash\r\n * @param {Object} hash The hash to modify.\r\n * @param {string} key The key of the value to remove.\r\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\r\n */\r\nfunction hashDelete(key) {\r\n  var result = this.has(key) && delete this.__data__[key];\r\n  this.size -= result ? 1 : 0;\r\n  return result;\r\n}\r\n\r\nexport default hashDelete;\r\n","import nativeCreate from './_nativeCreate.js';\r\n\r\n/** Used to stand-in for `undefined` hash values. */\r\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\r\n\r\n/** Used for built-in method references. */\r\nvar objectProto = Object.prototype;\r\n\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n/**\r\n * Gets the hash value for `key`.\r\n *\r\n * @private\r\n * @name get\r\n * @memberOf Hash\r\n * @param {string} key The key of the value to get.\r\n * @returns {*} Returns the entry value.\r\n */\r\nfunction hashGet(key) {\r\n  var data = this.__data__;\r\n  if (nativeCreate) {\r\n    var result = data[key];\r\n    return result === HASH_UNDEFINED ? undefined : result;\r\n  }\r\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\r\n}\r\n\r\nexport default hashGet;\r\n","import nativeCreate from './_nativeCreate.js';\r\n\r\n/** Used for built-in method references. */\r\nvar objectProto = Object.prototype;\r\n\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n/**\r\n * Checks if a hash value for `key` exists.\r\n *\r\n * @private\r\n * @name has\r\n * @memberOf Hash\r\n * @param {string} key The key of the entry to check.\r\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\r\n */\r\nfunction hashHas(key) {\r\n  var data = this.__data__;\r\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\r\n}\r\n\r\nexport default hashHas;\r\n","import nativeCreate from './_nativeCreate.js';\r\n\r\n/** Used to stand-in for `undefined` hash values. */\r\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\r\n\r\n/**\r\n * Sets the hash `key` to `value`.\r\n *\r\n * @private\r\n * @name set\r\n * @memberOf Hash\r\n * @param {string} key The key of the value to set.\r\n * @param {*} value The value to set.\r\n * @returns {Object} Returns the hash instance.\r\n */\r\nfunction hashSet(key, value) {\r\n  var data = this.__data__;\r\n  this.size += this.has(key) ? 0 : 1;\r\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\r\n  return this;\r\n}\r\n\r\nexport default hashSet;\r\n","/** Used for built-in method references. */\r\nvar objectProto = Object.prototype;\r\n\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n/**\r\n * Initializes an array clone.\r\n *\r\n * @private\r\n * @param {Array} array The array to clone.\r\n * @returns {Array} Returns the initialized clone.\r\n */\r\nfunction initCloneArray(array) {\r\n  var length = array.length,\r\n      result = new array.constructor(length);\r\n\r\n  // Add properties assigned by `RegExp#exec`.\r\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\r\n    result.index = array.index;\r\n    result.input = array.input;\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default initCloneArray;\r\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\r\nimport cloneDataView from './_cloneDataView.js';\r\nimport cloneRegExp from './_cloneRegExp.js';\r\nimport cloneSymbol from './_cloneSymbol.js';\r\nimport cloneTypedArray from './_cloneTypedArray.js';\r\n\r\n/** `Object#toString` result references. */\r\nvar boolTag = '[object Boolean]',\r\n    dateTag = '[object Date]',\r\n    mapTag = '[object Map]',\r\n    numberTag = '[object Number]',\r\n    regexpTag = '[object RegExp]',\r\n    setTag = '[object Set]',\r\n    stringTag = '[object String]',\r\n    symbolTag = '[object Symbol]';\r\n\r\nvar arrayBufferTag = '[object ArrayBuffer]',\r\n    dataViewTag = '[object DataView]',\r\n    float32Tag = '[object Float32Array]',\r\n    float64Tag = '[object Float64Array]',\r\n    int8Tag = '[object Int8Array]',\r\n    int16Tag = '[object Int16Array]',\r\n    int32Tag = '[object Int32Array]',\r\n    uint8Tag = '[object Uint8Array]',\r\n    uint8ClampedTag = '[object Uint8ClampedArray]',\r\n    uint16Tag = '[object Uint16Array]',\r\n    uint32Tag = '[object Uint32Array]';\r\n\r\n/**\r\n * Initializes an object clone based on its `toStringTag`.\r\n *\r\n * **Note:** This function only supports cloning values with tags of\r\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\r\n *\r\n * @private\r\n * @param {Object} object The object to clone.\r\n * @param {string} tag The `toStringTag` of the object to clone.\r\n * @param {boolean} [isDeep] Specify a deep clone.\r\n * @returns {Object} Returns the initialized clone.\r\n */\r\nfunction initCloneByTag(object, tag, isDeep) {\r\n  var Ctor = object.constructor;\r\n  switch (tag) {\r\n    case arrayBufferTag:\r\n      return cloneArrayBuffer(object);\r\n\r\n    case boolTag:\r\n    case dateTag:\r\n      return new Ctor(+object);\r\n\r\n    case dataViewTag:\r\n      return cloneDataView(object, isDeep);\r\n\r\n    case float32Tag: case float64Tag:\r\n    case int8Tag: case int16Tag: case int32Tag:\r\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\r\n      return cloneTypedArray(object, isDeep);\r\n\r\n    case mapTag:\r\n      return new Ctor;\r\n\r\n    case numberTag:\r\n    case stringTag:\r\n      return new Ctor(object);\r\n\r\n    case regexpTag:\r\n      return cloneRegExp(object);\r\n\r\n    case setTag:\r\n      return new Ctor;\r\n\r\n    case symbolTag:\r\n      return cloneSymbol(object);\r\n  }\r\n}\r\n\r\nexport default initCloneByTag;\r\n","import baseCreate from './_baseCreate.js';\r\nimport getPrototype from './_getPrototype.js';\r\nimport isPrototype from './_isPrototype.js';\r\n\r\n/**\r\n * Initializes an object clone.\r\n *\r\n * @private\r\n * @param {Object} object The object to clone.\r\n * @returns {Object} Returns the initialized clone.\r\n */\r\nfunction initCloneObject(object) {\r\n  return (typeof object.constructor == 'function' && !isPrototype(object))\r\n    ? baseCreate(getPrototype(object))\r\n    : {};\r\n}\r\n\r\nexport default initCloneObject;\r\n","/** Used to match wrap detail comments. */\r\nvar reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/;\r\n\r\n/**\r\n * Inserts wrapper `details` in a comment at the top of the `source` body.\r\n *\r\n * @private\r\n * @param {string} source The source to modify.\r\n * @returns {Array} details The details to insert.\r\n * @returns {string} Returns the modified source.\r\n */\r\nfunction insertWrapDetails(source, details) {\r\n  var length = details.length;\r\n  if (!length) {\r\n    return source;\r\n  }\r\n  var lastIndex = length - 1;\r\n  details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\r\n  details = details.join(length > 2 ? ', ' : ' ');\r\n  return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\r\n}\r\n\r\nexport default insertWrapDetails;\r\n","import Symbol from './_Symbol.js';\r\nimport isArguments from './isArguments.js';\r\nimport isArray from './isArray.js';\r\n\r\n/** Built-in value references. */\r\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\r\n\r\n/**\r\n * Checks if `value` is a flattenable `arguments` object or array.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\r\n */\r\nfunction isFlattenable(value) {\r\n  return isArray(value) || isArguments(value) ||\r\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\r\n}\r\n\r\nexport default isFlattenable;\r\n","/** Used as references for various `Number` constants. */\r\nvar MAX_SAFE_INTEGER = 9007199254740991;\r\n\r\n/** Used to detect unsigned integer values. */\r\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\r\n\r\n/**\r\n * Checks if `value` is a valid array-like index.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\r\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\r\n */\r\nfunction isIndex(value, length) {\r\n  var type = typeof value;\r\n  length = length == null ? MAX_SAFE_INTEGER : length;\r\n\r\n  return !!length &&\r\n    (type == 'number' ||\r\n      (type != 'symbol' && reIsUint.test(value))) &&\r\n        (value > -1 && value % 1 == 0 && value < length);\r\n}\r\n\r\nexport default isIndex;\r\n","import eq from './eq.js';\r\nimport isArrayLike from './isArrayLike.js';\r\nimport isIndex from './_isIndex.js';\r\nimport isObject from './isObject.js';\r\n\r\n/**\r\n * Checks if the given arguments are from an iteratee call.\r\n *\r\n * @private\r\n * @param {*} value The potential iteratee value argument.\r\n * @param {*} index The potential iteratee index or key argument.\r\n * @param {*} object The potential iteratee object argument.\r\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\r\n *  else `false`.\r\n */\r\nfunction isIterateeCall(value, index, object) {\r\n  if (!isObject(object)) {\r\n    return false;\r\n  }\r\n  var type = typeof index;\r\n  if (type == 'number'\r\n        ? (isArrayLike(object) && isIndex(index, object.length))\r\n        : (type == 'string' && index in object)\r\n      ) {\r\n    return eq(object[index], value);\r\n  }\r\n  return false;\r\n}\r\n\r\nexport default isIterateeCall;\r\n","import isArray from './isArray.js';\r\nimport isSymbol from './isSymbol.js';\r\n\r\n/** Used to match property names within property paths. */\r\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\r\n    reIsPlainProp = /^\\w*$/;\r\n\r\n/**\r\n * Checks if `value` is a property name and not a property path.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @param {Object} [object] The object to query keys on.\r\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\r\n */\r\nfunction isKey(value, object) {\r\n  if (isArray(value)) {\r\n    return false;\r\n  }\r\n  var type = typeof value;\r\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\r\n      value == null || isSymbol(value)) {\r\n    return true;\r\n  }\r\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\r\n    (object != null && value in Object(object));\r\n}\r\n\r\nexport default isKey;\r\n","/**\r\n * Checks if `value` is suitable for use as unique object key.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\r\n */\r\nfunction isKeyable(value) {\r\n  var type = typeof value;\r\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\r\n    ? (value !== '__proto__')\r\n    : (value === null);\r\n}\r\n\r\nexport default isKeyable;\r\n","import LazyWrapper from './_LazyWrapper.js';\r\nimport getData from './_getData.js';\r\nimport getFuncName from './_getFuncName.js';\r\nimport lodash from './wrapperLodash.js';\r\n\r\n/**\r\n * Checks if `func` has a lazy counterpart.\r\n *\r\n * @private\r\n * @param {Function} func The function to check.\r\n * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\r\n *  else `false`.\r\n */\r\nfunction isLaziable(func) {\r\n  var funcName = getFuncName(func),\r\n      other = lodash[funcName];\r\n\r\n  if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\r\n    return false;\r\n  }\r\n  if (func === other) {\r\n    return true;\r\n  }\r\n  var data = getData(other);\r\n  return !!data && func === data[0];\r\n}\r\n\r\nexport default isLaziable;\r\n","import coreJsData from './_coreJsData.js';\r\nimport isFunction from './isFunction.js';\r\nimport stubFalse from './stubFalse.js';\r\n\r\n/**\r\n * Checks if `func` is capable of being masked.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\r\n */\r\nvar isMaskable = coreJsData ? isFunction : stubFalse;\r\n\r\nexport default isMaskable;\r\n","import coreJsData from './_coreJsData.js';\r\n\r\n/** Used to detect methods masquerading as native. */\r\nvar maskSrcKey = (function() {\r\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\r\n  return uid ? ('Symbol(src)_1.' + uid) : '';\r\n}());\r\n\r\n/**\r\n * Checks if `func` has its source masked.\r\n *\r\n * @private\r\n * @param {Function} func The function to check.\r\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\r\n */\r\nfunction isMasked(func) {\r\n  return !!maskSrcKey && (maskSrcKey in func);\r\n}\r\n\r\nexport default isMasked;\r\n","/** Used for built-in method references. */\r\nvar objectProto = Object.prototype;\r\n\r\n/**\r\n * Checks if `value` is likely a prototype object.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\r\n */\r\nfunction isPrototype(value) {\r\n  var Ctor = value && value.constructor,\r\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\r\n\r\n  return value === proto;\r\n}\r\n\r\nexport default isPrototype;\r\n","import isObject from './isObject.js';\r\n\r\n/**\r\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` if suitable for strict\r\n *  equality comparisons, else `false`.\r\n */\r\nfunction isStrictComparable(value) {\r\n  return value === value && !isObject(value);\r\n}\r\n\r\nexport default isStrictComparable;\r\n","/**\r\n * Converts `iterator` to an array.\r\n *\r\n * @private\r\n * @param {Object} iterator The iterator to convert.\r\n * @returns {Array} Returns the converted array.\r\n */\r\nfunction iteratorToArray(iterator) {\r\n  var data,\r\n      result = [];\r\n\r\n  while (!(data = iterator.next()).done) {\r\n    result.push(data.value);\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default iteratorToArray;\r\n","import LazyWrapper from './_LazyWrapper.js';\r\nimport copyArray from './_copyArray.js';\r\n\r\n/**\r\n * Creates a clone of the lazy wrapper object.\r\n *\r\n * @private\r\n * @name clone\r\n * @memberOf LazyWrapper\r\n * @returns {Object} Returns the cloned `LazyWrapper` object.\r\n */\r\nfunction lazyClone() {\r\n  var result = new LazyWrapper(this.__wrapped__);\r\n  result.__actions__ = copyArray(this.__actions__);\r\n  result.__dir__ = this.__dir__;\r\n  result.__filtered__ = this.__filtered__;\r\n  result.__iteratees__ = copyArray(this.__iteratees__);\r\n  result.__takeCount__ = this.__takeCount__;\r\n  result.__views__ = copyArray(this.__views__);\r\n  return result;\r\n}\r\n\r\nexport default lazyClone;\r\n","import LazyWrapper from './_LazyWrapper.js';\r\n\r\n/**\r\n * Reverses the direction of lazy iteration.\r\n *\r\n * @private\r\n * @name reverse\r\n * @memberOf LazyWrapper\r\n * @returns {Object} Returns the new reversed `LazyWrapper` object.\r\n */\r\nfunction lazyReverse() {\r\n  if (this.__filtered__) {\r\n    var result = new LazyWrapper(this);\r\n    result.__dir__ = -1;\r\n    result.__filtered__ = true;\r\n  } else {\r\n    result = this.clone();\r\n    result.__dir__ *= -1;\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default lazyReverse;\r\n","import baseWrapperValue from './_baseWrapperValue.js';\r\nimport getView from './_getView.js';\r\nimport isArray from './isArray.js';\r\n\r\n/** Used to indicate the type of lazy iteratees. */\r\nvar LAZY_FILTER_FLAG = 1,\r\n    LAZY_MAP_FLAG = 2;\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMin = Math.min;\r\n\r\n/**\r\n * Extracts the unwrapped value from its lazy wrapper.\r\n *\r\n * @private\r\n * @name value\r\n * @memberOf LazyWrapper\r\n * @returns {*} Returns the unwrapped value.\r\n */\r\nfunction lazyValue() {\r\n  var array = this.__wrapped__.value(),\r\n      dir = this.__dir__,\r\n      isArr = isArray(array),\r\n      isRight = dir < 0,\r\n      arrLength = isArr ? array.length : 0,\r\n      view = getView(0, arrLength, this.__views__),\r\n      start = view.start,\r\n      end = view.end,\r\n      length = end - start,\r\n      index = isRight ? end : (start - 1),\r\n      iteratees = this.__iteratees__,\r\n      iterLength = iteratees.length,\r\n      resIndex = 0,\r\n      takeCount = nativeMin(length, this.__takeCount__);\r\n\r\n  if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\r\n    return baseWrapperValue(array, this.__actions__);\r\n  }\r\n  var result = [];\r\n\r\n  outer:\r\n  while (length-- && resIndex < takeCount) {\r\n    index += dir;\r\n\r\n    var iterIndex = -1,\r\n        value = array[index];\r\n\r\n    while (++iterIndex < iterLength) {\r\n      var data = iteratees[iterIndex],\r\n          iteratee = data.iteratee,\r\n          type = data.type,\r\n          computed = iteratee(value);\r\n\r\n      if (type == LAZY_MAP_FLAG) {\r\n        value = computed;\r\n      } else if (!computed) {\r\n        if (type == LAZY_FILTER_FLAG) {\r\n          continue outer;\r\n        } else {\r\n          break outer;\r\n        }\r\n      }\r\n    }\r\n    result[resIndex++] = value;\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default lazyValue;\r\n","/**\r\n * Removes all key-value entries from the list cache.\r\n *\r\n * @private\r\n * @name clear\r\n * @memberOf ListCache\r\n */\r\nfunction listCacheClear() {\r\n  this.__data__ = [];\r\n  this.size = 0;\r\n}\r\n\r\nexport default listCacheClear;\r\n","import assocIndexOf from './_assocIndexOf.js';\r\n\r\n/** Used for built-in method references. */\r\nvar arrayProto = Array.prototype;\r\n\r\n/** Built-in value references. */\r\nvar splice = arrayProto.splice;\r\n\r\n/**\r\n * Removes `key` and its value from the list cache.\r\n *\r\n * @private\r\n * @name delete\r\n * @memberOf ListCache\r\n * @param {string} key The key of the value to remove.\r\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\r\n */\r\nfunction listCacheDelete(key) {\r\n  var data = this.__data__,\r\n      index = assocIndexOf(data, key);\r\n\r\n  if (index < 0) {\r\n    return false;\r\n  }\r\n  var lastIndex = data.length - 1;\r\n  if (index == lastIndex) {\r\n    data.pop();\r\n  } else {\r\n    splice.call(data, index, 1);\r\n  }\r\n  --this.size;\r\n  return true;\r\n}\r\n\r\nexport default listCacheDelete;\r\n","import assocIndexOf from './_assocIndexOf.js';\r\n\r\n/**\r\n * Gets the list cache value for `key`.\r\n *\r\n * @private\r\n * @name get\r\n * @memberOf ListCache\r\n * @param {string} key The key of the value to get.\r\n * @returns {*} Returns the entry value.\r\n */\r\nfunction listCacheGet(key) {\r\n  var data = this.__data__,\r\n      index = assocIndexOf(data, key);\r\n\r\n  return index < 0 ? undefined : data[index][1];\r\n}\r\n\r\nexport default listCacheGet;\r\n","import assocIndexOf from './_assocIndexOf.js';\r\n\r\n/**\r\n * Checks if a list cache value for `key` exists.\r\n *\r\n * @private\r\n * @name has\r\n * @memberOf ListCache\r\n * @param {string} key The key of the entry to check.\r\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\r\n */\r\nfunction listCacheHas(key) {\r\n  return assocIndexOf(this.__data__, key) > -1;\r\n}\r\n\r\nexport default listCacheHas;\r\n","import assocIndexOf from './_assocIndexOf.js';\r\n\r\n/**\r\n * Sets the list cache `key` to `value`.\r\n *\r\n * @private\r\n * @name set\r\n * @memberOf ListCache\r\n * @param {string} key The key of the value to set.\r\n * @param {*} value The value to set.\r\n * @returns {Object} Returns the list cache instance.\r\n */\r\nfunction listCacheSet(key, value) {\r\n  var data = this.__data__,\r\n      index = assocIndexOf(data, key);\r\n\r\n  if (index < 0) {\r\n    ++this.size;\r\n    data.push([key, value]);\r\n  } else {\r\n    data[index][1] = value;\r\n  }\r\n  return this;\r\n}\r\n\r\nexport default listCacheSet;\r\n","import Hash from './_Hash.js';\r\nimport ListCache from './_ListCache.js';\r\nimport Map from './_Map.js';\r\n\r\n/**\r\n * Removes all key-value entries from the map.\r\n *\r\n * @private\r\n * @name clear\r\n * @memberOf MapCache\r\n */\r\nfunction mapCacheClear() {\r\n  this.size = 0;\r\n  this.__data__ = {\r\n    'hash': new Hash,\r\n    'map': new (Map || ListCache),\r\n    'string': new Hash\r\n  };\r\n}\r\n\r\nexport default mapCacheClear;\r\n","import getMapData from './_getMapData.js';\r\n\r\n/**\r\n * Removes `key` and its value from the map.\r\n *\r\n * @private\r\n * @name delete\r\n * @memberOf MapCache\r\n * @param {string} key The key of the value to remove.\r\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\r\n */\r\nfunction mapCacheDelete(key) {\r\n  var result = getMapData(this, key)['delete'](key);\r\n  this.size -= result ? 1 : 0;\r\n  return result;\r\n}\r\n\r\nexport default mapCacheDelete;\r\n","import getMapData from './_getMapData.js';\r\n\r\n/**\r\n * Gets the map value for `key`.\r\n *\r\n * @private\r\n * @name get\r\n * @memberOf MapCache\r\n * @param {string} key The key of the value to get.\r\n * @returns {*} Returns the entry value.\r\n */\r\nfunction mapCacheGet(key) {\r\n  return getMapData(this, key).get(key);\r\n}\r\n\r\nexport default mapCacheGet;\r\n","import getMapData from './_getMapData.js';\r\n\r\n/**\r\n * Checks if a map value for `key` exists.\r\n *\r\n * @private\r\n * @name has\r\n * @memberOf MapCache\r\n * @param {string} key The key of the entry to check.\r\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\r\n */\r\nfunction mapCacheHas(key) {\r\n  return getMapData(this, key).has(key);\r\n}\r\n\r\nexport default mapCacheHas;\r\n","import getMapData from './_getMapData.js';\r\n\r\n/**\r\n * Sets the map `key` to `value`.\r\n *\r\n * @private\r\n * @name set\r\n * @memberOf MapCache\r\n * @param {string} key The key of the value to set.\r\n * @param {*} value The value to set.\r\n * @returns {Object} Returns the map cache instance.\r\n */\r\nfunction mapCacheSet(key, value) {\r\n  var data = getMapData(this, key),\r\n      size = data.size;\r\n\r\n  data.set(key, value);\r\n  this.size += data.size == size ? 0 : 1;\r\n  return this;\r\n}\r\n\r\nexport default mapCacheSet;\r\n","/**\r\n * Converts `map` to its key-value pairs.\r\n *\r\n * @private\r\n * @param {Object} map The map to convert.\r\n * @returns {Array} Returns the key-value pairs.\r\n */\r\nfunction mapToArray(map) {\r\n  var index = -1,\r\n      result = Array(map.size);\r\n\r\n  map.forEach(function(value, key) {\r\n    result[++index] = [key, value];\r\n  });\r\n  return result;\r\n}\r\n\r\nexport default mapToArray;\r\n","/**\r\n * A specialized version of `matchesProperty` for source values suitable\r\n * for strict equality comparisons, i.e. `===`.\r\n *\r\n * @private\r\n * @param {string} key The key of the property to get.\r\n * @param {*} srcValue The value to match.\r\n * @returns {Function} Returns the new spec function.\r\n */\r\nfunction matchesStrictComparable(key, srcValue) {\r\n  return function(object) {\r\n    if (object == null) {\r\n      return false;\r\n    }\r\n    return object[key] === srcValue &&\r\n      (srcValue !== undefined || (key in Object(object)));\r\n  };\r\n}\r\n\r\nexport default matchesStrictComparable;\r\n","import memoize from './memoize.js';\r\n\r\n/** Used as the maximum memoize cache size. */\r\nvar MAX_MEMOIZE_SIZE = 500;\r\n\r\n/**\r\n * A specialized version of `_.memoize` which clears the memoized function's\r\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\r\n *\r\n * @private\r\n * @param {Function} func The function to have its output memoized.\r\n * @returns {Function} Returns the new memoized function.\r\n */\r\nfunction memoizeCapped(func) {\r\n  var result = memoize(func, function(key) {\r\n    if (cache.size === MAX_MEMOIZE_SIZE) {\r\n      cache.clear();\r\n    }\r\n    return key;\r\n  });\r\n\r\n  var cache = result.cache;\r\n  return result;\r\n}\r\n\r\nexport default memoizeCapped;\r\n","import composeArgs from './_composeArgs.js';\r\nimport composeArgsRight from './_composeArgsRight.js';\r\nimport replaceHolders from './_replaceHolders.js';\r\n\r\n/** Used as the internal argument placeholder. */\r\nvar PLACEHOLDER = '__lodash_placeholder__';\r\n\r\n/** Used to compose bitmasks for function metadata. */\r\nvar WRAP_BIND_FLAG = 1,\r\n    WRAP_BIND_KEY_FLAG = 2,\r\n    WRAP_CURRY_BOUND_FLAG = 4,\r\n    WRAP_CURRY_FLAG = 8,\r\n    WRAP_ARY_FLAG = 128,\r\n    WRAP_REARG_FLAG = 256;\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMin = Math.min;\r\n\r\n/**\r\n * Merges the function metadata of `source` into `data`.\r\n *\r\n * Merging metadata reduces the number of wrappers used to invoke a function.\r\n * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\r\n * may be applied regardless of execution order. Methods like `_.ary` and\r\n * `_.rearg` modify function arguments, making the order in which they are\r\n * executed important, preventing the merging of metadata. However, we make\r\n * an exception for a safe combined case where curried functions have `_.ary`\r\n * and or `_.rearg` applied.\r\n *\r\n * @private\r\n * @param {Array} data The destination metadata.\r\n * @param {Array} source The source metadata.\r\n * @returns {Array} Returns `data`.\r\n */\r\nfunction mergeData(data, source) {\r\n  var bitmask = data[1],\r\n      srcBitmask = source[1],\r\n      newBitmask = bitmask | srcBitmask,\r\n      isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\r\n\r\n  var isCombo =\r\n    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\r\n    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\r\n    ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\r\n\r\n  // Exit early if metadata can't be merged.\r\n  if (!(isCommon || isCombo)) {\r\n    return data;\r\n  }\r\n  // Use source `thisArg` if available.\r\n  if (srcBitmask & WRAP_BIND_FLAG) {\r\n    data[2] = source[2];\r\n    // Set when currying a bound function.\r\n    newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\r\n  }\r\n  // Compose partial arguments.\r\n  var value = source[3];\r\n  if (value) {\r\n    var partials = data[3];\r\n    data[3] = partials ? composeArgs(partials, value, source[4]) : value;\r\n    data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\r\n  }\r\n  // Compose partial right arguments.\r\n  value = source[5];\r\n  if (value) {\r\n    partials = data[5];\r\n    data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\r\n    data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\r\n  }\r\n  // Use source `argPos` if available.\r\n  value = source[7];\r\n  if (value) {\r\n    data[7] = value;\r\n  }\r\n  // Use source `ary` if it's smaller.\r\n  if (srcBitmask & WRAP_ARY_FLAG) {\r\n    data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\r\n  }\r\n  // Use source `arity` if one is not provided.\r\n  if (data[9] == null) {\r\n    data[9] = source[9];\r\n  }\r\n  // Use source `func` and merge bitmasks.\r\n  data[0] = source[0];\r\n  data[1] = newBitmask;\r\n\r\n  return data;\r\n}\r\n\r\nexport default mergeData;\r\n","import WeakMap from './_WeakMap.js';\r\n\r\n/** Used to store function metadata. */\r\nvar metaMap = WeakMap && new WeakMap;\r\n\r\nexport default metaMap;\r\n","import getNative from './_getNative.js';\r\n\r\n/* Built-in method references that are verified to be native. */\r\nvar nativeCreate = getNative(Object, 'create');\r\n\r\nexport default nativeCreate;\r\n","import overArg from './_overArg.js';\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeKeys = overArg(Object.keys, Object);\r\n\r\nexport default nativeKeys;\r\n","/**\r\n * This function is like\r\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\r\n * except that it includes inherited enumerable properties.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the array of property names.\r\n */\r\nfunction nativeKeysIn(object) {\r\n  var result = [];\r\n  if (object != null) {\r\n    for (var key in Object(object)) {\r\n      result.push(key);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default nativeKeysIn;\r\n","import freeGlobal from './_freeGlobal.js';\r\n\r\n/** Detect free variable `exports`. */\r\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\r\n\r\n/** Detect free variable `module`. */\r\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\r\n\r\n/** Detect the popular CommonJS extension `module.exports`. */\r\nvar moduleExports = freeModule && freeModule.exports === freeExports;\r\n\r\n/** Detect free variable `process` from Node.js. */\r\nvar freeProcess = moduleExports && freeGlobal.process;\r\n\r\n/** Used to access faster Node.js helpers. */\r\nvar nodeUtil = (function() {\r\n  try {\r\n    // Use `util.types` for Node.js 10+.\r\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\r\n\r\n    if (types) {\r\n      return types;\r\n    }\r\n\r\n    // Legacy `process.binding('util')` for Node.js < 10.\r\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\r\n  } catch (e) {}\r\n}());\r\n\r\nexport default nodeUtil;\r\n","/** Used for built-in method references. */\r\nvar objectProto = Object.prototype;\r\n\r\n/**\r\n * Used to resolve the\r\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\r\n * of values.\r\n */\r\nvar nativeObjectToString = objectProto.toString;\r\n\r\n/**\r\n * Converts `value` to a string using `Object.prototype.toString`.\r\n *\r\n * @private\r\n * @param {*} value The value to convert.\r\n * @returns {string} Returns the converted string.\r\n */\r\nfunction objectToString(value) {\r\n  return nativeObjectToString.call(value);\r\n}\r\n\r\nexport default objectToString;\r\n","/**\r\n * Creates a unary function that invokes `func` with its argument transformed.\r\n *\r\n * @private\r\n * @param {Function} func The function to wrap.\r\n * @param {Function} transform The argument transform.\r\n * @returns {Function} Returns the new function.\r\n */\r\nfunction overArg(func, transform) {\r\n  return function(arg) {\r\n    return func(transform(arg));\r\n  };\r\n}\r\n\r\nexport default overArg;\r\n","import apply from './_apply.js';\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMax = Math.max;\r\n\r\n/**\r\n * A specialized version of `baseRest` which transforms the rest array.\r\n *\r\n * @private\r\n * @param {Function} func The function to apply a rest parameter to.\r\n * @param {number} [start=func.length-1] The start position of the rest parameter.\r\n * @param {Function} transform The rest array transform.\r\n * @returns {Function} Returns the new function.\r\n */\r\nfunction overRest(func, start, transform) {\r\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\r\n  return function() {\r\n    var args = arguments,\r\n        index = -1,\r\n        length = nativeMax(args.length - start, 0),\r\n        array = Array(length);\r\n\r\n    while (++index < length) {\r\n      array[index] = args[start + index];\r\n    }\r\n    index = -1;\r\n    var otherArgs = Array(start + 1);\r\n    while (++index < start) {\r\n      otherArgs[index] = args[index];\r\n    }\r\n    otherArgs[start] = transform(array);\r\n    return apply(func, this, otherArgs);\r\n  };\r\n}\r\n\r\nexport default overRest;\r\n","import baseGet from './_baseGet.js';\r\nimport baseSlice from './_baseSlice.js';\r\n\r\n/**\r\n * Gets the parent value at `path` of `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @param {Array} path The path to get the parent value of.\r\n * @returns {*} Returns the parent value.\r\n */\r\nfunction parent(object, path) {\r\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\r\n}\r\n\r\nexport default parent;\r\n","/** Used to match template delimiters. */\r\nvar reEscape = /<%-([\\s\\S]+?)%>/g;\r\n\r\nexport default reEscape;\r\n","/** Used to match template delimiters. */\r\nvar reEvaluate = /<%([\\s\\S]+?)%>/g;\r\n\r\nexport default reEvaluate;\r\n","/** Used to match template delimiters. */\r\nvar reInterpolate = /<%=([\\s\\S]+?)%>/g;\r\n\r\nexport default reInterpolate;\r\n","/** Used to lookup unminified function names. */\r\nvar realNames = {};\r\n\r\nexport default realNames;\r\n","import copyArray from './_copyArray.js';\r\nimport isIndex from './_isIndex.js';\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMin = Math.min;\r\n\r\n/**\r\n * Reorder `array` according to the specified indexes where the element at\r\n * the first index is assigned as the first element, the element at\r\n * the second index is assigned as the second element, and so on.\r\n *\r\n * @private\r\n * @param {Array} array The array to reorder.\r\n * @param {Array} indexes The arranged array indexes.\r\n * @returns {Array} Returns `array`.\r\n */\r\nfunction reorder(array, indexes) {\r\n  var arrLength = array.length,\r\n      length = nativeMin(indexes.length, arrLength),\r\n      oldArray = copyArray(array);\r\n\r\n  while (length--) {\r\n    var index = indexes[length];\r\n    array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\r\n  }\r\n  return array;\r\n}\r\n\r\nexport default reorder;\r\n","/** Used as the internal argument placeholder. */\r\nvar PLACEHOLDER = '__lodash_placeholder__';\r\n\r\n/**\r\n * Replaces all `placeholder` elements in `array` with an internal placeholder\r\n * and returns an array of their indexes.\r\n *\r\n * @private\r\n * @param {Array} array The array to modify.\r\n * @param {*} placeholder The placeholder to replace.\r\n * @returns {Array} Returns the new array of placeholder indexes.\r\n */\r\nfunction replaceHolders(array, placeholder) {\r\n  var index = -1,\r\n      length = array.length,\r\n      resIndex = 0,\r\n      result = [];\r\n\r\n  while (++index < length) {\r\n    var value = array[index];\r\n    if (value === placeholder || value === PLACEHOLDER) {\r\n      array[index] = PLACEHOLDER;\r\n      result[resIndex++] = index;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default replaceHolders;\r\n","import freeGlobal from './_freeGlobal.js';\r\n\r\n/** Detect free variable `self`. */\r\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\r\n\r\n/** Used as a reference to the global object. */\r\nvar root = freeGlobal || freeSelf || Function('return this')();\r\n\r\nexport default root;\r\n","/**\r\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @param {string} key The key of the property to get.\r\n * @returns {*} Returns the property value.\r\n */\r\nfunction safeGet(object, key) {\r\n  if (key === 'constructor' && typeof object[key] === 'function') {\r\n    return;\r\n  }\r\n\r\n  if (key == '__proto__') {\r\n    return;\r\n  }\r\n\r\n  return object[key];\r\n}\r\n\r\nexport default safeGet;\r\n","/** Used to stand-in for `undefined` hash values. */\r\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\r\n\r\n/**\r\n * Adds `value` to the array cache.\r\n *\r\n * @private\r\n * @name add\r\n * @memberOf SetCache\r\n * @alias push\r\n * @param {*} value The value to cache.\r\n * @returns {Object} Returns the cache instance.\r\n */\r\nfunction setCacheAdd(value) {\r\n  this.__data__.set(value, HASH_UNDEFINED);\r\n  return this;\r\n}\r\n\r\nexport default setCacheAdd;\r\n","/**\r\n * Checks if `value` is in the array cache.\r\n *\r\n * @private\r\n * @name has\r\n * @memberOf SetCache\r\n * @param {*} value The value to search for.\r\n * @returns {number} Returns `true` if `value` is found, else `false`.\r\n */\r\nfunction setCacheHas(value) {\r\n  return this.__data__.has(value);\r\n}\r\n\r\nexport default setCacheHas;\r\n","import baseSetData from './_baseSetData.js';\r\nimport shortOut from './_shortOut.js';\r\n\r\n/**\r\n * Sets metadata for `func`.\r\n *\r\n * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\r\n * period of time, it will trip its breaker and transition to an identity\r\n * function to avoid garbage collection pauses in V8. See\r\n * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\r\n * for more details.\r\n *\r\n * @private\r\n * @param {Function} func The function to associate metadata with.\r\n * @param {*} data The metadata.\r\n * @returns {Function} Returns `func`.\r\n */\r\nvar setData = shortOut(baseSetData);\r\n\r\nexport default setData;\r\n","/**\r\n * Converts `set` to an array of its values.\r\n *\r\n * @private\r\n * @param {Object} set The set to convert.\r\n * @returns {Array} Returns the values.\r\n */\r\nfunction setToArray(set) {\r\n  var index = -1,\r\n      result = Array(set.size);\r\n\r\n  set.forEach(function(value) {\r\n    result[++index] = value;\r\n  });\r\n  return result;\r\n}\r\n\r\nexport default setToArray;\r\n","/**\r\n * Converts `set` to its value-value pairs.\r\n *\r\n * @private\r\n * @param {Object} set The set to convert.\r\n * @returns {Array} Returns the value-value pairs.\r\n */\r\nfunction setToPairs(set) {\r\n  var index = -1,\r\n      result = Array(set.size);\r\n\r\n  set.forEach(function(value) {\r\n    result[++index] = [value, value];\r\n  });\r\n  return result;\r\n}\r\n\r\nexport default setToPairs;\r\n","import baseSetToString from './_baseSetToString.js';\r\nimport shortOut from './_shortOut.js';\r\n\r\n/**\r\n * Sets the `toString` method of `func` to return `string`.\r\n *\r\n * @private\r\n * @param {Function} func The function to modify.\r\n * @param {Function} string The `toString` result.\r\n * @returns {Function} Returns `func`.\r\n */\r\nvar setToString = shortOut(baseSetToString);\r\n\r\nexport default setToString;\r\n","import getWrapDetails from './_getWrapDetails.js';\r\nimport insertWrapDetails from './_insertWrapDetails.js';\r\nimport setToString from './_setToString.js';\r\nimport updateWrapDetails from './_updateWrapDetails.js';\r\n\r\n/**\r\n * Sets the `toString` method of `wrapper` to mimic the source of `reference`\r\n * with wrapper details in a comment at the top of the source body.\r\n *\r\n * @private\r\n * @param {Function} wrapper The function to modify.\r\n * @param {Function} reference The reference function.\r\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\r\n * @returns {Function} Returns `wrapper`.\r\n */\r\nfunction setWrapToString(wrapper, reference, bitmask) {\r\n  var source = (reference + '');\r\n  return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\r\n}\r\n\r\nexport default setWrapToString;\r\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\r\nvar HOT_COUNT = 800,\r\n    HOT_SPAN = 16;\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeNow = Date.now;\r\n\r\n/**\r\n * Creates a function that'll short out and invoke `identity` instead\r\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\r\n * milliseconds.\r\n *\r\n * @private\r\n * @param {Function} func The function to restrict.\r\n * @returns {Function} Returns the new shortable function.\r\n */\r\nfunction shortOut(func) {\r\n  var count = 0,\r\n      lastCalled = 0;\r\n\r\n  return function() {\r\n    var stamp = nativeNow(),\r\n        remaining = HOT_SPAN - (stamp - lastCalled);\r\n\r\n    lastCalled = stamp;\r\n    if (remaining > 0) {\r\n      if (++count >= HOT_COUNT) {\r\n        return arguments[0];\r\n      }\r\n    } else {\r\n      count = 0;\r\n    }\r\n    return func.apply(undefined, arguments);\r\n  };\r\n}\r\n\r\nexport default shortOut;\r\n","import baseRandom from './_baseRandom.js';\r\n\r\n/**\r\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\r\n *\r\n * @private\r\n * @param {Array} array The array to shuffle.\r\n * @param {number} [size=array.length] The size of `array`.\r\n * @returns {Array} Returns `array`.\r\n */\r\nfunction shuffleSelf(array, size) {\r\n  var index = -1,\r\n      length = array.length,\r\n      lastIndex = length - 1;\r\n\r\n  size = size === undefined ? length : size;\r\n  while (++index < size) {\r\n    var rand = baseRandom(index, lastIndex),\r\n        value = array[rand];\r\n\r\n    array[rand] = array[index];\r\n    array[index] = value;\r\n  }\r\n  array.length = size;\r\n  return array;\r\n}\r\n\r\nexport default shuffleSelf;\r\n","import ListCache from './_ListCache.js';\r\n\r\n/**\r\n * Removes all key-value entries from the stack.\r\n *\r\n * @private\r\n * @name clear\r\n * @memberOf Stack\r\n */\r\nfunction stackClear() {\r\n  this.__data__ = new ListCache;\r\n  this.size = 0;\r\n}\r\n\r\nexport default stackClear;\r\n","/**\r\n * Removes `key` and its value from the stack.\r\n *\r\n * @private\r\n * @name delete\r\n * @memberOf Stack\r\n * @param {string} key The key of the value to remove.\r\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\r\n */\r\nfunction stackDelete(key) {\r\n  var data = this.__data__,\r\n      result = data['delete'](key);\r\n\r\n  this.size = data.size;\r\n  return result;\r\n}\r\n\r\nexport default stackDelete;\r\n","/**\r\n * Gets the stack value for `key`.\r\n *\r\n * @private\r\n * @name get\r\n * @memberOf Stack\r\n * @param {string} key The key of the value to get.\r\n * @returns {*} Returns the entry value.\r\n */\r\nfunction stackGet(key) {\r\n  return this.__data__.get(key);\r\n}\r\n\r\nexport default stackGet;\r\n","/**\r\n * Checks if a stack value for `key` exists.\r\n *\r\n * @private\r\n * @name has\r\n * @memberOf Stack\r\n * @param {string} key The key of the entry to check.\r\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\r\n */\r\nfunction stackHas(key) {\r\n  return this.__data__.has(key);\r\n}\r\n\r\nexport default stackHas;\r\n","import ListCache from './_ListCache.js';\r\nimport Map from './_Map.js';\r\nimport MapCache from './_MapCache.js';\r\n\r\n/** Used as the size to enable large array optimizations. */\r\nvar LARGE_ARRAY_SIZE = 200;\r\n\r\n/**\r\n * Sets the stack `key` to `value`.\r\n *\r\n * @private\r\n * @name set\r\n * @memberOf Stack\r\n * @param {string} key The key of the value to set.\r\n * @param {*} value The value to set.\r\n * @returns {Object} Returns the stack cache instance.\r\n */\r\nfunction stackSet(key, value) {\r\n  var data = this.__data__;\r\n  if (data instanceof ListCache) {\r\n    var pairs = data.__data__;\r\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\r\n      pairs.push([key, value]);\r\n      this.size = ++data.size;\r\n      return this;\r\n    }\r\n    data = this.__data__ = new MapCache(pairs);\r\n  }\r\n  data.set(key, value);\r\n  this.size = data.size;\r\n  return this;\r\n}\r\n\r\nexport default stackSet;\r\n","/**\r\n * A specialized version of `_.indexOf` which performs strict equality\r\n * comparisons of values, i.e. `===`.\r\n *\r\n * @private\r\n * @param {Array} array The array to inspect.\r\n * @param {*} value The value to search for.\r\n * @param {number} fromIndex The index to search from.\r\n * @returns {number} Returns the index of the matched value, else `-1`.\r\n */\r\nfunction strictIndexOf(array, value, fromIndex) {\r\n  var index = fromIndex - 1,\r\n      length = array.length;\r\n\r\n  while (++index < length) {\r\n    if (array[index] === value) {\r\n      return index;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\nexport default strictIndexOf;\r\n","/**\r\n * A specialized version of `_.lastIndexOf` which performs strict equality\r\n * comparisons of values, i.e. `===`.\r\n *\r\n * @private\r\n * @param {Array} array The array to inspect.\r\n * @param {*} value The value to search for.\r\n * @param {number} fromIndex The index to search from.\r\n * @returns {number} Returns the index of the matched value, else `-1`.\r\n */\r\nfunction strictLastIndexOf(array, value, fromIndex) {\r\n  var index = fromIndex + 1;\r\n  while (index--) {\r\n    if (array[index] === value) {\r\n      return index;\r\n    }\r\n  }\r\n  return index;\r\n}\r\n\r\nexport default strictLastIndexOf;\r\n","import asciiSize from './_asciiSize.js';\r\nimport hasUnicode from './_hasUnicode.js';\r\nimport unicodeSize from './_unicodeSize.js';\r\n\r\n/**\r\n * Gets the number of symbols in `string`.\r\n *\r\n * @private\r\n * @param {string} string The string to inspect.\r\n * @returns {number} Returns the string size.\r\n */\r\nfunction stringSize(string) {\r\n  return hasUnicode(string)\r\n    ? unicodeSize(string)\r\n    : asciiSize(string);\r\n}\r\n\r\nexport default stringSize;\r\n","import asciiToArray from './_asciiToArray.js';\r\nimport hasUnicode from './_hasUnicode.js';\r\nimport unicodeToArray from './_unicodeToArray.js';\r\n\r\n/**\r\n * Converts `string` to an array.\r\n *\r\n * @private\r\n * @param {string} string The string to convert.\r\n * @returns {Array} Returns the converted array.\r\n */\r\nfunction stringToArray(string) {\r\n  return hasUnicode(string)\r\n    ? unicodeToArray(string)\r\n    : asciiToArray(string);\r\n}\r\n\r\nexport default stringToArray;\r\n","import memoizeCapped from './_memoizeCapped.js';\r\n\r\n/** Used to match property names within property paths. */\r\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\r\n\r\n/** Used to match backslashes in property paths. */\r\nvar reEscapeChar = /\\\\(\\\\)?/g;\r\n\r\n/**\r\n * Converts `string` to a property path array.\r\n *\r\n * @private\r\n * @param {string} string The string to convert.\r\n * @returns {Array} Returns the property path array.\r\n */\r\nvar stringToPath = memoizeCapped(function(string) {\r\n  var result = [];\r\n  if (string.charCodeAt(0) === 46 /* . */) {\r\n    result.push('');\r\n  }\r\n  string.replace(rePropName, function(match, number, quote, subString) {\r\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\r\n  });\r\n  return result;\r\n});\r\n\r\nexport default stringToPath;\r\n","import isSymbol from './isSymbol.js';\r\n\r\n/** Used as references for various `Number` constants. */\r\nvar INFINITY = 1 / 0;\r\n\r\n/**\r\n * Converts `value` to a string key if it's not a string or symbol.\r\n *\r\n * @private\r\n * @param {*} value The value to inspect.\r\n * @returns {string|symbol} Returns the key.\r\n */\r\nfunction toKey(value) {\r\n  if (typeof value == 'string' || isSymbol(value)) {\r\n    return value;\r\n  }\r\n  var result = (value + '');\r\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\r\n}\r\n\r\nexport default toKey;\r\n","/** Used for built-in method references. */\r\nvar funcProto = Function.prototype;\r\n\r\n/** Used to resolve the decompiled source of functions. */\r\nvar funcToString = funcProto.toString;\r\n\r\n/**\r\n * Converts `func` to its source code.\r\n *\r\n * @private\r\n * @param {Function} func The function to convert.\r\n * @returns {string} Returns the source code.\r\n */\r\nfunction toSource(func) {\r\n  if (func != null) {\r\n    try {\r\n      return funcToString.call(func);\r\n    } catch (e) {}\r\n    try {\r\n      return (func + '');\r\n    } catch (e) {}\r\n  }\r\n  return '';\r\n}\r\n\r\nexport default toSource;\r\n","import basePropertyOf from './_basePropertyOf.js';\r\n\r\n/** Used to map HTML entities to characters. */\r\nvar htmlUnescapes = {\r\n  '&amp;': '&',\r\n  '&lt;': '<',\r\n  '&gt;': '>',\r\n  '&quot;': '\"',\r\n  '&#39;': \"'\"\r\n};\r\n\r\n/**\r\n * Used by `_.unescape` to convert HTML entities to characters.\r\n *\r\n * @private\r\n * @param {string} chr The matched character to unescape.\r\n * @returns {string} Returns the unescaped character.\r\n */\r\nvar unescapeHtmlChar = basePropertyOf(htmlUnescapes);\r\n\r\nexport default unescapeHtmlChar;\r\n","/** Used to compose unicode character classes. */\r\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\r\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\r\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\r\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\r\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\r\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\r\n\r\n/** Used to compose unicode capture groups. */\r\nvar rsAstral = '[' + rsAstralRange + ']',\r\n    rsCombo = '[' + rsComboRange + ']',\r\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\r\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\r\n    rsNonAstral = '[^' + rsAstralRange + ']',\r\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\r\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\r\n    rsZWJ = '\\\\u200d';\r\n\r\n/** Used to compose unicode regexes. */\r\nvar reOptMod = rsModifier + '?',\r\n    rsOptVar = '[' + rsVarRange + ']?',\r\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\r\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\r\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\r\n\r\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\r\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\r\n\r\n/**\r\n * Gets the size of a Unicode `string`.\r\n *\r\n * @private\r\n * @param {string} string The string inspect.\r\n * @returns {number} Returns the string size.\r\n */\r\nfunction unicodeSize(string) {\r\n  var result = reUnicode.lastIndex = 0;\r\n  while (reUnicode.test(string)) {\r\n    ++result;\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default unicodeSize;\r\n","/** Used to compose unicode character classes. */\r\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\r\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\r\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\r\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\r\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\r\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\r\n\r\n/** Used to compose unicode capture groups. */\r\nvar rsAstral = '[' + rsAstralRange + ']',\r\n    rsCombo = '[' + rsComboRange + ']',\r\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\r\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\r\n    rsNonAstral = '[^' + rsAstralRange + ']',\r\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\r\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\r\n    rsZWJ = '\\\\u200d';\r\n\r\n/** Used to compose unicode regexes. */\r\nvar reOptMod = rsModifier + '?',\r\n    rsOptVar = '[' + rsVarRange + ']?',\r\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\r\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\r\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\r\n\r\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\r\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\r\n\r\n/**\r\n * Converts a Unicode `string` to an array.\r\n *\r\n * @private\r\n * @param {string} string The string to convert.\r\n * @returns {Array} Returns the converted array.\r\n */\r\nfunction unicodeToArray(string) {\r\n  return string.match(reUnicode) || [];\r\n}\r\n\r\nexport default unicodeToArray;\r\n","/** Used to compose unicode character classes. */\r\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\r\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\r\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\r\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\r\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\r\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\r\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\r\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\r\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\r\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\r\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\r\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\r\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\r\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\r\n\r\n/** Used to compose unicode capture groups. */\r\nvar rsApos = \"['\\u2019]\",\r\n    rsBreak = '[' + rsBreakRange + ']',\r\n    rsCombo = '[' + rsComboRange + ']',\r\n    rsDigits = '\\\\d+',\r\n    rsDingbat = '[' + rsDingbatRange + ']',\r\n    rsLower = '[' + rsLowerRange + ']',\r\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\r\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\r\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\r\n    rsNonAstral = '[^' + rsAstralRange + ']',\r\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\r\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\r\n    rsUpper = '[' + rsUpperRange + ']',\r\n    rsZWJ = '\\\\u200d';\r\n\r\n/** Used to compose unicode regexes. */\r\nvar rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\r\n    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\r\n    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\r\n    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\r\n    reOptMod = rsModifier + '?',\r\n    rsOptVar = '[' + rsVarRange + ']?',\r\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\r\n    rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\r\n    rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\r\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\r\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\r\n\r\n/** Used to match complex or compound words. */\r\nvar reUnicodeWord = RegExp([\r\n  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\r\n  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\r\n  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\r\n  rsUpper + '+' + rsOptContrUpper,\r\n  rsOrdUpper,\r\n  rsOrdLower,\r\n  rsDigits,\r\n  rsEmoji\r\n].join('|'), 'g');\r\n\r\n/**\r\n * Splits a Unicode `string` into an array of its words.\r\n *\r\n * @private\r\n * @param {string} The string to inspect.\r\n * @returns {Array} Returns the words of `string`.\r\n */\r\nfunction unicodeWords(string) {\r\n  return string.match(reUnicodeWord) || [];\r\n}\r\n\r\nexport default unicodeWords;\r\n","import arrayEach from './_arrayEach.js';\r\nimport arrayIncludes from './_arrayIncludes.js';\r\n\r\n/** Used to compose bitmasks for function metadata. */\r\nvar WRAP_BIND_FLAG = 1,\r\n    WRAP_BIND_KEY_FLAG = 2,\r\n    WRAP_CURRY_FLAG = 8,\r\n    WRAP_CURRY_RIGHT_FLAG = 16,\r\n    WRAP_PARTIAL_FLAG = 32,\r\n    WRAP_PARTIAL_RIGHT_FLAG = 64,\r\n    WRAP_ARY_FLAG = 128,\r\n    WRAP_REARG_FLAG = 256,\r\n    WRAP_FLIP_FLAG = 512;\r\n\r\n/** Used to associate wrap methods with their bit flags. */\r\nvar wrapFlags = [\r\n  ['ary', WRAP_ARY_FLAG],\r\n  ['bind', WRAP_BIND_FLAG],\r\n  ['bindKey', WRAP_BIND_KEY_FLAG],\r\n  ['curry', WRAP_CURRY_FLAG],\r\n  ['curryRight', WRAP_CURRY_RIGHT_FLAG],\r\n  ['flip', WRAP_FLIP_FLAG],\r\n  ['partial', WRAP_PARTIAL_FLAG],\r\n  ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\r\n  ['rearg', WRAP_REARG_FLAG]\r\n];\r\n\r\n/**\r\n * Updates wrapper `details` based on `bitmask` flags.\r\n *\r\n * @private\r\n * @returns {Array} details The details to modify.\r\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\r\n * @returns {Array} Returns `details`.\r\n */\r\nfunction updateWrapDetails(details, bitmask) {\r\n  arrayEach(wrapFlags, function(pair) {\r\n    var value = '_.' + pair[0];\r\n    if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\r\n      details.push(value);\r\n    }\r\n  });\r\n  return details.sort();\r\n}\r\n\r\nexport default updateWrapDetails;\r\n","import LazyWrapper from './_LazyWrapper.js';\r\nimport LodashWrapper from './_LodashWrapper.js';\r\nimport copyArray from './_copyArray.js';\r\n\r\n/**\r\n * Creates a clone of `wrapper`.\r\n *\r\n * @private\r\n * @param {Object} wrapper The wrapper to clone.\r\n * @returns {Object} Returns the cloned wrapper.\r\n */\r\nfunction wrapperClone(wrapper) {\r\n  if (wrapper instanceof LazyWrapper) {\r\n    return wrapper.clone();\r\n  }\r\n  var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\r\n  result.__actions__ = copyArray(wrapper.__actions__);\r\n  result.__index__  = wrapper.__index__;\r\n  result.__values__ = wrapper.__values__;\r\n  return result;\r\n}\r\n\r\nexport default wrapperClone;\r\n","import createMathOperation from './_createMathOperation.js';\r\n\r\n/**\r\n * Adds two numbers.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.4.0\r\n * @category Math\r\n * @param {number} augend The first number in an addition.\r\n * @param {number} addend The second number in an addition.\r\n * @returns {number} Returns the total.\r\n * @example\r\n *\r\n * _.add(6, 4);\r\n * // => 10\r\n */\r\nvar add = createMathOperation(function(augend, addend) {\r\n  return augend + addend;\r\n}, 0);\r\n\r\nexport default add;\r\n","import toInteger from './toInteger.js';\r\n\r\n/** Error message constants. */\r\nvar FUNC_ERROR_TEXT = 'Expected a function';\r\n\r\n/**\r\n * The opposite of `_.before`; this method creates a function that invokes\r\n * `func` once it's called `n` or more times.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Function\r\n * @param {number} n The number of calls before `func` is invoked.\r\n * @param {Function} func The function to restrict.\r\n * @returns {Function} Returns the new restricted function.\r\n * @example\r\n *\r\n * var saves = ['profile', 'settings'];\r\n *\r\n * var done = _.after(saves.length, function() {\r\n *   console.log('done saving!');\r\n * });\r\n *\r\n * _.forEach(saves, function(type) {\r\n *   asyncSave({ 'type': type, 'complete': done });\r\n * });\r\n * // => Logs 'done saving!' after the two async saves have completed.\r\n */\r\nfunction after(n, func) {\r\n  if (typeof func != 'function') {\r\n    throw new TypeError(FUNC_ERROR_TEXT);\r\n  }\r\n  n = toInteger(n);\r\n  return function() {\r\n    if (--n < 1) {\r\n      return func.apply(this, arguments);\r\n    }\r\n  };\r\n}\r\n\r\nexport default after;\r\n","import chunk from './chunk.js';\r\nimport compact from './compact.js';\r\nimport concat from './concat.js';\r\nimport difference from './difference.js';\r\nimport differenceBy from './differenceBy.js';\r\nimport differenceWith from './differenceWith.js';\r\nimport drop from './drop.js';\r\nimport dropRight from './dropRight.js';\r\nimport dropRightWhile from './dropRightWhile.js';\r\nimport dropWhile from './dropWhile.js';\r\nimport fill from './fill.js';\r\nimport findIndex from './findIndex.js';\r\nimport findLastIndex from './findLastIndex.js';\r\nimport first from './first.js';\r\nimport flatten from './flatten.js';\r\nimport flattenDeep from './flattenDeep.js';\r\nimport flattenDepth from './flattenDepth.js';\r\nimport fromPairs from './fromPairs.js';\r\nimport head from './head.js';\r\nimport indexOf from './indexOf.js';\r\nimport initial from './initial.js';\r\nimport intersection from './intersection.js';\r\nimport intersectionBy from './intersectionBy.js';\r\nimport intersectionWith from './intersectionWith.js';\r\nimport join from './join.js';\r\nimport last from './last.js';\r\nimport lastIndexOf from './lastIndexOf.js';\r\nimport nth from './nth.js';\r\nimport pull from './pull.js';\r\nimport pullAll from './pullAll.js';\r\nimport pullAllBy from './pullAllBy.js';\r\nimport pullAllWith from './pullAllWith.js';\r\nimport pullAt from './pullAt.js';\r\nimport remove from './remove.js';\r\nimport reverse from './reverse.js';\r\nimport slice from './slice.js';\r\nimport sortedIndex from './sortedIndex.js';\r\nimport sortedIndexBy from './sortedIndexBy.js';\r\nimport sortedIndexOf from './sortedIndexOf.js';\r\nimport sortedLastIndex from './sortedLastIndex.js';\r\nimport sortedLastIndexBy from './sortedLastIndexBy.js';\r\nimport sortedLastIndexOf from './sortedLastIndexOf.js';\r\nimport sortedUniq from './sortedUniq.js';\r\nimport sortedUniqBy from './sortedUniqBy.js';\r\nimport tail from './tail.js';\r\nimport take from './take.js';\r\nimport takeRight from './takeRight.js';\r\nimport takeRightWhile from './takeRightWhile.js';\r\nimport takeWhile from './takeWhile.js';\r\nimport union from './union.js';\r\nimport unionBy from './unionBy.js';\r\nimport unionWith from './unionWith.js';\r\nimport uniq from './uniq.js';\r\nimport uniqBy from './uniqBy.js';\r\nimport uniqWith from './uniqWith.js';\r\nimport unzip from './unzip.js';\r\nimport unzipWith from './unzipWith.js';\r\nimport without from './without.js';\r\nimport xor from './xor.js';\r\nimport xorBy from './xorBy.js';\r\nimport xorWith from './xorWith.js';\r\nimport zip from './zip.js';\r\nimport zipObject from './zipObject.js';\r\nimport zipObjectDeep from './zipObjectDeep.js';\r\nimport zipWith from './zipWith.js';\r\n\r\nexport default {\r\n  chunk, compact, concat, difference, differenceBy,\r\n  differenceWith, drop, dropRight, dropRightWhile, dropWhile,\r\n  fill, findIndex, findLastIndex, first, flatten,\r\n  flattenDeep, flattenDepth, fromPairs, head, indexOf,\r\n  initial, intersection, intersectionBy, intersectionWith, join,\r\n  last, lastIndexOf, nth, pull, pullAll,\r\n  pullAllBy, pullAllWith, pullAt, remove, reverse,\r\n  slice, sortedIndex, sortedIndexBy, sortedIndexOf, sortedLastIndex,\r\n  sortedLastIndexBy, sortedLastIndexOf, sortedUniq, sortedUniqBy, tail,\r\n  take, takeRight, takeRightWhile, takeWhile, union,\r\n  unionBy, unionWith, uniq, uniqBy, uniqWith,\r\n  unzip, unzipWith, without, xor, xorBy,\r\n  xorWith, zip, zipObject, zipObjectDeep, zipWith\r\n};\r\n","export { default as chunk } from './chunk.js';\r\nexport { default as compact } from './compact.js';\r\nexport { default as concat } from './concat.js';\r\nexport { default as difference } from './difference.js';\r\nexport { default as differenceBy } from './differenceBy.js';\r\nexport { default as differenceWith } from './differenceWith.js';\r\nexport { default as drop } from './drop.js';\r\nexport { default as dropRight } from './dropRight.js';\r\nexport { default as dropRightWhile } from './dropRightWhile.js';\r\nexport { default as dropWhile } from './dropWhile.js';\r\nexport { default as fill } from './fill.js';\r\nexport { default as findIndex } from './findIndex.js';\r\nexport { default as findLastIndex } from './findLastIndex.js';\r\nexport { default as first } from './first.js';\r\nexport { default as flatten } from './flatten.js';\r\nexport { default as flattenDeep } from './flattenDeep.js';\r\nexport { default as flattenDepth } from './flattenDepth.js';\r\nexport { default as fromPairs } from './fromPairs.js';\r\nexport { default as head } from './head.js';\r\nexport { default as indexOf } from './indexOf.js';\r\nexport { default as initial } from './initial.js';\r\nexport { default as intersection } from './intersection.js';\r\nexport { default as intersectionBy } from './intersectionBy.js';\r\nexport { default as intersectionWith } from './intersectionWith.js';\r\nexport { default as join } from './join.js';\r\nexport { default as last } from './last.js';\r\nexport { default as lastIndexOf } from './lastIndexOf.js';\r\nexport { default as nth } from './nth.js';\r\nexport { default as pull } from './pull.js';\r\nexport { default as pullAll } from './pullAll.js';\r\nexport { default as pullAllBy } from './pullAllBy.js';\r\nexport { default as pullAllWith } from './pullAllWith.js';\r\nexport { default as pullAt } from './pullAt.js';\r\nexport { default as remove } from './remove.js';\r\nexport { default as reverse } from './reverse.js';\r\nexport { default as slice } from './slice.js';\r\nexport { default as sortedIndex } from './sortedIndex.js';\r\nexport { default as sortedIndexBy } from './sortedIndexBy.js';\r\nexport { default as sortedIndexOf } from './sortedIndexOf.js';\r\nexport { default as sortedLastIndex } from './sortedLastIndex.js';\r\nexport { default as sortedLastIndexBy } from './sortedLastIndexBy.js';\r\nexport { default as sortedLastIndexOf } from './sortedLastIndexOf.js';\r\nexport { default as sortedUniq } from './sortedUniq.js';\r\nexport { default as sortedUniqBy } from './sortedUniqBy.js';\r\nexport { default as tail } from './tail.js';\r\nexport { default as take } from './take.js';\r\nexport { default as takeRight } from './takeRight.js';\r\nexport { default as takeRightWhile } from './takeRightWhile.js';\r\nexport { default as takeWhile } from './takeWhile.js';\r\nexport { default as union } from './union.js';\r\nexport { default as unionBy } from './unionBy.js';\r\nexport { default as unionWith } from './unionWith.js';\r\nexport { default as uniq } from './uniq.js';\r\nexport { default as uniqBy } from './uniqBy.js';\r\nexport { default as uniqWith } from './uniqWith.js';\r\nexport { default as unzip } from './unzip.js';\r\nexport { default as unzipWith } from './unzipWith.js';\r\nexport { default as without } from './without.js';\r\nexport { default as xor } from './xor.js';\r\nexport { default as xorBy } from './xorBy.js';\r\nexport { default as xorWith } from './xorWith.js';\r\nexport { default as zip } from './zip.js';\r\nexport { default as zipObject } from './zipObject.js';\r\nexport { default as zipObjectDeep } from './zipObjectDeep.js';\r\nexport { default as zipWith } from './zipWith.js';\r\nexport { default } from './array.default.js';\r\n","import createWrap from './_createWrap.js';\r\n\r\n/** Used to compose bitmasks for function metadata. */\r\nvar WRAP_ARY_FLAG = 128;\r\n\r\n/**\r\n * Creates a function that invokes `func`, with up to `n` arguments,\r\n * ignoring any additional arguments.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Function\r\n * @param {Function} func The function to cap arguments for.\r\n * @param {number} [n=func.length] The arity cap.\r\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\r\n * @returns {Function} Returns the new capped function.\r\n * @example\r\n *\r\n * _.map(['6', '8', '10'], _.ary(parseInt, 1));\r\n * // => [6, 8, 10]\r\n */\r\nfunction ary(func, n, guard) {\r\n  n = guard ? undefined : n;\r\n  n = (func && n == null) ? func.length : n;\r\n  return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\r\n}\r\n\r\nexport default ary;\r\n","import assignValue from './_assignValue.js';\r\nimport copyObject from './_copyObject.js';\r\nimport createAssigner from './_createAssigner.js';\r\nimport isArrayLike from './isArrayLike.js';\r\nimport isPrototype from './_isPrototype.js';\r\nimport keys from './keys.js';\r\n\r\n/** Used for built-in method references. */\r\nvar objectProto = Object.prototype;\r\n\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n/**\r\n * Assigns own enumerable string keyed properties of source objects to the\r\n * destination object. Source objects are applied from left to right.\r\n * Subsequent sources overwrite property assignments of previous sources.\r\n *\r\n * **Note:** This method mutates `object` and is loosely based on\r\n * [`Object.assign`](https://mdn.io/Object/assign).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.10.0\r\n * @category Object\r\n * @param {Object} object The destination object.\r\n * @param {...Object} [sources] The source objects.\r\n * @returns {Object} Returns `object`.\r\n * @see _.assignIn\r\n * @example\r\n *\r\n * function Foo() {\r\n *   this.a = 1;\r\n * }\r\n *\r\n * function Bar() {\r\n *   this.c = 3;\r\n * }\r\n *\r\n * Foo.prototype.b = 2;\r\n * Bar.prototype.d = 4;\r\n *\r\n * _.assign({ 'a': 0 }, new Foo, new Bar);\r\n * // => { 'a': 1, 'c': 3 }\r\n */\r\nvar assign = createAssigner(function(object, source) {\r\n  if (isPrototype(source) || isArrayLike(source)) {\r\n    copyObject(source, keys(source), object);\r\n    return;\r\n  }\r\n  for (var key in source) {\r\n    if (hasOwnProperty.call(source, key)) {\r\n      assignValue(object, key, source[key]);\r\n    }\r\n  }\r\n});\r\n\r\nexport default assign;\r\n","import copyObject from './_copyObject.js';\r\nimport createAssigner from './_createAssigner.js';\r\nimport keysIn from './keysIn.js';\r\n\r\n/**\r\n * This method is like `_.assign` except that it iterates over own and\r\n * inherited source properties.\r\n *\r\n * **Note:** This method mutates `object`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @alias extend\r\n * @category Object\r\n * @param {Object} object The destination object.\r\n * @param {...Object} [sources] The source objects.\r\n * @returns {Object} Returns `object`.\r\n * @see _.assign\r\n * @example\r\n *\r\n * function Foo() {\r\n *   this.a = 1;\r\n * }\r\n *\r\n * function Bar() {\r\n *   this.c = 3;\r\n * }\r\n *\r\n * Foo.prototype.b = 2;\r\n * Bar.prototype.d = 4;\r\n *\r\n * _.assignIn({ 'a': 0 }, new Foo, new Bar);\r\n * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\r\n */\r\nvar assignIn = createAssigner(function(object, source) {\r\n  copyObject(source, keysIn(source), object);\r\n});\r\n\r\nexport default assignIn;\r\n","import copyObject from './_copyObject.js';\r\nimport createAssigner from './_createAssigner.js';\r\nimport keysIn from './keysIn.js';\r\n\r\n/**\r\n * This method is like `_.assignIn` except that it accepts `customizer`\r\n * which is invoked to produce the assigned values. If `customizer` returns\r\n * `undefined`, assignment is handled by the method instead. The `customizer`\r\n * is invoked with five arguments: (objValue, srcValue, key, object, source).\r\n *\r\n * **Note:** This method mutates `object`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @alias extendWith\r\n * @category Object\r\n * @param {Object} object The destination object.\r\n * @param {...Object} sources The source objects.\r\n * @param {Function} [customizer] The function to customize assigned values.\r\n * @returns {Object} Returns `object`.\r\n * @see _.assignWith\r\n * @example\r\n *\r\n * function customizer(objValue, srcValue) {\r\n *   return _.isUndefined(objValue) ? srcValue : objValue;\r\n * }\r\n *\r\n * var defaults = _.partialRight(_.assignInWith, customizer);\r\n *\r\n * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\r\n * // => { 'a': 1, 'b': 2 }\r\n */\r\nvar assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\r\n  copyObject(source, keysIn(source), object, customizer);\r\n});\r\n\r\nexport default assignInWith;\r\n","import copyObject from './_copyObject.js';\r\nimport createAssigner from './_createAssigner.js';\r\nimport keys from './keys.js';\r\n\r\n/**\r\n * This method is like `_.assign` except that it accepts `customizer`\r\n * which is invoked to produce the assigned values. If `customizer` returns\r\n * `undefined`, assignment is handled by the method instead. The `customizer`\r\n * is invoked with five arguments: (objValue, srcValue, key, object, source).\r\n *\r\n * **Note:** This method mutates `object`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Object\r\n * @param {Object} object The destination object.\r\n * @param {...Object} sources The source objects.\r\n * @param {Function} [customizer] The function to customize assigned values.\r\n * @returns {Object} Returns `object`.\r\n * @see _.assignInWith\r\n * @example\r\n *\r\n * function customizer(objValue, srcValue) {\r\n *   return _.isUndefined(objValue) ? srcValue : objValue;\r\n * }\r\n *\r\n * var defaults = _.partialRight(_.assignWith, customizer);\r\n *\r\n * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\r\n * // => { 'a': 1, 'b': 2 }\r\n */\r\nvar assignWith = createAssigner(function(object, source, srcIndex, customizer) {\r\n  copyObject(source, keys(source), object, customizer);\r\n});\r\n\r\nexport default assignWith;\r\n","import baseAt from './_baseAt.js';\r\nimport flatRest from './_flatRest.js';\r\n\r\n/**\r\n * Creates an array of values corresponding to `paths` of `object`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 1.0.0\r\n * @category Object\r\n * @param {Object} object The object to iterate over.\r\n * @param {...(string|string[])} [paths] The property paths to pick.\r\n * @returns {Array} Returns the picked values.\r\n * @example\r\n *\r\n * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\r\n *\r\n * _.at(object, ['a[0].b.c', 'a[1]']);\r\n * // => [3, 4]\r\n */\r\nvar at = flatRest(baseAt);\r\n\r\nexport default at;\r\n","import apply from './_apply.js';\r\nimport baseRest from './_baseRest.js';\r\nimport isError from './isError.js';\r\n\r\n/**\r\n * Attempts to invoke `func`, returning either the result or the caught error\r\n * object. Any additional arguments are provided to `func` when it's invoked.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Util\r\n * @param {Function} func The function to attempt.\r\n * @param {...*} [args] The arguments to invoke `func` with.\r\n * @returns {*} Returns the `func` result or error object.\r\n * @example\r\n *\r\n * // Avoid throwing errors for invalid selectors.\r\n * var elements = _.attempt(function(selector) {\r\n *   return document.querySelectorAll(selector);\r\n * }, '>_>');\r\n *\r\n * if (_.isError(elements)) {\r\n *   elements = [];\r\n * }\r\n */\r\nvar attempt = baseRest(function(func, args) {\r\n  try {\r\n    return apply(func, undefined, args);\r\n  } catch (e) {\r\n    return isError(e) ? e : new Error(e);\r\n  }\r\n});\r\n\r\nexport default attempt;\r\n","import toInteger from './toInteger.js';\r\n\r\n/** Error message constants. */\r\nvar FUNC_ERROR_TEXT = 'Expected a function';\r\n\r\n/**\r\n * Creates a function that invokes `func`, with the `this` binding and arguments\r\n * of the created function, while it's called less than `n` times. Subsequent\r\n * calls to the created function return the result of the last `func` invocation.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Function\r\n * @param {number} n The number of calls at which `func` is no longer invoked.\r\n * @param {Function} func The function to restrict.\r\n * @returns {Function} Returns the new restricted function.\r\n * @example\r\n *\r\n * jQuery(element).on('click', _.before(5, addContactToList));\r\n * // => Allows adding up to 4 contacts to the list.\r\n */\r\nfunction before(n, func) {\r\n  var result;\r\n  if (typeof func != 'function') {\r\n    throw new TypeError(FUNC_ERROR_TEXT);\r\n  }\r\n  n = toInteger(n);\r\n  return function() {\r\n    if (--n > 0) {\r\n      result = func.apply(this, arguments);\r\n    }\r\n    if (n <= 1) {\r\n      func = undefined;\r\n    }\r\n    return result;\r\n  };\r\n}\r\n\r\nexport default before;\r\n","import baseRest from './_baseRest.js';\r\nimport createWrap from './_createWrap.js';\r\nimport getHolder from './_getHolder.js';\r\nimport replaceHolders from './_replaceHolders.js';\r\n\r\n/** Used to compose bitmasks for function metadata. */\r\nvar WRAP_BIND_FLAG = 1,\r\n    WRAP_PARTIAL_FLAG = 32;\r\n\r\n/**\r\n * Creates a function that invokes `func` with the `this` binding of `thisArg`\r\n * and `partials` prepended to the arguments it receives.\r\n *\r\n * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\r\n * may be used as a placeholder for partially applied arguments.\r\n *\r\n * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\r\n * property of bound functions.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Function\r\n * @param {Function} func The function to bind.\r\n * @param {*} thisArg The `this` binding of `func`.\r\n * @param {...*} [partials] The arguments to be partially applied.\r\n * @returns {Function} Returns the new bound function.\r\n * @example\r\n *\r\n * function greet(greeting, punctuation) {\r\n *   return greeting + ' ' + this.user + punctuation;\r\n * }\r\n *\r\n * var object = { 'user': 'fred' };\r\n *\r\n * var bound = _.bind(greet, object, 'hi');\r\n * bound('!');\r\n * // => 'hi fred!'\r\n *\r\n * // Bound with placeholders.\r\n * var bound = _.bind(greet, object, _, '!');\r\n * bound('hi');\r\n * // => 'hi fred!'\r\n */\r\nvar bind = baseRest(function(func, thisArg, partials) {\r\n  var bitmask = WRAP_BIND_FLAG;\r\n  if (partials.length) {\r\n    var holders = replaceHolders(partials, getHolder(bind));\r\n    bitmask |= WRAP_PARTIAL_FLAG;\r\n  }\r\n  return createWrap(func, bitmask, thisArg, partials, holders);\r\n});\r\n\r\n// Assign default placeholders.\r\nbind.placeholder = {};\r\n\r\nexport default bind;\r\n","import arrayEach from './_arrayEach.js';\r\nimport baseAssignValue from './_baseAssignValue.js';\r\nimport bind from './bind.js';\r\nimport flatRest from './_flatRest.js';\r\nimport toKey from './_toKey.js';\r\n\r\n/**\r\n * Binds methods of an object to the object itself, overwriting the existing\r\n * method.\r\n *\r\n * **Note:** This method doesn't set the \"length\" property of bound functions.\r\n *\r\n * @static\r\n * @since 0.1.0\r\n * @memberOf _\r\n * @category Util\r\n * @param {Object} object The object to bind and assign the bound methods to.\r\n * @param {...(string|string[])} methodNames The object method names to bind.\r\n * @returns {Object} Returns `object`.\r\n * @example\r\n *\r\n * var view = {\r\n *   'label': 'docs',\r\n *   'click': function() {\r\n *     console.log('clicked ' + this.label);\r\n *   }\r\n * };\r\n *\r\n * _.bindAll(view, ['click']);\r\n * jQuery(element).on('click', view.click);\r\n * // => Logs 'clicked docs' when clicked.\r\n */\r\nvar bindAll = flatRest(function(object, methodNames) {\r\n  arrayEach(methodNames, function(key) {\r\n    key = toKey(key);\r\n    baseAssignValue(object, key, bind(object[key], object));\r\n  });\r\n  return object;\r\n});\r\n\r\nexport default bindAll;\r\n","import baseRest from './_baseRest.js';\r\nimport createWrap from './_createWrap.js';\r\nimport getHolder from './_getHolder.js';\r\nimport replaceHolders from './_replaceHolders.js';\r\n\r\n/** Used to compose bitmasks for function metadata. */\r\nvar WRAP_BIND_FLAG = 1,\r\n    WRAP_BIND_KEY_FLAG = 2,\r\n    WRAP_PARTIAL_FLAG = 32;\r\n\r\n/**\r\n * Creates a function that invokes the method at `object[key]` with `partials`\r\n * prepended to the arguments it receives.\r\n *\r\n * This method differs from `_.bind` by allowing bound functions to reference\r\n * methods that may be redefined or don't yet exist. See\r\n * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\r\n * for more details.\r\n *\r\n * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\r\n * builds, may be used as a placeholder for partially applied arguments.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.10.0\r\n * @category Function\r\n * @param {Object} object The object to invoke the method on.\r\n * @param {string} key The key of the method.\r\n * @param {...*} [partials] The arguments to be partially applied.\r\n * @returns {Function} Returns the new bound function.\r\n * @example\r\n *\r\n * var object = {\r\n *   'user': 'fred',\r\n *   'greet': function(greeting, punctuation) {\r\n *     return greeting + ' ' + this.user + punctuation;\r\n *   }\r\n * };\r\n *\r\n * var bound = _.bindKey(object, 'greet', 'hi');\r\n * bound('!');\r\n * // => 'hi fred!'\r\n *\r\n * object.greet = function(greeting, punctuation) {\r\n *   return greeting + 'ya ' + this.user + punctuation;\r\n * };\r\n *\r\n * bound('!');\r\n * // => 'hiya fred!'\r\n *\r\n * // Bound with placeholders.\r\n * var bound = _.bindKey(object, 'greet', _, '!');\r\n * bound('hi');\r\n * // => 'hiya fred!'\r\n */\r\nvar bindKey = baseRest(function(object, key, partials) {\r\n  var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\r\n  if (partials.length) {\r\n    var holders = replaceHolders(partials, getHolder(bindKey));\r\n    bitmask |= WRAP_PARTIAL_FLAG;\r\n  }\r\n  return createWrap(key, bitmask, object, partials, holders);\r\n});\r\n\r\n// Assign default placeholders.\r\nbindKey.placeholder = {};\r\n\r\nexport default bindKey;\r\n","import capitalize from './capitalize.js';\r\nimport createCompounder from './_createCompounder.js';\r\n\r\n/**\r\n * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category String\r\n * @param {string} [string=''] The string to convert.\r\n * @returns {string} Returns the camel cased string.\r\n * @example\r\n *\r\n * _.camelCase('Foo Bar');\r\n * // => 'fooBar'\r\n *\r\n * _.camelCase('--foo-bar--');\r\n * // => 'fooBar'\r\n *\r\n * _.camelCase('__FOO_BAR__');\r\n * // => 'fooBar'\r\n */\r\nvar camelCase = createCompounder(function(result, word, index) {\r\n  word = word.toLowerCase();\r\n  return result + (index ? capitalize(word) : word);\r\n});\r\n\r\nexport default camelCase;\r\n","import toString from './toString.js';\r\nimport upperFirst from './upperFirst.js';\r\n\r\n/**\r\n * Converts the first character of `string` to upper case and the remaining\r\n * to lower case.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category String\r\n * @param {string} [string=''] The string to capitalize.\r\n * @returns {string} Returns the capitalized string.\r\n * @example\r\n *\r\n * _.capitalize('FRED');\r\n * // => 'Fred'\r\n */\r\nfunction capitalize(string) {\r\n  return upperFirst(toString(string).toLowerCase());\r\n}\r\n\r\nexport default capitalize;\r\n","import isArray from './isArray.js';\r\n\r\n/**\r\n * Casts `value` as an array if it's not one.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.4.0\r\n * @category Lang\r\n * @param {*} value The value to inspect.\r\n * @returns {Array} Returns the cast array.\r\n * @example\r\n *\r\n * _.castArray(1);\r\n * // => [1]\r\n *\r\n * _.castArray({ 'a': 1 });\r\n * // => [{ 'a': 1 }]\r\n *\r\n * _.castArray('abc');\r\n * // => ['abc']\r\n *\r\n * _.castArray(null);\r\n * // => [null]\r\n *\r\n * _.castArray(undefined);\r\n * // => [undefined]\r\n *\r\n * _.castArray();\r\n * // => []\r\n *\r\n * var array = [1, 2, 3];\r\n * console.log(_.castArray(array) === array);\r\n * // => true\r\n */\r\nfunction castArray() {\r\n  if (!arguments.length) {\r\n    return [];\r\n  }\r\n  var value = arguments[0];\r\n  return isArray(value) ? value : [value];\r\n}\r\n\r\nexport default castArray;\r\n","import createRound from './_createRound.js';\r\n\r\n/**\r\n * Computes `number` rounded up to `precision`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.10.0\r\n * @category Math\r\n * @param {number} number The number to round up.\r\n * @param {number} [precision=0] The precision to round up to.\r\n * @returns {number} Returns the rounded up number.\r\n * @example\r\n *\r\n * _.ceil(4.006);\r\n * // => 5\r\n *\r\n * _.ceil(6.004, 2);\r\n * // => 6.01\r\n *\r\n * _.ceil(6040, -2);\r\n * // => 6100\r\n */\r\nvar ceil = createRound('ceil');\r\n\r\nexport default ceil;\r\n","import lodash from './wrapperLodash.js';\r\n\r\n/**\r\n * Creates a `lodash` wrapper instance that wraps `value` with explicit method\r\n * chain sequences enabled. The result of such sequences must be unwrapped\r\n * with `_#value`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 1.3.0\r\n * @category Seq\r\n * @param {*} value The value to wrap.\r\n * @returns {Object} Returns the new `lodash` wrapper instance.\r\n * @example\r\n *\r\n * var users = [\r\n *   { 'user': 'barney',  'age': 36 },\r\n *   { 'user': 'fred',    'age': 40 },\r\n *   { 'user': 'pebbles', 'age': 1 }\r\n * ];\r\n *\r\n * var youngest = _\r\n *   .chain(users)\r\n *   .sortBy('age')\r\n *   .map(function(o) {\r\n *     return o.user + ' is ' + o.age;\r\n *   })\r\n *   .head()\r\n *   .value();\r\n * // => 'pebbles is 1'\r\n */\r\nfunction chain(value) {\r\n  var result = lodash(value);\r\n  result.__chain__ = true;\r\n  return result;\r\n}\r\n\r\nexport default chain;\r\n","import baseSlice from './_baseSlice.js';\r\nimport isIterateeCall from './_isIterateeCall.js';\r\nimport toInteger from './toInteger.js';\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeCeil = Math.ceil,\r\n    nativeMax = Math.max;\r\n\r\n/**\r\n * Creates an array of elements split into groups the length of `size`.\r\n * If `array` can't be split evenly, the final chunk will be the remaining\r\n * elements.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Array\r\n * @param {Array} array The array to process.\r\n * @param {number} [size=1] The length of each chunk\r\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\r\n * @returns {Array} Returns the new array of chunks.\r\n * @example\r\n *\r\n * _.chunk(['a', 'b', 'c', 'd'], 2);\r\n * // => [['a', 'b'], ['c', 'd']]\r\n *\r\n * _.chunk(['a', 'b', 'c', 'd'], 3);\r\n * // => [['a', 'b', 'c'], ['d']]\r\n */\r\nfunction chunk(array, size, guard) {\r\n  if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\r\n    size = 1;\r\n  } else {\r\n    size = nativeMax(toInteger(size), 0);\r\n  }\r\n  var length = array == null ? 0 : array.length;\r\n  if (!length || size < 1) {\r\n    return [];\r\n  }\r\n  var index = 0,\r\n      resIndex = 0,\r\n      result = Array(nativeCeil(length / size));\r\n\r\n  while (index < length) {\r\n    result[resIndex++] = baseSlice(array, index, (index += size));\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default chunk;\r\n","import baseClamp from './_baseClamp.js';\r\nimport toNumber from './toNumber.js';\r\n\r\n/**\r\n * Clamps `number` within the inclusive `lower` and `upper` bounds.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Number\r\n * @param {number} number The number to clamp.\r\n * @param {number} [lower] The lower bound.\r\n * @param {number} upper The upper bound.\r\n * @returns {number} Returns the clamped number.\r\n * @example\r\n *\r\n * _.clamp(-10, -5, 5);\r\n * // => -5\r\n *\r\n * _.clamp(10, -5, 5);\r\n * // => 5\r\n */\r\nfunction clamp(number, lower, upper) {\r\n  if (upper === undefined) {\r\n    upper = lower;\r\n    lower = undefined;\r\n  }\r\n  if (upper !== undefined) {\r\n    upper = toNumber(upper);\r\n    upper = upper === upper ? upper : 0;\r\n  }\r\n  if (lower !== undefined) {\r\n    lower = toNumber(lower);\r\n    lower = lower === lower ? lower : 0;\r\n  }\r\n  return baseClamp(toNumber(number), lower, upper);\r\n}\r\n\r\nexport default clamp;\r\n","import baseClone from './_baseClone.js';\r\n\r\n/** Used to compose bitmasks for cloning. */\r\nvar CLONE_SYMBOLS_FLAG = 4;\r\n\r\n/**\r\n * Creates a shallow clone of `value`.\r\n *\r\n * **Note:** This method is loosely based on the\r\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\r\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\r\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\r\n * arrays. The own enumerable properties of `arguments` objects are cloned\r\n * as plain objects. An empty object is returned for uncloneable values such\r\n * as error objects, functions, DOM nodes, and WeakMaps.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to clone.\r\n * @returns {*} Returns the cloned value.\r\n * @see _.cloneDeep\r\n * @example\r\n *\r\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\r\n *\r\n * var shallow = _.clone(objects);\r\n * console.log(shallow[0] === objects[0]);\r\n * // => true\r\n */\r\nfunction clone(value) {\r\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\r\n}\r\n\r\nexport default clone;\r\n","import baseClone from './_baseClone.js';\r\n\r\n/** Used to compose bitmasks for cloning. */\r\nvar CLONE_DEEP_FLAG = 1,\r\n    CLONE_SYMBOLS_FLAG = 4;\r\n\r\n/**\r\n * This method is like `_.clone` except that it recursively clones `value`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 1.0.0\r\n * @category Lang\r\n * @param {*} value The value to recursively clone.\r\n * @returns {*} Returns the deep cloned value.\r\n * @see _.clone\r\n * @example\r\n *\r\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\r\n *\r\n * var deep = _.cloneDeep(objects);\r\n * console.log(deep[0] === objects[0]);\r\n * // => false\r\n */\r\nfunction cloneDeep(value) {\r\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\r\n}\r\n\r\nexport default cloneDeep;\r\n","import baseClone from './_baseClone.js';\r\n\r\n/** Used to compose bitmasks for cloning. */\r\nvar CLONE_DEEP_FLAG = 1,\r\n    CLONE_SYMBOLS_FLAG = 4;\r\n\r\n/**\r\n * This method is like `_.cloneWith` except that it recursively clones `value`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to recursively clone.\r\n * @param {Function} [customizer] The function to customize cloning.\r\n * @returns {*} Returns the deep cloned value.\r\n * @see _.cloneWith\r\n * @example\r\n *\r\n * function customizer(value) {\r\n *   if (_.isElement(value)) {\r\n *     return value.cloneNode(true);\r\n *   }\r\n * }\r\n *\r\n * var el = _.cloneDeepWith(document.body, customizer);\r\n *\r\n * console.log(el === document.body);\r\n * // => false\r\n * console.log(el.nodeName);\r\n * // => 'BODY'\r\n * console.log(el.childNodes.length);\r\n * // => 20\r\n */\r\nfunction cloneDeepWith(value, customizer) {\r\n  customizer = typeof customizer == 'function' ? customizer : undefined;\r\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\r\n}\r\n\r\nexport default cloneDeepWith;\r\n","import baseClone from './_baseClone.js';\r\n\r\n/** Used to compose bitmasks for cloning. */\r\nvar CLONE_SYMBOLS_FLAG = 4;\r\n\r\n/**\r\n * This method is like `_.clone` except that it accepts `customizer` which\r\n * is invoked to produce the cloned value. If `customizer` returns `undefined`,\r\n * cloning is handled by the method instead. The `customizer` is invoked with\r\n * up to four arguments; (value [, index|key, object, stack]).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to clone.\r\n * @param {Function} [customizer] The function to customize cloning.\r\n * @returns {*} Returns the cloned value.\r\n * @see _.cloneDeepWith\r\n * @example\r\n *\r\n * function customizer(value) {\r\n *   if (_.isElement(value)) {\r\n *     return value.cloneNode(false);\r\n *   }\r\n * }\r\n *\r\n * var el = _.cloneWith(document.body, customizer);\r\n *\r\n * console.log(el === document.body);\r\n * // => false\r\n * console.log(el.nodeName);\r\n * // => 'BODY'\r\n * console.log(el.childNodes.length);\r\n * // => 0\r\n */\r\nfunction cloneWith(value, customizer) {\r\n  customizer = typeof customizer == 'function' ? customizer : undefined;\r\n  return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\r\n}\r\n\r\nexport default cloneWith;\r\n","import countBy from './countBy.js';\r\nimport each from './each.js';\r\nimport eachRight from './eachRight.js';\r\nimport every from './every.js';\r\nimport filter from './filter.js';\r\nimport find from './find.js';\r\nimport findLast from './findLast.js';\r\nimport flatMap from './flatMap.js';\r\nimport flatMapDeep from './flatMapDeep.js';\r\nimport flatMapDepth from './flatMapDepth.js';\r\nimport forEach from './forEach.js';\r\nimport forEachRight from './forEachRight.js';\r\nimport groupBy from './groupBy.js';\r\nimport includes from './includes.js';\r\nimport invokeMap from './invokeMap.js';\r\nimport keyBy from './keyBy.js';\r\nimport map from './map.js';\r\nimport orderBy from './orderBy.js';\r\nimport partition from './partition.js';\r\nimport reduce from './reduce.js';\r\nimport reduceRight from './reduceRight.js';\r\nimport reject from './reject.js';\r\nimport sample from './sample.js';\r\nimport sampleSize from './sampleSize.js';\r\nimport shuffle from './shuffle.js';\r\nimport size from './size.js';\r\nimport some from './some.js';\r\nimport sortBy from './sortBy.js';\r\n\r\nexport default {\r\n  countBy, each, eachRight, every, filter,\r\n  find, findLast, flatMap, flatMapDeep, flatMapDepth,\r\n  forEach, forEachRight, groupBy, includes, invokeMap,\r\n  keyBy, map, orderBy, partition, reduce,\r\n  reduceRight, reject, sample, sampleSize, shuffle,\r\n  size, some, sortBy\r\n};\r\n","export { default as countBy } from './countBy.js';\r\nexport { default as each } from './each.js';\r\nexport { default as eachRight } from './eachRight.js';\r\nexport { default as every } from './every.js';\r\nexport { default as filter } from './filter.js';\r\nexport { default as find } from './find.js';\r\nexport { default as findLast } from './findLast.js';\r\nexport { default as flatMap } from './flatMap.js';\r\nexport { default as flatMapDeep } from './flatMapDeep.js';\r\nexport { default as flatMapDepth } from './flatMapDepth.js';\r\nexport { default as forEach } from './forEach.js';\r\nexport { default as forEachRight } from './forEachRight.js';\r\nexport { default as groupBy } from './groupBy.js';\r\nexport { default as includes } from './includes.js';\r\nexport { default as invokeMap } from './invokeMap.js';\r\nexport { default as keyBy } from './keyBy.js';\r\nexport { default as map } from './map.js';\r\nexport { default as orderBy } from './orderBy.js';\r\nexport { default as partition } from './partition.js';\r\nexport { default as reduce } from './reduce.js';\r\nexport { default as reduceRight } from './reduceRight.js';\r\nexport { default as reject } from './reject.js';\r\nexport { default as sample } from './sample.js';\r\nexport { default as sampleSize } from './sampleSize.js';\r\nexport { default as shuffle } from './shuffle.js';\r\nexport { default as size } from './size.js';\r\nexport { default as some } from './some.js';\r\nexport { default as sortBy } from './sortBy.js';\r\nexport { default } from './collection.default.js';\r\n","import LodashWrapper from './_LodashWrapper.js';\r\n\r\n/**\r\n * Executes the chain sequence and returns the wrapped result.\r\n *\r\n * @name commit\r\n * @memberOf _\r\n * @since 3.2.0\r\n * @category Seq\r\n * @returns {Object} Returns the new `lodash` wrapper instance.\r\n * @example\r\n *\r\n * var array = [1, 2];\r\n * var wrapped = _(array).push(3);\r\n *\r\n * console.log(array);\r\n * // => [1, 2]\r\n *\r\n * wrapped = wrapped.commit();\r\n * console.log(array);\r\n * // => [1, 2, 3]\r\n *\r\n * wrapped.last();\r\n * // => 3\r\n *\r\n * console.log(array);\r\n * // => [1, 2, 3]\r\n */\r\nfunction wrapperCommit() {\r\n  return new LodashWrapper(this.value(), this.__chain__);\r\n}\r\n\r\nexport default wrapperCommit;\r\n","/**\r\n * Creates an array with all falsey values removed. The values `false`, `null`,\r\n * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Array\r\n * @param {Array} array The array to compact.\r\n * @returns {Array} Returns the new array of filtered values.\r\n * @example\r\n *\r\n * _.compact([0, 1, false, 2, '', 3]);\r\n * // => [1, 2, 3]\r\n */\r\nfunction compact(array) {\r\n  var index = -1,\r\n      length = array == null ? 0 : array.length,\r\n      resIndex = 0,\r\n      result = [];\r\n\r\n  while (++index < length) {\r\n    var value = array[index];\r\n    if (value) {\r\n      result[resIndex++] = value;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default compact;\r\n","import arrayPush from './_arrayPush.js';\r\nimport baseFlatten from './_baseFlatten.js';\r\nimport copyArray from './_copyArray.js';\r\nimport isArray from './isArray.js';\r\n\r\n/**\r\n * Creates a new array concatenating `array` with any additional arrays\r\n * and/or values.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Array\r\n * @param {Array} array The array to concatenate.\r\n * @param {...*} [values] The values to concatenate.\r\n * @returns {Array} Returns the new concatenated array.\r\n * @example\r\n *\r\n * var array = [1];\r\n * var other = _.concat(array, 2, [3], [[4]]);\r\n *\r\n * console.log(other);\r\n * // => [1, 2, 3, [4]]\r\n *\r\n * console.log(array);\r\n * // => [1]\r\n */\r\nfunction concat() {\r\n  var length = arguments.length;\r\n  if (!length) {\r\n    return [];\r\n  }\r\n  var args = Array(length - 1),\r\n      array = arguments[0],\r\n      index = length;\r\n\r\n  while (index--) {\r\n    args[index - 1] = arguments[index];\r\n  }\r\n  return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\r\n}\r\n\r\nexport default concat;\r\n","import apply from './_apply.js';\r\nimport arrayMap from './_arrayMap.js';\r\nimport baseIteratee from './_baseIteratee.js';\r\nimport baseRest from './_baseRest.js';\r\n\r\n/** Error message constants. */\r\nvar FUNC_ERROR_TEXT = 'Expected a function';\r\n\r\n/**\r\n * Creates a function that iterates over `pairs` and invokes the corresponding\r\n * function of the first predicate to return truthy. The predicate-function\r\n * pairs are invoked with the `this` binding and arguments of the created\r\n * function.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Util\r\n * @param {Array} pairs The predicate-function pairs.\r\n * @returns {Function} Returns the new composite function.\r\n * @example\r\n *\r\n * var func = _.cond([\r\n *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\r\n *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\r\n *   [_.stubTrue,                      _.constant('no match')]\r\n * ]);\r\n *\r\n * func({ 'a': 1, 'b': 2 });\r\n * // => 'matches A'\r\n *\r\n * func({ 'a': 0, 'b': 1 });\r\n * // => 'matches B'\r\n *\r\n * func({ 'a': '1', 'b': '2' });\r\n * // => 'no match'\r\n */\r\nfunction cond(pairs) {\r\n  var length = pairs == null ? 0 : pairs.length,\r\n      toIteratee = baseIteratee;\r\n\r\n  pairs = !length ? [] : arrayMap(pairs, function(pair) {\r\n    if (typeof pair[1] != 'function') {\r\n      throw new TypeError(FUNC_ERROR_TEXT);\r\n    }\r\n    return [toIteratee(pair[0]), pair[1]];\r\n  });\r\n\r\n  return baseRest(function(args) {\r\n    var index = -1;\r\n    while (++index < length) {\r\n      var pair = pairs[index];\r\n      if (apply(pair[0], this, args)) {\r\n        return apply(pair[1], this, args);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport default cond;\r\n","import baseClone from './_baseClone.js';\r\nimport baseConforms from './_baseConforms.js';\r\n\r\n/** Used to compose bitmasks for cloning. */\r\nvar CLONE_DEEP_FLAG = 1;\r\n\r\n/**\r\n * Creates a function that invokes the predicate properties of `source` with\r\n * the corresponding property values of a given object, returning `true` if\r\n * all predicates return truthy, else `false`.\r\n *\r\n * **Note:** The created function is equivalent to `_.conformsTo` with\r\n * `source` partially applied.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Util\r\n * @param {Object} source The object of property predicates to conform to.\r\n * @returns {Function} Returns the new spec function.\r\n * @example\r\n *\r\n * var objects = [\r\n *   { 'a': 2, 'b': 1 },\r\n *   { 'a': 1, 'b': 2 }\r\n * ];\r\n *\r\n * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\r\n * // => [{ 'a': 1, 'b': 2 }]\r\n */\r\nfunction conforms(source) {\r\n  return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\r\n}\r\n\r\nexport default conforms;\r\n","import baseConformsTo from './_baseConformsTo.js';\r\nimport keys from './keys.js';\r\n\r\n/**\r\n * Checks if `object` conforms to `source` by invoking the predicate\r\n * properties of `source` with the corresponding property values of `object`.\r\n *\r\n * **Note:** This method is equivalent to `_.conforms` when `source` is\r\n * partially applied.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.14.0\r\n * @category Lang\r\n * @param {Object} object The object to inspect.\r\n * @param {Object} source The object of property predicates to conform to.\r\n * @returns {boolean} Returns `true` if `object` conforms, else `false`.\r\n * @example\r\n *\r\n * var object = { 'a': 1, 'b': 2 };\r\n *\r\n * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\r\n * // => true\r\n *\r\n * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\r\n * // => false\r\n */\r\nfunction conformsTo(object, source) {\r\n  return source == null || baseConformsTo(object, source, keys(source));\r\n}\r\n\r\nexport default conformsTo;\r\n","/**\r\n * Creates a function that returns `value`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 2.4.0\r\n * @category Util\r\n * @param {*} value The value to return from the new function.\r\n * @returns {Function} Returns the new constant function.\r\n * @example\r\n *\r\n * var objects = _.times(2, _.constant({ 'a': 1 }));\r\n *\r\n * console.log(objects);\r\n * // => [{ 'a': 1 }, { 'a': 1 }]\r\n *\r\n * console.log(objects[0] === objects[1]);\r\n * // => true\r\n */\r\nfunction constant(value) {\r\n  return function() {\r\n    return value;\r\n  };\r\n}\r\n\r\nexport default constant;\r\n","import baseAssignValue from './_baseAssignValue.js';\r\nimport createAggregator from './_createAggregator.js';\r\n\r\n/** Used for built-in method references. */\r\nvar objectProto = Object.prototype;\r\n\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n/**\r\n * Creates an object composed of keys generated from the results of running\r\n * each element of `collection` thru `iteratee`. The corresponding value of\r\n * each key is the number of times the key was returned by `iteratee`. The\r\n * iteratee is invoked with one argument: (value).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.5.0\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\r\n * @returns {Object} Returns the composed aggregate object.\r\n * @example\r\n *\r\n * _.countBy([6.1, 4.2, 6.3], Math.floor);\r\n * // => { '4': 1, '6': 2 }\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.countBy(['one', 'two', 'three'], 'length');\r\n * // => { '3': 2, '5': 1 }\r\n */\r\nvar countBy = createAggregator(function(result, value, key) {\r\n  if (hasOwnProperty.call(result, key)) {\r\n    ++result[key];\r\n  } else {\r\n    baseAssignValue(result, key, 1);\r\n  }\r\n});\r\n\r\nexport default countBy;\r\n","import baseAssign from './_baseAssign.js';\r\nimport baseCreate from './_baseCreate.js';\r\n\r\n/**\r\n * Creates an object that inherits from the `prototype` object. If a\r\n * `properties` object is given, its own enumerable string keyed properties\r\n * are assigned to the created object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 2.3.0\r\n * @category Object\r\n * @param {Object} prototype The object to inherit from.\r\n * @param {Object} [properties] The properties to assign to the object.\r\n * @returns {Object} Returns the new object.\r\n * @example\r\n *\r\n * function Shape() {\r\n *   this.x = 0;\r\n *   this.y = 0;\r\n * }\r\n *\r\n * function Circle() {\r\n *   Shape.call(this);\r\n * }\r\n *\r\n * Circle.prototype = _.create(Shape.prototype, {\r\n *   'constructor': Circle\r\n * });\r\n *\r\n * var circle = new Circle;\r\n * circle instanceof Circle;\r\n * // => true\r\n *\r\n * circle instanceof Shape;\r\n * // => true\r\n */\r\nfunction create(prototype, properties) {\r\n  var result = baseCreate(prototype);\r\n  return properties == null ? result : baseAssign(result, properties);\r\n}\r\n\r\nexport default create;\r\n","import createWrap from './_createWrap.js';\r\n\r\n/** Used to compose bitmasks for function metadata. */\r\nvar WRAP_CURRY_FLAG = 8;\r\n\r\n/**\r\n * Creates a function that accepts arguments of `func` and either invokes\r\n * `func` returning its result, if at least `arity` number of arguments have\r\n * been provided, or returns a function that accepts the remaining `func`\r\n * arguments, and so on. The arity of `func` may be specified if `func.length`\r\n * is not sufficient.\r\n *\r\n * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\r\n * may be used as a placeholder for provided arguments.\r\n *\r\n * **Note:** This method doesn't set the \"length\" property of curried functions.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 2.0.0\r\n * @category Function\r\n * @param {Function} func The function to curry.\r\n * @param {number} [arity=func.length] The arity of `func`.\r\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\r\n * @returns {Function} Returns the new curried function.\r\n * @example\r\n *\r\n * var abc = function(a, b, c) {\r\n *   return [a, b, c];\r\n * };\r\n *\r\n * var curried = _.curry(abc);\r\n *\r\n * curried(1)(2)(3);\r\n * // => [1, 2, 3]\r\n *\r\n * curried(1, 2)(3);\r\n * // => [1, 2, 3]\r\n *\r\n * curried(1, 2, 3);\r\n * // => [1, 2, 3]\r\n *\r\n * // Curried with placeholders.\r\n * curried(1)(_, 3)(2);\r\n * // => [1, 2, 3]\r\n */\r\nfunction curry(func, arity, guard) {\r\n  arity = guard ? undefined : arity;\r\n  var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\r\n  result.placeholder = curry.placeholder;\r\n  return result;\r\n}\r\n\r\n// Assign default placeholders.\r\ncurry.placeholder = {};\r\n\r\nexport default curry;\r\n","import createWrap from './_createWrap.js';\r\n\r\n/** Used to compose bitmasks for function metadata. */\r\nvar WRAP_CURRY_RIGHT_FLAG = 16;\r\n\r\n/**\r\n * This method is like `_.curry` except that arguments are applied to `func`\r\n * in the manner of `_.partialRight` instead of `_.partial`.\r\n *\r\n * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\r\n * builds, may be used as a placeholder for provided arguments.\r\n *\r\n * **Note:** This method doesn't set the \"length\" property of curried functions.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Function\r\n * @param {Function} func The function to curry.\r\n * @param {number} [arity=func.length] The arity of `func`.\r\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\r\n * @returns {Function} Returns the new curried function.\r\n * @example\r\n *\r\n * var abc = function(a, b, c) {\r\n *   return [a, b, c];\r\n * };\r\n *\r\n * var curried = _.curryRight(abc);\r\n *\r\n * curried(3)(2)(1);\r\n * // => [1, 2, 3]\r\n *\r\n * curried(2, 3)(1);\r\n * // => [1, 2, 3]\r\n *\r\n * curried(1, 2, 3);\r\n * // => [1, 2, 3]\r\n *\r\n * // Curried with placeholders.\r\n * curried(3)(1, _)(2);\r\n * // => [1, 2, 3]\r\n */\r\nfunction curryRight(func, arity, guard) {\r\n  arity = guard ? undefined : arity;\r\n  var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\r\n  result.placeholder = curryRight.placeholder;\r\n  return result;\r\n}\r\n\r\n// Assign default placeholders.\r\ncurryRight.placeholder = {};\r\n\r\nexport default curryRight;\r\n","import now from './now.js';\r\n\r\nexport default {\r\n  now\r\n};\r\n","export { default as now } from './now.js';\r\nexport { default } from './date.default.js';\r\n","import isObject from './isObject.js';\r\nimport now from './now.js';\r\nimport toNumber from './toNumber.js';\r\n\r\n/** Error message constants. */\r\nvar FUNC_ERROR_TEXT = 'Expected a function';\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMax = Math.max,\r\n    nativeMin = Math.min;\r\n\r\n/**\r\n * Creates a debounced function that delays invoking `func` until after `wait`\r\n * milliseconds have elapsed since the last time the debounced function was\r\n * invoked. The debounced function comes with a `cancel` method to cancel\r\n * delayed `func` invocations and a `flush` method to immediately invoke them.\r\n * Provide `options` to indicate whether `func` should be invoked on the\r\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\r\n * with the last arguments provided to the debounced function. Subsequent\r\n * calls to the debounced function return the result of the last `func`\r\n * invocation.\r\n *\r\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\r\n * invoked on the trailing edge of the timeout only if the debounced function\r\n * is invoked more than once during the `wait` timeout.\r\n *\r\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\r\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\r\n *\r\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\r\n * for details over the differences between `_.debounce` and `_.throttle`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Function\r\n * @param {Function} func The function to debounce.\r\n * @param {number} [wait=0] The number of milliseconds to delay.\r\n * @param {Object} [options={}] The options object.\r\n * @param {boolean} [options.leading=false]\r\n *  Specify invoking on the leading edge of the timeout.\r\n * @param {number} [options.maxWait]\r\n *  The maximum time `func` is allowed to be delayed before it's invoked.\r\n * @param {boolean} [options.trailing=true]\r\n *  Specify invoking on the trailing edge of the timeout.\r\n * @returns {Function} Returns the new debounced function.\r\n * @example\r\n *\r\n * // Avoid costly calculations while the window size is in flux.\r\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\r\n *\r\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\r\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\r\n *   'leading': true,\r\n *   'trailing': false\r\n * }));\r\n *\r\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\r\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\r\n * var source = new EventSource('/stream');\r\n * jQuery(source).on('message', debounced);\r\n *\r\n * // Cancel the trailing debounced invocation.\r\n * jQuery(window).on('popstate', debounced.cancel);\r\n */\r\nfunction debounce(func, wait, options) {\r\n  var lastArgs,\r\n      lastThis,\r\n      maxWait,\r\n      result,\r\n      timerId,\r\n      lastCallTime,\r\n      lastInvokeTime = 0,\r\n      leading = false,\r\n      maxing = false,\r\n      trailing = true;\r\n\r\n  if (typeof func != 'function') {\r\n    throw new TypeError(FUNC_ERROR_TEXT);\r\n  }\r\n  wait = toNumber(wait) || 0;\r\n  if (isObject(options)) {\r\n    leading = !!options.leading;\r\n    maxing = 'maxWait' in options;\r\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\r\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\r\n  }\r\n\r\n  function invokeFunc(time) {\r\n    var args = lastArgs,\r\n        thisArg = lastThis;\r\n\r\n    lastArgs = lastThis = undefined;\r\n    lastInvokeTime = time;\r\n    result = func.apply(thisArg, args);\r\n    return result;\r\n  }\r\n\r\n  function leadingEdge(time) {\r\n    // Reset any `maxWait` timer.\r\n    lastInvokeTime = time;\r\n    // Start the timer for the trailing edge.\r\n    timerId = setTimeout(timerExpired, wait);\r\n    // Invoke the leading edge.\r\n    return leading ? invokeFunc(time) : result;\r\n  }\r\n\r\n  function remainingWait(time) {\r\n    var timeSinceLastCall = time - lastCallTime,\r\n        timeSinceLastInvoke = time - lastInvokeTime,\r\n        timeWaiting = wait - timeSinceLastCall;\r\n\r\n    return maxing\r\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\r\n      : timeWaiting;\r\n  }\r\n\r\n  function shouldInvoke(time) {\r\n    var timeSinceLastCall = time - lastCallTime,\r\n        timeSinceLastInvoke = time - lastInvokeTime;\r\n\r\n    // Either this is the first call, activity has stopped and we're at the\r\n    // trailing edge, the system time has gone backwards and we're treating\r\n    // it as the trailing edge, or we've hit the `maxWait` limit.\r\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\r\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\r\n  }\r\n\r\n  function timerExpired() {\r\n    var time = now();\r\n    if (shouldInvoke(time)) {\r\n      return trailingEdge(time);\r\n    }\r\n    // Restart the timer.\r\n    timerId = setTimeout(timerExpired, remainingWait(time));\r\n  }\r\n\r\n  function trailingEdge(time) {\r\n    timerId = undefined;\r\n\r\n    // Only invoke if we have `lastArgs` which means `func` has been\r\n    // debounced at least once.\r\n    if (trailing && lastArgs) {\r\n      return invokeFunc(time);\r\n    }\r\n    lastArgs = lastThis = undefined;\r\n    return result;\r\n  }\r\n\r\n  function cancel() {\r\n    if (timerId !== undefined) {\r\n      clearTimeout(timerId);\r\n    }\r\n    lastInvokeTime = 0;\r\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\r\n  }\r\n\r\n  function flush() {\r\n    return timerId === undefined ? result : trailingEdge(now());\r\n  }\r\n\r\n  function debounced() {\r\n    var time = now(),\r\n        isInvoking = shouldInvoke(time);\r\n\r\n    lastArgs = arguments;\r\n    lastThis = this;\r\n    lastCallTime = time;\r\n\r\n    if (isInvoking) {\r\n      if (timerId === undefined) {\r\n        return leadingEdge(lastCallTime);\r\n      }\r\n      if (maxing) {\r\n        // Handle invocations in a tight loop.\r\n        clearTimeout(timerId);\r\n        timerId = setTimeout(timerExpired, wait);\r\n        return invokeFunc(lastCallTime);\r\n      }\r\n    }\r\n    if (timerId === undefined) {\r\n      timerId = setTimeout(timerExpired, wait);\r\n    }\r\n    return result;\r\n  }\r\n  debounced.cancel = cancel;\r\n  debounced.flush = flush;\r\n  return debounced;\r\n}\r\n\r\nexport default debounce;\r\n","import deburrLetter from './_deburrLetter.js';\r\nimport toString from './toString.js';\r\n\r\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\r\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\r\n\r\n/** Used to compose unicode character classes. */\r\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f',\r\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\r\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\r\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\r\n\r\n/** Used to compose unicode capture groups. */\r\nvar rsCombo = '[' + rsComboRange + ']';\r\n\r\n/**\r\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\r\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\r\n */\r\nvar reComboMark = RegExp(rsCombo, 'g');\r\n\r\n/**\r\n * Deburrs `string` by converting\r\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\r\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\r\n * letters to basic Latin letters and removing\r\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category String\r\n * @param {string} [string=''] The string to deburr.\r\n * @returns {string} Returns the deburred string.\r\n * @example\r\n *\r\n * _.deburr('déjà vu');\r\n * // => 'deja vu'\r\n */\r\nfunction deburr(string) {\r\n  string = toString(string);\r\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\r\n}\r\n\r\nexport default deburr;\r\n","/**\r\n * Checks `value` to determine whether a default value should be returned in\r\n * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\r\n * or `undefined`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.14.0\r\n * @category Util\r\n * @param {*} value The value to check.\r\n * @param {*} defaultValue The default value.\r\n * @returns {*} Returns the resolved value.\r\n * @example\r\n *\r\n * _.defaultTo(1, 10);\r\n * // => 1\r\n *\r\n * _.defaultTo(undefined, 10);\r\n * // => 10\r\n */\r\nfunction defaultTo(value, defaultValue) {\r\n  return (value == null || value !== value) ? defaultValue : value;\r\n}\r\n\r\nexport default defaultTo;\r\n","import baseRest from './_baseRest.js';\r\nimport eq from './eq.js';\r\nimport isIterateeCall from './_isIterateeCall.js';\r\nimport keysIn from './keysIn.js';\r\n\r\n/** Used for built-in method references. */\r\nvar objectProto = Object.prototype;\r\n\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n/**\r\n * Assigns own and inherited enumerable string keyed properties of source\r\n * objects to the destination object for all destination properties that\r\n * resolve to `undefined`. Source objects are applied from left to right.\r\n * Once a property is set, additional values of the same property are ignored.\r\n *\r\n * **Note:** This method mutates `object`.\r\n *\r\n * @static\r\n * @since 0.1.0\r\n * @memberOf _\r\n * @category Object\r\n * @param {Object} object The destination object.\r\n * @param {...Object} [sources] The source objects.\r\n * @returns {Object} Returns `object`.\r\n * @see _.defaultsDeep\r\n * @example\r\n *\r\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\r\n * // => { 'a': 1, 'b': 2 }\r\n */\r\nvar defaults = baseRest(function(object, sources) {\r\n  object = Object(object);\r\n\r\n  var index = -1;\r\n  var length = sources.length;\r\n  var guard = length > 2 ? sources[2] : undefined;\r\n\r\n  if (guard && isIterateeCall(sources[0], sources[1], guard)) {\r\n    length = 1;\r\n  }\r\n\r\n  while (++index < length) {\r\n    var source = sources[index];\r\n    var props = keysIn(source);\r\n    var propsIndex = -1;\r\n    var propsLength = props.length;\r\n\r\n    while (++propsIndex < propsLength) {\r\n      var key = props[propsIndex];\r\n      var value = object[key];\r\n\r\n      if (value === undefined ||\r\n          (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\r\n        object[key] = source[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  return object;\r\n});\r\n\r\nexport default defaults;\r\n","import apply from './_apply.js';\r\nimport baseRest from './_baseRest.js';\r\nimport customDefaultsMerge from './_customDefaultsMerge.js';\r\nimport mergeWith from './mergeWith.js';\r\n\r\n/**\r\n * This method is like `_.defaults` except that it recursively assigns\r\n * default properties.\r\n *\r\n * **Note:** This method mutates `object`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.10.0\r\n * @category Object\r\n * @param {Object} object The destination object.\r\n * @param {...Object} [sources] The source objects.\r\n * @returns {Object} Returns `object`.\r\n * @see _.defaults\r\n * @example\r\n *\r\n * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\r\n * // => { 'a': { 'b': 2, 'c': 3 } }\r\n */\r\nvar defaultsDeep = baseRest(function(args) {\r\n  args.push(undefined, customDefaultsMerge);\r\n  return apply(mergeWith, undefined, args);\r\n});\r\n\r\nexport default defaultsDeep;\r\n","import baseDelay from './_baseDelay.js';\r\nimport baseRest from './_baseRest.js';\r\n\r\n/**\r\n * Defers invoking the `func` until the current call stack has cleared. Any\r\n * additional arguments are provided to `func` when it's invoked.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Function\r\n * @param {Function} func The function to defer.\r\n * @param {...*} [args] The arguments to invoke `func` with.\r\n * @returns {number} Returns the timer id.\r\n * @example\r\n *\r\n * _.defer(function(text) {\r\n *   console.log(text);\r\n * }, 'deferred');\r\n * // => Logs 'deferred' after one millisecond.\r\n */\r\nvar defer = baseRest(function(func, args) {\r\n  return baseDelay(func, 1, args);\r\n});\r\n\r\nexport default defer;\r\n","import baseDelay from './_baseDelay.js';\r\nimport baseRest from './_baseRest.js';\r\nimport toNumber from './toNumber.js';\r\n\r\n/**\r\n * Invokes `func` after `wait` milliseconds. Any additional arguments are\r\n * provided to `func` when it's invoked.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Function\r\n * @param {Function} func The function to delay.\r\n * @param {number} wait The number of milliseconds to delay invocation.\r\n * @param {...*} [args] The arguments to invoke `func` with.\r\n * @returns {number} Returns the timer id.\r\n * @example\r\n *\r\n * _.delay(function(text) {\r\n *   console.log(text);\r\n * }, 1000, 'later');\r\n * // => Logs 'later' after one second.\r\n */\r\nvar delay = baseRest(function(func, wait, args) {\r\n  return baseDelay(func, toNumber(wait) || 0, args);\r\n});\r\n\r\nexport default delay;\r\n","import baseDifference from './_baseDifference.js';\r\nimport baseFlatten from './_baseFlatten.js';\r\nimport baseRest from './_baseRest.js';\r\nimport isArrayLikeObject from './isArrayLikeObject.js';\r\n\r\n/**\r\n * Creates an array of `array` values not included in the other given arrays\r\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n * for equality comparisons. The order and references of result values are\r\n * determined by the first array.\r\n *\r\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Array\r\n * @param {Array} array The array to inspect.\r\n * @param {...Array} [values] The values to exclude.\r\n * @returns {Array} Returns the new array of filtered values.\r\n * @see _.without, _.xor\r\n * @example\r\n *\r\n * _.difference([2, 1], [2, 3]);\r\n * // => [1]\r\n */\r\nvar difference = baseRest(function(array, values) {\r\n  return isArrayLikeObject(array)\r\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\r\n    : [];\r\n});\r\n\r\nexport default difference;\r\n","import baseDifference from './_baseDifference.js';\r\nimport baseFlatten from './_baseFlatten.js';\r\nimport baseIteratee from './_baseIteratee.js';\r\nimport baseRest from './_baseRest.js';\r\nimport isArrayLikeObject from './isArrayLikeObject.js';\r\nimport last from './last.js';\r\n\r\n/**\r\n * This method is like `_.difference` except that it accepts `iteratee` which\r\n * is invoked for each element of `array` and `values` to generate the criterion\r\n * by which they're compared. The order and references of result values are\r\n * determined by the first array. The iteratee is invoked with one argument:\r\n * (value).\r\n *\r\n * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Array\r\n * @param {Array} array The array to inspect.\r\n * @param {...Array} [values] The values to exclude.\r\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\r\n * @returns {Array} Returns the new array of filtered values.\r\n * @example\r\n *\r\n * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\r\n * // => [1.2]\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\r\n * // => [{ 'x': 2 }]\r\n */\r\nvar differenceBy = baseRest(function(array, values) {\r\n  var iteratee = last(values);\r\n  if (isArrayLikeObject(iteratee)) {\r\n    iteratee = undefined;\r\n  }\r\n  return isArrayLikeObject(array)\r\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), baseIteratee(iteratee, 2))\r\n    : [];\r\n});\r\n\r\nexport default differenceBy;\r\n","import baseDifference from './_baseDifference.js';\r\nimport baseFlatten from './_baseFlatten.js';\r\nimport baseRest from './_baseRest.js';\r\nimport isArrayLikeObject from './isArrayLikeObject.js';\r\nimport last from './last.js';\r\n\r\n/**\r\n * This method is like `_.difference` except that it accepts `comparator`\r\n * which is invoked to compare elements of `array` to `values`. The order and\r\n * references of result values are determined by the first array. The comparator\r\n * is invoked with two arguments: (arrVal, othVal).\r\n *\r\n * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Array\r\n * @param {Array} array The array to inspect.\r\n * @param {...Array} [values] The values to exclude.\r\n * @param {Function} [comparator] The comparator invoked per element.\r\n * @returns {Array} Returns the new array of filtered values.\r\n * @example\r\n *\r\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\r\n *\r\n * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\r\n * // => [{ 'x': 2, 'y': 1 }]\r\n */\r\nvar differenceWith = baseRest(function(array, values) {\r\n  var comparator = last(values);\r\n  if (isArrayLikeObject(comparator)) {\r\n    comparator = undefined;\r\n  }\r\n  return isArrayLikeObject(array)\r\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\r\n    : [];\r\n});\r\n\r\nexport default differenceWith;\r\n","import createMathOperation from './_createMathOperation.js';\r\n\r\n/**\r\n * Divide two numbers.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.7.0\r\n * @category Math\r\n * @param {number} dividend The first number in a division.\r\n * @param {number} divisor The second number in a division.\r\n * @returns {number} Returns the quotient.\r\n * @example\r\n *\r\n * _.divide(6, 4);\r\n * // => 1.5\r\n */\r\nvar divide = createMathOperation(function(dividend, divisor) {\r\n  return dividend / divisor;\r\n}, 1);\r\n\r\nexport default divide;\r\n","import baseSlice from './_baseSlice.js';\r\nimport toInteger from './toInteger.js';\r\n\r\n/**\r\n * Creates a slice of `array` with `n` elements dropped from the beginning.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.5.0\r\n * @category Array\r\n * @param {Array} array The array to query.\r\n * @param {number} [n=1] The number of elements to drop.\r\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\r\n * @returns {Array} Returns the slice of `array`.\r\n * @example\r\n *\r\n * _.drop([1, 2, 3]);\r\n * // => [2, 3]\r\n *\r\n * _.drop([1, 2, 3], 2);\r\n * // => [3]\r\n *\r\n * _.drop([1, 2, 3], 5);\r\n * // => []\r\n *\r\n * _.drop([1, 2, 3], 0);\r\n * // => [1, 2, 3]\r\n */\r\nfunction drop(array, n, guard) {\r\n  var length = array == null ? 0 : array.length;\r\n  if (!length) {\r\n    return [];\r\n  }\r\n  n = (guard || n === undefined) ? 1 : toInteger(n);\r\n  return baseSlice(array, n < 0 ? 0 : n, length);\r\n}\r\n\r\nexport default drop;\r\n","import baseSlice from './_baseSlice.js';\r\nimport toInteger from './toInteger.js';\r\n\r\n/**\r\n * Creates a slice of `array` with `n` elements dropped from the end.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Array\r\n * @param {Array} array The array to query.\r\n * @param {number} [n=1] The number of elements to drop.\r\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\r\n * @returns {Array} Returns the slice of `array`.\r\n * @example\r\n *\r\n * _.dropRight([1, 2, 3]);\r\n * // => [1, 2]\r\n *\r\n * _.dropRight([1, 2, 3], 2);\r\n * // => [1]\r\n *\r\n * _.dropRight([1, 2, 3], 5);\r\n * // => []\r\n *\r\n * _.dropRight([1, 2, 3], 0);\r\n * // => [1, 2, 3]\r\n */\r\nfunction dropRight(array, n, guard) {\r\n  var length = array == null ? 0 : array.length;\r\n  if (!length) {\r\n    return [];\r\n  }\r\n  n = (guard || n === undefined) ? 1 : toInteger(n);\r\n  n = length - n;\r\n  return baseSlice(array, 0, n < 0 ? 0 : n);\r\n}\r\n\r\nexport default dropRight;\r\n","import baseIteratee from './_baseIteratee.js';\r\nimport baseWhile from './_baseWhile.js';\r\n\r\n/**\r\n * Creates a slice of `array` excluding elements dropped from the end.\r\n * Elements are dropped until `predicate` returns falsey. The predicate is\r\n * invoked with three arguments: (value, index, array).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Array\r\n * @param {Array} array The array to query.\r\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\r\n * @returns {Array} Returns the slice of `array`.\r\n * @example\r\n *\r\n * var users = [\r\n *   { 'user': 'barney',  'active': true },\r\n *   { 'user': 'fred',    'active': false },\r\n *   { 'user': 'pebbles', 'active': false }\r\n * ];\r\n *\r\n * _.dropRightWhile(users, function(o) { return !o.active; });\r\n * // => objects for ['barney']\r\n *\r\n * // The `_.matches` iteratee shorthand.\r\n * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\r\n * // => objects for ['barney', 'fred']\r\n *\r\n * // The `_.matchesProperty` iteratee shorthand.\r\n * _.dropRightWhile(users, ['active', false]);\r\n * // => objects for ['barney']\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.dropRightWhile(users, 'active');\r\n * // => objects for ['barney', 'fred', 'pebbles']\r\n */\r\nfunction dropRightWhile(array, predicate) {\r\n  return (array && array.length)\r\n    ? baseWhile(array, baseIteratee(predicate, 3), true, true)\r\n    : [];\r\n}\r\n\r\nexport default dropRightWhile;\r\n","import baseIteratee from './_baseIteratee.js';\r\nimport baseWhile from './_baseWhile.js';\r\n\r\n/**\r\n * Creates a slice of `array` excluding elements dropped from the beginning.\r\n * Elements are dropped until `predicate` returns falsey. The predicate is\r\n * invoked with three arguments: (value, index, array).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Array\r\n * @param {Array} array The array to query.\r\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\r\n * @returns {Array} Returns the slice of `array`.\r\n * @example\r\n *\r\n * var users = [\r\n *   { 'user': 'barney',  'active': false },\r\n *   { 'user': 'fred',    'active': false },\r\n *   { 'user': 'pebbles', 'active': true }\r\n * ];\r\n *\r\n * _.dropWhile(users, function(o) { return !o.active; });\r\n * // => objects for ['pebbles']\r\n *\r\n * // The `_.matches` iteratee shorthand.\r\n * _.dropWhile(users, { 'user': 'barney', 'active': false });\r\n * // => objects for ['fred', 'pebbles']\r\n *\r\n * // The `_.matchesProperty` iteratee shorthand.\r\n * _.dropWhile(users, ['active', false]);\r\n * // => objects for ['pebbles']\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.dropWhile(users, 'active');\r\n * // => objects for ['barney', 'fred', 'pebbles']\r\n */\r\nfunction dropWhile(array, predicate) {\r\n  return (array && array.length)\r\n    ? baseWhile(array, baseIteratee(predicate, 3), true)\r\n    : [];\r\n}\r\n\r\nexport default dropWhile;\r\n","export { default } from './forEach.js'\r\n","export { default } from './forEachRight.js'\r\n","import baseClamp from './_baseClamp.js';\r\nimport baseToString from './_baseToString.js';\r\nimport toInteger from './toInteger.js';\r\nimport toString from './toString.js';\r\n\r\n/**\r\n * Checks if `string` ends with the given target string.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category String\r\n * @param {string} [string=''] The string to inspect.\r\n * @param {string} [target] The string to search for.\r\n * @param {number} [position=string.length] The position to search up to.\r\n * @returns {boolean} Returns `true` if `string` ends with `target`,\r\n *  else `false`.\r\n * @example\r\n *\r\n * _.endsWith('abc', 'c');\r\n * // => true\r\n *\r\n * _.endsWith('abc', 'b');\r\n * // => false\r\n *\r\n * _.endsWith('abc', 'b', 2);\r\n * // => true\r\n */\r\nfunction endsWith(string, target, position) {\r\n  string = toString(string);\r\n  target = baseToString(target);\r\n\r\n  var length = string.length;\r\n  position = position === undefined\r\n    ? length\r\n    : baseClamp(toInteger(position), 0, length);\r\n\r\n  var end = position;\r\n  position -= target.length;\r\n  return position >= 0 && string.slice(position, end) == target;\r\n}\r\n\r\nexport default endsWith;\r\n","export { default } from './toPairs.js'\r\n","export { default } from './toPairsIn.js'\r\n","/**\r\n * Performs a\r\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n * comparison between two values to determine if they are equivalent.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to compare.\r\n * @param {*} other The other value to compare.\r\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\r\n * @example\r\n *\r\n * var object = { 'a': 1 };\r\n * var other = { 'a': 1 };\r\n *\r\n * _.eq(object, object);\r\n * // => true\r\n *\r\n * _.eq(object, other);\r\n * // => false\r\n *\r\n * _.eq('a', 'a');\r\n * // => true\r\n *\r\n * _.eq('a', Object('a'));\r\n * // => false\r\n *\r\n * _.eq(NaN, NaN);\r\n * // => true\r\n */\r\nfunction eq(value, other) {\r\n  return value === other || (value !== value && other !== other);\r\n}\r\n\r\nexport default eq;\r\n","import escapeHtmlChar from './_escapeHtmlChar.js';\r\nimport toString from './toString.js';\r\n\r\n/** Used to match HTML entities and HTML characters. */\r\nvar reUnescapedHtml = /[&<>\"']/g,\r\n    reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\r\n\r\n/**\r\n * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\r\n * corresponding HTML entities.\r\n *\r\n * **Note:** No other characters are escaped. To escape additional\r\n * characters use a third-party library like [_he_](https://mths.be/he).\r\n *\r\n * Though the \">\" character is escaped for symmetry, characters like\r\n * \">\" and \"/\" don't need escaping in HTML and have no special meaning\r\n * unless they're part of a tag or unquoted attribute value. See\r\n * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\r\n * (under \"semi-related fun fact\") for more details.\r\n *\r\n * When working with HTML you should always\r\n * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\r\n * XSS vectors.\r\n *\r\n * @static\r\n * @since 0.1.0\r\n * @memberOf _\r\n * @category String\r\n * @param {string} [string=''] The string to escape.\r\n * @returns {string} Returns the escaped string.\r\n * @example\r\n *\r\n * _.escape('fred, barney, & pebbles');\r\n * // => 'fred, barney, &amp; pebbles'\r\n */\r\nfunction escape(string) {\r\n  string = toString(string);\r\n  return (string && reHasUnescapedHtml.test(string))\r\n    ? string.replace(reUnescapedHtml, escapeHtmlChar)\r\n    : string;\r\n}\r\n\r\nexport default escape;\r\n","import toString from './toString.js';\r\n\r\n/**\r\n * Used to match `RegExp`\r\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\r\n */\r\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\r\n    reHasRegExpChar = RegExp(reRegExpChar.source);\r\n\r\n/**\r\n * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\r\n * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category String\r\n * @param {string} [string=''] The string to escape.\r\n * @returns {string} Returns the escaped string.\r\n * @example\r\n *\r\n * _.escapeRegExp('[lodash](https://lodash.com/)');\r\n * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\r\n */\r\nfunction escapeRegExp(string) {\r\n  string = toString(string);\r\n  return (string && reHasRegExpChar.test(string))\r\n    ? string.replace(reRegExpChar, '\\\\$&')\r\n    : string;\r\n}\r\n\r\nexport default escapeRegExp;\r\n","import arrayEvery from './_arrayEvery.js';\r\nimport baseEvery from './_baseEvery.js';\r\nimport baseIteratee from './_baseIteratee.js';\r\nimport isArray from './isArray.js';\r\nimport isIterateeCall from './_isIterateeCall.js';\r\n\r\n/**\r\n * Checks if `predicate` returns truthy for **all** elements of `collection`.\r\n * Iteration is stopped once `predicate` returns falsey. The predicate is\r\n * invoked with three arguments: (value, index|key, collection).\r\n *\r\n * **Note:** This method returns `true` for\r\n * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\r\n * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\r\n * elements of empty collections.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\r\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\r\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\r\n *  else `false`.\r\n * @example\r\n *\r\n * _.every([true, 1, null, 'yes'], Boolean);\r\n * // => false\r\n *\r\n * var users = [\r\n *   { 'user': 'barney', 'age': 36, 'active': false },\r\n *   { 'user': 'fred',   'age': 40, 'active': false }\r\n * ];\r\n *\r\n * // The `_.matches` iteratee shorthand.\r\n * _.every(users, { 'user': 'barney', 'active': false });\r\n * // => false\r\n *\r\n * // The `_.matchesProperty` iteratee shorthand.\r\n * _.every(users, ['active', false]);\r\n * // => true\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.every(users, 'active');\r\n * // => false\r\n */\r\nfunction every(collection, predicate, guard) {\r\n  var func = isArray(collection) ? arrayEvery : baseEvery;\r\n  if (guard && isIterateeCall(collection, predicate, guard)) {\r\n    predicate = undefined;\r\n  }\r\n  return func(collection, baseIteratee(predicate, 3));\r\n}\r\n\r\nexport default every;\r\n","export { default } from './assignIn.js'\r\n","export { default } from './assignInWith.js'\r\n","import baseFill from './_baseFill.js';\r\nimport isIterateeCall from './_isIterateeCall.js';\r\n\r\n/**\r\n * Fills elements of `array` with `value` from `start` up to, but not\r\n * including, `end`.\r\n *\r\n * **Note:** This method mutates `array`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.2.0\r\n * @category Array\r\n * @param {Array} array The array to fill.\r\n * @param {*} value The value to fill `array` with.\r\n * @param {number} [start=0] The start position.\r\n * @param {number} [end=array.length] The end position.\r\n * @returns {Array} Returns `array`.\r\n * @example\r\n *\r\n * var array = [1, 2, 3];\r\n *\r\n * _.fill(array, 'a');\r\n * console.log(array);\r\n * // => ['a', 'a', 'a']\r\n *\r\n * _.fill(Array(3), 2);\r\n * // => [2, 2, 2]\r\n *\r\n * _.fill([4, 6, 8, 10], '*', 1, 3);\r\n * // => [4, '*', '*', 10]\r\n */\r\nfunction fill(array, value, start, end) {\r\n  var length = array == null ? 0 : array.length;\r\n  if (!length) {\r\n    return [];\r\n  }\r\n  if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\r\n    start = 0;\r\n    end = length;\r\n  }\r\n  return baseFill(array, value, start, end);\r\n}\r\n\r\nexport default fill;\r\n","import arrayFilter from './_arrayFilter.js';\r\nimport baseFilter from './_baseFilter.js';\r\nimport baseIteratee from './_baseIteratee.js';\r\nimport isArray from './isArray.js';\r\n\r\n/**\r\n * Iterates over elements of `collection`, returning an array of all elements\r\n * `predicate` returns truthy for. The predicate is invoked with three\r\n * arguments: (value, index|key, collection).\r\n *\r\n * **Note:** Unlike `_.remove`, this method returns a new array.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\r\n * @returns {Array} Returns the new filtered array.\r\n * @see _.reject\r\n * @example\r\n *\r\n * var users = [\r\n *   { 'user': 'barney', 'age': 36, 'active': true },\r\n *   { 'user': 'fred',   'age': 40, 'active': false }\r\n * ];\r\n *\r\n * _.filter(users, function(o) { return !o.active; });\r\n * // => objects for ['fred']\r\n *\r\n * // The `_.matches` iteratee shorthand.\r\n * _.filter(users, { 'age': 36, 'active': true });\r\n * // => objects for ['barney']\r\n *\r\n * // The `_.matchesProperty` iteratee shorthand.\r\n * _.filter(users, ['active', false]);\r\n * // => objects for ['fred']\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.filter(users, 'active');\r\n * // => objects for ['barney']\r\n */\r\nfunction filter(collection, predicate) {\r\n  var func = isArray(collection) ? arrayFilter : baseFilter;\r\n  return func(collection, baseIteratee(predicate, 3));\r\n}\r\n\r\nexport default filter;\r\n","import createFind from './_createFind.js';\r\nimport findIndex from './findIndex.js';\r\n\r\n/**\r\n * Iterates over elements of `collection`, returning the first element\r\n * `predicate` returns truthy for. The predicate is invoked with three\r\n * arguments: (value, index|key, collection).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to inspect.\r\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\r\n * @param {number} [fromIndex=0] The index to search from.\r\n * @returns {*} Returns the matched element, else `undefined`.\r\n * @example\r\n *\r\n * var users = [\r\n *   { 'user': 'barney',  'age': 36, 'active': true },\r\n *   { 'user': 'fred',    'age': 40, 'active': false },\r\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\r\n * ];\r\n *\r\n * _.find(users, function(o) { return o.age < 40; });\r\n * // => object for 'barney'\r\n *\r\n * // The `_.matches` iteratee shorthand.\r\n * _.find(users, { 'age': 1, 'active': true });\r\n * // => object for 'pebbles'\r\n *\r\n * // The `_.matchesProperty` iteratee shorthand.\r\n * _.find(users, ['active', false]);\r\n * // => object for 'fred'\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.find(users, 'active');\r\n * // => object for 'barney'\r\n */\r\nvar find = createFind(findIndex);\r\n\r\nexport default find;\r\n","import baseFindIndex from './_baseFindIndex.js';\r\nimport baseIteratee from './_baseIteratee.js';\r\nimport toInteger from './toInteger.js';\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMax = Math.max;\r\n\r\n/**\r\n * This method is like `_.find` except that it returns the index of the first\r\n * element `predicate` returns truthy for instead of the element itself.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 1.1.0\r\n * @category Array\r\n * @param {Array} array The array to inspect.\r\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\r\n * @param {number} [fromIndex=0] The index to search from.\r\n * @returns {number} Returns the index of the found element, else `-1`.\r\n * @example\r\n *\r\n * var users = [\r\n *   { 'user': 'barney',  'active': false },\r\n *   { 'user': 'fred',    'active': false },\r\n *   { 'user': 'pebbles', 'active': true }\r\n * ];\r\n *\r\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\r\n * // => 0\r\n *\r\n * // The `_.matches` iteratee shorthand.\r\n * _.findIndex(users, { 'user': 'fred', 'active': false });\r\n * // => 1\r\n *\r\n * // The `_.matchesProperty` iteratee shorthand.\r\n * _.findIndex(users, ['active', false]);\r\n * // => 0\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.findIndex(users, 'active');\r\n * // => 2\r\n */\r\nfunction findIndex(array, predicate, fromIndex) {\r\n  var length = array == null ? 0 : array.length;\r\n  if (!length) {\r\n    return -1;\r\n  }\r\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\r\n  if (index < 0) {\r\n    index = nativeMax(length + index, 0);\r\n  }\r\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\r\n}\r\n\r\nexport default findIndex;\r\n","import baseFindKey from './_baseFindKey.js';\r\nimport baseForOwn from './_baseForOwn.js';\r\nimport baseIteratee from './_baseIteratee.js';\r\n\r\n/**\r\n * This method is like `_.find` except that it returns the key of the first\r\n * element `predicate` returns truthy for instead of the element itself.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 1.1.0\r\n * @category Object\r\n * @param {Object} object The object to inspect.\r\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\r\n * @returns {string|undefined} Returns the key of the matched element,\r\n *  else `undefined`.\r\n * @example\r\n *\r\n * var users = {\r\n *   'barney':  { 'age': 36, 'active': true },\r\n *   'fred':    { 'age': 40, 'active': false },\r\n *   'pebbles': { 'age': 1,  'active': true }\r\n * };\r\n *\r\n * _.findKey(users, function(o) { return o.age < 40; });\r\n * // => 'barney' (iteration order is not guaranteed)\r\n *\r\n * // The `_.matches` iteratee shorthand.\r\n * _.findKey(users, { 'age': 1, 'active': true });\r\n * // => 'pebbles'\r\n *\r\n * // The `_.matchesProperty` iteratee shorthand.\r\n * _.findKey(users, ['active', false]);\r\n * // => 'fred'\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.findKey(users, 'active');\r\n * // => 'barney'\r\n */\r\nfunction findKey(object, predicate) {\r\n  return baseFindKey(object, baseIteratee(predicate, 3), baseForOwn);\r\n}\r\n\r\nexport default findKey;\r\n","import createFind from './_createFind.js';\r\nimport findLastIndex from './findLastIndex.js';\r\n\r\n/**\r\n * This method is like `_.find` except that it iterates over elements of\r\n * `collection` from right to left.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 2.0.0\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to inspect.\r\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\r\n * @param {number} [fromIndex=collection.length-1] The index to search from.\r\n * @returns {*} Returns the matched element, else `undefined`.\r\n * @example\r\n *\r\n * _.findLast([1, 2, 3, 4], function(n) {\r\n *   return n % 2 == 1;\r\n * });\r\n * // => 3\r\n */\r\nvar findLast = createFind(findLastIndex);\r\n\r\nexport default findLast;\r\n","import baseFindIndex from './_baseFindIndex.js';\r\nimport baseIteratee from './_baseIteratee.js';\r\nimport toInteger from './toInteger.js';\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMax = Math.max,\r\n    nativeMin = Math.min;\r\n\r\n/**\r\n * This method is like `_.findIndex` except that it iterates over elements\r\n * of `collection` from right to left.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 2.0.0\r\n * @category Array\r\n * @param {Array} array The array to inspect.\r\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\r\n * @param {number} [fromIndex=array.length-1] The index to search from.\r\n * @returns {number} Returns the index of the found element, else `-1`.\r\n * @example\r\n *\r\n * var users = [\r\n *   { 'user': 'barney',  'active': true },\r\n *   { 'user': 'fred',    'active': false },\r\n *   { 'user': 'pebbles', 'active': false }\r\n * ];\r\n *\r\n * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\r\n * // => 2\r\n *\r\n * // The `_.matches` iteratee shorthand.\r\n * _.findLastIndex(users, { 'user': 'barney', 'active': true });\r\n * // => 0\r\n *\r\n * // The `_.matchesProperty` iteratee shorthand.\r\n * _.findLastIndex(users, ['active', false]);\r\n * // => 2\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.findLastIndex(users, 'active');\r\n * // => 0\r\n */\r\nfunction findLastIndex(array, predicate, fromIndex) {\r\n  var length = array == null ? 0 : array.length;\r\n  if (!length) {\r\n    return -1;\r\n  }\r\n  var index = length - 1;\r\n  if (fromIndex !== undefined) {\r\n    index = toInteger(fromIndex);\r\n    index = fromIndex < 0\r\n      ? nativeMax(length + index, 0)\r\n      : nativeMin(index, length - 1);\r\n  }\r\n  return baseFindIndex(array, baseIteratee(predicate, 3), index, true);\r\n}\r\n\r\nexport default findLastIndex;\r\n","import baseFindKey from './_baseFindKey.js';\r\nimport baseForOwnRight from './_baseForOwnRight.js';\r\nimport baseIteratee from './_baseIteratee.js';\r\n\r\n/**\r\n * This method is like `_.findKey` except that it iterates over elements of\r\n * a collection in the opposite order.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 2.0.0\r\n * @category Object\r\n * @param {Object} object The object to inspect.\r\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\r\n * @returns {string|undefined} Returns the key of the matched element,\r\n *  else `undefined`.\r\n * @example\r\n *\r\n * var users = {\r\n *   'barney':  { 'age': 36, 'active': true },\r\n *   'fred':    { 'age': 40, 'active': false },\r\n *   'pebbles': { 'age': 1,  'active': true }\r\n * };\r\n *\r\n * _.findLastKey(users, function(o) { return o.age < 40; });\r\n * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\r\n *\r\n * // The `_.matches` iteratee shorthand.\r\n * _.findLastKey(users, { 'age': 36, 'active': true });\r\n * // => 'barney'\r\n *\r\n * // The `_.matchesProperty` iteratee shorthand.\r\n * _.findLastKey(users, ['active', false]);\r\n * // => 'fred'\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.findLastKey(users, 'active');\r\n * // => 'pebbles'\r\n */\r\nfunction findLastKey(object, predicate) {\r\n  return baseFindKey(object, baseIteratee(predicate, 3), baseForOwnRight);\r\n}\r\n\r\nexport default findLastKey;\r\n","export { default } from './head.js'\r\n","import baseFlatten from './_baseFlatten.js';\r\nimport map from './map.js';\r\n\r\n/**\r\n * Creates a flattened array of values by running each element in `collection`\r\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\r\n * with three arguments: (value, index|key, collection).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\r\n * @returns {Array} Returns the new flattened array.\r\n * @example\r\n *\r\n * function duplicate(n) {\r\n *   return [n, n];\r\n * }\r\n *\r\n * _.flatMap([1, 2], duplicate);\r\n * // => [1, 1, 2, 2]\r\n */\r\nfunction flatMap(collection, iteratee) {\r\n  return baseFlatten(map(collection, iteratee), 1);\r\n}\r\n\r\nexport default flatMap;\r\n","import baseFlatten from './_baseFlatten.js';\r\nimport map from './map.js';\r\n\r\n/** Used as references for various `Number` constants. */\r\nvar INFINITY = 1 / 0;\r\n\r\n/**\r\n * This method is like `_.flatMap` except that it recursively flattens the\r\n * mapped results.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.7.0\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\r\n * @returns {Array} Returns the new flattened array.\r\n * @example\r\n *\r\n * function duplicate(n) {\r\n *   return [[[n, n]]];\r\n * }\r\n *\r\n * _.flatMapDeep([1, 2], duplicate);\r\n * // => [1, 1, 2, 2]\r\n */\r\nfunction flatMapDeep(collection, iteratee) {\r\n  return baseFlatten(map(collection, iteratee), INFINITY);\r\n}\r\n\r\nexport default flatMapDeep;\r\n","import baseFlatten from './_baseFlatten.js';\r\nimport map from './map.js';\r\nimport toInteger from './toInteger.js';\r\n\r\n/**\r\n * This method is like `_.flatMap` except that it recursively flattens the\r\n * mapped results up to `depth` times.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.7.0\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\r\n * @param {number} [depth=1] The maximum recursion depth.\r\n * @returns {Array} Returns the new flattened array.\r\n * @example\r\n *\r\n * function duplicate(n) {\r\n *   return [[[n, n]]];\r\n * }\r\n *\r\n * _.flatMapDepth([1, 2], duplicate, 2);\r\n * // => [[1, 1], [2, 2]]\r\n */\r\nfunction flatMapDepth(collection, iteratee, depth) {\r\n  depth = depth === undefined ? 1 : toInteger(depth);\r\n  return baseFlatten(map(collection, iteratee), depth);\r\n}\r\n\r\nexport default flatMapDepth;\r\n","import baseFlatten from './_baseFlatten.js';\r\n\r\n/**\r\n * Flattens `array` a single level deep.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Array\r\n * @param {Array} array The array to flatten.\r\n * @returns {Array} Returns the new flattened array.\r\n * @example\r\n *\r\n * _.flatten([1, [2, [3, [4]], 5]]);\r\n * // => [1, 2, [3, [4]], 5]\r\n */\r\nfunction flatten(array) {\r\n  var length = array == null ? 0 : array.length;\r\n  return length ? baseFlatten(array, 1) : [];\r\n}\r\n\r\nexport default flatten;\r\n","import baseFlatten from './_baseFlatten.js';\r\n\r\n/** Used as references for various `Number` constants. */\r\nvar INFINITY = 1 / 0;\r\n\r\n/**\r\n * Recursively flattens `array`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Array\r\n * @param {Array} array The array to flatten.\r\n * @returns {Array} Returns the new flattened array.\r\n * @example\r\n *\r\n * _.flattenDeep([1, [2, [3, [4]], 5]]);\r\n * // => [1, 2, 3, 4, 5]\r\n */\r\nfunction flattenDeep(array) {\r\n  var length = array == null ? 0 : array.length;\r\n  return length ? baseFlatten(array, INFINITY) : [];\r\n}\r\n\r\nexport default flattenDeep;\r\n","import baseFlatten from './_baseFlatten.js';\r\nimport toInteger from './toInteger.js';\r\n\r\n/**\r\n * Recursively flatten `array` up to `depth` times.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.4.0\r\n * @category Array\r\n * @param {Array} array The array to flatten.\r\n * @param {number} [depth=1] The maximum recursion depth.\r\n * @returns {Array} Returns the new flattened array.\r\n * @example\r\n *\r\n * var array = [1, [2, [3, [4]], 5]];\r\n *\r\n * _.flattenDepth(array, 1);\r\n * // => [1, 2, [3, [4]], 5]\r\n *\r\n * _.flattenDepth(array, 2);\r\n * // => [1, 2, 3, [4], 5]\r\n */\r\nfunction flattenDepth(array, depth) {\r\n  var length = array == null ? 0 : array.length;\r\n  if (!length) {\r\n    return [];\r\n  }\r\n  depth = depth === undefined ? 1 : toInteger(depth);\r\n  return baseFlatten(array, depth);\r\n}\r\n\r\nexport default flattenDepth;\r\n","import createWrap from './_createWrap.js';\r\n\r\n/** Used to compose bitmasks for function metadata. */\r\nvar WRAP_FLIP_FLAG = 512;\r\n\r\n/**\r\n * Creates a function that invokes `func` with arguments reversed.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Function\r\n * @param {Function} func The function to flip arguments for.\r\n * @returns {Function} Returns the new flipped function.\r\n * @example\r\n *\r\n * var flipped = _.flip(function() {\r\n *   return _.toArray(arguments);\r\n * });\r\n *\r\n * flipped('a', 'b', 'c', 'd');\r\n * // => ['d', 'c', 'b', 'a']\r\n */\r\nfunction flip(func) {\r\n  return createWrap(func, WRAP_FLIP_FLAG);\r\n}\r\n\r\nexport default flip;\r\n","import createRound from './_createRound.js';\r\n\r\n/**\r\n * Computes `number` rounded down to `precision`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.10.0\r\n * @category Math\r\n * @param {number} number The number to round down.\r\n * @param {number} [precision=0] The precision to round down to.\r\n * @returns {number} Returns the rounded down number.\r\n * @example\r\n *\r\n * _.floor(4.006);\r\n * // => 4\r\n *\r\n * _.floor(0.046, 2);\r\n * // => 0.04\r\n *\r\n * _.floor(4060, -2);\r\n * // => 4000\r\n */\r\nvar floor = createRound('floor');\r\n\r\nexport default floor;\r\n","import createFlow from './_createFlow.js';\r\n\r\n/**\r\n * Creates a function that returns the result of invoking the given functions\r\n * with the `this` binding of the created function, where each successive\r\n * invocation is supplied the return value of the previous.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Util\r\n * @param {...(Function|Function[])} [funcs] The functions to invoke.\r\n * @returns {Function} Returns the new composite function.\r\n * @see _.flowRight\r\n * @example\r\n *\r\n * function square(n) {\r\n *   return n * n;\r\n * }\r\n *\r\n * var addSquare = _.flow([_.add, square]);\r\n * addSquare(1, 2);\r\n * // => 9\r\n */\r\nvar flow = createFlow();\r\n\r\nexport default flow;\r\n","import createFlow from './_createFlow.js';\r\n\r\n/**\r\n * This method is like `_.flow` except that it creates a function that\r\n * invokes the given functions from right to left.\r\n *\r\n * @static\r\n * @since 3.0.0\r\n * @memberOf _\r\n * @category Util\r\n * @param {...(Function|Function[])} [funcs] The functions to invoke.\r\n * @returns {Function} Returns the new composite function.\r\n * @see _.flow\r\n * @example\r\n *\r\n * function square(n) {\r\n *   return n * n;\r\n * }\r\n *\r\n * var addSquare = _.flowRight([square, _.add]);\r\n * addSquare(1, 2);\r\n * // => 9\r\n */\r\nvar flowRight = createFlow(true);\r\n\r\nexport default flowRight;\r\n","import arrayEach from './_arrayEach.js';\r\nimport baseEach from './_baseEach.js';\r\nimport castFunction from './_castFunction.js';\r\nimport isArray from './isArray.js';\r\n\r\n/**\r\n * Iterates over elements of `collection` and invokes `iteratee` for each element.\r\n * The iteratee is invoked with three arguments: (value, index|key, collection).\r\n * Iteratee functions may exit iteration early by explicitly returning `false`.\r\n *\r\n * **Note:** As with other \"Collections\" methods, objects with a \"length\"\r\n * property are iterated like arrays. To avoid this behavior use `_.forIn`\r\n * or `_.forOwn` for object iteration.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @alias each\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\r\n * @returns {Array|Object} Returns `collection`.\r\n * @see _.forEachRight\r\n * @example\r\n *\r\n * _.forEach([1, 2], function(value) {\r\n *   console.log(value);\r\n * });\r\n * // => Logs `1` then `2`.\r\n *\r\n * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\r\n *   console.log(key);\r\n * });\r\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\r\n */\r\nfunction forEach(collection, iteratee) {\r\n  var func = isArray(collection) ? arrayEach : baseEach;\r\n  return func(collection, castFunction(iteratee));\r\n}\r\n\r\nexport default forEach;\r\n","import arrayEachRight from './_arrayEachRight.js';\r\nimport baseEachRight from './_baseEachRight.js';\r\nimport castFunction from './_castFunction.js';\r\nimport isArray from './isArray.js';\r\n\r\n/**\r\n * This method is like `_.forEach` except that it iterates over elements of\r\n * `collection` from right to left.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 2.0.0\r\n * @alias eachRight\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\r\n * @returns {Array|Object} Returns `collection`.\r\n * @see _.forEach\r\n * @example\r\n *\r\n * _.forEachRight([1, 2], function(value) {\r\n *   console.log(value);\r\n * });\r\n * // => Logs `2` then `1`.\r\n */\r\nfunction forEachRight(collection, iteratee) {\r\n  var func = isArray(collection) ? arrayEachRight : baseEachRight;\r\n  return func(collection, castFunction(iteratee));\r\n}\r\n\r\nexport default forEachRight;\r\n","import baseFor from './_baseFor.js';\r\nimport castFunction from './_castFunction.js';\r\nimport keysIn from './keysIn.js';\r\n\r\n/**\r\n * Iterates over own and inherited enumerable string keyed properties of an\r\n * object and invokes `iteratee` for each property. The iteratee is invoked\r\n * with three arguments: (value, key, object). Iteratee functions may exit\r\n * iteration early by explicitly returning `false`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.3.0\r\n * @category Object\r\n * @param {Object} object The object to iterate over.\r\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\r\n * @returns {Object} Returns `object`.\r\n * @see _.forInRight\r\n * @example\r\n *\r\n * function Foo() {\r\n *   this.a = 1;\r\n *   this.b = 2;\r\n * }\r\n *\r\n * Foo.prototype.c = 3;\r\n *\r\n * _.forIn(new Foo, function(value, key) {\r\n *   console.log(key);\r\n * });\r\n * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\r\n */\r\nfunction forIn(object, iteratee) {\r\n  return object == null\r\n    ? object\r\n    : baseFor(object, castFunction(iteratee), keysIn);\r\n}\r\n\r\nexport default forIn;\r\n","import baseForRight from './_baseForRight.js';\r\nimport castFunction from './_castFunction.js';\r\nimport keysIn from './keysIn.js';\r\n\r\n/**\r\n * This method is like `_.forIn` except that it iterates over properties of\r\n * `object` in the opposite order.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 2.0.0\r\n * @category Object\r\n * @param {Object} object The object to iterate over.\r\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\r\n * @returns {Object} Returns `object`.\r\n * @see _.forIn\r\n * @example\r\n *\r\n * function Foo() {\r\n *   this.a = 1;\r\n *   this.b = 2;\r\n * }\r\n *\r\n * Foo.prototype.c = 3;\r\n *\r\n * _.forInRight(new Foo, function(value, key) {\r\n *   console.log(key);\r\n * });\r\n * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\r\n */\r\nfunction forInRight(object, iteratee) {\r\n  return object == null\r\n    ? object\r\n    : baseForRight(object, castFunction(iteratee), keysIn);\r\n}\r\n\r\nexport default forInRight;\r\n","import baseForOwn from './_baseForOwn.js';\r\nimport castFunction from './_castFunction.js';\r\n\r\n/**\r\n * Iterates over own enumerable string keyed properties of an object and\r\n * invokes `iteratee` for each property. The iteratee is invoked with three\r\n * arguments: (value, key, object). Iteratee functions may exit iteration\r\n * early by explicitly returning `false`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.3.0\r\n * @category Object\r\n * @param {Object} object The object to iterate over.\r\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\r\n * @returns {Object} Returns `object`.\r\n * @see _.forOwnRight\r\n * @example\r\n *\r\n * function Foo() {\r\n *   this.a = 1;\r\n *   this.b = 2;\r\n * }\r\n *\r\n * Foo.prototype.c = 3;\r\n *\r\n * _.forOwn(new Foo, function(value, key) {\r\n *   console.log(key);\r\n * });\r\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\r\n */\r\nfunction forOwn(object, iteratee) {\r\n  return object && baseForOwn(object, castFunction(iteratee));\r\n}\r\n\r\nexport default forOwn;\r\n","import baseForOwnRight from './_baseForOwnRight.js';\r\nimport castFunction from './_castFunction.js';\r\n\r\n/**\r\n * This method is like `_.forOwn` except that it iterates over properties of\r\n * `object` in the opposite order.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 2.0.0\r\n * @category Object\r\n * @param {Object} object The object to iterate over.\r\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\r\n * @returns {Object} Returns `object`.\r\n * @see _.forOwn\r\n * @example\r\n *\r\n * function Foo() {\r\n *   this.a = 1;\r\n *   this.b = 2;\r\n * }\r\n *\r\n * Foo.prototype.c = 3;\r\n *\r\n * _.forOwnRight(new Foo, function(value, key) {\r\n *   console.log(key);\r\n * });\r\n * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\r\n */\r\nfunction forOwnRight(object, iteratee) {\r\n  return object && baseForOwnRight(object, castFunction(iteratee));\r\n}\r\n\r\nexport default forOwnRight;\r\n","/**\r\n * The inverse of `_.toPairs`; this method returns an object composed\r\n * from key-value `pairs`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Array\r\n * @param {Array} pairs The key-value pairs.\r\n * @returns {Object} Returns the new object.\r\n * @example\r\n *\r\n * _.fromPairs([['a', 1], ['b', 2]]);\r\n * // => { 'a': 1, 'b': 2 }\r\n */\r\nfunction fromPairs(pairs) {\r\n  var index = -1,\r\n      length = pairs == null ? 0 : pairs.length,\r\n      result = {};\r\n\r\n  while (++index < length) {\r\n    var pair = pairs[index];\r\n    result[pair[0]] = pair[1];\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default fromPairs;\r\n","import after from './after.js';\r\nimport ary from './ary.js';\r\nimport before from './before.js';\r\nimport bind from './bind.js';\r\nimport bindKey from './bindKey.js';\r\nimport curry from './curry.js';\r\nimport curryRight from './curryRight.js';\r\nimport debounce from './debounce.js';\r\nimport defer from './defer.js';\r\nimport delay from './delay.js';\r\nimport flip from './flip.js';\r\nimport memoize from './memoize.js';\r\nimport negate from './negate.js';\r\nimport once from './once.js';\r\nimport overArgs from './overArgs.js';\r\nimport partial from './partial.js';\r\nimport partialRight from './partialRight.js';\r\nimport rearg from './rearg.js';\r\nimport rest from './rest.js';\r\nimport spread from './spread.js';\r\nimport throttle from './throttle.js';\r\nimport unary from './unary.js';\r\nimport wrap from './wrap.js';\r\n\r\nexport default {\r\n  after, ary, before, bind, bindKey,\r\n  curry, curryRight, debounce, defer, delay,\r\n  flip, memoize, negate, once, overArgs,\r\n  partial, partialRight, rearg, rest, spread,\r\n  throttle, unary, wrap\r\n};\r\n","export { default as after } from './after.js';\r\nexport { default as ary } from './ary.js';\r\nexport { default as before } from './before.js';\r\nexport { default as bind } from './bind.js';\r\nexport { default as bindKey } from './bindKey.js';\r\nexport { default as curry } from './curry.js';\r\nexport { default as curryRight } from './curryRight.js';\r\nexport { default as debounce } from './debounce.js';\r\nexport { default as defer } from './defer.js';\r\nexport { default as delay } from './delay.js';\r\nexport { default as flip } from './flip.js';\r\nexport { default as memoize } from './memoize.js';\r\nexport { default as negate } from './negate.js';\r\nexport { default as once } from './once.js';\r\nexport { default as overArgs } from './overArgs.js';\r\nexport { default as partial } from './partial.js';\r\nexport { default as partialRight } from './partialRight.js';\r\nexport { default as rearg } from './rearg.js';\r\nexport { default as rest } from './rest.js';\r\nexport { default as spread } from './spread.js';\r\nexport { default as throttle } from './throttle.js';\r\nexport { default as unary } from './unary.js';\r\nexport { default as wrap } from './wrap.js';\r\nexport { default } from './function.default.js';\r\n","import baseFunctions from './_baseFunctions.js';\r\nimport keys from './keys.js';\r\n\r\n/**\r\n * Creates an array of function property names from own enumerable properties\r\n * of `object`.\r\n *\r\n * @static\r\n * @since 0.1.0\r\n * @memberOf _\r\n * @category Object\r\n * @param {Object} object The object to inspect.\r\n * @returns {Array} Returns the function names.\r\n * @see _.functionsIn\r\n * @example\r\n *\r\n * function Foo() {\r\n *   this.a = _.constant('a');\r\n *   this.b = _.constant('b');\r\n * }\r\n *\r\n * Foo.prototype.c = _.constant('c');\r\n *\r\n * _.functions(new Foo);\r\n * // => ['a', 'b']\r\n */\r\nfunction functions(object) {\r\n  return object == null ? [] : baseFunctions(object, keys(object));\r\n}\r\n\r\nexport default functions;\r\n","import baseFunctions from './_baseFunctions.js';\r\nimport keysIn from './keysIn.js';\r\n\r\n/**\r\n * Creates an array of function property names from own and inherited\r\n * enumerable properties of `object`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Object\r\n * @param {Object} object The object to inspect.\r\n * @returns {Array} Returns the function names.\r\n * @see _.functions\r\n * @example\r\n *\r\n * function Foo() {\r\n *   this.a = _.constant('a');\r\n *   this.b = _.constant('b');\r\n * }\r\n *\r\n * Foo.prototype.c = _.constant('c');\r\n *\r\n * _.functionsIn(new Foo);\r\n * // => ['a', 'b', 'c']\r\n */\r\nfunction functionsIn(object) {\r\n  return object == null ? [] : baseFunctions(object, keysIn(object));\r\n}\r\n\r\nexport default functionsIn;\r\n","import baseGet from './_baseGet.js';\r\n\r\n/**\r\n * Gets the value at `path` of `object`. If the resolved value is\r\n * `undefined`, the `defaultValue` is returned in its place.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.7.0\r\n * @category Object\r\n * @param {Object} object The object to query.\r\n * @param {Array|string} path The path of the property to get.\r\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\r\n * @returns {*} Returns the resolved value.\r\n * @example\r\n *\r\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\r\n *\r\n * _.get(object, 'a[0].b.c');\r\n * // => 3\r\n *\r\n * _.get(object, ['a', '0', 'b', 'c']);\r\n * // => 3\r\n *\r\n * _.get(object, 'a.b.c', 'default');\r\n * // => 'default'\r\n */\r\nfunction get(object, path, defaultValue) {\r\n  var result = object == null ? undefined : baseGet(object, path);\r\n  return result === undefined ? defaultValue : result;\r\n}\r\n\r\nexport default get;\r\n","import baseAssignValue from './_baseAssignValue.js';\r\nimport createAggregator from './_createAggregator.js';\r\n\r\n/** Used for built-in method references. */\r\nvar objectProto = Object.prototype;\r\n\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n/**\r\n * Creates an object composed of keys generated from the results of running\r\n * each element of `collection` thru `iteratee`. The order of grouped values\r\n * is determined by the order they occur in `collection`. The corresponding\r\n * value of each key is an array of elements responsible for generating the\r\n * key. The iteratee is invoked with one argument: (value).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\r\n * @returns {Object} Returns the composed aggregate object.\r\n * @example\r\n *\r\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\r\n * // => { '4': [4.2], '6': [6.1, 6.3] }\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.groupBy(['one', 'two', 'three'], 'length');\r\n * // => { '3': ['one', 'two'], '5': ['three'] }\r\n */\r\nvar groupBy = createAggregator(function(result, value, key) {\r\n  if (hasOwnProperty.call(result, key)) {\r\n    result[key].push(value);\r\n  } else {\r\n    baseAssignValue(result, key, [value]);\r\n  }\r\n});\r\n\r\nexport default groupBy;\r\n","import baseGt from './_baseGt.js';\r\nimport createRelationalOperation from './_createRelationalOperation.js';\r\n\r\n/**\r\n * Checks if `value` is greater than `other`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.9.0\r\n * @category Lang\r\n * @param {*} value The value to compare.\r\n * @param {*} other The other value to compare.\r\n * @returns {boolean} Returns `true` if `value` is greater than `other`,\r\n *  else `false`.\r\n * @see _.lt\r\n * @example\r\n *\r\n * _.gt(3, 1);\r\n * // => true\r\n *\r\n * _.gt(3, 3);\r\n * // => false\r\n *\r\n * _.gt(1, 3);\r\n * // => false\r\n */\r\nvar gt = createRelationalOperation(baseGt);\r\n\r\nexport default gt;\r\n","import createRelationalOperation from './_createRelationalOperation.js';\r\n\r\n/**\r\n * Checks if `value` is greater than or equal to `other`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.9.0\r\n * @category Lang\r\n * @param {*} value The value to compare.\r\n * @param {*} other The other value to compare.\r\n * @returns {boolean} Returns `true` if `value` is greater than or equal to\r\n *  `other`, else `false`.\r\n * @see _.lte\r\n * @example\r\n *\r\n * _.gte(3, 1);\r\n * // => true\r\n *\r\n * _.gte(3, 3);\r\n * // => true\r\n *\r\n * _.gte(1, 3);\r\n * // => false\r\n */\r\nvar gte = createRelationalOperation(function(value, other) {\r\n  return value >= other;\r\n});\r\n\r\nexport default gte;\r\n","import baseHas from './_baseHas.js';\r\nimport hasPath from './_hasPath.js';\r\n\r\n/**\r\n * Checks if `path` is a direct property of `object`.\r\n *\r\n * @static\r\n * @since 0.1.0\r\n * @memberOf _\r\n * @category Object\r\n * @param {Object} object The object to query.\r\n * @param {Array|string} path The path to check.\r\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\r\n * @example\r\n *\r\n * var object = { 'a': { 'b': 2 } };\r\n * var other = _.create({ 'a': _.create({ 'b': 2 }) });\r\n *\r\n * _.has(object, 'a');\r\n * // => true\r\n *\r\n * _.has(object, 'a.b');\r\n * // => true\r\n *\r\n * _.has(object, ['a', 'b']);\r\n * // => true\r\n *\r\n * _.has(other, 'a');\r\n * // => false\r\n */\r\nfunction has(object, path) {\r\n  return object != null && hasPath(object, path, baseHas);\r\n}\r\n\r\nexport default has;\r\n","import baseHasIn from './_baseHasIn.js';\r\nimport hasPath from './_hasPath.js';\r\n\r\n/**\r\n * Checks if `path` is a direct or inherited property of `object`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Object\r\n * @param {Object} object The object to query.\r\n * @param {Array|string} path The path to check.\r\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\r\n * @example\r\n *\r\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\r\n *\r\n * _.hasIn(object, 'a');\r\n * // => true\r\n *\r\n * _.hasIn(object, 'a.b');\r\n * // => true\r\n *\r\n * _.hasIn(object, ['a', 'b']);\r\n * // => true\r\n *\r\n * _.hasIn(object, 'b');\r\n * // => false\r\n */\r\nfunction hasIn(object, path) {\r\n  return object != null && hasPath(object, path, baseHasIn);\r\n}\r\n\r\nexport default hasIn;\r\n","/**\r\n * Gets the first element of `array`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @alias first\r\n * @category Array\r\n * @param {Array} array The array to query.\r\n * @returns {*} Returns the first element of `array`.\r\n * @example\r\n *\r\n * _.head([1, 2, 3]);\r\n * // => 1\r\n *\r\n * _.head([]);\r\n * // => undefined\r\n */\r\nfunction head(array) {\r\n  return (array && array.length) ? array[0] : undefined;\r\n}\r\n\r\nexport default head;\r\n","/**\r\n * This method returns the first argument it receives.\r\n *\r\n * @static\r\n * @since 0.1.0\r\n * @memberOf _\r\n * @category Util\r\n * @param {*} value Any value.\r\n * @returns {*} Returns `value`.\r\n * @example\r\n *\r\n * var object = { 'a': 1 };\r\n *\r\n * console.log(_.identity(object) === object);\r\n * // => true\r\n */\r\nfunction identity(value) {\r\n  return value;\r\n}\r\n\r\nexport default identity;\r\n","import baseInRange from './_baseInRange.js';\r\nimport toFinite from './toFinite.js';\r\nimport toNumber from './toNumber.js';\r\n\r\n/**\r\n * Checks if `n` is between `start` and up to, but not including, `end`. If\r\n * `end` is not specified, it's set to `start` with `start` then set to `0`.\r\n * If `start` is greater than `end` the params are swapped to support\r\n * negative ranges.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.3.0\r\n * @category Number\r\n * @param {number} number The number to check.\r\n * @param {number} [start=0] The start of the range.\r\n * @param {number} end The end of the range.\r\n * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\r\n * @see _.range, _.rangeRight\r\n * @example\r\n *\r\n * _.inRange(3, 2, 4);\r\n * // => true\r\n *\r\n * _.inRange(4, 8);\r\n * // => true\r\n *\r\n * _.inRange(4, 2);\r\n * // => false\r\n *\r\n * _.inRange(2, 2);\r\n * // => false\r\n *\r\n * _.inRange(1.2, 2);\r\n * // => true\r\n *\r\n * _.inRange(5.2, 4);\r\n * // => false\r\n *\r\n * _.inRange(-3, -2, -6);\r\n * // => true\r\n */\r\nfunction inRange(number, start, end) {\r\n  start = toFinite(start);\r\n  if (end === undefined) {\r\n    end = start;\r\n    start = 0;\r\n  } else {\r\n    end = toFinite(end);\r\n  }\r\n  number = toNumber(number);\r\n  return baseInRange(number, start, end);\r\n}\r\n\r\nexport default inRange;\r\n","import baseIndexOf from './_baseIndexOf.js';\r\nimport isArrayLike from './isArrayLike.js';\r\nimport isString from './isString.js';\r\nimport toInteger from './toInteger.js';\r\nimport values from './values.js';\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMax = Math.max;\r\n\r\n/**\r\n * Checks if `value` is in `collection`. If `collection` is a string, it's\r\n * checked for a substring of `value`, otherwise\r\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\r\n * the offset from the end of `collection`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Collection\r\n * @param {Array|Object|string} collection The collection to inspect.\r\n * @param {*} value The value to search for.\r\n * @param {number} [fromIndex=0] The index to search from.\r\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\r\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\r\n * @example\r\n *\r\n * _.includes([1, 2, 3], 1);\r\n * // => true\r\n *\r\n * _.includes([1, 2, 3], 1, 2);\r\n * // => false\r\n *\r\n * _.includes({ 'a': 1, 'b': 2 }, 1);\r\n * // => true\r\n *\r\n * _.includes('abcd', 'bc');\r\n * // => true\r\n */\r\nfunction includes(collection, value, fromIndex, guard) {\r\n  collection = isArrayLike(collection) ? collection : values(collection);\r\n  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\r\n\r\n  var length = collection.length;\r\n  if (fromIndex < 0) {\r\n    fromIndex = nativeMax(length + fromIndex, 0);\r\n  }\r\n  return isString(collection)\r\n    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\r\n    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\r\n}\r\n\r\nexport default includes;\r\n","import baseIndexOf from './_baseIndexOf.js';\r\nimport toInteger from './toInteger.js';\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMax = Math.max;\r\n\r\n/**\r\n * Gets the index at which the first occurrence of `value` is found in `array`\r\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n * for equality comparisons. If `fromIndex` is negative, it's used as the\r\n * offset from the end of `array`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Array\r\n * @param {Array} array The array to inspect.\r\n * @param {*} value The value to search for.\r\n * @param {number} [fromIndex=0] The index to search from.\r\n * @returns {number} Returns the index of the matched value, else `-1`.\r\n * @example\r\n *\r\n * _.indexOf([1, 2, 1, 2], 2);\r\n * // => 1\r\n *\r\n * // Search from the `fromIndex`.\r\n * _.indexOf([1, 2, 1, 2], 2, 2);\r\n * // => 3\r\n */\r\nfunction indexOf(array, value, fromIndex) {\r\n  var length = array == null ? 0 : array.length;\r\n  if (!length) {\r\n    return -1;\r\n  }\r\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\r\n  if (index < 0) {\r\n    index = nativeMax(length + index, 0);\r\n  }\r\n  return baseIndexOf(array, value, index);\r\n}\r\n\r\nexport default indexOf;\r\n","import baseSlice from './_baseSlice.js';\r\n\r\n/**\r\n * Gets all but the last element of `array`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Array\r\n * @param {Array} array The array to query.\r\n * @returns {Array} Returns the slice of `array`.\r\n * @example\r\n *\r\n * _.initial([1, 2, 3]);\r\n * // => [1, 2]\r\n */\r\nfunction initial(array) {\r\n  var length = array == null ? 0 : array.length;\r\n  return length ? baseSlice(array, 0, -1) : [];\r\n}\r\n\r\nexport default initial;\r\n","import arrayMap from './_arrayMap.js';\r\nimport baseIntersection from './_baseIntersection.js';\r\nimport baseRest from './_baseRest.js';\r\nimport castArrayLikeObject from './_castArrayLikeObject.js';\r\n\r\n/**\r\n * Creates an array of unique values that are included in all given arrays\r\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n * for equality comparisons. The order and references of result values are\r\n * determined by the first array.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Array\r\n * @param {...Array} [arrays] The arrays to inspect.\r\n * @returns {Array} Returns the new array of intersecting values.\r\n * @example\r\n *\r\n * _.intersection([2, 1], [2, 3]);\r\n * // => [2]\r\n */\r\nvar intersection = baseRest(function(arrays) {\r\n  var mapped = arrayMap(arrays, castArrayLikeObject);\r\n  return (mapped.length && mapped[0] === arrays[0])\r\n    ? baseIntersection(mapped)\r\n    : [];\r\n});\r\n\r\nexport default intersection;\r\n","import arrayMap from './_arrayMap.js';\r\nimport baseIntersection from './_baseIntersection.js';\r\nimport baseIteratee from './_baseIteratee.js';\r\nimport baseRest from './_baseRest.js';\r\nimport castArrayLikeObject from './_castArrayLikeObject.js';\r\nimport last from './last.js';\r\n\r\n/**\r\n * This method is like `_.intersection` except that it accepts `iteratee`\r\n * which is invoked for each element of each `arrays` to generate the criterion\r\n * by which they're compared. The order and references of result values are\r\n * determined by the first array. The iteratee is invoked with one argument:\r\n * (value).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Array\r\n * @param {...Array} [arrays] The arrays to inspect.\r\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\r\n * @returns {Array} Returns the new array of intersecting values.\r\n * @example\r\n *\r\n * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\r\n * // => [2.1]\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\r\n * // => [{ 'x': 1 }]\r\n */\r\nvar intersectionBy = baseRest(function(arrays) {\r\n  var iteratee = last(arrays),\r\n      mapped = arrayMap(arrays, castArrayLikeObject);\r\n\r\n  if (iteratee === last(mapped)) {\r\n    iteratee = undefined;\r\n  } else {\r\n    mapped.pop();\r\n  }\r\n  return (mapped.length && mapped[0] === arrays[0])\r\n    ? baseIntersection(mapped, baseIteratee(iteratee, 2))\r\n    : [];\r\n});\r\n\r\nexport default intersectionBy;\r\n","import arrayMap from './_arrayMap.js';\r\nimport baseIntersection from './_baseIntersection.js';\r\nimport baseRest from './_baseRest.js';\r\nimport castArrayLikeObject from './_castArrayLikeObject.js';\r\nimport last from './last.js';\r\n\r\n/**\r\n * This method is like `_.intersection` except that it accepts `comparator`\r\n * which is invoked to compare elements of `arrays`. The order and references\r\n * of result values are determined by the first array. The comparator is\r\n * invoked with two arguments: (arrVal, othVal).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Array\r\n * @param {...Array} [arrays] The arrays to inspect.\r\n * @param {Function} [comparator] The comparator invoked per element.\r\n * @returns {Array} Returns the new array of intersecting values.\r\n * @example\r\n *\r\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\r\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\r\n *\r\n * _.intersectionWith(objects, others, _.isEqual);\r\n * // => [{ 'x': 1, 'y': 2 }]\r\n */\r\nvar intersectionWith = baseRest(function(arrays) {\r\n  var comparator = last(arrays),\r\n      mapped = arrayMap(arrays, castArrayLikeObject);\r\n\r\n  comparator = typeof comparator == 'function' ? comparator : undefined;\r\n  if (comparator) {\r\n    mapped.pop();\r\n  }\r\n  return (mapped.length && mapped[0] === arrays[0])\r\n    ? baseIntersection(mapped, undefined, comparator)\r\n    : [];\r\n});\r\n\r\nexport default intersectionWith;\r\n","import constant from './constant.js';\r\nimport createInverter from './_createInverter.js';\r\nimport identity from './identity.js';\r\n\r\n/** Used for built-in method references. */\r\nvar objectProto = Object.prototype;\r\n\r\n/**\r\n * Used to resolve the\r\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\r\n * of values.\r\n */\r\nvar nativeObjectToString = objectProto.toString;\r\n\r\n/**\r\n * Creates an object composed of the inverted keys and values of `object`.\r\n * If `object` contains duplicate values, subsequent values overwrite\r\n * property assignments of previous values.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.7.0\r\n * @category Object\r\n * @param {Object} object The object to invert.\r\n * @returns {Object} Returns the new inverted object.\r\n * @example\r\n *\r\n * var object = { 'a': 1, 'b': 2, 'c': 1 };\r\n *\r\n * _.invert(object);\r\n * // => { '1': 'c', '2': 'b' }\r\n */\r\nvar invert = createInverter(function(result, value, key) {\r\n  if (value != null &&\r\n      typeof value.toString != 'function') {\r\n    value = nativeObjectToString.call(value);\r\n  }\r\n\r\n  result[value] = key;\r\n}, constant(identity));\r\n\r\nexport default invert;\r\n","import baseIteratee from './_baseIteratee.js';\r\nimport createInverter from './_createInverter.js';\r\n\r\n/** Used for built-in method references. */\r\nvar objectProto = Object.prototype;\r\n\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n/**\r\n * Used to resolve the\r\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\r\n * of values.\r\n */\r\nvar nativeObjectToString = objectProto.toString;\r\n\r\n/**\r\n * This method is like `_.invert` except that the inverted object is generated\r\n * from the results of running each element of `object` thru `iteratee`. The\r\n * corresponding inverted value of each inverted key is an array of keys\r\n * responsible for generating the inverted value. The iteratee is invoked\r\n * with one argument: (value).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.1.0\r\n * @category Object\r\n * @param {Object} object The object to invert.\r\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\r\n * @returns {Object} Returns the new inverted object.\r\n * @example\r\n *\r\n * var object = { 'a': 1, 'b': 2, 'c': 1 };\r\n *\r\n * _.invertBy(object);\r\n * // => { '1': ['a', 'c'], '2': ['b'] }\r\n *\r\n * _.invertBy(object, function(value) {\r\n *   return 'group' + value;\r\n * });\r\n * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\r\n */\r\nvar invertBy = createInverter(function(result, value, key) {\r\n  if (value != null &&\r\n      typeof value.toString != 'function') {\r\n    value = nativeObjectToString.call(value);\r\n  }\r\n\r\n  if (hasOwnProperty.call(result, value)) {\r\n    result[value].push(key);\r\n  } else {\r\n    result[value] = [key];\r\n  }\r\n}, baseIteratee);\r\n\r\nexport default invertBy;\r\n","import baseInvoke from './_baseInvoke.js';\r\nimport baseRest from './_baseRest.js';\r\n\r\n/**\r\n * Invokes the method at `path` of `object`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Object\r\n * @param {Object} object The object to query.\r\n * @param {Array|string} path The path of the method to invoke.\r\n * @param {...*} [args] The arguments to invoke the method with.\r\n * @returns {*} Returns the result of the invoked method.\r\n * @example\r\n *\r\n * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\r\n *\r\n * _.invoke(object, 'a[0].b.c.slice', 1, 3);\r\n * // => [2, 3]\r\n */\r\nvar invoke = baseRest(baseInvoke);\r\n\r\nexport default invoke;\r\n","import apply from './_apply.js';\r\nimport baseEach from './_baseEach.js';\r\nimport baseInvoke from './_baseInvoke.js';\r\nimport baseRest from './_baseRest.js';\r\nimport isArrayLike from './isArrayLike.js';\r\n\r\n/**\r\n * Invokes the method at `path` of each element in `collection`, returning\r\n * an array of the results of each invoked method. Any additional arguments\r\n * are provided to each invoked method. If `path` is a function, it's invoked\r\n * for, and `this` bound to, each element in `collection`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Array|Function|string} path The path of the method to invoke or\r\n *  the function invoked per iteration.\r\n * @param {...*} [args] The arguments to invoke each method with.\r\n * @returns {Array} Returns the array of results.\r\n * @example\r\n *\r\n * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\r\n * // => [[1, 5, 7], [1, 2, 3]]\r\n *\r\n * _.invokeMap([123, 456], String.prototype.split, '');\r\n * // => [['1', '2', '3'], ['4', '5', '6']]\r\n */\r\nvar invokeMap = baseRest(function(collection, path, args) {\r\n  var index = -1,\r\n      isFunc = typeof path == 'function',\r\n      result = isArrayLike(collection) ? Array(collection.length) : [];\r\n\r\n  baseEach(collection, function(value) {\r\n    result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\r\n  });\r\n  return result;\r\n});\r\n\r\nexport default invokeMap;\r\n","import baseIsArguments from './_baseIsArguments.js';\r\nimport isObjectLike from './isObjectLike.js';\r\n\r\n/** Used for built-in method references. */\r\nvar objectProto = Object.prototype;\r\n\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n/** Built-in value references. */\r\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\r\n\r\n/**\r\n * Checks if `value` is likely an `arguments` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\r\n *  else `false`.\r\n * @example\r\n *\r\n * _.isArguments(function() { return arguments; }());\r\n * // => true\r\n *\r\n * _.isArguments([1, 2, 3]);\r\n * // => false\r\n */\r\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\r\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\r\n    !propertyIsEnumerable.call(value, 'callee');\r\n};\r\n\r\nexport default isArguments;\r\n","/**\r\n * Checks if `value` is classified as an `Array` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\r\n * @example\r\n *\r\n * _.isArray([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isArray(document.body.children);\r\n * // => false\r\n *\r\n * _.isArray('abc');\r\n * // => false\r\n *\r\n * _.isArray(_.noop);\r\n * // => false\r\n */\r\nvar isArray = Array.isArray;\r\n\r\nexport default isArray;\r\n","import baseIsArrayBuffer from './_baseIsArrayBuffer.js';\r\nimport baseUnary from './_baseUnary.js';\r\nimport nodeUtil from './_nodeUtil.js';\r\n\r\n/* Node.js helper references. */\r\nvar nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer;\r\n\r\n/**\r\n * Checks if `value` is classified as an `ArrayBuffer` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.3.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\r\n * @example\r\n *\r\n * _.isArrayBuffer(new ArrayBuffer(2));\r\n * // => true\r\n *\r\n * _.isArrayBuffer(new Array(2));\r\n * // => false\r\n */\r\nvar isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\r\n\r\nexport default isArrayBuffer;\r\n","import isFunction from './isFunction.js';\r\nimport isLength from './isLength.js';\r\n\r\n/**\r\n * Checks if `value` is array-like. A value is considered array-like if it's\r\n * not a function and has a `value.length` that's an integer greater than or\r\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\r\n * @example\r\n *\r\n * _.isArrayLike([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isArrayLike(document.body.children);\r\n * // => true\r\n *\r\n * _.isArrayLike('abc');\r\n * // => true\r\n *\r\n * _.isArrayLike(_.noop);\r\n * // => false\r\n */\r\nfunction isArrayLike(value) {\r\n  return value != null && isLength(value.length) && !isFunction(value);\r\n}\r\n\r\nexport default isArrayLike;\r\n","import isArrayLike from './isArrayLike.js';\r\nimport isObjectLike from './isObjectLike.js';\r\n\r\n/**\r\n * This method is like `_.isArrayLike` except that it also checks if `value`\r\n * is an object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an array-like object,\r\n *  else `false`.\r\n * @example\r\n *\r\n * _.isArrayLikeObject([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isArrayLikeObject(document.body.children);\r\n * // => true\r\n *\r\n * _.isArrayLikeObject('abc');\r\n * // => false\r\n *\r\n * _.isArrayLikeObject(_.noop);\r\n * // => false\r\n */\r\nfunction isArrayLikeObject(value) {\r\n  return isObjectLike(value) && isArrayLike(value);\r\n}\r\n\r\nexport default isArrayLikeObject;\r\n","import baseGetTag from './_baseGetTag.js';\r\nimport isObjectLike from './isObjectLike.js';\r\n\r\n/** `Object#toString` result references. */\r\nvar boolTag = '[object Boolean]';\r\n\r\n/**\r\n * Checks if `value` is classified as a boolean primitive or object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\r\n * @example\r\n *\r\n * _.isBoolean(false);\r\n * // => true\r\n *\r\n * _.isBoolean(null);\r\n * // => false\r\n */\r\nfunction isBoolean(value) {\r\n  return value === true || value === false ||\r\n    (isObjectLike(value) && baseGetTag(value) == boolTag);\r\n}\r\n\r\nexport default isBoolean;\r\n","import root from './_root.js';\r\nimport stubFalse from './stubFalse.js';\r\n\r\n/** Detect free variable `exports`. */\r\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\r\n\r\n/** Detect free variable `module`. */\r\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\r\n\r\n/** Detect the popular CommonJS extension `module.exports`. */\r\nvar moduleExports = freeModule && freeModule.exports === freeExports;\r\n\r\n/** Built-in value references. */\r\nvar Buffer = moduleExports ? root.Buffer : undefined;\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\r\n\r\n/**\r\n * Checks if `value` is a buffer.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.3.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\r\n * @example\r\n *\r\n * _.isBuffer(new Buffer(2));\r\n * // => true\r\n *\r\n * _.isBuffer(new Uint8Array(2));\r\n * // => false\r\n */\r\nvar isBuffer = nativeIsBuffer || stubFalse;\r\n\r\nexport default isBuffer;\r\n","import baseIsDate from './_baseIsDate.js';\r\nimport baseUnary from './_baseUnary.js';\r\nimport nodeUtil from './_nodeUtil.js';\r\n\r\n/* Node.js helper references. */\r\nvar nodeIsDate = nodeUtil && nodeUtil.isDate;\r\n\r\n/**\r\n * Checks if `value` is classified as a `Date` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\r\n * @example\r\n *\r\n * _.isDate(new Date);\r\n * // => true\r\n *\r\n * _.isDate('Mon April 23 2012');\r\n * // => false\r\n */\r\nvar isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\r\n\r\nexport default isDate;\r\n","import isObjectLike from './isObjectLike.js';\r\nimport isPlainObject from './isPlainObject.js';\r\n\r\n/**\r\n * Checks if `value` is likely a DOM element.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\r\n * @example\r\n *\r\n * _.isElement(document.body);\r\n * // => true\r\n *\r\n * _.isElement('<body>');\r\n * // => false\r\n */\r\nfunction isElement(value) {\r\n  return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\r\n}\r\n\r\nexport default isElement;\r\n","import baseKeys from './_baseKeys.js';\r\nimport getTag from './_getTag.js';\r\nimport isArguments from './isArguments.js';\r\nimport isArray from './isArray.js';\r\nimport isArrayLike from './isArrayLike.js';\r\nimport isBuffer from './isBuffer.js';\r\nimport isPrototype from './_isPrototype.js';\r\nimport isTypedArray from './isTypedArray.js';\r\n\r\n/** `Object#toString` result references. */\r\nvar mapTag = '[object Map]',\r\n    setTag = '[object Set]';\r\n\r\n/** Used for built-in method references. */\r\nvar objectProto = Object.prototype;\r\n\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n/**\r\n * Checks if `value` is an empty object, collection, map, or set.\r\n *\r\n * Objects are considered empty if they have no own enumerable string keyed\r\n * properties.\r\n *\r\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\r\n * jQuery-like collections are considered empty if they have a `length` of `0`.\r\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\r\n * @example\r\n *\r\n * _.isEmpty(null);\r\n * // => true\r\n *\r\n * _.isEmpty(true);\r\n * // => true\r\n *\r\n * _.isEmpty(1);\r\n * // => true\r\n *\r\n * _.isEmpty([1, 2, 3]);\r\n * // => false\r\n *\r\n * _.isEmpty({ 'a': 1 });\r\n * // => false\r\n */\r\nfunction isEmpty(value) {\r\n  if (value == null) {\r\n    return true;\r\n  }\r\n  if (isArrayLike(value) &&\r\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\r\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\r\n    return !value.length;\r\n  }\r\n  var tag = getTag(value);\r\n  if (tag == mapTag || tag == setTag) {\r\n    return !value.size;\r\n  }\r\n  if (isPrototype(value)) {\r\n    return !baseKeys(value).length;\r\n  }\r\n  for (var key in value) {\r\n    if (hasOwnProperty.call(value, key)) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nexport default isEmpty;\r\n","import baseIsEqual from './_baseIsEqual.js';\r\n\r\n/**\r\n * Performs a deep comparison between two values to determine if they are\r\n * equivalent.\r\n *\r\n * **Note:** This method supports comparing arrays, array buffers, booleans,\r\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\r\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\r\n * by their own, not inherited, enumerable properties. Functions and DOM\r\n * nodes are compared by strict equality, i.e. `===`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to compare.\r\n * @param {*} other The other value to compare.\r\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\r\n * @example\r\n *\r\n * var object = { 'a': 1 };\r\n * var other = { 'a': 1 };\r\n *\r\n * _.isEqual(object, other);\r\n * // => true\r\n *\r\n * object === other;\r\n * // => false\r\n */\r\nfunction isEqual(value, other) {\r\n  return baseIsEqual(value, other);\r\n}\r\n\r\nexport default isEqual;\r\n","import baseIsEqual from './_baseIsEqual.js';\r\n\r\n/**\r\n * This method is like `_.isEqual` except that it accepts `customizer` which\r\n * is invoked to compare values. If `customizer` returns `undefined`, comparisons\r\n * are handled by the method instead. The `customizer` is invoked with up to\r\n * six arguments: (objValue, othValue [, index|key, object, other, stack]).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to compare.\r\n * @param {*} other The other value to compare.\r\n * @param {Function} [customizer] The function to customize comparisons.\r\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\r\n * @example\r\n *\r\n * function isGreeting(value) {\r\n *   return /^h(?:i|ello)$/.test(value);\r\n * }\r\n *\r\n * function customizer(objValue, othValue) {\r\n *   if (isGreeting(objValue) && isGreeting(othValue)) {\r\n *     return true;\r\n *   }\r\n * }\r\n *\r\n * var array = ['hello', 'goodbye'];\r\n * var other = ['hi', 'goodbye'];\r\n *\r\n * _.isEqualWith(array, other, customizer);\r\n * // => true\r\n */\r\nfunction isEqualWith(value, other, customizer) {\r\n  customizer = typeof customizer == 'function' ? customizer : undefined;\r\n  var result = customizer ? customizer(value, other) : undefined;\r\n  return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\r\n}\r\n\r\nexport default isEqualWith;\r\n","import baseGetTag from './_baseGetTag.js';\r\nimport isObjectLike from './isObjectLike.js';\r\nimport isPlainObject from './isPlainObject.js';\r\n\r\n/** `Object#toString` result references. */\r\nvar domExcTag = '[object DOMException]',\r\n    errorTag = '[object Error]';\r\n\r\n/**\r\n * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\r\n * `SyntaxError`, `TypeError`, or `URIError` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\r\n * @example\r\n *\r\n * _.isError(new Error);\r\n * // => true\r\n *\r\n * _.isError(Error);\r\n * // => false\r\n */\r\nfunction isError(value) {\r\n  if (!isObjectLike(value)) {\r\n    return false;\r\n  }\r\n  var tag = baseGetTag(value);\r\n  return tag == errorTag || tag == domExcTag ||\r\n    (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\r\n}\r\n\r\nexport default isError;\r\n","import root from './_root.js';\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeIsFinite = root.isFinite;\r\n\r\n/**\r\n * Checks if `value` is a finite primitive number.\r\n *\r\n * **Note:** This method is based on\r\n * [`Number.isFinite`](https://mdn.io/Number/isFinite).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\r\n * @example\r\n *\r\n * _.isFinite(3);\r\n * // => true\r\n *\r\n * _.isFinite(Number.MIN_VALUE);\r\n * // => true\r\n *\r\n * _.isFinite(Infinity);\r\n * // => false\r\n *\r\n * _.isFinite('3');\r\n * // => false\r\n */\r\nfunction isFinite(value) {\r\n  return typeof value == 'number' && nativeIsFinite(value);\r\n}\r\n\r\nexport default isFinite;\r\n","import baseGetTag from './_baseGetTag.js';\r\nimport isObject from './isObject.js';\r\n\r\n/** `Object#toString` result references. */\r\nvar asyncTag = '[object AsyncFunction]',\r\n    funcTag = '[object Function]',\r\n    genTag = '[object GeneratorFunction]',\r\n    proxyTag = '[object Proxy]';\r\n\r\n/**\r\n * Checks if `value` is classified as a `Function` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\r\n * @example\r\n *\r\n * _.isFunction(_);\r\n * // => true\r\n *\r\n * _.isFunction(/abc/);\r\n * // => false\r\n */\r\nfunction isFunction(value) {\r\n  if (!isObject(value)) {\r\n    return false;\r\n  }\r\n  // The use of `Object#toString` avoids issues with the `typeof` operator\r\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\r\n  var tag = baseGetTag(value);\r\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\r\n}\r\n\r\nexport default isFunction;\r\n","import toInteger from './toInteger.js';\r\n\r\n/**\r\n * Checks if `value` is an integer.\r\n *\r\n * **Note:** This method is based on\r\n * [`Number.isInteger`](https://mdn.io/Number/isInteger).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\r\n * @example\r\n *\r\n * _.isInteger(3);\r\n * // => true\r\n *\r\n * _.isInteger(Number.MIN_VALUE);\r\n * // => false\r\n *\r\n * _.isInteger(Infinity);\r\n * // => false\r\n *\r\n * _.isInteger('3');\r\n * // => false\r\n */\r\nfunction isInteger(value) {\r\n  return typeof value == 'number' && value == toInteger(value);\r\n}\r\n\r\nexport default isInteger;\r\n","/** Used as references for various `Number` constants. */\r\nvar MAX_SAFE_INTEGER = 9007199254740991;\r\n\r\n/**\r\n * Checks if `value` is a valid array-like length.\r\n *\r\n * **Note:** This method is loosely based on\r\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\r\n * @example\r\n *\r\n * _.isLength(3);\r\n * // => true\r\n *\r\n * _.isLength(Number.MIN_VALUE);\r\n * // => false\r\n *\r\n * _.isLength(Infinity);\r\n * // => false\r\n *\r\n * _.isLength('3');\r\n * // => false\r\n */\r\nfunction isLength(value) {\r\n  return typeof value == 'number' &&\r\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\r\n}\r\n\r\nexport default isLength;\r\n","import baseIsMap from './_baseIsMap.js';\r\nimport baseUnary from './_baseUnary.js';\r\nimport nodeUtil from './_nodeUtil.js';\r\n\r\n/* Node.js helper references. */\r\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\r\n\r\n/**\r\n * Checks if `value` is classified as a `Map` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.3.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\r\n * @example\r\n *\r\n * _.isMap(new Map);\r\n * // => true\r\n *\r\n * _.isMap(new WeakMap);\r\n * // => false\r\n */\r\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\r\n\r\nexport default isMap;\r\n","import baseIsMatch from './_baseIsMatch.js';\r\nimport getMatchData from './_getMatchData.js';\r\n\r\n/**\r\n * Performs a partial deep comparison between `object` and `source` to\r\n * determine if `object` contains equivalent property values.\r\n *\r\n * **Note:** This method is equivalent to `_.matches` when `source` is\r\n * partially applied.\r\n *\r\n * Partial comparisons will match empty array and empty object `source`\r\n * values against any array or object value, respectively. See `_.isEqual`\r\n * for a list of supported value comparisons.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Lang\r\n * @param {Object} object The object to inspect.\r\n * @param {Object} source The object of property values to match.\r\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\r\n * @example\r\n *\r\n * var object = { 'a': 1, 'b': 2 };\r\n *\r\n * _.isMatch(object, { 'b': 2 });\r\n * // => true\r\n *\r\n * _.isMatch(object, { 'b': 1 });\r\n * // => false\r\n */\r\nfunction isMatch(object, source) {\r\n  return object === source || baseIsMatch(object, source, getMatchData(source));\r\n}\r\n\r\nexport default isMatch;\r\n","import baseIsMatch from './_baseIsMatch.js';\r\nimport getMatchData from './_getMatchData.js';\r\n\r\n/**\r\n * This method is like `_.isMatch` except that it accepts `customizer` which\r\n * is invoked to compare values. If `customizer` returns `undefined`, comparisons\r\n * are handled by the method instead. The `customizer` is invoked with five\r\n * arguments: (objValue, srcValue, index|key, object, source).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {Object} object The object to inspect.\r\n * @param {Object} source The object of property values to match.\r\n * @param {Function} [customizer] The function to customize comparisons.\r\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\r\n * @example\r\n *\r\n * function isGreeting(value) {\r\n *   return /^h(?:i|ello)$/.test(value);\r\n * }\r\n *\r\n * function customizer(objValue, srcValue) {\r\n *   if (isGreeting(objValue) && isGreeting(srcValue)) {\r\n *     return true;\r\n *   }\r\n * }\r\n *\r\n * var object = { 'greeting': 'hello' };\r\n * var source = { 'greeting': 'hi' };\r\n *\r\n * _.isMatchWith(object, source, customizer);\r\n * // => true\r\n */\r\nfunction isMatchWith(object, source, customizer) {\r\n  customizer = typeof customizer == 'function' ? customizer : undefined;\r\n  return baseIsMatch(object, source, getMatchData(source), customizer);\r\n}\r\n\r\nexport default isMatchWith;\r\n","import isNumber from './isNumber.js';\r\n\r\n/**\r\n * Checks if `value` is `NaN`.\r\n *\r\n * **Note:** This method is based on\r\n * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\r\n * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\r\n * `undefined` and other non-number values.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\r\n * @example\r\n *\r\n * _.isNaN(NaN);\r\n * // => true\r\n *\r\n * _.isNaN(new Number(NaN));\r\n * // => true\r\n *\r\n * isNaN(undefined);\r\n * // => true\r\n *\r\n * _.isNaN(undefined);\r\n * // => false\r\n */\r\nfunction isNaN(value) {\r\n  // An `NaN` primitive is the only value that is not equal to itself.\r\n  // Perform the `toStringTag` check first to avoid errors with some\r\n  // ActiveX objects in IE.\r\n  return isNumber(value) && value != +value;\r\n}\r\n\r\nexport default isNaN;\r\n","import baseIsNative from './_baseIsNative.js';\r\nimport isMaskable from './_isMaskable.js';\r\n\r\n/** Error message constants. */\r\nvar CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.';\r\n\r\n/**\r\n * Checks if `value` is a pristine native function.\r\n *\r\n * **Note:** This method can't reliably detect native functions in the presence\r\n * of the core-js package because core-js circumvents this kind of detection.\r\n * Despite multiple requests, the core-js maintainer has made it clear: any\r\n * attempt to fix the detection will be obstructed. As a result, we're left\r\n * with little choice but to throw an error. Unfortunately, this also affects\r\n * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\r\n * which rely on core-js.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a native function,\r\n *  else `false`.\r\n * @example\r\n *\r\n * _.isNative(Array.prototype.push);\r\n * // => true\r\n *\r\n * _.isNative(_);\r\n * // => false\r\n */\r\nfunction isNative(value) {\r\n  if (isMaskable(value)) {\r\n    throw new Error(CORE_ERROR_TEXT);\r\n  }\r\n  return baseIsNative(value);\r\n}\r\n\r\nexport default isNative;\r\n","/**\r\n * Checks if `value` is `null` or `undefined`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\r\n * @example\r\n *\r\n * _.isNil(null);\r\n * // => true\r\n *\r\n * _.isNil(void 0);\r\n * // => true\r\n *\r\n * _.isNil(NaN);\r\n * // => false\r\n */\r\nfunction isNil(value) {\r\n  return value == null;\r\n}\r\n\r\nexport default isNil;\r\n","/**\r\n * Checks if `value` is `null`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\r\n * @example\r\n *\r\n * _.isNull(null);\r\n * // => true\r\n *\r\n * _.isNull(void 0);\r\n * // => false\r\n */\r\nfunction isNull(value) {\r\n  return value === null;\r\n}\r\n\r\nexport default isNull;\r\n","import baseGetTag from './_baseGetTag.js';\r\nimport isObjectLike from './isObjectLike.js';\r\n\r\n/** `Object#toString` result references. */\r\nvar numberTag = '[object Number]';\r\n\r\n/**\r\n * Checks if `value` is classified as a `Number` primitive or object.\r\n *\r\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\r\n * classified as numbers, use the `_.isFinite` method.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\r\n * @example\r\n *\r\n * _.isNumber(3);\r\n * // => true\r\n *\r\n * _.isNumber(Number.MIN_VALUE);\r\n * // => true\r\n *\r\n * _.isNumber(Infinity);\r\n * // => true\r\n *\r\n * _.isNumber('3');\r\n * // => false\r\n */\r\nfunction isNumber(value) {\r\n  return typeof value == 'number' ||\r\n    (isObjectLike(value) && baseGetTag(value) == numberTag);\r\n}\r\n\r\nexport default isNumber;\r\n","/**\r\n * Checks if `value` is the\r\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\r\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\r\n * @example\r\n *\r\n * _.isObject({});\r\n * // => true\r\n *\r\n * _.isObject([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isObject(_.noop);\r\n * // => true\r\n *\r\n * _.isObject(null);\r\n * // => false\r\n */\r\nfunction isObject(value) {\r\n  var type = typeof value;\r\n  return value != null && (type == 'object' || type == 'function');\r\n}\r\n\r\nexport default isObject;\r\n","/**\r\n * Checks if `value` is object-like. A value is object-like if it's not `null`\r\n * and has a `typeof` result of \"object\".\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\r\n * @example\r\n *\r\n * _.isObjectLike({});\r\n * // => true\r\n *\r\n * _.isObjectLike([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isObjectLike(_.noop);\r\n * // => false\r\n *\r\n * _.isObjectLike(null);\r\n * // => false\r\n */\r\nfunction isObjectLike(value) {\r\n  return value != null && typeof value == 'object';\r\n}\r\n\r\nexport default isObjectLike;\r\n","import baseGetTag from './_baseGetTag.js';\r\nimport getPrototype from './_getPrototype.js';\r\nimport isObjectLike from './isObjectLike.js';\r\n\r\n/** `Object#toString` result references. */\r\nvar objectTag = '[object Object]';\r\n\r\n/** Used for built-in method references. */\r\nvar funcProto = Function.prototype,\r\n    objectProto = Object.prototype;\r\n\r\n/** Used to resolve the decompiled source of functions. */\r\nvar funcToString = funcProto.toString;\r\n\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n/** Used to infer the `Object` constructor. */\r\nvar objectCtorString = funcToString.call(Object);\r\n\r\n/**\r\n * Checks if `value` is a plain object, that is, an object created by the\r\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.8.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\r\n * @example\r\n *\r\n * function Foo() {\r\n *   this.a = 1;\r\n * }\r\n *\r\n * _.isPlainObject(new Foo);\r\n * // => false\r\n *\r\n * _.isPlainObject([1, 2, 3]);\r\n * // => false\r\n *\r\n * _.isPlainObject({ 'x': 0, 'y': 0 });\r\n * // => true\r\n *\r\n * _.isPlainObject(Object.create(null));\r\n * // => true\r\n */\r\nfunction isPlainObject(value) {\r\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\r\n    return false;\r\n  }\r\n  var proto = getPrototype(value);\r\n  if (proto === null) {\r\n    return true;\r\n  }\r\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\r\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\r\n    funcToString.call(Ctor) == objectCtorString;\r\n}\r\n\r\nexport default isPlainObject;\r\n","import baseIsRegExp from './_baseIsRegExp.js';\r\nimport baseUnary from './_baseUnary.js';\r\nimport nodeUtil from './_nodeUtil.js';\r\n\r\n/* Node.js helper references. */\r\nvar nodeIsRegExp = nodeUtil && nodeUtil.isRegExp;\r\n\r\n/**\r\n * Checks if `value` is classified as a `RegExp` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\r\n * @example\r\n *\r\n * _.isRegExp(/abc/);\r\n * // => true\r\n *\r\n * _.isRegExp('/abc/');\r\n * // => false\r\n */\r\nvar isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\r\n\r\nexport default isRegExp;\r\n","import isInteger from './isInteger.js';\r\n\r\n/** Used as references for various `Number` constants. */\r\nvar MAX_SAFE_INTEGER = 9007199254740991;\r\n\r\n/**\r\n * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\r\n * double precision number which isn't the result of a rounded unsafe integer.\r\n *\r\n * **Note:** This method is based on\r\n * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\r\n * @example\r\n *\r\n * _.isSafeInteger(3);\r\n * // => true\r\n *\r\n * _.isSafeInteger(Number.MIN_VALUE);\r\n * // => false\r\n *\r\n * _.isSafeInteger(Infinity);\r\n * // => false\r\n *\r\n * _.isSafeInteger('3');\r\n * // => false\r\n */\r\nfunction isSafeInteger(value) {\r\n  return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\r\n}\r\n\r\nexport default isSafeInteger;\r\n","import baseIsSet from './_baseIsSet.js';\r\nimport baseUnary from './_baseUnary.js';\r\nimport nodeUtil from './_nodeUtil.js';\r\n\r\n/* Node.js helper references. */\r\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\r\n\r\n/**\r\n * Checks if `value` is classified as a `Set` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.3.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\r\n * @example\r\n *\r\n * _.isSet(new Set);\r\n * // => true\r\n *\r\n * _.isSet(new WeakSet);\r\n * // => false\r\n */\r\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\r\n\r\nexport default isSet;\r\n","import baseGetTag from './_baseGetTag.js';\r\nimport isArray from './isArray.js';\r\nimport isObjectLike from './isObjectLike.js';\r\n\r\n/** `Object#toString` result references. */\r\nvar stringTag = '[object String]';\r\n\r\n/**\r\n * Checks if `value` is classified as a `String` primitive or object.\r\n *\r\n * @static\r\n * @since 0.1.0\r\n * @memberOf _\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\r\n * @example\r\n *\r\n * _.isString('abc');\r\n * // => true\r\n *\r\n * _.isString(1);\r\n * // => false\r\n */\r\nfunction isString(value) {\r\n  return typeof value == 'string' ||\r\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\r\n}\r\n\r\nexport default isString;\r\n","import baseGetTag from './_baseGetTag.js';\r\nimport isObjectLike from './isObjectLike.js';\r\n\r\n/** `Object#toString` result references. */\r\nvar symbolTag = '[object Symbol]';\r\n\r\n/**\r\n * Checks if `value` is classified as a `Symbol` primitive or object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\r\n * @example\r\n *\r\n * _.isSymbol(Symbol.iterator);\r\n * // => true\r\n *\r\n * _.isSymbol('abc');\r\n * // => false\r\n */\r\nfunction isSymbol(value) {\r\n  return typeof value == 'symbol' ||\r\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\r\n}\r\n\r\nexport default isSymbol;\r\n","import baseIsTypedArray from './_baseIsTypedArray.js';\r\nimport baseUnary from './_baseUnary.js';\r\nimport nodeUtil from './_nodeUtil.js';\r\n\r\n/* Node.js helper references. */\r\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\r\n\r\n/**\r\n * Checks if `value` is classified as a typed array.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\r\n * @example\r\n *\r\n * _.isTypedArray(new Uint8Array);\r\n * // => true\r\n *\r\n * _.isTypedArray([]);\r\n * // => false\r\n */\r\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\r\n\r\nexport default isTypedArray;\r\n","/**\r\n * Checks if `value` is `undefined`.\r\n *\r\n * @static\r\n * @since 0.1.0\r\n * @memberOf _\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\r\n * @example\r\n *\r\n * _.isUndefined(void 0);\r\n * // => true\r\n *\r\n * _.isUndefined(null);\r\n * // => false\r\n */\r\nfunction isUndefined(value) {\r\n  return value === undefined;\r\n}\r\n\r\nexport default isUndefined;\r\n","import getTag from './_getTag.js';\r\nimport isObjectLike from './isObjectLike.js';\r\n\r\n/** `Object#toString` result references. */\r\nvar weakMapTag = '[object WeakMap]';\r\n\r\n/**\r\n * Checks if `value` is classified as a `WeakMap` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.3.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\r\n * @example\r\n *\r\n * _.isWeakMap(new WeakMap);\r\n * // => true\r\n *\r\n * _.isWeakMap(new Map);\r\n * // => false\r\n */\r\nfunction isWeakMap(value) {\r\n  return isObjectLike(value) && getTag(value) == weakMapTag;\r\n}\r\n\r\nexport default isWeakMap;\r\n","import baseGetTag from './_baseGetTag.js';\r\nimport isObjectLike from './isObjectLike.js';\r\n\r\n/** `Object#toString` result references. */\r\nvar weakSetTag = '[object WeakSet]';\r\n\r\n/**\r\n * Checks if `value` is classified as a `WeakSet` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.3.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\r\n * @example\r\n *\r\n * _.isWeakSet(new WeakSet);\r\n * // => true\r\n *\r\n * _.isWeakSet(new Set);\r\n * // => false\r\n */\r\nfunction isWeakSet(value) {\r\n  return isObjectLike(value) && baseGetTag(value) == weakSetTag;\r\n}\r\n\r\nexport default isWeakSet;\r\n","import baseClone from './_baseClone.js';\r\nimport baseIteratee from './_baseIteratee.js';\r\n\r\n/** Used to compose bitmasks for cloning. */\r\nvar CLONE_DEEP_FLAG = 1;\r\n\r\n/**\r\n * Creates a function that invokes `func` with the arguments of the created\r\n * function. If `func` is a property name, the created function returns the\r\n * property value for a given element. If `func` is an array or object, the\r\n * created function returns `true` for elements that contain the equivalent\r\n * source properties, otherwise it returns `false`.\r\n *\r\n * @static\r\n * @since 4.0.0\r\n * @memberOf _\r\n * @category Util\r\n * @param {*} [func=_.identity] The value to convert to a callback.\r\n * @returns {Function} Returns the callback.\r\n * @example\r\n *\r\n * var users = [\r\n *   { 'user': 'barney', 'age': 36, 'active': true },\r\n *   { 'user': 'fred',   'age': 40, 'active': false }\r\n * ];\r\n *\r\n * // The `_.matches` iteratee shorthand.\r\n * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\r\n * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\r\n *\r\n * // The `_.matchesProperty` iteratee shorthand.\r\n * _.filter(users, _.iteratee(['user', 'fred']));\r\n * // => [{ 'user': 'fred', 'age': 40 }]\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.map(users, _.iteratee('user'));\r\n * // => ['barney', 'fred']\r\n *\r\n * // Create custom iteratee shorthands.\r\n * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\r\n *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\r\n *     return func.test(string);\r\n *   };\r\n * });\r\n *\r\n * _.filter(['abc', 'def'], /ef/);\r\n * // => ['def']\r\n */\r\nfunction iteratee(func) {\r\n  return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\r\n}\r\n\r\nexport default iteratee;\r\n","/** Used for built-in method references. */\r\nvar arrayProto = Array.prototype;\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeJoin = arrayProto.join;\r\n\r\n/**\r\n * Converts all elements in `array` into a string separated by `separator`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Array\r\n * @param {Array} array The array to convert.\r\n * @param {string} [separator=','] The element separator.\r\n * @returns {string} Returns the joined string.\r\n * @example\r\n *\r\n * _.join(['a', 'b', 'c'], '~');\r\n * // => 'a~b~c'\r\n */\r\nfunction join(array, separator) {\r\n  return array == null ? '' : nativeJoin.call(array, separator);\r\n}\r\n\r\nexport default join;\r\n","import createCompounder from './_createCompounder.js';\r\n\r\n/**\r\n * Converts `string` to\r\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category String\r\n * @param {string} [string=''] The string to convert.\r\n * @returns {string} Returns the kebab cased string.\r\n * @example\r\n *\r\n * _.kebabCase('Foo Bar');\r\n * // => 'foo-bar'\r\n *\r\n * _.kebabCase('fooBar');\r\n * // => 'foo-bar'\r\n *\r\n * _.kebabCase('__FOO_BAR__');\r\n * // => 'foo-bar'\r\n */\r\nvar kebabCase = createCompounder(function(result, word, index) {\r\n  return result + (index ? '-' : '') + word.toLowerCase();\r\n});\r\n\r\nexport default kebabCase;\r\n","import baseAssignValue from './_baseAssignValue.js';\r\nimport createAggregator from './_createAggregator.js';\r\n\r\n/**\r\n * Creates an object composed of keys generated from the results of running\r\n * each element of `collection` thru `iteratee`. The corresponding value of\r\n * each key is the last element responsible for generating the key. The\r\n * iteratee is invoked with one argument: (value).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\r\n * @returns {Object} Returns the composed aggregate object.\r\n * @example\r\n *\r\n * var array = [\r\n *   { 'dir': 'left', 'code': 97 },\r\n *   { 'dir': 'right', 'code': 100 }\r\n * ];\r\n *\r\n * _.keyBy(array, function(o) {\r\n *   return String.fromCharCode(o.code);\r\n * });\r\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\r\n *\r\n * _.keyBy(array, 'dir');\r\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\r\n */\r\nvar keyBy = createAggregator(function(result, value, key) {\r\n  baseAssignValue(result, key, value);\r\n});\r\n\r\nexport default keyBy;\r\n","import arrayLikeKeys from './_arrayLikeKeys.js';\r\nimport baseKeys from './_baseKeys.js';\r\nimport isArrayLike from './isArrayLike.js';\r\n\r\n/**\r\n * Creates an array of the own enumerable property names of `object`.\r\n *\r\n * **Note:** Non-object values are coerced to objects. See the\r\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\r\n * for more details.\r\n *\r\n * @static\r\n * @since 0.1.0\r\n * @memberOf _\r\n * @category Object\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the array of property names.\r\n * @example\r\n *\r\n * function Foo() {\r\n *   this.a = 1;\r\n *   this.b = 2;\r\n * }\r\n *\r\n * Foo.prototype.c = 3;\r\n *\r\n * _.keys(new Foo);\r\n * // => ['a', 'b'] (iteration order is not guaranteed)\r\n *\r\n * _.keys('hi');\r\n * // => ['0', '1']\r\n */\r\nfunction keys(object) {\r\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\r\n}\r\n\r\nexport default keys;\r\n","import arrayLikeKeys from './_arrayLikeKeys.js';\r\nimport baseKeysIn from './_baseKeysIn.js';\r\nimport isArrayLike from './isArrayLike.js';\r\n\r\n/**\r\n * Creates an array of the own and inherited enumerable property names of `object`.\r\n *\r\n * **Note:** Non-object values are coerced to objects.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Object\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the array of property names.\r\n * @example\r\n *\r\n * function Foo() {\r\n *   this.a = 1;\r\n *   this.b = 2;\r\n * }\r\n *\r\n * Foo.prototype.c = 3;\r\n *\r\n * _.keysIn(new Foo);\r\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\r\n */\r\nfunction keysIn(object) {\r\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\r\n}\r\n\r\nexport default keysIn;\r\n","import castArray from './castArray.js';\r\nimport clone from './clone.js';\r\nimport cloneDeep from './cloneDeep.js';\r\nimport cloneDeepWith from './cloneDeepWith.js';\r\nimport cloneWith from './cloneWith.js';\r\nimport conformsTo from './conformsTo.js';\r\nimport eq from './eq.js';\r\nimport gt from './gt.js';\r\nimport gte from './gte.js';\r\nimport isArguments from './isArguments.js';\r\nimport isArray from './isArray.js';\r\nimport isArrayBuffer from './isArrayBuffer.js';\r\nimport isArrayLike from './isArrayLike.js';\r\nimport isArrayLikeObject from './isArrayLikeObject.js';\r\nimport isBoolean from './isBoolean.js';\r\nimport isBuffer from './isBuffer.js';\r\nimport isDate from './isDate.js';\r\nimport isElement from './isElement.js';\r\nimport isEmpty from './isEmpty.js';\r\nimport isEqual from './isEqual.js';\r\nimport isEqualWith from './isEqualWith.js';\r\nimport isError from './isError.js';\r\nimport isFinite from './isFinite.js';\r\nimport isFunction from './isFunction.js';\r\nimport isInteger from './isInteger.js';\r\nimport isLength from './isLength.js';\r\nimport isMap from './isMap.js';\r\nimport isMatch from './isMatch.js';\r\nimport isMatchWith from './isMatchWith.js';\r\nimport isNaN from './isNaN.js';\r\nimport isNative from './isNative.js';\r\nimport isNil from './isNil.js';\r\nimport isNull from './isNull.js';\r\nimport isNumber from './isNumber.js';\r\nimport isObject from './isObject.js';\r\nimport isObjectLike from './isObjectLike.js';\r\nimport isPlainObject from './isPlainObject.js';\r\nimport isRegExp from './isRegExp.js';\r\nimport isSafeInteger from './isSafeInteger.js';\r\nimport isSet from './isSet.js';\r\nimport isString from './isString.js';\r\nimport isSymbol from './isSymbol.js';\r\nimport isTypedArray from './isTypedArray.js';\r\nimport isUndefined from './isUndefined.js';\r\nimport isWeakMap from './isWeakMap.js';\r\nimport isWeakSet from './isWeakSet.js';\r\nimport lt from './lt.js';\r\nimport lte from './lte.js';\r\nimport toArray from './toArray.js';\r\nimport toFinite from './toFinite.js';\r\nimport toInteger from './toInteger.js';\r\nimport toLength from './toLength.js';\r\nimport toNumber from './toNumber.js';\r\nimport toPlainObject from './toPlainObject.js';\r\nimport toSafeInteger from './toSafeInteger.js';\r\nimport toString from './toString.js';\r\n\r\nexport default {\r\n  castArray, clone, cloneDeep, cloneDeepWith, cloneWith,\r\n  conformsTo, eq, gt, gte, isArguments,\r\n  isArray, isArrayBuffer, isArrayLike, isArrayLikeObject, isBoolean,\r\n  isBuffer, isDate, isElement, isEmpty, isEqual,\r\n  isEqualWith, isError, isFinite, isFunction, isInteger,\r\n  isLength, isMap, isMatch, isMatchWith, isNaN,\r\n  isNative, isNil, isNull, isNumber, isObject,\r\n  isObjectLike, isPlainObject, isRegExp, isSafeInteger, isSet,\r\n  isString, isSymbol, isTypedArray, isUndefined, isWeakMap,\r\n  isWeakSet, lt, lte, toArray, toFinite,\r\n  toInteger, toLength, toNumber, toPlainObject, toSafeInteger,\r\n  toString\r\n};\r\n","export { default as castArray } from './castArray.js';\r\nexport { default as clone } from './clone.js';\r\nexport { default as cloneDeep } from './cloneDeep.js';\r\nexport { default as cloneDeepWith } from './cloneDeepWith.js';\r\nexport { default as cloneWith } from './cloneWith.js';\r\nexport { default as conformsTo } from './conformsTo.js';\r\nexport { default as eq } from './eq.js';\r\nexport { default as gt } from './gt.js';\r\nexport { default as gte } from './gte.js';\r\nexport { default as isArguments } from './isArguments.js';\r\nexport { default as isArray } from './isArray.js';\r\nexport { default as isArrayBuffer } from './isArrayBuffer.js';\r\nexport { default as isArrayLike } from './isArrayLike.js';\r\nexport { default as isArrayLikeObject } from './isArrayLikeObject.js';\r\nexport { default as isBoolean } from './isBoolean.js';\r\nexport { default as isBuffer } from './isBuffer.js';\r\nexport { default as isDate } from './isDate.js';\r\nexport { default as isElement } from './isElement.js';\r\nexport { default as isEmpty } from './isEmpty.js';\r\nexport { default as isEqual } from './isEqual.js';\r\nexport { default as isEqualWith } from './isEqualWith.js';\r\nexport { default as isError } from './isError.js';\r\nexport { default as isFinite } from './isFinite.js';\r\nexport { default as isFunction } from './isFunction.js';\r\nexport { default as isInteger } from './isInteger.js';\r\nexport { default as isLength } from './isLength.js';\r\nexport { default as isMap } from './isMap.js';\r\nexport { default as isMatch } from './isMatch.js';\r\nexport { default as isMatchWith } from './isMatchWith.js';\r\nexport { default as isNaN } from './isNaN.js';\r\nexport { default as isNative } from './isNative.js';\r\nexport { default as isNil } from './isNil.js';\r\nexport { default as isNull } from './isNull.js';\r\nexport { default as isNumber } from './isNumber.js';\r\nexport { default as isObject } from './isObject.js';\r\nexport { default as isObjectLike } from './isObjectLike.js';\r\nexport { default as isPlainObject } from './isPlainObject.js';\r\nexport { default as isRegExp } from './isRegExp.js';\r\nexport { default as isSafeInteger } from './isSafeInteger.js';\r\nexport { default as isSet } from './isSet.js';\r\nexport { default as isString } from './isString.js';\r\nexport { default as isSymbol } from './isSymbol.js';\r\nexport { default as isTypedArray } from './isTypedArray.js';\r\nexport { default as isUndefined } from './isUndefined.js';\r\nexport { default as isWeakMap } from './isWeakMap.js';\r\nexport { default as isWeakSet } from './isWeakSet.js';\r\nexport { default as lt } from './lt.js';\r\nexport { default as lte } from './lte.js';\r\nexport { default as toArray } from './toArray.js';\r\nexport { default as toFinite } from './toFinite.js';\r\nexport { default as toInteger } from './toInteger.js';\r\nexport { default as toLength } from './toLength.js';\r\nexport { default as toNumber } from './toNumber.js';\r\nexport { default as toPlainObject } from './toPlainObject.js';\r\nexport { default as toSafeInteger } from './toSafeInteger.js';\r\nexport { default as toString } from './toString.js';\r\nexport { default } from './lang.default.js';\r\n","/**\r\n * Gets the last element of `array`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Array\r\n * @param {Array} array The array to query.\r\n * @returns {*} Returns the last element of `array`.\r\n * @example\r\n *\r\n * _.last([1, 2, 3]);\r\n * // => 3\r\n */\r\nfunction last(array) {\r\n  var length = array == null ? 0 : array.length;\r\n  return length ? array[length - 1] : undefined;\r\n}\r\n\r\nexport default last;\r\n","import baseFindIndex from './_baseFindIndex.js';\r\nimport baseIsNaN from './_baseIsNaN.js';\r\nimport strictLastIndexOf from './_strictLastIndexOf.js';\r\nimport toInteger from './toInteger.js';\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMax = Math.max,\r\n    nativeMin = Math.min;\r\n\r\n/**\r\n * This method is like `_.indexOf` except that it iterates over elements of\r\n * `array` from right to left.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Array\r\n * @param {Array} array The array to inspect.\r\n * @param {*} value The value to search for.\r\n * @param {number} [fromIndex=array.length-1] The index to search from.\r\n * @returns {number} Returns the index of the matched value, else `-1`.\r\n * @example\r\n *\r\n * _.lastIndexOf([1, 2, 1, 2], 2);\r\n * // => 3\r\n *\r\n * // Search from the `fromIndex`.\r\n * _.lastIndexOf([1, 2, 1, 2], 2, 2);\r\n * // => 1\r\n */\r\nfunction lastIndexOf(array, value, fromIndex) {\r\n  var length = array == null ? 0 : array.length;\r\n  if (!length) {\r\n    return -1;\r\n  }\r\n  var index = length;\r\n  if (fromIndex !== undefined) {\r\n    index = toInteger(fromIndex);\r\n    index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\r\n  }\r\n  return value === value\r\n    ? strictLastIndexOf(array, value, index)\r\n    : baseFindIndex(array, baseIsNaN, index, true);\r\n}\r\n\r\nexport default lastIndexOf;\r\n","/**\r\n * @license\r\n * Lodash (Custom Build) <https://lodash.com/>\r\n * Build: `lodash modularize exports=\"es\" -o ./`\r\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\r\n * Released under MIT license <https://lodash.com/license>\r\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\r\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\r\n */\r\nimport array from './array.js';\r\nimport collection from './collection.js';\r\nimport date from './date.js';\r\nimport func from './function.js';\r\nimport lang from './lang.js';\r\nimport math from './math.js';\r\nimport number from './number.js';\r\nimport object from './object.js';\r\nimport seq from './seq.js';\r\nimport string from './string.js';\r\nimport util from './util.js';\r\nimport LazyWrapper from './_LazyWrapper.js';\r\nimport LodashWrapper from './_LodashWrapper.js';\r\nimport Symbol from './_Symbol.js';\r\nimport arrayEach from './_arrayEach.js';\r\nimport arrayPush from './_arrayPush.js';\r\nimport baseForOwn from './_baseForOwn.js';\r\nimport baseFunctions from './_baseFunctions.js';\r\nimport baseInvoke from './_baseInvoke.js';\r\nimport baseIteratee from './_baseIteratee.js';\r\nimport baseRest from './_baseRest.js';\r\nimport createHybrid from './_createHybrid.js';\r\nimport identity from './identity.js';\r\nimport isArray from './isArray.js';\r\nimport isObject from './isObject.js';\r\nimport keys from './keys.js';\r\nimport last from './last.js';\r\nimport lazyClone from './_lazyClone.js';\r\nimport lazyReverse from './_lazyReverse.js';\r\nimport lazyValue from './_lazyValue.js';\r\nimport _mixin from './mixin.js';\r\nimport negate from './negate.js';\r\nimport realNames from './_realNames.js';\r\nimport thru from './thru.js';\r\nimport toInteger from './toInteger.js';\r\nimport lodash from './wrapperLodash.js';\r\n\r\n/** Used as the semantic version number. */\r\nvar VERSION = '4.17.15';\r\n\r\n/** Used to compose bitmasks for function metadata. */\r\nvar WRAP_BIND_KEY_FLAG = 2;\r\n\r\n/** Used to indicate the type of lazy iteratees. */\r\nvar LAZY_FILTER_FLAG = 1,\r\n    LAZY_WHILE_FLAG = 3;\r\n\r\n/** Used as references for the maximum length and index of an array. */\r\nvar MAX_ARRAY_LENGTH = 4294967295;\r\n\r\n/** Used for built-in method references. */\r\nvar arrayProto = Array.prototype,\r\n    objectProto = Object.prototype;\r\n\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n/** Built-in value references. */\r\nvar symIterator = Symbol ? Symbol.iterator : undefined;\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMax = Math.max,\r\n    nativeMin = Math.min;\r\n\r\n// wrap `_.mixin` so it works when provided only one argument\r\nvar mixin = (function(func) {\r\n  return function(object, source, options) {\r\n    if (options == null) {\r\n      var isObj = isObject(source),\r\n          props = isObj && keys(source),\r\n          methodNames = props && props.length && baseFunctions(source, props);\r\n\r\n      if (!(methodNames ? methodNames.length : isObj)) {\r\n        options = source;\r\n        source = object;\r\n        object = this;\r\n      }\r\n    }\r\n    return func(object, source, options);\r\n  };\r\n}(_mixin));\r\n\r\n// Add methods that return wrapped values in chain sequences.\r\nlodash.after = func.after;\r\nlodash.ary = func.ary;\r\nlodash.assign = object.assign;\r\nlodash.assignIn = object.assignIn;\r\nlodash.assignInWith = object.assignInWith;\r\nlodash.assignWith = object.assignWith;\r\nlodash.at = object.at;\r\nlodash.before = func.before;\r\nlodash.bind = func.bind;\r\nlodash.bindAll = util.bindAll;\r\nlodash.bindKey = func.bindKey;\r\nlodash.castArray = lang.castArray;\r\nlodash.chain = seq.chain;\r\nlodash.chunk = array.chunk;\r\nlodash.compact = array.compact;\r\nlodash.concat = array.concat;\r\nlodash.cond = util.cond;\r\nlodash.conforms = util.conforms;\r\nlodash.constant = util.constant;\r\nlodash.countBy = collection.countBy;\r\nlodash.create = object.create;\r\nlodash.curry = func.curry;\r\nlodash.curryRight = func.curryRight;\r\nlodash.debounce = func.debounce;\r\nlodash.defaults = object.defaults;\r\nlodash.defaultsDeep = object.defaultsDeep;\r\nlodash.defer = func.defer;\r\nlodash.delay = func.delay;\r\nlodash.difference = array.difference;\r\nlodash.differenceBy = array.differenceBy;\r\nlodash.differenceWith = array.differenceWith;\r\nlodash.drop = array.drop;\r\nlodash.dropRight = array.dropRight;\r\nlodash.dropRightWhile = array.dropRightWhile;\r\nlodash.dropWhile = array.dropWhile;\r\nlodash.fill = array.fill;\r\nlodash.filter = collection.filter;\r\nlodash.flatMap = collection.flatMap;\r\nlodash.flatMapDeep = collection.flatMapDeep;\r\nlodash.flatMapDepth = collection.flatMapDepth;\r\nlodash.flatten = array.flatten;\r\nlodash.flattenDeep = array.flattenDeep;\r\nlodash.flattenDepth = array.flattenDepth;\r\nlodash.flip = func.flip;\r\nlodash.flow = util.flow;\r\nlodash.flowRight = util.flowRight;\r\nlodash.fromPairs = array.fromPairs;\r\nlodash.functions = object.functions;\r\nlodash.functionsIn = object.functionsIn;\r\nlodash.groupBy = collection.groupBy;\r\nlodash.initial = array.initial;\r\nlodash.intersection = array.intersection;\r\nlodash.intersectionBy = array.intersectionBy;\r\nlodash.intersectionWith = array.intersectionWith;\r\nlodash.invert = object.invert;\r\nlodash.invertBy = object.invertBy;\r\nlodash.invokeMap = collection.invokeMap;\r\nlodash.iteratee = util.iteratee;\r\nlodash.keyBy = collection.keyBy;\r\nlodash.keys = keys;\r\nlodash.keysIn = object.keysIn;\r\nlodash.map = collection.map;\r\nlodash.mapKeys = object.mapKeys;\r\nlodash.mapValues = object.mapValues;\r\nlodash.matches = util.matches;\r\nlodash.matchesProperty = util.matchesProperty;\r\nlodash.memoize = func.memoize;\r\nlodash.merge = object.merge;\r\nlodash.mergeWith = object.mergeWith;\r\nlodash.method = util.method;\r\nlodash.methodOf = util.methodOf;\r\nlodash.mixin = mixin;\r\nlodash.negate = negate;\r\nlodash.nthArg = util.nthArg;\r\nlodash.omit = object.omit;\r\nlodash.omitBy = object.omitBy;\r\nlodash.once = func.once;\r\nlodash.orderBy = collection.orderBy;\r\nlodash.over = util.over;\r\nlodash.overArgs = func.overArgs;\r\nlodash.overEvery = util.overEvery;\r\nlodash.overSome = util.overSome;\r\nlodash.partial = func.partial;\r\nlodash.partialRight = func.partialRight;\r\nlodash.partition = collection.partition;\r\nlodash.pick = object.pick;\r\nlodash.pickBy = object.pickBy;\r\nlodash.property = util.property;\r\nlodash.propertyOf = util.propertyOf;\r\nlodash.pull = array.pull;\r\nlodash.pullAll = array.pullAll;\r\nlodash.pullAllBy = array.pullAllBy;\r\nlodash.pullAllWith = array.pullAllWith;\r\nlodash.pullAt = array.pullAt;\r\nlodash.range = util.range;\r\nlodash.rangeRight = util.rangeRight;\r\nlodash.rearg = func.rearg;\r\nlodash.reject = collection.reject;\r\nlodash.remove = array.remove;\r\nlodash.rest = func.rest;\r\nlodash.reverse = array.reverse;\r\nlodash.sampleSize = collection.sampleSize;\r\nlodash.set = object.set;\r\nlodash.setWith = object.setWith;\r\nlodash.shuffle = collection.shuffle;\r\nlodash.slice = array.slice;\r\nlodash.sortBy = collection.sortBy;\r\nlodash.sortedUniq = array.sortedUniq;\r\nlodash.sortedUniqBy = array.sortedUniqBy;\r\nlodash.split = string.split;\r\nlodash.spread = func.spread;\r\nlodash.tail = array.tail;\r\nlodash.take = array.take;\r\nlodash.takeRight = array.takeRight;\r\nlodash.takeRightWhile = array.takeRightWhile;\r\nlodash.takeWhile = array.takeWhile;\r\nlodash.tap = seq.tap;\r\nlodash.throttle = func.throttle;\r\nlodash.thru = thru;\r\nlodash.toArray = lang.toArray;\r\nlodash.toPairs = object.toPairs;\r\nlodash.toPairsIn = object.toPairsIn;\r\nlodash.toPath = util.toPath;\r\nlodash.toPlainObject = lang.toPlainObject;\r\nlodash.transform = object.transform;\r\nlodash.unary = func.unary;\r\nlodash.union = array.union;\r\nlodash.unionBy = array.unionBy;\r\nlodash.unionWith = array.unionWith;\r\nlodash.uniq = array.uniq;\r\nlodash.uniqBy = array.uniqBy;\r\nlodash.uniqWith = array.uniqWith;\r\nlodash.unset = object.unset;\r\nlodash.unzip = array.unzip;\r\nlodash.unzipWith = array.unzipWith;\r\nlodash.update = object.update;\r\nlodash.updateWith = object.updateWith;\r\nlodash.values = object.values;\r\nlodash.valuesIn = object.valuesIn;\r\nlodash.without = array.without;\r\nlodash.words = string.words;\r\nlodash.wrap = func.wrap;\r\nlodash.xor = array.xor;\r\nlodash.xorBy = array.xorBy;\r\nlodash.xorWith = array.xorWith;\r\nlodash.zip = array.zip;\r\nlodash.zipObject = array.zipObject;\r\nlodash.zipObjectDeep = array.zipObjectDeep;\r\nlodash.zipWith = array.zipWith;\r\n\r\n// Add aliases.\r\nlodash.entries = object.toPairs;\r\nlodash.entriesIn = object.toPairsIn;\r\nlodash.extend = object.assignIn;\r\nlodash.extendWith = object.assignInWith;\r\n\r\n// Add methods to `lodash.prototype`.\r\nmixin(lodash, lodash);\r\n\r\n// Add methods that return unwrapped values in chain sequences.\r\nlodash.add = math.add;\r\nlodash.attempt = util.attempt;\r\nlodash.camelCase = string.camelCase;\r\nlodash.capitalize = string.capitalize;\r\nlodash.ceil = math.ceil;\r\nlodash.clamp = number.clamp;\r\nlodash.clone = lang.clone;\r\nlodash.cloneDeep = lang.cloneDeep;\r\nlodash.cloneDeepWith = lang.cloneDeepWith;\r\nlodash.cloneWith = lang.cloneWith;\r\nlodash.conformsTo = lang.conformsTo;\r\nlodash.deburr = string.deburr;\r\nlodash.defaultTo = util.defaultTo;\r\nlodash.divide = math.divide;\r\nlodash.endsWith = string.endsWith;\r\nlodash.eq = lang.eq;\r\nlodash.escape = string.escape;\r\nlodash.escapeRegExp = string.escapeRegExp;\r\nlodash.every = collection.every;\r\nlodash.find = collection.find;\r\nlodash.findIndex = array.findIndex;\r\nlodash.findKey = object.findKey;\r\nlodash.findLast = collection.findLast;\r\nlodash.findLastIndex = array.findLastIndex;\r\nlodash.findLastKey = object.findLastKey;\r\nlodash.floor = math.floor;\r\nlodash.forEach = collection.forEach;\r\nlodash.forEachRight = collection.forEachRight;\r\nlodash.forIn = object.forIn;\r\nlodash.forInRight = object.forInRight;\r\nlodash.forOwn = object.forOwn;\r\nlodash.forOwnRight = object.forOwnRight;\r\nlodash.get = object.get;\r\nlodash.gt = lang.gt;\r\nlodash.gte = lang.gte;\r\nlodash.has = object.has;\r\nlodash.hasIn = object.hasIn;\r\nlodash.head = array.head;\r\nlodash.identity = identity;\r\nlodash.includes = collection.includes;\r\nlodash.indexOf = array.indexOf;\r\nlodash.inRange = number.inRange;\r\nlodash.invoke = object.invoke;\r\nlodash.isArguments = lang.isArguments;\r\nlodash.isArray = isArray;\r\nlodash.isArrayBuffer = lang.isArrayBuffer;\r\nlodash.isArrayLike = lang.isArrayLike;\r\nlodash.isArrayLikeObject = lang.isArrayLikeObject;\r\nlodash.isBoolean = lang.isBoolean;\r\nlodash.isBuffer = lang.isBuffer;\r\nlodash.isDate = lang.isDate;\r\nlodash.isElement = lang.isElement;\r\nlodash.isEmpty = lang.isEmpty;\r\nlodash.isEqual = lang.isEqual;\r\nlodash.isEqualWith = lang.isEqualWith;\r\nlodash.isError = lang.isError;\r\nlodash.isFinite = lang.isFinite;\r\nlodash.isFunction = lang.isFunction;\r\nlodash.isInteger = lang.isInteger;\r\nlodash.isLength = lang.isLength;\r\nlodash.isMap = lang.isMap;\r\nlodash.isMatch = lang.isMatch;\r\nlodash.isMatchWith = lang.isMatchWith;\r\nlodash.isNaN = lang.isNaN;\r\nlodash.isNative = lang.isNative;\r\nlodash.isNil = lang.isNil;\r\nlodash.isNull = lang.isNull;\r\nlodash.isNumber = lang.isNumber;\r\nlodash.isObject = isObject;\r\nlodash.isObjectLike = lang.isObjectLike;\r\nlodash.isPlainObject = lang.isPlainObject;\r\nlodash.isRegExp = lang.isRegExp;\r\nlodash.isSafeInteger = lang.isSafeInteger;\r\nlodash.isSet = lang.isSet;\r\nlodash.isString = lang.isString;\r\nlodash.isSymbol = lang.isSymbol;\r\nlodash.isTypedArray = lang.isTypedArray;\r\nlodash.isUndefined = lang.isUndefined;\r\nlodash.isWeakMap = lang.isWeakMap;\r\nlodash.isWeakSet = lang.isWeakSet;\r\nlodash.join = array.join;\r\nlodash.kebabCase = string.kebabCase;\r\nlodash.last = last;\r\nlodash.lastIndexOf = array.lastIndexOf;\r\nlodash.lowerCase = string.lowerCase;\r\nlodash.lowerFirst = string.lowerFirst;\r\nlodash.lt = lang.lt;\r\nlodash.lte = lang.lte;\r\nlodash.max = math.max;\r\nlodash.maxBy = math.maxBy;\r\nlodash.mean = math.mean;\r\nlodash.meanBy = math.meanBy;\r\nlodash.min = math.min;\r\nlodash.minBy = math.minBy;\r\nlodash.stubArray = util.stubArray;\r\nlodash.stubFalse = util.stubFalse;\r\nlodash.stubObject = util.stubObject;\r\nlodash.stubString = util.stubString;\r\nlodash.stubTrue = util.stubTrue;\r\nlodash.multiply = math.multiply;\r\nlodash.nth = array.nth;\r\nlodash.noop = util.noop;\r\nlodash.now = date.now;\r\nlodash.pad = string.pad;\r\nlodash.padEnd = string.padEnd;\r\nlodash.padStart = string.padStart;\r\nlodash.parseInt = string.parseInt;\r\nlodash.random = number.random;\r\nlodash.reduce = collection.reduce;\r\nlodash.reduceRight = collection.reduceRight;\r\nlodash.repeat = string.repeat;\r\nlodash.replace = string.replace;\r\nlodash.result = object.result;\r\nlodash.round = math.round;\r\nlodash.sample = collection.sample;\r\nlodash.size = collection.size;\r\nlodash.snakeCase = string.snakeCase;\r\nlodash.some = collection.some;\r\nlodash.sortedIndex = array.sortedIndex;\r\nlodash.sortedIndexBy = array.sortedIndexBy;\r\nlodash.sortedIndexOf = array.sortedIndexOf;\r\nlodash.sortedLastIndex = array.sortedLastIndex;\r\nlodash.sortedLastIndexBy = array.sortedLastIndexBy;\r\nlodash.sortedLastIndexOf = array.sortedLastIndexOf;\r\nlodash.startCase = string.startCase;\r\nlodash.startsWith = string.startsWith;\r\nlodash.subtract = math.subtract;\r\nlodash.sum = math.sum;\r\nlodash.sumBy = math.sumBy;\r\nlodash.template = string.template;\r\nlodash.times = util.times;\r\nlodash.toFinite = lang.toFinite;\r\nlodash.toInteger = toInteger;\r\nlodash.toLength = lang.toLength;\r\nlodash.toLower = string.toLower;\r\nlodash.toNumber = lang.toNumber;\r\nlodash.toSafeInteger = lang.toSafeInteger;\r\nlodash.toString = lang.toString;\r\nlodash.toUpper = string.toUpper;\r\nlodash.trim = string.trim;\r\nlodash.trimEnd = string.trimEnd;\r\nlodash.trimStart = string.trimStart;\r\nlodash.truncate = string.truncate;\r\nlodash.unescape = string.unescape;\r\nlodash.uniqueId = util.uniqueId;\r\nlodash.upperCase = string.upperCase;\r\nlodash.upperFirst = string.upperFirst;\r\n\r\n// Add aliases.\r\nlodash.each = collection.forEach;\r\nlodash.eachRight = collection.forEachRight;\r\nlodash.first = array.head;\r\n\r\nmixin(lodash, (function() {\r\n  var source = {};\r\n  baseForOwn(lodash, function(func, methodName) {\r\n    if (!hasOwnProperty.call(lodash.prototype, methodName)) {\r\n      source[methodName] = func;\r\n    }\r\n  });\r\n  return source;\r\n}()), { 'chain': false });\r\n\r\n/**\r\n * The semantic version number.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @type {string}\r\n */\r\nlodash.VERSION = VERSION;\r\n(lodash.templateSettings = string.templateSettings).imports._ = lodash;\r\n\r\n// Assign default placeholders.\r\narrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\r\n  lodash[methodName].placeholder = lodash;\r\n});\r\n\r\n// Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\r\narrayEach(['drop', 'take'], function(methodName, index) {\r\n  LazyWrapper.prototype[methodName] = function(n) {\r\n    n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\r\n\r\n    var result = (this.__filtered__ && !index)\r\n      ? new LazyWrapper(this)\r\n      : this.clone();\r\n\r\n    if (result.__filtered__) {\r\n      result.__takeCount__ = nativeMin(n, result.__takeCount__);\r\n    } else {\r\n      result.__views__.push({\r\n        'size': nativeMin(n, MAX_ARRAY_LENGTH),\r\n        'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\r\n      });\r\n    }\r\n    return result;\r\n  };\r\n\r\n  LazyWrapper.prototype[methodName + 'Right'] = function(n) {\r\n    return this.reverse()[methodName](n).reverse();\r\n  };\r\n});\r\n\r\n// Add `LazyWrapper` methods that accept an `iteratee` value.\r\narrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\r\n  var type = index + 1,\r\n      isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\r\n\r\n  LazyWrapper.prototype[methodName] = function(iteratee) {\r\n    var result = this.clone();\r\n    result.__iteratees__.push({\r\n      'iteratee': baseIteratee(iteratee, 3),\r\n      'type': type\r\n    });\r\n    result.__filtered__ = result.__filtered__ || isFilter;\r\n    return result;\r\n  };\r\n});\r\n\r\n// Add `LazyWrapper` methods for `_.head` and `_.last`.\r\narrayEach(['head', 'last'], function(methodName, index) {\r\n  var takeName = 'take' + (index ? 'Right' : '');\r\n\r\n  LazyWrapper.prototype[methodName] = function() {\r\n    return this[takeName](1).value()[0];\r\n  };\r\n});\r\n\r\n// Add `LazyWrapper` methods for `_.initial` and `_.tail`.\r\narrayEach(['initial', 'tail'], function(methodName, index) {\r\n  var dropName = 'drop' + (index ? '' : 'Right');\r\n\r\n  LazyWrapper.prototype[methodName] = function() {\r\n    return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\r\n  };\r\n});\r\n\r\nLazyWrapper.prototype.compact = function() {\r\n  return this.filter(identity);\r\n};\r\n\r\nLazyWrapper.prototype.find = function(predicate) {\r\n  return this.filter(predicate).head();\r\n};\r\n\r\nLazyWrapper.prototype.findLast = function(predicate) {\r\n  return this.reverse().find(predicate);\r\n};\r\n\r\nLazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\r\n  if (typeof path == 'function') {\r\n    return new LazyWrapper(this);\r\n  }\r\n  return this.map(function(value) {\r\n    return baseInvoke(value, path, args);\r\n  });\r\n});\r\n\r\nLazyWrapper.prototype.reject = function(predicate) {\r\n  return this.filter(negate(baseIteratee(predicate)));\r\n};\r\n\r\nLazyWrapper.prototype.slice = function(start, end) {\r\n  start = toInteger(start);\r\n\r\n  var result = this;\r\n  if (result.__filtered__ && (start > 0 || end < 0)) {\r\n    return new LazyWrapper(result);\r\n  }\r\n  if (start < 0) {\r\n    result = result.takeRight(-start);\r\n  } else if (start) {\r\n    result = result.drop(start);\r\n  }\r\n  if (end !== undefined) {\r\n    end = toInteger(end);\r\n    result = end < 0 ? result.dropRight(-end) : result.take(end - start);\r\n  }\r\n  return result;\r\n};\r\n\r\nLazyWrapper.prototype.takeRightWhile = function(predicate) {\r\n  return this.reverse().takeWhile(predicate).reverse();\r\n};\r\n\r\nLazyWrapper.prototype.toArray = function() {\r\n  return this.take(MAX_ARRAY_LENGTH);\r\n};\r\n\r\n// Add `LazyWrapper` methods to `lodash.prototype`.\r\nbaseForOwn(LazyWrapper.prototype, function(func, methodName) {\r\n  var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\r\n      isTaker = /^(?:head|last)$/.test(methodName),\r\n      lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\r\n      retUnwrapped = isTaker || /^find/.test(methodName);\r\n\r\n  if (!lodashFunc) {\r\n    return;\r\n  }\r\n  lodash.prototype[methodName] = function() {\r\n    var value = this.__wrapped__,\r\n        args = isTaker ? [1] : arguments,\r\n        isLazy = value instanceof LazyWrapper,\r\n        iteratee = args[0],\r\n        useLazy = isLazy || isArray(value);\r\n\r\n    var interceptor = function(value) {\r\n      var result = lodashFunc.apply(lodash, arrayPush([value], args));\r\n      return (isTaker && chainAll) ? result[0] : result;\r\n    };\r\n\r\n    if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\r\n      // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\r\n      isLazy = useLazy = false;\r\n    }\r\n    var chainAll = this.__chain__,\r\n        isHybrid = !!this.__actions__.length,\r\n        isUnwrapped = retUnwrapped && !chainAll,\r\n        onlyLazy = isLazy && !isHybrid;\r\n\r\n    if (!retUnwrapped && useLazy) {\r\n      value = onlyLazy ? value : new LazyWrapper(this);\r\n      var result = func.apply(value, args);\r\n      result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\r\n      return new LodashWrapper(result, chainAll);\r\n    }\r\n    if (isUnwrapped && onlyLazy) {\r\n      return func.apply(this, args);\r\n    }\r\n    result = this.thru(interceptor);\r\n    return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\r\n  };\r\n});\r\n\r\n// Add `Array` methods to `lodash.prototype`.\r\narrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\r\n  var func = arrayProto[methodName],\r\n      chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\r\n      retUnwrapped = /^(?:pop|shift)$/.test(methodName);\r\n\r\n  lodash.prototype[methodName] = function() {\r\n    var args = arguments;\r\n    if (retUnwrapped && !this.__chain__) {\r\n      var value = this.value();\r\n      return func.apply(isArray(value) ? value : [], args);\r\n    }\r\n    return this[chainName](function(value) {\r\n      return func.apply(isArray(value) ? value : [], args);\r\n    });\r\n  };\r\n});\r\n\r\n// Map minified method names to their real names.\r\nbaseForOwn(LazyWrapper.prototype, function(func, methodName) {\r\n  var lodashFunc = lodash[methodName];\r\n  if (lodashFunc) {\r\n    var key = lodashFunc.name + '';\r\n    if (!hasOwnProperty.call(realNames, key)) {\r\n      realNames[key] = [];\r\n    }\r\n    realNames[key].push({ 'name': methodName, 'func': lodashFunc });\r\n  }\r\n});\r\n\r\nrealNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\r\n  'name': 'wrapper',\r\n  'func': undefined\r\n}];\r\n\r\n// Add methods to `LazyWrapper`.\r\nLazyWrapper.prototype.clone = lazyClone;\r\nLazyWrapper.prototype.reverse = lazyReverse;\r\nLazyWrapper.prototype.value = lazyValue;\r\n\r\n// Add chain sequence methods to the `lodash` wrapper.\r\nlodash.prototype.at = seq.at;\r\nlodash.prototype.chain = seq.wrapperChain;\r\nlodash.prototype.commit = seq.commit;\r\nlodash.prototype.next = seq.next;\r\nlodash.prototype.plant = seq.plant;\r\nlodash.prototype.reverse = seq.reverse;\r\nlodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = seq.value;\r\n\r\n// Add lazy aliases.\r\nlodash.prototype.first = lodash.prototype.head;\r\n\r\nif (symIterator) {\r\n  lodash.prototype[symIterator] = seq.toIterator;\r\n}\r\n\r\nexport default lodash;\r\n","/**\r\n * @license\r\n * Lodash (Custom Build) <https://lodash.com/>\r\n * Build: `lodash modularize exports=\"es\" -o ./`\r\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\r\n * Released under MIT license <https://lodash.com/license>\r\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\r\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\r\n */\r\nexport { default as add } from './add.js';\r\nexport { default as after } from './after.js';\r\nexport { default as ary } from './ary.js';\r\nexport { default as assign } from './assign.js';\r\nexport { default as assignIn } from './assignIn.js';\r\nexport { default as assignInWith } from './assignInWith.js';\r\nexport { default as assignWith } from './assignWith.js';\r\nexport { default as at } from './at.js';\r\nexport { default as attempt } from './attempt.js';\r\nexport { default as before } from './before.js';\r\nexport { default as bind } from './bind.js';\r\nexport { default as bindAll } from './bindAll.js';\r\nexport { default as bindKey } from './bindKey.js';\r\nexport { default as camelCase } from './camelCase.js';\r\nexport { default as capitalize } from './capitalize.js';\r\nexport { default as castArray } from './castArray.js';\r\nexport { default as ceil } from './ceil.js';\r\nexport { default as chain } from './chain.js';\r\nexport { default as chunk } from './chunk.js';\r\nexport { default as clamp } from './clamp.js';\r\nexport { default as clone } from './clone.js';\r\nexport { default as cloneDeep } from './cloneDeep.js';\r\nexport { default as cloneDeepWith } from './cloneDeepWith.js';\r\nexport { default as cloneWith } from './cloneWith.js';\r\nexport { default as commit } from './commit.js';\r\nexport { default as compact } from './compact.js';\r\nexport { default as concat } from './concat.js';\r\nexport { default as cond } from './cond.js';\r\nexport { default as conforms } from './conforms.js';\r\nexport { default as conformsTo } from './conformsTo.js';\r\nexport { default as constant } from './constant.js';\r\nexport { default as countBy } from './countBy.js';\r\nexport { default as create } from './create.js';\r\nexport { default as curry } from './curry.js';\r\nexport { default as curryRight } from './curryRight.js';\r\nexport { default as debounce } from './debounce.js';\r\nexport { default as deburr } from './deburr.js';\r\nexport { default as defaultTo } from './defaultTo.js';\r\nexport { default as defaults } from './defaults.js';\r\nexport { default as defaultsDeep } from './defaultsDeep.js';\r\nexport { default as defer } from './defer.js';\r\nexport { default as delay } from './delay.js';\r\nexport { default as difference } from './difference.js';\r\nexport { default as differenceBy } from './differenceBy.js';\r\nexport { default as differenceWith } from './differenceWith.js';\r\nexport { default as divide } from './divide.js';\r\nexport { default as drop } from './drop.js';\r\nexport { default as dropRight } from './dropRight.js';\r\nexport { default as dropRightWhile } from './dropRightWhile.js';\r\nexport { default as dropWhile } from './dropWhile.js';\r\nexport { default as each } from './each.js';\r\nexport { default as eachRight } from './eachRight.js';\r\nexport { default as endsWith } from './endsWith.js';\r\nexport { default as entries } from './entries.js';\r\nexport { default as entriesIn } from './entriesIn.js';\r\nexport { default as eq } from './eq.js';\r\nexport { default as escape } from './escape.js';\r\nexport { default as escapeRegExp } from './escapeRegExp.js';\r\nexport { default as every } from './every.js';\r\nexport { default as extend } from './extend.js';\r\nexport { default as extendWith } from './extendWith.js';\r\nexport { default as fill } from './fill.js';\r\nexport { default as filter } from './filter.js';\r\nexport { default as find } from './find.js';\r\nexport { default as findIndex } from './findIndex.js';\r\nexport { default as findKey } from './findKey.js';\r\nexport { default as findLast } from './findLast.js';\r\nexport { default as findLastIndex } from './findLastIndex.js';\r\nexport { default as findLastKey } from './findLastKey.js';\r\nexport { default as first } from './first.js';\r\nexport { default as flatMap } from './flatMap.js';\r\nexport { default as flatMapDeep } from './flatMapDeep.js';\r\nexport { default as flatMapDepth } from './flatMapDepth.js';\r\nexport { default as flatten } from './flatten.js';\r\nexport { default as flattenDeep } from './flattenDeep.js';\r\nexport { default as flattenDepth } from './flattenDepth.js';\r\nexport { default as flip } from './flip.js';\r\nexport { default as floor } from './floor.js';\r\nexport { default as flow } from './flow.js';\r\nexport { default as flowRight } from './flowRight.js';\r\nexport { default as forEach } from './forEach.js';\r\nexport { default as forEachRight } from './forEachRight.js';\r\nexport { default as forIn } from './forIn.js';\r\nexport { default as forInRight } from './forInRight.js';\r\nexport { default as forOwn } from './forOwn.js';\r\nexport { default as forOwnRight } from './forOwnRight.js';\r\nexport { default as fromPairs } from './fromPairs.js';\r\nexport { default as functions } from './functions.js';\r\nexport { default as functionsIn } from './functionsIn.js';\r\nexport { default as get } from './get.js';\r\nexport { default as groupBy } from './groupBy.js';\r\nexport { default as gt } from './gt.js';\r\nexport { default as gte } from './gte.js';\r\nexport { default as has } from './has.js';\r\nexport { default as hasIn } from './hasIn.js';\r\nexport { default as head } from './head.js';\r\nexport { default as identity } from './identity.js';\r\nexport { default as inRange } from './inRange.js';\r\nexport { default as includes } from './includes.js';\r\nexport { default as indexOf } from './indexOf.js';\r\nexport { default as initial } from './initial.js';\r\nexport { default as intersection } from './intersection.js';\r\nexport { default as intersectionBy } from './intersectionBy.js';\r\nexport { default as intersectionWith } from './intersectionWith.js';\r\nexport { default as invert } from './invert.js';\r\nexport { default as invertBy } from './invertBy.js';\r\nexport { default as invoke } from './invoke.js';\r\nexport { default as invokeMap } from './invokeMap.js';\r\nexport { default as isArguments } from './isArguments.js';\r\nexport { default as isArray } from './isArray.js';\r\nexport { default as isArrayBuffer } from './isArrayBuffer.js';\r\nexport { default as isArrayLike } from './isArrayLike.js';\r\nexport { default as isArrayLikeObject } from './isArrayLikeObject.js';\r\nexport { default as isBoolean } from './isBoolean.js';\r\nexport { default as isBuffer } from './isBuffer.js';\r\nexport { default as isDate } from './isDate.js';\r\nexport { default as isElement } from './isElement.js';\r\nexport { default as isEmpty } from './isEmpty.js';\r\nexport { default as isEqual } from './isEqual.js';\r\nexport { default as isEqualWith } from './isEqualWith.js';\r\nexport { default as isError } from './isError.js';\r\nexport { default as isFinite } from './isFinite.js';\r\nexport { default as isFunction } from './isFunction.js';\r\nexport { default as isInteger } from './isInteger.js';\r\nexport { default as isLength } from './isLength.js';\r\nexport { default as isMap } from './isMap.js';\r\nexport { default as isMatch } from './isMatch.js';\r\nexport { default as isMatchWith } from './isMatchWith.js';\r\nexport { default as isNaN } from './isNaN.js';\r\nexport { default as isNative } from './isNative.js';\r\nexport { default as isNil } from './isNil.js';\r\nexport { default as isNull } from './isNull.js';\r\nexport { default as isNumber } from './isNumber.js';\r\nexport { default as isObject } from './isObject.js';\r\nexport { default as isObjectLike } from './isObjectLike.js';\r\nexport { default as isPlainObject } from './isPlainObject.js';\r\nexport { default as isRegExp } from './isRegExp.js';\r\nexport { default as isSafeInteger } from './isSafeInteger.js';\r\nexport { default as isSet } from './isSet.js';\r\nexport { default as isString } from './isString.js';\r\nexport { default as isSymbol } from './isSymbol.js';\r\nexport { default as isTypedArray } from './isTypedArray.js';\r\nexport { default as isUndefined } from './isUndefined.js';\r\nexport { default as isWeakMap } from './isWeakMap.js';\r\nexport { default as isWeakSet } from './isWeakSet.js';\r\nexport { default as iteratee } from './iteratee.js';\r\nexport { default as join } from './join.js';\r\nexport { default as kebabCase } from './kebabCase.js';\r\nexport { default as keyBy } from './keyBy.js';\r\nexport { default as keys } from './keys.js';\r\nexport { default as keysIn } from './keysIn.js';\r\nexport { default as last } from './last.js';\r\nexport { default as lastIndexOf } from './lastIndexOf.js';\r\nexport { default as lodash } from './wrapperLodash.js';\r\nexport { default as lowerCase } from './lowerCase.js';\r\nexport { default as lowerFirst } from './lowerFirst.js';\r\nexport { default as lt } from './lt.js';\r\nexport { default as lte } from './lte.js';\r\nexport { default as map } from './map.js';\r\nexport { default as mapKeys } from './mapKeys.js';\r\nexport { default as mapValues } from './mapValues.js';\r\nexport { default as matches } from './matches.js';\r\nexport { default as matchesProperty } from './matchesProperty.js';\r\nexport { default as max } from './max.js';\r\nexport { default as maxBy } from './maxBy.js';\r\nexport { default as mean } from './mean.js';\r\nexport { default as meanBy } from './meanBy.js';\r\nexport { default as memoize } from './memoize.js';\r\nexport { default as merge } from './merge.js';\r\nexport { default as mergeWith } from './mergeWith.js';\r\nexport { default as method } from './method.js';\r\nexport { default as methodOf } from './methodOf.js';\r\nexport { default as min } from './min.js';\r\nexport { default as minBy } from './minBy.js';\r\nexport { default as mixin } from './mixin.js';\r\nexport { default as multiply } from './multiply.js';\r\nexport { default as negate } from './negate.js';\r\nexport { default as next } from './next.js';\r\nexport { default as noop } from './noop.js';\r\nexport { default as now } from './now.js';\r\nexport { default as nth } from './nth.js';\r\nexport { default as nthArg } from './nthArg.js';\r\nexport { default as omit } from './omit.js';\r\nexport { default as omitBy } from './omitBy.js';\r\nexport { default as once } from './once.js';\r\nexport { default as orderBy } from './orderBy.js';\r\nexport { default as over } from './over.js';\r\nexport { default as overArgs } from './overArgs.js';\r\nexport { default as overEvery } from './overEvery.js';\r\nexport { default as overSome } from './overSome.js';\r\nexport { default as pad } from './pad.js';\r\nexport { default as padEnd } from './padEnd.js';\r\nexport { default as padStart } from './padStart.js';\r\nexport { default as parseInt } from './parseInt.js';\r\nexport { default as partial } from './partial.js';\r\nexport { default as partialRight } from './partialRight.js';\r\nexport { default as partition } from './partition.js';\r\nexport { default as pick } from './pick.js';\r\nexport { default as pickBy } from './pickBy.js';\r\nexport { default as plant } from './plant.js';\r\nexport { default as property } from './property.js';\r\nexport { default as propertyOf } from './propertyOf.js';\r\nexport { default as pull } from './pull.js';\r\nexport { default as pullAll } from './pullAll.js';\r\nexport { default as pullAllBy } from './pullAllBy.js';\r\nexport { default as pullAllWith } from './pullAllWith.js';\r\nexport { default as pullAt } from './pullAt.js';\r\nexport { default as random } from './random.js';\r\nexport { default as range } from './range.js';\r\nexport { default as rangeRight } from './rangeRight.js';\r\nexport { default as rearg } from './rearg.js';\r\nexport { default as reduce } from './reduce.js';\r\nexport { default as reduceRight } from './reduceRight.js';\r\nexport { default as reject } from './reject.js';\r\nexport { default as remove } from './remove.js';\r\nexport { default as repeat } from './repeat.js';\r\nexport { default as replace } from './replace.js';\r\nexport { default as rest } from './rest.js';\r\nexport { default as result } from './result.js';\r\nexport { default as reverse } from './reverse.js';\r\nexport { default as round } from './round.js';\r\nexport { default as sample } from './sample.js';\r\nexport { default as sampleSize } from './sampleSize.js';\r\nexport { default as set } from './set.js';\r\nexport { default as setWith } from './setWith.js';\r\nexport { default as shuffle } from './shuffle.js';\r\nexport { default as size } from './size.js';\r\nexport { default as slice } from './slice.js';\r\nexport { default as snakeCase } from './snakeCase.js';\r\nexport { default as some } from './some.js';\r\nexport { default as sortBy } from './sortBy.js';\r\nexport { default as sortedIndex } from './sortedIndex.js';\r\nexport { default as sortedIndexBy } from './sortedIndexBy.js';\r\nexport { default as sortedIndexOf } from './sortedIndexOf.js';\r\nexport { default as sortedLastIndex } from './sortedLastIndex.js';\r\nexport { default as sortedLastIndexBy } from './sortedLastIndexBy.js';\r\nexport { default as sortedLastIndexOf } from './sortedLastIndexOf.js';\r\nexport { default as sortedUniq } from './sortedUniq.js';\r\nexport { default as sortedUniqBy } from './sortedUniqBy.js';\r\nexport { default as split } from './split.js';\r\nexport { default as spread } from './spread.js';\r\nexport { default as startCase } from './startCase.js';\r\nexport { default as startsWith } from './startsWith.js';\r\nexport { default as stubArray } from './stubArray.js';\r\nexport { default as stubFalse } from './stubFalse.js';\r\nexport { default as stubObject } from './stubObject.js';\r\nexport { default as stubString } from './stubString.js';\r\nexport { default as stubTrue } from './stubTrue.js';\r\nexport { default as subtract } from './subtract.js';\r\nexport { default as sum } from './sum.js';\r\nexport { default as sumBy } from './sumBy.js';\r\nexport { default as tail } from './tail.js';\r\nexport { default as take } from './take.js';\r\nexport { default as takeRight } from './takeRight.js';\r\nexport { default as takeRightWhile } from './takeRightWhile.js';\r\nexport { default as takeWhile } from './takeWhile.js';\r\nexport { default as tap } from './tap.js';\r\nexport { default as template } from './template.js';\r\nexport { default as templateSettings } from './templateSettings.js';\r\nexport { default as throttle } from './throttle.js';\r\nexport { default as thru } from './thru.js';\r\nexport { default as times } from './times.js';\r\nexport { default as toArray } from './toArray.js';\r\nexport { default as toFinite } from './toFinite.js';\r\nexport { default as toInteger } from './toInteger.js';\r\nexport { default as toIterator } from './toIterator.js';\r\nexport { default as toJSON } from './toJSON.js';\r\nexport { default as toLength } from './toLength.js';\r\nexport { default as toLower } from './toLower.js';\r\nexport { default as toNumber } from './toNumber.js';\r\nexport { default as toPairs } from './toPairs.js';\r\nexport { default as toPairsIn } from './toPairsIn.js';\r\nexport { default as toPath } from './toPath.js';\r\nexport { default as toPlainObject } from './toPlainObject.js';\r\nexport { default as toSafeInteger } from './toSafeInteger.js';\r\nexport { default as toString } from './toString.js';\r\nexport { default as toUpper } from './toUpper.js';\r\nexport { default as transform } from './transform.js';\r\nexport { default as trim } from './trim.js';\r\nexport { default as trimEnd } from './trimEnd.js';\r\nexport { default as trimStart } from './trimStart.js';\r\nexport { default as truncate } from './truncate.js';\r\nexport { default as unary } from './unary.js';\r\nexport { default as unescape } from './unescape.js';\r\nexport { default as union } from './union.js';\r\nexport { default as unionBy } from './unionBy.js';\r\nexport { default as unionWith } from './unionWith.js';\r\nexport { default as uniq } from './uniq.js';\r\nexport { default as uniqBy } from './uniqBy.js';\r\nexport { default as uniqWith } from './uniqWith.js';\r\nexport { default as uniqueId } from './uniqueId.js';\r\nexport { default as unset } from './unset.js';\r\nexport { default as unzip } from './unzip.js';\r\nexport { default as unzipWith } from './unzipWith.js';\r\nexport { default as update } from './update.js';\r\nexport { default as updateWith } from './updateWith.js';\r\nexport { default as upperCase } from './upperCase.js';\r\nexport { default as upperFirst } from './upperFirst.js';\r\nexport { default as value } from './value.js';\r\nexport { default as valueOf } from './valueOf.js';\r\nexport { default as values } from './values.js';\r\nexport { default as valuesIn } from './valuesIn.js';\r\nexport { default as without } from './without.js';\r\nexport { default as words } from './words.js';\r\nexport { default as wrap } from './wrap.js';\r\nexport { default as wrapperAt } from './wrapperAt.js';\r\nexport { default as wrapperChain } from './wrapperChain.js';\r\nexport { default as wrapperCommit } from './commit.js';\r\nexport { default as wrapperLodash } from './wrapperLodash.js';\r\nexport { default as wrapperNext } from './next.js';\r\nexport { default as wrapperPlant } from './plant.js';\r\nexport { default as wrapperReverse } from './wrapperReverse.js';\r\nexport { default as wrapperToIterator } from './toIterator.js';\r\nexport { default as wrapperValue } from './wrapperValue.js';\r\nexport { default as xor } from './xor.js';\r\nexport { default as xorBy } from './xorBy.js';\r\nexport { default as xorWith } from './xorWith.js';\r\nexport { default as zip } from './zip.js';\r\nexport { default as zipObject } from './zipObject.js';\r\nexport { default as zipObjectDeep } from './zipObjectDeep.js';\r\nexport { default as zipWith } from './zipWith.js';\r\nexport { default } from './lodash.default.js';\r\n","import createCompounder from './_createCompounder.js';\r\n\r\n/**\r\n * Converts `string`, as space separated words, to lower case.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category String\r\n * @param {string} [string=''] The string to convert.\r\n * @returns {string} Returns the lower cased string.\r\n * @example\r\n *\r\n * _.lowerCase('--Foo-Bar--');\r\n * // => 'foo bar'\r\n *\r\n * _.lowerCase('fooBar');\r\n * // => 'foo bar'\r\n *\r\n * _.lowerCase('__FOO_BAR__');\r\n * // => 'foo bar'\r\n */\r\nvar lowerCase = createCompounder(function(result, word, index) {\r\n  return result + (index ? ' ' : '') + word.toLowerCase();\r\n});\r\n\r\nexport default lowerCase;\r\n","import createCaseFirst from './_createCaseFirst.js';\r\n\r\n/**\r\n * Converts the first character of `string` to lower case.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category String\r\n * @param {string} [string=''] The string to convert.\r\n * @returns {string} Returns the converted string.\r\n * @example\r\n *\r\n * _.lowerFirst('Fred');\r\n * // => 'fred'\r\n *\r\n * _.lowerFirst('FRED');\r\n * // => 'fRED'\r\n */\r\nvar lowerFirst = createCaseFirst('toLowerCase');\r\n\r\nexport default lowerFirst;\r\n","import baseLt from './_baseLt.js';\r\nimport createRelationalOperation from './_createRelationalOperation.js';\r\n\r\n/**\r\n * Checks if `value` is less than `other`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.9.0\r\n * @category Lang\r\n * @param {*} value The value to compare.\r\n * @param {*} other The other value to compare.\r\n * @returns {boolean} Returns `true` if `value` is less than `other`,\r\n *  else `false`.\r\n * @see _.gt\r\n * @example\r\n *\r\n * _.lt(1, 3);\r\n * // => true\r\n *\r\n * _.lt(3, 3);\r\n * // => false\r\n *\r\n * _.lt(3, 1);\r\n * // => false\r\n */\r\nvar lt = createRelationalOperation(baseLt);\r\n\r\nexport default lt;\r\n","import createRelationalOperation from './_createRelationalOperation.js';\r\n\r\n/**\r\n * Checks if `value` is less than or equal to `other`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.9.0\r\n * @category Lang\r\n * @param {*} value The value to compare.\r\n * @param {*} other The other value to compare.\r\n * @returns {boolean} Returns `true` if `value` is less than or equal to\r\n *  `other`, else `false`.\r\n * @see _.gte\r\n * @example\r\n *\r\n * _.lte(1, 3);\r\n * // => true\r\n *\r\n * _.lte(3, 3);\r\n * // => true\r\n *\r\n * _.lte(3, 1);\r\n * // => false\r\n */\r\nvar lte = createRelationalOperation(function(value, other) {\r\n  return value <= other;\r\n});\r\n\r\nexport default lte;\r\n","import arrayMap from './_arrayMap.js';\r\nimport baseIteratee from './_baseIteratee.js';\r\nimport baseMap from './_baseMap.js';\r\nimport isArray from './isArray.js';\r\n\r\n/**\r\n * Creates an array of values by running each element in `collection` thru\r\n * `iteratee`. The iteratee is invoked with three arguments:\r\n * (value, index|key, collection).\r\n *\r\n * Many lodash methods are guarded to work as iteratees for methods like\r\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\r\n *\r\n * The guarded methods are:\r\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\r\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\r\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\r\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\r\n * @returns {Array} Returns the new mapped array.\r\n * @example\r\n *\r\n * function square(n) {\r\n *   return n * n;\r\n * }\r\n *\r\n * _.map([4, 8], square);\r\n * // => [16, 64]\r\n *\r\n * _.map({ 'a': 4, 'b': 8 }, square);\r\n * // => [16, 64] (iteration order is not guaranteed)\r\n *\r\n * var users = [\r\n *   { 'user': 'barney' },\r\n *   { 'user': 'fred' }\r\n * ];\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.map(users, 'user');\r\n * // => ['barney', 'fred']\r\n */\r\nfunction map(collection, iteratee) {\r\n  var func = isArray(collection) ? arrayMap : baseMap;\r\n  return func(collection, baseIteratee(iteratee, 3));\r\n}\r\n\r\nexport default map;\r\n","import baseAssignValue from './_baseAssignValue.js';\r\nimport baseForOwn from './_baseForOwn.js';\r\nimport baseIteratee from './_baseIteratee.js';\r\n\r\n/**\r\n * The opposite of `_.mapValues`; this method creates an object with the\r\n * same values as `object` and keys generated by running each own enumerable\r\n * string keyed property of `object` thru `iteratee`. The iteratee is invoked\r\n * with three arguments: (value, key, object).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.8.0\r\n * @category Object\r\n * @param {Object} object The object to iterate over.\r\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\r\n * @returns {Object} Returns the new mapped object.\r\n * @see _.mapValues\r\n * @example\r\n *\r\n * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\r\n *   return key + value;\r\n * });\r\n * // => { 'a1': 1, 'b2': 2 }\r\n */\r\nfunction mapKeys(object, iteratee) {\r\n  var result = {};\r\n  iteratee = baseIteratee(iteratee, 3);\r\n\r\n  baseForOwn(object, function(value, key, object) {\r\n    baseAssignValue(result, iteratee(value, key, object), value);\r\n  });\r\n  return result;\r\n}\r\n\r\nexport default mapKeys;\r\n","import baseAssignValue from './_baseAssignValue.js';\r\nimport baseForOwn from './_baseForOwn.js';\r\nimport baseIteratee from './_baseIteratee.js';\r\n\r\n/**\r\n * Creates an object with the same keys as `object` and values generated\r\n * by running each own enumerable string keyed property of `object` thru\r\n * `iteratee`. The iteratee is invoked with three arguments:\r\n * (value, key, object).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 2.4.0\r\n * @category Object\r\n * @param {Object} object The object to iterate over.\r\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\r\n * @returns {Object} Returns the new mapped object.\r\n * @see _.mapKeys\r\n * @example\r\n *\r\n * var users = {\r\n *   'fred':    { 'user': 'fred',    'age': 40 },\r\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\r\n * };\r\n *\r\n * _.mapValues(users, function(o) { return o.age; });\r\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.mapValues(users, 'age');\r\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\r\n */\r\nfunction mapValues(object, iteratee) {\r\n  var result = {};\r\n  iteratee = baseIteratee(iteratee, 3);\r\n\r\n  baseForOwn(object, function(value, key, object) {\r\n    baseAssignValue(result, key, iteratee(value, key, object));\r\n  });\r\n  return result;\r\n}\r\n\r\nexport default mapValues;\r\n","import baseClone from './_baseClone.js';\r\nimport baseMatches from './_baseMatches.js';\r\n\r\n/** Used to compose bitmasks for cloning. */\r\nvar CLONE_DEEP_FLAG = 1;\r\n\r\n/**\r\n * Creates a function that performs a partial deep comparison between a given\r\n * object and `source`, returning `true` if the given object has equivalent\r\n * property values, else `false`.\r\n *\r\n * **Note:** The created function is equivalent to `_.isMatch` with `source`\r\n * partially applied.\r\n *\r\n * Partial comparisons will match empty array and empty object `source`\r\n * values against any array or object value, respectively. See `_.isEqual`\r\n * for a list of supported value comparisons.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Util\r\n * @param {Object} source The object of property values to match.\r\n * @returns {Function} Returns the new spec function.\r\n * @example\r\n *\r\n * var objects = [\r\n *   { 'a': 1, 'b': 2, 'c': 3 },\r\n *   { 'a': 4, 'b': 5, 'c': 6 }\r\n * ];\r\n *\r\n * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\r\n * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\r\n */\r\nfunction matches(source) {\r\n  return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\r\n}\r\n\r\nexport default matches;\r\n","import baseClone from './_baseClone.js';\r\nimport baseMatchesProperty from './_baseMatchesProperty.js';\r\n\r\n/** Used to compose bitmasks for cloning. */\r\nvar CLONE_DEEP_FLAG = 1;\r\n\r\n/**\r\n * Creates a function that performs a partial deep comparison between the\r\n * value at `path` of a given object to `srcValue`, returning `true` if the\r\n * object value is equivalent, else `false`.\r\n *\r\n * **Note:** Partial comparisons will match empty array and empty object\r\n * `srcValue` values against any array or object value, respectively. See\r\n * `_.isEqual` for a list of supported value comparisons.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.2.0\r\n * @category Util\r\n * @param {Array|string} path The path of the property to get.\r\n * @param {*} srcValue The value to match.\r\n * @returns {Function} Returns the new spec function.\r\n * @example\r\n *\r\n * var objects = [\r\n *   { 'a': 1, 'b': 2, 'c': 3 },\r\n *   { 'a': 4, 'b': 5, 'c': 6 }\r\n * ];\r\n *\r\n * _.find(objects, _.matchesProperty('a', 4));\r\n * // => { 'a': 4, 'b': 5, 'c': 6 }\r\n */\r\nfunction matchesProperty(path, srcValue) {\r\n  return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\r\n}\r\n\r\nexport default matchesProperty;\r\n","import add from './add.js';\r\nimport ceil from './ceil.js';\r\nimport divide from './divide.js';\r\nimport floor from './floor.js';\r\nimport max from './max.js';\r\nimport maxBy from './maxBy.js';\r\nimport mean from './mean.js';\r\nimport meanBy from './meanBy.js';\r\nimport min from './min.js';\r\nimport minBy from './minBy.js';\r\nimport multiply from './multiply.js';\r\nimport round from './round.js';\r\nimport subtract from './subtract.js';\r\nimport sum from './sum.js';\r\nimport sumBy from './sumBy.js';\r\n\r\nexport default {\r\n  add, ceil, divide, floor, max,\r\n  maxBy, mean, meanBy, min, minBy,\r\n  multiply, round, subtract, sum, sumBy\r\n};\r\n","export { default as add } from './add.js';\r\nexport { default as ceil } from './ceil.js';\r\nexport { default as divide } from './divide.js';\r\nexport { default as floor } from './floor.js';\r\nexport { default as max } from './max.js';\r\nexport { default as maxBy } from './maxBy.js';\r\nexport { default as mean } from './mean.js';\r\nexport { default as meanBy } from './meanBy.js';\r\nexport { default as min } from './min.js';\r\nexport { default as minBy } from './minBy.js';\r\nexport { default as multiply } from './multiply.js';\r\nexport { default as round } from './round.js';\r\nexport { default as subtract } from './subtract.js';\r\nexport { default as sum } from './sum.js';\r\nexport { default as sumBy } from './sumBy.js';\r\nexport { default } from './math.default.js';\r\n","import baseExtremum from './_baseExtremum.js';\r\nimport baseGt from './_baseGt.js';\r\nimport identity from './identity.js';\r\n\r\n/**\r\n * Computes the maximum value of `array`. If `array` is empty or falsey,\r\n * `undefined` is returned.\r\n *\r\n * @static\r\n * @since 0.1.0\r\n * @memberOf _\r\n * @category Math\r\n * @param {Array} array The array to iterate over.\r\n * @returns {*} Returns the maximum value.\r\n * @example\r\n *\r\n * _.max([4, 2, 8, 6]);\r\n * // => 8\r\n *\r\n * _.max([]);\r\n * // => undefined\r\n */\r\nfunction max(array) {\r\n  return (array && array.length)\r\n    ? baseExtremum(array, identity, baseGt)\r\n    : undefined;\r\n}\r\n\r\nexport default max;\r\n","import baseExtremum from './_baseExtremum.js';\r\nimport baseGt from './_baseGt.js';\r\nimport baseIteratee from './_baseIteratee.js';\r\n\r\n/**\r\n * This method is like `_.max` except that it accepts `iteratee` which is\r\n * invoked for each element in `array` to generate the criterion by which\r\n * the value is ranked. The iteratee is invoked with one argument: (value).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Math\r\n * @param {Array} array The array to iterate over.\r\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\r\n * @returns {*} Returns the maximum value.\r\n * @example\r\n *\r\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\r\n *\r\n * _.maxBy(objects, function(o) { return o.n; });\r\n * // => { 'n': 2 }\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.maxBy(objects, 'n');\r\n * // => { 'n': 2 }\r\n */\r\nfunction maxBy(array, iteratee) {\r\n  return (array && array.length)\r\n    ? baseExtremum(array, baseIteratee(iteratee, 2), baseGt)\r\n    : undefined;\r\n}\r\n\r\nexport default maxBy;\r\n","import baseMean from './_baseMean.js';\r\nimport identity from './identity.js';\r\n\r\n/**\r\n * Computes the mean of the values in `array`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Math\r\n * @param {Array} array The array to iterate over.\r\n * @returns {number} Returns the mean.\r\n * @example\r\n *\r\n * _.mean([4, 2, 8, 6]);\r\n * // => 5\r\n */\r\nfunction mean(array) {\r\n  return baseMean(array, identity);\r\n}\r\n\r\nexport default mean;\r\n","import baseIteratee from './_baseIteratee.js';\r\nimport baseMean from './_baseMean.js';\r\n\r\n/**\r\n * This method is like `_.mean` except that it accepts `iteratee` which is\r\n * invoked for each element in `array` to generate the value to be averaged.\r\n * The iteratee is invoked with one argument: (value).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.7.0\r\n * @category Math\r\n * @param {Array} array The array to iterate over.\r\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\r\n * @returns {number} Returns the mean.\r\n * @example\r\n *\r\n * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\r\n *\r\n * _.meanBy(objects, function(o) { return o.n; });\r\n * // => 5\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.meanBy(objects, 'n');\r\n * // => 5\r\n */\r\nfunction meanBy(array, iteratee) {\r\n  return baseMean(array, baseIteratee(iteratee, 2));\r\n}\r\n\r\nexport default meanBy;\r\n","import MapCache from './_MapCache.js';\r\n\r\n/** Error message constants. */\r\nvar FUNC_ERROR_TEXT = 'Expected a function';\r\n\r\n/**\r\n * Creates a function that memoizes the result of `func`. If `resolver` is\r\n * provided, it determines the cache key for storing the result based on the\r\n * arguments provided to the memoized function. By default, the first argument\r\n * provided to the memoized function is used as the map cache key. The `func`\r\n * is invoked with the `this` binding of the memoized function.\r\n *\r\n * **Note:** The cache is exposed as the `cache` property on the memoized\r\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\r\n * constructor with one whose instances implement the\r\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\r\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Function\r\n * @param {Function} func The function to have its output memoized.\r\n * @param {Function} [resolver] The function to resolve the cache key.\r\n * @returns {Function} Returns the new memoized function.\r\n * @example\r\n *\r\n * var object = { 'a': 1, 'b': 2 };\r\n * var other = { 'c': 3, 'd': 4 };\r\n *\r\n * var values = _.memoize(_.values);\r\n * values(object);\r\n * // => [1, 2]\r\n *\r\n * values(other);\r\n * // => [3, 4]\r\n *\r\n * object.a = 2;\r\n * values(object);\r\n * // => [1, 2]\r\n *\r\n * // Modify the result cache.\r\n * values.cache.set(object, ['a', 'b']);\r\n * values(object);\r\n * // => ['a', 'b']\r\n *\r\n * // Replace `_.memoize.Cache`.\r\n * _.memoize.Cache = WeakMap;\r\n */\r\nfunction memoize(func, resolver) {\r\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\r\n    throw new TypeError(FUNC_ERROR_TEXT);\r\n  }\r\n  var memoized = function() {\r\n    var args = arguments,\r\n        key = resolver ? resolver.apply(this, args) : args[0],\r\n        cache = memoized.cache;\r\n\r\n    if (cache.has(key)) {\r\n      return cache.get(key);\r\n    }\r\n    var result = func.apply(this, args);\r\n    memoized.cache = cache.set(key, result) || cache;\r\n    return result;\r\n  };\r\n  memoized.cache = new (memoize.Cache || MapCache);\r\n  return memoized;\r\n}\r\n\r\n// Expose `MapCache`.\r\nmemoize.Cache = MapCache;\r\n\r\nexport default memoize;\r\n","import baseMerge from './_baseMerge.js';\r\nimport createAssigner from './_createAssigner.js';\r\n\r\n/**\r\n * This method is like `_.assign` except that it recursively merges own and\r\n * inherited enumerable string keyed properties of source objects into the\r\n * destination object. Source properties that resolve to `undefined` are\r\n * skipped if a destination value exists. Array and plain object properties\r\n * are merged recursively. Other objects and value types are overridden by\r\n * assignment. Source objects are applied from left to right. Subsequent\r\n * sources overwrite property assignments of previous sources.\r\n *\r\n * **Note:** This method mutates `object`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.5.0\r\n * @category Object\r\n * @param {Object} object The destination object.\r\n * @param {...Object} [sources] The source objects.\r\n * @returns {Object} Returns `object`.\r\n * @example\r\n *\r\n * var object = {\r\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\r\n * };\r\n *\r\n * var other = {\r\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\r\n * };\r\n *\r\n * _.merge(object, other);\r\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\r\n */\r\nvar merge = createAssigner(function(object, source, srcIndex) {\r\n  baseMerge(object, source, srcIndex);\r\n});\r\n\r\nexport default merge;\r\n","import baseMerge from './_baseMerge.js';\r\nimport createAssigner from './_createAssigner.js';\r\n\r\n/**\r\n * This method is like `_.merge` except that it accepts `customizer` which\r\n * is invoked to produce the merged values of the destination and source\r\n * properties. If `customizer` returns `undefined`, merging is handled by the\r\n * method instead. The `customizer` is invoked with six arguments:\r\n * (objValue, srcValue, key, object, source, stack).\r\n *\r\n * **Note:** This method mutates `object`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Object\r\n * @param {Object} object The destination object.\r\n * @param {...Object} sources The source objects.\r\n * @param {Function} customizer The function to customize assigned values.\r\n * @returns {Object} Returns `object`.\r\n * @example\r\n *\r\n * function customizer(objValue, srcValue) {\r\n *   if (_.isArray(objValue)) {\r\n *     return objValue.concat(srcValue);\r\n *   }\r\n * }\r\n *\r\n * var object = { 'a': [1], 'b': [2] };\r\n * var other = { 'a': [3], 'b': [4] };\r\n *\r\n * _.mergeWith(object, other, customizer);\r\n * // => { 'a': [1, 3], 'b': [2, 4] }\r\n */\r\nvar mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\r\n  baseMerge(object, source, srcIndex, customizer);\r\n});\r\n\r\nexport default mergeWith;\r\n","import baseInvoke from './_baseInvoke.js';\r\nimport baseRest from './_baseRest.js';\r\n\r\n/**\r\n * Creates a function that invokes the method at `path` of a given object.\r\n * Any additional arguments are provided to the invoked method.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.7.0\r\n * @category Util\r\n * @param {Array|string} path The path of the method to invoke.\r\n * @param {...*} [args] The arguments to invoke the method with.\r\n * @returns {Function} Returns the new invoker function.\r\n * @example\r\n *\r\n * var objects = [\r\n *   { 'a': { 'b': _.constant(2) } },\r\n *   { 'a': { 'b': _.constant(1) } }\r\n * ];\r\n *\r\n * _.map(objects, _.method('a.b'));\r\n * // => [2, 1]\r\n *\r\n * _.map(objects, _.method(['a', 'b']));\r\n * // => [2, 1]\r\n */\r\nvar method = baseRest(function(path, args) {\r\n  return function(object) {\r\n    return baseInvoke(object, path, args);\r\n  };\r\n});\r\n\r\nexport default method;\r\n","import baseInvoke from './_baseInvoke.js';\r\nimport baseRest from './_baseRest.js';\r\n\r\n/**\r\n * The opposite of `_.method`; this method creates a function that invokes\r\n * the method at a given path of `object`. Any additional arguments are\r\n * provided to the invoked method.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.7.0\r\n * @category Util\r\n * @param {Object} object The object to query.\r\n * @param {...*} [args] The arguments to invoke the method with.\r\n * @returns {Function} Returns the new invoker function.\r\n * @example\r\n *\r\n * var array = _.times(3, _.constant),\r\n *     object = { 'a': array, 'b': array, 'c': array };\r\n *\r\n * _.map(['a[2]', 'c[0]'], _.methodOf(object));\r\n * // => [2, 0]\r\n *\r\n * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\r\n * // => [2, 0]\r\n */\r\nvar methodOf = baseRest(function(object, args) {\r\n  return function(path) {\r\n    return baseInvoke(object, path, args);\r\n  };\r\n});\r\n\r\nexport default methodOf;\r\n","import baseExtremum from './_baseExtremum.js';\r\nimport baseLt from './_baseLt.js';\r\nimport identity from './identity.js';\r\n\r\n/**\r\n * Computes the minimum value of `array`. If `array` is empty or falsey,\r\n * `undefined` is returned.\r\n *\r\n * @static\r\n * @since 0.1.0\r\n * @memberOf _\r\n * @category Math\r\n * @param {Array} array The array to iterate over.\r\n * @returns {*} Returns the minimum value.\r\n * @example\r\n *\r\n * _.min([4, 2, 8, 6]);\r\n * // => 2\r\n *\r\n * _.min([]);\r\n * // => undefined\r\n */\r\nfunction min(array) {\r\n  return (array && array.length)\r\n    ? baseExtremum(array, identity, baseLt)\r\n    : undefined;\r\n}\r\n\r\nexport default min;\r\n","import baseExtremum from './_baseExtremum.js';\r\nimport baseIteratee from './_baseIteratee.js';\r\nimport baseLt from './_baseLt.js';\r\n\r\n/**\r\n * This method is like `_.min` except that it accepts `iteratee` which is\r\n * invoked for each element in `array` to generate the criterion by which\r\n * the value is ranked. The iteratee is invoked with one argument: (value).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Math\r\n * @param {Array} array The array to iterate over.\r\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\r\n * @returns {*} Returns the minimum value.\r\n * @example\r\n *\r\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\r\n *\r\n * _.minBy(objects, function(o) { return o.n; });\r\n * // => { 'n': 1 }\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.minBy(objects, 'n');\r\n * // => { 'n': 1 }\r\n */\r\nfunction minBy(array, iteratee) {\r\n  return (array && array.length)\r\n    ? baseExtremum(array, baseIteratee(iteratee, 2), baseLt)\r\n    : undefined;\r\n}\r\n\r\nexport default minBy;\r\n","import arrayEach from './_arrayEach.js';\r\nimport arrayPush from './_arrayPush.js';\r\nimport baseFunctions from './_baseFunctions.js';\r\nimport copyArray from './_copyArray.js';\r\nimport isFunction from './isFunction.js';\r\nimport isObject from './isObject.js';\r\nimport keys from './keys.js';\r\n\r\n/**\r\n * Adds all own enumerable string keyed function properties of a source\r\n * object to the destination object. If `object` is a function, then methods\r\n * are added to its prototype as well.\r\n *\r\n * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\r\n * avoid conflicts caused by modifying the original.\r\n *\r\n * @static\r\n * @since 0.1.0\r\n * @memberOf _\r\n * @category Util\r\n * @param {Function|Object} [object=lodash] The destination object.\r\n * @param {Object} source The object of functions to add.\r\n * @param {Object} [options={}] The options object.\r\n * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\r\n * @returns {Function|Object} Returns `object`.\r\n * @example\r\n *\r\n * function vowels(string) {\r\n *   return _.filter(string, function(v) {\r\n *     return /[aeiou]/i.test(v);\r\n *   });\r\n * }\r\n *\r\n * _.mixin({ 'vowels': vowels });\r\n * _.vowels('fred');\r\n * // => ['e']\r\n *\r\n * _('fred').vowels().value();\r\n * // => ['e']\r\n *\r\n * _.mixin({ 'vowels': vowels }, { 'chain': false });\r\n * _('fred').vowels();\r\n * // => ['e']\r\n */\r\nfunction mixin(object, source, options) {\r\n  var props = keys(source),\r\n      methodNames = baseFunctions(source, props);\r\n\r\n  var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\r\n      isFunc = isFunction(object);\r\n\r\n  arrayEach(methodNames, function(methodName) {\r\n    var func = source[methodName];\r\n    object[methodName] = func;\r\n    if (isFunc) {\r\n      object.prototype[methodName] = function() {\r\n        var chainAll = this.__chain__;\r\n        if (chain || chainAll) {\r\n          var result = object(this.__wrapped__),\r\n              actions = result.__actions__ = copyArray(this.__actions__);\r\n\r\n          actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\r\n          result.__chain__ = chainAll;\r\n          return result;\r\n        }\r\n        return func.apply(object, arrayPush([this.value()], arguments));\r\n      };\r\n    }\r\n  });\r\n\r\n  return object;\r\n}\r\n\r\nexport default mixin;\r\n","import createMathOperation from './_createMathOperation.js';\r\n\r\n/**\r\n * Multiply two numbers.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.7.0\r\n * @category Math\r\n * @param {number} multiplier The first number in a multiplication.\r\n * @param {number} multiplicand The second number in a multiplication.\r\n * @returns {number} Returns the product.\r\n * @example\r\n *\r\n * _.multiply(6, 4);\r\n * // => 24\r\n */\r\nvar multiply = createMathOperation(function(multiplier, multiplicand) {\r\n  return multiplier * multiplicand;\r\n}, 1);\r\n\r\nexport default multiply;\r\n","/** Error message constants. */\r\nvar FUNC_ERROR_TEXT = 'Expected a function';\r\n\r\n/**\r\n * Creates a function that negates the result of the predicate `func`. The\r\n * `func` predicate is invoked with the `this` binding and arguments of the\r\n * created function.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Function\r\n * @param {Function} predicate The predicate to negate.\r\n * @returns {Function} Returns the new negated function.\r\n * @example\r\n *\r\n * function isEven(n) {\r\n *   return n % 2 == 0;\r\n * }\r\n *\r\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\r\n * // => [1, 3, 5]\r\n */\r\nfunction negate(predicate) {\r\n  if (typeof predicate != 'function') {\r\n    throw new TypeError(FUNC_ERROR_TEXT);\r\n  }\r\n  return function() {\r\n    var args = arguments;\r\n    switch (args.length) {\r\n      case 0: return !predicate.call(this);\r\n      case 1: return !predicate.call(this, args[0]);\r\n      case 2: return !predicate.call(this, args[0], args[1]);\r\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\r\n    }\r\n    return !predicate.apply(this, args);\r\n  };\r\n}\r\n\r\nexport default negate;\r\n","import toArray from './toArray.js';\r\n\r\n/**\r\n * Gets the next value on a wrapped object following the\r\n * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\r\n *\r\n * @name next\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Seq\r\n * @returns {Object} Returns the next iterator value.\r\n * @example\r\n *\r\n * var wrapped = _([1, 2]);\r\n *\r\n * wrapped.next();\r\n * // => { 'done': false, 'value': 1 }\r\n *\r\n * wrapped.next();\r\n * // => { 'done': false, 'value': 2 }\r\n *\r\n * wrapped.next();\r\n * // => { 'done': true, 'value': undefined }\r\n */\r\nfunction wrapperNext() {\r\n  if (this.__values__ === undefined) {\r\n    this.__values__ = toArray(this.value());\r\n  }\r\n  var done = this.__index__ >= this.__values__.length,\r\n      value = done ? undefined : this.__values__[this.__index__++];\r\n\r\n  return { 'done': done, 'value': value };\r\n}\r\n\r\nexport default wrapperNext;\r\n","/**\r\n * This method returns `undefined`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 2.3.0\r\n * @category Util\r\n * @example\r\n *\r\n * _.times(2, _.noop);\r\n * // => [undefined, undefined]\r\n */\r\nfunction noop() {\r\n  // No operation performed.\r\n}\r\n\r\nexport default noop;\r\n","import root from './_root.js';\r\n\r\n/**\r\n * Gets the timestamp of the number of milliseconds that have elapsed since\r\n * the Unix epoch (1 January 1970 00:00:00 UTC).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 2.4.0\r\n * @category Date\r\n * @returns {number} Returns the timestamp.\r\n * @example\r\n *\r\n * _.defer(function(stamp) {\r\n *   console.log(_.now() - stamp);\r\n * }, _.now());\r\n * // => Logs the number of milliseconds it took for the deferred invocation.\r\n */\r\nvar now = function() {\r\n  return root.Date.now();\r\n};\r\n\r\nexport default now;\r\n","import baseNth from './_baseNth.js';\r\nimport toInteger from './toInteger.js';\r\n\r\n/**\r\n * Gets the element at index `n` of `array`. If `n` is negative, the nth\r\n * element from the end is returned.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.11.0\r\n * @category Array\r\n * @param {Array} array The array to query.\r\n * @param {number} [n=0] The index of the element to return.\r\n * @returns {*} Returns the nth element of `array`.\r\n * @example\r\n *\r\n * var array = ['a', 'b', 'c', 'd'];\r\n *\r\n * _.nth(array, 1);\r\n * // => 'b'\r\n *\r\n * _.nth(array, -2);\r\n * // => 'c';\r\n */\r\nfunction nth(array, n) {\r\n  return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\r\n}\r\n\r\nexport default nth;\r\n","import baseNth from './_baseNth.js';\r\nimport baseRest from './_baseRest.js';\r\nimport toInteger from './toInteger.js';\r\n\r\n/**\r\n * Creates a function that gets the argument at index `n`. If `n` is negative,\r\n * the nth argument from the end is returned.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Util\r\n * @param {number} [n=0] The index of the argument to return.\r\n * @returns {Function} Returns the new pass-thru function.\r\n * @example\r\n *\r\n * var func = _.nthArg(1);\r\n * func('a', 'b', 'c', 'd');\r\n * // => 'b'\r\n *\r\n * var func = _.nthArg(-2);\r\n * func('a', 'b', 'c', 'd');\r\n * // => 'c'\r\n */\r\nfunction nthArg(n) {\r\n  n = toInteger(n);\r\n  return baseRest(function(args) {\r\n    return baseNth(args, n);\r\n  });\r\n}\r\n\r\nexport default nthArg;\r\n","import clamp from './clamp.js';\r\nimport inRange from './inRange.js';\r\nimport random from './random.js';\r\n\r\nexport default {\r\n  clamp, inRange, random\r\n};\r\n","export { default as clamp } from './clamp.js';\r\nexport { default as inRange } from './inRange.js';\r\nexport { default as random } from './random.js';\r\nexport { default } from './number.default.js';\r\n","import assign from './assign.js';\r\nimport assignIn from './assignIn.js';\r\nimport assignInWith from './assignInWith.js';\r\nimport assignWith from './assignWith.js';\r\nimport at from './at.js';\r\nimport create from './create.js';\r\nimport defaults from './defaults.js';\r\nimport defaultsDeep from './defaultsDeep.js';\r\nimport entries from './entries.js';\r\nimport entriesIn from './entriesIn.js';\r\nimport extend from './extend.js';\r\nimport extendWith from './extendWith.js';\r\nimport findKey from './findKey.js';\r\nimport findLastKey from './findLastKey.js';\r\nimport forIn from './forIn.js';\r\nimport forInRight from './forInRight.js';\r\nimport forOwn from './forOwn.js';\r\nimport forOwnRight from './forOwnRight.js';\r\nimport functions from './functions.js';\r\nimport functionsIn from './functionsIn.js';\r\nimport get from './get.js';\r\nimport has from './has.js';\r\nimport hasIn from './hasIn.js';\r\nimport invert from './invert.js';\r\nimport invertBy from './invertBy.js';\r\nimport invoke from './invoke.js';\r\nimport keys from './keys.js';\r\nimport keysIn from './keysIn.js';\r\nimport mapKeys from './mapKeys.js';\r\nimport mapValues from './mapValues.js';\r\nimport merge from './merge.js';\r\nimport mergeWith from './mergeWith.js';\r\nimport omit from './omit.js';\r\nimport omitBy from './omitBy.js';\r\nimport pick from './pick.js';\r\nimport pickBy from './pickBy.js';\r\nimport result from './result.js';\r\nimport set from './set.js';\r\nimport setWith from './setWith.js';\r\nimport toPairs from './toPairs.js';\r\nimport toPairsIn from './toPairsIn.js';\r\nimport transform from './transform.js';\r\nimport unset from './unset.js';\r\nimport update from './update.js';\r\nimport updateWith from './updateWith.js';\r\nimport values from './values.js';\r\nimport valuesIn from './valuesIn.js';\r\n\r\nexport default {\r\n  assign, assignIn, assignInWith, assignWith, at,\r\n  create, defaults, defaultsDeep, entries, entriesIn,\r\n  extend, extendWith, findKey, findLastKey, forIn,\r\n  forInRight, forOwn, forOwnRight, functions, functionsIn,\r\n  get, has, hasIn, invert, invertBy,\r\n  invoke, keys, keysIn, mapKeys, mapValues,\r\n  merge, mergeWith, omit, omitBy, pick,\r\n  pickBy, result, set, setWith, toPairs,\r\n  toPairsIn, transform, unset, update, updateWith,\r\n  values, valuesIn\r\n};\r\n","export { default as assign } from './assign.js';\r\nexport { default as assignIn } from './assignIn.js';\r\nexport { default as assignInWith } from './assignInWith.js';\r\nexport { default as assignWith } from './assignWith.js';\r\nexport { default as at } from './at.js';\r\nexport { default as create } from './create.js';\r\nexport { default as defaults } from './defaults.js';\r\nexport { default as defaultsDeep } from './defaultsDeep.js';\r\nexport { default as entries } from './entries.js';\r\nexport { default as entriesIn } from './entriesIn.js';\r\nexport { default as extend } from './extend.js';\r\nexport { default as extendWith } from './extendWith.js';\r\nexport { default as findKey } from './findKey.js';\r\nexport { default as findLastKey } from './findLastKey.js';\r\nexport { default as forIn } from './forIn.js';\r\nexport { default as forInRight } from './forInRight.js';\r\nexport { default as forOwn } from './forOwn.js';\r\nexport { default as forOwnRight } from './forOwnRight.js';\r\nexport { default as functions } from './functions.js';\r\nexport { default as functionsIn } from './functionsIn.js';\r\nexport { default as get } from './get.js';\r\nexport { default as has } from './has.js';\r\nexport { default as hasIn } from './hasIn.js';\r\nexport { default as invert } from './invert.js';\r\nexport { default as invertBy } from './invertBy.js';\r\nexport { default as invoke } from './invoke.js';\r\nexport { default as keys } from './keys.js';\r\nexport { default as keysIn } from './keysIn.js';\r\nexport { default as mapKeys } from './mapKeys.js';\r\nexport { default as mapValues } from './mapValues.js';\r\nexport { default as merge } from './merge.js';\r\nexport { default as mergeWith } from './mergeWith.js';\r\nexport { default as omit } from './omit.js';\r\nexport { default as omitBy } from './omitBy.js';\r\nexport { default as pick } from './pick.js';\r\nexport { default as pickBy } from './pickBy.js';\r\nexport { default as result } from './result.js';\r\nexport { default as set } from './set.js';\r\nexport { default as setWith } from './setWith.js';\r\nexport { default as toPairs } from './toPairs.js';\r\nexport { default as toPairsIn } from './toPairsIn.js';\r\nexport { default as transform } from './transform.js';\r\nexport { default as unset } from './unset.js';\r\nexport { default as update } from './update.js';\r\nexport { default as updateWith } from './updateWith.js';\r\nexport { default as values } from './values.js';\r\nexport { default as valuesIn } from './valuesIn.js';\r\nexport { default } from './object.default.js';\r\n","import arrayMap from './_arrayMap.js';\r\nimport baseClone from './_baseClone.js';\r\nimport baseUnset from './_baseUnset.js';\r\nimport castPath from './_castPath.js';\r\nimport copyObject from './_copyObject.js';\r\nimport customOmitClone from './_customOmitClone.js';\r\nimport flatRest from './_flatRest.js';\r\nimport getAllKeysIn from './_getAllKeysIn.js';\r\n\r\n/** Used to compose bitmasks for cloning. */\r\nvar CLONE_DEEP_FLAG = 1,\r\n    CLONE_FLAT_FLAG = 2,\r\n    CLONE_SYMBOLS_FLAG = 4;\r\n\r\n/**\r\n * The opposite of `_.pick`; this method creates an object composed of the\r\n * own and inherited enumerable property paths of `object` that are not omitted.\r\n *\r\n * **Note:** This method is considerably slower than `_.pick`.\r\n *\r\n * @static\r\n * @since 0.1.0\r\n * @memberOf _\r\n * @category Object\r\n * @param {Object} object The source object.\r\n * @param {...(string|string[])} [paths] The property paths to omit.\r\n * @returns {Object} Returns the new object.\r\n * @example\r\n *\r\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\r\n *\r\n * _.omit(object, ['a', 'c']);\r\n * // => { 'b': '2' }\r\n */\r\nvar omit = flatRest(function(object, paths) {\r\n  var result = {};\r\n  if (object == null) {\r\n    return result;\r\n  }\r\n  var isDeep = false;\r\n  paths = arrayMap(paths, function(path) {\r\n    path = castPath(path, object);\r\n    isDeep || (isDeep = path.length > 1);\r\n    return path;\r\n  });\r\n  copyObject(object, getAllKeysIn(object), result);\r\n  if (isDeep) {\r\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\r\n  }\r\n  var length = paths.length;\r\n  while (length--) {\r\n    baseUnset(result, paths[length]);\r\n  }\r\n  return result;\r\n});\r\n\r\nexport default omit;\r\n","import baseIteratee from './_baseIteratee.js';\r\nimport negate from './negate.js';\r\nimport pickBy from './pickBy.js';\r\n\r\n/**\r\n * The opposite of `_.pickBy`; this method creates an object composed of\r\n * the own and inherited enumerable string keyed properties of `object` that\r\n * `predicate` doesn't return truthy for. The predicate is invoked with two\r\n * arguments: (value, key).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Object\r\n * @param {Object} object The source object.\r\n * @param {Function} [predicate=_.identity] The function invoked per property.\r\n * @returns {Object} Returns the new object.\r\n * @example\r\n *\r\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\r\n *\r\n * _.omitBy(object, _.isNumber);\r\n * // => { 'b': '2' }\r\n */\r\nfunction omitBy(object, predicate) {\r\n  return pickBy(object, negate(baseIteratee(predicate)));\r\n}\r\n\r\nexport default omitBy;\r\n","import before from './before.js';\r\n\r\n/**\r\n * Creates a function that is restricted to invoking `func` once. Repeat calls\r\n * to the function return the value of the first invocation. The `func` is\r\n * invoked with the `this` binding and arguments of the created function.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Function\r\n * @param {Function} func The function to restrict.\r\n * @returns {Function} Returns the new restricted function.\r\n * @example\r\n *\r\n * var initialize = _.once(createApplication);\r\n * initialize();\r\n * initialize();\r\n * // => `createApplication` is invoked once\r\n */\r\nfunction once(func) {\r\n  return before(2, func);\r\n}\r\n\r\nexport default once;\r\n","import baseOrderBy from './_baseOrderBy.js';\r\nimport isArray from './isArray.js';\r\n\r\n/**\r\n * This method is like `_.sortBy` except that it allows specifying the sort\r\n * orders of the iteratees to sort by. If `orders` is unspecified, all values\r\n * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\r\n * descending or \"asc\" for ascending sort order of corresponding values.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\r\n *  The iteratees to sort by.\r\n * @param {string[]} [orders] The sort orders of `iteratees`.\r\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\r\n * @returns {Array} Returns the new sorted array.\r\n * @example\r\n *\r\n * var users = [\r\n *   { 'user': 'fred',   'age': 48 },\r\n *   { 'user': 'barney', 'age': 34 },\r\n *   { 'user': 'fred',   'age': 40 },\r\n *   { 'user': 'barney', 'age': 36 }\r\n * ];\r\n *\r\n * // Sort by `user` in ascending order and by `age` in descending order.\r\n * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\r\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\r\n */\r\nfunction orderBy(collection, iteratees, orders, guard) {\r\n  if (collection == null) {\r\n    return [];\r\n  }\r\n  if (!isArray(iteratees)) {\r\n    iteratees = iteratees == null ? [] : [iteratees];\r\n  }\r\n  orders = guard ? undefined : orders;\r\n  if (!isArray(orders)) {\r\n    orders = orders == null ? [] : [orders];\r\n  }\r\n  return baseOrderBy(collection, iteratees, orders);\r\n}\r\n\r\nexport default orderBy;\r\n","import arrayMap from './_arrayMap.js';\r\nimport createOver from './_createOver.js';\r\n\r\n/**\r\n * Creates a function that invokes `iteratees` with the arguments it receives\r\n * and returns their results.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Util\r\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\r\n *  The iteratees to invoke.\r\n * @returns {Function} Returns the new function.\r\n * @example\r\n *\r\n * var func = _.over([Math.max, Math.min]);\r\n *\r\n * func(1, 2, 3, 4);\r\n * // => [4, 1]\r\n */\r\nvar over = createOver(arrayMap);\r\n\r\nexport default over;\r\n","import apply from './_apply.js';\r\nimport arrayMap from './_arrayMap.js';\r\nimport baseFlatten from './_baseFlatten.js';\r\nimport baseIteratee from './_baseIteratee.js';\r\nimport baseRest from './_baseRest.js';\r\nimport baseUnary from './_baseUnary.js';\r\nimport castRest from './_castRest.js';\r\nimport isArray from './isArray.js';\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMin = Math.min;\r\n\r\n/**\r\n * Creates a function that invokes `func` with its arguments transformed.\r\n *\r\n * @static\r\n * @since 4.0.0\r\n * @memberOf _\r\n * @category Function\r\n * @param {Function} func The function to wrap.\r\n * @param {...(Function|Function[])} [transforms=[_.identity]]\r\n *  The argument transforms.\r\n * @returns {Function} Returns the new function.\r\n * @example\r\n *\r\n * function doubled(n) {\r\n *   return n * 2;\r\n * }\r\n *\r\n * function square(n) {\r\n *   return n * n;\r\n * }\r\n *\r\n * var func = _.overArgs(function(x, y) {\r\n *   return [x, y];\r\n * }, [square, doubled]);\r\n *\r\n * func(9, 3);\r\n * // => [81, 6]\r\n *\r\n * func(10, 5);\r\n * // => [100, 10]\r\n */\r\nvar overArgs = castRest(function(func, transforms) {\r\n  transforms = (transforms.length == 1 && isArray(transforms[0]))\r\n    ? arrayMap(transforms[0], baseUnary(baseIteratee))\r\n    : arrayMap(baseFlatten(transforms, 1), baseUnary(baseIteratee));\r\n\r\n  var funcsLength = transforms.length;\r\n  return baseRest(function(args) {\r\n    var index = -1,\r\n        length = nativeMin(args.length, funcsLength);\r\n\r\n    while (++index < length) {\r\n      args[index] = transforms[index].call(this, args[index]);\r\n    }\r\n    return apply(func, this, args);\r\n  });\r\n});\r\n\r\nexport default overArgs;\r\n","import arrayEvery from './_arrayEvery.js';\r\nimport createOver from './_createOver.js';\r\n\r\n/**\r\n * Creates a function that checks if **all** of the `predicates` return\r\n * truthy when invoked with the arguments it receives.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Util\r\n * @param {...(Function|Function[])} [predicates=[_.identity]]\r\n *  The predicates to check.\r\n * @returns {Function} Returns the new function.\r\n * @example\r\n *\r\n * var func = _.overEvery([Boolean, isFinite]);\r\n *\r\n * func('1');\r\n * // => true\r\n *\r\n * func(null);\r\n * // => false\r\n *\r\n * func(NaN);\r\n * // => false\r\n */\r\nvar overEvery = createOver(arrayEvery);\r\n\r\nexport default overEvery;\r\n","import arraySome from './_arraySome.js';\r\nimport createOver from './_createOver.js';\r\n\r\n/**\r\n * Creates a function that checks if **any** of the `predicates` return\r\n * truthy when invoked with the arguments it receives.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Util\r\n * @param {...(Function|Function[])} [predicates=[_.identity]]\r\n *  The predicates to check.\r\n * @returns {Function} Returns the new function.\r\n * @example\r\n *\r\n * var func = _.overSome([Boolean, isFinite]);\r\n *\r\n * func('1');\r\n * // => true\r\n *\r\n * func(null);\r\n * // => true\r\n *\r\n * func(NaN);\r\n * // => false\r\n */\r\nvar overSome = createOver(arraySome);\r\n\r\nexport default overSome;\r\n","import createPadding from './_createPadding.js';\r\nimport stringSize from './_stringSize.js';\r\nimport toInteger from './toInteger.js';\r\nimport toString from './toString.js';\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeCeil = Math.ceil,\r\n    nativeFloor = Math.floor;\r\n\r\n/**\r\n * Pads `string` on the left and right sides if it's shorter than `length`.\r\n * Padding characters are truncated if they can't be evenly divided by `length`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category String\r\n * @param {string} [string=''] The string to pad.\r\n * @param {number} [length=0] The padding length.\r\n * @param {string} [chars=' '] The string used as padding.\r\n * @returns {string} Returns the padded string.\r\n * @example\r\n *\r\n * _.pad('abc', 8);\r\n * // => '  abc   '\r\n *\r\n * _.pad('abc', 8, '_-');\r\n * // => '_-abc_-_'\r\n *\r\n * _.pad('abc', 3);\r\n * // => 'abc'\r\n */\r\nfunction pad(string, length, chars) {\r\n  string = toString(string);\r\n  length = toInteger(length);\r\n\r\n  var strLength = length ? stringSize(string) : 0;\r\n  if (!length || strLength >= length) {\r\n    return string;\r\n  }\r\n  var mid = (length - strLength) / 2;\r\n  return (\r\n    createPadding(nativeFloor(mid), chars) +\r\n    string +\r\n    createPadding(nativeCeil(mid), chars)\r\n  );\r\n}\r\n\r\nexport default pad;\r\n","import createPadding from './_createPadding.js';\r\nimport stringSize from './_stringSize.js';\r\nimport toInteger from './toInteger.js';\r\nimport toString from './toString.js';\r\n\r\n/**\r\n * Pads `string` on the right side if it's shorter than `length`. Padding\r\n * characters are truncated if they exceed `length`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category String\r\n * @param {string} [string=''] The string to pad.\r\n * @param {number} [length=0] The padding length.\r\n * @param {string} [chars=' '] The string used as padding.\r\n * @returns {string} Returns the padded string.\r\n * @example\r\n *\r\n * _.padEnd('abc', 6);\r\n * // => 'abc   '\r\n *\r\n * _.padEnd('abc', 6, '_-');\r\n * // => 'abc_-_'\r\n *\r\n * _.padEnd('abc', 3);\r\n * // => 'abc'\r\n */\r\nfunction padEnd(string, length, chars) {\r\n  string = toString(string);\r\n  length = toInteger(length);\r\n\r\n  var strLength = length ? stringSize(string) : 0;\r\n  return (length && strLength < length)\r\n    ? (string + createPadding(length - strLength, chars))\r\n    : string;\r\n}\r\n\r\nexport default padEnd;\r\n","import createPadding from './_createPadding.js';\r\nimport stringSize from './_stringSize.js';\r\nimport toInteger from './toInteger.js';\r\nimport toString from './toString.js';\r\n\r\n/**\r\n * Pads `string` on the left side if it's shorter than `length`. Padding\r\n * characters are truncated if they exceed `length`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category String\r\n * @param {string} [string=''] The string to pad.\r\n * @param {number} [length=0] The padding length.\r\n * @param {string} [chars=' '] The string used as padding.\r\n * @returns {string} Returns the padded string.\r\n * @example\r\n *\r\n * _.padStart('abc', 6);\r\n * // => '   abc'\r\n *\r\n * _.padStart('abc', 6, '_-');\r\n * // => '_-_abc'\r\n *\r\n * _.padStart('abc', 3);\r\n * // => 'abc'\r\n */\r\nfunction padStart(string, length, chars) {\r\n  string = toString(string);\r\n  length = toInteger(length);\r\n\r\n  var strLength = length ? stringSize(string) : 0;\r\n  return (length && strLength < length)\r\n    ? (createPadding(length - strLength, chars) + string)\r\n    : string;\r\n}\r\n\r\nexport default padStart;\r\n","import root from './_root.js';\r\nimport toString from './toString.js';\r\n\r\n/** Used to match leading and trailing whitespace. */\r\nvar reTrimStart = /^\\s+/;\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeParseInt = root.parseInt;\r\n\r\n/**\r\n * Converts `string` to an integer of the specified radix. If `radix` is\r\n * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\r\n * hexadecimal, in which case a `radix` of `16` is used.\r\n *\r\n * **Note:** This method aligns with the\r\n * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 1.1.0\r\n * @category String\r\n * @param {string} string The string to convert.\r\n * @param {number} [radix=10] The radix to interpret `value` by.\r\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\r\n * @returns {number} Returns the converted integer.\r\n * @example\r\n *\r\n * _.parseInt('08');\r\n * // => 8\r\n *\r\n * _.map(['6', '08', '10'], _.parseInt);\r\n * // => [6, 8, 10]\r\n */\r\nfunction parseInt(string, radix, guard) {\r\n  if (guard || radix == null) {\r\n    radix = 0;\r\n  } else if (radix) {\r\n    radix = +radix;\r\n  }\r\n  return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\r\n}\r\n\r\nexport default parseInt;\r\n","import baseRest from './_baseRest.js';\r\nimport createWrap from './_createWrap.js';\r\nimport getHolder from './_getHolder.js';\r\nimport replaceHolders from './_replaceHolders.js';\r\n\r\n/** Used to compose bitmasks for function metadata. */\r\nvar WRAP_PARTIAL_FLAG = 32;\r\n\r\n/**\r\n * Creates a function that invokes `func` with `partials` prepended to the\r\n * arguments it receives. This method is like `_.bind` except it does **not**\r\n * alter the `this` binding.\r\n *\r\n * The `_.partial.placeholder` value, which defaults to `_` in monolithic\r\n * builds, may be used as a placeholder for partially applied arguments.\r\n *\r\n * **Note:** This method doesn't set the \"length\" property of partially\r\n * applied functions.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.2.0\r\n * @category Function\r\n * @param {Function} func The function to partially apply arguments to.\r\n * @param {...*} [partials] The arguments to be partially applied.\r\n * @returns {Function} Returns the new partially applied function.\r\n * @example\r\n *\r\n * function greet(greeting, name) {\r\n *   return greeting + ' ' + name;\r\n * }\r\n *\r\n * var sayHelloTo = _.partial(greet, 'hello');\r\n * sayHelloTo('fred');\r\n * // => 'hello fred'\r\n *\r\n * // Partially applied with placeholders.\r\n * var greetFred = _.partial(greet, _, 'fred');\r\n * greetFred('hi');\r\n * // => 'hi fred'\r\n */\r\nvar partial = baseRest(function(func, partials) {\r\n  var holders = replaceHolders(partials, getHolder(partial));\r\n  return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\r\n});\r\n\r\n// Assign default placeholders.\r\npartial.placeholder = {};\r\n\r\nexport default partial;\r\n","import baseRest from './_baseRest.js';\r\nimport createWrap from './_createWrap.js';\r\nimport getHolder from './_getHolder.js';\r\nimport replaceHolders from './_replaceHolders.js';\r\n\r\n/** Used to compose bitmasks for function metadata. */\r\nvar WRAP_PARTIAL_RIGHT_FLAG = 64;\r\n\r\n/**\r\n * This method is like `_.partial` except that partially applied arguments\r\n * are appended to the arguments it receives.\r\n *\r\n * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\r\n * builds, may be used as a placeholder for partially applied arguments.\r\n *\r\n * **Note:** This method doesn't set the \"length\" property of partially\r\n * applied functions.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 1.0.0\r\n * @category Function\r\n * @param {Function} func The function to partially apply arguments to.\r\n * @param {...*} [partials] The arguments to be partially applied.\r\n * @returns {Function} Returns the new partially applied function.\r\n * @example\r\n *\r\n * function greet(greeting, name) {\r\n *   return greeting + ' ' + name;\r\n * }\r\n *\r\n * var greetFred = _.partialRight(greet, 'fred');\r\n * greetFred('hi');\r\n * // => 'hi fred'\r\n *\r\n * // Partially applied with placeholders.\r\n * var sayHelloTo = _.partialRight(greet, 'hello', _);\r\n * sayHelloTo('fred');\r\n * // => 'hello fred'\r\n */\r\nvar partialRight = baseRest(function(func, partials) {\r\n  var holders = replaceHolders(partials, getHolder(partialRight));\r\n  return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\r\n});\r\n\r\n// Assign default placeholders.\r\npartialRight.placeholder = {};\r\n\r\nexport default partialRight;\r\n","import createAggregator from './_createAggregator.js';\r\n\r\n/**\r\n * Creates an array of elements split into two groups, the first of which\r\n * contains elements `predicate` returns truthy for, the second of which\r\n * contains elements `predicate` returns falsey for. The predicate is\r\n * invoked with one argument: (value).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\r\n * @returns {Array} Returns the array of grouped elements.\r\n * @example\r\n *\r\n * var users = [\r\n *   { 'user': 'barney',  'age': 36, 'active': false },\r\n *   { 'user': 'fred',    'age': 40, 'active': true },\r\n *   { 'user': 'pebbles', 'age': 1,  'active': false }\r\n * ];\r\n *\r\n * _.partition(users, function(o) { return o.active; });\r\n * // => objects for [['fred'], ['barney', 'pebbles']]\r\n *\r\n * // The `_.matches` iteratee shorthand.\r\n * _.partition(users, { 'age': 1, 'active': false });\r\n * // => objects for [['pebbles'], ['barney', 'fred']]\r\n *\r\n * // The `_.matchesProperty` iteratee shorthand.\r\n * _.partition(users, ['active', false]);\r\n * // => objects for [['barney', 'pebbles'], ['fred']]\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.partition(users, 'active');\r\n * // => objects for [['fred'], ['barney', 'pebbles']]\r\n */\r\nvar partition = createAggregator(function(result, value, key) {\r\n  result[key ? 0 : 1].push(value);\r\n}, function() { return [[], []]; });\r\n\r\nexport default partition;\r\n","import basePick from './_basePick.js';\r\nimport flatRest from './_flatRest.js';\r\n\r\n/**\r\n * Creates an object composed of the picked `object` properties.\r\n *\r\n * @static\r\n * @since 0.1.0\r\n * @memberOf _\r\n * @category Object\r\n * @param {Object} object The source object.\r\n * @param {...(string|string[])} [paths] The property paths to pick.\r\n * @returns {Object} Returns the new object.\r\n * @example\r\n *\r\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\r\n *\r\n * _.pick(object, ['a', 'c']);\r\n * // => { 'a': 1, 'c': 3 }\r\n */\r\nvar pick = flatRest(function(object, paths) {\r\n  return object == null ? {} : basePick(object, paths);\r\n});\r\n\r\nexport default pick;\r\n","import arrayMap from './_arrayMap.js';\r\nimport baseIteratee from './_baseIteratee.js';\r\nimport basePickBy from './_basePickBy.js';\r\nimport getAllKeysIn from './_getAllKeysIn.js';\r\n\r\n/**\r\n * Creates an object composed of the `object` properties `predicate` returns\r\n * truthy for. The predicate is invoked with two arguments: (value, key).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Object\r\n * @param {Object} object The source object.\r\n * @param {Function} [predicate=_.identity] The function invoked per property.\r\n * @returns {Object} Returns the new object.\r\n * @example\r\n *\r\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\r\n *\r\n * _.pickBy(object, _.isNumber);\r\n * // => { 'a': 1, 'c': 3 }\r\n */\r\nfunction pickBy(object, predicate) {\r\n  if (object == null) {\r\n    return {};\r\n  }\r\n  var props = arrayMap(getAllKeysIn(object), function(prop) {\r\n    return [prop];\r\n  });\r\n  predicate = baseIteratee(predicate);\r\n  return basePickBy(object, props, function(value, path) {\r\n    return predicate(value, path[0]);\r\n  });\r\n}\r\n\r\nexport default pickBy;\r\n","import baseLodash from './_baseLodash.js';\r\nimport wrapperClone from './_wrapperClone.js';\r\n\r\n/**\r\n * Creates a clone of the chain sequence planting `value` as the wrapped value.\r\n *\r\n * @name plant\r\n * @memberOf _\r\n * @since 3.2.0\r\n * @category Seq\r\n * @param {*} value The value to plant.\r\n * @returns {Object} Returns the new `lodash` wrapper instance.\r\n * @example\r\n *\r\n * function square(n) {\r\n *   return n * n;\r\n * }\r\n *\r\n * var wrapped = _([1, 2]).map(square);\r\n * var other = wrapped.plant([3, 4]);\r\n *\r\n * other.value();\r\n * // => [9, 16]\r\n *\r\n * wrapped.value();\r\n * // => [1, 4]\r\n */\r\nfunction wrapperPlant(value) {\r\n  var result,\r\n      parent = this;\r\n\r\n  while (parent instanceof baseLodash) {\r\n    var clone = wrapperClone(parent);\r\n    clone.__index__ = 0;\r\n    clone.__values__ = undefined;\r\n    if (result) {\r\n      previous.__wrapped__ = clone;\r\n    } else {\r\n      result = clone;\r\n    }\r\n    var previous = clone;\r\n    parent = parent.__wrapped__;\r\n  }\r\n  previous.__wrapped__ = value;\r\n  return result;\r\n}\r\n\r\nexport default wrapperPlant;\r\n","import baseProperty from './_baseProperty.js';\r\nimport basePropertyDeep from './_basePropertyDeep.js';\r\nimport isKey from './_isKey.js';\r\nimport toKey from './_toKey.js';\r\n\r\n/**\r\n * Creates a function that returns the value at `path` of a given object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 2.4.0\r\n * @category Util\r\n * @param {Array|string} path The path of the property to get.\r\n * @returns {Function} Returns the new accessor function.\r\n * @example\r\n *\r\n * var objects = [\r\n *   { 'a': { 'b': 2 } },\r\n *   { 'a': { 'b': 1 } }\r\n * ];\r\n *\r\n * _.map(objects, _.property('a.b'));\r\n * // => [2, 1]\r\n *\r\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\r\n * // => [1, 2]\r\n */\r\nfunction property(path) {\r\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\r\n}\r\n\r\nexport default property;\r\n","import baseGet from './_baseGet.js';\r\n\r\n/**\r\n * The opposite of `_.property`; this method creates a function that returns\r\n * the value at a given path of `object`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Util\r\n * @param {Object} object The object to query.\r\n * @returns {Function} Returns the new accessor function.\r\n * @example\r\n *\r\n * var array = [0, 1, 2],\r\n *     object = { 'a': array, 'b': array, 'c': array };\r\n *\r\n * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\r\n * // => [2, 0]\r\n *\r\n * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\r\n * // => [2, 0]\r\n */\r\nfunction propertyOf(object) {\r\n  return function(path) {\r\n    return object == null ? undefined : baseGet(object, path);\r\n  };\r\n}\r\n\r\nexport default propertyOf;\r\n","import baseRest from './_baseRest.js';\r\nimport pullAll from './pullAll.js';\r\n\r\n/**\r\n * Removes all given values from `array` using\r\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n * for equality comparisons.\r\n *\r\n * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\r\n * to remove elements from an array by predicate.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 2.0.0\r\n * @category Array\r\n * @param {Array} array The array to modify.\r\n * @param {...*} [values] The values to remove.\r\n * @returns {Array} Returns `array`.\r\n * @example\r\n *\r\n * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\r\n *\r\n * _.pull(array, 'a', 'c');\r\n * console.log(array);\r\n * // => ['b', 'b']\r\n */\r\nvar pull = baseRest(pullAll);\r\n\r\nexport default pull;\r\n","import basePullAll from './_basePullAll.js';\r\n\r\n/**\r\n * This method is like `_.pull` except that it accepts an array of values to remove.\r\n *\r\n * **Note:** Unlike `_.difference`, this method mutates `array`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Array\r\n * @param {Array} array The array to modify.\r\n * @param {Array} values The values to remove.\r\n * @returns {Array} Returns `array`.\r\n * @example\r\n *\r\n * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\r\n *\r\n * _.pullAll(array, ['a', 'c']);\r\n * console.log(array);\r\n * // => ['b', 'b']\r\n */\r\nfunction pullAll(array, values) {\r\n  return (array && array.length && values && values.length)\r\n    ? basePullAll(array, values)\r\n    : array;\r\n}\r\n\r\nexport default pullAll;\r\n","import baseIteratee from './_baseIteratee.js';\r\nimport basePullAll from './_basePullAll.js';\r\n\r\n/**\r\n * This method is like `_.pullAll` except that it accepts `iteratee` which is\r\n * invoked for each element of `array` and `values` to generate the criterion\r\n * by which they're compared. The iteratee is invoked with one argument: (value).\r\n *\r\n * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Array\r\n * @param {Array} array The array to modify.\r\n * @param {Array} values The values to remove.\r\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\r\n * @returns {Array} Returns `array`.\r\n * @example\r\n *\r\n * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\r\n *\r\n * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\r\n * console.log(array);\r\n * // => [{ 'x': 2 }]\r\n */\r\nfunction pullAllBy(array, values, iteratee) {\r\n  return (array && array.length && values && values.length)\r\n    ? basePullAll(array, values, baseIteratee(iteratee, 2))\r\n    : array;\r\n}\r\n\r\nexport default pullAllBy;\r\n","import basePullAll from './_basePullAll.js';\r\n\r\n/**\r\n * This method is like `_.pullAll` except that it accepts `comparator` which\r\n * is invoked to compare elements of `array` to `values`. The comparator is\r\n * invoked with two arguments: (arrVal, othVal).\r\n *\r\n * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.6.0\r\n * @category Array\r\n * @param {Array} array The array to modify.\r\n * @param {Array} values The values to remove.\r\n * @param {Function} [comparator] The comparator invoked per element.\r\n * @returns {Array} Returns `array`.\r\n * @example\r\n *\r\n * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\r\n *\r\n * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\r\n * console.log(array);\r\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\r\n */\r\nfunction pullAllWith(array, values, comparator) {\r\n  return (array && array.length && values && values.length)\r\n    ? basePullAll(array, values, undefined, comparator)\r\n    : array;\r\n}\r\n\r\nexport default pullAllWith;\r\n","import arrayMap from './_arrayMap.js';\r\nimport baseAt from './_baseAt.js';\r\nimport basePullAt from './_basePullAt.js';\r\nimport compareAscending from './_compareAscending.js';\r\nimport flatRest from './_flatRest.js';\r\nimport isIndex from './_isIndex.js';\r\n\r\n/**\r\n * Removes elements from `array` corresponding to `indexes` and returns an\r\n * array of removed elements.\r\n *\r\n * **Note:** Unlike `_.at`, this method mutates `array`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Array\r\n * @param {Array} array The array to modify.\r\n * @param {...(number|number[])} [indexes] The indexes of elements to remove.\r\n * @returns {Array} Returns the new array of removed elements.\r\n * @example\r\n *\r\n * var array = ['a', 'b', 'c', 'd'];\r\n * var pulled = _.pullAt(array, [1, 3]);\r\n *\r\n * console.log(array);\r\n * // => ['a', 'c']\r\n *\r\n * console.log(pulled);\r\n * // => ['b', 'd']\r\n */\r\nvar pullAt = flatRest(function(array, indexes) {\r\n  var length = array == null ? 0 : array.length,\r\n      result = baseAt(array, indexes);\r\n\r\n  basePullAt(array, arrayMap(indexes, function(index) {\r\n    return isIndex(index, length) ? +index : index;\r\n  }).sort(compareAscending));\r\n\r\n  return result;\r\n});\r\n\r\nexport default pullAt;\r\n","import baseRandom from './_baseRandom.js';\r\nimport isIterateeCall from './_isIterateeCall.js';\r\nimport toFinite from './toFinite.js';\r\n\r\n/** Built-in method references without a dependency on `root`. */\r\nvar freeParseFloat = parseFloat;\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMin = Math.min,\r\n    nativeRandom = Math.random;\r\n\r\n/**\r\n * Produces a random number between the inclusive `lower` and `upper` bounds.\r\n * If only one argument is provided a number between `0` and the given number\r\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\r\n * floats, a floating-point number is returned instead of an integer.\r\n *\r\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\r\n * floating-point values which can produce unexpected results.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.7.0\r\n * @category Number\r\n * @param {number} [lower=0] The lower bound.\r\n * @param {number} [upper=1] The upper bound.\r\n * @param {boolean} [floating] Specify returning a floating-point number.\r\n * @returns {number} Returns the random number.\r\n * @example\r\n *\r\n * _.random(0, 5);\r\n * // => an integer between 0 and 5\r\n *\r\n * _.random(5);\r\n * // => also an integer between 0 and 5\r\n *\r\n * _.random(5, true);\r\n * // => a floating-point number between 0 and 5\r\n *\r\n * _.random(1.2, 5.2);\r\n * // => a floating-point number between 1.2 and 5.2\r\n */\r\nfunction random(lower, upper, floating) {\r\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\r\n    upper = floating = undefined;\r\n  }\r\n  if (floating === undefined) {\r\n    if (typeof upper == 'boolean') {\r\n      floating = upper;\r\n      upper = undefined;\r\n    }\r\n    else if (typeof lower == 'boolean') {\r\n      floating = lower;\r\n      lower = undefined;\r\n    }\r\n  }\r\n  if (lower === undefined && upper === undefined) {\r\n    lower = 0;\r\n    upper = 1;\r\n  }\r\n  else {\r\n    lower = toFinite(lower);\r\n    if (upper === undefined) {\r\n      upper = lower;\r\n      lower = 0;\r\n    } else {\r\n      upper = toFinite(upper);\r\n    }\r\n  }\r\n  if (lower > upper) {\r\n    var temp = lower;\r\n    lower = upper;\r\n    upper = temp;\r\n  }\r\n  if (floating || lower % 1 || upper % 1) {\r\n    var rand = nativeRandom();\r\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\r\n  }\r\n  return baseRandom(lower, upper);\r\n}\r\n\r\nexport default random;\r\n","import createRange from './_createRange.js';\r\n\r\n/**\r\n * Creates an array of numbers (positive and/or negative) progressing from\r\n * `start` up to, but not including, `end`. A step of `-1` is used if a negative\r\n * `start` is specified without an `end` or `step`. If `end` is not specified,\r\n * it's set to `start` with `start` then set to `0`.\r\n *\r\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\r\n * floating-point values which can produce unexpected results.\r\n *\r\n * @static\r\n * @since 0.1.0\r\n * @memberOf _\r\n * @category Util\r\n * @param {number} [start=0] The start of the range.\r\n * @param {number} end The end of the range.\r\n * @param {number} [step=1] The value to increment or decrement by.\r\n * @returns {Array} Returns the range of numbers.\r\n * @see _.inRange, _.rangeRight\r\n * @example\r\n *\r\n * _.range(4);\r\n * // => [0, 1, 2, 3]\r\n *\r\n * _.range(-4);\r\n * // => [0, -1, -2, -3]\r\n *\r\n * _.range(1, 5);\r\n * // => [1, 2, 3, 4]\r\n *\r\n * _.range(0, 20, 5);\r\n * // => [0, 5, 10, 15]\r\n *\r\n * _.range(0, -4, -1);\r\n * // => [0, -1, -2, -3]\r\n *\r\n * _.range(1, 4, 0);\r\n * // => [1, 1, 1]\r\n *\r\n * _.range(0);\r\n * // => []\r\n */\r\nvar range = createRange();\r\n\r\nexport default range;\r\n","import createRange from './_createRange.js';\r\n\r\n/**\r\n * This method is like `_.range` except that it populates values in\r\n * descending order.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Util\r\n * @param {number} [start=0] The start of the range.\r\n * @param {number} end The end of the range.\r\n * @param {number} [step=1] The value to increment or decrement by.\r\n * @returns {Array} Returns the range of numbers.\r\n * @see _.inRange, _.range\r\n * @example\r\n *\r\n * _.rangeRight(4);\r\n * // => [3, 2, 1, 0]\r\n *\r\n * _.rangeRight(-4);\r\n * // => [-3, -2, -1, 0]\r\n *\r\n * _.rangeRight(1, 5);\r\n * // => [4, 3, 2, 1]\r\n *\r\n * _.rangeRight(0, 20, 5);\r\n * // => [15, 10, 5, 0]\r\n *\r\n * _.rangeRight(0, -4, -1);\r\n * // => [-3, -2, -1, 0]\r\n *\r\n * _.rangeRight(1, 4, 0);\r\n * // => [1, 1, 1]\r\n *\r\n * _.rangeRight(0);\r\n * // => []\r\n */\r\nvar rangeRight = createRange(true);\r\n\r\nexport default rangeRight;\r\n","import createWrap from './_createWrap.js';\r\nimport flatRest from './_flatRest.js';\r\n\r\n/** Used to compose bitmasks for function metadata. */\r\nvar WRAP_REARG_FLAG = 256;\r\n\r\n/**\r\n * Creates a function that invokes `func` with arguments arranged according\r\n * to the specified `indexes` where the argument value at the first index is\r\n * provided as the first argument, the argument value at the second index is\r\n * provided as the second argument, and so on.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Function\r\n * @param {Function} func The function to rearrange arguments for.\r\n * @param {...(number|number[])} indexes The arranged argument indexes.\r\n * @returns {Function} Returns the new function.\r\n * @example\r\n *\r\n * var rearged = _.rearg(function(a, b, c) {\r\n *   return [a, b, c];\r\n * }, [2, 0, 1]);\r\n *\r\n * rearged('b', 'c', 'a')\r\n * // => ['a', 'b', 'c']\r\n */\r\nvar rearg = flatRest(function(func, indexes) {\r\n  return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\r\n});\r\n\r\nexport default rearg;\r\n","import arrayReduce from './_arrayReduce.js';\r\nimport baseEach from './_baseEach.js';\r\nimport baseIteratee from './_baseIteratee.js';\r\nimport baseReduce from './_baseReduce.js';\r\nimport isArray from './isArray.js';\r\n\r\n/**\r\n * Reduces `collection` to a value which is the accumulated result of running\r\n * each element in `collection` thru `iteratee`, where each successive\r\n * invocation is supplied the return value of the previous. If `accumulator`\r\n * is not given, the first element of `collection` is used as the initial\r\n * value. The iteratee is invoked with four arguments:\r\n * (accumulator, value, index|key, collection).\r\n *\r\n * Many lodash methods are guarded to work as iteratees for methods like\r\n * `_.reduce`, `_.reduceRight`, and `_.transform`.\r\n *\r\n * The guarded methods are:\r\n * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\r\n * and `sortBy`\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\r\n * @param {*} [accumulator] The initial value.\r\n * @returns {*} Returns the accumulated value.\r\n * @see _.reduceRight\r\n * @example\r\n *\r\n * _.reduce([1, 2], function(sum, n) {\r\n *   return sum + n;\r\n * }, 0);\r\n * // => 3\r\n *\r\n * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\r\n *   (result[value] || (result[value] = [])).push(key);\r\n *   return result;\r\n * }, {});\r\n * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\r\n */\r\nfunction reduce(collection, iteratee, accumulator) {\r\n  var func = isArray(collection) ? arrayReduce : baseReduce,\r\n      initAccum = arguments.length < 3;\r\n\r\n  return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEach);\r\n}\r\n\r\nexport default reduce;\r\n","import arrayReduceRight from './_arrayReduceRight.js';\r\nimport baseEachRight from './_baseEachRight.js';\r\nimport baseIteratee from './_baseIteratee.js';\r\nimport baseReduce from './_baseReduce.js';\r\nimport isArray from './isArray.js';\r\n\r\n/**\r\n * This method is like `_.reduce` except that it iterates over elements of\r\n * `collection` from right to left.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\r\n * @param {*} [accumulator] The initial value.\r\n * @returns {*} Returns the accumulated value.\r\n * @see _.reduce\r\n * @example\r\n *\r\n * var array = [[0, 1], [2, 3], [4, 5]];\r\n *\r\n * _.reduceRight(array, function(flattened, other) {\r\n *   return flattened.concat(other);\r\n * }, []);\r\n * // => [4, 5, 2, 3, 0, 1]\r\n */\r\nfunction reduceRight(collection, iteratee, accumulator) {\r\n  var func = isArray(collection) ? arrayReduceRight : baseReduce,\r\n      initAccum = arguments.length < 3;\r\n\r\n  return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\r\n}\r\n\r\nexport default reduceRight;\r\n","import arrayFilter from './_arrayFilter.js';\r\nimport baseFilter from './_baseFilter.js';\r\nimport baseIteratee from './_baseIteratee.js';\r\nimport isArray from './isArray.js';\r\nimport negate from './negate.js';\r\n\r\n/**\r\n * The opposite of `_.filter`; this method returns the elements of `collection`\r\n * that `predicate` does **not** return truthy for.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\r\n * @returns {Array} Returns the new filtered array.\r\n * @see _.filter\r\n * @example\r\n *\r\n * var users = [\r\n *   { 'user': 'barney', 'age': 36, 'active': false },\r\n *   { 'user': 'fred',   'age': 40, 'active': true }\r\n * ];\r\n *\r\n * _.reject(users, function(o) { return !o.active; });\r\n * // => objects for ['fred']\r\n *\r\n * // The `_.matches` iteratee shorthand.\r\n * _.reject(users, { 'age': 40, 'active': true });\r\n * // => objects for ['barney']\r\n *\r\n * // The `_.matchesProperty` iteratee shorthand.\r\n * _.reject(users, ['active', false]);\r\n * // => objects for ['fred']\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.reject(users, 'active');\r\n * // => objects for ['barney']\r\n */\r\nfunction reject(collection, predicate) {\r\n  var func = isArray(collection) ? arrayFilter : baseFilter;\r\n  return func(collection, negate(baseIteratee(predicate, 3)));\r\n}\r\n\r\nexport default reject;\r\n","import baseIteratee from './_baseIteratee.js';\r\nimport basePullAt from './_basePullAt.js';\r\n\r\n/**\r\n * Removes all elements from `array` that `predicate` returns truthy for\r\n * and returns an array of the removed elements. The predicate is invoked\r\n * with three arguments: (value, index, array).\r\n *\r\n * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\r\n * to pull elements from an array by value.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 2.0.0\r\n * @category Array\r\n * @param {Array} array The array to modify.\r\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\r\n * @returns {Array} Returns the new array of removed elements.\r\n * @example\r\n *\r\n * var array = [1, 2, 3, 4];\r\n * var evens = _.remove(array, function(n) {\r\n *   return n % 2 == 0;\r\n * });\r\n *\r\n * console.log(array);\r\n * // => [1, 3]\r\n *\r\n * console.log(evens);\r\n * // => [2, 4]\r\n */\r\nfunction remove(array, predicate) {\r\n  var result = [];\r\n  if (!(array && array.length)) {\r\n    return result;\r\n  }\r\n  var index = -1,\r\n      indexes = [],\r\n      length = array.length;\r\n\r\n  predicate = baseIteratee(predicate, 3);\r\n  while (++index < length) {\r\n    var value = array[index];\r\n    if (predicate(value, index, array)) {\r\n      result.push(value);\r\n      indexes.push(index);\r\n    }\r\n  }\r\n  basePullAt(array, indexes);\r\n  return result;\r\n}\r\n\r\nexport default remove;\r\n","import baseRepeat from './_baseRepeat.js';\r\nimport isIterateeCall from './_isIterateeCall.js';\r\nimport toInteger from './toInteger.js';\r\nimport toString from './toString.js';\r\n\r\n/**\r\n * Repeats the given string `n` times.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category String\r\n * @param {string} [string=''] The string to repeat.\r\n * @param {number} [n=1] The number of times to repeat the string.\r\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\r\n * @returns {string} Returns the repeated string.\r\n * @example\r\n *\r\n * _.repeat('*', 3);\r\n * // => '***'\r\n *\r\n * _.repeat('abc', 2);\r\n * // => 'abcabc'\r\n *\r\n * _.repeat('abc', 0);\r\n * // => ''\r\n */\r\nfunction repeat(string, n, guard) {\r\n  if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\r\n    n = 1;\r\n  } else {\r\n    n = toInteger(n);\r\n  }\r\n  return baseRepeat(toString(string), n);\r\n}\r\n\r\nexport default repeat;\r\n","import toString from './toString.js';\r\n\r\n/**\r\n * Replaces matches for `pattern` in `string` with `replacement`.\r\n *\r\n * **Note:** This method is based on\r\n * [`String#replace`](https://mdn.io/String/replace).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category String\r\n * @param {string} [string=''] The string to modify.\r\n * @param {RegExp|string} pattern The pattern to replace.\r\n * @param {Function|string} replacement The match replacement.\r\n * @returns {string} Returns the modified string.\r\n * @example\r\n *\r\n * _.replace('Hi Fred', 'Fred', 'Barney');\r\n * // => 'Hi Barney'\r\n */\r\nfunction replace() {\r\n  var args = arguments,\r\n      string = toString(args[0]);\r\n\r\n  return args.length < 3 ? string : string.replace(args[1], args[2]);\r\n}\r\n\r\nexport default replace;\r\n","import baseRest from './_baseRest.js';\r\nimport toInteger from './toInteger.js';\r\n\r\n/** Error message constants. */\r\nvar FUNC_ERROR_TEXT = 'Expected a function';\r\n\r\n/**\r\n * Creates a function that invokes `func` with the `this` binding of the\r\n * created function and arguments from `start` and beyond provided as\r\n * an array.\r\n *\r\n * **Note:** This method is based on the\r\n * [rest parameter](https://mdn.io/rest_parameters).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Function\r\n * @param {Function} func The function to apply a rest parameter to.\r\n * @param {number} [start=func.length-1] The start position of the rest parameter.\r\n * @returns {Function} Returns the new function.\r\n * @example\r\n *\r\n * var say = _.rest(function(what, names) {\r\n *   return what + ' ' + _.initial(names).join(', ') +\r\n *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\r\n * });\r\n *\r\n * say('hello', 'fred', 'barney', 'pebbles');\r\n * // => 'hello fred, barney, & pebbles'\r\n */\r\nfunction rest(func, start) {\r\n  if (typeof func != 'function') {\r\n    throw new TypeError(FUNC_ERROR_TEXT);\r\n  }\r\n  start = start === undefined ? start : toInteger(start);\r\n  return baseRest(func, start);\r\n}\r\n\r\nexport default rest;\r\n","import castPath from './_castPath.js';\r\nimport isFunction from './isFunction.js';\r\nimport toKey from './_toKey.js';\r\n\r\n/**\r\n * This method is like `_.get` except that if the resolved value is a\r\n * function it's invoked with the `this` binding of its parent object and\r\n * its result is returned.\r\n *\r\n * @static\r\n * @since 0.1.0\r\n * @memberOf _\r\n * @category Object\r\n * @param {Object} object The object to query.\r\n * @param {Array|string} path The path of the property to resolve.\r\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\r\n * @returns {*} Returns the resolved value.\r\n * @example\r\n *\r\n * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\r\n *\r\n * _.result(object, 'a[0].b.c1');\r\n * // => 3\r\n *\r\n * _.result(object, 'a[0].b.c2');\r\n * // => 4\r\n *\r\n * _.result(object, 'a[0].b.c3', 'default');\r\n * // => 'default'\r\n *\r\n * _.result(object, 'a[0].b.c3', _.constant('default'));\r\n * // => 'default'\r\n */\r\nfunction result(object, path, defaultValue) {\r\n  path = castPath(path, object);\r\n\r\n  var index = -1,\r\n      length = path.length;\r\n\r\n  // Ensure the loop is entered when path is empty.\r\n  if (!length) {\r\n    length = 1;\r\n    object = undefined;\r\n  }\r\n  while (++index < length) {\r\n    var value = object == null ? undefined : object[toKey(path[index])];\r\n    if (value === undefined) {\r\n      index = length;\r\n      value = defaultValue;\r\n    }\r\n    object = isFunction(value) ? value.call(object) : value;\r\n  }\r\n  return object;\r\n}\r\n\r\nexport default result;\r\n","/** Used for built-in method references. */\r\nvar arrayProto = Array.prototype;\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeReverse = arrayProto.reverse;\r\n\r\n/**\r\n * Reverses `array` so that the first element becomes the last, the second\r\n * element becomes the second to last, and so on.\r\n *\r\n * **Note:** This method mutates `array` and is based on\r\n * [`Array#reverse`](https://mdn.io/Array/reverse).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Array\r\n * @param {Array} array The array to modify.\r\n * @returns {Array} Returns `array`.\r\n * @example\r\n *\r\n * var array = [1, 2, 3];\r\n *\r\n * _.reverse(array);\r\n * // => [3, 2, 1]\r\n *\r\n * console.log(array);\r\n * // => [3, 2, 1]\r\n */\r\nfunction reverse(array) {\r\n  return array == null ? array : nativeReverse.call(array);\r\n}\r\n\r\nexport default reverse;\r\n","import createRound from './_createRound.js';\r\n\r\n/**\r\n * Computes `number` rounded to `precision`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.10.0\r\n * @category Math\r\n * @param {number} number The number to round.\r\n * @param {number} [precision=0] The precision to round to.\r\n * @returns {number} Returns the rounded number.\r\n * @example\r\n *\r\n * _.round(4.006);\r\n * // => 4\r\n *\r\n * _.round(4.006, 2);\r\n * // => 4.01\r\n *\r\n * _.round(4060, -2);\r\n * // => 4100\r\n */\r\nvar round = createRound('round');\r\n\r\nexport default round;\r\n","import arraySample from './_arraySample.js';\r\nimport baseSample from './_baseSample.js';\r\nimport isArray from './isArray.js';\r\n\r\n/**\r\n * Gets a random element from `collection`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 2.0.0\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to sample.\r\n * @returns {*} Returns the random element.\r\n * @example\r\n *\r\n * _.sample([1, 2, 3, 4]);\r\n * // => 2\r\n */\r\nfunction sample(collection) {\r\n  var func = isArray(collection) ? arraySample : baseSample;\r\n  return func(collection);\r\n}\r\n\r\nexport default sample;\r\n","import arraySampleSize from './_arraySampleSize.js';\r\nimport baseSampleSize from './_baseSampleSize.js';\r\nimport isArray from './isArray.js';\r\nimport isIterateeCall from './_isIterateeCall.js';\r\nimport toInteger from './toInteger.js';\r\n\r\n/**\r\n * Gets `n` random elements at unique keys from `collection` up to the\r\n * size of `collection`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to sample.\r\n * @param {number} [n=1] The number of elements to sample.\r\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\r\n * @returns {Array} Returns the random elements.\r\n * @example\r\n *\r\n * _.sampleSize([1, 2, 3], 2);\r\n * // => [3, 1]\r\n *\r\n * _.sampleSize([1, 2, 3], 4);\r\n * // => [2, 3, 1]\r\n */\r\nfunction sampleSize(collection, n, guard) {\r\n  if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\r\n    n = 1;\r\n  } else {\r\n    n = toInteger(n);\r\n  }\r\n  var func = isArray(collection) ? arraySampleSize : baseSampleSize;\r\n  return func(collection, n);\r\n}\r\n\r\nexport default sampleSize;\r\n","import at from './wrapperAt.js';\r\nimport chain from './chain.js';\r\nimport commit from './commit.js';\r\nimport lodash from './wrapperLodash.js';\r\nimport next from './next.js';\r\nimport plant from './plant.js';\r\nimport reverse from './wrapperReverse.js';\r\nimport tap from './tap.js';\r\nimport thru from './thru.js';\r\nimport toIterator from './toIterator.js';\r\nimport toJSON from './toJSON.js';\r\nimport value from './wrapperValue.js';\r\nimport valueOf from './valueOf.js';\r\nimport wrapperChain from './wrapperChain.js';\r\n\r\nexport default {\r\n  at, chain, commit, lodash, next,\r\n  plant, reverse, tap, thru, toIterator,\r\n  toJSON, value, valueOf, wrapperChain\r\n};\r\n","export { default as at } from './wrapperAt.js';\r\nexport { default as chain } from './chain.js';\r\nexport { default as commit } from './commit.js';\r\nexport { default as lodash } from './wrapperLodash.js';\r\nexport { default as next } from './next.js';\r\nexport { default as plant } from './plant.js';\r\nexport { default as reverse } from './wrapperReverse.js';\r\nexport { default as tap } from './tap.js';\r\nexport { default as thru } from './thru.js';\r\nexport { default as toIterator } from './toIterator.js';\r\nexport { default as toJSON } from './toJSON.js';\r\nexport { default as value } from './wrapperValue.js';\r\nexport { default as valueOf } from './valueOf.js';\r\nexport { default as wrapperChain } from './wrapperChain.js';\r\nexport { default } from './seq.default.js';\r\n","import baseSet from './_baseSet.js';\r\n\r\n/**\r\n * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\r\n * it's created. Arrays are created for missing index properties while objects\r\n * are created for all other missing properties. Use `_.setWith` to customize\r\n * `path` creation.\r\n *\r\n * **Note:** This method mutates `object`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.7.0\r\n * @category Object\r\n * @param {Object} object The object to modify.\r\n * @param {Array|string} path The path of the property to set.\r\n * @param {*} value The value to set.\r\n * @returns {Object} Returns `object`.\r\n * @example\r\n *\r\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\r\n *\r\n * _.set(object, 'a[0].b.c', 4);\r\n * console.log(object.a[0].b.c);\r\n * // => 4\r\n *\r\n * _.set(object, ['x', '0', 'y', 'z'], 5);\r\n * console.log(object.x[0].y.z);\r\n * // => 5\r\n */\r\nfunction set(object, path, value) {\r\n  return object == null ? object : baseSet(object, path, value);\r\n}\r\n\r\nexport default set;\r\n","import baseSet from './_baseSet.js';\r\n\r\n/**\r\n * This method is like `_.set` except that it accepts `customizer` which is\r\n * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\r\n * path creation is handled by the method instead. The `customizer` is invoked\r\n * with three arguments: (nsValue, key, nsObject).\r\n *\r\n * **Note:** This method mutates `object`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Object\r\n * @param {Object} object The object to modify.\r\n * @param {Array|string} path The path of the property to set.\r\n * @param {*} value The value to set.\r\n * @param {Function} [customizer] The function to customize assigned values.\r\n * @returns {Object} Returns `object`.\r\n * @example\r\n *\r\n * var object = {};\r\n *\r\n * _.setWith(object, '[0][1]', 'a', Object);\r\n * // => { '0': { '1': 'a' } }\r\n */\r\nfunction setWith(object, path, value, customizer) {\r\n  customizer = typeof customizer == 'function' ? customizer : undefined;\r\n  return object == null ? object : baseSet(object, path, value, customizer);\r\n}\r\n\r\nexport default setWith;\r\n","import arrayShuffle from './_arrayShuffle.js';\r\nimport baseShuffle from './_baseShuffle.js';\r\nimport isArray from './isArray.js';\r\n\r\n/**\r\n * Creates an array of shuffled values, using a version of the\r\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to shuffle.\r\n * @returns {Array} Returns the new shuffled array.\r\n * @example\r\n *\r\n * _.shuffle([1, 2, 3, 4]);\r\n * // => [4, 1, 3, 2]\r\n */\r\nfunction shuffle(collection) {\r\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\r\n  return func(collection);\r\n}\r\n\r\nexport default shuffle;\r\n","import baseKeys from './_baseKeys.js';\r\nimport getTag from './_getTag.js';\r\nimport isArrayLike from './isArrayLike.js';\r\nimport isString from './isString.js';\r\nimport stringSize from './_stringSize.js';\r\n\r\n/** `Object#toString` result references. */\r\nvar mapTag = '[object Map]',\r\n    setTag = '[object Set]';\r\n\r\n/**\r\n * Gets the size of `collection` by returning its length for array-like\r\n * values or the number of own enumerable string keyed properties for objects.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Collection\r\n * @param {Array|Object|string} collection The collection to inspect.\r\n * @returns {number} Returns the collection size.\r\n * @example\r\n *\r\n * _.size([1, 2, 3]);\r\n * // => 3\r\n *\r\n * _.size({ 'a': 1, 'b': 2 });\r\n * // => 2\r\n *\r\n * _.size('pebbles');\r\n * // => 7\r\n */\r\nfunction size(collection) {\r\n  if (collection == null) {\r\n    return 0;\r\n  }\r\n  if (isArrayLike(collection)) {\r\n    return isString(collection) ? stringSize(collection) : collection.length;\r\n  }\r\n  var tag = getTag(collection);\r\n  if (tag == mapTag || tag == setTag) {\r\n    return collection.size;\r\n  }\r\n  return baseKeys(collection).length;\r\n}\r\n\r\nexport default size;\r\n","import baseSlice from './_baseSlice.js';\r\nimport isIterateeCall from './_isIterateeCall.js';\r\nimport toInteger from './toInteger.js';\r\n\r\n/**\r\n * Creates a slice of `array` from `start` up to, but not including, `end`.\r\n *\r\n * **Note:** This method is used instead of\r\n * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\r\n * returned.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Array\r\n * @param {Array} array The array to slice.\r\n * @param {number} [start=0] The start position.\r\n * @param {number} [end=array.length] The end position.\r\n * @returns {Array} Returns the slice of `array`.\r\n */\r\nfunction slice(array, start, end) {\r\n  var length = array == null ? 0 : array.length;\r\n  if (!length) {\r\n    return [];\r\n  }\r\n  if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\r\n    start = 0;\r\n    end = length;\r\n  }\r\n  else {\r\n    start = start == null ? 0 : toInteger(start);\r\n    end = end === undefined ? length : toInteger(end);\r\n  }\r\n  return baseSlice(array, start, end);\r\n}\r\n\r\nexport default slice;\r\n","import createCompounder from './_createCompounder.js';\r\n\r\n/**\r\n * Converts `string` to\r\n * [snake case](https://en.wikipedia.org/wiki/Snake_case).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category String\r\n * @param {string} [string=''] The string to convert.\r\n * @returns {string} Returns the snake cased string.\r\n * @example\r\n *\r\n * _.snakeCase('Foo Bar');\r\n * // => 'foo_bar'\r\n *\r\n * _.snakeCase('fooBar');\r\n * // => 'foo_bar'\r\n *\r\n * _.snakeCase('--FOO-BAR--');\r\n * // => 'foo_bar'\r\n */\r\nvar snakeCase = createCompounder(function(result, word, index) {\r\n  return result + (index ? '_' : '') + word.toLowerCase();\r\n});\r\n\r\nexport default snakeCase;\r\n","import arraySome from './_arraySome.js';\r\nimport baseIteratee from './_baseIteratee.js';\r\nimport baseSome from './_baseSome.js';\r\nimport isArray from './isArray.js';\r\nimport isIterateeCall from './_isIterateeCall.js';\r\n\r\n/**\r\n * Checks if `predicate` returns truthy for **any** element of `collection`.\r\n * Iteration is stopped once `predicate` returns truthy. The predicate is\r\n * invoked with three arguments: (value, index|key, collection).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\r\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\r\n * @returns {boolean} Returns `true` if any element passes the predicate check,\r\n *  else `false`.\r\n * @example\r\n *\r\n * _.some([null, 0, 'yes', false], Boolean);\r\n * // => true\r\n *\r\n * var users = [\r\n *   { 'user': 'barney', 'active': true },\r\n *   { 'user': 'fred',   'active': false }\r\n * ];\r\n *\r\n * // The `_.matches` iteratee shorthand.\r\n * _.some(users, { 'user': 'barney', 'active': false });\r\n * // => false\r\n *\r\n * // The `_.matchesProperty` iteratee shorthand.\r\n * _.some(users, ['active', false]);\r\n * // => true\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.some(users, 'active');\r\n * // => true\r\n */\r\nfunction some(collection, predicate, guard) {\r\n  var func = isArray(collection) ? arraySome : baseSome;\r\n  if (guard && isIterateeCall(collection, predicate, guard)) {\r\n    predicate = undefined;\r\n  }\r\n  return func(collection, baseIteratee(predicate, 3));\r\n}\r\n\r\nexport default some;\r\n","import baseFlatten from './_baseFlatten.js';\r\nimport baseOrderBy from './_baseOrderBy.js';\r\nimport baseRest from './_baseRest.js';\r\nimport isIterateeCall from './_isIterateeCall.js';\r\n\r\n/**\r\n * Creates an array of elements, sorted in ascending order by the results of\r\n * running each element in a collection thru each iteratee. This method\r\n * performs a stable sort, that is, it preserves the original sort order of\r\n * equal elements. The iteratees are invoked with one argument: (value).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\r\n *  The iteratees to sort by.\r\n * @returns {Array} Returns the new sorted array.\r\n * @example\r\n *\r\n * var users = [\r\n *   { 'user': 'fred',   'age': 48 },\r\n *   { 'user': 'barney', 'age': 36 },\r\n *   { 'user': 'fred',   'age': 40 },\r\n *   { 'user': 'barney', 'age': 34 }\r\n * ];\r\n *\r\n * _.sortBy(users, [function(o) { return o.user; }]);\r\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\r\n *\r\n * _.sortBy(users, ['user', 'age']);\r\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\r\n */\r\nvar sortBy = baseRest(function(collection, iteratees) {\r\n  if (collection == null) {\r\n    return [];\r\n  }\r\n  var length = iteratees.length;\r\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\r\n    iteratees = [];\r\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\r\n    iteratees = [iteratees[0]];\r\n  }\r\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\r\n});\r\n\r\nexport default sortBy;\r\n","import baseSortedIndex from './_baseSortedIndex.js';\r\n\r\n/**\r\n * Uses a binary search to determine the lowest index at which `value`\r\n * should be inserted into `array` in order to maintain its sort order.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Array\r\n * @param {Array} array The sorted array to inspect.\r\n * @param {*} value The value to evaluate.\r\n * @returns {number} Returns the index at which `value` should be inserted\r\n *  into `array`.\r\n * @example\r\n *\r\n * _.sortedIndex([30, 50], 40);\r\n * // => 1\r\n */\r\nfunction sortedIndex(array, value) {\r\n  return baseSortedIndex(array, value);\r\n}\r\n\r\nexport default sortedIndex;\r\n","import baseIteratee from './_baseIteratee.js';\r\nimport baseSortedIndexBy from './_baseSortedIndexBy.js';\r\n\r\n/**\r\n * This method is like `_.sortedIndex` except that it accepts `iteratee`\r\n * which is invoked for `value` and each element of `array` to compute their\r\n * sort ranking. The iteratee is invoked with one argument: (value).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Array\r\n * @param {Array} array The sorted array to inspect.\r\n * @param {*} value The value to evaluate.\r\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\r\n * @returns {number} Returns the index at which `value` should be inserted\r\n *  into `array`.\r\n * @example\r\n *\r\n * var objects = [{ 'x': 4 }, { 'x': 5 }];\r\n *\r\n * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\r\n * // => 0\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\r\n * // => 0\r\n */\r\nfunction sortedIndexBy(array, value, iteratee) {\r\n  return baseSortedIndexBy(array, value, baseIteratee(iteratee, 2));\r\n}\r\n\r\nexport default sortedIndexBy;\r\n","import baseSortedIndex from './_baseSortedIndex.js';\r\nimport eq from './eq.js';\r\n\r\n/**\r\n * This method is like `_.indexOf` except that it performs a binary\r\n * search on a sorted `array`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Array\r\n * @param {Array} array The array to inspect.\r\n * @param {*} value The value to search for.\r\n * @returns {number} Returns the index of the matched value, else `-1`.\r\n * @example\r\n *\r\n * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\r\n * // => 1\r\n */\r\nfunction sortedIndexOf(array, value) {\r\n  var length = array == null ? 0 : array.length;\r\n  if (length) {\r\n    var index = baseSortedIndex(array, value);\r\n    if (index < length && eq(array[index], value)) {\r\n      return index;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\nexport default sortedIndexOf;\r\n","import baseSortedIndex from './_baseSortedIndex.js';\r\n\r\n/**\r\n * This method is like `_.sortedIndex` except that it returns the highest\r\n * index at which `value` should be inserted into `array` in order to\r\n * maintain its sort order.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Array\r\n * @param {Array} array The sorted array to inspect.\r\n * @param {*} value The value to evaluate.\r\n * @returns {number} Returns the index at which `value` should be inserted\r\n *  into `array`.\r\n * @example\r\n *\r\n * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\r\n * // => 4\r\n */\r\nfunction sortedLastIndex(array, value) {\r\n  return baseSortedIndex(array, value, true);\r\n}\r\n\r\nexport default sortedLastIndex;\r\n","import baseIteratee from './_baseIteratee.js';\r\nimport baseSortedIndexBy from './_baseSortedIndexBy.js';\r\n\r\n/**\r\n * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\r\n * which is invoked for `value` and each element of `array` to compute their\r\n * sort ranking. The iteratee is invoked with one argument: (value).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Array\r\n * @param {Array} array The sorted array to inspect.\r\n * @param {*} value The value to evaluate.\r\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\r\n * @returns {number} Returns the index at which `value` should be inserted\r\n *  into `array`.\r\n * @example\r\n *\r\n * var objects = [{ 'x': 4 }, { 'x': 5 }];\r\n *\r\n * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\r\n * // => 1\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\r\n * // => 1\r\n */\r\nfunction sortedLastIndexBy(array, value, iteratee) {\r\n  return baseSortedIndexBy(array, value, baseIteratee(iteratee, 2), true);\r\n}\r\n\r\nexport default sortedLastIndexBy;\r\n","import baseSortedIndex from './_baseSortedIndex.js';\r\nimport eq from './eq.js';\r\n\r\n/**\r\n * This method is like `_.lastIndexOf` except that it performs a binary\r\n * search on a sorted `array`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Array\r\n * @param {Array} array The array to inspect.\r\n * @param {*} value The value to search for.\r\n * @returns {number} Returns the index of the matched value, else `-1`.\r\n * @example\r\n *\r\n * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\r\n * // => 3\r\n */\r\nfunction sortedLastIndexOf(array, value) {\r\n  var length = array == null ? 0 : array.length;\r\n  if (length) {\r\n    var index = baseSortedIndex(array, value, true) - 1;\r\n    if (eq(array[index], value)) {\r\n      return index;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\nexport default sortedLastIndexOf;\r\n","import baseSortedUniq from './_baseSortedUniq.js';\r\n\r\n/**\r\n * This method is like `_.uniq` except that it's designed and optimized\r\n * for sorted arrays.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Array\r\n * @param {Array} array The array to inspect.\r\n * @returns {Array} Returns the new duplicate free array.\r\n * @example\r\n *\r\n * _.sortedUniq([1, 1, 2]);\r\n * // => [1, 2]\r\n */\r\nfunction sortedUniq(array) {\r\n  return (array && array.length)\r\n    ? baseSortedUniq(array)\r\n    : [];\r\n}\r\n\r\nexport default sortedUniq;\r\n","import baseIteratee from './_baseIteratee.js';\r\nimport baseSortedUniq from './_baseSortedUniq.js';\r\n\r\n/**\r\n * This method is like `_.uniqBy` except that it's designed and optimized\r\n * for sorted arrays.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Array\r\n * @param {Array} array The array to inspect.\r\n * @param {Function} [iteratee] The iteratee invoked per element.\r\n * @returns {Array} Returns the new duplicate free array.\r\n * @example\r\n *\r\n * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\r\n * // => [1.1, 2.3]\r\n */\r\nfunction sortedUniqBy(array, iteratee) {\r\n  return (array && array.length)\r\n    ? baseSortedUniq(array, baseIteratee(iteratee, 2))\r\n    : [];\r\n}\r\n\r\nexport default sortedUniqBy;\r\n","import baseToString from './_baseToString.js';\r\nimport castSlice from './_castSlice.js';\r\nimport hasUnicode from './_hasUnicode.js';\r\nimport isIterateeCall from './_isIterateeCall.js';\r\nimport isRegExp from './isRegExp.js';\r\nimport stringToArray from './_stringToArray.js';\r\nimport toString from './toString.js';\r\n\r\n/** Used as references for the maximum length and index of an array. */\r\nvar MAX_ARRAY_LENGTH = 4294967295;\r\n\r\n/**\r\n * Splits `string` by `separator`.\r\n *\r\n * **Note:** This method is based on\r\n * [`String#split`](https://mdn.io/String/split).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category String\r\n * @param {string} [string=''] The string to split.\r\n * @param {RegExp|string} separator The separator pattern to split by.\r\n * @param {number} [limit] The length to truncate results to.\r\n * @returns {Array} Returns the string segments.\r\n * @example\r\n *\r\n * _.split('a-b-c', '-', 2);\r\n * // => ['a', 'b']\r\n */\r\nfunction split(string, separator, limit) {\r\n  if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\r\n    separator = limit = undefined;\r\n  }\r\n  limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\r\n  if (!limit) {\r\n    return [];\r\n  }\r\n  string = toString(string);\r\n  if (string && (\r\n        typeof separator == 'string' ||\r\n        (separator != null && !isRegExp(separator))\r\n      )) {\r\n    separator = baseToString(separator);\r\n    if (!separator && hasUnicode(string)) {\r\n      return castSlice(stringToArray(string), 0, limit);\r\n    }\r\n  }\r\n  return string.split(separator, limit);\r\n}\r\n\r\nexport default split;\r\n","import apply from './_apply.js';\r\nimport arrayPush from './_arrayPush.js';\r\nimport baseRest from './_baseRest.js';\r\nimport castSlice from './_castSlice.js';\r\nimport toInteger from './toInteger.js';\r\n\r\n/** Error message constants. */\r\nvar FUNC_ERROR_TEXT = 'Expected a function';\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMax = Math.max;\r\n\r\n/**\r\n * Creates a function that invokes `func` with the `this` binding of the\r\n * create function and an array of arguments much like\r\n * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\r\n *\r\n * **Note:** This method is based on the\r\n * [spread operator](https://mdn.io/spread_operator).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.2.0\r\n * @category Function\r\n * @param {Function} func The function to spread arguments over.\r\n * @param {number} [start=0] The start position of the spread.\r\n * @returns {Function} Returns the new function.\r\n * @example\r\n *\r\n * var say = _.spread(function(who, what) {\r\n *   return who + ' says ' + what;\r\n * });\r\n *\r\n * say(['fred', 'hello']);\r\n * // => 'fred says hello'\r\n *\r\n * var numbers = Promise.all([\r\n *   Promise.resolve(40),\r\n *   Promise.resolve(36)\r\n * ]);\r\n *\r\n * numbers.then(_.spread(function(x, y) {\r\n *   return x + y;\r\n * }));\r\n * // => a Promise of 76\r\n */\r\nfunction spread(func, start) {\r\n  if (typeof func != 'function') {\r\n    throw new TypeError(FUNC_ERROR_TEXT);\r\n  }\r\n  start = start == null ? 0 : nativeMax(toInteger(start), 0);\r\n  return baseRest(function(args) {\r\n    var array = args[start],\r\n        otherArgs = castSlice(args, 0, start);\r\n\r\n    if (array) {\r\n      arrayPush(otherArgs, array);\r\n    }\r\n    return apply(func, this, otherArgs);\r\n  });\r\n}\r\n\r\nexport default spread;\r\n","import createCompounder from './_createCompounder.js';\r\nimport upperFirst from './upperFirst.js';\r\n\r\n/**\r\n * Converts `string` to\r\n * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.1.0\r\n * @category String\r\n * @param {string} [string=''] The string to convert.\r\n * @returns {string} Returns the start cased string.\r\n * @example\r\n *\r\n * _.startCase('--foo-bar--');\r\n * // => 'Foo Bar'\r\n *\r\n * _.startCase('fooBar');\r\n * // => 'Foo Bar'\r\n *\r\n * _.startCase('__FOO_BAR__');\r\n * // => 'FOO BAR'\r\n */\r\nvar startCase = createCompounder(function(result, word, index) {\r\n  return result + (index ? ' ' : '') + upperFirst(word);\r\n});\r\n\r\nexport default startCase;\r\n","import baseClamp from './_baseClamp.js';\r\nimport baseToString from './_baseToString.js';\r\nimport toInteger from './toInteger.js';\r\nimport toString from './toString.js';\r\n\r\n/**\r\n * Checks if `string` starts with the given target string.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category String\r\n * @param {string} [string=''] The string to inspect.\r\n * @param {string} [target] The string to search for.\r\n * @param {number} [position=0] The position to search from.\r\n * @returns {boolean} Returns `true` if `string` starts with `target`,\r\n *  else `false`.\r\n * @example\r\n *\r\n * _.startsWith('abc', 'a');\r\n * // => true\r\n *\r\n * _.startsWith('abc', 'b');\r\n * // => false\r\n *\r\n * _.startsWith('abc', 'b', 1);\r\n * // => true\r\n */\r\nfunction startsWith(string, target, position) {\r\n  string = toString(string);\r\n  position = position == null\r\n    ? 0\r\n    : baseClamp(toInteger(position), 0, string.length);\r\n\r\n  target = baseToString(target);\r\n  return string.slice(position, position + target.length) == target;\r\n}\r\n\r\nexport default startsWith;\r\n","import camelCase from './camelCase.js';\r\nimport capitalize from './capitalize.js';\r\nimport deburr from './deburr.js';\r\nimport endsWith from './endsWith.js';\r\nimport escape from './escape.js';\r\nimport escapeRegExp from './escapeRegExp.js';\r\nimport kebabCase from './kebabCase.js';\r\nimport lowerCase from './lowerCase.js';\r\nimport lowerFirst from './lowerFirst.js';\r\nimport pad from './pad.js';\r\nimport padEnd from './padEnd.js';\r\nimport padStart from './padStart.js';\r\nimport parseInt from './parseInt.js';\r\nimport repeat from './repeat.js';\r\nimport replace from './replace.js';\r\nimport snakeCase from './snakeCase.js';\r\nimport split from './split.js';\r\nimport startCase from './startCase.js';\r\nimport startsWith from './startsWith.js';\r\nimport template from './template.js';\r\nimport templateSettings from './templateSettings.js';\r\nimport toLower from './toLower.js';\r\nimport toUpper from './toUpper.js';\r\nimport trim from './trim.js';\r\nimport trimEnd from './trimEnd.js';\r\nimport trimStart from './trimStart.js';\r\nimport truncate from './truncate.js';\r\nimport unescape from './unescape.js';\r\nimport upperCase from './upperCase.js';\r\nimport upperFirst from './upperFirst.js';\r\nimport words from './words.js';\r\n\r\nexport default {\r\n  camelCase, capitalize, deburr, endsWith, escape,\r\n  escapeRegExp, kebabCase, lowerCase, lowerFirst, pad,\r\n  padEnd, padStart, parseInt, repeat, replace,\r\n  snakeCase, split, startCase, startsWith, template,\r\n  templateSettings, toLower, toUpper, trim, trimEnd,\r\n  trimStart, truncate, unescape, upperCase, upperFirst,\r\n  words\r\n};\r\n","export { default as camelCase } from './camelCase.js';\r\nexport { default as capitalize } from './capitalize.js';\r\nexport { default as deburr } from './deburr.js';\r\nexport { default as endsWith } from './endsWith.js';\r\nexport { default as escape } from './escape.js';\r\nexport { default as escapeRegExp } from './escapeRegExp.js';\r\nexport { default as kebabCase } from './kebabCase.js';\r\nexport { default as lowerCase } from './lowerCase.js';\r\nexport { default as lowerFirst } from './lowerFirst.js';\r\nexport { default as pad } from './pad.js';\r\nexport { default as padEnd } from './padEnd.js';\r\nexport { default as padStart } from './padStart.js';\r\nexport { default as parseInt } from './parseInt.js';\r\nexport { default as repeat } from './repeat.js';\r\nexport { default as replace } from './replace.js';\r\nexport { default as snakeCase } from './snakeCase.js';\r\nexport { default as split } from './split.js';\r\nexport { default as startCase } from './startCase.js';\r\nexport { default as startsWith } from './startsWith.js';\r\nexport { default as template } from './template.js';\r\nexport { default as templateSettings } from './templateSettings.js';\r\nexport { default as toLower } from './toLower.js';\r\nexport { default as toUpper } from './toUpper.js';\r\nexport { default as trim } from './trim.js';\r\nexport { default as trimEnd } from './trimEnd.js';\r\nexport { default as trimStart } from './trimStart.js';\r\nexport { default as truncate } from './truncate.js';\r\nexport { default as unescape } from './unescape.js';\r\nexport { default as upperCase } from './upperCase.js';\r\nexport { default as upperFirst } from './upperFirst.js';\r\nexport { default as words } from './words.js';\r\nexport { default } from './string.default.js';\r\n","/**\r\n * This method returns a new empty array.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.13.0\r\n * @category Util\r\n * @returns {Array} Returns the new empty array.\r\n * @example\r\n *\r\n * var arrays = _.times(2, _.stubArray);\r\n *\r\n * console.log(arrays);\r\n * // => [[], []]\r\n *\r\n * console.log(arrays[0] === arrays[1]);\r\n * // => false\r\n */\r\nfunction stubArray() {\r\n  return [];\r\n}\r\n\r\nexport default stubArray;\r\n","/**\r\n * This method returns `false`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.13.0\r\n * @category Util\r\n * @returns {boolean} Returns `false`.\r\n * @example\r\n *\r\n * _.times(2, _.stubFalse);\r\n * // => [false, false]\r\n */\r\nfunction stubFalse() {\r\n  return false;\r\n}\r\n\r\nexport default stubFalse;\r\n","/**\r\n * This method returns a new empty object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.13.0\r\n * @category Util\r\n * @returns {Object} Returns the new empty object.\r\n * @example\r\n *\r\n * var objects = _.times(2, _.stubObject);\r\n *\r\n * console.log(objects);\r\n * // => [{}, {}]\r\n *\r\n * console.log(objects[0] === objects[1]);\r\n * // => false\r\n */\r\nfunction stubObject() {\r\n  return {};\r\n}\r\n\r\nexport default stubObject;\r\n","/**\r\n * This method returns an empty string.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.13.0\r\n * @category Util\r\n * @returns {string} Returns the empty string.\r\n * @example\r\n *\r\n * _.times(2, _.stubString);\r\n * // => ['', '']\r\n */\r\nfunction stubString() {\r\n  return '';\r\n}\r\n\r\nexport default stubString;\r\n","/**\r\n * This method returns `true`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.13.0\r\n * @category Util\r\n * @returns {boolean} Returns `true`.\r\n * @example\r\n *\r\n * _.times(2, _.stubTrue);\r\n * // => [true, true]\r\n */\r\nfunction stubTrue() {\r\n  return true;\r\n}\r\n\r\nexport default stubTrue;\r\n","import createMathOperation from './_createMathOperation.js';\r\n\r\n/**\r\n * Subtract two numbers.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Math\r\n * @param {number} minuend The first number in a subtraction.\r\n * @param {number} subtrahend The second number in a subtraction.\r\n * @returns {number} Returns the difference.\r\n * @example\r\n *\r\n * _.subtract(6, 4);\r\n * // => 2\r\n */\r\nvar subtract = createMathOperation(function(minuend, subtrahend) {\r\n  return minuend - subtrahend;\r\n}, 0);\r\n\r\nexport default subtract;\r\n","import baseSum from './_baseSum.js';\r\nimport identity from './identity.js';\r\n\r\n/**\r\n * Computes the sum of the values in `array`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.4.0\r\n * @category Math\r\n * @param {Array} array The array to iterate over.\r\n * @returns {number} Returns the sum.\r\n * @example\r\n *\r\n * _.sum([4, 2, 8, 6]);\r\n * // => 20\r\n */\r\nfunction sum(array) {\r\n  return (array && array.length)\r\n    ? baseSum(array, identity)\r\n    : 0;\r\n}\r\n\r\nexport default sum;\r\n","import baseIteratee from './_baseIteratee.js';\r\nimport baseSum from './_baseSum.js';\r\n\r\n/**\r\n * This method is like `_.sum` except that it accepts `iteratee` which is\r\n * invoked for each element in `array` to generate the value to be summed.\r\n * The iteratee is invoked with one argument: (value).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Math\r\n * @param {Array} array The array to iterate over.\r\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\r\n * @returns {number} Returns the sum.\r\n * @example\r\n *\r\n * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\r\n *\r\n * _.sumBy(objects, function(o) { return o.n; });\r\n * // => 20\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.sumBy(objects, 'n');\r\n * // => 20\r\n */\r\nfunction sumBy(array, iteratee) {\r\n  return (array && array.length)\r\n    ? baseSum(array, baseIteratee(iteratee, 2))\r\n    : 0;\r\n}\r\n\r\nexport default sumBy;\r\n","import baseSlice from './_baseSlice.js';\r\n\r\n/**\r\n * Gets all but the first element of `array`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Array\r\n * @param {Array} array The array to query.\r\n * @returns {Array} Returns the slice of `array`.\r\n * @example\r\n *\r\n * _.tail([1, 2, 3]);\r\n * // => [2, 3]\r\n */\r\nfunction tail(array) {\r\n  var length = array == null ? 0 : array.length;\r\n  return length ? baseSlice(array, 1, length) : [];\r\n}\r\n\r\nexport default tail;\r\n","import baseSlice from './_baseSlice.js';\r\nimport toInteger from './toInteger.js';\r\n\r\n/**\r\n * Creates a slice of `array` with `n` elements taken from the beginning.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Array\r\n * @param {Array} array The array to query.\r\n * @param {number} [n=1] The number of elements to take.\r\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\r\n * @returns {Array} Returns the slice of `array`.\r\n * @example\r\n *\r\n * _.take([1, 2, 3]);\r\n * // => [1]\r\n *\r\n * _.take([1, 2, 3], 2);\r\n * // => [1, 2]\r\n *\r\n * _.take([1, 2, 3], 5);\r\n * // => [1, 2, 3]\r\n *\r\n * _.take([1, 2, 3], 0);\r\n * // => []\r\n */\r\nfunction take(array, n, guard) {\r\n  if (!(array && array.length)) {\r\n    return [];\r\n  }\r\n  n = (guard || n === undefined) ? 1 : toInteger(n);\r\n  return baseSlice(array, 0, n < 0 ? 0 : n);\r\n}\r\n\r\nexport default take;\r\n","import baseSlice from './_baseSlice.js';\r\nimport toInteger from './toInteger.js';\r\n\r\n/**\r\n * Creates a slice of `array` with `n` elements taken from the end.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Array\r\n * @param {Array} array The array to query.\r\n * @param {number} [n=1] The number of elements to take.\r\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\r\n * @returns {Array} Returns the slice of `array`.\r\n * @example\r\n *\r\n * _.takeRight([1, 2, 3]);\r\n * // => [3]\r\n *\r\n * _.takeRight([1, 2, 3], 2);\r\n * // => [2, 3]\r\n *\r\n * _.takeRight([1, 2, 3], 5);\r\n * // => [1, 2, 3]\r\n *\r\n * _.takeRight([1, 2, 3], 0);\r\n * // => []\r\n */\r\nfunction takeRight(array, n, guard) {\r\n  var length = array == null ? 0 : array.length;\r\n  if (!length) {\r\n    return [];\r\n  }\r\n  n = (guard || n === undefined) ? 1 : toInteger(n);\r\n  n = length - n;\r\n  return baseSlice(array, n < 0 ? 0 : n, length);\r\n}\r\n\r\nexport default takeRight;\r\n","import baseIteratee from './_baseIteratee.js';\r\nimport baseWhile from './_baseWhile.js';\r\n\r\n/**\r\n * Creates a slice of `array` with elements taken from the end. Elements are\r\n * taken until `predicate` returns falsey. The predicate is invoked with\r\n * three arguments: (value, index, array).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Array\r\n * @param {Array} array The array to query.\r\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\r\n * @returns {Array} Returns the slice of `array`.\r\n * @example\r\n *\r\n * var users = [\r\n *   { 'user': 'barney',  'active': true },\r\n *   { 'user': 'fred',    'active': false },\r\n *   { 'user': 'pebbles', 'active': false }\r\n * ];\r\n *\r\n * _.takeRightWhile(users, function(o) { return !o.active; });\r\n * // => objects for ['fred', 'pebbles']\r\n *\r\n * // The `_.matches` iteratee shorthand.\r\n * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\r\n * // => objects for ['pebbles']\r\n *\r\n * // The `_.matchesProperty` iteratee shorthand.\r\n * _.takeRightWhile(users, ['active', false]);\r\n * // => objects for ['fred', 'pebbles']\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.takeRightWhile(users, 'active');\r\n * // => []\r\n */\r\nfunction takeRightWhile(array, predicate) {\r\n  return (array && array.length)\r\n    ? baseWhile(array, baseIteratee(predicate, 3), false, true)\r\n    : [];\r\n}\r\n\r\nexport default takeRightWhile;\r\n","import baseIteratee from './_baseIteratee.js';\r\nimport baseWhile from './_baseWhile.js';\r\n\r\n/**\r\n * Creates a slice of `array` with elements taken from the beginning. Elements\r\n * are taken until `predicate` returns falsey. The predicate is invoked with\r\n * three arguments: (value, index, array).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Array\r\n * @param {Array} array The array to query.\r\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\r\n * @returns {Array} Returns the slice of `array`.\r\n * @example\r\n *\r\n * var users = [\r\n *   { 'user': 'barney',  'active': false },\r\n *   { 'user': 'fred',    'active': false },\r\n *   { 'user': 'pebbles', 'active': true }\r\n * ];\r\n *\r\n * _.takeWhile(users, function(o) { return !o.active; });\r\n * // => objects for ['barney', 'fred']\r\n *\r\n * // The `_.matches` iteratee shorthand.\r\n * _.takeWhile(users, { 'user': 'barney', 'active': false });\r\n * // => objects for ['barney']\r\n *\r\n * // The `_.matchesProperty` iteratee shorthand.\r\n * _.takeWhile(users, ['active', false]);\r\n * // => objects for ['barney', 'fred']\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.takeWhile(users, 'active');\r\n * // => []\r\n */\r\nfunction takeWhile(array, predicate) {\r\n  return (array && array.length)\r\n    ? baseWhile(array, baseIteratee(predicate, 3))\r\n    : [];\r\n}\r\n\r\nexport default takeWhile;\r\n","/**\r\n * This method invokes `interceptor` and returns `value`. The interceptor\r\n * is invoked with one argument; (value). The purpose of this method is to\r\n * \"tap into\" a method chain sequence in order to modify intermediate results.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Seq\r\n * @param {*} value The value to provide to `interceptor`.\r\n * @param {Function} interceptor The function to invoke.\r\n * @returns {*} Returns `value`.\r\n * @example\r\n *\r\n * _([1, 2, 3])\r\n *  .tap(function(array) {\r\n *    // Mutate input array.\r\n *    array.pop();\r\n *  })\r\n *  .reverse()\r\n *  .value();\r\n * // => [2, 1]\r\n */\r\nfunction tap(value, interceptor) {\r\n  interceptor(value);\r\n  return value;\r\n}\r\n\r\nexport default tap;\r\n","import assignInWith from './assignInWith.js';\r\nimport attempt from './attempt.js';\r\nimport baseValues from './_baseValues.js';\r\nimport customDefaultsAssignIn from './_customDefaultsAssignIn.js';\r\nimport escapeStringChar from './_escapeStringChar.js';\r\nimport isError from './isError.js';\r\nimport isIterateeCall from './_isIterateeCall.js';\r\nimport keys from './keys.js';\r\nimport reInterpolate from './_reInterpolate.js';\r\nimport templateSettings from './templateSettings.js';\r\nimport toString from './toString.js';\r\n\r\n/** Used to match empty string literals in compiled template source. */\r\nvar reEmptyStringLeading = /\\b__p \\+= '';/g,\r\n    reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\r\n    reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\r\n\r\n/**\r\n * Used to match\r\n * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\r\n */\r\nvar reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\r\n\r\n/** Used to ensure capturing order of template delimiters. */\r\nvar reNoMatch = /($^)/;\r\n\r\n/** Used to match unescaped characters in compiled string literals. */\r\nvar reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\r\n\r\n/** Used for built-in method references. */\r\nvar objectProto = Object.prototype;\r\n\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n/**\r\n * Creates a compiled template function that can interpolate data properties\r\n * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\r\n * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\r\n * properties may be accessed as free variables in the template. If a setting\r\n * object is given, it takes precedence over `_.templateSettings` values.\r\n *\r\n * **Note:** In the development build `_.template` utilizes\r\n * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\r\n * for easier debugging.\r\n *\r\n * For more information on precompiling templates see\r\n * [lodash's custom builds documentation](https://lodash.com/custom-builds).\r\n *\r\n * For more information on Chrome extension sandboxes see\r\n * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\r\n *\r\n * @static\r\n * @since 0.1.0\r\n * @memberOf _\r\n * @category String\r\n * @param {string} [string=''] The template string.\r\n * @param {Object} [options={}] The options object.\r\n * @param {RegExp} [options.escape=_.templateSettings.escape]\r\n *  The HTML \"escape\" delimiter.\r\n * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\r\n *  The \"evaluate\" delimiter.\r\n * @param {Object} [options.imports=_.templateSettings.imports]\r\n *  An object to import into the template as free variables.\r\n * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\r\n *  The \"interpolate\" delimiter.\r\n * @param {string} [options.sourceURL='templateSources[n]']\r\n *  The sourceURL of the compiled template.\r\n * @param {string} [options.variable='obj']\r\n *  The data object variable name.\r\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\r\n * @returns {Function} Returns the compiled template function.\r\n * @example\r\n *\r\n * // Use the \"interpolate\" delimiter to create a compiled template.\r\n * var compiled = _.template('hello <%= user %>!');\r\n * compiled({ 'user': 'fred' });\r\n * // => 'hello fred!'\r\n *\r\n * // Use the HTML \"escape\" delimiter to escape data property values.\r\n * var compiled = _.template('<b><%- value %></b>');\r\n * compiled({ 'value': '<script>' });\r\n * // => '<b>&lt;script&gt;</b>'\r\n *\r\n * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\r\n * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\r\n * compiled({ 'users': ['fred', 'barney'] });\r\n * // => '<li>fred</li><li>barney</li>'\r\n *\r\n * // Use the internal `print` function in \"evaluate\" delimiters.\r\n * var compiled = _.template('<% print(\"hello \" + user); %>!');\r\n * compiled({ 'user': 'barney' });\r\n * // => 'hello barney!'\r\n *\r\n * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\r\n * // Disable support by replacing the \"interpolate\" delimiter.\r\n * var compiled = _.template('hello ${ user }!');\r\n * compiled({ 'user': 'pebbles' });\r\n * // => 'hello pebbles!'\r\n *\r\n * // Use backslashes to treat delimiters as plain text.\r\n * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\r\n * compiled({ 'value': 'ignored' });\r\n * // => '<%- value %>'\r\n *\r\n * // Use the `imports` option to import `jQuery` as `jq`.\r\n * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\r\n * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\r\n * compiled({ 'users': ['fred', 'barney'] });\r\n * // => '<li>fred</li><li>barney</li>'\r\n *\r\n * // Use the `sourceURL` option to specify a custom sourceURL for the template.\r\n * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\r\n * compiled(data);\r\n * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\r\n *\r\n * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\r\n * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\r\n * compiled.source;\r\n * // => function(data) {\r\n * //   var __t, __p = '';\r\n * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\r\n * //   return __p;\r\n * // }\r\n *\r\n * // Use custom template delimiters.\r\n * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\r\n * var compiled = _.template('hello {{ user }}!');\r\n * compiled({ 'user': 'mustache' });\r\n * // => 'hello mustache!'\r\n *\r\n * // Use the `source` property to inline compiled templates for meaningful\r\n * // line numbers in error messages and stack traces.\r\n * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\r\n *   var JST = {\\\r\n *     \"main\": ' + _.template(mainText).source + '\\\r\n *   };\\\r\n * ');\r\n */\r\nfunction template(string, options, guard) {\r\n  // Based on John Resig's `tmpl` implementation\r\n  // (http://ejohn.org/blog/javascript-micro-templating/)\r\n  // and Laura Doktorova's doT.js (https://github.com/olado/doT).\r\n  var settings = templateSettings.imports._.templateSettings || templateSettings;\r\n\r\n  if (guard && isIterateeCall(string, options, guard)) {\r\n    options = undefined;\r\n  }\r\n  string = toString(string);\r\n  options = assignInWith({}, options, settings, customDefaultsAssignIn);\r\n\r\n  var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\r\n      importsKeys = keys(imports),\r\n      importsValues = baseValues(imports, importsKeys);\r\n\r\n  var isEscaping,\r\n      isEvaluating,\r\n      index = 0,\r\n      interpolate = options.interpolate || reNoMatch,\r\n      source = \"__p += '\";\r\n\r\n  // Compile the regexp to match each delimiter.\r\n  var reDelimiters = RegExp(\r\n    (options.escape || reNoMatch).source + '|' +\r\n    interpolate.source + '|' +\r\n    (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\r\n    (options.evaluate || reNoMatch).source + '|$'\r\n  , 'g');\r\n\r\n  // Use a sourceURL for easier debugging.\r\n  // The sourceURL gets injected into the source that's eval-ed, so be careful\r\n  // with lookup (in case of e.g. prototype pollution), and strip newlines if any.\r\n  // A newline wouldn't be a valid sourceURL anyway, and it'd enable code injection.\r\n  var sourceURL = hasOwnProperty.call(options, 'sourceURL')\r\n    ? ('//# sourceURL=' +\r\n       (options.sourceURL + '').replace(/[\\r\\n]/g, ' ') +\r\n       '\\n')\r\n    : '';\r\n\r\n  string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\r\n    interpolateValue || (interpolateValue = esTemplateValue);\r\n\r\n    // Escape characters that can't be included in string literals.\r\n    source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\r\n\r\n    // Replace delimiters with snippets.\r\n    if (escapeValue) {\r\n      isEscaping = true;\r\n      source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\r\n    }\r\n    if (evaluateValue) {\r\n      isEvaluating = true;\r\n      source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\r\n    }\r\n    if (interpolateValue) {\r\n      source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\r\n    }\r\n    index = offset + match.length;\r\n\r\n    // The JS engine embedded in Adobe products needs `match` returned in\r\n    // order to produce the correct `offset` value.\r\n    return match;\r\n  });\r\n\r\n  source += \"';\\n\";\r\n\r\n  // If `variable` is not specified wrap a with-statement around the generated\r\n  // code to add the data object to the top of the scope chain.\r\n  // Like with sourceURL, we take care to not check the option's prototype,\r\n  // as this configuration is a code injection vector.\r\n  var variable = hasOwnProperty.call(options, 'variable') && options.variable;\r\n  if (!variable) {\r\n    source = 'with (obj) {\\n' + source + '\\n}\\n';\r\n  }\r\n  // Cleanup code by stripping empty strings.\r\n  source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\r\n    .replace(reEmptyStringMiddle, '$1')\r\n    .replace(reEmptyStringTrailing, '$1;');\r\n\r\n  // Frame code as the function body.\r\n  source = 'function(' + (variable || 'obj') + ') {\\n' +\r\n    (variable\r\n      ? ''\r\n      : 'obj || (obj = {});\\n'\r\n    ) +\r\n    \"var __t, __p = ''\" +\r\n    (isEscaping\r\n       ? ', __e = _.escape'\r\n       : ''\r\n    ) +\r\n    (isEvaluating\r\n      ? ', __j = Array.prototype.join;\\n' +\r\n        \"function print() { __p += __j.call(arguments, '') }\\n\"\r\n      : ';\\n'\r\n    ) +\r\n    source +\r\n    'return __p\\n}';\r\n\r\n  var result = attempt(function() {\r\n    return Function(importsKeys, sourceURL + 'return ' + source)\r\n      .apply(undefined, importsValues);\r\n  });\r\n\r\n  // Provide the compiled function's source by its `toString` method or\r\n  // the `source` property as a convenience for inlining compiled templates.\r\n  result.source = source;\r\n  if (isError(result)) {\r\n    throw result;\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default template;\r\n","import escape from './escape.js';\r\nimport reEscape from './_reEscape.js';\r\nimport reEvaluate from './_reEvaluate.js';\r\nimport reInterpolate from './_reInterpolate.js';\r\n\r\n/**\r\n * By default, the template delimiters used by lodash are like those in\r\n * embedded Ruby (ERB) as well as ES2015 template strings. Change the\r\n * following template settings to use alternative delimiters.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @type {Object}\r\n */\r\nvar templateSettings = {\r\n\r\n  /**\r\n   * Used to detect `data` property values to be HTML-escaped.\r\n   *\r\n   * @memberOf _.templateSettings\r\n   * @type {RegExp}\r\n   */\r\n  'escape': reEscape,\r\n\r\n  /**\r\n   * Used to detect code to be evaluated.\r\n   *\r\n   * @memberOf _.templateSettings\r\n   * @type {RegExp}\r\n   */\r\n  'evaluate': reEvaluate,\r\n\r\n  /**\r\n   * Used to detect `data` property values to inject.\r\n   *\r\n   * @memberOf _.templateSettings\r\n   * @type {RegExp}\r\n   */\r\n  'interpolate': reInterpolate,\r\n\r\n  /**\r\n   * Used to reference the data object in the template text.\r\n   *\r\n   * @memberOf _.templateSettings\r\n   * @type {string}\r\n   */\r\n  'variable': '',\r\n\r\n  /**\r\n   * Used to import variables into the compiled template.\r\n   *\r\n   * @memberOf _.templateSettings\r\n   * @type {Object}\r\n   */\r\n  'imports': {\r\n\r\n    /**\r\n     * A reference to the `lodash` function.\r\n     *\r\n     * @memberOf _.templateSettings.imports\r\n     * @type {Function}\r\n     */\r\n    '_': { 'escape': escape }\r\n  }\r\n};\r\n\r\nexport default templateSettings;\r\n","import debounce from './debounce.js';\r\nimport isObject from './isObject.js';\r\n\r\n/** Error message constants. */\r\nvar FUNC_ERROR_TEXT = 'Expected a function';\r\n\r\n/**\r\n * Creates a throttled function that only invokes `func` at most once per\r\n * every `wait` milliseconds. The throttled function comes with a `cancel`\r\n * method to cancel delayed `func` invocations and a `flush` method to\r\n * immediately invoke them. Provide `options` to indicate whether `func`\r\n * should be invoked on the leading and/or trailing edge of the `wait`\r\n * timeout. The `func` is invoked with the last arguments provided to the\r\n * throttled function. Subsequent calls to the throttled function return the\r\n * result of the last `func` invocation.\r\n *\r\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\r\n * invoked on the trailing edge of the timeout only if the throttled function\r\n * is invoked more than once during the `wait` timeout.\r\n *\r\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\r\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\r\n *\r\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\r\n * for details over the differences between `_.throttle` and `_.debounce`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Function\r\n * @param {Function} func The function to throttle.\r\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\r\n * @param {Object} [options={}] The options object.\r\n * @param {boolean} [options.leading=true]\r\n *  Specify invoking on the leading edge of the timeout.\r\n * @param {boolean} [options.trailing=true]\r\n *  Specify invoking on the trailing edge of the timeout.\r\n * @returns {Function} Returns the new throttled function.\r\n * @example\r\n *\r\n * // Avoid excessively updating the position while scrolling.\r\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\r\n *\r\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\r\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\r\n * jQuery(element).on('click', throttled);\r\n *\r\n * // Cancel the trailing throttled invocation.\r\n * jQuery(window).on('popstate', throttled.cancel);\r\n */\r\nfunction throttle(func, wait, options) {\r\n  var leading = true,\r\n      trailing = true;\r\n\r\n  if (typeof func != 'function') {\r\n    throw new TypeError(FUNC_ERROR_TEXT);\r\n  }\r\n  if (isObject(options)) {\r\n    leading = 'leading' in options ? !!options.leading : leading;\r\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\r\n  }\r\n  return debounce(func, wait, {\r\n    'leading': leading,\r\n    'maxWait': wait,\r\n    'trailing': trailing\r\n  });\r\n}\r\n\r\nexport default throttle;\r\n","/**\r\n * This method is like `_.tap` except that it returns the result of `interceptor`.\r\n * The purpose of this method is to \"pass thru\" values replacing intermediate\r\n * results in a method chain sequence.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Seq\r\n * @param {*} value The value to provide to `interceptor`.\r\n * @param {Function} interceptor The function to invoke.\r\n * @returns {*} Returns the result of `interceptor`.\r\n * @example\r\n *\r\n * _('  abc  ')\r\n *  .chain()\r\n *  .trim()\r\n *  .thru(function(value) {\r\n *    return [value];\r\n *  })\r\n *  .value();\r\n * // => ['abc']\r\n */\r\nfunction thru(value, interceptor) {\r\n  return interceptor(value);\r\n}\r\n\r\nexport default thru;\r\n","import baseTimes from './_baseTimes.js';\r\nimport castFunction from './_castFunction.js';\r\nimport toInteger from './toInteger.js';\r\n\r\n/** Used as references for various `Number` constants. */\r\nvar MAX_SAFE_INTEGER = 9007199254740991;\r\n\r\n/** Used as references for the maximum length and index of an array. */\r\nvar MAX_ARRAY_LENGTH = 4294967295;\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMin = Math.min;\r\n\r\n/**\r\n * Invokes the iteratee `n` times, returning an array of the results of\r\n * each invocation. The iteratee is invoked with one argument; (index).\r\n *\r\n * @static\r\n * @since 0.1.0\r\n * @memberOf _\r\n * @category Util\r\n * @param {number} n The number of times to invoke `iteratee`.\r\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\r\n * @returns {Array} Returns the array of results.\r\n * @example\r\n *\r\n * _.times(3, String);\r\n * // => ['0', '1', '2']\r\n *\r\n *  _.times(4, _.constant(0));\r\n * // => [0, 0, 0, 0]\r\n */\r\nfunction times(n, iteratee) {\r\n  n = toInteger(n);\r\n  if (n < 1 || n > MAX_SAFE_INTEGER) {\r\n    return [];\r\n  }\r\n  var index = MAX_ARRAY_LENGTH,\r\n      length = nativeMin(n, MAX_ARRAY_LENGTH);\r\n\r\n  iteratee = castFunction(iteratee);\r\n  n -= MAX_ARRAY_LENGTH;\r\n\r\n  var result = baseTimes(length, iteratee);\r\n  while (++index < n) {\r\n    iteratee(index);\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default times;\r\n","import Symbol from './_Symbol.js';\r\nimport copyArray from './_copyArray.js';\r\nimport getTag from './_getTag.js';\r\nimport isArrayLike from './isArrayLike.js';\r\nimport isString from './isString.js';\r\nimport iteratorToArray from './_iteratorToArray.js';\r\nimport mapToArray from './_mapToArray.js';\r\nimport setToArray from './_setToArray.js';\r\nimport stringToArray from './_stringToArray.js';\r\nimport values from './values.js';\r\n\r\n/** `Object#toString` result references. */\r\nvar mapTag = '[object Map]',\r\n    setTag = '[object Set]';\r\n\r\n/** Built-in value references. */\r\nvar symIterator = Symbol ? Symbol.iterator : undefined;\r\n\r\n/**\r\n * Converts `value` to an array.\r\n *\r\n * @static\r\n * @since 0.1.0\r\n * @memberOf _\r\n * @category Lang\r\n * @param {*} value The value to convert.\r\n * @returns {Array} Returns the converted array.\r\n * @example\r\n *\r\n * _.toArray({ 'a': 1, 'b': 2 });\r\n * // => [1, 2]\r\n *\r\n * _.toArray('abc');\r\n * // => ['a', 'b', 'c']\r\n *\r\n * _.toArray(1);\r\n * // => []\r\n *\r\n * _.toArray(null);\r\n * // => []\r\n */\r\nfunction toArray(value) {\r\n  if (!value) {\r\n    return [];\r\n  }\r\n  if (isArrayLike(value)) {\r\n    return isString(value) ? stringToArray(value) : copyArray(value);\r\n  }\r\n  if (symIterator && value[symIterator]) {\r\n    return iteratorToArray(value[symIterator]());\r\n  }\r\n  var tag = getTag(value),\r\n      func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\r\n\r\n  return func(value);\r\n}\r\n\r\nexport default toArray;\r\n","import toNumber from './toNumber.js';\r\n\r\n/** Used as references for various `Number` constants. */\r\nvar INFINITY = 1 / 0,\r\n    MAX_INTEGER = 1.7976931348623157e+308;\r\n\r\n/**\r\n * Converts `value` to a finite number.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.12.0\r\n * @category Lang\r\n * @param {*} value The value to convert.\r\n * @returns {number} Returns the converted number.\r\n * @example\r\n *\r\n * _.toFinite(3.2);\r\n * // => 3.2\r\n *\r\n * _.toFinite(Number.MIN_VALUE);\r\n * // => 5e-324\r\n *\r\n * _.toFinite(Infinity);\r\n * // => 1.7976931348623157e+308\r\n *\r\n * _.toFinite('3.2');\r\n * // => 3.2\r\n */\r\nfunction toFinite(value) {\r\n  if (!value) {\r\n    return value === 0 ? value : 0;\r\n  }\r\n  value = toNumber(value);\r\n  if (value === INFINITY || value === -INFINITY) {\r\n    var sign = (value < 0 ? -1 : 1);\r\n    return sign * MAX_INTEGER;\r\n  }\r\n  return value === value ? value : 0;\r\n}\r\n\r\nexport default toFinite;\r\n","import toFinite from './toFinite.js';\r\n\r\n/**\r\n * Converts `value` to an integer.\r\n *\r\n * **Note:** This method is loosely based on\r\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to convert.\r\n * @returns {number} Returns the converted integer.\r\n * @example\r\n *\r\n * _.toInteger(3.2);\r\n * // => 3\r\n *\r\n * _.toInteger(Number.MIN_VALUE);\r\n * // => 0\r\n *\r\n * _.toInteger(Infinity);\r\n * // => 1.7976931348623157e+308\r\n *\r\n * _.toInteger('3.2');\r\n * // => 3\r\n */\r\nfunction toInteger(value) {\r\n  var result = toFinite(value),\r\n      remainder = result % 1;\r\n\r\n  return result === result ? (remainder ? result - remainder : result) : 0;\r\n}\r\n\r\nexport default toInteger;\r\n","/**\r\n * Enables the wrapper to be iterable.\r\n *\r\n * @name Symbol.iterator\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Seq\r\n * @returns {Object} Returns the wrapper object.\r\n * @example\r\n *\r\n * var wrapped = _([1, 2]);\r\n *\r\n * wrapped[Symbol.iterator]() === wrapped;\r\n * // => true\r\n *\r\n * Array.from(wrapped);\r\n * // => [1, 2]\r\n */\r\nfunction wrapperToIterator() {\r\n  return this;\r\n}\r\n\r\nexport default wrapperToIterator;\r\n","export { default } from './wrapperValue.js'\r\n","import baseClamp from './_baseClamp.js';\r\nimport toInteger from './toInteger.js';\r\n\r\n/** Used as references for the maximum length and index of an array. */\r\nvar MAX_ARRAY_LENGTH = 4294967295;\r\n\r\n/**\r\n * Converts `value` to an integer suitable for use as the length of an\r\n * array-like object.\r\n *\r\n * **Note:** This method is based on\r\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to convert.\r\n * @returns {number} Returns the converted integer.\r\n * @example\r\n *\r\n * _.toLength(3.2);\r\n * // => 3\r\n *\r\n * _.toLength(Number.MIN_VALUE);\r\n * // => 0\r\n *\r\n * _.toLength(Infinity);\r\n * // => 4294967295\r\n *\r\n * _.toLength('3.2');\r\n * // => 3\r\n */\r\nfunction toLength(value) {\r\n  return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\r\n}\r\n\r\nexport default toLength;\r\n","import toString from './toString.js';\r\n\r\n/**\r\n * Converts `string`, as a whole, to lower case just like\r\n * [String#toLowerCase](https://mdn.io/toLowerCase).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category String\r\n * @param {string} [string=''] The string to convert.\r\n * @returns {string} Returns the lower cased string.\r\n * @example\r\n *\r\n * _.toLower('--Foo-Bar--');\r\n * // => '--foo-bar--'\r\n *\r\n * _.toLower('fooBar');\r\n * // => 'foobar'\r\n *\r\n * _.toLower('__FOO_BAR__');\r\n * // => '__foo_bar__'\r\n */\r\nfunction toLower(value) {\r\n  return toString(value).toLowerCase();\r\n}\r\n\r\nexport default toLower;\r\n","import isObject from './isObject.js';\r\nimport isSymbol from './isSymbol.js';\r\n\r\n/** Used as references for various `Number` constants. */\r\nvar NAN = 0 / 0;\r\n\r\n/** Used to match leading and trailing whitespace. */\r\nvar reTrim = /^\\s+|\\s+$/g;\r\n\r\n/** Used to detect bad signed hexadecimal string values. */\r\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\r\n\r\n/** Used to detect binary string values. */\r\nvar reIsBinary = /^0b[01]+$/i;\r\n\r\n/** Used to detect octal string values. */\r\nvar reIsOctal = /^0o[0-7]+$/i;\r\n\r\n/** Built-in method references without a dependency on `root`. */\r\nvar freeParseInt = parseInt;\r\n\r\n/**\r\n * Converts `value` to a number.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to process.\r\n * @returns {number} Returns the number.\r\n * @example\r\n *\r\n * _.toNumber(3.2);\r\n * // => 3.2\r\n *\r\n * _.toNumber(Number.MIN_VALUE);\r\n * // => 5e-324\r\n *\r\n * _.toNumber(Infinity);\r\n * // => Infinity\r\n *\r\n * _.toNumber('3.2');\r\n * // => 3.2\r\n */\r\nfunction toNumber(value) {\r\n  if (typeof value == 'number') {\r\n    return value;\r\n  }\r\n  if (isSymbol(value)) {\r\n    return NAN;\r\n  }\r\n  if (isObject(value)) {\r\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\r\n    value = isObject(other) ? (other + '') : other;\r\n  }\r\n  if (typeof value != 'string') {\r\n    return value === 0 ? value : +value;\r\n  }\r\n  value = value.replace(reTrim, '');\r\n  var isBinary = reIsBinary.test(value);\r\n  return (isBinary || reIsOctal.test(value))\r\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\r\n    : (reIsBadHex.test(value) ? NAN : +value);\r\n}\r\n\r\nexport default toNumber;\r\n","import createToPairs from './_createToPairs.js';\r\nimport keys from './keys.js';\r\n\r\n/**\r\n * Creates an array of own enumerable string keyed-value pairs for `object`\r\n * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\r\n * entries are returned.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @alias entries\r\n * @category Object\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the key-value pairs.\r\n * @example\r\n *\r\n * function Foo() {\r\n *   this.a = 1;\r\n *   this.b = 2;\r\n * }\r\n *\r\n * Foo.prototype.c = 3;\r\n *\r\n * _.toPairs(new Foo);\r\n * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\r\n */\r\nvar toPairs = createToPairs(keys);\r\n\r\nexport default toPairs;\r\n","import createToPairs from './_createToPairs.js';\r\nimport keysIn from './keysIn.js';\r\n\r\n/**\r\n * Creates an array of own and inherited enumerable string keyed-value pairs\r\n * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\r\n * or set, its entries are returned.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @alias entriesIn\r\n * @category Object\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the key-value pairs.\r\n * @example\r\n *\r\n * function Foo() {\r\n *   this.a = 1;\r\n *   this.b = 2;\r\n * }\r\n *\r\n * Foo.prototype.c = 3;\r\n *\r\n * _.toPairsIn(new Foo);\r\n * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\r\n */\r\nvar toPairsIn = createToPairs(keysIn);\r\n\r\nexport default toPairsIn;\r\n","import arrayMap from './_arrayMap.js';\r\nimport copyArray from './_copyArray.js';\r\nimport isArray from './isArray.js';\r\nimport isSymbol from './isSymbol.js';\r\nimport stringToPath from './_stringToPath.js';\r\nimport toKey from './_toKey.js';\r\nimport toString from './toString.js';\r\n\r\n/**\r\n * Converts `value` to a property path array.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Util\r\n * @param {*} value The value to convert.\r\n * @returns {Array} Returns the new property path array.\r\n * @example\r\n *\r\n * _.toPath('a.b.c');\r\n * // => ['a', 'b', 'c']\r\n *\r\n * _.toPath('a[0].b.c');\r\n * // => ['a', '0', 'b', 'c']\r\n */\r\nfunction toPath(value) {\r\n  if (isArray(value)) {\r\n    return arrayMap(value, toKey);\r\n  }\r\n  return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\r\n}\r\n\r\nexport default toPath;\r\n","import copyObject from './_copyObject.js';\r\nimport keysIn from './keysIn.js';\r\n\r\n/**\r\n * Converts `value` to a plain object flattening inherited enumerable string\r\n * keyed properties of `value` to own properties of the plain object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Lang\r\n * @param {*} value The value to convert.\r\n * @returns {Object} Returns the converted plain object.\r\n * @example\r\n *\r\n * function Foo() {\r\n *   this.b = 2;\r\n * }\r\n *\r\n * Foo.prototype.c = 3;\r\n *\r\n * _.assign({ 'a': 1 }, new Foo);\r\n * // => { 'a': 1, 'b': 2 }\r\n *\r\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\r\n * // => { 'a': 1, 'b': 2, 'c': 3 }\r\n */\r\nfunction toPlainObject(value) {\r\n  return copyObject(value, keysIn(value));\r\n}\r\n\r\nexport default toPlainObject;\r\n","import baseClamp from './_baseClamp.js';\r\nimport toInteger from './toInteger.js';\r\n\r\n/** Used as references for various `Number` constants. */\r\nvar MAX_SAFE_INTEGER = 9007199254740991;\r\n\r\n/**\r\n * Converts `value` to a safe integer. A safe integer can be compared and\r\n * represented correctly.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to convert.\r\n * @returns {number} Returns the converted integer.\r\n * @example\r\n *\r\n * _.toSafeInteger(3.2);\r\n * // => 3\r\n *\r\n * _.toSafeInteger(Number.MIN_VALUE);\r\n * // => 0\r\n *\r\n * _.toSafeInteger(Infinity);\r\n * // => 9007199254740991\r\n *\r\n * _.toSafeInteger('3.2');\r\n * // => 3\r\n */\r\nfunction toSafeInteger(value) {\r\n  return value\r\n    ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\r\n    : (value === 0 ? value : 0);\r\n}\r\n\r\nexport default toSafeInteger;\r\n","import baseToString from './_baseToString.js';\r\n\r\n/**\r\n * Converts `value` to a string. An empty string is returned for `null`\r\n * and `undefined` values. The sign of `-0` is preserved.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to convert.\r\n * @returns {string} Returns the converted string.\r\n * @example\r\n *\r\n * _.toString(null);\r\n * // => ''\r\n *\r\n * _.toString(-0);\r\n * // => '-0'\r\n *\r\n * _.toString([1, 2, 3]);\r\n * // => '1,2,3'\r\n */\r\nfunction toString(value) {\r\n  return value == null ? '' : baseToString(value);\r\n}\r\n\r\nexport default toString;\r\n","import toString from './toString.js';\r\n\r\n/**\r\n * Converts `string`, as a whole, to upper case just like\r\n * [String#toUpperCase](https://mdn.io/toUpperCase).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category String\r\n * @param {string} [string=''] The string to convert.\r\n * @returns {string} Returns the upper cased string.\r\n * @example\r\n *\r\n * _.toUpper('--foo-bar--');\r\n * // => '--FOO-BAR--'\r\n *\r\n * _.toUpper('fooBar');\r\n * // => 'FOOBAR'\r\n *\r\n * _.toUpper('__foo_bar__');\r\n * // => '__FOO_BAR__'\r\n */\r\nfunction toUpper(value) {\r\n  return toString(value).toUpperCase();\r\n}\r\n\r\nexport default toUpper;\r\n","import arrayEach from './_arrayEach.js';\r\nimport baseCreate from './_baseCreate.js';\r\nimport baseForOwn from './_baseForOwn.js';\r\nimport baseIteratee from './_baseIteratee.js';\r\nimport getPrototype from './_getPrototype.js';\r\nimport isArray from './isArray.js';\r\nimport isBuffer from './isBuffer.js';\r\nimport isFunction from './isFunction.js';\r\nimport isObject from './isObject.js';\r\nimport isTypedArray from './isTypedArray.js';\r\n\r\n/**\r\n * An alternative to `_.reduce`; this method transforms `object` to a new\r\n * `accumulator` object which is the result of running each of its own\r\n * enumerable string keyed properties thru `iteratee`, with each invocation\r\n * potentially mutating the `accumulator` object. If `accumulator` is not\r\n * provided, a new object with the same `[[Prototype]]` will be used. The\r\n * iteratee is invoked with four arguments: (accumulator, value, key, object).\r\n * Iteratee functions may exit iteration early by explicitly returning `false`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 1.3.0\r\n * @category Object\r\n * @param {Object} object The object to iterate over.\r\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\r\n * @param {*} [accumulator] The custom accumulator value.\r\n * @returns {*} Returns the accumulated value.\r\n * @example\r\n *\r\n * _.transform([2, 3, 4], function(result, n) {\r\n *   result.push(n *= n);\r\n *   return n % 2 == 0;\r\n * }, []);\r\n * // => [4, 9]\r\n *\r\n * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\r\n *   (result[value] || (result[value] = [])).push(key);\r\n * }, {});\r\n * // => { '1': ['a', 'c'], '2': ['b'] }\r\n */\r\nfunction transform(object, iteratee, accumulator) {\r\n  var isArr = isArray(object),\r\n      isArrLike = isArr || isBuffer(object) || isTypedArray(object);\r\n\r\n  iteratee = baseIteratee(iteratee, 4);\r\n  if (accumulator == null) {\r\n    var Ctor = object && object.constructor;\r\n    if (isArrLike) {\r\n      accumulator = isArr ? new Ctor : [];\r\n    }\r\n    else if (isObject(object)) {\r\n      accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\r\n    }\r\n    else {\r\n      accumulator = {};\r\n    }\r\n  }\r\n  (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\r\n    return iteratee(accumulator, value, index, object);\r\n  });\r\n  return accumulator;\r\n}\r\n\r\nexport default transform;\r\n","import baseToString from './_baseToString.js';\r\nimport castSlice from './_castSlice.js';\r\nimport charsEndIndex from './_charsEndIndex.js';\r\nimport charsStartIndex from './_charsStartIndex.js';\r\nimport stringToArray from './_stringToArray.js';\r\nimport toString from './toString.js';\r\n\r\n/** Used to match leading and trailing whitespace. */\r\nvar reTrim = /^\\s+|\\s+$/g;\r\n\r\n/**\r\n * Removes leading and trailing whitespace or specified characters from `string`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category String\r\n * @param {string} [string=''] The string to trim.\r\n * @param {string} [chars=whitespace] The characters to trim.\r\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\r\n * @returns {string} Returns the trimmed string.\r\n * @example\r\n *\r\n * _.trim('  abc  ');\r\n * // => 'abc'\r\n *\r\n * _.trim('-_-abc-_-', '_-');\r\n * // => 'abc'\r\n *\r\n * _.map(['  foo  ', '  bar  '], _.trim);\r\n * // => ['foo', 'bar']\r\n */\r\nfunction trim(string, chars, guard) {\r\n  string = toString(string);\r\n  if (string && (guard || chars === undefined)) {\r\n    return string.replace(reTrim, '');\r\n  }\r\n  if (!string || !(chars = baseToString(chars))) {\r\n    return string;\r\n  }\r\n  var strSymbols = stringToArray(string),\r\n      chrSymbols = stringToArray(chars),\r\n      start = charsStartIndex(strSymbols, chrSymbols),\r\n      end = charsEndIndex(strSymbols, chrSymbols) + 1;\r\n\r\n  return castSlice(strSymbols, start, end).join('');\r\n}\r\n\r\nexport default trim;\r\n","import baseToString from './_baseToString.js';\r\nimport castSlice from './_castSlice.js';\r\nimport charsEndIndex from './_charsEndIndex.js';\r\nimport stringToArray from './_stringToArray.js';\r\nimport toString from './toString.js';\r\n\r\n/** Used to match leading and trailing whitespace. */\r\nvar reTrimEnd = /\\s+$/;\r\n\r\n/**\r\n * Removes trailing whitespace or specified characters from `string`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category String\r\n * @param {string} [string=''] The string to trim.\r\n * @param {string} [chars=whitespace] The characters to trim.\r\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\r\n * @returns {string} Returns the trimmed string.\r\n * @example\r\n *\r\n * _.trimEnd('  abc  ');\r\n * // => '  abc'\r\n *\r\n * _.trimEnd('-_-abc-_-', '_-');\r\n * // => '-_-abc'\r\n */\r\nfunction trimEnd(string, chars, guard) {\r\n  string = toString(string);\r\n  if (string && (guard || chars === undefined)) {\r\n    return string.replace(reTrimEnd, '');\r\n  }\r\n  if (!string || !(chars = baseToString(chars))) {\r\n    return string;\r\n  }\r\n  var strSymbols = stringToArray(string),\r\n      end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\r\n\r\n  return castSlice(strSymbols, 0, end).join('');\r\n}\r\n\r\nexport default trimEnd;\r\n","import baseToString from './_baseToString.js';\r\nimport castSlice from './_castSlice.js';\r\nimport charsStartIndex from './_charsStartIndex.js';\r\nimport stringToArray from './_stringToArray.js';\r\nimport toString from './toString.js';\r\n\r\n/** Used to match leading and trailing whitespace. */\r\nvar reTrimStart = /^\\s+/;\r\n\r\n/**\r\n * Removes leading whitespace or specified characters from `string`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category String\r\n * @param {string} [string=''] The string to trim.\r\n * @param {string} [chars=whitespace] The characters to trim.\r\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\r\n * @returns {string} Returns the trimmed string.\r\n * @example\r\n *\r\n * _.trimStart('  abc  ');\r\n * // => 'abc  '\r\n *\r\n * _.trimStart('-_-abc-_-', '_-');\r\n * // => 'abc-_-'\r\n */\r\nfunction trimStart(string, chars, guard) {\r\n  string = toString(string);\r\n  if (string && (guard || chars === undefined)) {\r\n    return string.replace(reTrimStart, '');\r\n  }\r\n  if (!string || !(chars = baseToString(chars))) {\r\n    return string;\r\n  }\r\n  var strSymbols = stringToArray(string),\r\n      start = charsStartIndex(strSymbols, stringToArray(chars));\r\n\r\n  return castSlice(strSymbols, start).join('');\r\n}\r\n\r\nexport default trimStart;\r\n","import baseToString from './_baseToString.js';\r\nimport castSlice from './_castSlice.js';\r\nimport hasUnicode from './_hasUnicode.js';\r\nimport isObject from './isObject.js';\r\nimport isRegExp from './isRegExp.js';\r\nimport stringSize from './_stringSize.js';\r\nimport stringToArray from './_stringToArray.js';\r\nimport toInteger from './toInteger.js';\r\nimport toString from './toString.js';\r\n\r\n/** Used as default options for `_.truncate`. */\r\nvar DEFAULT_TRUNC_LENGTH = 30,\r\n    DEFAULT_TRUNC_OMISSION = '...';\r\n\r\n/** Used to match `RegExp` flags from their coerced string values. */\r\nvar reFlags = /\\w*$/;\r\n\r\n/**\r\n * Truncates `string` if it's longer than the given maximum string length.\r\n * The last characters of the truncated string are replaced with the omission\r\n * string which defaults to \"...\".\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category String\r\n * @param {string} [string=''] The string to truncate.\r\n * @param {Object} [options={}] The options object.\r\n * @param {number} [options.length=30] The maximum string length.\r\n * @param {string} [options.omission='...'] The string to indicate text is omitted.\r\n * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\r\n * @returns {string} Returns the truncated string.\r\n * @example\r\n *\r\n * _.truncate('hi-diddly-ho there, neighborino');\r\n * // => 'hi-diddly-ho there, neighbo...'\r\n *\r\n * _.truncate('hi-diddly-ho there, neighborino', {\r\n *   'length': 24,\r\n *   'separator': ' '\r\n * });\r\n * // => 'hi-diddly-ho there,...'\r\n *\r\n * _.truncate('hi-diddly-ho there, neighborino', {\r\n *   'length': 24,\r\n *   'separator': /,? +/\r\n * });\r\n * // => 'hi-diddly-ho there...'\r\n *\r\n * _.truncate('hi-diddly-ho there, neighborino', {\r\n *   'omission': ' [...]'\r\n * });\r\n * // => 'hi-diddly-ho there, neig [...]'\r\n */\r\nfunction truncate(string, options) {\r\n  var length = DEFAULT_TRUNC_LENGTH,\r\n      omission = DEFAULT_TRUNC_OMISSION;\r\n\r\n  if (isObject(options)) {\r\n    var separator = 'separator' in options ? options.separator : separator;\r\n    length = 'length' in options ? toInteger(options.length) : length;\r\n    omission = 'omission' in options ? baseToString(options.omission) : omission;\r\n  }\r\n  string = toString(string);\r\n\r\n  var strLength = string.length;\r\n  if (hasUnicode(string)) {\r\n    var strSymbols = stringToArray(string);\r\n    strLength = strSymbols.length;\r\n  }\r\n  if (length >= strLength) {\r\n    return string;\r\n  }\r\n  var end = length - stringSize(omission);\r\n  if (end < 1) {\r\n    return omission;\r\n  }\r\n  var result = strSymbols\r\n    ? castSlice(strSymbols, 0, end).join('')\r\n    : string.slice(0, end);\r\n\r\n  if (separator === undefined) {\r\n    return result + omission;\r\n  }\r\n  if (strSymbols) {\r\n    end += (result.length - end);\r\n  }\r\n  if (isRegExp(separator)) {\r\n    if (string.slice(end).search(separator)) {\r\n      var match,\r\n          substring = result;\r\n\r\n      if (!separator.global) {\r\n        separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\r\n      }\r\n      separator.lastIndex = 0;\r\n      while ((match = separator.exec(substring))) {\r\n        var newEnd = match.index;\r\n      }\r\n      result = result.slice(0, newEnd === undefined ? end : newEnd);\r\n    }\r\n  } else if (string.indexOf(baseToString(separator), end) != end) {\r\n    var index = result.lastIndexOf(separator);\r\n    if (index > -1) {\r\n      result = result.slice(0, index);\r\n    }\r\n  }\r\n  return result + omission;\r\n}\r\n\r\nexport default truncate;\r\n","import ary from './ary.js';\r\n\r\n/**\r\n * Creates a function that accepts up to one argument, ignoring any\r\n * additional arguments.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Function\r\n * @param {Function} func The function to cap arguments for.\r\n * @returns {Function} Returns the new capped function.\r\n * @example\r\n *\r\n * _.map(['6', '8', '10'], _.unary(parseInt));\r\n * // => [6, 8, 10]\r\n */\r\nfunction unary(func) {\r\n  return ary(func, 1);\r\n}\r\n\r\nexport default unary;\r\n","import toString from './toString.js';\r\nimport unescapeHtmlChar from './_unescapeHtmlChar.js';\r\n\r\n/** Used to match HTML entities and HTML characters. */\r\nvar reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\r\n    reHasEscapedHtml = RegExp(reEscapedHtml.source);\r\n\r\n/**\r\n * The inverse of `_.escape`; this method converts the HTML entities\r\n * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\r\n * their corresponding characters.\r\n *\r\n * **Note:** No other HTML entities are unescaped. To unescape additional\r\n * HTML entities use a third-party library like [_he_](https://mths.be/he).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.6.0\r\n * @category String\r\n * @param {string} [string=''] The string to unescape.\r\n * @returns {string} Returns the unescaped string.\r\n * @example\r\n *\r\n * _.unescape('fred, barney, &amp; pebbles');\r\n * // => 'fred, barney, & pebbles'\r\n */\r\nfunction unescape(string) {\r\n  string = toString(string);\r\n  return (string && reHasEscapedHtml.test(string))\r\n    ? string.replace(reEscapedHtml, unescapeHtmlChar)\r\n    : string;\r\n}\r\n\r\nexport default unescape;\r\n","import baseFlatten from './_baseFlatten.js';\r\nimport baseRest from './_baseRest.js';\r\nimport baseUniq from './_baseUniq.js';\r\nimport isArrayLikeObject from './isArrayLikeObject.js';\r\n\r\n/**\r\n * Creates an array of unique values, in order, from all given arrays using\r\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n * for equality comparisons.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Array\r\n * @param {...Array} [arrays] The arrays to inspect.\r\n * @returns {Array} Returns the new array of combined values.\r\n * @example\r\n *\r\n * _.union([2], [1, 2]);\r\n * // => [2, 1]\r\n */\r\nvar union = baseRest(function(arrays) {\r\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\r\n});\r\n\r\nexport default union;\r\n","import baseFlatten from './_baseFlatten.js';\r\nimport baseIteratee from './_baseIteratee.js';\r\nimport baseRest from './_baseRest.js';\r\nimport baseUniq from './_baseUniq.js';\r\nimport isArrayLikeObject from './isArrayLikeObject.js';\r\nimport last from './last.js';\r\n\r\n/**\r\n * This method is like `_.union` except that it accepts `iteratee` which is\r\n * invoked for each element of each `arrays` to generate the criterion by\r\n * which uniqueness is computed. Result values are chosen from the first\r\n * array in which the value occurs. The iteratee is invoked with one argument:\r\n * (value).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Array\r\n * @param {...Array} [arrays] The arrays to inspect.\r\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\r\n * @returns {Array} Returns the new array of combined values.\r\n * @example\r\n *\r\n * _.unionBy([2.1], [1.2, 2.3], Math.floor);\r\n * // => [2.1, 1.2]\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\r\n * // => [{ 'x': 1 }, { 'x': 2 }]\r\n */\r\nvar unionBy = baseRest(function(arrays) {\r\n  var iteratee = last(arrays);\r\n  if (isArrayLikeObject(iteratee)) {\r\n    iteratee = undefined;\r\n  }\r\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), baseIteratee(iteratee, 2));\r\n});\r\n\r\nexport default unionBy;\r\n","import baseFlatten from './_baseFlatten.js';\r\nimport baseRest from './_baseRest.js';\r\nimport baseUniq from './_baseUniq.js';\r\nimport isArrayLikeObject from './isArrayLikeObject.js';\r\nimport last from './last.js';\r\n\r\n/**\r\n * This method is like `_.union` except that it accepts `comparator` which\r\n * is invoked to compare elements of `arrays`. Result values are chosen from\r\n * the first array in which the value occurs. The comparator is invoked\r\n * with two arguments: (arrVal, othVal).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Array\r\n * @param {...Array} [arrays] The arrays to inspect.\r\n * @param {Function} [comparator] The comparator invoked per element.\r\n * @returns {Array} Returns the new array of combined values.\r\n * @example\r\n *\r\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\r\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\r\n *\r\n * _.unionWith(objects, others, _.isEqual);\r\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\r\n */\r\nvar unionWith = baseRest(function(arrays) {\r\n  var comparator = last(arrays);\r\n  comparator = typeof comparator == 'function' ? comparator : undefined;\r\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\r\n});\r\n\r\nexport default unionWith;\r\n","import baseUniq from './_baseUniq.js';\r\n\r\n/**\r\n * Creates a duplicate-free version of an array, using\r\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n * for equality comparisons, in which only the first occurrence of each element\r\n * is kept. The order of result values is determined by the order they occur\r\n * in the array.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Array\r\n * @param {Array} array The array to inspect.\r\n * @returns {Array} Returns the new duplicate free array.\r\n * @example\r\n *\r\n * _.uniq([2, 1, 2]);\r\n * // => [2, 1]\r\n */\r\nfunction uniq(array) {\r\n  return (array && array.length) ? baseUniq(array) : [];\r\n}\r\n\r\nexport default uniq;\r\n","import baseIteratee from './_baseIteratee.js';\r\nimport baseUniq from './_baseUniq.js';\r\n\r\n/**\r\n * This method is like `_.uniq` except that it accepts `iteratee` which is\r\n * invoked for each element in `array` to generate the criterion by which\r\n * uniqueness is computed. The order of result values is determined by the\r\n * order they occur in the array. The iteratee is invoked with one argument:\r\n * (value).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Array\r\n * @param {Array} array The array to inspect.\r\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\r\n * @returns {Array} Returns the new duplicate free array.\r\n * @example\r\n *\r\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\r\n * // => [2.1, 1.2]\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\r\n * // => [{ 'x': 1 }, { 'x': 2 }]\r\n */\r\nfunction uniqBy(array, iteratee) {\r\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\r\n}\r\n\r\nexport default uniqBy;\r\n","import baseUniq from './_baseUniq.js';\r\n\r\n/**\r\n * This method is like `_.uniq` except that it accepts `comparator` which\r\n * is invoked to compare elements of `array`. The order of result values is\r\n * determined by the order they occur in the array.The comparator is invoked\r\n * with two arguments: (arrVal, othVal).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Array\r\n * @param {Array} array The array to inspect.\r\n * @param {Function} [comparator] The comparator invoked per element.\r\n * @returns {Array} Returns the new duplicate free array.\r\n * @example\r\n *\r\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\r\n *\r\n * _.uniqWith(objects, _.isEqual);\r\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\r\n */\r\nfunction uniqWith(array, comparator) {\r\n  comparator = typeof comparator == 'function' ? comparator : undefined;\r\n  return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\r\n}\r\n\r\nexport default uniqWith;\r\n","import toString from './toString.js';\r\n\r\n/** Used to generate unique IDs. */\r\nvar idCounter = 0;\r\n\r\n/**\r\n * Generates a unique ID. If `prefix` is given, the ID is appended to it.\r\n *\r\n * @static\r\n * @since 0.1.0\r\n * @memberOf _\r\n * @category Util\r\n * @param {string} [prefix=''] The value to prefix the ID with.\r\n * @returns {string} Returns the unique ID.\r\n * @example\r\n *\r\n * _.uniqueId('contact_');\r\n * // => 'contact_104'\r\n *\r\n * _.uniqueId();\r\n * // => '105'\r\n */\r\nfunction uniqueId(prefix) {\r\n  var id = ++idCounter;\r\n  return toString(prefix) + id;\r\n}\r\n\r\nexport default uniqueId;\r\n","import baseUnset from './_baseUnset.js';\r\n\r\n/**\r\n * Removes the property at `path` of `object`.\r\n *\r\n * **Note:** This method mutates `object`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Object\r\n * @param {Object} object The object to modify.\r\n * @param {Array|string} path The path of the property to unset.\r\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\r\n * @example\r\n *\r\n * var object = { 'a': [{ 'b': { 'c': 7 } }] };\r\n * _.unset(object, 'a[0].b.c');\r\n * // => true\r\n *\r\n * console.log(object);\r\n * // => { 'a': [{ 'b': {} }] };\r\n *\r\n * _.unset(object, ['a', '0', 'b', 'c']);\r\n * // => true\r\n *\r\n * console.log(object);\r\n * // => { 'a': [{ 'b': {} }] };\r\n */\r\nfunction unset(object, path) {\r\n  return object == null ? true : baseUnset(object, path);\r\n}\r\n\r\nexport default unset;\r\n","import arrayFilter from './_arrayFilter.js';\r\nimport arrayMap from './_arrayMap.js';\r\nimport baseProperty from './_baseProperty.js';\r\nimport baseTimes from './_baseTimes.js';\r\nimport isArrayLikeObject from './isArrayLikeObject.js';\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMax = Math.max;\r\n\r\n/**\r\n * This method is like `_.zip` except that it accepts an array of grouped\r\n * elements and creates an array regrouping the elements to their pre-zip\r\n * configuration.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 1.2.0\r\n * @category Array\r\n * @param {Array} array The array of grouped elements to process.\r\n * @returns {Array} Returns the new array of regrouped elements.\r\n * @example\r\n *\r\n * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\r\n * // => [['a', 1, true], ['b', 2, false]]\r\n *\r\n * _.unzip(zipped);\r\n * // => [['a', 'b'], [1, 2], [true, false]]\r\n */\r\nfunction unzip(array) {\r\n  if (!(array && array.length)) {\r\n    return [];\r\n  }\r\n  var length = 0;\r\n  array = arrayFilter(array, function(group) {\r\n    if (isArrayLikeObject(group)) {\r\n      length = nativeMax(group.length, length);\r\n      return true;\r\n    }\r\n  });\r\n  return baseTimes(length, function(index) {\r\n    return arrayMap(array, baseProperty(index));\r\n  });\r\n}\r\n\r\nexport default unzip;\r\n","import apply from './_apply.js';\r\nimport arrayMap from './_arrayMap.js';\r\nimport unzip from './unzip.js';\r\n\r\n/**\r\n * This method is like `_.unzip` except that it accepts `iteratee` to specify\r\n * how regrouped values should be combined. The iteratee is invoked with the\r\n * elements of each group: (...group).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.8.0\r\n * @category Array\r\n * @param {Array} array The array of grouped elements to process.\r\n * @param {Function} [iteratee=_.identity] The function to combine\r\n *  regrouped values.\r\n * @returns {Array} Returns the new array of regrouped elements.\r\n * @example\r\n *\r\n * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\r\n * // => [[1, 10, 100], [2, 20, 200]]\r\n *\r\n * _.unzipWith(zipped, _.add);\r\n * // => [3, 30, 300]\r\n */\r\nfunction unzipWith(array, iteratee) {\r\n  if (!(array && array.length)) {\r\n    return [];\r\n  }\r\n  var result = unzip(array);\r\n  if (iteratee == null) {\r\n    return result;\r\n  }\r\n  return arrayMap(result, function(group) {\r\n    return apply(iteratee, undefined, group);\r\n  });\r\n}\r\n\r\nexport default unzipWith;\r\n","import baseUpdate from './_baseUpdate.js';\r\nimport castFunction from './_castFunction.js';\r\n\r\n/**\r\n * This method is like `_.set` except that accepts `updater` to produce the\r\n * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\r\n * is invoked with one argument: (value).\r\n *\r\n * **Note:** This method mutates `object`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.6.0\r\n * @category Object\r\n * @param {Object} object The object to modify.\r\n * @param {Array|string} path The path of the property to set.\r\n * @param {Function} updater The function to produce the updated value.\r\n * @returns {Object} Returns `object`.\r\n * @example\r\n *\r\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\r\n *\r\n * _.update(object, 'a[0].b.c', function(n) { return n * n; });\r\n * console.log(object.a[0].b.c);\r\n * // => 9\r\n *\r\n * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\r\n * console.log(object.x[0].y.z);\r\n * // => 0\r\n */\r\nfunction update(object, path, updater) {\r\n  return object == null ? object : baseUpdate(object, path, castFunction(updater));\r\n}\r\n\r\nexport default update;\r\n","import baseUpdate from './_baseUpdate.js';\r\nimport castFunction from './_castFunction.js';\r\n\r\n/**\r\n * This method is like `_.update` except that it accepts `customizer` which is\r\n * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\r\n * path creation is handled by the method instead. The `customizer` is invoked\r\n * with three arguments: (nsValue, key, nsObject).\r\n *\r\n * **Note:** This method mutates `object`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.6.0\r\n * @category Object\r\n * @param {Object} object The object to modify.\r\n * @param {Array|string} path The path of the property to set.\r\n * @param {Function} updater The function to produce the updated value.\r\n * @param {Function} [customizer] The function to customize assigned values.\r\n * @returns {Object} Returns `object`.\r\n * @example\r\n *\r\n * var object = {};\r\n *\r\n * _.updateWith(object, '[0][1]', _.constant('a'), Object);\r\n * // => { '0': { '1': 'a' } }\r\n */\r\nfunction updateWith(object, path, updater, customizer) {\r\n  customizer = typeof customizer == 'function' ? customizer : undefined;\r\n  return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\r\n}\r\n\r\nexport default updateWith;\r\n","import createCompounder from './_createCompounder.js';\r\n\r\n/**\r\n * Converts `string`, as space separated words, to upper case.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category String\r\n * @param {string} [string=''] The string to convert.\r\n * @returns {string} Returns the upper cased string.\r\n * @example\r\n *\r\n * _.upperCase('--foo-bar');\r\n * // => 'FOO BAR'\r\n *\r\n * _.upperCase('fooBar');\r\n * // => 'FOO BAR'\r\n *\r\n * _.upperCase('__foo_bar__');\r\n * // => 'FOO BAR'\r\n */\r\nvar upperCase = createCompounder(function(result, word, index) {\r\n  return result + (index ? ' ' : '') + word.toUpperCase();\r\n});\r\n\r\nexport default upperCase;\r\n","import createCaseFirst from './_createCaseFirst.js';\r\n\r\n/**\r\n * Converts the first character of `string` to upper case.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category String\r\n * @param {string} [string=''] The string to convert.\r\n * @returns {string} Returns the converted string.\r\n * @example\r\n *\r\n * _.upperFirst('fred');\r\n * // => 'Fred'\r\n *\r\n * _.upperFirst('FRED');\r\n * // => 'FRED'\r\n */\r\nvar upperFirst = createCaseFirst('toUpperCase');\r\n\r\nexport default upperFirst;\r\n","import attempt from './attempt.js';\r\nimport bindAll from './bindAll.js';\r\nimport cond from './cond.js';\r\nimport conforms from './conforms.js';\r\nimport constant from './constant.js';\r\nimport defaultTo from './defaultTo.js';\r\nimport flow from './flow.js';\r\nimport flowRight from './flowRight.js';\r\nimport identity from './identity.js';\r\nimport iteratee from './iteratee.js';\r\nimport matches from './matches.js';\r\nimport matchesProperty from './matchesProperty.js';\r\nimport method from './method.js';\r\nimport methodOf from './methodOf.js';\r\nimport mixin from './mixin.js';\r\nimport noop from './noop.js';\r\nimport nthArg from './nthArg.js';\r\nimport over from './over.js';\r\nimport overEvery from './overEvery.js';\r\nimport overSome from './overSome.js';\r\nimport property from './property.js';\r\nimport propertyOf from './propertyOf.js';\r\nimport range from './range.js';\r\nimport rangeRight from './rangeRight.js';\r\nimport stubArray from './stubArray.js';\r\nimport stubFalse from './stubFalse.js';\r\nimport stubObject from './stubObject.js';\r\nimport stubString from './stubString.js';\r\nimport stubTrue from './stubTrue.js';\r\nimport times from './times.js';\r\nimport toPath from './toPath.js';\r\nimport uniqueId from './uniqueId.js';\r\n\r\nexport default {\r\n  attempt, bindAll, cond, conforms, constant,\r\n  defaultTo, flow, flowRight, identity, iteratee,\r\n  matches, matchesProperty, method, methodOf, mixin,\r\n  noop, nthArg, over, overEvery, overSome,\r\n  property, propertyOf, range, rangeRight, stubArray,\r\n  stubFalse, stubObject, stubString, stubTrue, times,\r\n  toPath, uniqueId\r\n};\r\n","export { default as attempt } from './attempt.js';\r\nexport { default as bindAll } from './bindAll.js';\r\nexport { default as cond } from './cond.js';\r\nexport { default as conforms } from './conforms.js';\r\nexport { default as constant } from './constant.js';\r\nexport { default as defaultTo } from './defaultTo.js';\r\nexport { default as flow } from './flow.js';\r\nexport { default as flowRight } from './flowRight.js';\r\nexport { default as identity } from './identity.js';\r\nexport { default as iteratee } from './iteratee.js';\r\nexport { default as matches } from './matches.js';\r\nexport { default as matchesProperty } from './matchesProperty.js';\r\nexport { default as method } from './method.js';\r\nexport { default as methodOf } from './methodOf.js';\r\nexport { default as mixin } from './mixin.js';\r\nexport { default as noop } from './noop.js';\r\nexport { default as nthArg } from './nthArg.js';\r\nexport { default as over } from './over.js';\r\nexport { default as overEvery } from './overEvery.js';\r\nexport { default as overSome } from './overSome.js';\r\nexport { default as property } from './property.js';\r\nexport { default as propertyOf } from './propertyOf.js';\r\nexport { default as range } from './range.js';\r\nexport { default as rangeRight } from './rangeRight.js';\r\nexport { default as stubArray } from './stubArray.js';\r\nexport { default as stubFalse } from './stubFalse.js';\r\nexport { default as stubObject } from './stubObject.js';\r\nexport { default as stubString } from './stubString.js';\r\nexport { default as stubTrue } from './stubTrue.js';\r\nexport { default as times } from './times.js';\r\nexport { default as toPath } from './toPath.js';\r\nexport { default as uniqueId } from './uniqueId.js';\r\nexport { default } from './util.default.js';\r\n","export { default } from './wrapperValue.js'\r\n","export { default } from './wrapperValue.js'\r\n","import baseValues from './_baseValues.js';\r\nimport keys from './keys.js';\r\n\r\n/**\r\n * Creates an array of the own enumerable string keyed property values of `object`.\r\n *\r\n * **Note:** Non-object values are coerced to objects.\r\n *\r\n * @static\r\n * @since 0.1.0\r\n * @memberOf _\r\n * @category Object\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the array of property values.\r\n * @example\r\n *\r\n * function Foo() {\r\n *   this.a = 1;\r\n *   this.b = 2;\r\n * }\r\n *\r\n * Foo.prototype.c = 3;\r\n *\r\n * _.values(new Foo);\r\n * // => [1, 2] (iteration order is not guaranteed)\r\n *\r\n * _.values('hi');\r\n * // => ['h', 'i']\r\n */\r\nfunction values(object) {\r\n  return object == null ? [] : baseValues(object, keys(object));\r\n}\r\n\r\nexport default values;\r\n","import baseValues from './_baseValues.js';\r\nimport keysIn from './keysIn.js';\r\n\r\n/**\r\n * Creates an array of the own and inherited enumerable string keyed property\r\n * values of `object`.\r\n *\r\n * **Note:** Non-object values are coerced to objects.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Object\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the array of property values.\r\n * @example\r\n *\r\n * function Foo() {\r\n *   this.a = 1;\r\n *   this.b = 2;\r\n * }\r\n *\r\n * Foo.prototype.c = 3;\r\n *\r\n * _.valuesIn(new Foo);\r\n * // => [1, 2, 3] (iteration order is not guaranteed)\r\n */\r\nfunction valuesIn(object) {\r\n  return object == null ? [] : baseValues(object, keysIn(object));\r\n}\r\n\r\nexport default valuesIn;\r\n","import baseDifference from './_baseDifference.js';\r\nimport baseRest from './_baseRest.js';\r\nimport isArrayLikeObject from './isArrayLikeObject.js';\r\n\r\n/**\r\n * Creates an array excluding all given values using\r\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n * for equality comparisons.\r\n *\r\n * **Note:** Unlike `_.pull`, this method returns a new array.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Array\r\n * @param {Array} array The array to inspect.\r\n * @param {...*} [values] The values to exclude.\r\n * @returns {Array} Returns the new array of filtered values.\r\n * @see _.difference, _.xor\r\n * @example\r\n *\r\n * _.without([2, 1, 2, 3], 1, 2);\r\n * // => [3]\r\n */\r\nvar without = baseRest(function(array, values) {\r\n  return isArrayLikeObject(array)\r\n    ? baseDifference(array, values)\r\n    : [];\r\n});\r\n\r\nexport default without;\r\n","import asciiWords from './_asciiWords.js';\r\nimport hasUnicodeWord from './_hasUnicodeWord.js';\r\nimport toString from './toString.js';\r\nimport unicodeWords from './_unicodeWords.js';\r\n\r\n/**\r\n * Splits `string` into an array of its words.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category String\r\n * @param {string} [string=''] The string to inspect.\r\n * @param {RegExp|string} [pattern] The pattern to match words.\r\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\r\n * @returns {Array} Returns the words of `string`.\r\n * @example\r\n *\r\n * _.words('fred, barney, & pebbles');\r\n * // => ['fred', 'barney', 'pebbles']\r\n *\r\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\r\n * // => ['fred', 'barney', '&', 'pebbles']\r\n */\r\nfunction words(string, pattern, guard) {\r\n  string = toString(string);\r\n  pattern = guard ? undefined : pattern;\r\n\r\n  if (pattern === undefined) {\r\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\r\n  }\r\n  return string.match(pattern) || [];\r\n}\r\n\r\nexport default words;\r\n","import castFunction from './_castFunction.js';\r\nimport partial from './partial.js';\r\n\r\n/**\r\n * Creates a function that provides `value` to `wrapper` as its first\r\n * argument. Any additional arguments provided to the function are appended\r\n * to those provided to the `wrapper`. The wrapper is invoked with the `this`\r\n * binding of the created function.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Function\r\n * @param {*} value The value to wrap.\r\n * @param {Function} [wrapper=identity] The wrapper function.\r\n * @returns {Function} Returns the new function.\r\n * @example\r\n *\r\n * var p = _.wrap(_.escape, function(func, text) {\r\n *   return '<p>' + func(text) + '</p>';\r\n * });\r\n *\r\n * p('fred, barney, & pebbles');\r\n * // => '<p>fred, barney, &amp; pebbles</p>'\r\n */\r\nfunction wrap(value, wrapper) {\r\n  return partial(castFunction(wrapper), value);\r\n}\r\n\r\nexport default wrap;\r\n","import LazyWrapper from './_LazyWrapper.js';\r\nimport LodashWrapper from './_LodashWrapper.js';\r\nimport baseAt from './_baseAt.js';\r\nimport flatRest from './_flatRest.js';\r\nimport isIndex from './_isIndex.js';\r\nimport thru from './thru.js';\r\n\r\n/**\r\n * This method is the wrapper version of `_.at`.\r\n *\r\n * @name at\r\n * @memberOf _\r\n * @since 1.0.0\r\n * @category Seq\r\n * @param {...(string|string[])} [paths] The property paths to pick.\r\n * @returns {Object} Returns the new `lodash` wrapper instance.\r\n * @example\r\n *\r\n * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\r\n *\r\n * _(object).at(['a[0].b.c', 'a[1]']).value();\r\n * // => [3, 4]\r\n */\r\nvar wrapperAt = flatRest(function(paths) {\r\n  var length = paths.length,\r\n      start = length ? paths[0] : 0,\r\n      value = this.__wrapped__,\r\n      interceptor = function(object) { return baseAt(object, paths); };\r\n\r\n  if (length > 1 || this.__actions__.length ||\r\n      !(value instanceof LazyWrapper) || !isIndex(start)) {\r\n    return this.thru(interceptor);\r\n  }\r\n  value = value.slice(start, +start + (length ? 1 : 0));\r\n  value.__actions__.push({\r\n    'func': thru,\r\n    'args': [interceptor],\r\n    'thisArg': undefined\r\n  });\r\n  return new LodashWrapper(value, this.__chain__).thru(function(array) {\r\n    if (length && !array.length) {\r\n      array.push(undefined);\r\n    }\r\n    return array;\r\n  });\r\n});\r\n\r\nexport default wrapperAt;\r\n","import chain from './chain.js';\r\n\r\n/**\r\n * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\r\n *\r\n * @name chain\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Seq\r\n * @returns {Object} Returns the new `lodash` wrapper instance.\r\n * @example\r\n *\r\n * var users = [\r\n *   { 'user': 'barney', 'age': 36 },\r\n *   { 'user': 'fred',   'age': 40 }\r\n * ];\r\n *\r\n * // A sequence without explicit chaining.\r\n * _(users).head();\r\n * // => { 'user': 'barney', 'age': 36 }\r\n *\r\n * // A sequence with explicit chaining.\r\n * _(users)\r\n *   .chain()\r\n *   .head()\r\n *   .pick('user')\r\n *   .value();\r\n * // => { 'user': 'barney' }\r\n */\r\nfunction wrapperChain() {\r\n  return chain(this);\r\n}\r\n\r\nexport default wrapperChain;\r\n","import LazyWrapper from './_LazyWrapper.js';\r\nimport LodashWrapper from './_LodashWrapper.js';\r\nimport baseLodash from './_baseLodash.js';\r\nimport isArray from './isArray.js';\r\nimport isObjectLike from './isObjectLike.js';\r\nimport wrapperClone from './_wrapperClone.js';\r\n\r\n/** Used for built-in method references. */\r\nvar objectProto = Object.prototype;\r\n\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n/**\r\n * Creates a `lodash` object which wraps `value` to enable implicit method\r\n * chain sequences. Methods that operate on and return arrays, collections,\r\n * and functions can be chained together. Methods that retrieve a single value\r\n * or may return a primitive value will automatically end the chain sequence\r\n * and return the unwrapped value. Otherwise, the value must be unwrapped\r\n * with `_#value`.\r\n *\r\n * Explicit chain sequences, which must be unwrapped with `_#value`, may be\r\n * enabled using `_.chain`.\r\n *\r\n * The execution of chained methods is lazy, that is, it's deferred until\r\n * `_#value` is implicitly or explicitly called.\r\n *\r\n * Lazy evaluation allows several methods to support shortcut fusion.\r\n * Shortcut fusion is an optimization to merge iteratee calls; this avoids\r\n * the creation of intermediate arrays and can greatly reduce the number of\r\n * iteratee executions. Sections of a chain sequence qualify for shortcut\r\n * fusion if the section is applied to an array and iteratees accept only\r\n * one argument. The heuristic for whether a section qualifies for shortcut\r\n * fusion is subject to change.\r\n *\r\n * Chaining is supported in custom builds as long as the `_#value` method is\r\n * directly or indirectly included in the build.\r\n *\r\n * In addition to lodash methods, wrappers have `Array` and `String` methods.\r\n *\r\n * The wrapper `Array` methods are:\r\n * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\r\n *\r\n * The wrapper `String` methods are:\r\n * `replace` and `split`\r\n *\r\n * The wrapper methods that support shortcut fusion are:\r\n * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\r\n * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\r\n * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\r\n *\r\n * The chainable wrapper methods are:\r\n * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\r\n * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\r\n * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\r\n * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\r\n * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\r\n * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\r\n * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\r\n * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\r\n * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\r\n * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\r\n * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\r\n * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\r\n * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\r\n * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\r\n * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\r\n * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\r\n * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\r\n * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\r\n * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\r\n * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\r\n * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\r\n * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\r\n * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\r\n * `zipObject`, `zipObjectDeep`, and `zipWith`\r\n *\r\n * The wrapper methods that are **not** chainable by default are:\r\n * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\r\n * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\r\n * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\r\n * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\r\n * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\r\n * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\r\n * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\r\n * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\r\n * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\r\n * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\r\n * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\r\n * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\r\n * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\r\n * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\r\n * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\r\n * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\r\n * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\r\n * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\r\n * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\r\n * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\r\n * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\r\n * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\r\n * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\r\n * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\r\n * `upperFirst`, `value`, and `words`\r\n *\r\n * @name _\r\n * @constructor\r\n * @category Seq\r\n * @param {*} value The value to wrap in a `lodash` instance.\r\n * @returns {Object} Returns the new `lodash` wrapper instance.\r\n * @example\r\n *\r\n * function square(n) {\r\n *   return n * n;\r\n * }\r\n *\r\n * var wrapped = _([1, 2, 3]);\r\n *\r\n * // Returns an unwrapped value.\r\n * wrapped.reduce(_.add);\r\n * // => 6\r\n *\r\n * // Returns a wrapped value.\r\n * var squares = wrapped.map(square);\r\n *\r\n * _.isArray(squares);\r\n * // => false\r\n *\r\n * _.isArray(squares.value());\r\n * // => true\r\n */\r\nfunction lodash(value) {\r\n  if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\r\n    if (value instanceof LodashWrapper) {\r\n      return value;\r\n    }\r\n    if (hasOwnProperty.call(value, '__wrapped__')) {\r\n      return wrapperClone(value);\r\n    }\r\n  }\r\n  return new LodashWrapper(value);\r\n}\r\n\r\n// Ensure wrappers are instances of `baseLodash`.\r\nlodash.prototype = baseLodash.prototype;\r\nlodash.prototype.constructor = lodash;\r\n\r\nexport default lodash;\r\n","import LazyWrapper from './_LazyWrapper.js';\r\nimport LodashWrapper from './_LodashWrapper.js';\r\nimport reverse from './reverse.js';\r\nimport thru from './thru.js';\r\n\r\n/**\r\n * This method is the wrapper version of `_.reverse`.\r\n *\r\n * **Note:** This method mutates the wrapped array.\r\n *\r\n * @name reverse\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Seq\r\n * @returns {Object} Returns the new `lodash` wrapper instance.\r\n * @example\r\n *\r\n * var array = [1, 2, 3];\r\n *\r\n * _(array).reverse().value()\r\n * // => [3, 2, 1]\r\n *\r\n * console.log(array);\r\n * // => [3, 2, 1]\r\n */\r\nfunction wrapperReverse() {\r\n  var value = this.__wrapped__;\r\n  if (value instanceof LazyWrapper) {\r\n    var wrapped = value;\r\n    if (this.__actions__.length) {\r\n      wrapped = new LazyWrapper(this);\r\n    }\r\n    wrapped = wrapped.reverse();\r\n    wrapped.__actions__.push({\r\n      'func': thru,\r\n      'args': [reverse],\r\n      'thisArg': undefined\r\n    });\r\n    return new LodashWrapper(wrapped, this.__chain__);\r\n  }\r\n  return this.thru(reverse);\r\n}\r\n\r\nexport default wrapperReverse;\r\n","import baseWrapperValue from './_baseWrapperValue.js';\r\n\r\n/**\r\n * Executes the chain sequence to resolve the unwrapped value.\r\n *\r\n * @name value\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @alias toJSON, valueOf\r\n * @category Seq\r\n * @returns {*} Returns the resolved unwrapped value.\r\n * @example\r\n *\r\n * _([1, 2, 3]).value();\r\n * // => [1, 2, 3]\r\n */\r\nfunction wrapperValue() {\r\n  return baseWrapperValue(this.__wrapped__, this.__actions__);\r\n}\r\n\r\nexport default wrapperValue;\r\n","import arrayFilter from './_arrayFilter.js';\r\nimport baseRest from './_baseRest.js';\r\nimport baseXor from './_baseXor.js';\r\nimport isArrayLikeObject from './isArrayLikeObject.js';\r\n\r\n/**\r\n * Creates an array of unique values that is the\r\n * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\r\n * of the given arrays. The order of result values is determined by the order\r\n * they occur in the arrays.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 2.4.0\r\n * @category Array\r\n * @param {...Array} [arrays] The arrays to inspect.\r\n * @returns {Array} Returns the new array of filtered values.\r\n * @see _.difference, _.without\r\n * @example\r\n *\r\n * _.xor([2, 1], [2, 3]);\r\n * // => [1, 3]\r\n */\r\nvar xor = baseRest(function(arrays) {\r\n  return baseXor(arrayFilter(arrays, isArrayLikeObject));\r\n});\r\n\r\nexport default xor;\r\n","import arrayFilter from './_arrayFilter.js';\r\nimport baseIteratee from './_baseIteratee.js';\r\nimport baseRest from './_baseRest.js';\r\nimport baseXor from './_baseXor.js';\r\nimport isArrayLikeObject from './isArrayLikeObject.js';\r\nimport last from './last.js';\r\n\r\n/**\r\n * This method is like `_.xor` except that it accepts `iteratee` which is\r\n * invoked for each element of each `arrays` to generate the criterion by\r\n * which by which they're compared. The order of result values is determined\r\n * by the order they occur in the arrays. The iteratee is invoked with one\r\n * argument: (value).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Array\r\n * @param {...Array} [arrays] The arrays to inspect.\r\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\r\n * @returns {Array} Returns the new array of filtered values.\r\n * @example\r\n *\r\n * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\r\n * // => [1.2, 3.4]\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\r\n * // => [{ 'x': 2 }]\r\n */\r\nvar xorBy = baseRest(function(arrays) {\r\n  var iteratee = last(arrays);\r\n  if (isArrayLikeObject(iteratee)) {\r\n    iteratee = undefined;\r\n  }\r\n  return baseXor(arrayFilter(arrays, isArrayLikeObject), baseIteratee(iteratee, 2));\r\n});\r\n\r\nexport default xorBy;\r\n","import arrayFilter from './_arrayFilter.js';\r\nimport baseRest from './_baseRest.js';\r\nimport baseXor from './_baseXor.js';\r\nimport isArrayLikeObject from './isArrayLikeObject.js';\r\nimport last from './last.js';\r\n\r\n/**\r\n * This method is like `_.xor` except that it accepts `comparator` which is\r\n * invoked to compare elements of `arrays`. The order of result values is\r\n * determined by the order they occur in the arrays. The comparator is invoked\r\n * with two arguments: (arrVal, othVal).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Array\r\n * @param {...Array} [arrays] The arrays to inspect.\r\n * @param {Function} [comparator] The comparator invoked per element.\r\n * @returns {Array} Returns the new array of filtered values.\r\n * @example\r\n *\r\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\r\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\r\n *\r\n * _.xorWith(objects, others, _.isEqual);\r\n * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\r\n */\r\nvar xorWith = baseRest(function(arrays) {\r\n  var comparator = last(arrays);\r\n  comparator = typeof comparator == 'function' ? comparator : undefined;\r\n  return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\r\n});\r\n\r\nexport default xorWith;\r\n","import baseRest from './_baseRest.js';\r\nimport unzip from './unzip.js';\r\n\r\n/**\r\n * Creates an array of grouped elements, the first of which contains the\r\n * first elements of the given arrays, the second of which contains the\r\n * second elements of the given arrays, and so on.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Array\r\n * @param {...Array} [arrays] The arrays to process.\r\n * @returns {Array} Returns the new array of grouped elements.\r\n * @example\r\n *\r\n * _.zip(['a', 'b'], [1, 2], [true, false]);\r\n * // => [['a', 1, true], ['b', 2, false]]\r\n */\r\nvar zip = baseRest(unzip);\r\n\r\nexport default zip;\r\n","import assignValue from './_assignValue.js';\r\nimport baseZipObject from './_baseZipObject.js';\r\n\r\n/**\r\n * This method is like `_.fromPairs` except that it accepts two arrays,\r\n * one of property identifiers and one of corresponding values.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.4.0\r\n * @category Array\r\n * @param {Array} [props=[]] The property identifiers.\r\n * @param {Array} [values=[]] The property values.\r\n * @returns {Object} Returns the new object.\r\n * @example\r\n *\r\n * _.zipObject(['a', 'b'], [1, 2]);\r\n * // => { 'a': 1, 'b': 2 }\r\n */\r\nfunction zipObject(props, values) {\r\n  return baseZipObject(props || [], values || [], assignValue);\r\n}\r\n\r\nexport default zipObject;\r\n","import baseSet from './_baseSet.js';\r\nimport baseZipObject from './_baseZipObject.js';\r\n\r\n/**\r\n * This method is like `_.zipObject` except that it supports property paths.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.1.0\r\n * @category Array\r\n * @param {Array} [props=[]] The property identifiers.\r\n * @param {Array} [values=[]] The property values.\r\n * @returns {Object} Returns the new object.\r\n * @example\r\n *\r\n * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\r\n * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\r\n */\r\nfunction zipObjectDeep(props, values) {\r\n  return baseZipObject(props || [], values || [], baseSet);\r\n}\r\n\r\nexport default zipObjectDeep;\r\n","import baseRest from './_baseRest.js';\r\nimport unzipWith from './unzipWith.js';\r\n\r\n/**\r\n * This method is like `_.zip` except that it accepts `iteratee` to specify\r\n * how grouped values should be combined. The iteratee is invoked with the\r\n * elements of each group: (...group).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.8.0\r\n * @category Array\r\n * @param {...Array} [arrays] The arrays to process.\r\n * @param {Function} [iteratee=_.identity] The function to combine\r\n *  grouped values.\r\n * @returns {Array} Returns the new array of grouped elements.\r\n * @example\r\n *\r\n * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\r\n *   return a + b + c;\r\n * });\r\n * // => [111, 222]\r\n */\r\nvar zipWith = baseRest(function(arrays) {\r\n  var length = arrays.length,\r\n      iteratee = length > 1 ? arrays[length - 1] : undefined;\r\n\r\n  iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\r\n  return unzipWith(arrays, iteratee);\r\n});\r\n\r\nexport default zipWith;\r\n","module.exports = \".ck.ck-placeholder:before,.ck .ck-placeholder:before{content:attr(data-placeholder);pointer-events:none}.ck.ck-read-only .ck-placeholder:before{display:none}.ck.ck-placeholder:before,.ck .ck-placeholder:before{cursor:text;color:var(--ck-color-engine-placeholder-text)}\"","module.exports = \".ck .ck-button.ck-color-table__remove-color{display:flex;align-items:center;width:100%}label.ck.ck-color-grid__label{font-weight:unset}.ck .ck-button.ck-color-table__remove-color{padding:calc(var(--ck-spacing-standard)/2) var(--ck-spacing-standard);border-bottom-left-radius:0;border-bottom-right-radius:0}.ck .ck-button.ck-color-table__remove-color:not(:focus){border-bottom:1px solid var(--ck-color-base-border)}[dir=ltr] .ck .ck-button.ck-color-table__remove-color .ck.ck-icon{margin-right:var(--ck-spacing-standard)}[dir=rtl] .ck .ck-button.ck-color-table__remove-color .ck.ck-icon{margin-left:var(--ck-spacing-standard)}\"","module.exports = \".ck .ck-link_selected{background:var(--ck-color-link-selected-background)}\"","module.exports = \".ck.ck-link-actions{display:flex;flex-direction:row;flex-wrap:nowrap}.ck.ck-link-actions .ck-link-actions__preview{display:inline-block}.ck.ck-link-actions .ck-link-actions__preview .ck-button__label{overflow:hidden}@media screen and (max-width:600px){.ck.ck-link-actions{flex-wrap:wrap}.ck.ck-link-actions .ck-link-actions__preview{flex-basis:100%}.ck.ck-link-actions .ck-button:not(.ck-link-actions__preview){flex-basis:50%}}.ck.ck-link-actions{padding:var(--ck-spacing-standard)}.ck.ck-link-actions .ck-button.ck-link-actions__preview{padding-left:0;padding-right:0}.ck.ck-link-actions .ck-button.ck-link-actions__preview .ck-button__label{padding:0 var(--ck-spacing-medium);color:var(--ck-color-link-default);text-overflow:ellipsis;cursor:pointer;max-width:var(--ck-input-text-width);min-width:3em;text-align:center}.ck.ck-link-actions .ck-button.ck-link-actions__preview .ck-button__label:hover{text-decoration:underline}.ck.ck-link-actions .ck-button.ck-link-actions__preview,.ck.ck-link-actions .ck-button.ck-link-actions__preview:active,.ck.ck-link-actions .ck-button.ck-link-actions__preview:focus,.ck.ck-link-actions .ck-button.ck-link-actions__preview:hover{background:none}.ck.ck-link-actions .ck-button.ck-link-actions__preview:active{box-shadow:none}.ck.ck-link-actions .ck-button.ck-link-actions__preview:focus .ck-button__label{text-decoration:underline}.ck.ck-link-actions:focus{outline:none}[dir=ltr] .ck.ck-link-actions .ck-button:not(:first-child),[dir=rtl] .ck.ck-link-actions .ck-button:not(:last-child){margin-left:var(--ck-spacing-standard)}@media screen and (max-width:600px){.ck.ck-link-actions{padding:0;width:calc(0.8*var(--ck-input-text-width))}.ck.ck-link-actions .ck-button.ck-link-actions__preview{margin:var(--ck-spacing-standard) var(--ck-spacing-standard) 0}.ck.ck-link-actions .ck-button.ck-link-actions__preview .ck-button__label{min-width:0;max-width:100%}.ck.ck-link-actions .ck-button:not(.ck-link-actions__preview){padding:var(--ck-spacing-standard);margin-top:var(--ck-spacing-standard);border-radius:0;border:0;border-top:1px solid var(--ck-color-base-border)}[dir=ltr] .ck.ck-link-actions .ck-button:not(.ck-link-actions__preview){margin-left:0}[dir=ltr] .ck.ck-link-actions .ck-button:not(.ck-link-actions__preview):first-of-type{border-right:1px solid var(--ck-color-base-border)}[dir=rtl] .ck.ck-link-actions .ck-button:not(.ck-link-actions__preview){margin-left:0}[dir=rtl] .ck.ck-link-actions .ck-button:not(.ck-link-actions__preview):last-of-type{border-right:1px solid var(--ck-color-base-border)}}\"","module.exports = \".ck.ck-link-form{display:flex}.ck.ck-link-form .ck-label{display:none}@media screen and (max-width:600px){.ck.ck-link-form{flex-wrap:wrap}.ck.ck-link-form .ck-labeled-input{flex-basis:100%}.ck.ck-link-form .ck-button{flex-basis:50%}}.ck.ck-link-form_layout-vertical{display:block}.ck.ck-link-form{padding:var(--ck-spacing-standard)}.ck.ck-link-form:focus{outline:none}[dir=ltr] .ck.ck-link-form>:not(:first-child),[dir=rtl] .ck.ck-link-form>:not(:last-child){margin-left:var(--ck-spacing-standard)}@media screen and (max-width:600px){.ck.ck-link-form{padding:0;width:calc(0.8*var(--ck-input-text-width))}.ck.ck-link-form .ck-labeled-input{margin:var(--ck-spacing-standard) var(--ck-spacing-standard) 0}.ck.ck-link-form .ck-labeled-input .ck-input-text{min-width:0;width:100%}.ck.ck-link-form .ck-button{padding:var(--ck-spacing-standard);margin-top:var(--ck-spacing-standard);border-radius:0;border:0;border-top:1px solid var(--ck-color-base-border)}[dir=ltr] .ck.ck-link-form .ck-button{margin-left:0}[dir=ltr] .ck.ck-link-form .ck-button:first-of-type{border-right:1px solid var(--ck-color-base-border)}[dir=rtl] .ck.ck-link-form .ck-button{margin-left:0}[dir=rtl] .ck.ck-link-form .ck-button:last-of-type{border-right:1px solid var(--ck-color-base-border)}}.ck.ck-link-form_layout-vertical{padding:0;min-width:var(--ck-input-text-width)}.ck.ck-link-form_layout-vertical .ck-labeled-input{margin:var(--ck-spacing-standard) var(--ck-spacing-standard) var(--ck-spacing-small)}.ck.ck-link-form_layout-vertical .ck-labeled-input .ck-input-text{min-width:0;width:100%}.ck.ck-link-form_layout-vertical .ck-button{padding:var(--ck-spacing-standard);margin:0;border-radius:0;border:0;border-top:1px solid var(--ck-color-base-border);width:50%}[dir=ltr] .ck.ck-link-form_layout-vertical .ck-button{margin-left:0}[dir=ltr] .ck.ck-link-form_layout-vertical .ck-button:first-of-type{border-right:1px solid var(--ck-color-base-border)}[dir=rtl] .ck.ck-link-form_layout-vertical .ck-button{margin-left:0}[dir=rtl] .ck.ck-link-form_layout-vertical .ck-button:last-of-type{border-right:1px solid var(--ck-color-base-border)}.ck.ck-link-form_layout-vertical .ck.ck-list{margin-left:0}.ck.ck-link-form_layout-vertical .ck.ck-list .ck-button.ck-switchbutton{border:0;width:100%}.ck.ck-link-form_layout-vertical .ck.ck-list .ck-button.ck-switchbutton:hover{background:none}\"","module.exports = \".ck.ck-button,a.ck.ck-button{-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none}.ck.ck-button .ck-tooltip,a.ck.ck-button .ck-tooltip{display:block}@media (hover:none){.ck.ck-button .ck-tooltip,a.ck.ck-button .ck-tooltip{display:none}}.ck.ck-button,a.ck.ck-button{position:relative;display:inline-flex;align-items:center;justify-content:left}.ck.ck-button .ck-button__label,a.ck.ck-button .ck-button__label{display:none}.ck.ck-button.ck-button_with-text .ck-button__label,a.ck.ck-button.ck-button_with-text .ck-button__label{display:inline-block}.ck.ck-button:not(.ck-button_with-text),a.ck.ck-button:not(.ck-button_with-text){justify-content:center}.ck.ck-button:hover .ck-tooltip,a.ck.ck-button:hover .ck-tooltip{visibility:visible;opacity:1}.ck.ck-button:focus:not(:hover) .ck-tooltip,a.ck.ck-button:focus:not(:hover) .ck-tooltip{display:none}.ck.ck-button,a.ck.ck-button{background:var(--ck-color-button-default-background)}.ck.ck-button:not(.ck-disabled):hover,a.ck.ck-button:not(.ck-disabled):hover{background:var(--ck-color-button-default-hover-background)}.ck.ck-button:not(.ck-disabled):active,a.ck.ck-button:not(.ck-disabled):active{background:var(--ck-color-button-default-active-background);box-shadow:inset 0 2px 2px var(--ck-color-button-default-active-shadow)}.ck.ck-button.ck-disabled,a.ck.ck-button.ck-disabled{background:var(--ck-color-button-default-disabled-background)}.ck.ck-button,a.ck.ck-button{border-radius:0}.ck-rounded-corners .ck.ck-button,.ck-rounded-corners a.ck.ck-button,.ck.ck-button.ck-rounded-corners,a.ck.ck-button.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-button,a.ck.ck-button{white-space:nowrap;cursor:default;vertical-align:middle;padding:var(--ck-spacing-tiny);text-align:center;min-width:var(--ck-ui-component-min-height);min-height:var(--ck-ui-component-min-height);line-height:1;font-size:inherit;border:1px solid transparent;transition:box-shadow .2s ease-in-out,border .2s ease-in-out;-webkit-appearance:none}.ck.ck-button:active,.ck.ck-button:focus,a.ck.ck-button:active,a.ck.ck-button:focus{outline:none;border:var(--ck-focus-ring);box-shadow:var(--ck-focus-outer-shadow),0 0}.ck.ck-button .ck-button__icon use,.ck.ck-button .ck-button__icon use *,a.ck.ck-button .ck-button__icon use,a.ck.ck-button .ck-button__icon use *{color:inherit}.ck.ck-button .ck-button__label,a.ck.ck-button .ck-button__label{font-size:inherit;font-weight:inherit;color:inherit;cursor:inherit;vertical-align:middle}[dir=ltr] .ck.ck-button .ck-button__label,[dir=ltr] a.ck.ck-button .ck-button__label{text-align:left}[dir=rtl] .ck.ck-button .ck-button__label,[dir=rtl] a.ck.ck-button .ck-button__label{text-align:right}.ck.ck-button .ck-button__keystroke,a.ck.ck-button .ck-button__keystroke{color:inherit}[dir=ltr] .ck.ck-button .ck-button__keystroke,[dir=ltr] a.ck.ck-button .ck-button__keystroke{margin-left:var(--ck-spacing-large)}[dir=rtl] .ck.ck-button .ck-button__keystroke,[dir=rtl] a.ck.ck-button .ck-button__keystroke{margin-right:var(--ck-spacing-large)}.ck.ck-button .ck-button__keystroke,a.ck.ck-button .ck-button__keystroke{font-weight:700;opacity:.7}.ck.ck-button.ck-disabled:active,.ck.ck-button.ck-disabled:focus,a.ck.ck-button.ck-disabled:active,a.ck.ck-button.ck-disabled:focus{box-shadow:var(--ck-focus-disabled-outer-shadow),0 0}.ck.ck-button.ck-disabled .ck-button__icon,a.ck.ck-button.ck-disabled .ck-button__icon{opacity:var(--ck-disabled-opacity)}.ck.ck-button.ck-disabled .ck-button__label,a.ck.ck-button.ck-disabled .ck-button__label{opacity:var(--ck-disabled-opacity)}.ck.ck-button.ck-disabled .ck-button__keystroke,a.ck.ck-button.ck-disabled .ck-button__keystroke{opacity:.3}.ck.ck-button.ck-button_with-text,a.ck.ck-button.ck-button_with-text{padding:var(--ck-spacing-tiny) var(--ck-spacing-standard)}[dir=ltr] .ck.ck-button.ck-button_with-text .ck-button__icon,[dir=ltr] a.ck.ck-button.ck-button_with-text .ck-button__icon{margin-left:calc(-1*var(--ck-spacing-small));margin-right:var(--ck-spacing-small)}[dir=rtl] .ck.ck-button.ck-button_with-text .ck-button__icon,[dir=rtl] a.ck.ck-button.ck-button_with-text .ck-button__icon{margin-right:calc(-1*var(--ck-spacing-small));margin-left:var(--ck-spacing-small)}.ck.ck-button.ck-button_with-keystroke .ck-button__label,a.ck.ck-button.ck-button_with-keystroke .ck-button__label{flex-grow:1}.ck.ck-button.ck-on,a.ck.ck-button.ck-on{background:var(--ck-color-button-on-background)}.ck.ck-button.ck-on:not(.ck-disabled):hover,a.ck.ck-button.ck-on:not(.ck-disabled):hover{background:var(--ck-color-button-on-hover-background)}.ck.ck-button.ck-on:not(.ck-disabled):active,a.ck.ck-button.ck-on:not(.ck-disabled):active{background:var(--ck-color-button-on-active-background);box-shadow:inset 0 2px 2px var(--ck-color-button-on-active-shadow)}.ck.ck-button.ck-on.ck-disabled,a.ck.ck-button.ck-on.ck-disabled{background:var(--ck-color-button-on-disabled-background)}.ck.ck-button.ck-button-save,a.ck.ck-button.ck-button-save{color:var(--ck-color-button-save)}.ck.ck-button.ck-button-cancel,a.ck.ck-button.ck-button-cancel{color:var(--ck-color-button-cancel)}.ck.ck-button-action,a.ck.ck-button-action{background:var(--ck-color-button-action-background)}.ck.ck-button-action:not(.ck-disabled):hover,a.ck.ck-button-action:not(.ck-disabled):hover{background:var(--ck-color-button-action-hover-background)}.ck.ck-button-action:not(.ck-disabled):active,a.ck.ck-button-action:not(.ck-disabled):active{background:var(--ck-color-button-action-active-background);box-shadow:inset 0 2px 2px var(--ck-color-button-action-active-shadow)}.ck.ck-button-action.ck-disabled,a.ck.ck-button-action.ck-disabled{background:var(--ck-color-button-action-disabled-background)}.ck.ck-button-action,a.ck.ck-button-action{color:var(--ck-color-button-action-text)}.ck.ck-button-bold,a.ck.ck-button-bold{font-weight:700}\"","module.exports = \".ck.ck-button.ck-switchbutton .ck-button__toggle,.ck.ck-button.ck-switchbutton .ck-button__toggle .ck-button__toggle__inner{display:block}:root{--ck-switch-button-toggle-width:2.6153846154em;--ck-switch-button-toggle-inner-size:1.0769230769em;--ck-switch-button-toggle-spacing:1px;--ck-switch-button-translation:1.3846153847em}[dir=ltr] .ck.ck-button.ck-switchbutton .ck-button__label{margin-right:calc(2*var(--ck-spacing-large))}[dir=rtl] .ck.ck-button.ck-switchbutton .ck-button__label{margin-left:calc(2*var(--ck-spacing-large))}.ck.ck-button.ck-switchbutton .ck-button__toggle{border-radius:0}.ck-rounded-corners .ck.ck-button.ck-switchbutton .ck-button__toggle,.ck.ck-button.ck-switchbutton .ck-button__toggle.ck-rounded-corners{border-radius:var(--ck-border-radius)}[dir=ltr] .ck.ck-button.ck-switchbutton .ck-button__toggle{margin-left:auto}[dir=rtl] .ck.ck-button.ck-switchbutton .ck-button__toggle{margin-right:auto}.ck.ck-button.ck-switchbutton .ck-button__toggle{transition:background .4s ease;width:var(--ck-switch-button-toggle-width);background:var(--ck-color-switch-button-off-background)}.ck.ck-button.ck-switchbutton .ck-button__toggle .ck-button__toggle__inner{border-radius:0}.ck-rounded-corners .ck.ck-button.ck-switchbutton .ck-button__toggle .ck-button__toggle__inner,.ck.ck-button.ck-switchbutton .ck-button__toggle .ck-button__toggle__inner.ck-rounded-corners{border-radius:var(--ck-border-radius);border-radius:calc(0.5*var(--ck-border-radius))}.ck.ck-button.ck-switchbutton .ck-button__toggle .ck-button__toggle__inner{margin:var(--ck-switch-button-toggle-spacing);width:var(--ck-switch-button-toggle-inner-size);height:var(--ck-switch-button-toggle-inner-size);background:var(--ck-color-switch-button-inner-background);transition:all .3s ease}.ck.ck-button.ck-switchbutton .ck-button__toggle:hover{background:var(--ck-color-switch-button-off-hover-background)}.ck.ck-button.ck-switchbutton .ck-button__toggle:hover .ck-button__toggle__inner{box-shadow:0 0 0 5px var(--ck-color-switch-button-inner-shadow)}.ck.ck-button.ck-switchbutton.ck-disabled .ck-button__toggle{opacity:var(--ck-disabled-opacity)}.ck.ck-button.ck-switchbutton.ck-on .ck-button__toggle{background:var(--ck-color-switch-button-on-background)}.ck.ck-button.ck-switchbutton.ck-on .ck-button__toggle:hover{background:var(--ck-color-switch-button-on-hover-background)}[dir=ltr] .ck.ck-button.ck-switchbutton.ck-on .ck-button__toggle .ck-button__toggle__inner{transform:translateX(var(--ck-switch-button-translation))}[dir=rtl] .ck.ck-button.ck-switchbutton.ck-on .ck-button__toggle .ck-button__toggle__inner{transform:translateX(calc(-1*var(--ck-switch-button-translation)))}\"","module.exports = \".ck.ck-color-grid{display:grid}:root{--ck-color-grid-tile-size:24px;--ck-color-color-grid-check-icon:#000}.ck.ck-color-grid{grid-gap:5px;padding:8px}.ck.ck-color-grid__tile{width:var(--ck-color-grid-tile-size);height:var(--ck-color-grid-tile-size);min-width:var(--ck-color-grid-tile-size);min-height:var(--ck-color-grid-tile-size);padding:0;transition:box-shadow .2s ease;border:0}.ck.ck-color-grid__tile.ck-disabled{cursor:unset;transition:unset}.ck.ck-color-grid__tile.ck-color-table__color-tile_bordered{box-shadow:0 0 0 1px var(--ck-color-base-border)}.ck.ck-color-grid__tile .ck.ck-icon{display:none;color:var(--ck-color-color-grid-check-icon)}.ck.ck-color-grid__tile.ck-on{box-shadow:inset 0 0 0 1px var(--ck-color-base-background),0 0 0 2px var(--ck-color-base-text)}.ck.ck-color-grid__tile.ck-on .ck.ck-icon{display:block}.ck.ck-color-grid__tile.ck-on,.ck.ck-color-grid__tile:focus:not(.ck-disabled),.ck.ck-color-grid__tile:hover:not(.ck-disabled){border:0}.ck.ck-color-grid__tile:focus:not(.ck-disabled),.ck.ck-color-grid__tile:hover:not(.ck-disabled){box-shadow:inset 0 0 0 1px var(--ck-color-base-background),0 0 0 2px var(--ck-color-focus-border)}.ck.ck-color-grid__label{padding:0 var(--ck-spacing-standard)}\"","module.exports = \".ck.ck-dropdown{display:inline-block;position:relative}.ck.ck-dropdown .ck-dropdown__arrow{pointer-events:none;z-index:var(--ck-z-default)}.ck.ck-dropdown .ck-button.ck-dropdown__button{width:100%}.ck.ck-dropdown .ck-button.ck-dropdown__button.ck-on .ck-tooltip{display:none}.ck.ck-dropdown .ck-dropdown__panel{-webkit-backface-visibility:hidden;display:none;z-index:var(--ck-z-modal);position:absolute}.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel-visible{display:inline-block}.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_ne,.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_nw{bottom:100%}.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_se,.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_sw{top:100%;bottom:auto}.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_ne,.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_se{left:0}.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_nw,.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_sw{right:0}:root{--ck-dropdown-arrow-size:calc(0.5*var(--ck-icon-size))}.ck.ck-dropdown{font-size:inherit}.ck.ck-dropdown .ck-dropdown__arrow{width:var(--ck-dropdown-arrow-size)}[dir=ltr] .ck.ck-dropdown .ck-dropdown__arrow{right:var(--ck-spacing-standard);margin-left:var(--ck-spacing-small)}[dir=rtl] .ck.ck-dropdown .ck-dropdown__arrow{left:var(--ck-spacing-standard);margin-right:var(--ck-spacing-small)}.ck.ck-dropdown.ck-disabled .ck-dropdown__arrow{opacity:var(--ck-disabled-opacity)}[dir=ltr] .ck.ck-dropdown .ck-button.ck-dropdown__button:not(.ck-button_with-text){padding-left:var(--ck-spacing-small)}[dir=rtl] .ck.ck-dropdown .ck-button.ck-dropdown__button:not(.ck-button_with-text){padding-right:var(--ck-spacing-small)}.ck.ck-dropdown .ck-button.ck-dropdown__button .ck-button__label{width:7em;overflow:hidden;text-overflow:ellipsis}.ck.ck-dropdown .ck-button.ck-dropdown__button.ck-disabled .ck-button__label{opacity:var(--ck-disabled-opacity)}.ck.ck-dropdown .ck-button.ck-dropdown__button.ck-on{border-bottom-left-radius:0;border-bottom-right-radius:0}.ck.ck-dropdown__panel{border-radius:0}.ck-rounded-corners .ck.ck-dropdown__panel,.ck.ck-dropdown__panel.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-dropdown__panel{box-shadow:var(--ck-drop-shadow),0 0;background:var(--ck-color-dropdown-panel-background);border:1px solid var(--ck-color-dropdown-panel-border);bottom:0;min-width:100%}.ck.ck-dropdown__panel.ck-dropdown__panel_se{border-top-left-radius:0}.ck.ck-dropdown__panel.ck-dropdown__panel_sw{border-top-right-radius:0}.ck.ck-dropdown__panel.ck-dropdown__panel_ne{border-bottom-left-radius:0}.ck.ck-dropdown__panel.ck-dropdown__panel_nw{border-bottom-right-radius:0}\"","module.exports = \".ck.ck-dropdown .ck-dropdown__panel .ck-list{border-radius:0}.ck-rounded-corners .ck.ck-dropdown .ck-dropdown__panel .ck-list,.ck.ck-dropdown .ck-dropdown__panel .ck-list.ck-rounded-corners{border-radius:var(--ck-border-radius);border-top-left-radius:0}.ck.ck-dropdown .ck-dropdown__panel .ck-list .ck-list__item:first-child .ck-button{border-radius:0}.ck-rounded-corners .ck.ck-dropdown .ck-dropdown__panel .ck-list .ck-list__item:first-child .ck-button,.ck.ck-dropdown .ck-dropdown__panel .ck-list .ck-list__item:first-child .ck-button.ck-rounded-corners{border-radius:var(--ck-border-radius);border-top-left-radius:0;border-bottom-left-radius:0;border-bottom-right-radius:0}.ck.ck-dropdown .ck-dropdown__panel .ck-list .ck-list__item:last-child .ck-button{border-radius:0}.ck-rounded-corners .ck.ck-dropdown .ck-dropdown__panel .ck-list .ck-list__item:last-child .ck-button,.ck.ck-dropdown .ck-dropdown__panel .ck-list .ck-list__item:last-child .ck-button.ck-rounded-corners{border-radius:var(--ck-border-radius);border-top-left-radius:0;border-top-right-radius:0}\"","module.exports = \".ck.ck-toolbar-dropdown .ck.ck-toolbar .ck.ck-toolbar__items{flex-wrap:nowrap}.ck.ck-toolbar-dropdown .ck-dropdown__panel .ck-button:focus{z-index:calc(var(--ck-z-default) + 1)}.ck.ck-toolbar-dropdown .ck-toolbar{border:0}\"","module.exports = \".ck.ck-editor__editable:not(.ck-editor__nested-editable){border-radius:0}.ck-rounded-corners .ck.ck-editor__editable:not(.ck-editor__nested-editable),.ck.ck-editor__editable:not(.ck-editor__nested-editable).ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-editor__editable:not(.ck-editor__nested-editable).ck-focused{outline:none;border:var(--ck-focus-ring);box-shadow:var(--ck-inner-shadow),0 0}.ck.ck-editor__editable_inline{overflow:auto;padding:0 var(--ck-spacing-standard);border:1px solid transparent}.ck.ck-editor__editable_inline[dir=ltr]{text-align:left}.ck.ck-editor__editable_inline[dir=rtl]{text-align:right}.ck.ck-editor__editable_inline>:first-child{margin-top:var(--ck-spacing-large)}.ck.ck-editor__editable_inline>:last-child{margin-bottom:var(--ck-spacing-large)}.ck.ck-balloon-panel.ck-toolbar-container[class*=arrow_n]:after{border-bottom-color:var(--ck-color-base-foreground)}.ck.ck-balloon-panel.ck-toolbar-container[class*=arrow_s]:after{border-top-color:var(--ck-color-base-foreground)}\"","module.exports = \".ck.ck-icon{vertical-align:middle}:root{--ck-icon-size:calc(var(--ck-line-height-base)*var(--ck-font-size-normal))}.ck.ck-icon{width:var(--ck-icon-size);height:var(--ck-icon-size);font-size:.8333350694em;will-change:transform}.ck.ck-icon,.ck.ck-icon *{color:inherit;cursor:inherit}.ck.ck-icon :not([fill]){fill:currentColor}\"","module.exports = \":root{--ck-input-text-width:18em}.ck.ck-input-text{border-radius:0}.ck-rounded-corners .ck.ck-input-text,.ck.ck-input-text.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-input-text{box-shadow:var(--ck-inner-shadow),0 0;background:var(--ck-color-input-background);border:1px solid var(--ck-color-input-border);padding:var(--ck-spacing-extra-tiny) var(--ck-spacing-medium);min-width:var(--ck-input-text-width);min-height:var(--ck-ui-component-min-height);transition:box-shadow .2s ease-in-out,border .2s ease-in-out}.ck.ck-input-text:focus{outline:none;border:var(--ck-focus-ring);box-shadow:var(--ck-focus-outer-shadow),var(--ck-inner-shadow)}.ck.ck-input-text[readonly]{border:1px solid var(--ck-color-input-disabled-border);background:var(--ck-color-input-disabled-background);color:var(--ck-color-input-disabled-text)}.ck.ck-input-text[readonly]:focus{box-shadow:var(--ck-focus-disabled-outer-shadow),var(--ck-inner-shadow)}.ck.ck-input-text.ck-error{border-color:var(--ck-color-input-error-border);animation:ck-text-input-shake .3s ease both}.ck.ck-input-text.ck-error:focus{box-shadow:var(--ck-focus-error-outer-shadow),var(--ck-inner-shadow)}@keyframes ck-text-input-shake{20%{transform:translateX(-2px)}40%{transform:translateX(2px)}60%{transform:translateX(-1px)}80%{transform:translateX(1px)}}\"","module.exports = \".ck.ck-label{display:block}.ck.ck-voice-label{display:none}.ck.ck-label{font-weight:700}\"","module.exports = \".ck.ck-labeled-input .ck-labeled-input__status{font-size:var(--ck-font-size-small);margin-top:var(--ck-spacing-small);white-space:normal}.ck.ck-labeled-input .ck-labeled-input__status_error{color:var(--ck-color-base-error)}\"","module.exports = \".ck.ck-list{-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none;display:flex;flex-direction:column}.ck.ck-list .ck-list__item,.ck.ck-list .ck-list__separator{display:block}.ck.ck-list .ck-list__item>:focus{position:relative;z-index:var(--ck-z-default)}.ck.ck-list{border-radius:0}.ck-rounded-corners .ck.ck-list,.ck.ck-list.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-list{list-style-type:none;background:var(--ck-color-list-background)}.ck.ck-list__item{cursor:default;min-width:12em}.ck.ck-list__item .ck-button{min-height:unset;width:100%;text-align:left;border-radius:0;padding:calc(0.2*var(--ck-line-height-base)*var(--ck-font-size-base)) calc(0.4*var(--ck-line-height-base)*var(--ck-font-size-base))}.ck.ck-list__item .ck-button .ck-button__label{line-height:calc(1.2*var(--ck-line-height-base)*var(--ck-font-size-base))}.ck.ck-list__item .ck-button:active{box-shadow:none}.ck.ck-list__item .ck-button.ck-on{background:var(--ck-color-list-button-on-background);color:var(--ck-color-list-button-on-text)}.ck.ck-list__item .ck-button.ck-on:active{box-shadow:none}.ck.ck-list__item .ck-button.ck-on:hover:not(.ck-disabled){background:var(--ck-color-list-button-on-background-focus)}.ck.ck-list__item .ck-button.ck-on:focus:not(.ck-disabled){border-color:var(--ck-color-base-background)}.ck.ck-list__item .ck-button:hover:not(.ck-disabled){background:var(--ck-color-list-button-hover-background)}.ck.ck-list__item .ck-switchbutton.ck-on{background:var(--ck-color-list-background);color:inherit}.ck.ck-list__item .ck-switchbutton.ck-on:hover:not(.ck-disabled){background:var(--ck-color-list-button-hover-background);color:inherit}.ck.ck-list__separator{height:1px;width:100%;background:var(--ck-color-base-border)}\"","module.exports = \":root{--ck-balloon-panel-arrow-z-index:calc(var(--ck-z-default) - 3)}.ck.ck-balloon-panel{display:none;position:absolute;z-index:var(--ck-z-modal)}.ck.ck-balloon-panel.ck-balloon-panel_with-arrow:after,.ck.ck-balloon-panel.ck-balloon-panel_with-arrow:before{content:\\\"\\\";position:absolute}.ck.ck-balloon-panel.ck-balloon-panel_with-arrow:before{z-index:var(--ck-balloon-panel-arrow-z-index)}.ck.ck-balloon-panel.ck-balloon-panel_with-arrow:after{z-index:calc(var(--ck-balloon-panel-arrow-z-index) + 1)}.ck.ck-balloon-panel[class*=arrow_n]:before{z-index:var(--ck-balloon-panel-arrow-z-index)}.ck.ck-balloon-panel[class*=arrow_n]:after{z-index:calc(var(--ck-balloon-panel-arrow-z-index) + 1)}.ck.ck-balloon-panel[class*=arrow_s]:before{z-index:var(--ck-balloon-panel-arrow-z-index)}.ck.ck-balloon-panel[class*=arrow_s]:after{z-index:calc(var(--ck-balloon-panel-arrow-z-index) + 1)}.ck.ck-balloon-panel.ck-balloon-panel_visible{display:block}:root{--ck-balloon-arrow-offset:2px;--ck-balloon-arrow-height:10px;--ck-balloon-arrow-half-width:8px}.ck.ck-balloon-panel{border-radius:0}.ck-rounded-corners .ck.ck-balloon-panel,.ck.ck-balloon-panel.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-balloon-panel{box-shadow:var(--ck-drop-shadow),0 0;min-height:15px;background:var(--ck-color-panel-background);border:1px solid var(--ck-color-panel-border)}.ck.ck-balloon-panel.ck-balloon-panel_with-arrow:after,.ck.ck-balloon-panel.ck-balloon-panel_with-arrow:before{width:0;height:0;border-style:solid}.ck.ck-balloon-panel[class*=arrow_n]:after,.ck.ck-balloon-panel[class*=arrow_n]:before{border-left-width:var(--ck-balloon-arrow-half-width);border-bottom-width:var(--ck-balloon-arrow-height);border-right-width:var(--ck-balloon-arrow-half-width);border-top-width:0}.ck.ck-balloon-panel[class*=arrow_n]:before{border-bottom-color:var(--ck-color-panel-border)}.ck.ck-balloon-panel[class*=arrow_n]:after,.ck.ck-balloon-panel[class*=arrow_n]:before{border-left-color:transparent;border-right-color:transparent;border-top-color:transparent}.ck.ck-balloon-panel[class*=arrow_n]:after{border-bottom-color:var(--ck-color-panel-background);margin-top:var(--ck-balloon-arrow-offset)}.ck.ck-balloon-panel[class*=arrow_s]:after,.ck.ck-balloon-panel[class*=arrow_s]:before{border-left-width:var(--ck-balloon-arrow-half-width);border-bottom-width:0;border-right-width:var(--ck-balloon-arrow-half-width);border-top-width:var(--ck-balloon-arrow-height)}.ck.ck-balloon-panel[class*=arrow_s]:before{border-top-color:var(--ck-color-panel-border)}.ck.ck-balloon-panel[class*=arrow_s]:after,.ck.ck-balloon-panel[class*=arrow_s]:before{border-left-color:transparent;border-bottom-color:transparent;border-right-color:transparent}.ck.ck-balloon-panel[class*=arrow_s]:after{border-top-color:var(--ck-color-panel-background);margin-bottom:var(--ck-balloon-arrow-offset)}.ck.ck-balloon-panel.ck-balloon-panel_arrow_n:after,.ck.ck-balloon-panel.ck-balloon-panel_arrow_n:before{left:50%;margin-left:calc(-1*var(--ck-balloon-arrow-half-width));top:calc(-1*var(--ck-balloon-arrow-height))}.ck.ck-balloon-panel.ck-balloon-panel_arrow_nw:after,.ck.ck-balloon-panel.ck-balloon-panel_arrow_nw:before{left:calc(2*var(--ck-balloon-arrow-half-width));top:calc(-1*var(--ck-balloon-arrow-height))}.ck.ck-balloon-panel.ck-balloon-panel_arrow_ne:after,.ck.ck-balloon-panel.ck-balloon-panel_arrow_ne:before{right:calc(2*var(--ck-balloon-arrow-half-width));top:calc(-1*var(--ck-balloon-arrow-height))}.ck.ck-balloon-panel.ck-balloon-panel_arrow_s:after,.ck.ck-balloon-panel.ck-balloon-panel_arrow_s:before{left:50%;margin-left:calc(-1*var(--ck-balloon-arrow-half-width));bottom:calc(-1*var(--ck-balloon-arrow-height))}.ck.ck-balloon-panel.ck-balloon-panel_arrow_sw:after,.ck.ck-balloon-panel.ck-balloon-panel_arrow_sw:before{left:calc(2*var(--ck-balloon-arrow-half-width));bottom:calc(-1*var(--ck-balloon-arrow-height))}.ck.ck-balloon-panel.ck-balloon-panel_arrow_se:after,.ck.ck-balloon-panel.ck-balloon-panel_arrow_se:before{right:calc(2*var(--ck-balloon-arrow-half-width));bottom:calc(-1*var(--ck-balloon-arrow-height))}.ck.ck-balloon-panel.ck-balloon-panel_arrow_sme:after,.ck.ck-balloon-panel.ck-balloon-panel_arrow_sme:before{right:25%;margin-right:calc(2*var(--ck-balloon-arrow-half-width));bottom:calc(-1*var(--ck-balloon-arrow-height))}.ck.ck-balloon-panel.ck-balloon-panel_arrow_smw:after,.ck.ck-balloon-panel.ck-balloon-panel_arrow_smw:before{left:25%;margin-left:calc(2*var(--ck-balloon-arrow-half-width));bottom:calc(-1*var(--ck-balloon-arrow-height))}.ck.ck-balloon-panel.ck-balloon-panel_arrow_nme:after,.ck.ck-balloon-panel.ck-balloon-panel_arrow_nme:before{right:25%;margin-right:calc(2*var(--ck-balloon-arrow-half-width));top:calc(-1*var(--ck-balloon-arrow-height))}.ck.ck-balloon-panel.ck-balloon-panel_arrow_nmw:after,.ck.ck-balloon-panel.ck-balloon-panel_arrow_nmw:before{left:25%;margin-left:calc(2*var(--ck-balloon-arrow-half-width));top:calc(-1*var(--ck-balloon-arrow-height))}\"","module.exports = \".ck .ck-balloon-rotator__navigation{display:flex;align-items:center;justify-content:center}.ck .ck-balloon-rotator__content .ck-toolbar{justify-content:center}.ck .ck-balloon-rotator__navigation{background:var(--ck-color-toolbar-background);border-bottom:1px solid var(--ck-color-toolbar-border);padding:0 var(--ck-spacing-small)}.ck .ck-balloon-rotator__navigation>*{margin-right:var(--ck-spacing-small);margin-top:var(--ck-spacing-small);margin-bottom:var(--ck-spacing-small)}.ck .ck-balloon-rotator__navigation .ck-balloon-rotator__counter{margin-right:var(--ck-spacing-standard);margin-left:var(--ck-spacing-small)}.ck .ck-balloon-rotator__content .ck.ck-annotation-wrapper{box-shadow:none}\"","module.exports = \".ck .ck-fake-panel{position:absolute;z-index:calc(var(--ck-z-modal) - 1)}.ck .ck-fake-panel div{position:absolute}.ck .ck-fake-panel div:first-child{z-index:2}.ck .ck-fake-panel div:nth-child(2){z-index:1}:root{--ck-balloon-fake-panel-offset-horizontal:6px;--ck-balloon-fake-panel-offset-vertical:6px}.ck .ck-fake-panel div{box-shadow:var(--ck-drop-shadow),0 0;min-height:15px;background:var(--ck-color-panel-background);border:1px solid var(--ck-color-panel-border);border-radius:var(--ck-border-radius);width:100%;height:100%}.ck .ck-fake-panel div:first-child{margin-left:var(--ck-balloon-fake-panel-offset-horizontal);margin-top:var(--ck-balloon-fake-panel-offset-vertical)}.ck .ck-fake-panel div:nth-child(2){margin-left:calc(var(--ck-balloon-fake-panel-offset-horizontal)*2);margin-top:calc(var(--ck-balloon-fake-panel-offset-vertical)*2)}.ck .ck-fake-panel div:nth-child(3){margin-left:calc(var(--ck-balloon-fake-panel-offset-horizontal)*3);margin-top:calc(var(--ck-balloon-fake-panel-offset-vertical)*3)}.ck .ck-balloon-panel_arrow_s+.ck-fake-panel,.ck .ck-balloon-panel_arrow_se+.ck-fake-panel,.ck .ck-balloon-panel_arrow_sw+.ck-fake-panel{--ck-balloon-fake-panel-offset-vertical:-6px}\"","module.exports = \".ck.ck-toolbar{-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none;display:flex;flex-flow:row nowrap;align-items:center}.ck.ck-toolbar>.ck-toolbar__items{display:flex;flex-flow:row wrap;align-items:center;flex-grow:1}.ck.ck-toolbar .ck.ck-toolbar__separator{display:inline-block}.ck.ck-toolbar .ck.ck-toolbar__separator:first-child,.ck.ck-toolbar .ck.ck-toolbar__separator:last-child{display:none}.ck.ck-toolbar.ck-toolbar_grouping>.ck-toolbar__items{flex-wrap:nowrap}.ck.ck-toolbar.ck-toolbar_vertical>.ck-toolbar__items{flex-direction:column}.ck.ck-toolbar.ck-toolbar_floating>.ck-toolbar__items{flex-wrap:nowrap}.ck.ck-toolbar>.ck.ck-toolbar__grouped-dropdown>.ck-dropdown__button .ck-dropdown__arrow{display:none}.ck.ck-toolbar{border-radius:0}.ck-rounded-corners .ck.ck-toolbar,.ck.ck-toolbar.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-toolbar{background:var(--ck-color-toolbar-background);padding:0 var(--ck-spacing-small);border:1px solid var(--ck-color-toolbar-border)}.ck.ck-toolbar .ck.ck-toolbar__separator{align-self:stretch;width:1px;min-width:1px;margin-top:0;margin-bottom:0;background:var(--ck-color-toolbar-border)}.ck.ck-toolbar>.ck-toolbar__items>*{margin-top:var(--ck-spacing-small);margin-bottom:var(--ck-spacing-small);margin-right:var(--ck-spacing-small)}.ck.ck-toolbar>.ck-toolbar__items:empty+.ck.ck-toolbar__separator{display:none}.ck.ck-toolbar>.ck-toolbar__items>*,.ck.ck-toolbar>.ck.ck-toolbar__grouped-dropdown{margin-top:var(--ck-spacing-small);margin-bottom:var(--ck-spacing-small)}.ck.ck-toolbar.ck-toolbar_vertical{padding:0}.ck.ck-toolbar.ck-toolbar_vertical>.ck-toolbar__items>.ck{width:100%;margin:0;border-radius:0;border:0}.ck.ck-toolbar.ck-toolbar_compact{padding:0}.ck.ck-toolbar.ck-toolbar_compact>.ck-toolbar__items>*{margin:0}.ck.ck-toolbar.ck-toolbar_compact>.ck-toolbar__items>:not(:first-child):not(:last-child){border-radius:0}.ck.ck-toolbar>.ck.ck-toolbar__grouped-dropdown>.ck.ck-button.ck-dropdown__button{padding-left:var(--ck-spacing-tiny)}.ck-toolbar-container .ck.ck-toolbar{border:0}.ck.ck-toolbar[dir=rtl]>.ck-toolbar__items>.ck,[dir=rtl] .ck.ck-toolbar>.ck-toolbar__items>.ck{margin-right:0}.ck.ck-toolbar[dir=rtl]:not(.ck-toolbar_compact)>.ck-toolbar__items>.ck,[dir=rtl] .ck.ck-toolbar:not(.ck-toolbar_compact)>.ck-toolbar__items>.ck{margin-left:var(--ck-spacing-small)}.ck.ck-toolbar[dir=rtl]>.ck-toolbar__items>.ck:last-child,[dir=rtl] .ck.ck-toolbar>.ck-toolbar__items>.ck:last-child{margin-left:0}.ck.ck-toolbar[dir=rtl].ck-toolbar_compact>.ck-toolbar__items>.ck:first-child,[dir=rtl] .ck.ck-toolbar.ck-toolbar_compact>.ck-toolbar__items>.ck:first-child{border-top-left-radius:0;border-bottom-left-radius:0}.ck.ck-toolbar[dir=rtl].ck-toolbar_compact>.ck-toolbar__items>.ck:last-child,[dir=rtl] .ck.ck-toolbar.ck-toolbar_compact>.ck-toolbar__items>.ck:last-child{border-top-right-radius:0;border-bottom-right-radius:0}.ck.ck-toolbar[dir=rtl]>.ck.ck-toolbar__separator,[dir=rtl] .ck.ck-toolbar>.ck.ck-toolbar__separator{margin-left:var(--ck-spacing-small)}.ck.ck-toolbar[dir=rtl].ck-toolbar_grouping>.ck-toolbar__items:not(:empty):not(:only-child),[dir=rtl] .ck.ck-toolbar.ck-toolbar_grouping>.ck-toolbar__items:not(:empty):not(:only-child){margin-left:var(--ck-spacing-small)}.ck.ck-toolbar[dir=ltr]>.ck-toolbar__items>.ck:last-child,[dir=ltr] .ck.ck-toolbar>.ck-toolbar__items>.ck:last-child{margin-right:0}.ck.ck-toolbar[dir=ltr].ck-toolbar_compact>.ck-toolbar__items>.ck:first-child,[dir=ltr] .ck.ck-toolbar.ck-toolbar_compact>.ck-toolbar__items>.ck:first-child{border-top-right-radius:0;border-bottom-right-radius:0}.ck.ck-toolbar[dir=ltr].ck-toolbar_compact>.ck-toolbar__items>.ck:last-child,[dir=ltr] .ck.ck-toolbar.ck-toolbar_compact>.ck-toolbar__items>.ck:last-child{border-top-left-radius:0;border-bottom-left-radius:0}.ck.ck-toolbar[dir=ltr]>.ck.ck-toolbar__separator,[dir=ltr] .ck.ck-toolbar>.ck.ck-toolbar__separator{margin-right:var(--ck-spacing-small)}.ck.ck-toolbar[dir=ltr].ck-toolbar_grouping>.ck-toolbar__items:not(:empty):not(:only-child),[dir=ltr] .ck.ck-toolbar.ck-toolbar_grouping>.ck-toolbar__items:not(:empty):not(:only-child){margin-right:var(--ck-spacing-small)}\"","module.exports = \".ck.ck-tooltip,.ck.ck-tooltip .ck-tooltip__text:after{position:absolute;pointer-events:none;-webkit-backface-visibility:hidden}.ck.ck-tooltip{visibility:hidden;opacity:0;display:none;z-index:var(--ck-z-modal)}.ck.ck-tooltip .ck-tooltip__text{display:inline-block}.ck.ck-tooltip .ck-tooltip__text:after{content:\\\"\\\";width:0;height:0}:root{--ck-tooltip-arrow-size:5px}.ck.ck-tooltip{left:50%;top:0;transition:opacity .2s ease-in-out .2s}.ck.ck-tooltip .ck-tooltip__text{border-radius:0}.ck-rounded-corners .ck.ck-tooltip .ck-tooltip__text,.ck.ck-tooltip .ck-tooltip__text.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-tooltip .ck-tooltip__text{font-size:.9em;line-height:1.5;color:var(--ck-color-tooltip-text);padding:var(--ck-spacing-small) var(--ck-spacing-medium);background:var(--ck-color-tooltip-background);position:relative;left:-50%}.ck.ck-tooltip .ck-tooltip__text:after{transition:opacity .2s ease-in-out .2s;border-style:solid;left:50%}.ck.ck-tooltip.ck-tooltip_s{bottom:calc(-1*var(--ck-tooltip-arrow-size));transform:translateY(100%)}.ck.ck-tooltip.ck-tooltip_s .ck-tooltip__text:after{top:calc(-1*var(--ck-tooltip-arrow-size));transform:translateX(-50%);border-left-color:transparent;border-bottom-color:var(--ck-color-tooltip-background);border-right-color:transparent;border-top-color:transparent;border-left-width:var(--ck-tooltip-arrow-size);border-bottom-width:var(--ck-tooltip-arrow-size);border-right-width:var(--ck-tooltip-arrow-size);border-top-width:0}.ck.ck-tooltip.ck-tooltip_n{top:calc(-1*var(--ck-tooltip-arrow-size));transform:translateY(-100%)}.ck.ck-tooltip.ck-tooltip_n .ck-tooltip__text:after{bottom:calc(-1*var(--ck-tooltip-arrow-size));transform:translateX(-50%);border-left-color:transparent;border-bottom-color:transparent;border-right-color:transparent;border-top-color:var(--ck-color-tooltip-background);border-left-width:var(--ck-tooltip-arrow-size);border-bottom-width:0;border-right-width:var(--ck-tooltip-arrow-size);border-top-width:var(--ck-tooltip-arrow-size)}\"","module.exports = \".ck-hidden{display:none!important}.ck.ck-reset,.ck.ck-reset_all,.ck.ck-reset_all *{box-sizing:border-box;width:auto;height:auto;position:static}:root{--ck-z-default:1;--ck-z-modal:calc(var(--ck-z-default) + 999);--ck-color-base-foreground:#fafafa;--ck-color-base-background:#fff;--ck-color-base-border:#c4c4c4;--ck-color-base-action:#61b045;--ck-color-base-focus:#6cb5f9;--ck-color-base-text:#333;--ck-color-base-active:#198cf0;--ck-color-base-active-focus:#0e7fe1;--ck-color-base-error:#db3700;--ck-color-focus-border:#1f89e5;--ck-color-focus-outer-shadow:#bcdefb;--ck-color-focus-disabled-shadow:rgba(119,186,248,0.3);--ck-color-focus-error-shadow:rgba(255,64,31,0.3);--ck-color-text:var(--ck-color-base-text);--ck-color-shadow-drop:rgba(0,0,0,0.15);--ck-color-shadow-drop-active:rgba(0,0,0,0.2);--ck-color-shadow-inner:rgba(0,0,0,0.1);--ck-color-button-default-background:transparent;--ck-color-button-default-hover-background:#e6e6e6;--ck-color-button-default-active-background:#d9d9d9;--ck-color-button-default-active-shadow:#bfbfbf;--ck-color-button-default-disabled-background:transparent;--ck-color-button-on-background:#dedede;--ck-color-button-on-hover-background:#c4c4c4;--ck-color-button-on-active-background:#bababa;--ck-color-button-on-active-shadow:#a1a1a1;--ck-color-button-on-disabled-background:#dedede;--ck-color-button-action-background:var(--ck-color-base-action);--ck-color-button-action-hover-background:#579e3d;--ck-color-button-action-active-background:#53973b;--ck-color-button-action-active-shadow:#498433;--ck-color-button-action-disabled-background:#7ec365;--ck-color-button-action-text:var(--ck-color-base-background);--ck-color-button-save:#008a00;--ck-color-button-cancel:#db3700;--ck-color-switch-button-off-background:#b0b0b0;--ck-color-switch-button-off-hover-background:#a3a3a3;--ck-color-switch-button-on-background:var(--ck-color-button-action-background);--ck-color-switch-button-on-hover-background:#579e3d;--ck-color-switch-button-inner-background:var(--ck-color-base-background);--ck-color-switch-button-inner-shadow:rgba(0,0,0,0.1);--ck-color-dropdown-panel-background:var(--ck-color-base-background);--ck-color-dropdown-panel-border:var(--ck-color-base-border);--ck-color-input-background:var(--ck-color-base-background);--ck-color-input-border:#c7c7c7;--ck-color-input-error-border:var(--ck-color-base-error);--ck-color-input-text:var(--ck-color-base-text);--ck-color-input-disabled-background:#f2f2f2;--ck-color-input-disabled-border:#c7c7c7;--ck-color-input-disabled-text:#5c5c5c;--ck-color-list-background:var(--ck-color-base-background);--ck-color-list-button-hover-background:var(--ck-color-button-default-hover-background);--ck-color-list-button-on-background:var(--ck-color-base-active);--ck-color-list-button-on-background-focus:var(--ck-color-base-active-focus);--ck-color-list-button-on-text:var(--ck-color-base-background);--ck-color-panel-background:var(--ck-color-base-background);--ck-color-panel-border:var(--ck-color-base-border);--ck-color-toolbar-background:var(--ck-color-base-foreground);--ck-color-toolbar-border:var(--ck-color-base-border);--ck-color-tooltip-background:var(--ck-color-base-text);--ck-color-tooltip-text:var(--ck-color-base-background);--ck-color-engine-placeholder-text:#707070;--ck-color-upload-bar-background:#6cb5f9;--ck-color-link-default:#0000f0;--ck-color-link-selected-background:rgba(31,177,255,0.1);--ck-disabled-opacity:.5;--ck-focus-outer-shadow-geometry:0 0 0 3px;--ck-focus-outer-shadow:var(--ck-focus-outer-shadow-geometry) var(--ck-color-focus-outer-shadow);--ck-focus-disabled-outer-shadow:var(--ck-focus-outer-shadow-geometry) var(--ck-color-focus-disabled-shadow);--ck-focus-error-outer-shadow:var(--ck-focus-outer-shadow-geometry) var(--ck-color-focus-error-shadow);--ck-focus-ring:1px solid var(--ck-color-focus-border);--ck-font-size-base:13px;--ck-line-height-base:1.84615;--ck-font-face:Helvetica,Arial,Tahoma,Verdana,Sans-Serif;--ck-font-size-tiny:0.7em;--ck-font-size-small:0.75em;--ck-font-size-normal:1em;--ck-font-size-big:1.4em;--ck-font-size-large:1.8em;--ck-ui-component-min-height:2.3em}.ck.ck-reset,.ck.ck-reset_all,.ck.ck-reset_all *{margin:0;padding:0;border:0;background:transparent;text-decoration:none;vertical-align:middle;transition:none;word-wrap:break-word}.ck.ck-reset_all,.ck.ck-reset_all *{border-collapse:collapse;font:normal normal normal var(--ck-font-size-base)/var(--ck-line-height-base) var(--ck-font-face);color:var(--ck-color-text);text-align:left;white-space:nowrap;cursor:auto;float:none}.ck.ck-reset_all .ck-rtl *{text-align:right}.ck.ck-reset_all iframe{vertical-align:inherit}.ck.ck-reset_all textarea{white-space:pre-wrap}.ck.ck-reset_all input[type=password],.ck.ck-reset_all input[type=text],.ck.ck-reset_all textarea{cursor:text}.ck.ck-reset_all input[type=password][disabled],.ck.ck-reset_all input[type=text][disabled],.ck.ck-reset_all textarea[disabled]{cursor:default}.ck.ck-reset_all fieldset{padding:10px;border:2px groove #dfdee3}.ck.ck-reset_all button::-moz-focus-inner{padding:0;border:0}.ck[dir=rtl],.ck[dir=rtl] .ck{text-align:right}:root{--ck-border-radius:2px;--ck-inner-shadow:2px 2px 3px var(--ck-color-shadow-inner) inset;--ck-drop-shadow:0 1px 2px 1px var(--ck-color-shadow-drop);--ck-drop-shadow-active:0 3px 6px 1px var(--ck-color-shadow-drop-active);--ck-spacing-unit:0.6em;--ck-spacing-large:calc(var(--ck-spacing-unit)*1.5);--ck-spacing-standard:var(--ck-spacing-unit);--ck-spacing-medium:calc(var(--ck-spacing-unit)*0.8);--ck-spacing-small:calc(var(--ck-spacing-unit)*0.5);--ck-spacing-tiny:calc(var(--ck-spacing-unit)*0.3);--ck-spacing-extra-tiny:calc(var(--ck-spacing-unit)*0.16)}\"","module.exports = \".ck.ck-editor__editable_inline{height:inherit}.ck.ck-editor__editable:not(ck-editor__nested-editable) .ck-focused{border:none;box-shadow:none}:root{--ck-inner-shadow:none;--ck-drop-shadow:none;--ck-color-focus-border:none}\"","\"use strict\";\r\n\r\nvar isOldIE = function isOldIE() {\r\n  var memo;\r\n  return function memorize() {\r\n    if (typeof memo === 'undefined') {\r\n      // Test for IE <= 9 as proposed by Browserhacks\r\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\r\n      // Tests for existence of standard globals is to allow style-loader\r\n      // to operate correctly into non-standard environments\r\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\r\n      memo = Boolean(window && document && document.all && !window.atob);\r\n    }\r\n\r\n    return memo;\r\n  };\r\n}();\r\n\r\nvar getTarget = function getTarget() {\r\n  var memo = {};\r\n  return function memorize(target) {\r\n    if (typeof memo[target] === 'undefined') {\r\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\r\n\r\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\r\n        try {\r\n          // This will throw an exception if access to iframe is blocked\r\n          // due to cross-origin restrictions\r\n          styleTarget = styleTarget.contentDocument.head;\r\n        } catch (e) {\r\n          // istanbul ignore next\r\n          styleTarget = null;\r\n        }\r\n      }\r\n\r\n      memo[target] = styleTarget;\r\n    }\r\n\r\n    return memo[target];\r\n  };\r\n}();\r\n\r\nvar stylesInDom = [];\r\n\r\nfunction getIndexByIdentifier(identifier) {\r\n  var result = -1;\r\n\r\n  for (var i = 0; i < stylesInDom.length; i++) {\r\n    if (stylesInDom[i].identifier === identifier) {\r\n      result = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction modulesToDom(list, options) {\r\n  var idCountMap = {};\r\n  var identifiers = [];\r\n\r\n  for (var i = 0; i < list.length; i++) {\r\n    var item = list[i];\r\n    var id = options.base ? item[0] + options.base : item[0];\r\n    var count = idCountMap[id] || 0;\r\n    var identifier = \"\".concat(id, \" \").concat(count);\r\n    idCountMap[id] = count + 1;\r\n    var index = getIndexByIdentifier(identifier);\r\n    var obj = {\r\n      css: item[1],\r\n      media: item[2],\r\n      sourceMap: item[3]\r\n    };\r\n\r\n    if (index !== -1) {\r\n      stylesInDom[index].references++;\r\n      stylesInDom[index].updater(obj);\r\n    } else {\r\n      stylesInDom.push({\r\n        identifier: identifier,\r\n        updater: addStyle(obj, options),\r\n        references: 1\r\n      });\r\n    }\r\n\r\n    identifiers.push(identifier);\r\n  }\r\n\r\n  return identifiers;\r\n}\r\n\r\nfunction insertStyleElement(options) {\r\n  var style = document.createElement('style');\r\n  var attributes = options.attributes || {};\r\n\r\n  if (typeof attributes.nonce === 'undefined') {\r\n    var nonce = typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\r\n\r\n    if (nonce) {\r\n      attributes.nonce = nonce;\r\n    }\r\n  }\r\n\r\n  Object.keys(attributes).forEach(function (key) {\r\n    style.setAttribute(key, attributes[key]);\r\n  });\r\n\r\n  if (typeof options.insert === 'function') {\r\n    options.insert(style);\r\n  } else {\r\n    var target = getTarget(options.insert || 'head');\r\n\r\n    if (!target) {\r\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\r\n    }\r\n\r\n    target.appendChild(style);\r\n  }\r\n\r\n  return style;\r\n}\r\n\r\nfunction removeStyleElement(style) {\r\n  // istanbul ignore if\r\n  if (style.parentNode === null) {\r\n    return false;\r\n  }\r\n\r\n  style.parentNode.removeChild(style);\r\n}\r\n/* istanbul ignore next  */\r\n\r\n\r\nvar replaceText = function replaceText() {\r\n  var textStore = [];\r\n  return function replace(index, replacement) {\r\n    textStore[index] = replacement;\r\n    return textStore.filter(Boolean).join('\\n');\r\n  };\r\n}();\r\n\r\nfunction applyToSingletonTag(style, index, remove, obj) {\r\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\r\n\r\n  /* istanbul ignore if  */\r\n\r\n  if (style.styleSheet) {\r\n    style.styleSheet.cssText = replaceText(index, css);\r\n  } else {\r\n    var cssNode = document.createTextNode(css);\r\n    var childNodes = style.childNodes;\r\n\r\n    if (childNodes[index]) {\r\n      style.removeChild(childNodes[index]);\r\n    }\r\n\r\n    if (childNodes.length) {\r\n      style.insertBefore(cssNode, childNodes[index]);\r\n    } else {\r\n      style.appendChild(cssNode);\r\n    }\r\n  }\r\n}\r\n\r\nfunction applyToTag(style, options, obj) {\r\n  var css = obj.css;\r\n  var media = obj.media;\r\n  var sourceMap = obj.sourceMap;\r\n\r\n  if (media) {\r\n    style.setAttribute('media', media);\r\n  } else {\r\n    style.removeAttribute('media');\r\n  }\r\n\r\n  if (sourceMap && btoa) {\r\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\r\n  } // For old IE\r\n\r\n  /* istanbul ignore if  */\r\n\r\n\r\n  if (style.styleSheet) {\r\n    style.styleSheet.cssText = css;\r\n  } else {\r\n    while (style.firstChild) {\r\n      style.removeChild(style.firstChild);\r\n    }\r\n\r\n    style.appendChild(document.createTextNode(css));\r\n  }\r\n}\r\n\r\nvar singleton = null;\r\nvar singletonCounter = 0;\r\n\r\nfunction addStyle(obj, options) {\r\n  var style;\r\n  var update;\r\n  var remove;\r\n\r\n  if (options.singleton) {\r\n    var styleIndex = singletonCounter++;\r\n    style = singleton || (singleton = insertStyleElement(options));\r\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\r\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\r\n  } else {\r\n    style = insertStyleElement(options);\r\n    update = applyToTag.bind(null, style, options);\r\n\r\n    remove = function remove() {\r\n      removeStyleElement(style);\r\n    };\r\n  }\r\n\r\n  update(obj);\r\n  return function updateStyle(newObj) {\r\n    if (newObj) {\r\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\r\n        return;\r\n      }\r\n\r\n      update(obj = newObj);\r\n    } else {\r\n      remove();\r\n    }\r\n  };\r\n}\r\n\r\nmodule.exports = function (list, options) {\r\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n  // tags it will allow on a page\r\n\r\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\r\n    options.singleton = isOldIE();\r\n  }\r\n\r\n  list = list || [];\r\n  var lastIdentifiers = modulesToDom(list, options);\r\n  return function update(newList) {\r\n    newList = newList || [];\r\n\r\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\r\n      return;\r\n    }\r\n\r\n    for (var i = 0; i < lastIdentifiers.length; i++) {\r\n      var identifier = lastIdentifiers[i];\r\n      var index = getIndexByIdentifier(identifier);\r\n      stylesInDom[index].references--;\r\n    }\r\n\r\n    var newLastIdentifiers = modulesToDom(newList, options);\r\n\r\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\r\n      var _identifier = lastIdentifiers[_i];\r\n\r\n      var _index = getIndexByIdentifier(_identifier);\r\n\r\n      if (stylesInDom[_index].references === 0) {\r\n        stylesInDom[_index].updater();\r\n\r\n        stylesInDom.splice(_index, 1);\r\n      }\r\n    }\r\n\r\n    lastIdentifiers = newLastIdentifiers;\r\n  };\r\n};","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || new Function(\"return this\")();\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","module.exports = function(originalModule) {\r\n\tif (!originalModule.webpackPolyfill) {\r\n\t\tvar module = Object.create(originalModule);\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"exports\", {\r\n\t\t\tenumerable: true\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n","var api = require(\"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../node_modules/postcss-loader/src/index.js??ref--5-1!./ck-styles.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","/**\r\n * @license Copyright (c) 2014-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\nimport BalloonEditor from '@ckeditor/ckeditor5-editor-balloon/src/ballooneditor.js';\r\nimport Bold from '@ckeditor/ckeditor5-basic-styles/src/bold.js';\r\nimport Italic from '@ckeditor/ckeditor5-basic-styles/src/italic.js';\r\nimport Link from '@ckeditor/ckeditor5-link/src/link.js';\r\nimport PasteFromOffice from '@ckeditor/ckeditor5-paste-from-office/src/pastefromoffice';\r\nimport FontBackgroundColor from '@ckeditor/ckeditor5-font/src/fontbackgroundcolor.js';\r\nimport FontColor from '@ckeditor/ckeditor5-font/src/fontcolor.js';\r\nimport Essentials from '@ckeditor/ckeditor5-essentials/src/essentials.js';\r\nimport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph.js';\r\nimport Autosave from '@ckeditor/ckeditor5-autosave/src/autosave.js';\r\n//import GFMDataProcessor from '@ckeditor/ckeditor5-markdown-gfm/src/gfmdataprocessor';\r\nimport '../../styles/ck-styles.css';\r\n\r\n// Simple plugin which loads the data processor.\r\nfunction Markdown( editor ) {\r\n    editor.data.processor = new GFMDataProcessor( editor.editing.view.document );\r\n}\r\n\r\nexport default class Editor extends BalloonEditor {}\r\n\r\n// Plugins to include in the build.\r\nEditor.builtinPlugins = [\r\n\tBold,\r\n\tItalic,\r\n\tLink,\r\n\tPasteFromOffice,\r\n\tFontBackgroundColor,\r\n\tFontColor,\r\n\tEssentials,\r\n\tParagraph,\r\n\tAutosave,\r\n];\r\n\r\nBalloonEditor.defaultConfig = {\r\n\ttoolbar: {\r\n\t  items: [\r\n\t\t'bold',\r\n\t\t'italic',\r\n\t\t'link',\r\n\t\t'|',\r\n\t\t'fontBackgroundColor',\r\n\t\t'fontColor',\r\n\t\t'|',\r\n\t\t'undo',\r\n\t\t'redo'\r\n\t  ]\r\n\t},\r\n\tlanguage: 'en',\r\n\tlicenseKey: '',\r\n  };\r\n"],"sourceRoot":""}